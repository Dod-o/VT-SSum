{
    "id": "4ljy3h7jx4of3uz2o6xrovfjhnpnhdbg",
    "title": "Dynamical Logic",
    "info": {
        "author": [
            "Peter H. Schmitt, University of Karlsruhe"
        ],
        "published": "April 16, 2009",
        "recorded": "February 2009",
        "category": [
            "Top->Computer Science->Logic"
        ]
    },
    "url": "http://videolectures.net/ssll09_schmitt_dlog/",
    "segmentation": [
        [
            "First of all, where you come from?",
            "So what is your current residence?",
            "So who comes from Canberra?",
            "Or Canberra.",
            "And who from?",
            "ACTU South Wales or Vic?",
            "Haha, that's who comes from Australia.",
            "Rest of Australia.",
            "And last.",
            "Location who is from who lives now outside Australia.",
            "Oh, where do you come from?",
            "OK, yes and there were three more heads up from outside Australia.",
            "Where do you?",
            "Where do you live now?",
            "I guess it was yesterday.",
            "You see lando?",
            "That's also close by, and you also New Zealand.",
            "Oh wonderful, yeah.",
            "And another dimension.",
            "What is your background?",
            "So who is a computer scientist?",
            "Who is a mathematician?",
            "Who is a philosopher?",
            "Yeah.",
            "And I've covered it.",
            "I've covered everything.",
            "Somebody belonging to a category that I've not mentioned for you.",
            "OK, so it's more electrical engineering, right?",
            "My younger daughter did this.",
            "OK, so let's start time.",
            "I must apologize.",
            "I somehow did not get this thing really working."
        ],
        [
            "It shows the slide, but it does funny flipping back and forth.",
            "Here is an outline outline of the course.",
            "Will start today with lecture one on regular programs.",
            "Now you see what this one is enough.",
            "And we go on.",
            "Till Wednesday now Wednesday you will see we will have three lectures.",
            "The first 2 lecture, three and four are in fact half hour lectures smaller than the other one.",
            "I've only grouped them by topic.",
            "And that has been rearrangement of the schedule.",
            "Though this is the talk that was usually scheduled for Thursday.",
            "It's now put on Wednesday from 11:15 I guess.",
            "And then we'll have one more lecture on Thursday and free on Friday.",
            "I mean it.",
            "Morris will then be hopefully there.",
            "This material is very dense.",
            "What I decided is.",
            "Rather, to concentrate on a small fraction of the topic, I'd rather try to cover everything.",
            "And the consequences that sometimes I have to skip slides.",
            "But I hope you will never lose.",
            "Focus on what is happening, what I wanted to do is to cover the whole range from the theoretical beginnings of dynamic logic to its application in program verification, and I'll in fact show you a demo of our system that verifies Chavakkad programs and is based on dynamic logic, so that covers lecture 12, lecture 6, and all that's needed along this way.",
            "This is the reason why there is so so a lot of material I could have given 6 lectures a course only on the 1st two topics.",
            "So bear with me and we try to make it happen.",
            "It is on the slides you the material or might not go into details, and I've also given references where you can read things.",
            "I usually use a pic monitor.",
            "So."
        ],
        [
            "So here we go.",
            "I will."
        ],
        [
            "Start.",
            "This course by giving a motivating example that should give you a feeling what dynamic logic is, what it can be used for, where it fits in all this.",
            "But collection of possible logics you have already seen a couple of logics last week and the exam."
        ],
        [
            "Well, I I chose is this tower of Hanoi game.",
            "I hope most of you have seen it.",
            "Who doesn't know this tower final game.",
            "OK, the objective is you have a couple of disks.",
            "In this example there are four disks on sitting on one pile and you try to move them on the third pile over here and you have an auxiliary pile in the middle and the rule is you never put larger disk on top of a smaller one and you can do this by.",
            "Something like this?",
            "That's really annoying, but I don't know how to change that.",
            "Whoops here we go."
        ],
        [
            "And usually this is given as an example of recursive programming.",
            "Is this example you run across in your programming courses and they use it as an example for recursive programming, but it's not necessarily to do this solution recursively.",
            "There's also a nice iterative solution, and here are the instructions how you do it.",
            "You alternatingly move the smaller States and not so small as disk.",
            "No one instruction, and if you move the smallest disk then you move it to the pile where we had where it has not come from.",
            "Also simple.",
            "And if you move not the smallest disk, then there's only one possible move.",
            "I mean, there is the one disk you should not move.",
            "You have two piles, and you can only move the smaller on the bigger one.",
            "So only only one legal move an they started.",
            "And if you want to describe more formally this instructions how to solve this problem, we could do it like this.",
            "Invent names for moves the smallest, move the other, and then you will see sequential operator.",
            "That's what you what.",
            "You would be the instructions, but it's not satisfactory.",
            "You have these dots there which are not precise, so we could be a little bit more precise.",
            "Use a little bit more mathematical notation and use the star operator.",
            "That we know from regular language theory which says report repeat this.",
            "Actions in here an arbitrary finite number of times.",
            "Well, this theory is not good enough cause when do we stop?",
            "So we need a test for stopping.",
            "So let's invent and you actually give it the name test for stop.",
            "And we think about the band we stopped.",
            "We stop after a move of the smallest disk that will be the end.",
            "If you have moved all disks to the right pile, the last thing we do, put the smallest disk on top of it, so we test only for stopping after we moved the smallest one need not check in other cases.",
            "That's why this course of actions that solve Tower of Hanoi problem Now looks like this moves more.",
            "This one test for stop, and if there's only one disk then we would stop here.",
            "Otherwise repeat to find that number of times this.",
            "It's no guarantee so far that it works.",
            "I've only shown that is what you should do.",
            "We have no proof.",
            "You can try it, but we have no proof that it really works.",
            "And.",
            "So far we have to only try to formalize what we should do.",
            "So if we are really standing in front of the."
        ],
        [
            "Little game and we read this list of instructions.",
            "We can follow them, but if you want to reason about the situation, we also need a formalization of the setup itself, and that's what's happening here.",
            "We need some ways to describe the environment, the situation of the game, and this is how we could do it.",
            "We have a two place function that we call stack and it gives the disk that is situated on stack number N. 123 there are only three 6 on position from the.",
            "Floor level ground level up to higher positions on the stack and we write 0 if there is no no disk and we give the number of the disk that should be.",
            "This gives the size of the disk otherwise.",
            "So for example this situation we would described by the function stack that I give here in a tabular description.",
            "So this would be on the.",
            "Something strange.",
            "Something is strange here.",
            "OK, I was puzzled.",
            "Yes, position one.",
            "That's the table, so to speak.",
            "So we have a disk of size 432 and here we have one on the 2nd."
        ],
        [
            "Position 2.",
            "Now we want to describe.",
            "This.",
            "Who?",
            "Game this puzzle.",
            "And one thing that we would be interesting in to describe the situation that we should end in.",
            "So for example, you could use a formula like this.",
            "That describes the situation that is the final position we trust says that all discounts tax free.",
            "That's free here.",
            "Or a what we want to say that you want to formulate an invariant.",
            "Always throughout the game.",
            "The stack should be ordered, never you have a larger disk on top of a smaller one.",
            "And we could write it like this.",
            "It's just the 1st order formula so far seen nothing special to dynamic logic so far.",
            "And instead of quantifying over stacks of used to conjunction, there only three of them and never will be more.",
            "So we can use the conjunction.",
            "It's different of course for the stack size we can play this game with any number of disks so that we should have a quantifiable this.",
            "So.",
            "Am I too fast?",
            "I might be slow.",
            "I will slow up anyhow, this is inevitable.",
            "So I also already used the word invariant, but so far it was just a formula.",
            "What we really mean by an invariant is."
        ],
        [
            "A formula that invariant based respect to 1 action or invariant with respect to all actions.",
            "So here we want, for example, the ordered stack property should be invariant to whatever we do.",
            "And that we formulate in natural language, whenever a formula, Phi that's supposed to be our invariant is true before we start.",
            "Actually then it would be true after Action 8 and we could write this by inventing terminology for talking about before and after States and write it like this if we are in a state where the steps are ordered.",
            "If we perform the move, South moves to simple move to smaller.",
            "Disk asked action, then after this action, stacks will be ordered again and we use this pointed packets to describe that we do an action and often action.",
            "Sometimes something is true.",
            "And this is your first dynamic logic formula that you see and discribing.",
            "For example, invariant properties of action describing what holds true after an action.",
            "That is what?"
        ],
        [
            "Dynamic logic does for you."
        ],
        [
            "Dynamic dynamic logic justice to summarize.",
            "Allows to reason about about properties of actions, not only simple actions.",
            "We already had composite actions, arbitrary iterations of pairs of actions.",
            "And the actions themselves are explicitly part of the language within this pointed practice.",
            "We had his name of move smaller, but inside there could also be more complicated actions.",
            "It is an extension of 1st Order Logic.",
            "The first formulas I showed you with just first order logic and it's also an extension of modal logic.",
            "Now who of you attended the lectures on 1st order and modal logic last week?",
            "Oh, that's very good because it really helps to understand what's going on here.",
            "It's a little bit more than you have seen.",
            "Seen before.",
            "It's not a model, not only a more logic, it's a multi modal logic with infinitely many modalities.",
            "Anne."
        ],
        [
            "That's enough for introduction.",
            "Now let's get to the formalities of it.",
            "How we introduce logic.",
            "You have seen this before.",
            "I have to talk about.",
            "The syntax of the logic.",
            "I have to tell you not only informally, but really give you the meaning of the syntax.",
            "The semantics of the logic, and then we talk about.",
            "Don't order cheese or.",
            "Logical.",
            "Inference, I mean, this really is what we want to talk about later, and we want to build programs that do the logical inference for us.",
            "But we go through the list of.",
            "Information I need to supply to define the logic.",
            "Syntax is always been firstly to fix the vocabulary that called Sigma here.",
            "And once this is fixed I will define the functional terms.",
            "That belong to this vocabulary.",
            "I will define the formulas and here of course we have something new that we did not have in first order logic that we did not have in modal logic.",
            "We have programs.",
            "They aren't described by.",
            "Syntactic entities of our logic.",
            "I do not.",
            "Need to read this."
        ],
        [
            "Oh here sandbox of terms, nothing new.",
            "It's just the same thing is in first order.",
            "Logic variables are terms.",
            "And if we have already.",
            "Turn.",
            "FT12TNT12 PM and have a function symbol of the correct parity.",
            "Then we just apply F with this end table of terms."
        ],
        [
            "And get in neutral.",
            "Formulas.",
            "Atomic formula, same thing as in predicate logic.",
            "We start with a simple for a predicate name for predicate.",
            "Here are and.",
            "If it's an NPL predicate, follow end terms and we have a regular atomic formulas.",
            "We use equations here, so it's logic with equality can write equations and we have the closure on the usual operators.",
            "Propositional operators and quantification.",
            "Now the new thing is now the modal operators.",
            "For any program point we haven't seen anyone in this definition, but.",
            "Soon we'll see what they are for any pie.",
            "That's a program, and any formula F we can build a new formula by using modalities.",
            "This box F and diamond F, but differences to model logic.",
            "This modal operator does have an argument.",
            "Box of Pi of F. Diamond of Pi of F. These are new for."
        ],
        [
            "And now.",
            "We continue part.",
            "What are the programs?",
            "Simple thing in programs are assignments.",
            "We have a variable assigning the value that the program is written like this and I use this: equality sign to distinguish assignment from equality.",
            "These are the symbols programs.",
            "And once we have programs, we can build more complicated prompt programs from given one simple thing is to 1st execute by one, then execute by two.",
            "Sequential composition, or this logic is also general enough to treat non deterministic programs.",
            "This is.",
            "Denoted by this set theoretical union symbol Pi 1 reply to.",
            "And we have already seen in the example the Kleene star iterations involved.",
            "We have a program P iterated in arbitrary finite number of times.",
            "And there is something special already occurred in the target of final example.",
            "We have the test.",
            "So for any.",
            "Formula.",
            "If we write formula?",
            "That's a program.",
            "I receive this completes the definition.",
            "You may have noticed that this is mutually recursive.",
            "It's possible to go from pro.",
            "It happens that programs are used to build formulas with the modal operators, but it also goes the other way round.",
            "We have a formula and we built a program this test program.",
            "So this definition you cannot split in two definitions of 1 definition for the programs.",
            "One definition for the formulas.",
            "It's mutually recursive definition.",
            "What is really means?",
            "What is the action of this program?",
            "You have some feeling now, but the semantics should give precise definition.",
            "Dynamic logic comes in many varieties.",
            "One way you can distinguish one dynamic logic from another dynamic logic is what programs you allow.",
            "For example, we could have decided that we do not want to have nondeterministic programs.",
            "All our programs should be deterministic, so we would have dropped this nondeterministic choice operator.",
            "I'll be, I've put it in what you could have more operations like this.",
            "To build.",
            "You could have recursive operators that allow you to build recursive programs.",
            "And there's a whole whole list that you find in the literature.",
            "We can concentrate here exclusively on this selection of programs for our dynamic logic and this set of programs are called regular programs.",
            "That's because of their similarity to regular expressions."
        ],
        [
            "I used to take notes and.",
            "OK. Good.",
            "I go on till.",
            "11:15 so we are doing well this time so far.",
            "For semantics, views crypto structures, now I'm fortunate fortunate that you already know what XM structures are, so I only have to tell you that variation from normal crypto structures for modal logic to preapre structures for dynamic logic.",
            "Chris structures here.",
            "We built by first giving a first order model of our Vocabulary Sigma.",
            "That's a start.",
            "And.",
            "Once this we call the domain of computation.",
            "That's what the data the programs might make use of.",
            "This is a start for building equipped with structure and we indicate where the domain of computation that belongs to a crypted structure by adding it here as a subscript.",
            "Then we need to give the set of states.",
            "We need to say.",
            "What is the Accessibility relations that's important for the model operators and we need to give the Accessibility relation for every program?",
            "And we need to say when a formula is true in the state.",
            "And this definitions now will follow and you will notice that there is no.",
            "Choice anymore once we have fixed the domain of computation, the crypto structure K for M is.",
            "So uniquely determined.",
            "That's not true for all variations of dynamic logic an it's not true for all the dynamic logics.",
            "We will talk about in this course, but it's true for the moment.",
            "So let's go on."
        ],
        [
            "The set of states.",
            "Now think of what is happening here.",
            "We have programs.",
            "I don't.",
            "The only thing we really can do is assignment we can assign.",
            "Value to variable.",
            "All other clauses in the definition.",
            "There composition operators.",
            "You have programs and you build bigger ones, but the only thing that really changes the state assignments and that's the reason why the state is described once we know the value of our variables.",
            "So the set of state.",
            "State is the set of all functions from the variables to the values and the values are elements of our domain of computation of EM.",
            "Anne.",
            "Next I should give the.",
            "The truth definition.",
            "When is the formula true in the state?",
            "But before I can do that, I should give you the evaluation of terms.",
            "What is the?",
            "Value.",
            "In our given.",
            "Domain of computation.",
            "In a given state you are use you to denoted state.",
            "And what the value assigned to a term T?",
            "That's as usual not.",
            "I will not give the definition that the 1st order definition and it it may be the value may be different in different states.",
            "Becaused the.",
            "Variables that appear in T get different values in different states.",
            "And I guess you have seen some way of notation for this.",
            "If I have a status, I sometimes want to modify it a little bit.",
            "Let's say give X value a an leave the rest unchanged.",
            "That's the piece of notation that's used."
        ],
        [
            "Frequently.",
            "And now we come to the definition of the truth definition.",
            "Then it's a formula.",
            "True in this state's rights like this, I forget to mention the group construction most of the time because there's only one group structure around.",
            "So if you see S here, it's implicitly understood there is a critical structure is belongs to.",
            "Well, there is nothing particular about this.",
            "It's the usual definition.",
            "Also, here it's the usual definition that you have seen in.",
            "Modal logic.",
            "Formula of the type box pie.",
            "Of F box P of F is true instead S if for Allstate S prime that are accessible from S. With the program pie.",
            "In S prime, if it's true.",
            "In modal logic, you would trust that the Exibility Accessibility relation draw without any argument.",
            "But here we need an Accessibility relation row for every program \u03c0, and the same thing for the diamond operator exists the state.",
            "And the important partner is of course.",
            "What is this role?",
            "Might it appeared here?",
            "In more logic, it was just given you.",
            "It was a piece that determined your grip construction and you could have the same set of States and different Accessibility relations.",
            "That's different here because Accessibility is given by programs, it's fixed.",
            "Once we have decided what our programs are.",
            "So now he."
        ],
        [
            "Comes the definition of art.",
            "This Accessibility relations are for any program.",
            "So when I write this insist, we say a pair is included in this Accessibility set.",
            "If and only if, that's the way I phrased the definition here, it's clear if we go from you to you prime by.",
            "Executing the assignment.",
            "That is, X prime is the same issue only at the value of X.",
            "You now have a new value that that you obtain by a value item T. In the domain of computation using, of course the old.",
            "State.",
            "So we could have something like.",
            "X + 1 and if you.",
            "Look at this definition.",
            "That makes perfect sense in this situation when the value of X would be replaced by this one.",
            "And here you use the old.",
            "The old value of X.",
            "These access this has been some.",
            "Some people say this is a strange logic and it uses the same variables for quantifying on the on the logic part and the program variables are the same, made no difference here.",
            "And here you have to distinguish this is a different thing than this.",
            "Well, the definition covers this no problem.",
            "And sequential composition when is a pair of.",
            "Start and stop state before and after state when is a pair like this, you and you prime in the Accessibility relation that belongs to the sequential composition of Pi one and \u03c0 two.",
            "And of course you first take a step using Pi one.",
            "So you say there is a state.",
            "So we get from you to W by program PY one, and then it's possible to go from this intermediate state W2 U prime by using high too.",
            "I saw my apps feeding on too slow.",
            "Is that you also think or?",
            "Could I go faster or?",
            "Or not.",
            "Who thinks I should go faster?",
            "Only one OK. Who?",
            "Not deterministic choice, that's easy.",
            "Pre state posted pair is in the nondeterministic choices in one or the other.",
            "And for the iteration that needs a lot of words, but that's what we would expect.",
            "So let me just read it once it will occur more frequently later, and then I will be faster.",
            "Pair start with you and with you prime belongs to the Accessibility relations of \u03c0 star if and only if there is an N and there are intermediate states such as the first intermediate state is the state we start with the last intermediate state is the state we want to end with U prime and for all intermediate states we have.",
            "From UI to UI plus one, this pair is in the Accessibility relation of the program plan.",
            "Now interesting part is now what do we do with this test operator?",
            "Now the only the only pairs that can be in the Accessibility relation of the test are identical pairs.",
            "If the.",
            "Program that tests doesn't switch to a new state.",
            "It only says property is true or it's not true, and if it's true, we have the pair Hue and Hue.",
            "In the Accessibility relation, otherwise there is no pair."
        ],
        [
            "Here are some examples.",
            "Just to piece the definitions, we have just seen together.",
            "When would appear begins, they do and they do prime be in the Accessibility relation of this construct.",
            "Only trust fitting the definition if if and only the exist W. This comes from the sequential composition definition, so that's that.",
            "UW is in the Accessibility relation of the first part and this one from W2 U prime.",
            "We get by the 2nd program part.",
            "Now we know we can look at this and fill in the definition.",
            "And it says we we have this pair in the Accessibility relation of this program if and only if there exists intermediate state that this this happens.",
            "This can only happen if UMW equal and if the test condition is really true.",
            "And that's all we can do at the moment.",
            "So this is the exists quantifier now that we know has to be the same as you, they can forget the quantifier interest stated like this.",
            "Please post."
        ],
        [
            "Is the first step of the second example.",
            "I wanted to show you now let's be more ambitious and look at a more complicated program.",
            "The I concentrate on this example.",
            "Of course that's new in dynamic logic.",
            "Describe description of programs.",
            "Or actions in general are part of the language that's new.",
            "A nuff.",
            "In the motivating example I was talking about actions that you do to perform this game of the towers of Hanoi.",
            "You may have noticed that from then on I've only talked about programs.",
            "Of course, programs are also particularly kind of actions, and that is what I will focus on in this course.",
            "You could have a more general theory people do.",
            "It has been done.",
            "Will you describe actions in general that need not be given by programs?",
            "This is a little bit more complicated because in general is not so clear what actions really do this program, so we have a very clear idea what actions performed by a machine that executed program really do, so it is very precise situation, and that's the situation I will concentrate on.",
            "This is just a remark to give you an idea that dynamic logic could be applied.",
            "More generally.",
            "We concentrate here on actions that are.",
            "Really, programs so.",
            "We have a program like this, but does it mean not us?",
            "How do we get from beginning state you to state you prime?",
            "Can anybody see it?",
            "Of this part, I mean this part.",
            "We have already examined.",
            "OK, let's let's go through.",
            "That's the definition of nondeterministic choice.",
            "No, nothing happened so far.",
            "This is, but replacing this Accessibility relation by what I've shown you on the on the previous slide.",
            "Now that would maybe ring a Bell.",
            "It's anything else.",
            "And.",
            "So this complicated program is a way that we can describe if."
        ],
        [
            "Mail what is this?",
            "You look at it differently.",
            "Yes and yes yes.",
            "That's why.",
            "Yes, OK so.",
            "You might have thought that simple while programs as a theoretical tool of most basic version, you can.",
            "Who?",
            "The most basic version of studying programming languages.",
            "Now you've seen you can get even more basic if then else.",
            "And while operations are not most atomic operations, you can have arbitrary iterations, is cleanly iteration and test and nondeterministic choice, and you can combine them together and you."
        ],
        [
            "Get if then else while and also.",
            "This one repeat until you might want to try this for yourself."
        ],
        [
            "So far.",
            "I've only given examples of programs.",
            "Now let's look at formulas.",
            "Who is familiar with the whole calculus?",
            "Yes, that's something interesting in computer in in theoretical computer science basic, one of the basic.",
            "Theories of program verification.",
            "And in a.",
            "In a whole logic, you have what's called a triple.",
            "In whole logic, people write it like this, but we prefer to write it as a dynamic logic formula.",
            "If the precondition is true, then.",
            "After any.",
            "Then sending any state that's reachable by program.",
            "PY Post condition is true.",
            "This is partial correctness, because this model operator box operator doesn't say there exists a terminal is terminating state.",
            "It only says for all.",
            "Terminating states something should be true.",
            "And if we want to have total correctness, we use the diamond operator, because this operator says there is.",
            "Terminating state.",
            "So in a sense, dynamic logic is an extension of Hoare Logic and it is extension if you look at the whole logic triple and you built the closure under all logical operations build conjunctions.",
            "Now that you can do with your logic, you can look at two triples.",
            "That's a conjunction disjunction.",
            "You cannot have the disjunction in involved in whole logic, it's just not possible and also not super position.",
            "We could have this formula itself could be dynamic logic formula.",
            "It could have modal operators more than one.",
            "You could not have this in or triples and also there is no quantification in Holder, but we can have quantifier.",
            "Interesting formula is this one.",
            "Diamond P and then just the constant rule.",
            "What does it say?",
            "It's true in the state, as if there exists a terminating state which satisfies the constant rule.",
            "So it just says the program terminates.",
            "There is a terminating state.",
            "What you can also express in dynamic logic.",
            "Still I'm contrasting it to to her logic.",
            "You can talk about properties of transformations, think you have a transformation from program PI12 Pi 2 here, and we want to say that this transformation preserves the property F. And you can write it like this.",
            "And.",
            "Let's look at this formula.",
            "It's a box formula.",
            "And we have a while loop in here which obviously does not terminate.",
            "Termination condition is true, will never get false.",
            "The loop does not terminate and then we even have.",
            "The claim that after terminations are constant false should be true.",
            "Nevertheless, that's a tricky point.",
            "This formula is always true.",
            "It's requirement is for all terminating states, the formula that follows the operator should be true.",
            "There are no terminating states, so.",
            "The statement for all terminating states is true vacuously, and the formula is true in any state.",
            "That's something to be there to keep in mind.",
            "Here is some more.",
            "Evolved example.",
            "Starting state as we have for two place relation symbol are in our vocabulary and we look at this formula.",
            "It's it's a. Diamond formula and we have this iteration of this test test if X and set of are is true and then if that is the case.",
            "Let X be assigned the value of set.",
            "And you claim, and the claim is that after after this execution of this program, X should be equal to Y.",
            "Now I meant to run through this and actually show that it is a transitive closure, but I'll skip that part.",
            "And.",
            "So.",
            "Maybe you want to try it out for yourself and ask me tomorrow and I can give you the.",
            "Solution it's it's not complicated, it's just working out the definitions you have seen so far."
        ],
        [
            "So that's all I wanted to cover on semantics.",
            "And we have still 15 minutes to talk about logical consequence and tautology.",
            "And this is a little bit more involved as you may have already heard, in modal logic there is more than one notion of logical consequence, and it's still a little bit more involved here because we have this domain of computation M. To think about.",
            "And I will not go into all ramifications, but only show you 2 main strengths, the uninterpreted case, and then the interpreted case, the uninterpreted case.",
            "Of course, like this, this is all the pieces of information that we have.",
            "And the.",
            "Notation.",
            "1st, that's what you have already seen.",
            "Instead, as formula F is true and that was a shorthand for.",
            "In the crypto structure, KM.",
            "In state, as the formula F is true.",
            "We have never needed to be that precise.",
            "Next definition is we say formula F is true in the crypto structure.",
            "That means obviously it's true in all its states.",
            "And.",
            "Now we come to do a different level of notation.",
            "F is valid.",
            "And I use a different sign here.",
            "That is to say, F is true in all crypto structures for all.",
            "Models M offer our signature Sigma.",
            "That's more like we what we, what we think validity should mean.",
            "It should be true in all models, and here it's true in all crypto structures for all computations domains.",
            "Of course this all computation domains is restricted for the moment by the signature.",
            "And.",
            "F is a logical consequence of of T. That's our official notion, so usually don't say locally if I talk about logical consequence, that's what I'm referring to, and it says for all domains of computation and Allstate South in the cream Kripke structure that goes with it.",
            "If F satisfies T. Then it also satisfies that.",
            "And here is the corresponding global definition.",
            "The same thing for all computation domains, but now we say if.",
            "The premise is our assumption.",
            "She is true for all S, then F is true for all S. Which one is stronger?",
            "Local or global?",
            "If F is a local consequential T, is it also a global consequence?",
            "Obviously this is by.",
            "If that is true.",
            "And we have this premise.",
            "For less than local entailment tells us if she is true in status, then F has also to be true, and if that was true for all States and this is also true for all states.",
            "But the other way around, it doesn't work.",
            "So this is a strictly stronger notion, and that's the one we will stick to."
        ],
        [
            "Here are some.",
            "Technologies.",
            "Let me just unravel all technologies.",
            "Yeah.",
            "You might want to try your hand improving that these are technologies that's nothing complicated.",
            "Just look at the definitions I've given before.",
            "And no trick involved whatsoever.",
            "So this says, for example.",
            "So that you can permute next essential quantifier with the diamond operator under the provision given given here.",
            "Of course, if the variable X occurs in the program, then there's no no way to do anything.",
            "This program could do anything to the value of X, and there could be no connection between the two formulas, but if that is true, then we can compute the existential quantifier and the diamond operator and the same thing is true for the universal quantifier in the box operator.",
            "In other cases, like computing the existential quantifier with the box operator.",
            "One reason is obvious One Direction.",
            "One implication is obvious.",
            "And if you think of it, the pattern behind this you have there exists.",
            "For all I mean this for all successive states, so it's a pattern.",
            "Exists for all.",
            "That implies for all exists.",
            "But the reverse implication that would be down here for all exists pattern implies exist for all parents, usually not true.",
            "But it is true if we know that program Pi is deterministic.",
            "And I haven't defined what deterministic is, but that's what you think.",
            "What program and the program should be called at him?"
        ],
        [
            "Here we have another valid formula that.",
            "Who shows a little bit more of the complexity of dynamic logic formulas?",
            "This is the first formula we see that has more than one model operator.",
            "It starts with the box operator and then we have the diamond operator and again through this.",
            "Formula says something if this.",
            "Assumptions are true then.",
            "Is this program terminates?",
            "Let's go."
        ],
        [
            "Come to the interpreted case.",
            "What does it mean?",
            "We have a domain of communication and we don't change it.",
            "So validity now gets very simple concept, we say.",
            "Formula F is invalid, M is now fixed domain of computation if and only if it's true and in the correct structure that that goes with it.",
            "There is no notion of.",
            "The formula is true in all structures.",
            "It's true trusting in one structure.",
            "And then we have the same.",
            "Division into local implication and global implication.",
            "Let me just repeat this."
        ],
        [
            "On the slide.",
            "But why but why would you want to do this?",
            "I mean, why would you want to consider the interpreted case?",
            "For in program verification, that's.",
            "Natural.",
            "Program that manipulates some parts, like computing the salary of people and hiring entry.",
            "Enter people in the list of employees and things like that.",
            "But all the all the time you use, let's say the natural numbers.",
            "And these don't change.",
            "In programming languages, you don't have a way to change addition, you just use.",
            "Addition cannot be changed, so in a strong sense this is the domain of computation and that's why you want to have something like a fixed interpretation.",
            "Don't don't change it.",
            "And in the fixed interpretation, and I have chosen here the favorite example of the domain of complete computation, the natural numbers.",
            "With the usual operations and relations.",
            "And then a few coffee.",
            "Of course, you can write down a formula like this an it's a total T in the interpreted case.",
            "Or you can say something like this.",
            "There is no number between zero and one.",
            "Or we have already seen that we can express the notion of a transitive closure using programs using a dynamic logic.",
            "Have a clever design program that.",
            "Describes for us transitive closure.",
            "You can do the same thing if you have a fixed interpretation.",
            "If you have some natural numbers and they don't change, then we can also define what is the transitive closure of the relation R and the way you do it.",
            "You first describe three place relation.",
            "This is to be read.",
            "Her.",
            "You can get from X to Y by set applications.",
            "Set steps while the relation R. So if that is set is zero, there is no step, so X has to be why an in the other case?",
            "If it said is greater than zero, then you get from X to Y first by.",
            "There is an intermediate element.",
            "That you get from X to the intermediate element in set minus one steps, and then you do one more step from this intermediate.",
            "Element with U along so relationality.",
            "And once you have this, you can write the transitive closure like this.",
            "The pair XY isn't the transitive closure of the relation R if and only if there is a number that you can reach Y from set in.",
            "By from X in set number of steps along the relation art.",
            "What you see here I've given you the two cases, uninterpreted case, as the interpreted case.",
            "What happens in reality, it's mixed.",
            "So here we have, as I said, the fixed domain of computation.",
            "What this relation are does not belong to the fixed domain of computation.",
            "That could be any binary relation.",
            "So already in system simple example we have a mixture of uninterpreted case.",
            "This relation are could be any binary relation and only the rest is fixed.",
            "So if I say.",
            "In any structure, this formula defines the transitive closure that that is already more general statement.",
            "For any situation, for any interpretation of the relation R, this formula will give you the transitive closure.",
            "OK, I guess that's that was it.",
            "For today.",
            "We have 5 minutes for questions.",
            "I could go back and we could have a look."
        ],
        [
            "Add this why this is tautology?",
            "Should we do it?",
            "So we are back in the non interpreted case and what we have to do we look at.",
            "Equip restructure Anna State S. And we have to show.",
            "That's a formula.",
            "It's written up here is true in US.",
            "So what we do we first?",
            "I'm not so used to.",
            "Writing on a whiteboard.",
            "So.",
            "We assume we start in a state where X is equal to Y and we have this Community commutativity relation.",
            "That if you first apply function T and then the function F, you get back to X.",
            "Let me trust right here.",
            "When formula X = y is true, instead F that means as its self is a function, so it has a value for X.",
            "And it has a value for Y, so that is a consequence of this.",
            "And what we want to show is.",
            "Read this.",
            "Formula is true.",
            "This amounts to showing.",
            "For all as one.",
            "Such that the pair S and S1 is in the program in the box.",
            "Come on.",
            "So this is the.",
            "While P is true of why?",
            "Do.",
            "Set why is the value of T of 1?",
            "So for all S1 that are in the Accessibility relation of this first program.",
            "Series and S2.",
            "Such that we can get from S1 to S2 by the Accessibility relation of the program that's in the.",
            "And the diamond operator.",
            "While why is different from X to sign after the divisor value of F1?",
            "You need not say there is something some formula true incy state as to of course the only half the logical constant.",
            "So it says for every.",
            "For any state S one that we can get to from S by this wild program.",
            "There is another state as to where this program terminates.",
            "Is this readable?",
            "So I continue with elaborating on this.",
            "What does it mean?",
            "How it mean Siri?",
            "So an N number of iterations of this while loop and there are intermediate States and I'll just write system.",
            "So from here.",
            "Both are men.",
            "And now let me call this intermediate states you want to UN.",
            "The first state is the state we start with.",
            "This is.",
            "This is so last state to state we want to end with.",
            "This is S1.",
            "And we have.",
            "In UI.",
            "PEO flies through.",
            "For all I from 1 to N -- 1.",
            "And we have for the last one.",
            "You and.",
            "PY is not true.",
            "And we get from.",
            "UI-2 UI browser plus one by doing doing this operation in the value of.",
            "Why?",
            "Instead you I lost one.",
            "Is value of variable Y in state UI and applied tree of it?",
            "And if you go through this, you will find out that.",
            "UN of Y equals equals.",
            "N -- 1 and minus one times.",
            "Apply the function T2.",
            "You won.",
            "And since we know what you want UN and you want are you can say here.",
            "Is one of Y equals.",
            "Xi'an minus one of.",
            "Yes, offline.",
            "Grab that describes what the S1 isn't for all as one that do this, we have to find an S2.",
            "Now, how do we describe the S2?",
            "Find.",
            "Have you have to?",
            "In fact, we have to find more.",
            "We want this wild program to terminate too, so we have to give intermediate states.",
            "So I will give.",
            "Or let's say we have to find.",
            "States.",
            "I called MW.",
            "Now the number of iterations we in general would be open.",
            "How often go be through this while loop?",
            "We don't know, but it makes sense here to use the same end that we had before.",
            "OK. And.",
            "What is the?",
            "How do we describe?",
            "Via vai as only variable we are interested in is the variable Y, so only gives the definition of state WI for variable Y.",
            "All the other variables are the same as in all the others before I mean, all states that we have seen on the blackboard only differ in their values of Y variables set or X never changed.",
            "Here.",
            "I guess what I want is F. I -- 1 off.",
            "S1Y too big.",
            "This defines the states W subway.",
            "And what we what we can see from this state?",
            "W one is exactly our starting state S1, because there is here you would have 0 nothing applied to it.",
            "And.",
            "We also we also see that from.",
            "Passing from.",
            "Y2Y plus one.",
            "That's a pair that belongs into the Accessibility relation of the body of the wailupe.",
            "That's why we chose this definition.",
            "So the only problem is do we get termination at some point.",
            "Military always have this.",
            "Inequality then.",
            "Via via last, we have to prove termination and what I want to show is that after N iterations in WN.",
            "Off why is the same as WN?",
            "Of X, that's what I claim.",
            "Now let's look what is this?",
            "By the definition I've given here, it's the same as F. N -- 1.",
            "Office 1 of 1.",
            "But what what was this is one of?",
            "Why should be some variance of blackboard here?",
            "That's.",
            "T N -- 1 off.",
            "As offline.",
            "Never remember that we had an assumption on our status.",
            "If you have first, if you apply first she and then F we get back to the same thing.",
            "This shows that if you first apply end times 3, then end times after we get back to what we started with.",
            "As of why, but we also now have that as of Y = F of X.",
            "And this is the same thing.",
            "WNFX the only variable whether states W there any different from the other states is the variable Y. on X it's the same.",
            "OK, that's proofs.",
            "This formula is a technology.",
            "Do I have my?",
            "Sing no, it's been waited too long.",
            "OK, so this proof that this formula really is a tautology.",
            "And we have, after all, finished Elektra for today.",
            "And I'll meet you.",
            "Tomorrow morning, same time, same room."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "First of all, where you come from?",
                    "label": 0
                },
                {
                    "sent": "So what is your current residence?",
                    "label": 0
                },
                {
                    "sent": "So who comes from Canberra?",
                    "label": 0
                },
                {
                    "sent": "Or Canberra.",
                    "label": 0
                },
                {
                    "sent": "And who from?",
                    "label": 0
                },
                {
                    "sent": "ACTU South Wales or Vic?",
                    "label": 0
                },
                {
                    "sent": "Haha, that's who comes from Australia.",
                    "label": 0
                },
                {
                    "sent": "Rest of Australia.",
                    "label": 0
                },
                {
                    "sent": "And last.",
                    "label": 0
                },
                {
                    "sent": "Location who is from who lives now outside Australia.",
                    "label": 0
                },
                {
                    "sent": "Oh, where do you come from?",
                    "label": 0
                },
                {
                    "sent": "OK, yes and there were three more heads up from outside Australia.",
                    "label": 0
                },
                {
                    "sent": "Where do you?",
                    "label": 0
                },
                {
                    "sent": "Where do you live now?",
                    "label": 0
                },
                {
                    "sent": "I guess it was yesterday.",
                    "label": 0
                },
                {
                    "sent": "You see lando?",
                    "label": 0
                },
                {
                    "sent": "That's also close by, and you also New Zealand.",
                    "label": 0
                },
                {
                    "sent": "Oh wonderful, yeah.",
                    "label": 0
                },
                {
                    "sent": "And another dimension.",
                    "label": 0
                },
                {
                    "sent": "What is your background?",
                    "label": 0
                },
                {
                    "sent": "So who is a computer scientist?",
                    "label": 0
                },
                {
                    "sent": "Who is a mathematician?",
                    "label": 0
                },
                {
                    "sent": "Who is a philosopher?",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "And I've covered it.",
                    "label": 0
                },
                {
                    "sent": "I've covered everything.",
                    "label": 0
                },
                {
                    "sent": "Somebody belonging to a category that I've not mentioned for you.",
                    "label": 0
                },
                {
                    "sent": "OK, so it's more electrical engineering, right?",
                    "label": 0
                },
                {
                    "sent": "My younger daughter did this.",
                    "label": 0
                },
                {
                    "sent": "OK, so let's start time.",
                    "label": 0
                },
                {
                    "sent": "I must apologize.",
                    "label": 0
                },
                {
                    "sent": "I somehow did not get this thing really working.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "It shows the slide, but it does funny flipping back and forth.",
                    "label": 0
                },
                {
                    "sent": "Here is an outline outline of the course.",
                    "label": 0
                },
                {
                    "sent": "Will start today with lecture one on regular programs.",
                    "label": 1
                },
                {
                    "sent": "Now you see what this one is enough.",
                    "label": 0
                },
                {
                    "sent": "And we go on.",
                    "label": 0
                },
                {
                    "sent": "Till Wednesday now Wednesday you will see we will have three lectures.",
                    "label": 0
                },
                {
                    "sent": "The first 2 lecture, three and four are in fact half hour lectures smaller than the other one.",
                    "label": 0
                },
                {
                    "sent": "I've only grouped them by topic.",
                    "label": 0
                },
                {
                    "sent": "And that has been rearrangement of the schedule.",
                    "label": 0
                },
                {
                    "sent": "Though this is the talk that was usually scheduled for Thursday.",
                    "label": 0
                },
                {
                    "sent": "It's now put on Wednesday from 11:15 I guess.",
                    "label": 0
                },
                {
                    "sent": "And then we'll have one more lecture on Thursday and free on Friday.",
                    "label": 0
                },
                {
                    "sent": "I mean it.",
                    "label": 0
                },
                {
                    "sent": "Morris will then be hopefully there.",
                    "label": 0
                },
                {
                    "sent": "This material is very dense.",
                    "label": 0
                },
                {
                    "sent": "What I decided is.",
                    "label": 0
                },
                {
                    "sent": "Rather, to concentrate on a small fraction of the topic, I'd rather try to cover everything.",
                    "label": 0
                },
                {
                    "sent": "And the consequences that sometimes I have to skip slides.",
                    "label": 0
                },
                {
                    "sent": "But I hope you will never lose.",
                    "label": 0
                },
                {
                    "sent": "Focus on what is happening, what I wanted to do is to cover the whole range from the theoretical beginnings of dynamic logic to its application in program verification, and I'll in fact show you a demo of our system that verifies Chavakkad programs and is based on dynamic logic, so that covers lecture 12, lecture 6, and all that's needed along this way.",
                    "label": 1
                },
                {
                    "sent": "This is the reason why there is so so a lot of material I could have given 6 lectures a course only on the 1st two topics.",
                    "label": 0
                },
                {
                    "sent": "So bear with me and we try to make it happen.",
                    "label": 0
                },
                {
                    "sent": "It is on the slides you the material or might not go into details, and I've also given references where you can read things.",
                    "label": 0
                },
                {
                    "sent": "I usually use a pic monitor.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So here we go.",
                    "label": 0
                },
                {
                    "sent": "I will.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Start.",
                    "label": 0
                },
                {
                    "sent": "This course by giving a motivating example that should give you a feeling what dynamic logic is, what it can be used for, where it fits in all this.",
                    "label": 1
                },
                {
                    "sent": "But collection of possible logics you have already seen a couple of logics last week and the exam.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Well, I I chose is this tower of Hanoi game.",
                    "label": 1
                },
                {
                    "sent": "I hope most of you have seen it.",
                    "label": 0
                },
                {
                    "sent": "Who doesn't know this tower final game.",
                    "label": 0
                },
                {
                    "sent": "OK, the objective is you have a couple of disks.",
                    "label": 0
                },
                {
                    "sent": "In this example there are four disks on sitting on one pile and you try to move them on the third pile over here and you have an auxiliary pile in the middle and the rule is you never put larger disk on top of a smaller one and you can do this by.",
                    "label": 0
                },
                {
                    "sent": "Something like this?",
                    "label": 0
                },
                {
                    "sent": "That's really annoying, but I don't know how to change that.",
                    "label": 0
                },
                {
                    "sent": "Whoops here we go.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And usually this is given as an example of recursive programming.",
                    "label": 0
                },
                {
                    "sent": "Is this example you run across in your programming courses and they use it as an example for recursive programming, but it's not necessarily to do this solution recursively.",
                    "label": 0
                },
                {
                    "sent": "There's also a nice iterative solution, and here are the instructions how you do it.",
                    "label": 0
                },
                {
                    "sent": "You alternatingly move the smaller States and not so small as disk.",
                    "label": 0
                },
                {
                    "sent": "No one instruction, and if you move the smallest disk then you move it to the pile where we had where it has not come from.",
                    "label": 1
                },
                {
                    "sent": "Also simple.",
                    "label": 1
                },
                {
                    "sent": "And if you move not the smallest disk, then there's only one possible move.",
                    "label": 1
                },
                {
                    "sent": "I mean, there is the one disk you should not move.",
                    "label": 0
                },
                {
                    "sent": "You have two piles, and you can only move the smaller on the bigger one.",
                    "label": 1
                },
                {
                    "sent": "So only only one legal move an they started.",
                    "label": 0
                },
                {
                    "sent": "And if you want to describe more formally this instructions how to solve this problem, we could do it like this.",
                    "label": 0
                },
                {
                    "sent": "Invent names for moves the smallest, move the other, and then you will see sequential operator.",
                    "label": 1
                },
                {
                    "sent": "That's what you what.",
                    "label": 0
                },
                {
                    "sent": "You would be the instructions, but it's not satisfactory.",
                    "label": 0
                },
                {
                    "sent": "You have these dots there which are not precise, so we could be a little bit more precise.",
                    "label": 0
                },
                {
                    "sent": "Use a little bit more mathematical notation and use the star operator.",
                    "label": 0
                },
                {
                    "sent": "That we know from regular language theory which says report repeat this.",
                    "label": 0
                },
                {
                    "sent": "Actions in here an arbitrary finite number of times.",
                    "label": 0
                },
                {
                    "sent": "Well, this theory is not good enough cause when do we stop?",
                    "label": 1
                },
                {
                    "sent": "So we need a test for stopping.",
                    "label": 0
                },
                {
                    "sent": "So let's invent and you actually give it the name test for stop.",
                    "label": 0
                },
                {
                    "sent": "And we think about the band we stopped.",
                    "label": 0
                },
                {
                    "sent": "We stop after a move of the smallest disk that will be the end.",
                    "label": 0
                },
                {
                    "sent": "If you have moved all disks to the right pile, the last thing we do, put the smallest disk on top of it, so we test only for stopping after we moved the smallest one need not check in other cases.",
                    "label": 0
                },
                {
                    "sent": "That's why this course of actions that solve Tower of Hanoi problem Now looks like this moves more.",
                    "label": 0
                },
                {
                    "sent": "This one test for stop, and if there's only one disk then we would stop here.",
                    "label": 0
                },
                {
                    "sent": "Otherwise repeat to find that number of times this.",
                    "label": 0
                },
                {
                    "sent": "It's no guarantee so far that it works.",
                    "label": 0
                },
                {
                    "sent": "I've only shown that is what you should do.",
                    "label": 0
                },
                {
                    "sent": "We have no proof.",
                    "label": 0
                },
                {
                    "sent": "You can try it, but we have no proof that it really works.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "So far we have to only try to formalize what we should do.",
                    "label": 0
                },
                {
                    "sent": "So if we are really standing in front of the.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Little game and we read this list of instructions.",
                    "label": 0
                },
                {
                    "sent": "We can follow them, but if you want to reason about the situation, we also need a formalization of the setup itself, and that's what's happening here.",
                    "label": 0
                },
                {
                    "sent": "We need some ways to describe the environment, the situation of the game, and this is how we could do it.",
                    "label": 0
                },
                {
                    "sent": "We have a two place function that we call stack and it gives the disk that is situated on stack number N. 123 there are only three 6 on position from the.",
                    "label": 0
                },
                {
                    "sent": "Floor level ground level up to higher positions on the stack and we write 0 if there is no no disk and we give the number of the disk that should be.",
                    "label": 1
                },
                {
                    "sent": "This gives the size of the disk otherwise.",
                    "label": 0
                },
                {
                    "sent": "So for example this situation we would described by the function stack that I give here in a tabular description.",
                    "label": 0
                },
                {
                    "sent": "So this would be on the.",
                    "label": 0
                },
                {
                    "sent": "Something strange.",
                    "label": 0
                },
                {
                    "sent": "Something is strange here.",
                    "label": 0
                },
                {
                    "sent": "OK, I was puzzled.",
                    "label": 0
                },
                {
                    "sent": "Yes, position one.",
                    "label": 0
                },
                {
                    "sent": "That's the table, so to speak.",
                    "label": 1
                },
                {
                    "sent": "So we have a disk of size 432 and here we have one on the 2nd.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Position 2.",
                    "label": 0
                },
                {
                    "sent": "Now we want to describe.",
                    "label": 0
                },
                {
                    "sent": "This.",
                    "label": 0
                },
                {
                    "sent": "Who?",
                    "label": 0
                },
                {
                    "sent": "Game this puzzle.",
                    "label": 0
                },
                {
                    "sent": "And one thing that we would be interesting in to describe the situation that we should end in.",
                    "label": 0
                },
                {
                    "sent": "So for example, you could use a formula like this.",
                    "label": 0
                },
                {
                    "sent": "That describes the situation that is the final position we trust says that all discounts tax free.",
                    "label": 1
                },
                {
                    "sent": "That's free here.",
                    "label": 0
                },
                {
                    "sent": "Or a what we want to say that you want to formulate an invariant.",
                    "label": 1
                },
                {
                    "sent": "Always throughout the game.",
                    "label": 0
                },
                {
                    "sent": "The stack should be ordered, never you have a larger disk on top of a smaller one.",
                    "label": 0
                },
                {
                    "sent": "And we could write it like this.",
                    "label": 1
                },
                {
                    "sent": "It's just the 1st order formula so far seen nothing special to dynamic logic so far.",
                    "label": 1
                },
                {
                    "sent": "And instead of quantifying over stacks of used to conjunction, there only three of them and never will be more.",
                    "label": 0
                },
                {
                    "sent": "So we can use the conjunction.",
                    "label": 0
                },
                {
                    "sent": "It's different of course for the stack size we can play this game with any number of disks so that we should have a quantifiable this.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "Am I too fast?",
                    "label": 0
                },
                {
                    "sent": "I might be slow.",
                    "label": 0
                },
                {
                    "sent": "I will slow up anyhow, this is inevitable.",
                    "label": 0
                },
                {
                    "sent": "So I also already used the word invariant, but so far it was just a formula.",
                    "label": 0
                },
                {
                    "sent": "What we really mean by an invariant is.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "A formula that invariant based respect to 1 action or invariant with respect to all actions.",
                    "label": 0
                },
                {
                    "sent": "So here we want, for example, the ordered stack property should be invariant to whatever we do.",
                    "label": 0
                },
                {
                    "sent": "And that we formulate in natural language, whenever a formula, Phi that's supposed to be our invariant is true before we start.",
                    "label": 1
                },
                {
                    "sent": "Actually then it would be true after Action 8 and we could write this by inventing terminology for talking about before and after States and write it like this if we are in a state where the steps are ordered.",
                    "label": 0
                },
                {
                    "sent": "If we perform the move, South moves to simple move to smaller.",
                    "label": 0
                },
                {
                    "sent": "Disk asked action, then after this action, stacks will be ordered again and we use this pointed packets to describe that we do an action and often action.",
                    "label": 0
                },
                {
                    "sent": "Sometimes something is true.",
                    "label": 1
                },
                {
                    "sent": "And this is your first dynamic logic formula that you see and discribing.",
                    "label": 0
                },
                {
                    "sent": "For example, invariant properties of action describing what holds true after an action.",
                    "label": 1
                },
                {
                    "sent": "That is what?",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Dynamic logic does for you.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Dynamic dynamic logic justice to summarize.",
                    "label": 1
                },
                {
                    "sent": "Allows to reason about about properties of actions, not only simple actions.",
                    "label": 1
                },
                {
                    "sent": "We already had composite actions, arbitrary iterations of pairs of actions.",
                    "label": 1
                },
                {
                    "sent": "And the actions themselves are explicitly part of the language within this pointed practice.",
                    "label": 0
                },
                {
                    "sent": "We had his name of move smaller, but inside there could also be more complicated actions.",
                    "label": 0
                },
                {
                    "sent": "It is an extension of 1st Order Logic.",
                    "label": 0
                },
                {
                    "sent": "The first formulas I showed you with just first order logic and it's also an extension of modal logic.",
                    "label": 0
                },
                {
                    "sent": "Now who of you attended the lectures on 1st order and modal logic last week?",
                    "label": 0
                },
                {
                    "sent": "Oh, that's very good because it really helps to understand what's going on here.",
                    "label": 0
                },
                {
                    "sent": "It's a little bit more than you have seen.",
                    "label": 0
                },
                {
                    "sent": "Seen before.",
                    "label": 0
                },
                {
                    "sent": "It's not a model, not only a more logic, it's a multi modal logic with infinitely many modalities.",
                    "label": 0
                },
                {
                    "sent": "Anne.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "That's enough for introduction.",
                    "label": 0
                },
                {
                    "sent": "Now let's get to the formalities of it.",
                    "label": 0
                },
                {
                    "sent": "How we introduce logic.",
                    "label": 0
                },
                {
                    "sent": "You have seen this before.",
                    "label": 0
                },
                {
                    "sent": "I have to talk about.",
                    "label": 0
                },
                {
                    "sent": "The syntax of the logic.",
                    "label": 0
                },
                {
                    "sent": "I have to tell you not only informally, but really give you the meaning of the syntax.",
                    "label": 0
                },
                {
                    "sent": "The semantics of the logic, and then we talk about.",
                    "label": 0
                },
                {
                    "sent": "Don't order cheese or.",
                    "label": 0
                },
                {
                    "sent": "Logical.",
                    "label": 0
                },
                {
                    "sent": "Inference, I mean, this really is what we want to talk about later, and we want to build programs that do the logical inference for us.",
                    "label": 0
                },
                {
                    "sent": "But we go through the list of.",
                    "label": 0
                },
                {
                    "sent": "Information I need to supply to define the logic.",
                    "label": 0
                },
                {
                    "sent": "Syntax is always been firstly to fix the vocabulary that called Sigma here.",
                    "label": 0
                },
                {
                    "sent": "And once this is fixed I will define the functional terms.",
                    "label": 0
                },
                {
                    "sent": "That belong to this vocabulary.",
                    "label": 0
                },
                {
                    "sent": "I will define the formulas and here of course we have something new that we did not have in first order logic that we did not have in modal logic.",
                    "label": 0
                },
                {
                    "sent": "We have programs.",
                    "label": 0
                },
                {
                    "sent": "They aren't described by.",
                    "label": 0
                },
                {
                    "sent": "Syntactic entities of our logic.",
                    "label": 0
                },
                {
                    "sent": "I do not.",
                    "label": 0
                },
                {
                    "sent": "Need to read this.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Oh here sandbox of terms, nothing new.",
                    "label": 0
                },
                {
                    "sent": "It's just the same thing is in first order.",
                    "label": 0
                },
                {
                    "sent": "Logic variables are terms.",
                    "label": 0
                },
                {
                    "sent": "And if we have already.",
                    "label": 0
                },
                {
                    "sent": "Turn.",
                    "label": 0
                },
                {
                    "sent": "FT12TNT12 PM and have a function symbol of the correct parity.",
                    "label": 0
                },
                {
                    "sent": "Then we just apply F with this end table of terms.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And get in neutral.",
                    "label": 0
                },
                {
                    "sent": "Formulas.",
                    "label": 0
                },
                {
                    "sent": "Atomic formula, same thing as in predicate logic.",
                    "label": 1
                },
                {
                    "sent": "We start with a simple for a predicate name for predicate.",
                    "label": 0
                },
                {
                    "sent": "Here are and.",
                    "label": 1
                },
                {
                    "sent": "If it's an NPL predicate, follow end terms and we have a regular atomic formulas.",
                    "label": 0
                },
                {
                    "sent": "We use equations here, so it's logic with equality can write equations and we have the closure on the usual operators.",
                    "label": 0
                },
                {
                    "sent": "Propositional operators and quantification.",
                    "label": 1
                },
                {
                    "sent": "Now the new thing is now the modal operators.",
                    "label": 0
                },
                {
                    "sent": "For any program point we haven't seen anyone in this definition, but.",
                    "label": 0
                },
                {
                    "sent": "Soon we'll see what they are for any pie.",
                    "label": 0
                },
                {
                    "sent": "That's a program, and any formula F we can build a new formula by using modalities.",
                    "label": 0
                },
                {
                    "sent": "This box F and diamond F, but differences to model logic.",
                    "label": 0
                },
                {
                    "sent": "This modal operator does have an argument.",
                    "label": 0
                },
                {
                    "sent": "Box of Pi of F. Diamond of Pi of F. These are new for.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And now.",
                    "label": 0
                },
                {
                    "sent": "We continue part.",
                    "label": 0
                },
                {
                    "sent": "What are the programs?",
                    "label": 0
                },
                {
                    "sent": "Simple thing in programs are assignments.",
                    "label": 0
                },
                {
                    "sent": "We have a variable assigning the value that the program is written like this and I use this: equality sign to distinguish assignment from equality.",
                    "label": 0
                },
                {
                    "sent": "These are the symbols programs.",
                    "label": 0
                },
                {
                    "sent": "And once we have programs, we can build more complicated prompt programs from given one simple thing is to 1st execute by one, then execute by two.",
                    "label": 0
                },
                {
                    "sent": "Sequential composition, or this logic is also general enough to treat non deterministic programs.",
                    "label": 1
                },
                {
                    "sent": "This is.",
                    "label": 0
                },
                {
                    "sent": "Denoted by this set theoretical union symbol Pi 1 reply to.",
                    "label": 0
                },
                {
                    "sent": "And we have already seen in the example the Kleene star iterations involved.",
                    "label": 0
                },
                {
                    "sent": "We have a program P iterated in arbitrary finite number of times.",
                    "label": 0
                },
                {
                    "sent": "And there is something special already occurred in the target of final example.",
                    "label": 0
                },
                {
                    "sent": "We have the test.",
                    "label": 0
                },
                {
                    "sent": "So for any.",
                    "label": 0
                },
                {
                    "sent": "Formula.",
                    "label": 0
                },
                {
                    "sent": "If we write formula?",
                    "label": 0
                },
                {
                    "sent": "That's a program.",
                    "label": 0
                },
                {
                    "sent": "I receive this completes the definition.",
                    "label": 0
                },
                {
                    "sent": "You may have noticed that this is mutually recursive.",
                    "label": 0
                },
                {
                    "sent": "It's possible to go from pro.",
                    "label": 0
                },
                {
                    "sent": "It happens that programs are used to build formulas with the modal operators, but it also goes the other way round.",
                    "label": 0
                },
                {
                    "sent": "We have a formula and we built a program this test program.",
                    "label": 0
                },
                {
                    "sent": "So this definition you cannot split in two definitions of 1 definition for the programs.",
                    "label": 0
                },
                {
                    "sent": "One definition for the formulas.",
                    "label": 0
                },
                {
                    "sent": "It's mutually recursive definition.",
                    "label": 0
                },
                {
                    "sent": "What is really means?",
                    "label": 0
                },
                {
                    "sent": "What is the action of this program?",
                    "label": 0
                },
                {
                    "sent": "You have some feeling now, but the semantics should give precise definition.",
                    "label": 0
                },
                {
                    "sent": "Dynamic logic comes in many varieties.",
                    "label": 0
                },
                {
                    "sent": "One way you can distinguish one dynamic logic from another dynamic logic is what programs you allow.",
                    "label": 0
                },
                {
                    "sent": "For example, we could have decided that we do not want to have nondeterministic programs.",
                    "label": 0
                },
                {
                    "sent": "All our programs should be deterministic, so we would have dropped this nondeterministic choice operator.",
                    "label": 0
                },
                {
                    "sent": "I'll be, I've put it in what you could have more operations like this.",
                    "label": 0
                },
                {
                    "sent": "To build.",
                    "label": 0
                },
                {
                    "sent": "You could have recursive operators that allow you to build recursive programs.",
                    "label": 0
                },
                {
                    "sent": "And there's a whole whole list that you find in the literature.",
                    "label": 0
                },
                {
                    "sent": "We can concentrate here exclusively on this selection of programs for our dynamic logic and this set of programs are called regular programs.",
                    "label": 1
                },
                {
                    "sent": "That's because of their similarity to regular expressions.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "I used to take notes and.",
                    "label": 0
                },
                {
                    "sent": "OK. Good.",
                    "label": 0
                },
                {
                    "sent": "I go on till.",
                    "label": 0
                },
                {
                    "sent": "11:15 so we are doing well this time so far.",
                    "label": 0
                },
                {
                    "sent": "For semantics, views crypto structures, now I'm fortunate fortunate that you already know what XM structures are, so I only have to tell you that variation from normal crypto structures for modal logic to preapre structures for dynamic logic.",
                    "label": 0
                },
                {
                    "sent": "Chris structures here.",
                    "label": 0
                },
                {
                    "sent": "We built by first giving a first order model of our Vocabulary Sigma.",
                    "label": 0
                },
                {
                    "sent": "That's a start.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "Once this we call the domain of computation.",
                    "label": 0
                },
                {
                    "sent": "That's what the data the programs might make use of.",
                    "label": 0
                },
                {
                    "sent": "This is a start for building equipped with structure and we indicate where the domain of computation that belongs to a crypted structure by adding it here as a subscript.",
                    "label": 0
                },
                {
                    "sent": "Then we need to give the set of states.",
                    "label": 1
                },
                {
                    "sent": "We need to say.",
                    "label": 1
                },
                {
                    "sent": "What is the Accessibility relations that's important for the model operators and we need to give the Accessibility relation for every program?",
                    "label": 0
                },
                {
                    "sent": "And we need to say when a formula is true in the state.",
                    "label": 0
                },
                {
                    "sent": "And this definitions now will follow and you will notice that there is no.",
                    "label": 0
                },
                {
                    "sent": "Choice anymore once we have fixed the domain of computation, the crypto structure K for M is.",
                    "label": 1
                },
                {
                    "sent": "So uniquely determined.",
                    "label": 0
                },
                {
                    "sent": "That's not true for all variations of dynamic logic an it's not true for all the dynamic logics.",
                    "label": 0
                },
                {
                    "sent": "We will talk about in this course, but it's true for the moment.",
                    "label": 0
                },
                {
                    "sent": "So let's go on.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "The set of states.",
                    "label": 0
                },
                {
                    "sent": "Now think of what is happening here.",
                    "label": 0
                },
                {
                    "sent": "We have programs.",
                    "label": 0
                },
                {
                    "sent": "I don't.",
                    "label": 0
                },
                {
                    "sent": "The only thing we really can do is assignment we can assign.",
                    "label": 0
                },
                {
                    "sent": "Value to variable.",
                    "label": 0
                },
                {
                    "sent": "All other clauses in the definition.",
                    "label": 1
                },
                {
                    "sent": "There composition operators.",
                    "label": 0
                },
                {
                    "sent": "You have programs and you build bigger ones, but the only thing that really changes the state assignments and that's the reason why the state is described once we know the value of our variables.",
                    "label": 0
                },
                {
                    "sent": "So the set of state.",
                    "label": 1
                },
                {
                    "sent": "State is the set of all functions from the variables to the values and the values are elements of our domain of computation of EM.",
                    "label": 1
                },
                {
                    "sent": "Anne.",
                    "label": 0
                },
                {
                    "sent": "Next I should give the.",
                    "label": 0
                },
                {
                    "sent": "The truth definition.",
                    "label": 0
                },
                {
                    "sent": "When is the formula true in the state?",
                    "label": 0
                },
                {
                    "sent": "But before I can do that, I should give you the evaluation of terms.",
                    "label": 0
                },
                {
                    "sent": "What is the?",
                    "label": 0
                },
                {
                    "sent": "Value.",
                    "label": 0
                },
                {
                    "sent": "In our given.",
                    "label": 0
                },
                {
                    "sent": "Domain of computation.",
                    "label": 0
                },
                {
                    "sent": "In a given state you are use you to denoted state.",
                    "label": 0
                },
                {
                    "sent": "And what the value assigned to a term T?",
                    "label": 0
                },
                {
                    "sent": "That's as usual not.",
                    "label": 1
                },
                {
                    "sent": "I will not give the definition that the 1st order definition and it it may be the value may be different in different states.",
                    "label": 0
                },
                {
                    "sent": "Becaused the.",
                    "label": 0
                },
                {
                    "sent": "Variables that appear in T get different values in different states.",
                    "label": 0
                },
                {
                    "sent": "And I guess you have seen some way of notation for this.",
                    "label": 0
                },
                {
                    "sent": "If I have a status, I sometimes want to modify it a little bit.",
                    "label": 0
                },
                {
                    "sent": "Let's say give X value a an leave the rest unchanged.",
                    "label": 0
                },
                {
                    "sent": "That's the piece of notation that's used.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Frequently.",
                    "label": 0
                },
                {
                    "sent": "And now we come to the definition of the truth definition.",
                    "label": 0
                },
                {
                    "sent": "Then it's a formula.",
                    "label": 0
                },
                {
                    "sent": "True in this state's rights like this, I forget to mention the group construction most of the time because there's only one group structure around.",
                    "label": 0
                },
                {
                    "sent": "So if you see S here, it's implicitly understood there is a critical structure is belongs to.",
                    "label": 0
                },
                {
                    "sent": "Well, there is nothing particular about this.",
                    "label": 0
                },
                {
                    "sent": "It's the usual definition.",
                    "label": 0
                },
                {
                    "sent": "Also, here it's the usual definition that you have seen in.",
                    "label": 0
                },
                {
                    "sent": "Modal logic.",
                    "label": 0
                },
                {
                    "sent": "Formula of the type box pie.",
                    "label": 0
                },
                {
                    "sent": "Of F box P of F is true instead S if for Allstate S prime that are accessible from S. With the program pie.",
                    "label": 0
                },
                {
                    "sent": "In S prime, if it's true.",
                    "label": 0
                },
                {
                    "sent": "In modal logic, you would trust that the Exibility Accessibility relation draw without any argument.",
                    "label": 0
                },
                {
                    "sent": "But here we need an Accessibility relation row for every program \u03c0, and the same thing for the diamond operator exists the state.",
                    "label": 0
                },
                {
                    "sent": "And the important partner is of course.",
                    "label": 0
                },
                {
                    "sent": "What is this role?",
                    "label": 0
                },
                {
                    "sent": "Might it appeared here?",
                    "label": 0
                },
                {
                    "sent": "In more logic, it was just given you.",
                    "label": 0
                },
                {
                    "sent": "It was a piece that determined your grip construction and you could have the same set of States and different Accessibility relations.",
                    "label": 0
                },
                {
                    "sent": "That's different here because Accessibility is given by programs, it's fixed.",
                    "label": 0
                },
                {
                    "sent": "Once we have decided what our programs are.",
                    "label": 0
                },
                {
                    "sent": "So now he.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Comes the definition of art.",
                    "label": 0
                },
                {
                    "sent": "This Accessibility relations are for any program.",
                    "label": 0
                },
                {
                    "sent": "So when I write this insist, we say a pair is included in this Accessibility set.",
                    "label": 0
                },
                {
                    "sent": "If and only if, that's the way I phrased the definition here, it's clear if we go from you to you prime by.",
                    "label": 0
                },
                {
                    "sent": "Executing the assignment.",
                    "label": 0
                },
                {
                    "sent": "That is, X prime is the same issue only at the value of X.",
                    "label": 0
                },
                {
                    "sent": "You now have a new value that that you obtain by a value item T. In the domain of computation using, of course the old.",
                    "label": 0
                },
                {
                    "sent": "State.",
                    "label": 0
                },
                {
                    "sent": "So we could have something like.",
                    "label": 0
                },
                {
                    "sent": "X + 1 and if you.",
                    "label": 0
                },
                {
                    "sent": "Look at this definition.",
                    "label": 0
                },
                {
                    "sent": "That makes perfect sense in this situation when the value of X would be replaced by this one.",
                    "label": 0
                },
                {
                    "sent": "And here you use the old.",
                    "label": 0
                },
                {
                    "sent": "The old value of X.",
                    "label": 0
                },
                {
                    "sent": "These access this has been some.",
                    "label": 0
                },
                {
                    "sent": "Some people say this is a strange logic and it uses the same variables for quantifying on the on the logic part and the program variables are the same, made no difference here.",
                    "label": 0
                },
                {
                    "sent": "And here you have to distinguish this is a different thing than this.",
                    "label": 0
                },
                {
                    "sent": "Well, the definition covers this no problem.",
                    "label": 0
                },
                {
                    "sent": "And sequential composition when is a pair of.",
                    "label": 0
                },
                {
                    "sent": "Start and stop state before and after state when is a pair like this, you and you prime in the Accessibility relation that belongs to the sequential composition of Pi one and \u03c0 two.",
                    "label": 0
                },
                {
                    "sent": "And of course you first take a step using Pi one.",
                    "label": 0
                },
                {
                    "sent": "So you say there is a state.",
                    "label": 0
                },
                {
                    "sent": "So we get from you to W by program PY one, and then it's possible to go from this intermediate state W2 U prime by using high too.",
                    "label": 0
                },
                {
                    "sent": "I saw my apps feeding on too slow.",
                    "label": 0
                },
                {
                    "sent": "Is that you also think or?",
                    "label": 0
                },
                {
                    "sent": "Could I go faster or?",
                    "label": 0
                },
                {
                    "sent": "Or not.",
                    "label": 0
                },
                {
                    "sent": "Who thinks I should go faster?",
                    "label": 0
                },
                {
                    "sent": "Only one OK. Who?",
                    "label": 0
                },
                {
                    "sent": "Not deterministic choice, that's easy.",
                    "label": 0
                },
                {
                    "sent": "Pre state posted pair is in the nondeterministic choices in one or the other.",
                    "label": 0
                },
                {
                    "sent": "And for the iteration that needs a lot of words, but that's what we would expect.",
                    "label": 0
                },
                {
                    "sent": "So let me just read it once it will occur more frequently later, and then I will be faster.",
                    "label": 0
                },
                {
                    "sent": "Pair start with you and with you prime belongs to the Accessibility relations of \u03c0 star if and only if there is an N and there are intermediate states such as the first intermediate state is the state we start with the last intermediate state is the state we want to end with U prime and for all intermediate states we have.",
                    "label": 0
                },
                {
                    "sent": "From UI to UI plus one, this pair is in the Accessibility relation of the program plan.",
                    "label": 0
                },
                {
                    "sent": "Now interesting part is now what do we do with this test operator?",
                    "label": 0
                },
                {
                    "sent": "Now the only the only pairs that can be in the Accessibility relation of the test are identical pairs.",
                    "label": 0
                },
                {
                    "sent": "If the.",
                    "label": 0
                },
                {
                    "sent": "Program that tests doesn't switch to a new state.",
                    "label": 0
                },
                {
                    "sent": "It only says property is true or it's not true, and if it's true, we have the pair Hue and Hue.",
                    "label": 0
                },
                {
                    "sent": "In the Accessibility relation, otherwise there is no pair.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Here are some examples.",
                    "label": 0
                },
                {
                    "sent": "Just to piece the definitions, we have just seen together.",
                    "label": 0
                },
                {
                    "sent": "When would appear begins, they do and they do prime be in the Accessibility relation of this construct.",
                    "label": 0
                },
                {
                    "sent": "Only trust fitting the definition if if and only the exist W. This comes from the sequential composition definition, so that's that.",
                    "label": 0
                },
                {
                    "sent": "UW is in the Accessibility relation of the first part and this one from W2 U prime.",
                    "label": 0
                },
                {
                    "sent": "We get by the 2nd program part.",
                    "label": 0
                },
                {
                    "sent": "Now we know we can look at this and fill in the definition.",
                    "label": 0
                },
                {
                    "sent": "And it says we we have this pair in the Accessibility relation of this program if and only if there exists intermediate state that this this happens.",
                    "label": 0
                },
                {
                    "sent": "This can only happen if UMW equal and if the test condition is really true.",
                    "label": 0
                },
                {
                    "sent": "And that's all we can do at the moment.",
                    "label": 0
                },
                {
                    "sent": "So this is the exists quantifier now that we know has to be the same as you, they can forget the quantifier interest stated like this.",
                    "label": 0
                },
                {
                    "sent": "Please post.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Is the first step of the second example.",
                    "label": 0
                },
                {
                    "sent": "I wanted to show you now let's be more ambitious and look at a more complicated program.",
                    "label": 0
                },
                {
                    "sent": "The I concentrate on this example.",
                    "label": 0
                },
                {
                    "sent": "Of course that's new in dynamic logic.",
                    "label": 0
                },
                {
                    "sent": "Describe description of programs.",
                    "label": 0
                },
                {
                    "sent": "Or actions in general are part of the language that's new.",
                    "label": 0
                },
                {
                    "sent": "A nuff.",
                    "label": 0
                },
                {
                    "sent": "In the motivating example I was talking about actions that you do to perform this game of the towers of Hanoi.",
                    "label": 0
                },
                {
                    "sent": "You may have noticed that from then on I've only talked about programs.",
                    "label": 0
                },
                {
                    "sent": "Of course, programs are also particularly kind of actions, and that is what I will focus on in this course.",
                    "label": 0
                },
                {
                    "sent": "You could have a more general theory people do.",
                    "label": 0
                },
                {
                    "sent": "It has been done.",
                    "label": 0
                },
                {
                    "sent": "Will you describe actions in general that need not be given by programs?",
                    "label": 0
                },
                {
                    "sent": "This is a little bit more complicated because in general is not so clear what actions really do this program, so we have a very clear idea what actions performed by a machine that executed program really do, so it is very precise situation, and that's the situation I will concentrate on.",
                    "label": 0
                },
                {
                    "sent": "This is just a remark to give you an idea that dynamic logic could be applied.",
                    "label": 0
                },
                {
                    "sent": "More generally.",
                    "label": 0
                },
                {
                    "sent": "We concentrate here on actions that are.",
                    "label": 0
                },
                {
                    "sent": "Really, programs so.",
                    "label": 0
                },
                {
                    "sent": "We have a program like this, but does it mean not us?",
                    "label": 0
                },
                {
                    "sent": "How do we get from beginning state you to state you prime?",
                    "label": 0
                },
                {
                    "sent": "Can anybody see it?",
                    "label": 0
                },
                {
                    "sent": "Of this part, I mean this part.",
                    "label": 0
                },
                {
                    "sent": "We have already examined.",
                    "label": 0
                },
                {
                    "sent": "OK, let's let's go through.",
                    "label": 0
                },
                {
                    "sent": "That's the definition of nondeterministic choice.",
                    "label": 0
                },
                {
                    "sent": "No, nothing happened so far.",
                    "label": 0
                },
                {
                    "sent": "This is, but replacing this Accessibility relation by what I've shown you on the on the previous slide.",
                    "label": 0
                },
                {
                    "sent": "Now that would maybe ring a Bell.",
                    "label": 0
                },
                {
                    "sent": "It's anything else.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "So this complicated program is a way that we can describe if.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Mail what is this?",
                    "label": 0
                },
                {
                    "sent": "You look at it differently.",
                    "label": 0
                },
                {
                    "sent": "Yes and yes yes.",
                    "label": 0
                },
                {
                    "sent": "That's why.",
                    "label": 0
                },
                {
                    "sent": "Yes, OK so.",
                    "label": 0
                },
                {
                    "sent": "You might have thought that simple while programs as a theoretical tool of most basic version, you can.",
                    "label": 0
                },
                {
                    "sent": "Who?",
                    "label": 0
                },
                {
                    "sent": "The most basic version of studying programming languages.",
                    "label": 0
                },
                {
                    "sent": "Now you've seen you can get even more basic if then else.",
                    "label": 0
                },
                {
                    "sent": "And while operations are not most atomic operations, you can have arbitrary iterations, is cleanly iteration and test and nondeterministic choice, and you can combine them together and you.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Get if then else while and also.",
                    "label": 0
                },
                {
                    "sent": "This one repeat until you might want to try this for yourself.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So far.",
                    "label": 0
                },
                {
                    "sent": "I've only given examples of programs.",
                    "label": 1
                },
                {
                    "sent": "Now let's look at formulas.",
                    "label": 0
                },
                {
                    "sent": "Who is familiar with the whole calculus?",
                    "label": 1
                },
                {
                    "sent": "Yes, that's something interesting in computer in in theoretical computer science basic, one of the basic.",
                    "label": 0
                },
                {
                    "sent": "Theories of program verification.",
                    "label": 1
                },
                {
                    "sent": "And in a.",
                    "label": 0
                },
                {
                    "sent": "In a whole logic, you have what's called a triple.",
                    "label": 0
                },
                {
                    "sent": "In whole logic, people write it like this, but we prefer to write it as a dynamic logic formula.",
                    "label": 0
                },
                {
                    "sent": "If the precondition is true, then.",
                    "label": 0
                },
                {
                    "sent": "After any.",
                    "label": 0
                },
                {
                    "sent": "Then sending any state that's reachable by program.",
                    "label": 1
                },
                {
                    "sent": "PY Post condition is true.",
                    "label": 0
                },
                {
                    "sent": "This is partial correctness, because this model operator box operator doesn't say there exists a terminal is terminating state.",
                    "label": 1
                },
                {
                    "sent": "It only says for all.",
                    "label": 0
                },
                {
                    "sent": "Terminating states something should be true.",
                    "label": 0
                },
                {
                    "sent": "And if we want to have total correctness, we use the diamond operator, because this operator says there is.",
                    "label": 0
                },
                {
                    "sent": "Terminating state.",
                    "label": 0
                },
                {
                    "sent": "So in a sense, dynamic logic is an extension of Hoare Logic and it is extension if you look at the whole logic triple and you built the closure under all logical operations build conjunctions.",
                    "label": 0
                },
                {
                    "sent": "Now that you can do with your logic, you can look at two triples.",
                    "label": 0
                },
                {
                    "sent": "That's a conjunction disjunction.",
                    "label": 0
                },
                {
                    "sent": "You cannot have the disjunction in involved in whole logic, it's just not possible and also not super position.",
                    "label": 0
                },
                {
                    "sent": "We could have this formula itself could be dynamic logic formula.",
                    "label": 0
                },
                {
                    "sent": "It could have modal operators more than one.",
                    "label": 0
                },
                {
                    "sent": "You could not have this in or triples and also there is no quantification in Holder, but we can have quantifier.",
                    "label": 0
                },
                {
                    "sent": "Interesting formula is this one.",
                    "label": 0
                },
                {
                    "sent": "Diamond P and then just the constant rule.",
                    "label": 1
                },
                {
                    "sent": "What does it say?",
                    "label": 0
                },
                {
                    "sent": "It's true in the state, as if there exists a terminating state which satisfies the constant rule.",
                    "label": 0
                },
                {
                    "sent": "So it just says the program terminates.",
                    "label": 0
                },
                {
                    "sent": "There is a terminating state.",
                    "label": 1
                },
                {
                    "sent": "What you can also express in dynamic logic.",
                    "label": 0
                },
                {
                    "sent": "Still I'm contrasting it to to her logic.",
                    "label": 0
                },
                {
                    "sent": "You can talk about properties of transformations, think you have a transformation from program PI12 Pi 2 here, and we want to say that this transformation preserves the property F. And you can write it like this.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "Let's look at this formula.",
                    "label": 0
                },
                {
                    "sent": "It's a box formula.",
                    "label": 0
                },
                {
                    "sent": "And we have a while loop in here which obviously does not terminate.",
                    "label": 0
                },
                {
                    "sent": "Termination condition is true, will never get false.",
                    "label": 0
                },
                {
                    "sent": "The loop does not terminate and then we even have.",
                    "label": 0
                },
                {
                    "sent": "The claim that after terminations are constant false should be true.",
                    "label": 0
                },
                {
                    "sent": "Nevertheless, that's a tricky point.",
                    "label": 0
                },
                {
                    "sent": "This formula is always true.",
                    "label": 1
                },
                {
                    "sent": "It's requirement is for all terminating states, the formula that follows the operator should be true.",
                    "label": 0
                },
                {
                    "sent": "There are no terminating states, so.",
                    "label": 0
                },
                {
                    "sent": "The statement for all terminating states is true vacuously, and the formula is true in any state.",
                    "label": 0
                },
                {
                    "sent": "That's something to be there to keep in mind.",
                    "label": 0
                },
                {
                    "sent": "Here is some more.",
                    "label": 0
                },
                {
                    "sent": "Evolved example.",
                    "label": 0
                },
                {
                    "sent": "Starting state as we have for two place relation symbol are in our vocabulary and we look at this formula.",
                    "label": 0
                },
                {
                    "sent": "It's it's a. Diamond formula and we have this iteration of this test test if X and set of are is true and then if that is the case.",
                    "label": 0
                },
                {
                    "sent": "Let X be assigned the value of set.",
                    "label": 0
                },
                {
                    "sent": "And you claim, and the claim is that after after this execution of this program, X should be equal to Y.",
                    "label": 0
                },
                {
                    "sent": "Now I meant to run through this and actually show that it is a transitive closure, but I'll skip that part.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "Maybe you want to try it out for yourself and ask me tomorrow and I can give you the.",
                    "label": 0
                },
                {
                    "sent": "Solution it's it's not complicated, it's just working out the definitions you have seen so far.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So that's all I wanted to cover on semantics.",
                    "label": 0
                },
                {
                    "sent": "And we have still 15 minutes to talk about logical consequence and tautology.",
                    "label": 0
                },
                {
                    "sent": "And this is a little bit more involved as you may have already heard, in modal logic there is more than one notion of logical consequence, and it's still a little bit more involved here because we have this domain of computation M. To think about.",
                    "label": 0
                },
                {
                    "sent": "And I will not go into all ramifications, but only show you 2 main strengths, the uninterpreted case, and then the interpreted case, the uninterpreted case.",
                    "label": 0
                },
                {
                    "sent": "Of course, like this, this is all the pieces of information that we have.",
                    "label": 0
                },
                {
                    "sent": "And the.",
                    "label": 0
                },
                {
                    "sent": "Notation.",
                    "label": 0
                },
                {
                    "sent": "1st, that's what you have already seen.",
                    "label": 0
                },
                {
                    "sent": "Instead, as formula F is true and that was a shorthand for.",
                    "label": 0
                },
                {
                    "sent": "In the crypto structure, KM.",
                    "label": 0
                },
                {
                    "sent": "In state, as the formula F is true.",
                    "label": 0
                },
                {
                    "sent": "We have never needed to be that precise.",
                    "label": 0
                },
                {
                    "sent": "Next definition is we say formula F is true in the crypto structure.",
                    "label": 0
                },
                {
                    "sent": "That means obviously it's true in all its states.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "Now we come to do a different level of notation.",
                    "label": 0
                },
                {
                    "sent": "F is valid.",
                    "label": 0
                },
                {
                    "sent": "And I use a different sign here.",
                    "label": 0
                },
                {
                    "sent": "That is to say, F is true in all crypto structures for all.",
                    "label": 0
                },
                {
                    "sent": "Models M offer our signature Sigma.",
                    "label": 0
                },
                {
                    "sent": "That's more like we what we, what we think validity should mean.",
                    "label": 0
                },
                {
                    "sent": "It should be true in all models, and here it's true in all crypto structures for all computations domains.",
                    "label": 0
                },
                {
                    "sent": "Of course this all computation domains is restricted for the moment by the signature.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "F is a logical consequence of of T. That's our official notion, so usually don't say locally if I talk about logical consequence, that's what I'm referring to, and it says for all domains of computation and Allstate South in the cream Kripke structure that goes with it.",
                    "label": 0
                },
                {
                    "sent": "If F satisfies T. Then it also satisfies that.",
                    "label": 0
                },
                {
                    "sent": "And here is the corresponding global definition.",
                    "label": 0
                },
                {
                    "sent": "The same thing for all computation domains, but now we say if.",
                    "label": 0
                },
                {
                    "sent": "The premise is our assumption.",
                    "label": 0
                },
                {
                    "sent": "She is true for all S, then F is true for all S. Which one is stronger?",
                    "label": 1
                },
                {
                    "sent": "Local or global?",
                    "label": 0
                },
                {
                    "sent": "If F is a local consequential T, is it also a global consequence?",
                    "label": 0
                },
                {
                    "sent": "Obviously this is by.",
                    "label": 0
                },
                {
                    "sent": "If that is true.",
                    "label": 0
                },
                {
                    "sent": "And we have this premise.",
                    "label": 0
                },
                {
                    "sent": "For less than local entailment tells us if she is true in status, then F has also to be true, and if that was true for all States and this is also true for all states.",
                    "label": 0
                },
                {
                    "sent": "But the other way around, it doesn't work.",
                    "label": 0
                },
                {
                    "sent": "So this is a strictly stronger notion, and that's the one we will stick to.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Here are some.",
                    "label": 0
                },
                {
                    "sent": "Technologies.",
                    "label": 0
                },
                {
                    "sent": "Let me just unravel all technologies.",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "You might want to try your hand improving that these are technologies that's nothing complicated.",
                    "label": 0
                },
                {
                    "sent": "Just look at the definitions I've given before.",
                    "label": 0
                },
                {
                    "sent": "And no trick involved whatsoever.",
                    "label": 0
                },
                {
                    "sent": "So this says, for example.",
                    "label": 0
                },
                {
                    "sent": "So that you can permute next essential quantifier with the diamond operator under the provision given given here.",
                    "label": 0
                },
                {
                    "sent": "Of course, if the variable X occurs in the program, then there's no no way to do anything.",
                    "label": 0
                },
                {
                    "sent": "This program could do anything to the value of X, and there could be no connection between the two formulas, but if that is true, then we can compute the existential quantifier and the diamond operator and the same thing is true for the universal quantifier in the box operator.",
                    "label": 0
                },
                {
                    "sent": "In other cases, like computing the existential quantifier with the box operator.",
                    "label": 0
                },
                {
                    "sent": "One reason is obvious One Direction.",
                    "label": 0
                },
                {
                    "sent": "One implication is obvious.",
                    "label": 0
                },
                {
                    "sent": "And if you think of it, the pattern behind this you have there exists.",
                    "label": 0
                },
                {
                    "sent": "For all I mean this for all successive states, so it's a pattern.",
                    "label": 0
                },
                {
                    "sent": "Exists for all.",
                    "label": 0
                },
                {
                    "sent": "That implies for all exists.",
                    "label": 0
                },
                {
                    "sent": "But the reverse implication that would be down here for all exists pattern implies exist for all parents, usually not true.",
                    "label": 0
                },
                {
                    "sent": "But it is true if we know that program Pi is deterministic.",
                    "label": 0
                },
                {
                    "sent": "And I haven't defined what deterministic is, but that's what you think.",
                    "label": 0
                },
                {
                    "sent": "What program and the program should be called at him?",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Here we have another valid formula that.",
                    "label": 1
                },
                {
                    "sent": "Who shows a little bit more of the complexity of dynamic logic formulas?",
                    "label": 0
                },
                {
                    "sent": "This is the first formula we see that has more than one model operator.",
                    "label": 0
                },
                {
                    "sent": "It starts with the box operator and then we have the diamond operator and again through this.",
                    "label": 0
                },
                {
                    "sent": "Formula says something if this.",
                    "label": 0
                },
                {
                    "sent": "Assumptions are true then.",
                    "label": 0
                },
                {
                    "sent": "Is this program terminates?",
                    "label": 0
                },
                {
                    "sent": "Let's go.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Come to the interpreted case.",
                    "label": 1
                },
                {
                    "sent": "What does it mean?",
                    "label": 0
                },
                {
                    "sent": "We have a domain of communication and we don't change it.",
                    "label": 0
                },
                {
                    "sent": "So validity now gets very simple concept, we say.",
                    "label": 0
                },
                {
                    "sent": "Formula F is invalid, M is now fixed domain of computation if and only if it's true and in the correct structure that that goes with it.",
                    "label": 0
                },
                {
                    "sent": "There is no notion of.",
                    "label": 0
                },
                {
                    "sent": "The formula is true in all structures.",
                    "label": 0
                },
                {
                    "sent": "It's true trusting in one structure.",
                    "label": 0
                },
                {
                    "sent": "And then we have the same.",
                    "label": 0
                },
                {
                    "sent": "Division into local implication and global implication.",
                    "label": 1
                },
                {
                    "sent": "Let me just repeat this.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "On the slide.",
                    "label": 0
                },
                {
                    "sent": "But why but why would you want to do this?",
                    "label": 0
                },
                {
                    "sent": "I mean, why would you want to consider the interpreted case?",
                    "label": 0
                },
                {
                    "sent": "For in program verification, that's.",
                    "label": 1
                },
                {
                    "sent": "Natural.",
                    "label": 0
                },
                {
                    "sent": "Program that manipulates some parts, like computing the salary of people and hiring entry.",
                    "label": 0
                },
                {
                    "sent": "Enter people in the list of employees and things like that.",
                    "label": 0
                },
                {
                    "sent": "But all the all the time you use, let's say the natural numbers.",
                    "label": 0
                },
                {
                    "sent": "And these don't change.",
                    "label": 0
                },
                {
                    "sent": "In programming languages, you don't have a way to change addition, you just use.",
                    "label": 0
                },
                {
                    "sent": "Addition cannot be changed, so in a strong sense this is the domain of computation and that's why you want to have something like a fixed interpretation.",
                    "label": 0
                },
                {
                    "sent": "Don't don't change it.",
                    "label": 0
                },
                {
                    "sent": "And in the fixed interpretation, and I have chosen here the favorite example of the domain of complete computation, the natural numbers.",
                    "label": 0
                },
                {
                    "sent": "With the usual operations and relations.",
                    "label": 0
                },
                {
                    "sent": "And then a few coffee.",
                    "label": 0
                },
                {
                    "sent": "Of course, you can write down a formula like this an it's a total T in the interpreted case.",
                    "label": 0
                },
                {
                    "sent": "Or you can say something like this.",
                    "label": 0
                },
                {
                    "sent": "There is no number between zero and one.",
                    "label": 0
                },
                {
                    "sent": "Or we have already seen that we can express the notion of a transitive closure using programs using a dynamic logic.",
                    "label": 1
                },
                {
                    "sent": "Have a clever design program that.",
                    "label": 0
                },
                {
                    "sent": "Describes for us transitive closure.",
                    "label": 0
                },
                {
                    "sent": "You can do the same thing if you have a fixed interpretation.",
                    "label": 0
                },
                {
                    "sent": "If you have some natural numbers and they don't change, then we can also define what is the transitive closure of the relation R and the way you do it.",
                    "label": 0
                },
                {
                    "sent": "You first describe three place relation.",
                    "label": 0
                },
                {
                    "sent": "This is to be read.",
                    "label": 0
                },
                {
                    "sent": "Her.",
                    "label": 0
                },
                {
                    "sent": "You can get from X to Y by set applications.",
                    "label": 0
                },
                {
                    "sent": "Set steps while the relation R. So if that is set is zero, there is no step, so X has to be why an in the other case?",
                    "label": 0
                },
                {
                    "sent": "If it said is greater than zero, then you get from X to Y first by.",
                    "label": 0
                },
                {
                    "sent": "There is an intermediate element.",
                    "label": 0
                },
                {
                    "sent": "That you get from X to the intermediate element in set minus one steps, and then you do one more step from this intermediate.",
                    "label": 0
                },
                {
                    "sent": "Element with U along so relationality.",
                    "label": 0
                },
                {
                    "sent": "And once you have this, you can write the transitive closure like this.",
                    "label": 0
                },
                {
                    "sent": "The pair XY isn't the transitive closure of the relation R if and only if there is a number that you can reach Y from set in.",
                    "label": 0
                },
                {
                    "sent": "By from X in set number of steps along the relation art.",
                    "label": 0
                },
                {
                    "sent": "What you see here I've given you the two cases, uninterpreted case, as the interpreted case.",
                    "label": 0
                },
                {
                    "sent": "What happens in reality, it's mixed.",
                    "label": 0
                },
                {
                    "sent": "So here we have, as I said, the fixed domain of computation.",
                    "label": 0
                },
                {
                    "sent": "What this relation are does not belong to the fixed domain of computation.",
                    "label": 0
                },
                {
                    "sent": "That could be any binary relation.",
                    "label": 0
                },
                {
                    "sent": "So already in system simple example we have a mixture of uninterpreted case.",
                    "label": 0
                },
                {
                    "sent": "This relation are could be any binary relation and only the rest is fixed.",
                    "label": 0
                },
                {
                    "sent": "So if I say.",
                    "label": 0
                },
                {
                    "sent": "In any structure, this formula defines the transitive closure that that is already more general statement.",
                    "label": 1
                },
                {
                    "sent": "For any situation, for any interpretation of the relation R, this formula will give you the transitive closure.",
                    "label": 0
                },
                {
                    "sent": "OK, I guess that's that was it.",
                    "label": 0
                },
                {
                    "sent": "For today.",
                    "label": 0
                },
                {
                    "sent": "We have 5 minutes for questions.",
                    "label": 0
                },
                {
                    "sent": "I could go back and we could have a look.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Add this why this is tautology?",
                    "label": 0
                },
                {
                    "sent": "Should we do it?",
                    "label": 0
                },
                {
                    "sent": "So we are back in the non interpreted case and what we have to do we look at.",
                    "label": 0
                },
                {
                    "sent": "Equip restructure Anna State S. And we have to show.",
                    "label": 0
                },
                {
                    "sent": "That's a formula.",
                    "label": 0
                },
                {
                    "sent": "It's written up here is true in US.",
                    "label": 0
                },
                {
                    "sent": "So what we do we first?",
                    "label": 0
                },
                {
                    "sent": "I'm not so used to.",
                    "label": 0
                },
                {
                    "sent": "Writing on a whiteboard.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "We assume we start in a state where X is equal to Y and we have this Community commutativity relation.",
                    "label": 0
                },
                {
                    "sent": "That if you first apply function T and then the function F, you get back to X.",
                    "label": 0
                },
                {
                    "sent": "Let me trust right here.",
                    "label": 0
                },
                {
                    "sent": "When formula X = y is true, instead F that means as its self is a function, so it has a value for X.",
                    "label": 1
                },
                {
                    "sent": "And it has a value for Y, so that is a consequence of this.",
                    "label": 0
                },
                {
                    "sent": "And what we want to show is.",
                    "label": 0
                },
                {
                    "sent": "Read this.",
                    "label": 0
                },
                {
                    "sent": "Formula is true.",
                    "label": 0
                },
                {
                    "sent": "This amounts to showing.",
                    "label": 0
                },
                {
                    "sent": "For all as one.",
                    "label": 0
                },
                {
                    "sent": "Such that the pair S and S1 is in the program in the box.",
                    "label": 0
                },
                {
                    "sent": "Come on.",
                    "label": 0
                },
                {
                    "sent": "So this is the.",
                    "label": 0
                },
                {
                    "sent": "While P is true of why?",
                    "label": 0
                },
                {
                    "sent": "Do.",
                    "label": 0
                },
                {
                    "sent": "Set why is the value of T of 1?",
                    "label": 0
                },
                {
                    "sent": "So for all S1 that are in the Accessibility relation of this first program.",
                    "label": 0
                },
                {
                    "sent": "Series and S2.",
                    "label": 0
                },
                {
                    "sent": "Such that we can get from S1 to S2 by the Accessibility relation of the program that's in the.",
                    "label": 0
                },
                {
                    "sent": "And the diamond operator.",
                    "label": 0
                },
                {
                    "sent": "While why is different from X to sign after the divisor value of F1?",
                    "label": 0
                },
                {
                    "sent": "You need not say there is something some formula true incy state as to of course the only half the logical constant.",
                    "label": 0
                },
                {
                    "sent": "So it says for every.",
                    "label": 0
                },
                {
                    "sent": "For any state S one that we can get to from S by this wild program.",
                    "label": 0
                },
                {
                    "sent": "There is another state as to where this program terminates.",
                    "label": 0
                },
                {
                    "sent": "Is this readable?",
                    "label": 0
                },
                {
                    "sent": "So I continue with elaborating on this.",
                    "label": 0
                },
                {
                    "sent": "What does it mean?",
                    "label": 0
                },
                {
                    "sent": "How it mean Siri?",
                    "label": 0
                },
                {
                    "sent": "So an N number of iterations of this while loop and there are intermediate States and I'll just write system.",
                    "label": 0
                },
                {
                    "sent": "So from here.",
                    "label": 0
                },
                {
                    "sent": "Both are men.",
                    "label": 0
                },
                {
                    "sent": "And now let me call this intermediate states you want to UN.",
                    "label": 0
                },
                {
                    "sent": "The first state is the state we start with.",
                    "label": 0
                },
                {
                    "sent": "This is.",
                    "label": 0
                },
                {
                    "sent": "This is so last state to state we want to end with.",
                    "label": 0
                },
                {
                    "sent": "This is S1.",
                    "label": 0
                },
                {
                    "sent": "And we have.",
                    "label": 0
                },
                {
                    "sent": "In UI.",
                    "label": 0
                },
                {
                    "sent": "PEO flies through.",
                    "label": 0
                },
                {
                    "sent": "For all I from 1 to N -- 1.",
                    "label": 0
                },
                {
                    "sent": "And we have for the last one.",
                    "label": 0
                },
                {
                    "sent": "You and.",
                    "label": 0
                },
                {
                    "sent": "PY is not true.",
                    "label": 0
                },
                {
                    "sent": "And we get from.",
                    "label": 0
                },
                {
                    "sent": "UI-2 UI browser plus one by doing doing this operation in the value of.",
                    "label": 0
                },
                {
                    "sent": "Why?",
                    "label": 0
                },
                {
                    "sent": "Instead you I lost one.",
                    "label": 0
                },
                {
                    "sent": "Is value of variable Y in state UI and applied tree of it?",
                    "label": 0
                },
                {
                    "sent": "And if you go through this, you will find out that.",
                    "label": 0
                },
                {
                    "sent": "UN of Y equals equals.",
                    "label": 0
                },
                {
                    "sent": "N -- 1 and minus one times.",
                    "label": 0
                },
                {
                    "sent": "Apply the function T2.",
                    "label": 0
                },
                {
                    "sent": "You won.",
                    "label": 0
                },
                {
                    "sent": "And since we know what you want UN and you want are you can say here.",
                    "label": 0
                },
                {
                    "sent": "Is one of Y equals.",
                    "label": 0
                },
                {
                    "sent": "Xi'an minus one of.",
                    "label": 0
                },
                {
                    "sent": "Yes, offline.",
                    "label": 0
                },
                {
                    "sent": "Grab that describes what the S1 isn't for all as one that do this, we have to find an S2.",
                    "label": 0
                },
                {
                    "sent": "Now, how do we describe the S2?",
                    "label": 0
                },
                {
                    "sent": "Find.",
                    "label": 0
                },
                {
                    "sent": "Have you have to?",
                    "label": 0
                },
                {
                    "sent": "In fact, we have to find more.",
                    "label": 0
                },
                {
                    "sent": "We want this wild program to terminate too, so we have to give intermediate states.",
                    "label": 0
                },
                {
                    "sent": "So I will give.",
                    "label": 0
                },
                {
                    "sent": "Or let's say we have to find.",
                    "label": 0
                },
                {
                    "sent": "States.",
                    "label": 0
                },
                {
                    "sent": "I called MW.",
                    "label": 0
                },
                {
                    "sent": "Now the number of iterations we in general would be open.",
                    "label": 0
                },
                {
                    "sent": "How often go be through this while loop?",
                    "label": 0
                },
                {
                    "sent": "We don't know, but it makes sense here to use the same end that we had before.",
                    "label": 0
                },
                {
                    "sent": "OK. And.",
                    "label": 0
                },
                {
                    "sent": "What is the?",
                    "label": 0
                },
                {
                    "sent": "How do we describe?",
                    "label": 0
                },
                {
                    "sent": "Via vai as only variable we are interested in is the variable Y, so only gives the definition of state WI for variable Y.",
                    "label": 0
                },
                {
                    "sent": "All the other variables are the same as in all the others before I mean, all states that we have seen on the blackboard only differ in their values of Y variables set or X never changed.",
                    "label": 0
                },
                {
                    "sent": "Here.",
                    "label": 0
                },
                {
                    "sent": "I guess what I want is F. I -- 1 off.",
                    "label": 0
                },
                {
                    "sent": "S1Y too big.",
                    "label": 0
                },
                {
                    "sent": "This defines the states W subway.",
                    "label": 0
                },
                {
                    "sent": "And what we what we can see from this state?",
                    "label": 0
                },
                {
                    "sent": "W one is exactly our starting state S1, because there is here you would have 0 nothing applied to it.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "We also we also see that from.",
                    "label": 0
                },
                {
                    "sent": "Passing from.",
                    "label": 0
                },
                {
                    "sent": "Y2Y plus one.",
                    "label": 0
                },
                {
                    "sent": "That's a pair that belongs into the Accessibility relation of the body of the wailupe.",
                    "label": 0
                },
                {
                    "sent": "That's why we chose this definition.",
                    "label": 0
                },
                {
                    "sent": "So the only problem is do we get termination at some point.",
                    "label": 0
                },
                {
                    "sent": "Military always have this.",
                    "label": 0
                },
                {
                    "sent": "Inequality then.",
                    "label": 0
                },
                {
                    "sent": "Via via last, we have to prove termination and what I want to show is that after N iterations in WN.",
                    "label": 0
                },
                {
                    "sent": "Off why is the same as WN?",
                    "label": 0
                },
                {
                    "sent": "Of X, that's what I claim.",
                    "label": 0
                },
                {
                    "sent": "Now let's look what is this?",
                    "label": 0
                },
                {
                    "sent": "By the definition I've given here, it's the same as F. N -- 1.",
                    "label": 0
                },
                {
                    "sent": "Office 1 of 1.",
                    "label": 0
                },
                {
                    "sent": "But what what was this is one of?",
                    "label": 0
                },
                {
                    "sent": "Why should be some variance of blackboard here?",
                    "label": 0
                },
                {
                    "sent": "That's.",
                    "label": 0
                },
                {
                    "sent": "T N -- 1 off.",
                    "label": 0
                },
                {
                    "sent": "As offline.",
                    "label": 0
                },
                {
                    "sent": "Never remember that we had an assumption on our status.",
                    "label": 0
                },
                {
                    "sent": "If you have first, if you apply first she and then F we get back to the same thing.",
                    "label": 0
                },
                {
                    "sent": "This shows that if you first apply end times 3, then end times after we get back to what we started with.",
                    "label": 0
                },
                {
                    "sent": "As of why, but we also now have that as of Y = F of X.",
                    "label": 0
                },
                {
                    "sent": "And this is the same thing.",
                    "label": 0
                },
                {
                    "sent": "WNFX the only variable whether states W there any different from the other states is the variable Y. on X it's the same.",
                    "label": 0
                },
                {
                    "sent": "OK, that's proofs.",
                    "label": 0
                },
                {
                    "sent": "This formula is a technology.",
                    "label": 0
                },
                {
                    "sent": "Do I have my?",
                    "label": 0
                },
                {
                    "sent": "Sing no, it's been waited too long.",
                    "label": 0
                },
                {
                    "sent": "OK, so this proof that this formula really is a tautology.",
                    "label": 0
                },
                {
                    "sent": "And we have, after all, finished Elektra for today.",
                    "label": 0
                },
                {
                    "sent": "And I'll meet you.",
                    "label": 0
                },
                {
                    "sent": "Tomorrow morning, same time, same room.",
                    "label": 0
                }
            ]
        }
    }
}