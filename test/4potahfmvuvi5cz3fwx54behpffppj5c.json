{
    "id": "4potahfmvuvi5cz3fwx54behpffppj5c",
    "title": "Logic, Automata & Games",
    "info": {
        "author": [
            "Sophie Pinchinat, IRISA"
        ],
        "published": "April 1, 2009",
        "recorded": "February 2009",
        "category": [
            "Top->Computer Science->Logic"
        ]
    },
    "url": "http://videolectures.net/ssll09_pinchinat_lag/",
    "segmentation": [
        [
            "OK he will.",
            "Right, OK, so when I starting so I'm so people Sheena.",
            "So my.",
            "My field of research is on logic, not only it's mainly on formal methods for system software verification and logic as you know is very, very important tool there because it is used as a specification language to describe the properties that you want to verify on your system.",
            "So.",
            "PC is it laptop so the.",
            "The lecture here is about.",
            "A very expressive logic which is a mu calculus.",
            "And the cannot work it.",
            "Yes, and the connection well.",
            "The way to let's say handle mu calculus in automated manner, because this is the purpose of formal verification is to derive automatic automated methods to verify the properties on objects that are programs.",
            "So you have two things you have.",
            "The will not make it today.",
            "You have the programs that.",
            "I mean described in the programming language and we restrict those programs to derive operational models.",
            "So you've already seen some of them.",
            "I believe in your lectures like Kripke structures for example, and we will see models that are trees when you have the models and you have the specification language.",
            "Given a logic, you have to connect both.",
            "Does the model that I have here satisfies for example, the formula that I've.",
            "Even in this language, so the idea is to have a mathematical, clean mathematical setting to deal with those things.",
            "So now what does he want this one?",
            "So the problem is that it's a. Blinking.",
            "Hello, so you're lucky because I cannot stop them.",
            "Should be better very soon.",
            "It's coming.",
            "Anyway.",
            "Great hope now.",
            "Well, this morning when I arrived it was fine now.",
            "Yeah.",
            "Yes.",
            "So here we are.",
            "Right, so now we can start.",
            "So the title of the of the lecture is about time in the connection that one can do between logic.",
            "Automata Lisa intimidatory tools that enable to handle manipulate logical formulas and how to reason and automata by using.",
            "Game tools"
        ],
        [
            "So feel free to interrupt of course and ask questions and have a whiteboard to maybe give some more precise, precise details on what I'm telling you.",
            "So the outline would be very simple.",
            "Will briefly I mean try to remember how we would use logic for programs.",
            "Then we will have.",
            "We will focus on a particular logic.",
            "The most expressive 11 can think of in a way for describing operational aspects of programs.",
            "So that's the new calculus.",
            "Then we will see Automata.",
            "As tools really connected so it will not be clear at the beginning how automate are connected to this logic, but that will be the purpose of say, the last part here when we go from the new calculus who alternating parity tree automata, special kind of automata and vice versa, and in between between automata that we can use already as objects to accept a language of models like you already know, but finite state automata.",
            "But except a finite set of finite words, you can have automata that accept.",
            "Sets of trees, finite trees, infinite trees.",
            "This will see and games are the tools that one we will use to answer questions on automata like membership or non emptiness of the language.",
            "So that's the that's the main part, OK?"
        ],
        [
            "So let me tell you about model checking, which is the main motivation for us to use logic for programs.",
            "So one of checking is very mean standard.",
            "Very well known problem now very well.",
            "I mean how do you say established problem?",
            "Well, you have whatever kind of mathematical framework you use.",
            "You have some.",
            "System which is represented in the model.",
            "So for example, for programs you can have the set of executions like sequences of events that the program can perform, finite or infinite depending on what you want to talk about.",
            "And you have also language.",
            "For specification, so that's what I've explained.",
            "And the mother checking.",
            "Is to decide.",
            "So you have some compute computation computational aspects there in this problem to decide whether this system satisfies this specification.",
            "So everything should be obviously given in a clear mathematical setting.",
            "Both the models and the specification language.",
            "So, deciding as you may know should know is to know whether there is an automated method or an algorithm to answer this.",
            "So obviously if you want to make things I mean.",
            "Practical.",
            "You mean usable in?",
            "You know reality in the real world.",
            "Deciding doesn't mean only that you have to know whether you this problem is decidable or not, but you also very interested in its complexity because you have to know if the problem is tractable or not.",
            "So this is the general picture.",
            "And so, here is an example.",
            "So I will show you how we naturally derive some models from programs.",
            "So it's a bit of a little introductive example where you start from something which reasonably looks like a program.",
            "And I will take you to mathematical models that we call operational ones where things that based on say States and transitions.",
            "So you may already have seen such things in your student life, but I don't know if this is a good occasion to tell it.",
            "So here I take a 2A program which is made in two pieces here.",
            "And they're going to be put together, so also something that I did not mention yet is that the programs that we look at in computer science are big objects and big objects made into pieces.",
            "That are then put together and that communicate or interact or whatever.",
            "So here is an example of the mutual Exclusion Protocol 11 Mutual Exclusion protocol solution.",
            "While you have two entities that aim at accessing some resource and this resource cannot be accessed simultaneously by the two.",
            "Entities, so they have to kind of.",
            "Have a way to take the turn 1 after the other so.",
            "So the program is written with.",
            "Here are the lines numbers, so they are very similar.",
            "There are two entities that want to share the same resource.",
            "You can think of any entities that would be the general general.",
            "Situation and what you have is that you have a kind of token.",
            "That is going to be assigned values on the value tells who's turn it is.",
            "So the idea is that here.",
            "Um?",
            "The you're in the states here, so this line of the program tells you what the program it's an abstraction of.",
            "The program.",
            "Of course, in this line tells you what's the problem is doing, but basically the only thing which we tell you is that the problem is not in its critical section.",
            "It means that what it does doesn't in the resource.",
            "Then it can evolve.",
            "And decide to need to access the resource.",
            "So the next possible state is to wait.",
            "But this entity this program waits for it to be allowed to access the resource, so it's it waits.",
            "Unless the turn is his turn.",
            "So John can be either equal to two one or two zero if it's 04 process one and choose one for process two.",
            "OK could have told one and two photon, but OK.",
            "This is the way the story is told in the literature.",
            "So what you have here.",
            "Is that I mean at some point?",
            "The entity weights and gets the turn, so it enters.",
            "Here in this state it enters the critical section.",
            "So Critical Section 1 means the.",
            "Bing the program is in the Oh no come on.",
            "So I have one thing I can try.",
            "Which may be this really?",
            "Seems to be better than rebooting the entire thing, but with him OK. Then I will write.",
            "OK, so I go quickly so the idea is to have this thing so intense is the critical section and when it exists it gives a turn to the other.",
            "Lots of possible protocol OK?",
            "And same for the other.",
            "So what do we have if we want to understand these two guys working together, what model can we have with the state and transitions?",
            "So that's the way we encode and this will motivate the abstract models we will deal with later.",
            "So the states of the program, the entire program with two entities working together is a bit vector.",
            "And what you have here in the Convention is to encode the situation where you have in which states the first processes in which state, the second one is and what's the value of turn.",
            "So then you have a big bit vector of size 5.",
            "OK, and you start from 0000, it means that you start from here, here and the convention that the turn is given first to process one.",
            "That's it, so that's the state OK?",
            "So we only have states.",
            "Now we can discuss transitions, but we will see how well transitions can be.",
            "For example, you can move from this state to the state 01000 because process one makes a move that takes him to a state where he's expecting to answer the mutual exclusion.",
            "The critical hit its own critical section while the critical section.",
            "OK so.",
            "Now you can have specifications, so what's the language can mean?",
            "What can I use as a language for the specification?",
            "I want to express something like a state of this kind, which means both processes are in their critical section and the turn is.",
            "I don't know whatever I want to tell you that this state cannot be reached because this is exactly what I don't want for mutual exclusion is that both states are in the critical section OK?",
            "I can also want to tell you something that always when the state of this kind, which means the first process is waiting for its turn.",
            "When I reach such such a state, well then I want later to reach another one of this kind.",
            "So B prime, C prime, D prime all the possible other values.",
            "But what I want to ensure that now the process one which expected to enter the critical section indeed, I mean, does it?",
            "Also I mean can tell you many stories about that, so that that's the kind of thing.",
            "So as soon as I have a model which is a state transition based model, I want to address this kind of specification."
        ],
        [
            "OK.",
            "So the formal approach, one of the possibilities, of course there are other ways, but one very standard way to do to deal with this is to use Kripke structures as models, so this you've seen already with a rash of grey.",
            "I believe on other other lectures as well and."
        ],
        [
            "Specification language we use temporal logic.",
            "So keep this structure briefly so that we agree on the on the notations.",
            "So you have states or words depending on if you want to talk about verification or if you want to talk about the epistemic logic or other kinds so vocabulary can differ a bit, but it's always like graph things like you know vertices and edges.",
            "Let's standard tools for computer science or even logic that talk about operational models.",
            "So you have states you have a transition relation between states.",
            "Sometimes the transition relation are.",
            "So it can be split into relations that are labeled like R_something like a letter that tells you that it's a event that makes you move from one word, one state to the other, and you have also something very important is the knowledge we have about the state, which is a you have a set of propositions that enable you to talk about things and you have a labeling of states with these propositions.",
            "Which tell you which propositions are true in that state.",
            "So the labeling says you you take your States and it gives me the set of propositions that are true in this set.",
            "And by convention, what is not in this set, the positions that are not in this set are false.",
            "And you have some time, because for computer computers and it's very important to have a notion of initial state.",
            "So you would distinguish one particular state among the set of states."
        ],
        [
            "Alright, so let's come back to the mutual exclusion.",
            "So we use two propositions.",
            "P1 and P2.",
            "Four, I mean each respectively.",
            "To tell you that.",
            "Process I is in, its waits for it's in the waiting instruction to enter the critical section.",
            "So P1 means process one is expecting to enter.",
            "Is waiting to enter the critical section.",
            "And this week before we use them too, for being in the critical section for the processes.",
            "So for example, if I take this state.",
            "With my encoding, well, it's simply a model in which.",
            "The first process is expecting to enter the second is in the critical section.",
            "And here I mean, the turn is given to the first the second process.",
            "So it's just to show you that.",
            "I mean, it's a matter of encoding and that's it, right?",
            "And the relation is well.",
            "I would move from one state to another state if.",
            "Say it's possible from, let's say, one process to make a move and enter the state.",
            "So if things.",
            "Looks clear to you."
        ],
        [
            "So this is another example which has nothing to do with the mutual Exclusion protocol.",
            "We now starting to be more and more abstract, so here I have simply.",
            "Two propositions in this model, whatever they mean.",
            "And here I give you the States and I don't give you the names of the states, I just give you what vector of propositions.",
            "What is the vector of the proposition.",
            "So the conversion is here.",
            "I'm in a state where proposition one is true and one and Proposition 2 is true as well.",
            "OK, and I can move from one state to the other.",
            "This is given by the arrows clear for everyone.",
            "Yeah."
        ],
        [
            "Right so now.",
            "On this kind of models you can.",
            "You can talk about many things you can talk about passes.",
            "Here, things that can happen in the model.",
            "So at first you would have here say a path.",
            "You have a cricket structure and you have some distinguished state here under path.",
            "For me you start with initial state and you keep going along along the arrows and given path with concrete states.",
            "I mean, I would associate a word here.",
            "Well here I have a let's say vector of of bits that tell me the positions that are true in the states.",
            "I've visited very simple.",
            "And here I can use notations that's here tells me OK if I have any propositions.",
            "Each state.",
            "Is given a bit of vectors.",
            "Over this meaning of size, N1 means the proposition the ice proposition is true zero.",
            "The ice proposition is false.",
            "And.",
            "So here.",
            "I have a world of this kind which tells me what.",
            "Situations regarding the propositions I've been across.",
            "OK, so it's a bit of notations.",
            "Here you will quietly have a look at the other nodes.",
            "It's only that I needed to say OK.",
            "I'm interested in the executions that that start at its ice suffix.",
            "For example, that would be the notation.",
            "So I take this word and I cut it at position.",
            "I also have here when I take a particular position here, a particular instant in time.",
            "I take a bitvector.",
            "And I'm interested in knowing whether properties, what's the value of Proposition J OK?",
            "So at instance I is proposition J true or false, or just look at this value?"
        ],
        [
            "And now this you've seen already, so we will go very fast unless you ask me explicitly to.",
            "To tell you again, the story or is it fine?",
            "So who would like to skip to go very quickly?",
            "12345 So what we can do is simply to jump.",
            "Because we don't really need it, it's more about.",
            "The formal is that I will introduce you to is subsumes those ones.",
            "And that's all I want to.",
            "I mean, that's the point only.",
            "So here you can.",
            "You can go in."
        ],
        [
            "It's it is told in a very, very standard manner.",
            "So just two sorry.",
            "Just to be clear about what we talk about.",
            "They are basically body.",
            "When I say temporal logics.",
            "What I have?"
        ],
        [
            "In mine is what's Raj I believe has explained to you.",
            "I think he has been up to City All-Star, right?",
            "Yes no.",
            "Who has attended Raj course Rajeev Gory OK, So what did he present to you?",
            "City of Star City Hall.",
            "OK, So what did you see?",
            "Like model logic?",
            "OK, you send in a temporal logic LTL this use it very good.",
            "OK, So what you have?",
            "So maybe it's important if I spend a very short time with this because then it's.",
            "I need more than what he did, so let me just recall you one thing here so I'll tell you fine with it.",
            "But do not."
        ],
        [
            "Nations maybe so this is.",
            "Propositions?",
            "That's a path.",
            "OK, it's a path and I start in some position in this path.",
            "So I started the ice position of the path and I consider the entire path, so the model is indeed linear structure.",
            "OK. With elements that are arranged like like a sequence and each element, I can talk about.",
            "So here if I tell you that the along the path Alpha.",
            "So let me draw very quickly.",
            "So the path Alpha starts like this.",
            "We said that's what's going on in A0, so it was a vector.",
            "You remember A1A two etc.",
            "So I tried, I decide to cut at position I, so that's Alpha I.",
            "Which starts here.",
            "Why do I do this?",
            "I do this because I will need to talk about.",
            "The next prefix when I will use the next operator on active formulas.",
            "So when I'm here, I can consider save this element here, which is a path and I can talk about weather here.",
            "Proposition PJ is true.",
            "So how do I know that?",
            "OK, I look at the.",
            "I would say the current situation in which I am.",
            "The rest corresponds to the future execution interested in.",
            "So I look at the current location.",
            "And I look so this is a bit vector and I'd look at the Jace, Jace position and I want to know whether there is one or not.",
            "So if there is one, I would say that Alpha.",
            "I satisfied PJ.",
            "OK, so.",
            "That's exactly what I've explained.",
            "Otherwise satisfies not not, not PJ, so this is.",
            "So not tells you I do not satisfy I if I I satisfied not verified notify OK five one sorry.",
            "So this I go.",
            "So that's the next operator, so this.",
            "Linear structure satisfies next file.",
            "1.",
            "If.",
            "If by shifting here the structure satisfies 5, so the semantics is given by induction.",
            "Over the formulas, so this should be clear to you, because that's Lt along.",
            "So in that shell we can express eventually something that's F or globally something which means.",
            "All along the computation, something holds OK and this is given with the until operator basically or the dual.",
            "Of right so."
        ],
        [
            "These are examples I skipped because you know, I."
        ],
        [
            "What you have is that you can go beyond LTL.",
            "By actually making you statements not depend dependent on a given future that you choose.",
            "So what does that mean?",
            "Remember we had structures where you had States and transitions outgoing the state clip you structure.",
            "So Intel is about choosing one execution in this structure, so it means you first choose an infinite path.",
            "And then you tell properties about it.",
            "So state.",
            "Branching time logics rather.",
            "Men.",
            "The view of launching time logic is to see the future as a branching object.",
            "So it doesn't mean it means that instead of choosing a particular future.",
            "You just interested in, in which point you are in the structure and you can tell about all possible passes.",
            "You can tell about the set of papers that start.",
            "From this state.",
            "So what you do?",
            "Is that you allow yourself to use some quantification over the set of possible paths that starts from the current state you're in.",
            "OK, very simple.",
            "So city Elstar simply says.",
            "So you take here.",
            "Something where you add simply an with the negation you would have the universal quantification as well.",
            "You simply say here.",
            "So this is going to be interpreted.",
            "Again along the path.",
            "But when I tell you that.",
            "Along a given sequence.",
            "I currently have the existence.",
            "I would best satisfying some formula.",
            "So this is your standard models.",
            "You're very familiar with, so that's my path Alpha.",
            "OK, I missed out that position I, but that's not a big issue.",
            "Think of just a path.",
            "And even in this path, I tell you that there exists a path.",
            "Which satisfies.",
            "Sigh subside, Now is a formula in this augmented logic.",
            "But think of Fi or just an Intel formula.",
            "It tells me only that from here the existed path, which may not be this one.",
            "It may be another one.",
            "In the structure.",
            "So it tells you that from here I mean where I am currently in this.",
            "I'm currently on an execution, but in this execution here.",
            "The May exists another future, and this branching thing.",
            "Is very important when you think of programs where the programs in is an open system and you have some user which is going to enter a value.",
            "Like the menu, what you want to do.",
            "You want to play first game second game for game please type.",
            "And you type and depending on what you type, the program execution will be very different.",
            "From another way would have typed OK, so given a program when you're in a given state considering possible futures, so some branching aspects.",
            "Of the execution is is worth a minute?",
            "It makes sense, so in this logic you can say there exists away and there exists a possible execution which may be one which which folks.",
            "From the one you currently looking at so that blah blah blah.",
            "So the blah blah blah is LTL formulas.",
            "But now that you have this ability to to use the.",
            "Quantification wherever you want.",
            "While you may, of course, here say that there exists a path where at some point.",
            "Satisfying sign on this site.",
            "If you if you go down side at some point you may say upside.",
            "Contains also for example Proposition P is true until.",
            "Proposition Q and Fall path something else.",
            "So here you have P all along then and then you reach you.",
            "And from now on, wherever you go.",
            "Say Prime will hold.",
            "OK, so it's much richer.",
            "You can talk about possible ways of evolving.",
            "And so, but the city and stuff.",
            "So this is only the only thing I wanted to tell you, and the logic we will look at enables to quantify over all possible successors in the structure.",
            "And that gives you a sort of branching time power.",
            "Is it OK so serious I do not enter the big tools Tableau methods for CTS star and many things what we will look at is something even more expressive.",
            "And TTL.",
            "Is.",
            "Oh, that's a very nice one here.",
            "Very good example of.",
            "Something which tells you that it's meaningful to talk about branching so.",
            "4 passes where you supposed to live to be alive.",
            "Affinity long like you have.",
            "How do you say immortality?",
            "Like thanks so for all for all.",
            "Infinites life win.",
            "Still I mean.",
            "So I I take a pass, so let me draw it because that's the way to understand branching time.",
            "It's very nice.",
            "So let's go.",
            "So we consider a path where.",
            "We consider we start from from somewhere in the structure.",
            "And we consider path Alpha while this whole so Alpha tells you OK from here.",
            "So as you understand, if I have a quantification, the future that I've chosen at the very beginning doesn't matter really, because if I talk about the existence or universal statements about the paths.",
            "Starting from the initial position of this path, actually it's only depends on this infrastructure, so there exists.",
            "I'm a branch fall, I branch.",
            "So here I'll tell you full passes.",
            "So let's take one.",
            "Not necessarily this one.",
            "If globally.",
            "I'm alive, so the purpose in life holds all along.",
            "It does mean that also on such passes.",
            "Whichever I take, that may be many, many others here where I am here because it's another globally.",
            "There exists a way, so there exists a path searching from here.",
            "So which branches?",
            "Possibly so that's here.",
            "This path is so that the next.",
            "In the next position.",
            "Proposition mean death.",
            "Holds so obviously if I enforce death and life not to be compatible, something like I never have death and life at the same time.",
            "The meaning is that here I have a way to live when infinitely long.",
            "But at each point in this life.",
            "There is some danger.",
            "So that's an example of what you can specify with the CTL star formula."
        ],
        [
            "Alright, so.",
            "Just check OK.",
            "So what we will use, you see in the pictures I've drawn is very natural to look at trees.",
            "So what do they come from, I mean.",
            "The trees are just natural expression of what you would have.",
            "I mean in mind also to to imagine that you follow future fuel, not a future mean you feel for you.",
            "Follow the reality here and at some point you have things at folk that can fork depending on whether you did this or this, you make choices.",
            "So today we start first cleaning my house and then work or work and cleaning.",
            "And obviously this choice will change the future.",
            "So what you have in mind is a model which is a branching.",
            "Time model.",
            "It's a tree, so to make the connection between the trees.",
            "And the operation models that have shown you like in general you have finite States and.",
            "Edges from one state to the other loop cycles and whatsoever.",
            "The trees are very simple.",
            "Object that you obtain by taking the Kripke structure and by unraveling.",
            "It so is it clear.",
            "So for example, if I take this.",
            "Typical structure and when I tell I unravel it.",
            "Simply takes me to a structure where OK, I will have to unravel this loop.",
            "It will be an infinite thing.",
            "OK, and at each.",
            "Position here I may take this branch and then be stuck.",
            "Or maybe.",
            "If you want also, I can also do this.",
            "So I have to call a bit because of the proposition so that we know where we are.",
            "But if I do this then from here what can I do?",
            "I can either come back here and again have this interesting structure and so OK Everywhere.",
            "And again come here, so you may play trying to draw this this this tree, but the tree is all possible future in the executions that you may derive from this final structure.",
            "So here we have an example.",
            "So what the tree contains basically here.",
            "It's not only the current state is the entire history to arrive here.",
            "What I did in this structure is that I've been moving from here to here and I've made one loop here, knowing that for us an arrow in a crisp Kripke structure corresponds to a move in the program or an action execution of some instruction, or.",
            "Right?",
            "So what we're interested in is indeed structure of this kind that trees.",
            "So to simplify the.",
            "I mean the presentation.",
            "Will not consider I mean arbitrary trees.",
            "Why?",
            "Because actually it can be done, but it's only a technical, laborious, tedious way of telling stories.",
            "So what I will do for the lecture is to focus on a particular tree.",
            "Which is what actually family of trees.",
            "Whether the underlying structure is the full binary tree.",
            "So this second I can motivate much more, so let me just.",
            "OK.",
            "So first let's let's have a look at the picture.",
            "So if you understand that because of lunch."
        ],
        [
            "Time logics we need to talk about trees.",
            "If I manage to show you a lot of good theoretical results, powerful things on binary trees, it will be after you will understand, at least on the binary tree it will be.",
            "A little exercise, only to imagine that you also would like to have a logic which ideally talks about.",
            "I mean trees that are obtained from.",
            "Here, not the right structure, which is not necessarily binary and full.",
            "Like here, the tree that I've drawn.",
            "OK, it's binary.",
            "I made it pretty well because I have only two outgoing branches or edges from each state, so I made it binary, but it's not full.",
            "For example, this one has no child.",
            "But I mean if you first trust me a bit.",
            "See the the the content of the theory with the full binary tree and then if you want.",
            "I mean we can quietly with having coffee, we can discuss how to make it with some more General Trees like structures, but it's not.",
            "It's not the difficult part, I would say, so we're going to stick to the full binary tree.",
            "OK, which nodes are going to be labeled?",
            "By information.",
            "That this information would correspond to the information.",
            "Well, it's any kind of information you can think of, but if you want to understand the binary tree as an object which has been derived from an unraveling of some cryptic crypt structure, which itself has been obtained by an attraction of a given program, texts on lines and numbers and encoding, so that's the entire story.",
            "What I want to have is that I want to have labels on nodes and let's do with labels like a.",
            "Here you can think of it as a set of propositions.",
            "Positions that hold.",
            "Now I mean at at this moment here this is 1/3 moment in the future.",
            "But of this particular future here.",
            "And what is true here?",
            "I look at AA is a set of propositions.",
            "And the propositions tell me whatever I mean, I'm in the critical section.",
            "The other one is expecting to answer.",
            "I don't know.",
            "OK.",
            "So the objects we're going to work with our.",
            "Trees which structure is the binary tree.",
            "But I can have arbitrarily many.",
            "Difference.",
            "Trees by choosing different labels of the notes.",
            "So you're fine with the models now.",
            "So only binary trees.",
            "So this is."
        ],
        [
            "The formal definition.",
            "So how do you define a tree?",
            "Did you have it already during the summer school?",
            "Did anybody need trees now so I do need trees so trees are crazy to define.",
            "If you want binary trees, you have to give me directions to go down the tree.",
            "So if I want to be binary I need two directions left or right or zero or one plus the same.",
            "If I want trees of degree Ki need K directions from zero to K -- 1 or 412K as you like.",
            "OK, so here what we have is that if I want to characterize the position in the in the in the tree in the full binary tree, I have to tell you how to go down so I can go down.",
            "So instead of left and right I would say zero and one so I couldn't go 00001.",
            "So I go left three times and then I turn right.",
            "Please give me the route to get to my node so it's fully characterizes the note OK."
        ],
        [
            "So for example here.",
            "The address if you like the address of this node is 01.",
            "So I give you a finite words over the alphabet.",
            "01"
        ],
        [
            "Here.",
            "So I give you a finite toward here it gives me a node in the tree, so the support the carrier.",
            "I don't know how to call it in English from Korea or something.",
            "That is the.",
            "Frame the frame of the tree.",
            "But anyway, you know the tree would say is composed of nodes that are simply given by the address.",
            "And how do I move from a node to its child?",
            "I simply add at the end of this address, either 0 if I want the left child or one if I want the right choice.",
            "That's that's a treat.",
            "Very simple.",
            "So and if I have made no move.",
            "From the top, the empty word is epsilon, and that's the root of the tree.",
            "Simply.",
            "So it's written like this, so it means an empty sequence of zero and one is the empty word, and it's the address of the root of this tree.",
            "Now if I want to to decorate my tree with informations by called Sigma, the set of informations I'm I'm using an, in General Sigma is taken finite.",
            "But of course, I mean there are theories that extends to.",
            "Find.",
            "Trees over infinite alphabets, but we we don't need it here.",
            "So I will.",
            "Label my notes with Sigma.",
            "Elements of Sigma and trees.",
            "Sigma R by definition, the full binary trees.",
            "With labels on those that are elements of signal, OK. Um?",
            "So in general.",
            "What people would take this is what I've explained to you here.",
            "If you want to come back from programs with propositions and blah blah blah, the labels of each node would be the subset of propositions that hold in this state.",
            "So remember."
        ],
        [
            "Out here.",
            "Actually a given note.",
            "May correspond, I mean, several nodes in the tree may correspond to the same current state in the program.",
            "Because look at."
        ],
        [
            "This is the way of unraveled this thing.",
            "Here I mean in this nodes the current state here is S2.",
            "Here is S1, sorry here S1.",
            "But what's also very important that we really do not exploit here in the in the setting is that in the tree, when I choose a node.",
            "On this, this node corresponds to.",
            "Note one is a trick response to an unraveling of some final structure operational structure.",
            "In this number have information of the current state, but I have also information about the past.",
            "Which tells me how I've reached this state.",
            "So here I'm both some.",
            "In both cases I mean state one S1.",
            "But here I've performed this instruction, which maybe I don't know maybe to increment some viable in my program whatever to to ask the user to give me another value, and you can see that here I'm in a state where I've asked the guy.",
            "I mean once to give me value or implemented ones, and here I did it twice.",
            "So the tree is very, very powerful regarding the executions of the program."
        ],
        [
            "OK.",
            "So now we enter the logic the mu calculus.",
            "Craig, it's just to start to define it so that you are fed for the first lecture.",
            "At least with the main object.",
            "So what is important to to remember, although we will not really.",
            "C will have elements.",
            "See why I claim that this logic is so powerful, but actually you would see a bit.",
            "Is that the formalism I give?",
            "You will subsume I mean?",
            "The temporal logics.",
            "You can think of all you may.",
            "You may encounter a new scientific life.",
            "It's it's assumed all the possible logics you can think of.",
            "Actually it has exactly the same power as Monadic 2nd order logic.",
            "She is very, very powerful.",
            "Over trees so.",
            "This is extra of the lecture, but you should remember that the mu calculus that I present you, whatever you can you, would be able to express on the full binary tree with monadic 2nd order logic.",
            "So you have second order quantification.",
            "It's a lot.",
            "Whatever you may be able to express in this logic.",
            "This can also be told in the mu calculus, but only on tree structures.",
            "If I take more complicated things like grids.",
            "The things that they can express with a missile when additional logic will not be able to.",
            "Express with the new calculus for the good reason that the mu calculus.",
            "Is a logic we talk about edge execu Tianshan future of the execution.",
            "So it means that it cannot make a difference between the grid or some unraveling of the grid as a tree.",
            "So the logic we're going to use is insensitive to unraveling.",
            "So what are the monadic 2nd order logic?",
            "Is is undecidable of a grids?",
            "You can close will remain decidable because actually doesn't talk about grids.",
            "It talks about.",
            "The tree that underlies.",
            "The operational model that is described by grid.",
            "OK, so it's it's really.",
            "It's less powerful than MSO, but if I choose my models as trees, it's as powerful as MSO.",
            "Right?",
            "So what is nice with the new calculus is that you can you have you can build in your your favorite modality.",
            "So let me explain."
        ],
        [
            "Just to introduce fixed points because it is based on fixed points, this logic I just consider CTL formula.",
            "Actually that is a city else or formula, but I call it city because it's it's in a well known fragmente.",
            "CTL, which is a bit simpler, it's over constraints and city Ella.",
            "Model checking is polynomial time central stories.",
            "Please PCP spacetime P space not be spacetime P space complete, so CTL is a very nice gentle logic people like and that's mostly what you find in model checkers like SMV, new SMV, whatever.",
            "All the tools that have been developed this last 20 years which would have led Edmund, Clark and Emerson and Joseph.",
            "Keys to have the Turing Award last year.",
            "So you know, there's always isn't inertia between discoveries and and we can hours, but.",
            "OK, so cityel.",
            "Is can there you can tell something that there exists a pathway eventually.",
            "Proposition P. Holt.",
            "So this is fine with you.",
            "Let me start from the root of my tree.",
            "There is a way to turn left, right, left.",
            "I don't know where and eventually come to a state or state node.",
            "Where proposition P holds so P. Where P holds it can we can think P belongs to the label of this.",
            "Of this note.",
            "So.",
            "Actually, what does this mean?",
            "So I have a way to tell you what it means to have a path.",
            "What even P proposition P eventually holds?",
            "It means well.",
            "Either my passes.",
            "I mean, PEO is already true now, which is.",
            "So I'm in my tree.",
            "That's my binary tree.",
            "So I I claim that this holds.",
            "So what?",
            "How can, how can we?",
            "So it can be that there is a path.",
            "What FP?",
            "So you know?",
            "I'll tell you that for P2 whole eventually it may be the case that people's now and which is true eventually is fulfilled.",
            "So either you have P here in this node.",
            "P's part of the labels of this node or P belongs to what if this is clear to you, so either P holds here.",
            "Or well, I have a.",
            "The existing path.",
            "So say the path which starts on the left.",
            "So there is a bus, say this one here.",
            "Whatever bus I choose, but there is 1 where actually.",
            "Here.",
            "At the next step here.",
            "There exists a path.",
            "Which will hit P. Because what does that mean?",
            "There exist a password.",
            "It won't really be holes.",
            "I mean either piece here or piece somewhere.",
            "So here.",
            "So what I claim is that, well, I know it's true here or I have a way to go either left or right.",
            "That's my thing here.",
            "There exists a path where.",
            "After one step.",
            "Well, I have a way too, so here it tells me that there is a subtree.",
            "Basically by this holds.",
            "So this is a fixed point equation in a way, because here you have a. Iproperty that is equivalent to a formula which also contains the property itself.",
            "So there's something like recursive here.",
            "And.",
            "So it is a fixed point.",
            "OK, this is a bit.",
            "Abstract for the moment, but actually.",
            "We can show that.",
            "Which fixed point is it if I if I if I say OK?",
            "This.",
            "This formula corresponds to all the nodes in my tree.",
            "Where this holds?",
            "So if I interpret my formula.",
            "As a subset.",
            "Of.",
            "Note all the notes for this hold.",
            "What do I mean by fixed point, I mean which set is it?",
            "It it must be the list set such that because obviously if I take all the nodes.",
            "So if I take this full set here.",
            "And if you put it here.",
            "Instead.",
            "If I claim that all the nodes, the set of all nodes is equal to the set of nodes, Wepay holds union.",
            "The set of nodes.",
            "Who have?",
            "One child.",
            "Which is in the set of nodes.",
            "This holds as well.",
            "So I mean there are many.",
            "Many ways to fulfill this fixed point equation.",
            "And what I want to.",
            "Really to have here.",
            "So that's just a feeling, but we will see formal aspects of this and what what I claim is that what this formula means.",
            "Is the list search set?",
            "So that blah blah.",
            "So I want to take exactly the sets that, well, the nodes were either P holds or they have a child.",
            "From which is also possible to reach, from which it is possible to reach P. And it's not an arbitrary fixed point is the list.",
            "So if I write an equation like this, zed is this set I'm interested in.",
            "So.",
            "Sorry this is appear.",
            "So the.",
            "I have an equation like this and I want to say look I want to fulfill this equation and I want to find the least solution of such equation.",
            "So in the new calculus.",
            "I would simply say the least fixed point of this thing here.",
            "Well with the P instead.",
            "Sorry, so we must correct it, so I thought I got rid of all the typos, at least on my slides.",
            "On the notes that you have, you still have a bit of work to do.",
            "That's the typo chaser hunting, which is very complicated.",
            "So in the mutual closer we say I want the list set of nodes.",
            "So that blah blah and this is interpreted as a formula.",
            "So.",
            "I will talk about fixed point then, but just to show you how to express this thing in the mu calculus, I just write it down like this and then we will stop because there is the next lecture.",
            "So in the new calculus, if I want to describe the set of nodes.",
            "So it's still in an informal and don't worry, I mean we will see the formal semantics of the new calculus, but I'm trying to motivate 1st and to start to introduce a bit of syntax, so I want the list.",
            "But this means the least fixed point.",
            "Of actually I will tell you I take a set of notes and I.",
            "Well, let me just write it mean straight, the least fixed point.",
            "So the list set of nodes such that either the notes were P holds or.",
            "There are notes for which.",
            "There exists a child mistrusting like this.",
            "Which is in this set.",
            "That's that's the way to write the list.",
            "Fixed point.",
            "Of this equation.",
            "That's just the notation musette mean the least fixed point of, and this isn't a potatoes that equal this expression.",
            "Self.",
            "That's it.",
            "So what I mean is that.",
            "In the logics.",
            "That have been very successful.",
            "Because they're simple, actually.",
            "The modalities are fixed.",
            "You have the next modality basic thing for model model, logical temporal logic to be able to talk about the future of the neighbors, I mean the neighbor.",
            "Words in cryptica structure.",
            "I mean to be able to have this.",
            "This change of situation.",
            "So you need this next operator.",
            "And then with the next next operator.",
            "You can build them in many things.",
            "So in some logics, those other things are given.",
            "As.",
            "I mean hardly encoded in the logic like in cityel.",
            "EF.",
            "Or if you like is building modalities, you can use F OK F is.",
            "Shortcut for two until Barbara.",
            "So you have until say which is very.",
            "I mean, given that's given in the logic, that's the only modality you have.",
            "And in the mu calculus, so I don't give you any such things, you build them.",
            "You build them by.",
            "By just telling I want the least fixpoint of this thing.",
            "I will be able to of course take some jewel respects like I want the the greatest fixed points of such thing.",
            "So I will.",
            "I will teach you.",
            "First, how things are defined, of course, but also how to express a bit of things in this logic.",
            "And then we will see that.",
            "OK, the formulas will be entrapped, interpreted in in trees and we will see that a logic has a set of models and we see that this set of models can also be characterized differently by pre automata.",
            "And then we'll see how such formulas can be translated in Automata and vice versa.",
            "That's the the picture.",
            "OK, so we're going to stop now.",
            "So are you all aware that there are changes in the schedule?",
            "No, OK, so this is very important.",
            "So Edwin Morris is has problems with his passport.",
            "He cannot make it to arrive today.",
            "Not tomorrow, so he's electrician, nonclassical logic.",
            "And it was supposed to be from 11:30 to 12:30 everyday.",
            "So what we've done to give him a chance to make it?",
            "Is that?",
            "We've put with with some men placed, moved, shifted all our lectures mine and also Peter Schmidt's lectures."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK he will.",
                    "label": 0
                },
                {
                    "sent": "Right, OK, so when I starting so I'm so people Sheena.",
                    "label": 0
                },
                {
                    "sent": "So my.",
                    "label": 0
                },
                {
                    "sent": "My field of research is on logic, not only it's mainly on formal methods for system software verification and logic as you know is very, very important tool there because it is used as a specification language to describe the properties that you want to verify on your system.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "PC is it laptop so the.",
                    "label": 0
                },
                {
                    "sent": "The lecture here is about.",
                    "label": 0
                },
                {
                    "sent": "A very expressive logic which is a mu calculus.",
                    "label": 0
                },
                {
                    "sent": "And the cannot work it.",
                    "label": 0
                },
                {
                    "sent": "Yes, and the connection well.",
                    "label": 0
                },
                {
                    "sent": "The way to let's say handle mu calculus in automated manner, because this is the purpose of formal verification is to derive automatic automated methods to verify the properties on objects that are programs.",
                    "label": 0
                },
                {
                    "sent": "So you have two things you have.",
                    "label": 0
                },
                {
                    "sent": "The will not make it today.",
                    "label": 0
                },
                {
                    "sent": "You have the programs that.",
                    "label": 0
                },
                {
                    "sent": "I mean described in the programming language and we restrict those programs to derive operational models.",
                    "label": 0
                },
                {
                    "sent": "So you've already seen some of them.",
                    "label": 0
                },
                {
                    "sent": "I believe in your lectures like Kripke structures for example, and we will see models that are trees when you have the models and you have the specification language.",
                    "label": 0
                },
                {
                    "sent": "Given a logic, you have to connect both.",
                    "label": 0
                },
                {
                    "sent": "Does the model that I have here satisfies for example, the formula that I've.",
                    "label": 0
                },
                {
                    "sent": "Even in this language, so the idea is to have a mathematical, clean mathematical setting to deal with those things.",
                    "label": 0
                },
                {
                    "sent": "So now what does he want this one?",
                    "label": 0
                },
                {
                    "sent": "So the problem is that it's a. Blinking.",
                    "label": 0
                },
                {
                    "sent": "Hello, so you're lucky because I cannot stop them.",
                    "label": 0
                },
                {
                    "sent": "Should be better very soon.",
                    "label": 0
                },
                {
                    "sent": "It's coming.",
                    "label": 0
                },
                {
                    "sent": "Anyway.",
                    "label": 0
                },
                {
                    "sent": "Great hope now.",
                    "label": 0
                },
                {
                    "sent": "Well, this morning when I arrived it was fine now.",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "Yes.",
                    "label": 0
                },
                {
                    "sent": "So here we are.",
                    "label": 0
                },
                {
                    "sent": "Right, so now we can start.",
                    "label": 0
                },
                {
                    "sent": "So the title of the of the lecture is about time in the connection that one can do between logic.",
                    "label": 0
                },
                {
                    "sent": "Automata Lisa intimidatory tools that enable to handle manipulate logical formulas and how to reason and automata by using.",
                    "label": 0
                },
                {
                    "sent": "Game tools",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So feel free to interrupt of course and ask questions and have a whiteboard to maybe give some more precise, precise details on what I'm telling you.",
                    "label": 0
                },
                {
                    "sent": "So the outline would be very simple.",
                    "label": 0
                },
                {
                    "sent": "Will briefly I mean try to remember how we would use logic for programs.",
                    "label": 0
                },
                {
                    "sent": "Then we will have.",
                    "label": 0
                },
                {
                    "sent": "We will focus on a particular logic.",
                    "label": 0
                },
                {
                    "sent": "The most expressive 11 can think of in a way for describing operational aspects of programs.",
                    "label": 0
                },
                {
                    "sent": "So that's the new calculus.",
                    "label": 0
                },
                {
                    "sent": "Then we will see Automata.",
                    "label": 0
                },
                {
                    "sent": "As tools really connected so it will not be clear at the beginning how automate are connected to this logic, but that will be the purpose of say, the last part here when we go from the new calculus who alternating parity tree automata, special kind of automata and vice versa, and in between between automata that we can use already as objects to accept a language of models like you already know, but finite state automata.",
                    "label": 1
                },
                {
                    "sent": "But except a finite set of finite words, you can have automata that accept.",
                    "label": 0
                },
                {
                    "sent": "Sets of trees, finite trees, infinite trees.",
                    "label": 1
                },
                {
                    "sent": "This will see and games are the tools that one we will use to answer questions on automata like membership or non emptiness of the language.",
                    "label": 0
                },
                {
                    "sent": "So that's the that's the main part, OK?",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So let me tell you about model checking, which is the main motivation for us to use logic for programs.",
                    "label": 0
                },
                {
                    "sent": "So one of checking is very mean standard.",
                    "label": 0
                },
                {
                    "sent": "Very well known problem now very well.",
                    "label": 0
                },
                {
                    "sent": "I mean how do you say established problem?",
                    "label": 0
                },
                {
                    "sent": "Well, you have whatever kind of mathematical framework you use.",
                    "label": 0
                },
                {
                    "sent": "You have some.",
                    "label": 0
                },
                {
                    "sent": "System which is represented in the model.",
                    "label": 0
                },
                {
                    "sent": "So for example, for programs you can have the set of executions like sequences of events that the program can perform, finite or infinite depending on what you want to talk about.",
                    "label": 0
                },
                {
                    "sent": "And you have also language.",
                    "label": 0
                },
                {
                    "sent": "For specification, so that's what I've explained.",
                    "label": 0
                },
                {
                    "sent": "And the mother checking.",
                    "label": 0
                },
                {
                    "sent": "Is to decide.",
                    "label": 0
                },
                {
                    "sent": "So you have some compute computation computational aspects there in this problem to decide whether this system satisfies this specification.",
                    "label": 0
                },
                {
                    "sent": "So everything should be obviously given in a clear mathematical setting.",
                    "label": 0
                },
                {
                    "sent": "Both the models and the specification language.",
                    "label": 0
                },
                {
                    "sent": "So, deciding as you may know should know is to know whether there is an automated method or an algorithm to answer this.",
                    "label": 0
                },
                {
                    "sent": "So obviously if you want to make things I mean.",
                    "label": 0
                },
                {
                    "sent": "Practical.",
                    "label": 0
                },
                {
                    "sent": "You mean usable in?",
                    "label": 0
                },
                {
                    "sent": "You know reality in the real world.",
                    "label": 0
                },
                {
                    "sent": "Deciding doesn't mean only that you have to know whether you this problem is decidable or not, but you also very interested in its complexity because you have to know if the problem is tractable or not.",
                    "label": 0
                },
                {
                    "sent": "So this is the general picture.",
                    "label": 0
                },
                {
                    "sent": "And so, here is an example.",
                    "label": 0
                },
                {
                    "sent": "So I will show you how we naturally derive some models from programs.",
                    "label": 0
                },
                {
                    "sent": "So it's a bit of a little introductive example where you start from something which reasonably looks like a program.",
                    "label": 0
                },
                {
                    "sent": "And I will take you to mathematical models that we call operational ones where things that based on say States and transitions.",
                    "label": 0
                },
                {
                    "sent": "So you may already have seen such things in your student life, but I don't know if this is a good occasion to tell it.",
                    "label": 0
                },
                {
                    "sent": "So here I take a 2A program which is made in two pieces here.",
                    "label": 0
                },
                {
                    "sent": "And they're going to be put together, so also something that I did not mention yet is that the programs that we look at in computer science are big objects and big objects made into pieces.",
                    "label": 0
                },
                {
                    "sent": "That are then put together and that communicate or interact or whatever.",
                    "label": 0
                },
                {
                    "sent": "So here is an example of the mutual Exclusion Protocol 11 Mutual Exclusion protocol solution.",
                    "label": 0
                },
                {
                    "sent": "While you have two entities that aim at accessing some resource and this resource cannot be accessed simultaneously by the two.",
                    "label": 0
                },
                {
                    "sent": "Entities, so they have to kind of.",
                    "label": 0
                },
                {
                    "sent": "Have a way to take the turn 1 after the other so.",
                    "label": 0
                },
                {
                    "sent": "So the program is written with.",
                    "label": 0
                },
                {
                    "sent": "Here are the lines numbers, so they are very similar.",
                    "label": 0
                },
                {
                    "sent": "There are two entities that want to share the same resource.",
                    "label": 0
                },
                {
                    "sent": "You can think of any entities that would be the general general.",
                    "label": 0
                },
                {
                    "sent": "Situation and what you have is that you have a kind of token.",
                    "label": 0
                },
                {
                    "sent": "That is going to be assigned values on the value tells who's turn it is.",
                    "label": 0
                },
                {
                    "sent": "So the idea is that here.",
                    "label": 0
                },
                {
                    "sent": "Um?",
                    "label": 0
                },
                {
                    "sent": "The you're in the states here, so this line of the program tells you what the program it's an abstraction of.",
                    "label": 0
                },
                {
                    "sent": "The program.",
                    "label": 0
                },
                {
                    "sent": "Of course, in this line tells you what's the problem is doing, but basically the only thing which we tell you is that the problem is not in its critical section.",
                    "label": 0
                },
                {
                    "sent": "It means that what it does doesn't in the resource.",
                    "label": 0
                },
                {
                    "sent": "Then it can evolve.",
                    "label": 0
                },
                {
                    "sent": "And decide to need to access the resource.",
                    "label": 0
                },
                {
                    "sent": "So the next possible state is to wait.",
                    "label": 0
                },
                {
                    "sent": "But this entity this program waits for it to be allowed to access the resource, so it's it waits.",
                    "label": 0
                },
                {
                    "sent": "Unless the turn is his turn.",
                    "label": 0
                },
                {
                    "sent": "So John can be either equal to two one or two zero if it's 04 process one and choose one for process two.",
                    "label": 0
                },
                {
                    "sent": "OK could have told one and two photon, but OK.",
                    "label": 0
                },
                {
                    "sent": "This is the way the story is told in the literature.",
                    "label": 0
                },
                {
                    "sent": "So what you have here.",
                    "label": 0
                },
                {
                    "sent": "Is that I mean at some point?",
                    "label": 0
                },
                {
                    "sent": "The entity weights and gets the turn, so it enters.",
                    "label": 0
                },
                {
                    "sent": "Here in this state it enters the critical section.",
                    "label": 0
                },
                {
                    "sent": "So Critical Section 1 means the.",
                    "label": 1
                },
                {
                    "sent": "Bing the program is in the Oh no come on.",
                    "label": 0
                },
                {
                    "sent": "So I have one thing I can try.",
                    "label": 0
                },
                {
                    "sent": "Which may be this really?",
                    "label": 0
                },
                {
                    "sent": "Seems to be better than rebooting the entire thing, but with him OK. Then I will write.",
                    "label": 0
                },
                {
                    "sent": "OK, so I go quickly so the idea is to have this thing so intense is the critical section and when it exists it gives a turn to the other.",
                    "label": 0
                },
                {
                    "sent": "Lots of possible protocol OK?",
                    "label": 0
                },
                {
                    "sent": "And same for the other.",
                    "label": 0
                },
                {
                    "sent": "So what do we have if we want to understand these two guys working together, what model can we have with the state and transitions?",
                    "label": 0
                },
                {
                    "sent": "So that's the way we encode and this will motivate the abstract models we will deal with later.",
                    "label": 0
                },
                {
                    "sent": "So the states of the program, the entire program with two entities working together is a bit vector.",
                    "label": 1
                },
                {
                    "sent": "And what you have here in the Convention is to encode the situation where you have in which states the first processes in which state, the second one is and what's the value of turn.",
                    "label": 0
                },
                {
                    "sent": "So then you have a big bit vector of size 5.",
                    "label": 0
                },
                {
                    "sent": "OK, and you start from 0000, it means that you start from here, here and the convention that the turn is given first to process one.",
                    "label": 0
                },
                {
                    "sent": "That's it, so that's the state OK?",
                    "label": 0
                },
                {
                    "sent": "So we only have states.",
                    "label": 0
                },
                {
                    "sent": "Now we can discuss transitions, but we will see how well transitions can be.",
                    "label": 0
                },
                {
                    "sent": "For example, you can move from this state to the state 01000 because process one makes a move that takes him to a state where he's expecting to answer the mutual exclusion.",
                    "label": 0
                },
                {
                    "sent": "The critical hit its own critical section while the critical section.",
                    "label": 0
                },
                {
                    "sent": "OK so.",
                    "label": 0
                },
                {
                    "sent": "Now you can have specifications, so what's the language can mean?",
                    "label": 0
                },
                {
                    "sent": "What can I use as a language for the specification?",
                    "label": 0
                },
                {
                    "sent": "I want to express something like a state of this kind, which means both processes are in their critical section and the turn is.",
                    "label": 0
                },
                {
                    "sent": "I don't know whatever I want to tell you that this state cannot be reached because this is exactly what I don't want for mutual exclusion is that both states are in the critical section OK?",
                    "label": 0
                },
                {
                    "sent": "I can also want to tell you something that always when the state of this kind, which means the first process is waiting for its turn.",
                    "label": 0
                },
                {
                    "sent": "When I reach such such a state, well then I want later to reach another one of this kind.",
                    "label": 0
                },
                {
                    "sent": "So B prime, C prime, D prime all the possible other values.",
                    "label": 0
                },
                {
                    "sent": "But what I want to ensure that now the process one which expected to enter the critical section indeed, I mean, does it?",
                    "label": 0
                },
                {
                    "sent": "Also I mean can tell you many stories about that, so that that's the kind of thing.",
                    "label": 0
                },
                {
                    "sent": "So as soon as I have a model which is a state transition based model, I want to address this kind of specification.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "So the formal approach, one of the possibilities, of course there are other ways, but one very standard way to do to deal with this is to use Kripke structures as models, so this you've seen already with a rash of grey.",
                    "label": 1
                },
                {
                    "sent": "I believe on other other lectures as well and.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Specification language we use temporal logic.",
                    "label": 0
                },
                {
                    "sent": "So keep this structure briefly so that we agree on the on the notations.",
                    "label": 0
                },
                {
                    "sent": "So you have states or words depending on if you want to talk about verification or if you want to talk about the epistemic logic or other kinds so vocabulary can differ a bit, but it's always like graph things like you know vertices and edges.",
                    "label": 0
                },
                {
                    "sent": "Let's standard tools for computer science or even logic that talk about operational models.",
                    "label": 0
                },
                {
                    "sent": "So you have states you have a transition relation between states.",
                    "label": 1
                },
                {
                    "sent": "Sometimes the transition relation are.",
                    "label": 0
                },
                {
                    "sent": "So it can be split into relations that are labeled like R_something like a letter that tells you that it's a event that makes you move from one word, one state to the other, and you have also something very important is the knowledge we have about the state, which is a you have a set of propositions that enable you to talk about things and you have a labeling of states with these propositions.",
                    "label": 1
                },
                {
                    "sent": "Which tell you which propositions are true in that state.",
                    "label": 1
                },
                {
                    "sent": "So the labeling says you you take your States and it gives me the set of propositions that are true in this set.",
                    "label": 0
                },
                {
                    "sent": "And by convention, what is not in this set, the positions that are not in this set are false.",
                    "label": 0
                },
                {
                    "sent": "And you have some time, because for computer computers and it's very important to have a notion of initial state.",
                    "label": 0
                },
                {
                    "sent": "So you would distinguish one particular state among the set of states.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Alright, so let's come back to the mutual exclusion.",
                    "label": 1
                },
                {
                    "sent": "So we use two propositions.",
                    "label": 0
                },
                {
                    "sent": "P1 and P2.",
                    "label": 0
                },
                {
                    "sent": "Four, I mean each respectively.",
                    "label": 0
                },
                {
                    "sent": "To tell you that.",
                    "label": 0
                },
                {
                    "sent": "Process I is in, its waits for it's in the waiting instruction to enter the critical section.",
                    "label": 0
                },
                {
                    "sent": "So P1 means process one is expecting to enter.",
                    "label": 0
                },
                {
                    "sent": "Is waiting to enter the critical section.",
                    "label": 1
                },
                {
                    "sent": "And this week before we use them too, for being in the critical section for the processes.",
                    "label": 1
                },
                {
                    "sent": "So for example, if I take this state.",
                    "label": 0
                },
                {
                    "sent": "With my encoding, well, it's simply a model in which.",
                    "label": 0
                },
                {
                    "sent": "The first process is expecting to enter the second is in the critical section.",
                    "label": 0
                },
                {
                    "sent": "And here I mean, the turn is given to the first the second process.",
                    "label": 0
                },
                {
                    "sent": "So it's just to show you that.",
                    "label": 0
                },
                {
                    "sent": "I mean, it's a matter of encoding and that's it, right?",
                    "label": 1
                },
                {
                    "sent": "And the relation is well.",
                    "label": 0
                },
                {
                    "sent": "I would move from one state to another state if.",
                    "label": 0
                },
                {
                    "sent": "Say it's possible from, let's say, one process to make a move and enter the state.",
                    "label": 0
                },
                {
                    "sent": "So if things.",
                    "label": 0
                },
                {
                    "sent": "Looks clear to you.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So this is another example which has nothing to do with the mutual Exclusion protocol.",
                    "label": 0
                },
                {
                    "sent": "We now starting to be more and more abstract, so here I have simply.",
                    "label": 0
                },
                {
                    "sent": "Two propositions in this model, whatever they mean.",
                    "label": 0
                },
                {
                    "sent": "And here I give you the States and I don't give you the names of the states, I just give you what vector of propositions.",
                    "label": 0
                },
                {
                    "sent": "What is the vector of the proposition.",
                    "label": 0
                },
                {
                    "sent": "So the conversion is here.",
                    "label": 0
                },
                {
                    "sent": "I'm in a state where proposition one is true and one and Proposition 2 is true as well.",
                    "label": 0
                },
                {
                    "sent": "OK, and I can move from one state to the other.",
                    "label": 0
                },
                {
                    "sent": "This is given by the arrows clear for everyone.",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Right so now.",
                    "label": 0
                },
                {
                    "sent": "On this kind of models you can.",
                    "label": 0
                },
                {
                    "sent": "You can talk about many things you can talk about passes.",
                    "label": 0
                },
                {
                    "sent": "Here, things that can happen in the model.",
                    "label": 0
                },
                {
                    "sent": "So at first you would have here say a path.",
                    "label": 0
                },
                {
                    "sent": "You have a cricket structure and you have some distinguished state here under path.",
                    "label": 0
                },
                {
                    "sent": "For me you start with initial state and you keep going along along the arrows and given path with concrete states.",
                    "label": 0
                },
                {
                    "sent": "I mean, I would associate a word here.",
                    "label": 0
                },
                {
                    "sent": "Well here I have a let's say vector of of bits that tell me the positions that are true in the states.",
                    "label": 0
                },
                {
                    "sent": "I've visited very simple.",
                    "label": 0
                },
                {
                    "sent": "And here I can use notations that's here tells me OK if I have any propositions.",
                    "label": 0
                },
                {
                    "sent": "Each state.",
                    "label": 0
                },
                {
                    "sent": "Is given a bit of vectors.",
                    "label": 0
                },
                {
                    "sent": "Over this meaning of size, N1 means the proposition the ice proposition is true zero.",
                    "label": 0
                },
                {
                    "sent": "The ice proposition is false.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "So here.",
                    "label": 0
                },
                {
                    "sent": "I have a world of this kind which tells me what.",
                    "label": 0
                },
                {
                    "sent": "Situations regarding the propositions I've been across.",
                    "label": 0
                },
                {
                    "sent": "OK, so it's a bit of notations.",
                    "label": 0
                },
                {
                    "sent": "Here you will quietly have a look at the other nodes.",
                    "label": 0
                },
                {
                    "sent": "It's only that I needed to say OK.",
                    "label": 0
                },
                {
                    "sent": "I'm interested in the executions that that start at its ice suffix.",
                    "label": 0
                },
                {
                    "sent": "For example, that would be the notation.",
                    "label": 0
                },
                {
                    "sent": "So I take this word and I cut it at position.",
                    "label": 0
                },
                {
                    "sent": "I also have here when I take a particular position here, a particular instant in time.",
                    "label": 0
                },
                {
                    "sent": "I take a bitvector.",
                    "label": 0
                },
                {
                    "sent": "And I'm interested in knowing whether properties, what's the value of Proposition J OK?",
                    "label": 0
                },
                {
                    "sent": "So at instance I is proposition J true or false, or just look at this value?",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And now this you've seen already, so we will go very fast unless you ask me explicitly to.",
                    "label": 0
                },
                {
                    "sent": "To tell you again, the story or is it fine?",
                    "label": 0
                },
                {
                    "sent": "So who would like to skip to go very quickly?",
                    "label": 0
                },
                {
                    "sent": "12345 So what we can do is simply to jump.",
                    "label": 0
                },
                {
                    "sent": "Because we don't really need it, it's more about.",
                    "label": 0
                },
                {
                    "sent": "The formal is that I will introduce you to is subsumes those ones.",
                    "label": 0
                },
                {
                    "sent": "And that's all I want to.",
                    "label": 0
                },
                {
                    "sent": "I mean, that's the point only.",
                    "label": 0
                },
                {
                    "sent": "So here you can.",
                    "label": 0
                },
                {
                    "sent": "You can go in.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "It's it is told in a very, very standard manner.",
                    "label": 0
                },
                {
                    "sent": "So just two sorry.",
                    "label": 0
                },
                {
                    "sent": "Just to be clear about what we talk about.",
                    "label": 0
                },
                {
                    "sent": "They are basically body.",
                    "label": 0
                },
                {
                    "sent": "When I say temporal logics.",
                    "label": 0
                },
                {
                    "sent": "What I have?",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "In mine is what's Raj I believe has explained to you.",
                    "label": 0
                },
                {
                    "sent": "I think he has been up to City All-Star, right?",
                    "label": 0
                },
                {
                    "sent": "Yes no.",
                    "label": 0
                },
                {
                    "sent": "Who has attended Raj course Rajeev Gory OK, So what did he present to you?",
                    "label": 0
                },
                {
                    "sent": "City of Star City Hall.",
                    "label": 0
                },
                {
                    "sent": "OK, So what did you see?",
                    "label": 0
                },
                {
                    "sent": "Like model logic?",
                    "label": 0
                },
                {
                    "sent": "OK, you send in a temporal logic LTL this use it very good.",
                    "label": 0
                },
                {
                    "sent": "OK, So what you have?",
                    "label": 0
                },
                {
                    "sent": "So maybe it's important if I spend a very short time with this because then it's.",
                    "label": 0
                },
                {
                    "sent": "I need more than what he did, so let me just recall you one thing here so I'll tell you fine with it.",
                    "label": 0
                },
                {
                    "sent": "But do not.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Nations maybe so this is.",
                    "label": 0
                },
                {
                    "sent": "Propositions?",
                    "label": 0
                },
                {
                    "sent": "That's a path.",
                    "label": 0
                },
                {
                    "sent": "OK, it's a path and I start in some position in this path.",
                    "label": 0
                },
                {
                    "sent": "So I started the ice position of the path and I consider the entire path, so the model is indeed linear structure.",
                    "label": 0
                },
                {
                    "sent": "OK. With elements that are arranged like like a sequence and each element, I can talk about.",
                    "label": 0
                },
                {
                    "sent": "So here if I tell you that the along the path Alpha.",
                    "label": 0
                },
                {
                    "sent": "So let me draw very quickly.",
                    "label": 0
                },
                {
                    "sent": "So the path Alpha starts like this.",
                    "label": 0
                },
                {
                    "sent": "We said that's what's going on in A0, so it was a vector.",
                    "label": 0
                },
                {
                    "sent": "You remember A1A two etc.",
                    "label": 0
                },
                {
                    "sent": "So I tried, I decide to cut at position I, so that's Alpha I.",
                    "label": 0
                },
                {
                    "sent": "Which starts here.",
                    "label": 0
                },
                {
                    "sent": "Why do I do this?",
                    "label": 0
                },
                {
                    "sent": "I do this because I will need to talk about.",
                    "label": 0
                },
                {
                    "sent": "The next prefix when I will use the next operator on active formulas.",
                    "label": 0
                },
                {
                    "sent": "So when I'm here, I can consider save this element here, which is a path and I can talk about weather here.",
                    "label": 0
                },
                {
                    "sent": "Proposition PJ is true.",
                    "label": 0
                },
                {
                    "sent": "So how do I know that?",
                    "label": 0
                },
                {
                    "sent": "OK, I look at the.",
                    "label": 0
                },
                {
                    "sent": "I would say the current situation in which I am.",
                    "label": 0
                },
                {
                    "sent": "The rest corresponds to the future execution interested in.",
                    "label": 0
                },
                {
                    "sent": "So I look at the current location.",
                    "label": 0
                },
                {
                    "sent": "And I look so this is a bit vector and I'd look at the Jace, Jace position and I want to know whether there is one or not.",
                    "label": 0
                },
                {
                    "sent": "So if there is one, I would say that Alpha.",
                    "label": 0
                },
                {
                    "sent": "I satisfied PJ.",
                    "label": 0
                },
                {
                    "sent": "OK, so.",
                    "label": 0
                },
                {
                    "sent": "That's exactly what I've explained.",
                    "label": 0
                },
                {
                    "sent": "Otherwise satisfies not not, not PJ, so this is.",
                    "label": 0
                },
                {
                    "sent": "So not tells you I do not satisfy I if I I satisfied not verified notify OK five one sorry.",
                    "label": 0
                },
                {
                    "sent": "So this I go.",
                    "label": 0
                },
                {
                    "sent": "So that's the next operator, so this.",
                    "label": 0
                },
                {
                    "sent": "Linear structure satisfies next file.",
                    "label": 0
                },
                {
                    "sent": "1.",
                    "label": 0
                },
                {
                    "sent": "If.",
                    "label": 0
                },
                {
                    "sent": "If by shifting here the structure satisfies 5, so the semantics is given by induction.",
                    "label": 0
                },
                {
                    "sent": "Over the formulas, so this should be clear to you, because that's Lt along.",
                    "label": 0
                },
                {
                    "sent": "So in that shell we can express eventually something that's F or globally something which means.",
                    "label": 0
                },
                {
                    "sent": "All along the computation, something holds OK and this is given with the until operator basically or the dual.",
                    "label": 0
                },
                {
                    "sent": "Of right so.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "These are examples I skipped because you know, I.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "What you have is that you can go beyond LTL.",
                    "label": 0
                },
                {
                    "sent": "By actually making you statements not depend dependent on a given future that you choose.",
                    "label": 0
                },
                {
                    "sent": "So what does that mean?",
                    "label": 0
                },
                {
                    "sent": "Remember we had structures where you had States and transitions outgoing the state clip you structure.",
                    "label": 0
                },
                {
                    "sent": "So Intel is about choosing one execution in this structure, so it means you first choose an infinite path.",
                    "label": 0
                },
                {
                    "sent": "And then you tell properties about it.",
                    "label": 0
                },
                {
                    "sent": "So state.",
                    "label": 0
                },
                {
                    "sent": "Branching time logics rather.",
                    "label": 0
                },
                {
                    "sent": "Men.",
                    "label": 0
                },
                {
                    "sent": "The view of launching time logic is to see the future as a branching object.",
                    "label": 0
                },
                {
                    "sent": "So it doesn't mean it means that instead of choosing a particular future.",
                    "label": 0
                },
                {
                    "sent": "You just interested in, in which point you are in the structure and you can tell about all possible passes.",
                    "label": 0
                },
                {
                    "sent": "You can tell about the set of papers that start.",
                    "label": 0
                },
                {
                    "sent": "From this state.",
                    "label": 0
                },
                {
                    "sent": "So what you do?",
                    "label": 0
                },
                {
                    "sent": "Is that you allow yourself to use some quantification over the set of possible paths that starts from the current state you're in.",
                    "label": 0
                },
                {
                    "sent": "OK, very simple.",
                    "label": 0
                },
                {
                    "sent": "So city Elstar simply says.",
                    "label": 0
                },
                {
                    "sent": "So you take here.",
                    "label": 0
                },
                {
                    "sent": "Something where you add simply an with the negation you would have the universal quantification as well.",
                    "label": 0
                },
                {
                    "sent": "You simply say here.",
                    "label": 0
                },
                {
                    "sent": "So this is going to be interpreted.",
                    "label": 0
                },
                {
                    "sent": "Again along the path.",
                    "label": 0
                },
                {
                    "sent": "But when I tell you that.",
                    "label": 0
                },
                {
                    "sent": "Along a given sequence.",
                    "label": 0
                },
                {
                    "sent": "I currently have the existence.",
                    "label": 0
                },
                {
                    "sent": "I would best satisfying some formula.",
                    "label": 0
                },
                {
                    "sent": "So this is your standard models.",
                    "label": 0
                },
                {
                    "sent": "You're very familiar with, so that's my path Alpha.",
                    "label": 0
                },
                {
                    "sent": "OK, I missed out that position I, but that's not a big issue.",
                    "label": 1
                },
                {
                    "sent": "Think of just a path.",
                    "label": 0
                },
                {
                    "sent": "And even in this path, I tell you that there exists a path.",
                    "label": 1
                },
                {
                    "sent": "Which satisfies.",
                    "label": 0
                },
                {
                    "sent": "Sigh subside, Now is a formula in this augmented logic.",
                    "label": 0
                },
                {
                    "sent": "But think of Fi or just an Intel formula.",
                    "label": 0
                },
                {
                    "sent": "It tells me only that from here the existed path, which may not be this one.",
                    "label": 0
                },
                {
                    "sent": "It may be another one.",
                    "label": 0
                },
                {
                    "sent": "In the structure.",
                    "label": 0
                },
                {
                    "sent": "So it tells you that from here I mean where I am currently in this.",
                    "label": 0
                },
                {
                    "sent": "I'm currently on an execution, but in this execution here.",
                    "label": 0
                },
                {
                    "sent": "The May exists another future, and this branching thing.",
                    "label": 0
                },
                {
                    "sent": "Is very important when you think of programs where the programs in is an open system and you have some user which is going to enter a value.",
                    "label": 1
                },
                {
                    "sent": "Like the menu, what you want to do.",
                    "label": 0
                },
                {
                    "sent": "You want to play first game second game for game please type.",
                    "label": 0
                },
                {
                    "sent": "And you type and depending on what you type, the program execution will be very different.",
                    "label": 0
                },
                {
                    "sent": "From another way would have typed OK, so given a program when you're in a given state considering possible futures, so some branching aspects.",
                    "label": 0
                },
                {
                    "sent": "Of the execution is is worth a minute?",
                    "label": 0
                },
                {
                    "sent": "It makes sense, so in this logic you can say there exists away and there exists a possible execution which may be one which which folks.",
                    "label": 0
                },
                {
                    "sent": "From the one you currently looking at so that blah blah blah.",
                    "label": 0
                },
                {
                    "sent": "So the blah blah blah is LTL formulas.",
                    "label": 0
                },
                {
                    "sent": "But now that you have this ability to to use the.",
                    "label": 0
                },
                {
                    "sent": "Quantification wherever you want.",
                    "label": 0
                },
                {
                    "sent": "While you may, of course, here say that there exists a path where at some point.",
                    "label": 0
                },
                {
                    "sent": "Satisfying sign on this site.",
                    "label": 0
                },
                {
                    "sent": "If you if you go down side at some point you may say upside.",
                    "label": 0
                },
                {
                    "sent": "Contains also for example Proposition P is true until.",
                    "label": 0
                },
                {
                    "sent": "Proposition Q and Fall path something else.",
                    "label": 0
                },
                {
                    "sent": "So here you have P all along then and then you reach you.",
                    "label": 0
                },
                {
                    "sent": "And from now on, wherever you go.",
                    "label": 0
                },
                {
                    "sent": "Say Prime will hold.",
                    "label": 0
                },
                {
                    "sent": "OK, so it's much richer.",
                    "label": 0
                },
                {
                    "sent": "You can talk about possible ways of evolving.",
                    "label": 0
                },
                {
                    "sent": "And so, but the city and stuff.",
                    "label": 1
                },
                {
                    "sent": "So this is only the only thing I wanted to tell you, and the logic we will look at enables to quantify over all possible successors in the structure.",
                    "label": 0
                },
                {
                    "sent": "And that gives you a sort of branching time power.",
                    "label": 0
                },
                {
                    "sent": "Is it OK so serious I do not enter the big tools Tableau methods for CTS star and many things what we will look at is something even more expressive.",
                    "label": 0
                },
                {
                    "sent": "And TTL.",
                    "label": 0
                },
                {
                    "sent": "Is.",
                    "label": 0
                },
                {
                    "sent": "Oh, that's a very nice one here.",
                    "label": 0
                },
                {
                    "sent": "Very good example of.",
                    "label": 0
                },
                {
                    "sent": "Something which tells you that it's meaningful to talk about branching so.",
                    "label": 0
                },
                {
                    "sent": "4 passes where you supposed to live to be alive.",
                    "label": 0
                },
                {
                    "sent": "Affinity long like you have.",
                    "label": 0
                },
                {
                    "sent": "How do you say immortality?",
                    "label": 0
                },
                {
                    "sent": "Like thanks so for all for all.",
                    "label": 0
                },
                {
                    "sent": "Infinites life win.",
                    "label": 0
                },
                {
                    "sent": "Still I mean.",
                    "label": 0
                },
                {
                    "sent": "So I I take a pass, so let me draw it because that's the way to understand branching time.",
                    "label": 0
                },
                {
                    "sent": "It's very nice.",
                    "label": 0
                },
                {
                    "sent": "So let's go.",
                    "label": 0
                },
                {
                    "sent": "So we consider a path where.",
                    "label": 0
                },
                {
                    "sent": "We consider we start from from somewhere in the structure.",
                    "label": 0
                },
                {
                    "sent": "And we consider path Alpha while this whole so Alpha tells you OK from here.",
                    "label": 0
                },
                {
                    "sent": "So as you understand, if I have a quantification, the future that I've chosen at the very beginning doesn't matter really, because if I talk about the existence or universal statements about the paths.",
                    "label": 0
                },
                {
                    "sent": "Starting from the initial position of this path, actually it's only depends on this infrastructure, so there exists.",
                    "label": 0
                },
                {
                    "sent": "I'm a branch fall, I branch.",
                    "label": 0
                },
                {
                    "sent": "So here I'll tell you full passes.",
                    "label": 0
                },
                {
                    "sent": "So let's take one.",
                    "label": 0
                },
                {
                    "sent": "Not necessarily this one.",
                    "label": 0
                },
                {
                    "sent": "If globally.",
                    "label": 0
                },
                {
                    "sent": "I'm alive, so the purpose in life holds all along.",
                    "label": 0
                },
                {
                    "sent": "It does mean that also on such passes.",
                    "label": 0
                },
                {
                    "sent": "Whichever I take, that may be many, many others here where I am here because it's another globally.",
                    "label": 0
                },
                {
                    "sent": "There exists a way, so there exists a path searching from here.",
                    "label": 0
                },
                {
                    "sent": "So which branches?",
                    "label": 0
                },
                {
                    "sent": "Possibly so that's here.",
                    "label": 0
                },
                {
                    "sent": "This path is so that the next.",
                    "label": 0
                },
                {
                    "sent": "In the next position.",
                    "label": 0
                },
                {
                    "sent": "Proposition mean death.",
                    "label": 0
                },
                {
                    "sent": "Holds so obviously if I enforce death and life not to be compatible, something like I never have death and life at the same time.",
                    "label": 0
                },
                {
                    "sent": "The meaning is that here I have a way to live when infinitely long.",
                    "label": 0
                },
                {
                    "sent": "But at each point in this life.",
                    "label": 0
                },
                {
                    "sent": "There is some danger.",
                    "label": 0
                },
                {
                    "sent": "So that's an example of what you can specify with the CTL star formula.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Alright, so.",
                    "label": 0
                },
                {
                    "sent": "Just check OK.",
                    "label": 0
                },
                {
                    "sent": "So what we will use, you see in the pictures I've drawn is very natural to look at trees.",
                    "label": 0
                },
                {
                    "sent": "So what do they come from, I mean.",
                    "label": 0
                },
                {
                    "sent": "The trees are just natural expression of what you would have.",
                    "label": 0
                },
                {
                    "sent": "I mean in mind also to to imagine that you follow future fuel, not a future mean you feel for you.",
                    "label": 0
                },
                {
                    "sent": "Follow the reality here and at some point you have things at folk that can fork depending on whether you did this or this, you make choices.",
                    "label": 0
                },
                {
                    "sent": "So today we start first cleaning my house and then work or work and cleaning.",
                    "label": 0
                },
                {
                    "sent": "And obviously this choice will change the future.",
                    "label": 0
                },
                {
                    "sent": "So what you have in mind is a model which is a branching.",
                    "label": 0
                },
                {
                    "sent": "Time model.",
                    "label": 0
                },
                {
                    "sent": "It's a tree, so to make the connection between the trees.",
                    "label": 1
                },
                {
                    "sent": "And the operation models that have shown you like in general you have finite States and.",
                    "label": 0
                },
                {
                    "sent": "Edges from one state to the other loop cycles and whatsoever.",
                    "label": 0
                },
                {
                    "sent": "The trees are very simple.",
                    "label": 0
                },
                {
                    "sent": "Object that you obtain by taking the Kripke structure and by unraveling.",
                    "label": 0
                },
                {
                    "sent": "It so is it clear.",
                    "label": 0
                },
                {
                    "sent": "So for example, if I take this.",
                    "label": 0
                },
                {
                    "sent": "Typical structure and when I tell I unravel it.",
                    "label": 0
                },
                {
                    "sent": "Simply takes me to a structure where OK, I will have to unravel this loop.",
                    "label": 0
                },
                {
                    "sent": "It will be an infinite thing.",
                    "label": 0
                },
                {
                    "sent": "OK, and at each.",
                    "label": 0
                },
                {
                    "sent": "Position here I may take this branch and then be stuck.",
                    "label": 0
                },
                {
                    "sent": "Or maybe.",
                    "label": 0
                },
                {
                    "sent": "If you want also, I can also do this.",
                    "label": 0
                },
                {
                    "sent": "So I have to call a bit because of the proposition so that we know where we are.",
                    "label": 0
                },
                {
                    "sent": "But if I do this then from here what can I do?",
                    "label": 0
                },
                {
                    "sent": "I can either come back here and again have this interesting structure and so OK Everywhere.",
                    "label": 0
                },
                {
                    "sent": "And again come here, so you may play trying to draw this this this tree, but the tree is all possible future in the executions that you may derive from this final structure.",
                    "label": 1
                },
                {
                    "sent": "So here we have an example.",
                    "label": 0
                },
                {
                    "sent": "So what the tree contains basically here.",
                    "label": 0
                },
                {
                    "sent": "It's not only the current state is the entire history to arrive here.",
                    "label": 0
                },
                {
                    "sent": "What I did in this structure is that I've been moving from here to here and I've made one loop here, knowing that for us an arrow in a crisp Kripke structure corresponds to a move in the program or an action execution of some instruction, or.",
                    "label": 0
                },
                {
                    "sent": "Right?",
                    "label": 0
                },
                {
                    "sent": "So what we're interested in is indeed structure of this kind that trees.",
                    "label": 0
                },
                {
                    "sent": "So to simplify the.",
                    "label": 0
                },
                {
                    "sent": "I mean the presentation.",
                    "label": 0
                },
                {
                    "sent": "Will not consider I mean arbitrary trees.",
                    "label": 0
                },
                {
                    "sent": "Why?",
                    "label": 0
                },
                {
                    "sent": "Because actually it can be done, but it's only a technical, laborious, tedious way of telling stories.",
                    "label": 0
                },
                {
                    "sent": "So what I will do for the lecture is to focus on a particular tree.",
                    "label": 0
                },
                {
                    "sent": "Which is what actually family of trees.",
                    "label": 0
                },
                {
                    "sent": "Whether the underlying structure is the full binary tree.",
                    "label": 0
                },
                {
                    "sent": "So this second I can motivate much more, so let me just.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "So first let's let's have a look at the picture.",
                    "label": 0
                },
                {
                    "sent": "So if you understand that because of lunch.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Time logics we need to talk about trees.",
                    "label": 0
                },
                {
                    "sent": "If I manage to show you a lot of good theoretical results, powerful things on binary trees, it will be after you will understand, at least on the binary tree it will be.",
                    "label": 0
                },
                {
                    "sent": "A little exercise, only to imagine that you also would like to have a logic which ideally talks about.",
                    "label": 0
                },
                {
                    "sent": "I mean trees that are obtained from.",
                    "label": 0
                },
                {
                    "sent": "Here, not the right structure, which is not necessarily binary and full.",
                    "label": 0
                },
                {
                    "sent": "Like here, the tree that I've drawn.",
                    "label": 0
                },
                {
                    "sent": "OK, it's binary.",
                    "label": 0
                },
                {
                    "sent": "I made it pretty well because I have only two outgoing branches or edges from each state, so I made it binary, but it's not full.",
                    "label": 0
                },
                {
                    "sent": "For example, this one has no child.",
                    "label": 0
                },
                {
                    "sent": "But I mean if you first trust me a bit.",
                    "label": 1
                },
                {
                    "sent": "See the the the content of the theory with the full binary tree and then if you want.",
                    "label": 0
                },
                {
                    "sent": "I mean we can quietly with having coffee, we can discuss how to make it with some more General Trees like structures, but it's not.",
                    "label": 0
                },
                {
                    "sent": "It's not the difficult part, I would say, so we're going to stick to the full binary tree.",
                    "label": 0
                },
                {
                    "sent": "OK, which nodes are going to be labeled?",
                    "label": 0
                },
                {
                    "sent": "By information.",
                    "label": 0
                },
                {
                    "sent": "That this information would correspond to the information.",
                    "label": 0
                },
                {
                    "sent": "Well, it's any kind of information you can think of, but if you want to understand the binary tree as an object which has been derived from an unraveling of some cryptic crypt structure, which itself has been obtained by an attraction of a given program, texts on lines and numbers and encoding, so that's the entire story.",
                    "label": 0
                },
                {
                    "sent": "What I want to have is that I want to have labels on nodes and let's do with labels like a.",
                    "label": 0
                },
                {
                    "sent": "Here you can think of it as a set of propositions.",
                    "label": 1
                },
                {
                    "sent": "Positions that hold.",
                    "label": 0
                },
                {
                    "sent": "Now I mean at at this moment here this is 1/3 moment in the future.",
                    "label": 0
                },
                {
                    "sent": "But of this particular future here.",
                    "label": 0
                },
                {
                    "sent": "And what is true here?",
                    "label": 0
                },
                {
                    "sent": "I look at AA is a set of propositions.",
                    "label": 1
                },
                {
                    "sent": "And the propositions tell me whatever I mean, I'm in the critical section.",
                    "label": 0
                },
                {
                    "sent": "The other one is expecting to answer.",
                    "label": 0
                },
                {
                    "sent": "I don't know.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 1
                },
                {
                    "sent": "So the objects we're going to work with our.",
                    "label": 0
                },
                {
                    "sent": "Trees which structure is the binary tree.",
                    "label": 0
                },
                {
                    "sent": "But I can have arbitrarily many.",
                    "label": 0
                },
                {
                    "sent": "Difference.",
                    "label": 0
                },
                {
                    "sent": "Trees by choosing different labels of the notes.",
                    "label": 0
                },
                {
                    "sent": "So you're fine with the models now.",
                    "label": 0
                },
                {
                    "sent": "So only binary trees.",
                    "label": 0
                },
                {
                    "sent": "So this is.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "The formal definition.",
                    "label": 0
                },
                {
                    "sent": "So how do you define a tree?",
                    "label": 0
                },
                {
                    "sent": "Did you have it already during the summer school?",
                    "label": 0
                },
                {
                    "sent": "Did anybody need trees now so I do need trees so trees are crazy to define.",
                    "label": 0
                },
                {
                    "sent": "If you want binary trees, you have to give me directions to go down the tree.",
                    "label": 1
                },
                {
                    "sent": "So if I want to be binary I need two directions left or right or zero or one plus the same.",
                    "label": 0
                },
                {
                    "sent": "If I want trees of degree Ki need K directions from zero to K -- 1 or 412K as you like.",
                    "label": 1
                },
                {
                    "sent": "OK, so here what we have is that if I want to characterize the position in the in the in the tree in the full binary tree, I have to tell you how to go down so I can go down.",
                    "label": 1
                },
                {
                    "sent": "So instead of left and right I would say zero and one so I couldn't go 00001.",
                    "label": 0
                },
                {
                    "sent": "So I go left three times and then I turn right.",
                    "label": 0
                },
                {
                    "sent": "Please give me the route to get to my node so it's fully characterizes the note OK.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So for example here.",
                    "label": 0
                },
                {
                    "sent": "The address if you like the address of this node is 01.",
                    "label": 0
                },
                {
                    "sent": "So I give you a finite words over the alphabet.",
                    "label": 0
                },
                {
                    "sent": "01",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Here.",
                    "label": 0
                },
                {
                    "sent": "So I give you a finite toward here it gives me a node in the tree, so the support the carrier.",
                    "label": 0
                },
                {
                    "sent": "I don't know how to call it in English from Korea or something.",
                    "label": 0
                },
                {
                    "sent": "That is the.",
                    "label": 0
                },
                {
                    "sent": "Frame the frame of the tree.",
                    "label": 0
                },
                {
                    "sent": "But anyway, you know the tree would say is composed of nodes that are simply given by the address.",
                    "label": 0
                },
                {
                    "sent": "And how do I move from a node to its child?",
                    "label": 1
                },
                {
                    "sent": "I simply add at the end of this address, either 0 if I want the left child or one if I want the right choice.",
                    "label": 0
                },
                {
                    "sent": "That's that's a treat.",
                    "label": 0
                },
                {
                    "sent": "Very simple.",
                    "label": 0
                },
                {
                    "sent": "So and if I have made no move.",
                    "label": 0
                },
                {
                    "sent": "From the top, the empty word is epsilon, and that's the root of the tree.",
                    "label": 0
                },
                {
                    "sent": "Simply.",
                    "label": 0
                },
                {
                    "sent": "So it's written like this, so it means an empty sequence of zero and one is the empty word, and it's the address of the root of this tree.",
                    "label": 1
                },
                {
                    "sent": "Now if I want to to decorate my tree with informations by called Sigma, the set of informations I'm I'm using an, in General Sigma is taken finite.",
                    "label": 0
                },
                {
                    "sent": "But of course, I mean there are theories that extends to.",
                    "label": 0
                },
                {
                    "sent": "Find.",
                    "label": 0
                },
                {
                    "sent": "Trees over infinite alphabets, but we we don't need it here.",
                    "label": 0
                },
                {
                    "sent": "So I will.",
                    "label": 0
                },
                {
                    "sent": "Label my notes with Sigma.",
                    "label": 0
                },
                {
                    "sent": "Elements of Sigma and trees.",
                    "label": 1
                },
                {
                    "sent": "Sigma R by definition, the full binary trees.",
                    "label": 0
                },
                {
                    "sent": "With labels on those that are elements of signal, OK. Um?",
                    "label": 0
                },
                {
                    "sent": "So in general.",
                    "label": 0
                },
                {
                    "sent": "What people would take this is what I've explained to you here.",
                    "label": 0
                },
                {
                    "sent": "If you want to come back from programs with propositions and blah blah blah, the labels of each node would be the subset of propositions that hold in this state.",
                    "label": 0
                },
                {
                    "sent": "So remember.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Out here.",
                    "label": 0
                },
                {
                    "sent": "Actually a given note.",
                    "label": 0
                },
                {
                    "sent": "May correspond, I mean, several nodes in the tree may correspond to the same current state in the program.",
                    "label": 0
                },
                {
                    "sent": "Because look at.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This is the way of unraveled this thing.",
                    "label": 0
                },
                {
                    "sent": "Here I mean in this nodes the current state here is S2.",
                    "label": 0
                },
                {
                    "sent": "Here is S1, sorry here S1.",
                    "label": 0
                },
                {
                    "sent": "But what's also very important that we really do not exploit here in the in the setting is that in the tree, when I choose a node.",
                    "label": 0
                },
                {
                    "sent": "On this, this node corresponds to.",
                    "label": 0
                },
                {
                    "sent": "Note one is a trick response to an unraveling of some final structure operational structure.",
                    "label": 0
                },
                {
                    "sent": "In this number have information of the current state, but I have also information about the past.",
                    "label": 0
                },
                {
                    "sent": "Which tells me how I've reached this state.",
                    "label": 0
                },
                {
                    "sent": "So here I'm both some.",
                    "label": 0
                },
                {
                    "sent": "In both cases I mean state one S1.",
                    "label": 0
                },
                {
                    "sent": "But here I've performed this instruction, which maybe I don't know maybe to increment some viable in my program whatever to to ask the user to give me another value, and you can see that here I'm in a state where I've asked the guy.",
                    "label": 0
                },
                {
                    "sent": "I mean once to give me value or implemented ones, and here I did it twice.",
                    "label": 0
                },
                {
                    "sent": "So the tree is very, very powerful regarding the executions of the program.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "So now we enter the logic the mu calculus.",
                    "label": 0
                },
                {
                    "sent": "Craig, it's just to start to define it so that you are fed for the first lecture.",
                    "label": 0
                },
                {
                    "sent": "At least with the main object.",
                    "label": 0
                },
                {
                    "sent": "So what is important to to remember, although we will not really.",
                    "label": 0
                },
                {
                    "sent": "C will have elements.",
                    "label": 0
                },
                {
                    "sent": "See why I claim that this logic is so powerful, but actually you would see a bit.",
                    "label": 0
                },
                {
                    "sent": "Is that the formalism I give?",
                    "label": 0
                },
                {
                    "sent": "You will subsume I mean?",
                    "label": 0
                },
                {
                    "sent": "The temporal logics.",
                    "label": 0
                },
                {
                    "sent": "You can think of all you may.",
                    "label": 0
                },
                {
                    "sent": "You may encounter a new scientific life.",
                    "label": 0
                },
                {
                    "sent": "It's it's assumed all the possible logics you can think of.",
                    "label": 0
                },
                {
                    "sent": "Actually it has exactly the same power as Monadic 2nd order logic.",
                    "label": 0
                },
                {
                    "sent": "She is very, very powerful.",
                    "label": 0
                },
                {
                    "sent": "Over trees so.",
                    "label": 0
                },
                {
                    "sent": "This is extra of the lecture, but you should remember that the mu calculus that I present you, whatever you can you, would be able to express on the full binary tree with monadic 2nd order logic.",
                    "label": 0
                },
                {
                    "sent": "So you have second order quantification.",
                    "label": 0
                },
                {
                    "sent": "It's a lot.",
                    "label": 0
                },
                {
                    "sent": "Whatever you may be able to express in this logic.",
                    "label": 0
                },
                {
                    "sent": "This can also be told in the mu calculus, but only on tree structures.",
                    "label": 0
                },
                {
                    "sent": "If I take more complicated things like grids.",
                    "label": 0
                },
                {
                    "sent": "The things that they can express with a missile when additional logic will not be able to.",
                    "label": 1
                },
                {
                    "sent": "Express with the new calculus for the good reason that the mu calculus.",
                    "label": 1
                },
                {
                    "sent": "Is a logic we talk about edge execu Tianshan future of the execution.",
                    "label": 0
                },
                {
                    "sent": "So it means that it cannot make a difference between the grid or some unraveling of the grid as a tree.",
                    "label": 1
                },
                {
                    "sent": "So the logic we're going to use is insensitive to unraveling.",
                    "label": 0
                },
                {
                    "sent": "So what are the monadic 2nd order logic?",
                    "label": 1
                },
                {
                    "sent": "Is is undecidable of a grids?",
                    "label": 0
                },
                {
                    "sent": "You can close will remain decidable because actually doesn't talk about grids.",
                    "label": 0
                },
                {
                    "sent": "It talks about.",
                    "label": 0
                },
                {
                    "sent": "The tree that underlies.",
                    "label": 0
                },
                {
                    "sent": "The operational model that is described by grid.",
                    "label": 0
                },
                {
                    "sent": "OK, so it's it's really.",
                    "label": 0
                },
                {
                    "sent": "It's less powerful than MSO, but if I choose my models as trees, it's as powerful as MSO.",
                    "label": 0
                },
                {
                    "sent": "Right?",
                    "label": 0
                },
                {
                    "sent": "So what is nice with the new calculus is that you can you have you can build in your your favorite modality.",
                    "label": 0
                },
                {
                    "sent": "So let me explain.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Just to introduce fixed points because it is based on fixed points, this logic I just consider CTL formula.",
                    "label": 0
                },
                {
                    "sent": "Actually that is a city else or formula, but I call it city because it's it's in a well known fragmente.",
                    "label": 1
                },
                {
                    "sent": "CTL, which is a bit simpler, it's over constraints and city Ella.",
                    "label": 0
                },
                {
                    "sent": "Model checking is polynomial time central stories.",
                    "label": 0
                },
                {
                    "sent": "Please PCP spacetime P space not be spacetime P space complete, so CTL is a very nice gentle logic people like and that's mostly what you find in model checkers like SMV, new SMV, whatever.",
                    "label": 0
                },
                {
                    "sent": "All the tools that have been developed this last 20 years which would have led Edmund, Clark and Emerson and Joseph.",
                    "label": 0
                },
                {
                    "sent": "Keys to have the Turing Award last year.",
                    "label": 0
                },
                {
                    "sent": "So you know, there's always isn't inertia between discoveries and and we can hours, but.",
                    "label": 0
                },
                {
                    "sent": "OK, so cityel.",
                    "label": 0
                },
                {
                    "sent": "Is can there you can tell something that there exists a pathway eventually.",
                    "label": 0
                },
                {
                    "sent": "Proposition P. Holt.",
                    "label": 0
                },
                {
                    "sent": "So this is fine with you.",
                    "label": 0
                },
                {
                    "sent": "Let me start from the root of my tree.",
                    "label": 0
                },
                {
                    "sent": "There is a way to turn left, right, left.",
                    "label": 0
                },
                {
                    "sent": "I don't know where and eventually come to a state or state node.",
                    "label": 0
                },
                {
                    "sent": "Where proposition P holds so P. Where P holds it can we can think P belongs to the label of this.",
                    "label": 0
                },
                {
                    "sent": "Of this note.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "Actually, what does this mean?",
                    "label": 0
                },
                {
                    "sent": "So I have a way to tell you what it means to have a path.",
                    "label": 0
                },
                {
                    "sent": "What even P proposition P eventually holds?",
                    "label": 0
                },
                {
                    "sent": "It means well.",
                    "label": 0
                },
                {
                    "sent": "Either my passes.",
                    "label": 0
                },
                {
                    "sent": "I mean, PEO is already true now, which is.",
                    "label": 0
                },
                {
                    "sent": "So I'm in my tree.",
                    "label": 0
                },
                {
                    "sent": "That's my binary tree.",
                    "label": 0
                },
                {
                    "sent": "So I I claim that this holds.",
                    "label": 0
                },
                {
                    "sent": "So what?",
                    "label": 0
                },
                {
                    "sent": "How can, how can we?",
                    "label": 0
                },
                {
                    "sent": "So it can be that there is a path.",
                    "label": 0
                },
                {
                    "sent": "What FP?",
                    "label": 0
                },
                {
                    "sent": "So you know?",
                    "label": 0
                },
                {
                    "sent": "I'll tell you that for P2 whole eventually it may be the case that people's now and which is true eventually is fulfilled.",
                    "label": 0
                },
                {
                    "sent": "So either you have P here in this node.",
                    "label": 0
                },
                {
                    "sent": "P's part of the labels of this node or P belongs to what if this is clear to you, so either P holds here.",
                    "label": 0
                },
                {
                    "sent": "Or well, I have a.",
                    "label": 0
                },
                {
                    "sent": "The existing path.",
                    "label": 0
                },
                {
                    "sent": "So say the path which starts on the left.",
                    "label": 0
                },
                {
                    "sent": "So there is a bus, say this one here.",
                    "label": 0
                },
                {
                    "sent": "Whatever bus I choose, but there is 1 where actually.",
                    "label": 0
                },
                {
                    "sent": "Here.",
                    "label": 0
                },
                {
                    "sent": "At the next step here.",
                    "label": 0
                },
                {
                    "sent": "There exists a path.",
                    "label": 0
                },
                {
                    "sent": "Which will hit P. Because what does that mean?",
                    "label": 0
                },
                {
                    "sent": "There exist a password.",
                    "label": 0
                },
                {
                    "sent": "It won't really be holes.",
                    "label": 0
                },
                {
                    "sent": "I mean either piece here or piece somewhere.",
                    "label": 0
                },
                {
                    "sent": "So here.",
                    "label": 0
                },
                {
                    "sent": "So what I claim is that, well, I know it's true here or I have a way to go either left or right.",
                    "label": 0
                },
                {
                    "sent": "That's my thing here.",
                    "label": 0
                },
                {
                    "sent": "There exists a path where.",
                    "label": 0
                },
                {
                    "sent": "After one step.",
                    "label": 0
                },
                {
                    "sent": "Well, I have a way too, so here it tells me that there is a subtree.",
                    "label": 0
                },
                {
                    "sent": "Basically by this holds.",
                    "label": 0
                },
                {
                    "sent": "So this is a fixed point equation in a way, because here you have a. Iproperty that is equivalent to a formula which also contains the property itself.",
                    "label": 0
                },
                {
                    "sent": "So there's something like recursive here.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "So it is a fixed point.",
                    "label": 0
                },
                {
                    "sent": "OK, this is a bit.",
                    "label": 0
                },
                {
                    "sent": "Abstract for the moment, but actually.",
                    "label": 0
                },
                {
                    "sent": "We can show that.",
                    "label": 0
                },
                {
                    "sent": "Which fixed point is it if I if I if I say OK?",
                    "label": 0
                },
                {
                    "sent": "This.",
                    "label": 0
                },
                {
                    "sent": "This formula corresponds to all the nodes in my tree.",
                    "label": 0
                },
                {
                    "sent": "Where this holds?",
                    "label": 0
                },
                {
                    "sent": "So if I interpret my formula.",
                    "label": 0
                },
                {
                    "sent": "As a subset.",
                    "label": 0
                },
                {
                    "sent": "Of.",
                    "label": 0
                },
                {
                    "sent": "Note all the notes for this hold.",
                    "label": 0
                },
                {
                    "sent": "What do I mean by fixed point, I mean which set is it?",
                    "label": 0
                },
                {
                    "sent": "It it must be the list set such that because obviously if I take all the nodes.",
                    "label": 0
                },
                {
                    "sent": "So if I take this full set here.",
                    "label": 0
                },
                {
                    "sent": "And if you put it here.",
                    "label": 0
                },
                {
                    "sent": "Instead.",
                    "label": 0
                },
                {
                    "sent": "If I claim that all the nodes, the set of all nodes is equal to the set of nodes, Wepay holds union.",
                    "label": 0
                },
                {
                    "sent": "The set of nodes.",
                    "label": 0
                },
                {
                    "sent": "Who have?",
                    "label": 0
                },
                {
                    "sent": "One child.",
                    "label": 0
                },
                {
                    "sent": "Which is in the set of nodes.",
                    "label": 1
                },
                {
                    "sent": "This holds as well.",
                    "label": 0
                },
                {
                    "sent": "So I mean there are many.",
                    "label": 0
                },
                {
                    "sent": "Many ways to fulfill this fixed point equation.",
                    "label": 0
                },
                {
                    "sent": "And what I want to.",
                    "label": 0
                },
                {
                    "sent": "Really to have here.",
                    "label": 1
                },
                {
                    "sent": "So that's just a feeling, but we will see formal aspects of this and what what I claim is that what this formula means.",
                    "label": 0
                },
                {
                    "sent": "Is the list search set?",
                    "label": 0
                },
                {
                    "sent": "So that blah blah.",
                    "label": 0
                },
                {
                    "sent": "So I want to take exactly the sets that, well, the nodes were either P holds or they have a child.",
                    "label": 0
                },
                {
                    "sent": "From which is also possible to reach, from which it is possible to reach P. And it's not an arbitrary fixed point is the list.",
                    "label": 0
                },
                {
                    "sent": "So if I write an equation like this, zed is this set I'm interested in.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "Sorry this is appear.",
                    "label": 0
                },
                {
                    "sent": "So the.",
                    "label": 0
                },
                {
                    "sent": "I have an equation like this and I want to say look I want to fulfill this equation and I want to find the least solution of such equation.",
                    "label": 0
                },
                {
                    "sent": "So in the new calculus.",
                    "label": 0
                },
                {
                    "sent": "I would simply say the least fixed point of this thing here.",
                    "label": 0
                },
                {
                    "sent": "Well with the P instead.",
                    "label": 0
                },
                {
                    "sent": "Sorry, so we must correct it, so I thought I got rid of all the typos, at least on my slides.",
                    "label": 0
                },
                {
                    "sent": "On the notes that you have, you still have a bit of work to do.",
                    "label": 0
                },
                {
                    "sent": "That's the typo chaser hunting, which is very complicated.",
                    "label": 0
                },
                {
                    "sent": "So in the mutual closer we say I want the list set of nodes.",
                    "label": 0
                },
                {
                    "sent": "So that blah blah and this is interpreted as a formula.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "I will talk about fixed point then, but just to show you how to express this thing in the mu calculus, I just write it down like this and then we will stop because there is the next lecture.",
                    "label": 0
                },
                {
                    "sent": "So in the new calculus, if I want to describe the set of nodes.",
                    "label": 0
                },
                {
                    "sent": "So it's still in an informal and don't worry, I mean we will see the formal semantics of the new calculus, but I'm trying to motivate 1st and to start to introduce a bit of syntax, so I want the list.",
                    "label": 0
                },
                {
                    "sent": "But this means the least fixed point.",
                    "label": 0
                },
                {
                    "sent": "Of actually I will tell you I take a set of notes and I.",
                    "label": 0
                },
                {
                    "sent": "Well, let me just write it mean straight, the least fixed point.",
                    "label": 0
                },
                {
                    "sent": "So the list set of nodes such that either the notes were P holds or.",
                    "label": 0
                },
                {
                    "sent": "There are notes for which.",
                    "label": 0
                },
                {
                    "sent": "There exists a child mistrusting like this.",
                    "label": 0
                },
                {
                    "sent": "Which is in this set.",
                    "label": 0
                },
                {
                    "sent": "That's that's the way to write the list.",
                    "label": 0
                },
                {
                    "sent": "Fixed point.",
                    "label": 0
                },
                {
                    "sent": "Of this equation.",
                    "label": 0
                },
                {
                    "sent": "That's just the notation musette mean the least fixed point of, and this isn't a potatoes that equal this expression.",
                    "label": 0
                },
                {
                    "sent": "Self.",
                    "label": 0
                },
                {
                    "sent": "That's it.",
                    "label": 0
                },
                {
                    "sent": "So what I mean is that.",
                    "label": 0
                },
                {
                    "sent": "In the logics.",
                    "label": 0
                },
                {
                    "sent": "That have been very successful.",
                    "label": 0
                },
                {
                    "sent": "Because they're simple, actually.",
                    "label": 0
                },
                {
                    "sent": "The modalities are fixed.",
                    "label": 0
                },
                {
                    "sent": "You have the next modality basic thing for model model, logical temporal logic to be able to talk about the future of the neighbors, I mean the neighbor.",
                    "label": 0
                },
                {
                    "sent": "Words in cryptica structure.",
                    "label": 0
                },
                {
                    "sent": "I mean to be able to have this.",
                    "label": 0
                },
                {
                    "sent": "This change of situation.",
                    "label": 0
                },
                {
                    "sent": "So you need this next operator.",
                    "label": 0
                },
                {
                    "sent": "And then with the next next operator.",
                    "label": 0
                },
                {
                    "sent": "You can build them in many things.",
                    "label": 0
                },
                {
                    "sent": "So in some logics, those other things are given.",
                    "label": 0
                },
                {
                    "sent": "As.",
                    "label": 0
                },
                {
                    "sent": "I mean hardly encoded in the logic like in cityel.",
                    "label": 0
                },
                {
                    "sent": "EF.",
                    "label": 0
                },
                {
                    "sent": "Or if you like is building modalities, you can use F OK F is.",
                    "label": 0
                },
                {
                    "sent": "Shortcut for two until Barbara.",
                    "label": 0
                },
                {
                    "sent": "So you have until say which is very.",
                    "label": 0
                },
                {
                    "sent": "I mean, given that's given in the logic, that's the only modality you have.",
                    "label": 0
                },
                {
                    "sent": "And in the mu calculus, so I don't give you any such things, you build them.",
                    "label": 0
                },
                {
                    "sent": "You build them by.",
                    "label": 0
                },
                {
                    "sent": "By just telling I want the least fixpoint of this thing.",
                    "label": 0
                },
                {
                    "sent": "I will be able to of course take some jewel respects like I want the the greatest fixed points of such thing.",
                    "label": 0
                },
                {
                    "sent": "So I will.",
                    "label": 0
                },
                {
                    "sent": "I will teach you.",
                    "label": 0
                },
                {
                    "sent": "First, how things are defined, of course, but also how to express a bit of things in this logic.",
                    "label": 0
                },
                {
                    "sent": "And then we will see that.",
                    "label": 0
                },
                {
                    "sent": "OK, the formulas will be entrapped, interpreted in in trees and we will see that a logic has a set of models and we see that this set of models can also be characterized differently by pre automata.",
                    "label": 0
                },
                {
                    "sent": "And then we'll see how such formulas can be translated in Automata and vice versa.",
                    "label": 0
                },
                {
                    "sent": "That's the the picture.",
                    "label": 0
                },
                {
                    "sent": "OK, so we're going to stop now.",
                    "label": 0
                },
                {
                    "sent": "So are you all aware that there are changes in the schedule?",
                    "label": 0
                },
                {
                    "sent": "No, OK, so this is very important.",
                    "label": 0
                },
                {
                    "sent": "So Edwin Morris is has problems with his passport.",
                    "label": 0
                },
                {
                    "sent": "He cannot make it to arrive today.",
                    "label": 0
                },
                {
                    "sent": "Not tomorrow, so he's electrician, nonclassical logic.",
                    "label": 0
                },
                {
                    "sent": "And it was supposed to be from 11:30 to 12:30 everyday.",
                    "label": 0
                },
                {
                    "sent": "So what we've done to give him a chance to make it?",
                    "label": 0
                },
                {
                    "sent": "Is that?",
                    "label": 0
                },
                {
                    "sent": "We've put with with some men placed, moved, shifted all our lectures mine and also Peter Schmidt's lectures.",
                    "label": 0
                }
            ]
        }
    }
}