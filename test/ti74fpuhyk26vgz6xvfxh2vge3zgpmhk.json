{
    "id": "ti74fpuhyk26vgz6xvfxh2vge3zgpmhk",
    "title": "Goal-Directed Tracing of Inferences in EL Ontologies",
    "info": {
        "author": [
            "Pavel Klinov, Institute of Artificial Intelligence, Ulm University"
        ],
        "published": "Dec. 19, 2014",
        "recorded": "October 2014",
        "category": [
            "Top->Computer Science->Semantic Web"
        ]
    },
    "url": "http://videolectures.net/iswc2014_klinov_interences/",
    "segmentation": [
        [
            "I'm going to be talking about tracing of inferences in Owl.",
            "So I'll yell is a light."
        ],
        [
            "Great profile of all which was specifically designed for large ontologies.",
            "And by inference tracing, I mean finding all inference steps which were used by the reasoner to derive a particular class assumption like A implies B.",
            "And the focus of this work is is on doing this really really fast.",
            "And the method which I'm going to present can be used with arbitrary.",
            "Role based procedures, but I'm going to focus on L, which is a very simple language.",
            "It's implemented in elk."
        ],
        [
            "Which is an owl reasoner and works well in practice.",
            "So I don't think I have time to introduce CL properly, so I will not do that.",
            "Instead I will just give you a short example of how typical reasoning procedure for L works.",
            "So if you have a.",
            "Small ontology Firefox zooms in DL syntax.",
            "Calories in their works, not by constructing models.",
            "It's not a tableau reasoner.",
            "Usually it works by applying rules.",
            "So the rule system for L is quite simple.",
            "Only 566 rolls.",
            "So there are two initialization rules which don't have any premises.",
            "We have two rules which deal with conjunctions.",
            "We have one rule which deals with transitivity of class subsumption.",
            "Essentially, it says that if she implies D holds, an D implies E is in the ontology.",
            "Then we derive Simplies E an.",
            "We have one rule which captures existential reasoning El.",
            "So.",
            "The way this works is if we need to classify this ontology on top.",
            "What we do we start by applying applying rules and at first we can only apply initialization rules because.",
            "Nothing has been derived so far, so we derive a implies a.",
            "Then we apply this assumption rollan we derive the axiom implies exists.",
            "RB will keep on going and the only thing we can derive at this point is that B implies B.",
            "So we do that because both A&B occur in the ontology we apply the subsumption rule to be this time, and we derive B implies D. At this point, we can apply the existential rule, because a implies exists.",
            "RB has been derived, an B implies the husband drive, so we can derive a implies exists already.",
            "From which we can derive a exist implies C and then be applies exist essay and so on until until this process comes to an end and it has to come to an end in polynomial number of steps.",
            "So at this point we might wonder why B implies C holds an."
        ],
        [
            "Quite typical that the closure on the rules, not just yellow rules, but many rules.",
            "It contains enough information about what has been derived, so you can.",
            "Draw this in Prodigy, for example, the class hierarchy, but you don't have any information of how stuff was was derived.",
            "But this is important, for example for debugging because not all consequences seem seem right to people.",
            "This is hard both cognitively and computationally, to get those explanations, and it absolutely requires total support, so there is no hope user users will be able to figure it out for themselves for realistic ontologies."
        ],
        [
            "So there are a couple of approaches to explanations.",
            "They fall into two major categories, justifications and proofs, so justifications is are minimal subsets of the ontology from which the result holds, so they do not show you how the result has been derived, but they show you exactly from which part of the ontology it follows.",
            "They are intractable for very simple languages, but they seem to work well in practice, and so there is a lot of experiments which have been done on when and under which conditions they work.",
            "An approved based expense."
        ],
        [
            "On the other hand, they present the actual proof to the user, not just the actions in ontology, but the proof and the methods do not have to be tired to particularly system.",
            "Contrary to popular belief.",
            "And so we are doing the latter in this talk and this work.",
            "So the problem statement.",
            "So we have."
        ],
        [
            "Ontology, and we have the bunch of results which the reason are presented to us and we want to understand the particular result and we want to reconstruct the proof of that particular result.",
            "In this case it's B implies C with minimal effort.",
            "By minimal effort I mean that we don't want to record every reason every inference which the reason has done, because that's a lot.",
            "And so we just want this part.",
            "Of the derivation, which leads to B implies C and we don't want anything be recorded about other classes which were not interested in."
        ],
        [
            "So the main ideas for the method I'm going to show all this stuff informally on the example so.",
            "So the intuition comes from the actual reasoning system for proof system for L. So when you look at the ER rules, one thing which is easy to notice is that for every rule it is true that the subscriptions which they ruled arrives have the same length, left hand side is one of the premises.",
            "That's the fact about every rule which these verified little bit nontrivial for existential rules, 'cause there are two premises with different left hand side.",
            "But the derived expression has E on the left hand side.",
            "Which is the same as one of the premises.",
            "So why does it help?"
        ],
        [
            "The reason it helps is becausw to find inferences for the target expression.",
            "In this case, B implies C. We know that this expression could only be derived by a role which is which is applied to some other expressions with B on the left, so this inference cannot come from a random random place in the space of observation, so we know.",
            "Where to look to to trace the influences.",
            "And other expressions with other glass on the left hand side can be used, but we don't have to re derive them, which is a very good thing because there are not many classes, not mean direct expressions with be on the left hand side comparing to the space of all interact expressions.",
            "So."
        ],
        [
            "Example how this actually works.",
            "So we have the ontology we need to understand being plicae reconstruct proofs for that and we have the expressions which have been derived, and that's that's all we have.",
            "So we know that the expression has B on the left hand side, so we're going to re apply rules to be in and we're going to re derive all expressions with B on the left hand side and at some point we use some other expression.",
            "In this case a imply C. We know it's there because it has been used.",
            "And in the end we come to be imply see if it's derivable at all.",
            "We have to come to it.",
            "At this point, if the user is interested in other expressions which are not explained at this point, like a imply C, The process can be repeated recursively for all those expressions, so this time we are interested in expressions with a on the left.",
            "So we repeat the whole thing."
        ],
        [
            "Cursively, now we use expression with B which is already explained at this point, so we don't have to do any further work an at this point we stop because there are no unexplained assumptions in the reconstructed proof.",
            "But you notice the interactivity of this process of the if the user understands A implies C without, you know if it's obvious we don't have to.",
            "Date so we can like.",
            "In practice you can imagine how we can interactively unfold the proofs.",
            "And the reason there is simple.",
            "I see another expression for.",
            "See here is that.",
            "We don't have to explain them at all because they're not used in the proof of being lazy."
        ],
        [
            "So this was intuition for L, But the process the method actually works in general and I'm going to give you some argument on why it works in general, so imagine.",
            "That all those black circles are derived expressions and there is 1 red expression which we're interested in for which we need to reconstruct.",
            "Pros, so the first thing which we do, we partition the set of derived expressions and we identify the partition in which the target expression belongs to him.",
            "We apply all inferences which drive expressions in target partitions.",
            "And then we identify those expressions which are used as part of the proof.",
            "We may compute the Super set of those, so the blue ones I used to prove.",
            "The red circle, while others can just be some other expressions.",
            "Then we identify the unexplained ones and we repeat the process recursively.",
            "So the instantiation of."
        ],
        [
            "This general method for El means that we need to.",
            "Make the partitioning precise for L and the way we partition L expression is by left hand side.",
            "Every expression is assumption and for every expression there is a left hand side.",
            "And the key property which enables this thing is that each inference conclusion for each inference the conclusion belongs to the same partition is one of the premises.",
            "So this is, this is the property which makes the method goal.",
            "Interactive because we can apply the inference is only in the target partition and we will never miss anything."
        ],
        [
            "So just quickly about the evaluation, so the violation has been done on standard electrologist normal GAIL and the L version of gallon and extension of go.",
            "So when you classify those ontology make a lot of influences on the order of 10s of millions, so it's infeasible to record them all But the partitions for LR quite fine, fine grained, so on average less than 104 gallon and snowman.",
            "And the hypothesis we're testing in this evaluation is that when you do the goal direct tracing evaluation for specific assumptions, you trace on a few partitions and you record on a few inferences."
        ],
        [
            "This is set up for evaluation, is very simple.",
            "We classified ontology without tracing.",
            "We separate race every subsumption which has been approved by the regional.",
            "We averaged over all of them and we do the full recursive profound binding."
        ],
        [
            "So the results just three quick facts about the results.",
            "So the 1st as you see on the right, the method is fast.",
            "It usually takes a couple of milliseconds to reconstruct all the proofs.",
            "Trey."
        ],
        [
            "This is really traces only few partitions, so if you look at these numbers so this is the total number of partitions and this is the number of trace partitions you will see that this image is not drawn to scale.",
            "There are a lot more expressions than those which we have to re apply rules when we reconstruct proofs.",
            "And."
        ],
        [
            "The final fact is that the method is not strictly speaking optimal.",
            "It can re derive expressions which are not used to prove the target expression, but when you look at the difference you will see that this difference is nothing compared to the total number of.",
            "Inferences made when you classify the intelligent."
        ],
        [
            "So, just to summarize, the method which we present is very simple.",
            "It's not rocket science, there are no deep theoretical results.",
            "The reason is beautiful is because it allows you to take your optimized forward chaining rule based procedure and turn it into procedure for explanations, and four L is very simple.",
            "It works for any kind of partitioning, but its efficiency depends on how you design your role system.",
            "For L it sufficient.",
            "It exploits the same granularity property of.",
            "Reasoning which was used for concurrency and can be used for a bunch of things for constructing proofs, verification, verification, stepwise debugging, or even to speed up justifications."
        ],
        [
            "And that's all I want to say."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I'm going to be talking about tracing of inferences in Owl.",
                    "label": 0
                },
                {
                    "sent": "So I'll yell is a light.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Great profile of all which was specifically designed for large ontologies.",
                    "label": 0
                },
                {
                    "sent": "And by inference tracing, I mean finding all inference steps which were used by the reasoner to derive a particular class assumption like A implies B.",
                    "label": 1
                },
                {
                    "sent": "And the focus of this work is is on doing this really really fast.",
                    "label": 1
                },
                {
                    "sent": "And the method which I'm going to present can be used with arbitrary.",
                    "label": 0
                },
                {
                    "sent": "Role based procedures, but I'm going to focus on L, which is a very simple language.",
                    "label": 0
                },
                {
                    "sent": "It's implemented in elk.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Which is an owl reasoner and works well in practice.",
                    "label": 1
                },
                {
                    "sent": "So I don't think I have time to introduce CL properly, so I will not do that.",
                    "label": 0
                },
                {
                    "sent": "Instead I will just give you a short example of how typical reasoning procedure for L works.",
                    "label": 0
                },
                {
                    "sent": "So if you have a.",
                    "label": 0
                },
                {
                    "sent": "Small ontology Firefox zooms in DL syntax.",
                    "label": 0
                },
                {
                    "sent": "Calories in their works, not by constructing models.",
                    "label": 0
                },
                {
                    "sent": "It's not a tableau reasoner.",
                    "label": 0
                },
                {
                    "sent": "Usually it works by applying rules.",
                    "label": 0
                },
                {
                    "sent": "So the rule system for L is quite simple.",
                    "label": 0
                },
                {
                    "sent": "Only 566 rolls.",
                    "label": 0
                },
                {
                    "sent": "So there are two initialization rules which don't have any premises.",
                    "label": 0
                },
                {
                    "sent": "We have two rules which deal with conjunctions.",
                    "label": 1
                },
                {
                    "sent": "We have one rule which deals with transitivity of class subsumption.",
                    "label": 0
                },
                {
                    "sent": "Essentially, it says that if she implies D holds, an D implies E is in the ontology.",
                    "label": 0
                },
                {
                    "sent": "Then we derive Simplies E an.",
                    "label": 0
                },
                {
                    "sent": "We have one rule which captures existential reasoning El.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "The way this works is if we need to classify this ontology on top.",
                    "label": 0
                },
                {
                    "sent": "What we do we start by applying applying rules and at first we can only apply initialization rules because.",
                    "label": 0
                },
                {
                    "sent": "Nothing has been derived so far, so we derive a implies a.",
                    "label": 0
                },
                {
                    "sent": "Then we apply this assumption rollan we derive the axiom implies exists.",
                    "label": 0
                },
                {
                    "sent": "RB will keep on going and the only thing we can derive at this point is that B implies B.",
                    "label": 0
                },
                {
                    "sent": "So we do that because both A&B occur in the ontology we apply the subsumption rule to be this time, and we derive B implies D. At this point, we can apply the existential rule, because a implies exists.",
                    "label": 0
                },
                {
                    "sent": "RB has been derived, an B implies the husband drive, so we can derive a implies exists already.",
                    "label": 0
                },
                {
                    "sent": "From which we can derive a exist implies C and then be applies exist essay and so on until until this process comes to an end and it has to come to an end in polynomial number of steps.",
                    "label": 0
                },
                {
                    "sent": "So at this point we might wonder why B implies C holds an.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Quite typical that the closure on the rules, not just yellow rules, but many rules.",
                    "label": 0
                },
                {
                    "sent": "It contains enough information about what has been derived, so you can.",
                    "label": 0
                },
                {
                    "sent": "Draw this in Prodigy, for example, the class hierarchy, but you don't have any information of how stuff was was derived.",
                    "label": 0
                },
                {
                    "sent": "But this is important, for example for debugging because not all consequences seem seem right to people.",
                    "label": 0
                },
                {
                    "sent": "This is hard both cognitively and computationally, to get those explanations, and it absolutely requires total support, so there is no hope user users will be able to figure it out for themselves for realistic ontologies.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So there are a couple of approaches to explanations.",
                    "label": 0
                },
                {
                    "sent": "They fall into two major categories, justifications and proofs, so justifications is are minimal subsets of the ontology from which the result holds, so they do not show you how the result has been derived, but they show you exactly from which part of the ontology it follows.",
                    "label": 0
                },
                {
                    "sent": "They are intractable for very simple languages, but they seem to work well in practice, and so there is a lot of experiments which have been done on when and under which conditions they work.",
                    "label": 0
                },
                {
                    "sent": "An approved based expense.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "On the other hand, they present the actual proof to the user, not just the actions in ontology, but the proof and the methods do not have to be tired to particularly system.",
                    "label": 1
                },
                {
                    "sent": "Contrary to popular belief.",
                    "label": 0
                },
                {
                    "sent": "And so we are doing the latter in this talk and this work.",
                    "label": 0
                },
                {
                    "sent": "So the problem statement.",
                    "label": 0
                },
                {
                    "sent": "So we have.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Ontology, and we have the bunch of results which the reason are presented to us and we want to understand the particular result and we want to reconstruct the proof of that particular result.",
                    "label": 0
                },
                {
                    "sent": "In this case it's B implies C with minimal effort.",
                    "label": 1
                },
                {
                    "sent": "By minimal effort I mean that we don't want to record every reason every inference which the reason has done, because that's a lot.",
                    "label": 0
                },
                {
                    "sent": "And so we just want this part.",
                    "label": 0
                },
                {
                    "sent": "Of the derivation, which leads to B implies C and we don't want anything be recorded about other classes which were not interested in.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So the main ideas for the method I'm going to show all this stuff informally on the example so.",
                    "label": 0
                },
                {
                    "sent": "So the intuition comes from the actual reasoning system for proof system for L. So when you look at the ER rules, one thing which is easy to notice is that for every rule it is true that the subscriptions which they ruled arrives have the same length, left hand side is one of the premises.",
                    "label": 0
                },
                {
                    "sent": "That's the fact about every rule which these verified little bit nontrivial for existential rules, 'cause there are two premises with different left hand side.",
                    "label": 0
                },
                {
                    "sent": "But the derived expression has E on the left hand side.",
                    "label": 0
                },
                {
                    "sent": "Which is the same as one of the premises.",
                    "label": 0
                },
                {
                    "sent": "So why does it help?",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The reason it helps is becausw to find inferences for the target expression.",
                    "label": 0
                },
                {
                    "sent": "In this case, B implies C. We know that this expression could only be derived by a role which is which is applied to some other expressions with B on the left, so this inference cannot come from a random random place in the space of observation, so we know.",
                    "label": 0
                },
                {
                    "sent": "Where to look to to trace the influences.",
                    "label": 0
                },
                {
                    "sent": "And other expressions with other glass on the left hand side can be used, but we don't have to re derive them, which is a very good thing because there are not many classes, not mean direct expressions with be on the left hand side comparing to the space of all interact expressions.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Example how this actually works.",
                    "label": 0
                },
                {
                    "sent": "So we have the ontology we need to understand being plicae reconstruct proofs for that and we have the expressions which have been derived, and that's that's all we have.",
                    "label": 0
                },
                {
                    "sent": "So we know that the expression has B on the left hand side, so we're going to re apply rules to be in and we're going to re derive all expressions with B on the left hand side and at some point we use some other expression.",
                    "label": 0
                },
                {
                    "sent": "In this case a imply C. We know it's there because it has been used.",
                    "label": 0
                },
                {
                    "sent": "And in the end we come to be imply see if it's derivable at all.",
                    "label": 0
                },
                {
                    "sent": "We have to come to it.",
                    "label": 0
                },
                {
                    "sent": "At this point, if the user is interested in other expressions which are not explained at this point, like a imply C, The process can be repeated recursively for all those expressions, so this time we are interested in expressions with a on the left.",
                    "label": 0
                },
                {
                    "sent": "So we repeat the whole thing.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Cursively, now we use expression with B which is already explained at this point, so we don't have to do any further work an at this point we stop because there are no unexplained assumptions in the reconstructed proof.",
                    "label": 0
                },
                {
                    "sent": "But you notice the interactivity of this process of the if the user understands A implies C without, you know if it's obvious we don't have to.",
                    "label": 0
                },
                {
                    "sent": "Date so we can like.",
                    "label": 0
                },
                {
                    "sent": "In practice you can imagine how we can interactively unfold the proofs.",
                    "label": 0
                },
                {
                    "sent": "And the reason there is simple.",
                    "label": 0
                },
                {
                    "sent": "I see another expression for.",
                    "label": 0
                },
                {
                    "sent": "See here is that.",
                    "label": 0
                },
                {
                    "sent": "We don't have to explain them at all because they're not used in the proof of being lazy.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So this was intuition for L, But the process the method actually works in general and I'm going to give you some argument on why it works in general, so imagine.",
                    "label": 0
                },
                {
                    "sent": "That all those black circles are derived expressions and there is 1 red expression which we're interested in for which we need to reconstruct.",
                    "label": 0
                },
                {
                    "sent": "Pros, so the first thing which we do, we partition the set of derived expressions and we identify the partition in which the target expression belongs to him.",
                    "label": 0
                },
                {
                    "sent": "We apply all inferences which drive expressions in target partitions.",
                    "label": 0
                },
                {
                    "sent": "And then we identify those expressions which are used as part of the proof.",
                    "label": 0
                },
                {
                    "sent": "We may compute the Super set of those, so the blue ones I used to prove.",
                    "label": 0
                },
                {
                    "sent": "The red circle, while others can just be some other expressions.",
                    "label": 0
                },
                {
                    "sent": "Then we identify the unexplained ones and we repeat the process recursively.",
                    "label": 0
                },
                {
                    "sent": "So the instantiation of.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "This general method for El means that we need to.",
                    "label": 0
                },
                {
                    "sent": "Make the partitioning precise for L and the way we partition L expression is by left hand side.",
                    "label": 0
                },
                {
                    "sent": "Every expression is assumption and for every expression there is a left hand side.",
                    "label": 0
                },
                {
                    "sent": "And the key property which enables this thing is that each inference conclusion for each inference the conclusion belongs to the same partition is one of the premises.",
                    "label": 0
                },
                {
                    "sent": "So this is, this is the property which makes the method goal.",
                    "label": 0
                },
                {
                    "sent": "Interactive because we can apply the inference is only in the target partition and we will never miss anything.",
                    "label": 1
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So just quickly about the evaluation, so the violation has been done on standard electrologist normal GAIL and the L version of gallon and extension of go.",
                    "label": 0
                },
                {
                    "sent": "So when you classify those ontology make a lot of influences on the order of 10s of millions, so it's infeasible to record them all But the partitions for LR quite fine, fine grained, so on average less than 104 gallon and snowman.",
                    "label": 0
                },
                {
                    "sent": "And the hypothesis we're testing in this evaluation is that when you do the goal direct tracing evaluation for specific assumptions, you trace on a few partitions and you record on a few inferences.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This is set up for evaluation, is very simple.",
                    "label": 0
                },
                {
                    "sent": "We classified ontology without tracing.",
                    "label": 0
                },
                {
                    "sent": "We separate race every subsumption which has been approved by the regional.",
                    "label": 0
                },
                {
                    "sent": "We averaged over all of them and we do the full recursive profound binding.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So the results just three quick facts about the results.",
                    "label": 0
                },
                {
                    "sent": "So the 1st as you see on the right, the method is fast.",
                    "label": 0
                },
                {
                    "sent": "It usually takes a couple of milliseconds to reconstruct all the proofs.",
                    "label": 0
                },
                {
                    "sent": "Trey.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This is really traces only few partitions, so if you look at these numbers so this is the total number of partitions and this is the number of trace partitions you will see that this image is not drawn to scale.",
                    "label": 0
                },
                {
                    "sent": "There are a lot more expressions than those which we have to re apply rules when we reconstruct proofs.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The final fact is that the method is not strictly speaking optimal.",
                    "label": 0
                },
                {
                    "sent": "It can re derive expressions which are not used to prove the target expression, but when you look at the difference you will see that this difference is nothing compared to the total number of.",
                    "label": 0
                },
                {
                    "sent": "Inferences made when you classify the intelligent.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So, just to summarize, the method which we present is very simple.",
                    "label": 0
                },
                {
                    "sent": "It's not rocket science, there are no deep theoretical results.",
                    "label": 0
                },
                {
                    "sent": "The reason is beautiful is because it allows you to take your optimized forward chaining rule based procedure and turn it into procedure for explanations, and four L is very simple.",
                    "label": 0
                },
                {
                    "sent": "It works for any kind of partitioning, but its efficiency depends on how you design your role system.",
                    "label": 1
                },
                {
                    "sent": "For L it sufficient.",
                    "label": 0
                },
                {
                    "sent": "It exploits the same granularity property of.",
                    "label": 1
                },
                {
                    "sent": "Reasoning which was used for concurrency and can be used for a bunch of things for constructing proofs, verification, verification, stepwise debugging, or even to speed up justifications.",
                    "label": 1
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And that's all I want to say.",
                    "label": 0
                }
            ]
        }
    }
}