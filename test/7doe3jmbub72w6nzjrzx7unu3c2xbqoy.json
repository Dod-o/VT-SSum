{
    "id": "7doe3jmbub72w6nzjrzx7unu3c2xbqoy",
    "title": "SRBench: A Streaming RDF/SPARQL Benchmark",
    "info": {
        "author": [
            "Jean-Paul Calbimonte, HES-SO Valais-Wallis"
        ],
        "published": "Dec. 3, 2012",
        "recorded": "November 2012",
        "category": [
            "Top->Computer Science->Semantic Web->RDF - Resource Description Framework",
            "Top->Computer Science->Semantic Web->SPARQL"
        ]
    },
    "url": "http://videolectures.net/iswc2012_calbimonte_srbench/",
    "segmentation": [
        [
            "So yes, I will speak about the streaming data and benchmark that we are having working with people from CWI and our group from UPN, Jennifer, Duke, Oscar, and myself."
        ],
        [
            "So streaming data.",
            "If you are familiar with what streaming data is, we're talking about top holes, like in this case, which are usually associated to some timestamp or some notion of time.",
            "And some sources of this data are sensor networks, but they can be other types of sources.",
            "So some of the typical operations that people do on this on this streams are for example time windows to bound the data in some defined in some defined way.",
            "And of course continuous evaluation.",
            "Because this is not like typical database querying where you pose a query, you get an answer back in this case you usually have a query that is living on the streaming query engine.",
            "And it produces results as the streams arrive.",
            "So the systems that deal with this kind of data and with this type of queries are usually called Lady SMS.",
            "They just re management systems, some are complex, even processors.",
            "Well they have different characteristics.",
            "But we're talking about the same family of processing engines."
        ],
        [
            "But what happens if we go to the web?",
            "In this case we have different types of sources.",
            "As we have seen in the previous presentation.",
            "For example, we have mobile phones.",
            "We have sensor networks.",
            "We have people publishing data.",
            "So we have several types of sources and that can publish the data on the web and people can access it.",
            "So if I publish my data, some other people with other intentions can use it for some other purpose.",
            "So we have too much streaming data, but.",
            "Not enough tool to do."
        ],
        [
            "Knowledge, so this is where this community community comes to the rescue.",
            "So we say, OK, we can use semantic web technologies to tackle these issues.",
            "So what kind of things we can do?",
            "We can, for example, annotate sensor data with semantic annotations or publish sensor data as linked data using the well known principles we can internally interlink different datasets.",
            "Or apply reasoning.",
            "So there are different things that we can add to this streaming processing community.",
            "And of course we can define vocabularies ontologies that represent the information that we are stream."
        ],
        [
            "So in terms of publishing sensor data, there has been a lot of efforts of work done in the whole world and different groups.",
            "So for example about sensor data publishing as linked data.",
            "There are already some bubbles in the linked data cloud that are specifically about sensors.",
            "Also, annotating sensor data with metadata annotations and one particularly useful effort is the semantic sensor network ontology that has been produced by a group of of people in W3C Group.",
            "And we have several examples and I'm not going to talk about all of them, but.",
            "Well, we have many people working on this subject which is publishing sensor data using semantic web technologies.",
            "But what about querying?",
            "This is publishing.",
            "We also have quick."
        ],
        [
            "Ring and there is also a lot of effort done in this in this sense and what people are doing is things like extending RDF models with streams like presenting RDF extended with streaming constructs.",
            "This means that, for example, a triple can have a timestamp attached or notion similar to this and also extensions for sparkle, so it's not the same to have a sender sparkle query then a sparkle query that supports some type of streaming operators.",
            "And of course the we need query engines that understand this RDF streams and are capable of processing sparkle with this extension, so we also have lots.",
            "Well, not lots, but several examples of this kind of query engines produced by many groups.",
            "These are not all of them, just some examples."
        ],
        [
            "So we find 2 particular things that are common to most of this query processing engines is that.",
            "They extend RDF.",
            "the IDF model for streaming data in some in some way and they extend as far cool for streaming first streaming RDF.",
            "So these are similarities between all these approaches.",
            "But how do they implement them?",
            "And this is where we find interesting things, some of them, for example, allow applying reasoning so.",
            "Different reasoning approaches for streaming RDF, but some of them don't.",
            "Some of them don't provide this kind of functionality.",
            "Some of them implement query processing by delegating the string, processing, 2D SMS or complex event processors that are capable of dealing with streaming data.",
            "Some of them delegate the execution to logic programming engines that are not also not not only capable of dealing with streams, but also with some types of reasoning.",
            "And finally we have.",
            "RDF streaming query engines that implement this functionality.",
            "This functionality natively so they don't delegate to an underlying processing engine, so we have different approaches for implementing this RDF kind of extensions.",
            "So in this context, we have some challenges.",
            "We have many of them, but."
        ],
        [
            "So there are two special well two important ones I. I'm speaking now about so.",
            "The first one is how to specify this type of queries.",
            "So there are different systems and many of them implemented using different query language is different extensions for sparkle.",
            "So one thing that would be nice to have is standard query language for these extensions, which presently we don't have and the other the other issue.",
            "The other challenge is how to compare these systems.",
            "Can we compare them really?",
            "So in order to do that, it would be nice to have a benchmark that supports streaming RDF and Sparkle.",
            "Extensions, so for the first challenge, well, this is not something I'm going to talk about, but something think about focusing on."
        ],
        [
            "Second one, so for this we are introducing as our bench, which is the first benchmark for streaming RDF engines.",
            "And precisely provides this benchmark for query engines that extend RDF model and extend the Sparkle Core language.",
            "And this is a way to assist the abilities of these engines with dealing with streaming data.",
            "And one of the challenges that we have is to have this benchmark based on real world datasets.",
            "So not just synthetic datasets that may not have any real meaning.",
            "And finally, what we are presenting this work is a functional evaluation of 1st functional revelation that tells us if this query engine is able to support.",
            "Or is able to execute the queries of this benchmark.",
            "So with this functional revelation, what we try to identify is what are the features that some of this query engines are missing which are crucial for them?",
            "Or which are distinctive, which of which of the features of this query engines make them different from the other ones?"
        ],
        [
            "So are there any existing benchmarks in the literature or anywhere?",
            "So for streaming data data in general, not sparkle or RDF there is something called the Linear Rd benchmark, which is which is relational based and not RDF in the first place.",
            "And it doesn't comply with some of the principles that we wanted to include in this.",
            "Our bench.",
            "For example, interlinking of data with other datasets, which is something that we need in the context of the semantic web.",
            "And of course it doesn't include any any notion of reasoning in this in this in the queries of this benchmark.",
            "And in terms of the typical of the classical RDF sparkle benchmarks, they're meant for store data, so.",
            "The types of queries that you have are standing queries.",
            "You get you pose a query.",
            "You get an answer and not.",
            "They don't have this continuous nature that we need in streaming query agents.",
            "They don't exploit this interlinking with linked up data, linked open data sets.",
            "And they do not include some of the features that are really needed in in streaming query processing like like aggregates and some other ones well.",
            "BM does does it now, but the others don't and they don't include reasoning in these queries either."
        ],
        [
            "So as I said in another venture, we wanted to have a benchmark data set.",
            "That is both relevant and realistic, so not just synthetic data that is semantically valid.",
            "This is important because the notion of timestamps and ordering is really important in this kind of data sets.",
            "Another thing that it should be Inter linkable.",
            "I mean not just sensor data of some places, but this place is could be linked to something in another data set, so this is something that we wanted in this benchmark.",
            "And then our concise set of features so important features that that are needed in streaming data processing like Windows which are time bounded operations.",
            "Smart stations like averages and so on.",
            "Continuous query processing.",
            "And.",
            "And also contextual data which means again interlinking with other datasets.",
            "So as we don't have a standard query language, what we had to do was to define these queries in this benchmark using descriptive definition an implement each one of them with the query languages that we have available.",
            "So we took three of them, see sparkles, sequels, and Sparkle Stream.",
            "This is not an exhaustive set of query languages, but these are the ones that are available and we think are meaningful.",
            "So."
        ],
        [
            "About the datasets, we picked the link sensor data data set which was published by ignorance and it's about.",
            "Weather data in the US that was originally published by Miss OS.",
            "Is the 1st and largest sensor data set in Lawton is composed of two parts 2 main parts, 1st the Meta data which talks about sensors.",
            "The description of the sensors more than 20,000 years where stations.",
            "And each of one is linked to Geonames, an on the other part.",
            "We have the observations themselves.",
            "These are like the measurements, so we have more than.",
            "Then 1/2 billion triples of this kind of observation.",
            "So we have just as a summary.",
            "You can see we have data from some hurricanes.",
            "And well, these are the data sizes we're talking about."
        ],
        [
            "And this data set is linked to geonames and we also linked it to DB pedia.",
            "So it's mainly about geographical locations in Geonames and then we have some.",
            "Some links also to DB pedia."
        ],
        [
            "So this is more or less that the data model we're talking about.",
            "We have the observations, the observations on the metadata.",
            "You can see that here are the measurements, the wrestle data.",
            "I haven't included all the for example units of measurements and other things, but they are.",
            "They are over there.",
            "And here in the length link sensor metadata we have the information about the sensors and then the external datasets."
        ],
        [
            "So we have defined it 17 queries.",
            "This benchmark has 17 queries following this known well known principle of less than 20.",
            "And these are the features that we are considering, so the typical graph pattern matching ones, an filter, union, optional solution, modifyers.",
            "Projection this thing we meet at some of them.",
            "Like for example.",
            "Limit offset, which are not really.",
            "So useful in this case, because we have Windows.",
            "About the query forms, we didn't include the describ because it's not so well defined in the semantics of sparkles then Sparkle 11 we have some important operators like aggregates that we need in this in this benchmark subqueries, select expressions and property paths.",
            "Then for reasoning, we included some very simple types of reasoning, subclass of property and same As for the for the links.",
            "And these are typical streaming operators Windows, specifically, the time Windows.",
            "We didn't include tuple, triple windows, and other operators that are kind of optional.",
            "They transform a window into a stream.",
            "I stream the stream on our stream.",
            "And finally, about the data access.",
            "Some of the queries are only posed to the observation datasets.",
            "Some only two sensor metadata, some to both and some combine it with the external data sets as well."
        ],
        [
            "So this is a summary of the features of the 17 queries.",
            "So for example, I don't know if we pick query #8 it has A and in the end in the.",
            "In the graph patterns, it is ideal for projection query and so on, so you can see here the this table is also in the paper, so you can see what kind of features we have.",
            "For example the row #6 about streaming.",
            "You can see that most of the queries include temporal windows in it.",
            "So this is a summary of the features where we are considering for the 17 queries."
        ],
        [
            "And I get to show some examples, so quite number one get the rainfall of 71 in one hour.",
            "So in this case the rainfall observed is graph pattern.",
            "We have the rainfall observations we want to get the value.",
            "And the unit, well, the unit of measurement and the one in and out once in an hour.",
            "This means that we will have to include some kind of time window that bounds the query in the last hour.",
            "So another example, query #2 get all precipitation, observing once in an hour is very similar to the other one, but in this case all precipitation can mean different things.",
            "So apart from the graph pattern, we have to take into account that precipitation observation may also be rainfall or any other subclass of it."
        ],
        [
            "Another query get the average wind speed at stations where the air temperature is higher than 32 degrees in the last hour every 10 minutes.",
            "So here we have several things.",
            "The graph pattern of course, but we also have to add aggregates.",
            "Filter over there a time window that that also includes the slide because you have to do it every 10 minutes.",
            "And so."
        ],
        [
            "And we have query #9A.",
            "In this case we have to combine.",
            "Now, in this case we have to compute the average wind force and you do it with a formula.",
            "So in this case the query needs to include.",
            "Operators in the select expression.",
            "In order to do that."
        ],
        [
            "And finally, this.",
            "I think this is the last example I have.",
            "Get the hourly average air temperature and humidity of large cities.",
            "So what is a large city in this query?",
            "In this query we have defined that is one that has a population higher than.",
            "15,000 so this is this is a case where we have to go to geonames and or.",
            "I mean the external datasets to get this information so."
        ],
        [
            "We have implemented this queries as I said, using these three languages sparkles Focus Tree Man sequels.",
            "We have published in a week patient W. 3C.",
            "Of course it's not an exhaustive list of query languages, but it gives you an idea of how the queries look like.",
            "And I get."
        ],
        [
            "Again, I can go through the examples.",
            "This is the one this query #6 in Sparkle stream you can see here for example, the time window over there you have a window of one hour and you're getting snow observation, rainfall observations and visibility in unions so.",
            "We have expressed the same queries in SPARQL and sequels and if you take a look at these queries they are really similar.",
            "This extensions are really similar one to another.",
            "We have mainly because some one of them was created 1st and the other ones maybe were inspired by the other.",
            "So main differences are that I'm windows, they have different syntax, but this is not a big deal really."
        ],
        [
            "But anyway, we have them in the three languages because we don't have standard yet.",
            "This is another example of an ASK query.",
            "So we are asking to detect a hurricane if it has been observed.",
            "So in this case we have the ASK querying setup of classic select.",
            "We need group by because we have to compare the average.",
            "Of the wind speed.",
            "And we have the similar similar queries in sparkling sequels and you will see that they look really similar."
        ],
        [
            "This is the final example in Sparkle Stream of query #2 get all Precipitation server ones in an hour.",
            "So one way of implementing this query was using a property path.",
            "Using this property path, we can get off subclasses of of precipitation observations, so in this way we can get rainfall or.",
            "Or snowfall or another type of precipitation."
        ],
        [
            "So as I said in the beginning, we did a functional evaluation of this queries.",
            "Green means OK and not green means bad.",
            "So if you see letters here, it means that it didn't work for some reason.",
            "So as you see sequences Farkle.",
            "Terms of these queries.",
            "They support more or less the same functionality's Sparkle stream is a bit behind because, for example it has problems with group buys.",
            "If you see query number 45 and eight.",
            "It failed because it has some problem with grouping.",
            "You can also see in this table that most of the queries had problems with property paths.",
            "They in most of them they don't really work and there are some interesting things like for example the ASK query.",
            "Current #3 is the only one that includes an ask.",
            "And all of them failed even though asks should be a simple operation to execute.",
            "And well, there are other features I you can see in the paper and this table."
        ],
        [
            "So as I said, there are some.",
            "There are some functionalities of this particle extensions that are work or seem to work in this in this.",
            "Query languages like the graph pattern.",
            "They mostly work on them.",
            "Solution modifiers are OK.",
            "Select and construct.",
            "There are implemented by this query engines.",
            "But some of some of features are not ready yet, like property paths they ask and some other some other operations like this stream or not exist.",
            "They have some problems.",
            "And in terms of reasoning that there are also some K that so for example, see sparkles supports simple RDF entailment, but in the distributed version that is available this is.",
            "This doesn't work yet.",
            "In sparkles, Freeman's equals this is not.",
            "This is not implemented at all, so.",
            "Well, as I said, each of these query engines works differently internally.",
            "So for example, Sparkle Stream delegates query query execution to an underlying data stream management system.",
            "And this different way of working.",
            "Is kind of a challenge for this type of benchmarks because.",
            "What you get when you get back in the case of Sparkle Stream depends on what is the functionality available, but the underlying data stream management system.",
            "So these are things to consider.",
            "In the case of sequels, it's a native implementation, so many of these features can be can be added and are being."
        ],
        [
            "Added I think.",
            "These days so more ongoing work it's to define some test criteria for this benchmark.",
            "So, for example, the correctness, throughput, scalability and response time.",
            "This is not really an easy task.",
            "For example, for the correctness, this should be something simple, but it is not because.",
            "Even though you can execute these queries in this system, sometimes they don't throw the same output and this is for different reasons.",
            "Sometimes the semantics cannot can be can have differences in this query languages sometimes that the way they threw the output is also different, so these are some things that have to be considered.",
            "Well, these are other typical test criteria that we have to discuss throughput, but throughput is also tricky because you have to take into account how much data you are throwing and if this is not not the same in all query languages then it's difficult to compare the throughput.",
            "Anwell"
        ],
        [
            "I think I have discussed most of this of these issues that we have."
        ],
        [
            "And well, there is also some related work.",
            "There was a paper presented yesterday or or.",
            "Yes, I think yesterday about a framework and tools that providing the link stream data engines that considered a subset of functionalities and was based on synthetic data which adds some flexibility.",
            "But it's synthetic so you have trade off there.",
            "And they had a first set of performances, which is something really useful because you already have notion of what's going on in this area.",
            "And something I think it's also important to emphasize is that there are things there are things in semantic web, semantic streaming, data processing that we can show to people outside of this community, because, for example, reasoning and this type of features like property paths, an advanced constructs in queries are not really available in other type of streaming query engines.",
            "So this is something really interesting, not only in this community, but.",
            "Also outside.",
            "So if we have some kind of benchmark that takes into account, then then.",
            "Is something that we can show outside?"
        ],
        [
            "As well.",
            "So as a summary, we presented as our bench benchmark for streaming RDF engines.",
            "Something we some things we still have to do is work on the performance evaluation and scalability.",
            "And well, maybe some other work like exploiting more reasoning possibilities on semantic data.",
            "We have just considered some very simple use cases.",
            "Ann, well, I think this is all."
        ],
        [
            "Had to say for now."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So yes, I will speak about the streaming data and benchmark that we are having working with people from CWI and our group from UPN, Jennifer, Duke, Oscar, and myself.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So streaming data.",
                    "label": 0
                },
                {
                    "sent": "If you are familiar with what streaming data is, we're talking about top holes, like in this case, which are usually associated to some timestamp or some notion of time.",
                    "label": 0
                },
                {
                    "sent": "And some sources of this data are sensor networks, but they can be other types of sources.",
                    "label": 0
                },
                {
                    "sent": "So some of the typical operations that people do on this on this streams are for example time windows to bound the data in some defined in some defined way.",
                    "label": 0
                },
                {
                    "sent": "And of course continuous evaluation.",
                    "label": 0
                },
                {
                    "sent": "Because this is not like typical database querying where you pose a query, you get an answer back in this case you usually have a query that is living on the streaming query engine.",
                    "label": 0
                },
                {
                    "sent": "And it produces results as the streams arrive.",
                    "label": 0
                },
                {
                    "sent": "So the systems that deal with this kind of data and with this type of queries are usually called Lady SMS.",
                    "label": 0
                },
                {
                    "sent": "They just re management systems, some are complex, even processors.",
                    "label": 1
                },
                {
                    "sent": "Well they have different characteristics.",
                    "label": 0
                },
                {
                    "sent": "But we're talking about the same family of processing engines.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "But what happens if we go to the web?",
                    "label": 0
                },
                {
                    "sent": "In this case we have different types of sources.",
                    "label": 0
                },
                {
                    "sent": "As we have seen in the previous presentation.",
                    "label": 0
                },
                {
                    "sent": "For example, we have mobile phones.",
                    "label": 0
                },
                {
                    "sent": "We have sensor networks.",
                    "label": 0
                },
                {
                    "sent": "We have people publishing data.",
                    "label": 0
                },
                {
                    "sent": "So we have several types of sources and that can publish the data on the web and people can access it.",
                    "label": 0
                },
                {
                    "sent": "So if I publish my data, some other people with other intentions can use it for some other purpose.",
                    "label": 0
                },
                {
                    "sent": "So we have too much streaming data, but.",
                    "label": 1
                },
                {
                    "sent": "Not enough tool to do.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Knowledge, so this is where this community community comes to the rescue.",
                    "label": 0
                },
                {
                    "sent": "So we say, OK, we can use semantic web technologies to tackle these issues.",
                    "label": 0
                },
                {
                    "sent": "So what kind of things we can do?",
                    "label": 0
                },
                {
                    "sent": "We can, for example, annotate sensor data with semantic annotations or publish sensor data as linked data using the well known principles we can internally interlink different datasets.",
                    "label": 1
                },
                {
                    "sent": "Or apply reasoning.",
                    "label": 0
                },
                {
                    "sent": "So there are different things that we can add to this streaming processing community.",
                    "label": 0
                },
                {
                    "sent": "And of course we can define vocabularies ontologies that represent the information that we are stream.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So in terms of publishing sensor data, there has been a lot of efforts of work done in the whole world and different groups.",
                    "label": 0
                },
                {
                    "sent": "So for example about sensor data publishing as linked data.",
                    "label": 1
                },
                {
                    "sent": "There are already some bubbles in the linked data cloud that are specifically about sensors.",
                    "label": 1
                },
                {
                    "sent": "Also, annotating sensor data with metadata annotations and one particularly useful effort is the semantic sensor network ontology that has been produced by a group of of people in W3C Group.",
                    "label": 0
                },
                {
                    "sent": "And we have several examples and I'm not going to talk about all of them, but.",
                    "label": 0
                },
                {
                    "sent": "Well, we have many people working on this subject which is publishing sensor data using semantic web technologies.",
                    "label": 0
                },
                {
                    "sent": "But what about querying?",
                    "label": 0
                },
                {
                    "sent": "This is publishing.",
                    "label": 0
                },
                {
                    "sent": "We also have quick.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Ring and there is also a lot of effort done in this in this sense and what people are doing is things like extending RDF models with streams like presenting RDF extended with streaming constructs.",
                    "label": 0
                },
                {
                    "sent": "This means that, for example, a triple can have a timestamp attached or notion similar to this and also extensions for sparkle, so it's not the same to have a sender sparkle query then a sparkle query that supports some type of streaming operators.",
                    "label": 0
                },
                {
                    "sent": "And of course the we need query engines that understand this RDF streams and are capable of processing sparkle with this extension, so we also have lots.",
                    "label": 0
                },
                {
                    "sent": "Well, not lots, but several examples of this kind of query engines produced by many groups.",
                    "label": 0
                },
                {
                    "sent": "These are not all of them, just some examples.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So we find 2 particular things that are common to most of this query processing engines is that.",
                    "label": 0
                },
                {
                    "sent": "They extend RDF.",
                    "label": 0
                },
                {
                    "sent": "the IDF model for streaming data in some in some way and they extend as far cool for streaming first streaming RDF.",
                    "label": 1
                },
                {
                    "sent": "So these are similarities between all these approaches.",
                    "label": 0
                },
                {
                    "sent": "But how do they implement them?",
                    "label": 0
                },
                {
                    "sent": "And this is where we find interesting things, some of them, for example, allow applying reasoning so.",
                    "label": 0
                },
                {
                    "sent": "Different reasoning approaches for streaming RDF, but some of them don't.",
                    "label": 0
                },
                {
                    "sent": "Some of them don't provide this kind of functionality.",
                    "label": 0
                },
                {
                    "sent": "Some of them implement query processing by delegating the string, processing, 2D SMS or complex event processors that are capable of dealing with streaming data.",
                    "label": 0
                },
                {
                    "sent": "Some of them delegate the execution to logic programming engines that are not also not not only capable of dealing with streams, but also with some types of reasoning.",
                    "label": 0
                },
                {
                    "sent": "And finally we have.",
                    "label": 0
                },
                {
                    "sent": "RDF streaming query engines that implement this functionality.",
                    "label": 0
                },
                {
                    "sent": "This functionality natively so they don't delegate to an underlying processing engine, so we have different approaches for implementing this RDF kind of extensions.",
                    "label": 0
                },
                {
                    "sent": "So in this context, we have some challenges.",
                    "label": 0
                },
                {
                    "sent": "We have many of them, but.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So there are two special well two important ones I. I'm speaking now about so.",
                    "label": 0
                },
                {
                    "sent": "The first one is how to specify this type of queries.",
                    "label": 1
                },
                {
                    "sent": "So there are different systems and many of them implemented using different query language is different extensions for sparkle.",
                    "label": 0
                },
                {
                    "sent": "So one thing that would be nice to have is standard query language for these extensions, which presently we don't have and the other the other issue.",
                    "label": 0
                },
                {
                    "sent": "The other challenge is how to compare these systems.",
                    "label": 1
                },
                {
                    "sent": "Can we compare them really?",
                    "label": 0
                },
                {
                    "sent": "So in order to do that, it would be nice to have a benchmark that supports streaming RDF and Sparkle.",
                    "label": 0
                },
                {
                    "sent": "Extensions, so for the first challenge, well, this is not something I'm going to talk about, but something think about focusing on.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Second one, so for this we are introducing as our bench, which is the first benchmark for streaming RDF engines.",
                    "label": 1
                },
                {
                    "sent": "And precisely provides this benchmark for query engines that extend RDF model and extend the Sparkle Core language.",
                    "label": 1
                },
                {
                    "sent": "And this is a way to assist the abilities of these engines with dealing with streaming data.",
                    "label": 0
                },
                {
                    "sent": "And one of the challenges that we have is to have this benchmark based on real world datasets.",
                    "label": 0
                },
                {
                    "sent": "So not just synthetic datasets that may not have any real meaning.",
                    "label": 0
                },
                {
                    "sent": "And finally, what we are presenting this work is a functional evaluation of 1st functional revelation that tells us if this query engine is able to support.",
                    "label": 0
                },
                {
                    "sent": "Or is able to execute the queries of this benchmark.",
                    "label": 0
                },
                {
                    "sent": "So with this functional revelation, what we try to identify is what are the features that some of this query engines are missing which are crucial for them?",
                    "label": 0
                },
                {
                    "sent": "Or which are distinctive, which of which of the features of this query engines make them different from the other ones?",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So are there any existing benchmarks in the literature or anywhere?",
                    "label": 1
                },
                {
                    "sent": "So for streaming data data in general, not sparkle or RDF there is something called the Linear Rd benchmark, which is which is relational based and not RDF in the first place.",
                    "label": 0
                },
                {
                    "sent": "And it doesn't comply with some of the principles that we wanted to include in this.",
                    "label": 0
                },
                {
                    "sent": "Our bench.",
                    "label": 0
                },
                {
                    "sent": "For example, interlinking of data with other datasets, which is something that we need in the context of the semantic web.",
                    "label": 1
                },
                {
                    "sent": "And of course it doesn't include any any notion of reasoning in this in this in the queries of this benchmark.",
                    "label": 0
                },
                {
                    "sent": "And in terms of the typical of the classical RDF sparkle benchmarks, they're meant for store data, so.",
                    "label": 0
                },
                {
                    "sent": "The types of queries that you have are standing queries.",
                    "label": 0
                },
                {
                    "sent": "You get you pose a query.",
                    "label": 0
                },
                {
                    "sent": "You get an answer and not.",
                    "label": 0
                },
                {
                    "sent": "They don't have this continuous nature that we need in streaming query agents.",
                    "label": 0
                },
                {
                    "sent": "They don't exploit this interlinking with linked up data, linked open data sets.",
                    "label": 0
                },
                {
                    "sent": "And they do not include some of the features that are really needed in in streaming query processing like like aggregates and some other ones well.",
                    "label": 0
                },
                {
                    "sent": "BM does does it now, but the others don't and they don't include reasoning in these queries either.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So as I said in another venture, we wanted to have a benchmark data set.",
                    "label": 0
                },
                {
                    "sent": "That is both relevant and realistic, so not just synthetic data that is semantically valid.",
                    "label": 1
                },
                {
                    "sent": "This is important because the notion of timestamps and ordering is really important in this kind of data sets.",
                    "label": 0
                },
                {
                    "sent": "Another thing that it should be Inter linkable.",
                    "label": 0
                },
                {
                    "sent": "I mean not just sensor data of some places, but this place is could be linked to something in another data set, so this is something that we wanted in this benchmark.",
                    "label": 0
                },
                {
                    "sent": "And then our concise set of features so important features that that are needed in streaming data processing like Windows which are time bounded operations.",
                    "label": 1
                },
                {
                    "sent": "Smart stations like averages and so on.",
                    "label": 0
                },
                {
                    "sent": "Continuous query processing.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 1
                },
                {
                    "sent": "And also contextual data which means again interlinking with other datasets.",
                    "label": 1
                },
                {
                    "sent": "So as we don't have a standard query language, what we had to do was to define these queries in this benchmark using descriptive definition an implement each one of them with the query languages that we have available.",
                    "label": 0
                },
                {
                    "sent": "So we took three of them, see sparkles, sequels, and Sparkle Stream.",
                    "label": 0
                },
                {
                    "sent": "This is not an exhaustive set of query languages, but these are the ones that are available and we think are meaningful.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "About the datasets, we picked the link sensor data data set which was published by ignorance and it's about.",
                    "label": 0
                },
                {
                    "sent": "Weather data in the US that was originally published by Miss OS.",
                    "label": 0
                },
                {
                    "sent": "Is the 1st and largest sensor data set in Lawton is composed of two parts 2 main parts, 1st the Meta data which talks about sensors.",
                    "label": 0
                },
                {
                    "sent": "The description of the sensors more than 20,000 years where stations.",
                    "label": 0
                },
                {
                    "sent": "And each of one is linked to Geonames, an on the other part.",
                    "label": 0
                },
                {
                    "sent": "We have the observations themselves.",
                    "label": 0
                },
                {
                    "sent": "These are like the measurements, so we have more than.",
                    "label": 0
                },
                {
                    "sent": "Then 1/2 billion triples of this kind of observation.",
                    "label": 0
                },
                {
                    "sent": "So we have just as a summary.",
                    "label": 0
                },
                {
                    "sent": "You can see we have data from some hurricanes.",
                    "label": 0
                },
                {
                    "sent": "And well, these are the data sizes we're talking about.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And this data set is linked to geonames and we also linked it to DB pedia.",
                    "label": 0
                },
                {
                    "sent": "So it's mainly about geographical locations in Geonames and then we have some.",
                    "label": 0
                },
                {
                    "sent": "Some links also to DB pedia.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So this is more or less that the data model we're talking about.",
                    "label": 0
                },
                {
                    "sent": "We have the observations, the observations on the metadata.",
                    "label": 0
                },
                {
                    "sent": "You can see that here are the measurements, the wrestle data.",
                    "label": 0
                },
                {
                    "sent": "I haven't included all the for example units of measurements and other things, but they are.",
                    "label": 0
                },
                {
                    "sent": "They are over there.",
                    "label": 0
                },
                {
                    "sent": "And here in the length link sensor metadata we have the information about the sensors and then the external datasets.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So we have defined it 17 queries.",
                    "label": 1
                },
                {
                    "sent": "This benchmark has 17 queries following this known well known principle of less than 20.",
                    "label": 0
                },
                {
                    "sent": "And these are the features that we are considering, so the typical graph pattern matching ones, an filter, union, optional solution, modifyers.",
                    "label": 1
                },
                {
                    "sent": "Projection this thing we meet at some of them.",
                    "label": 0
                },
                {
                    "sent": "Like for example.",
                    "label": 0
                },
                {
                    "sent": "Limit offset, which are not really.",
                    "label": 0
                },
                {
                    "sent": "So useful in this case, because we have Windows.",
                    "label": 0
                },
                {
                    "sent": "About the query forms, we didn't include the describ because it's not so well defined in the semantics of sparkles then Sparkle 11 we have some important operators like aggregates that we need in this in this benchmark subqueries, select expressions and property paths.",
                    "label": 0
                },
                {
                    "sent": "Then for reasoning, we included some very simple types of reasoning, subclass of property and same As for the for the links.",
                    "label": 0
                },
                {
                    "sent": "And these are typical streaming operators Windows, specifically, the time Windows.",
                    "label": 0
                },
                {
                    "sent": "We didn't include tuple, triple windows, and other operators that are kind of optional.",
                    "label": 0
                },
                {
                    "sent": "They transform a window into a stream.",
                    "label": 0
                },
                {
                    "sent": "I stream the stream on our stream.",
                    "label": 1
                },
                {
                    "sent": "And finally, about the data access.",
                    "label": 0
                },
                {
                    "sent": "Some of the queries are only posed to the observation datasets.",
                    "label": 0
                },
                {
                    "sent": "Some only two sensor metadata, some to both and some combine it with the external data sets as well.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So this is a summary of the features of the 17 queries.",
                    "label": 0
                },
                {
                    "sent": "So for example, I don't know if we pick query #8 it has A and in the end in the.",
                    "label": 0
                },
                {
                    "sent": "In the graph patterns, it is ideal for projection query and so on, so you can see here the this table is also in the paper, so you can see what kind of features we have.",
                    "label": 0
                },
                {
                    "sent": "For example the row #6 about streaming.",
                    "label": 0
                },
                {
                    "sent": "You can see that most of the queries include temporal windows in it.",
                    "label": 0
                },
                {
                    "sent": "So this is a summary of the features where we are considering for the 17 queries.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And I get to show some examples, so quite number one get the rainfall of 71 in one hour.",
                    "label": 0
                },
                {
                    "sent": "So in this case the rainfall observed is graph pattern.",
                    "label": 1
                },
                {
                    "sent": "We have the rainfall observations we want to get the value.",
                    "label": 0
                },
                {
                    "sent": "And the unit, well, the unit of measurement and the one in and out once in an hour.",
                    "label": 1
                },
                {
                    "sent": "This means that we will have to include some kind of time window that bounds the query in the last hour.",
                    "label": 0
                },
                {
                    "sent": "So another example, query #2 get all precipitation, observing once in an hour is very similar to the other one, but in this case all precipitation can mean different things.",
                    "label": 1
                },
                {
                    "sent": "So apart from the graph pattern, we have to take into account that precipitation observation may also be rainfall or any other subclass of it.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Another query get the average wind speed at stations where the air temperature is higher than 32 degrees in the last hour every 10 minutes.",
                    "label": 1
                },
                {
                    "sent": "So here we have several things.",
                    "label": 0
                },
                {
                    "sent": "The graph pattern of course, but we also have to add aggregates.",
                    "label": 0
                },
                {
                    "sent": "Filter over there a time window that that also includes the slide because you have to do it every 10 minutes.",
                    "label": 0
                },
                {
                    "sent": "And so.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And we have query #9A.",
                    "label": 0
                },
                {
                    "sent": "In this case we have to combine.",
                    "label": 0
                },
                {
                    "sent": "Now, in this case we have to compute the average wind force and you do it with a formula.",
                    "label": 1
                },
                {
                    "sent": "So in this case the query needs to include.",
                    "label": 0
                },
                {
                    "sent": "Operators in the select expression.",
                    "label": 0
                },
                {
                    "sent": "In order to do that.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And finally, this.",
                    "label": 0
                },
                {
                    "sent": "I think this is the last example I have.",
                    "label": 0
                },
                {
                    "sent": "Get the hourly average air temperature and humidity of large cities.",
                    "label": 1
                },
                {
                    "sent": "So what is a large city in this query?",
                    "label": 0
                },
                {
                    "sent": "In this query we have defined that is one that has a population higher than.",
                    "label": 0
                },
                {
                    "sent": "15,000 so this is this is a case where we have to go to geonames and or.",
                    "label": 0
                },
                {
                    "sent": "I mean the external datasets to get this information so.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We have implemented this queries as I said, using these three languages sparkles Focus Tree Man sequels.",
                    "label": 0
                },
                {
                    "sent": "We have published in a week patient W. 3C.",
                    "label": 0
                },
                {
                    "sent": "Of course it's not an exhaustive list of query languages, but it gives you an idea of how the queries look like.",
                    "label": 0
                },
                {
                    "sent": "And I get.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Again, I can go through the examples.",
                    "label": 0
                },
                {
                    "sent": "This is the one this query #6 in Sparkle stream you can see here for example, the time window over there you have a window of one hour and you're getting snow observation, rainfall observations and visibility in unions so.",
                    "label": 0
                },
                {
                    "sent": "We have expressed the same queries in SPARQL and sequels and if you take a look at these queries they are really similar.",
                    "label": 0
                },
                {
                    "sent": "This extensions are really similar one to another.",
                    "label": 0
                },
                {
                    "sent": "We have mainly because some one of them was created 1st and the other ones maybe were inspired by the other.",
                    "label": 0
                },
                {
                    "sent": "So main differences are that I'm windows, they have different syntax, but this is not a big deal really.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "But anyway, we have them in the three languages because we don't have standard yet.",
                    "label": 0
                },
                {
                    "sent": "This is another example of an ASK query.",
                    "label": 0
                },
                {
                    "sent": "So we are asking to detect a hurricane if it has been observed.",
                    "label": 1
                },
                {
                    "sent": "So in this case we have the ASK querying setup of classic select.",
                    "label": 1
                },
                {
                    "sent": "We need group by because we have to compare the average.",
                    "label": 0
                },
                {
                    "sent": "Of the wind speed.",
                    "label": 0
                },
                {
                    "sent": "And we have the similar similar queries in sparkling sequels and you will see that they look really similar.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "This is the final example in Sparkle Stream of query #2 get all Precipitation server ones in an hour.",
                    "label": 1
                },
                {
                    "sent": "So one way of implementing this query was using a property path.",
                    "label": 0
                },
                {
                    "sent": "Using this property path, we can get off subclasses of of precipitation observations, so in this way we can get rainfall or.",
                    "label": 0
                },
                {
                    "sent": "Or snowfall or another type of precipitation.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So as I said in the beginning, we did a functional evaluation of this queries.",
                    "label": 0
                },
                {
                    "sent": "Green means OK and not green means bad.",
                    "label": 0
                },
                {
                    "sent": "So if you see letters here, it means that it didn't work for some reason.",
                    "label": 0
                },
                {
                    "sent": "So as you see sequences Farkle.",
                    "label": 0
                },
                {
                    "sent": "Terms of these queries.",
                    "label": 0
                },
                {
                    "sent": "They support more or less the same functionality's Sparkle stream is a bit behind because, for example it has problems with group buys.",
                    "label": 0
                },
                {
                    "sent": "If you see query number 45 and eight.",
                    "label": 0
                },
                {
                    "sent": "It failed because it has some problem with grouping.",
                    "label": 0
                },
                {
                    "sent": "You can also see in this table that most of the queries had problems with property paths.",
                    "label": 0
                },
                {
                    "sent": "They in most of them they don't really work and there are some interesting things like for example the ASK query.",
                    "label": 0
                },
                {
                    "sent": "Current #3 is the only one that includes an ask.",
                    "label": 0
                },
                {
                    "sent": "And all of them failed even though asks should be a simple operation to execute.",
                    "label": 0
                },
                {
                    "sent": "And well, there are other features I you can see in the paper and this table.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So as I said, there are some.",
                    "label": 0
                },
                {
                    "sent": "There are some functionalities of this particle extensions that are work or seem to work in this in this.",
                    "label": 0
                },
                {
                    "sent": "Query languages like the graph pattern.",
                    "label": 1
                },
                {
                    "sent": "They mostly work on them.",
                    "label": 0
                },
                {
                    "sent": "Solution modifiers are OK.",
                    "label": 0
                },
                {
                    "sent": "Select and construct.",
                    "label": 0
                },
                {
                    "sent": "There are implemented by this query engines.",
                    "label": 0
                },
                {
                    "sent": "But some of some of features are not ready yet, like property paths they ask and some other some other operations like this stream or not exist.",
                    "label": 0
                },
                {
                    "sent": "They have some problems.",
                    "label": 1
                },
                {
                    "sent": "And in terms of reasoning that there are also some K that so for example, see sparkles supports simple RDF entailment, but in the distributed version that is available this is.",
                    "label": 0
                },
                {
                    "sent": "This doesn't work yet.",
                    "label": 0
                },
                {
                    "sent": "In sparkles, Freeman's equals this is not.",
                    "label": 0
                },
                {
                    "sent": "This is not implemented at all, so.",
                    "label": 0
                },
                {
                    "sent": "Well, as I said, each of these query engines works differently internally.",
                    "label": 0
                },
                {
                    "sent": "So for example, Sparkle Stream delegates query query execution to an underlying data stream management system.",
                    "label": 0
                },
                {
                    "sent": "And this different way of working.",
                    "label": 0
                },
                {
                    "sent": "Is kind of a challenge for this type of benchmarks because.",
                    "label": 0
                },
                {
                    "sent": "What you get when you get back in the case of Sparkle Stream depends on what is the functionality available, but the underlying data stream management system.",
                    "label": 0
                },
                {
                    "sent": "So these are things to consider.",
                    "label": 0
                },
                {
                    "sent": "In the case of sequels, it's a native implementation, so many of these features can be can be added and are being.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Added I think.",
                    "label": 0
                },
                {
                    "sent": "These days so more ongoing work it's to define some test criteria for this benchmark.",
                    "label": 0
                },
                {
                    "sent": "So, for example, the correctness, throughput, scalability and response time.",
                    "label": 0
                },
                {
                    "sent": "This is not really an easy task.",
                    "label": 0
                },
                {
                    "sent": "For example, for the correctness, this should be something simple, but it is not because.",
                    "label": 0
                },
                {
                    "sent": "Even though you can execute these queries in this system, sometimes they don't throw the same output and this is for different reasons.",
                    "label": 0
                },
                {
                    "sent": "Sometimes the semantics cannot can be can have differences in this query languages sometimes that the way they threw the output is also different, so these are some things that have to be considered.",
                    "label": 0
                },
                {
                    "sent": "Well, these are other typical test criteria that we have to discuss throughput, but throughput is also tricky because you have to take into account how much data you are throwing and if this is not not the same in all query languages then it's difficult to compare the throughput.",
                    "label": 0
                },
                {
                    "sent": "Anwell",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I think I have discussed most of this of these issues that we have.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And well, there is also some related work.",
                    "label": 1
                },
                {
                    "sent": "There was a paper presented yesterday or or.",
                    "label": 0
                },
                {
                    "sent": "Yes, I think yesterday about a framework and tools that providing the link stream data engines that considered a subset of functionalities and was based on synthetic data which adds some flexibility.",
                    "label": 1
                },
                {
                    "sent": "But it's synthetic so you have trade off there.",
                    "label": 0
                },
                {
                    "sent": "And they had a first set of performances, which is something really useful because you already have notion of what's going on in this area.",
                    "label": 0
                },
                {
                    "sent": "And something I think it's also important to emphasize is that there are things there are things in semantic web, semantic streaming, data processing that we can show to people outside of this community, because, for example, reasoning and this type of features like property paths, an advanced constructs in queries are not really available in other type of streaming query engines.",
                    "label": 0
                },
                {
                    "sent": "So this is something really interesting, not only in this community, but.",
                    "label": 0
                },
                {
                    "sent": "Also outside.",
                    "label": 0
                },
                {
                    "sent": "So if we have some kind of benchmark that takes into account, then then.",
                    "label": 0
                },
                {
                    "sent": "Is something that we can show outside?",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "As well.",
                    "label": 0
                },
                {
                    "sent": "So as a summary, we presented as our bench benchmark for streaming RDF engines.",
                    "label": 1
                },
                {
                    "sent": "Something we some things we still have to do is work on the performance evaluation and scalability.",
                    "label": 0
                },
                {
                    "sent": "And well, maybe some other work like exploiting more reasoning possibilities on semantic data.",
                    "label": 1
                },
                {
                    "sent": "We have just considered some very simple use cases.",
                    "label": 0
                },
                {
                    "sent": "Ann, well, I think this is all.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Had to say for now.",
                    "label": 0
                }
            ]
        }
    }
}