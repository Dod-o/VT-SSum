{
    "id": "b2rllmgxwittva4drm7qzqwj6amb6rzk",
    "title": "An Efficient Fusion Move Algorithm for the Minimum Cost Lifted Multicut Problem",
    "info": {
        "author": [
            "Thorsten Beier, University of Heidelberg"
        ],
        "published": "Oct. 24, 2016",
        "recorded": "October 2016",
        "category": [
            "Top->Computer Science->Computer Vision"
        ]
    },
    "url": "http://videolectures.net/eccv2016_beier_efficient_fusion/",
    "segmentation": [
        [
            "Good morning everybody.",
            "I'm going to talk to you about our work and efficient Fusion move algorithm for the minimum cost lifted multicut problem, and I'm tossing buyer and his work was being done.",
            "Dress or recruiter, an freight unbraced.",
            "So since my."
        ],
        [
            "You might not be familiar with the Multicart objective, and specially not with the lifted multicut objective.",
            "I'm going to spend some time to explain this.",
            "Then I'm going to show on your algorithm and some cool applications and benchmarks."
        ],
        [
            "So the multicut objective it's also known as correlation clustering.",
            "So what are the ingredients we need?",
            "So since we want to cluster."
        ],
        [
            "Off we need first a graph.",
            "And we have edge weights for any weights.",
            "So the objective is basically just find a clustering which minimizes the sum of weights between clusters.",
            "We can model attractive forces with positive weights and repulsive forces with negative weights.",
            "The number of clusters does not need to be specified, so we just ran the multicart algorithm and the optimal number of clusters will be just given by the result.",
            "We can formulate this as an LP where we have one variable per edge and 0 means this variable does.",
            "Edge is not cut, 1 means it's cut.",
            "Furthermore, we have we have weights, they're negative if they favors the edge to be cut, and they're positive if they want the edge to be not cut.",
            "In addition to that, we need a set of constraints to ensure that this is a valid segmentation without dangling edges.",
            "Please don't try to understand the constraints just from looking at that.",
            "Let's have a look at example.",
            "So here you see a super."
        ],
        [
            "The segmentation of an image and the corresponding graph.",
            "We have weights for any edge and if we omit the constraints for one second, it's basically just thresholding.",
            "Any negative edge will be cut, positive edges won't be cut."
        ],
        [
            "As we see here.",
            "But then we get a problem.",
            "So as we see on the very right side, the edge between the node three and eight is set to be."
        ],
        [
            "But there is a pass of uncut edges."
        ],
        [
            "Connecting those two nodes so it's not a valid segmentation, and this violates the constraints you see above.",
            "So we can add these constraints iterative."
        ],
        [
            "In the cutting plane fashion, until there are no more violated constraints and we get the optimal clustering."
        ],
        [
            "So the multi cut is used for image segmentation, so often you have an edge detector from the CNN or even older canny edge detector.",
            "And if you just threshold this edge detector you could open ends as you can see on the third image indicated with these red errors and if we just plug this into the multi card objective the cycle constraints will remove these open ends and we will get a valid optimal segmentation with respect to the edge indicator we used."
        ],
        [
            "Furthermore, this is used for closed surface segmentation for connectomics.",
            "So here the goal is to extract an unknown number of neurons from electron microscopy data and of course we have attractive and repulsive terms between the Super box let's."
        ],
        [
            "So now let's talk about the lifted Multicard objective.",
            "So why do?"
        ],
        [
            "We need it, so let's have a look at this tiny 3 * 2 grid graph and let's use some edge weight."
        ],
        [
            "In this case, we just use negative edge weights.",
            "So the optimal multi."
        ],
        [
            "Result will be to put any node in its own cluster.",
            "Since any edge wants to be cut.",
            "So now let's add a reward."
        ],
        [
            "For the node one and six to be in the same cluster well and now even."
        ],
        [
            "Which would just be to add an edge between them and give it a high weight, in this case 5.",
            "So let's solve this again with the multi cut.",
            "What we get back is there."
        ],
        [
            "Gordon believes that node one and node six are in the same cluster because there is edge which is not cut between them and connects them.",
            "But if this is an image, what we really want is the following."
        ],
        [
            "We would like to have node one and six to be connected in the original graph, and this additional edge which is here colored in green should should just give us the energy and does not."
        ],
        [
            "Should not work with connectivity, so we want to use these additional edges just for energy, not for connectivity.",
            "And."
        ],
        [
            "This is exactly what the minimum lifted.",
            "Multicut objective from beyond Andres is doing.",
            "So, let's formalize this again, we have a graph."
        ],
        [
            "And we have additional edges here, just one additional edge in green, but it can be arbitrarily many.",
            "And we have edge weights."
        ],
        [
            "So the setup is exactly the same as the multicart.",
            "We have the same constraints as the multicart, so if you look at the con."
        ],
        [
            "Duration you see above the edge between node one and two is set to be cut, but there is a path."
        ],
        [
            "Connecting them so the set of constraints will forbid this."
        ],
        [
            "Configuration.",
            "We need a few more constraints, so if."
        ],
        [
            "The additional edges cut as you see in the in the configuration above, there must not."
        ],
        [
            "Your path between the endpoints of this additional edge as you."
        ],
        [
            "And see here.",
            "So this configuration is ruled out by the 2nd set of constraints and last but not least."
        ],
        [
            "If the additional edge edge is not cut, then we need to make sure that in the additional graph there is in the graph there is no cut between those nodes."
        ],
        [
            "As you can see here so."
        ],
        [
            "Is this complicated constraints we can enforce that these additional edges are just used for energy but not for connectivity, so doesn't idle P and this scales horribly.",
            "So if we want to use it for large images, we're basically doomed.",
            "So what can we do about it?"
        ],
        [
            "So here in our paper we propose a Fusion move for this problem.",
            "So in a Fusion move set up, it's all about combining two solutions into one single solution, which does not worsen the energy.",
            "So how can we implement this?"
        ],
        [
            "Let's just look at at some arbitrary solution for this problem where some edges are cut so matches are not cut.",
            "Intersect."
        ],
        [
            "Solution now we ask for all edges which are neither cut."
        ],
        [
            "In solution A&B, those are the edges which you can see here in bold.",
            "So what we can do, we can just add must link constraints for any of those edges which are neither cut in A or B and since those are must link constraints, we can just contract these edges."
        ],
        [
            "And what we get back is a way smaller graph, and on the smaller graph we are unable to optimize the lifted multicard problem more easy since it's way smaller graph you have fewer edges and fewer nodes so."
        ],
        [
            "It's just optimized this, then we get some edges to be cut back and some are not cut and we can basically use these results and project them back to the."
        ],
        [
            "Original graph which you can see here.",
            "By construction solution, a anbia both indefeasible set of this procedure.",
            "So we are guaranteed to not worsen the energy.",
            "So here you."
        ],
        [
            "See it again summarized.",
            "We have two solutions we ask for any edges which are neither cut in both of these solutions.",
            "We can add must link constraints for all these edges contract the graph.",
            "Get a smaller problem.",
            "Optimize it there.",
            "And use this result on the original graph.",
            "Of course, this is a straightforward generalization for Fusion moves from Victor Lipinski and Fusion moves for correlation clustering.",
            "It's a fast and scalable algorithm.",
            "We can easily make a parallel algorithm out of this, and it leads to state of the art results.",
            "If you want to know more about about this algorithm, specially how we generate the proposal and so on, please visit us at our poster.",
            "And now let's look at."
        ],
        [
            "Cool applications So what?"
        ],
        [
            "Use this algorithm.",
            "Most four is for segmenting neuron data.",
            "As you can see here.",
            "So this is from the SP 2003."
        ],
        [
            "Challenge and what we would like is to assign any neuron its identity, which is color tiers.",
            "So everything which has a different color is a different neuron and we want to extract these neurons."
        ],
        [
            "So first we start with CNN and learn the membrane probability."
        ],
        [
            "Will lead to results like this.",
            "Then we get so."
        ],
        [
            "For pixels, and now, let's look at a different angle on this problem so."
        ],
        [
            "Here we have the Super pixels."
        ],
        [
            "You have to notes in there."
        ],
        [
            "Rough and we have all these local edges in the."
        ],
        [
            "Of course we learn the edge weights of the local edges."
        ],
        [
            "And color them accordingly.",
            "But what we do is the lifted multicopters we can add."
        ],
        [
            "And local edges, so edges which are not adjacent in the graph.",
            "And we can learn these if they should be cut or not cut."
        ],
        [
            "So we do this and then we optimize this with the Pro."
        ],
        [
            "Host the algorithm so we get some edges back which are cut and some are not cut.",
            "And we get."
        ],
        [
            "These results, which are really close to human performance so."
        ],
        [
            "Our code is available, so not only the code photos over, but a complete pipeline to get these results on on neural data.",
            "And using this code we get good results in this public available leaderboard of this challenge, so."
        ],
        [
            "So what you see here at the very bottom is the performance of about 2012.",
            "This was the year of the competition.",
            "Then there was some improvement over the years and what you see at the top is our CNN.",
            "So our CNN by itself is a tiny bit better than the others.",
            "But if you use our lifted Multicut pipeline on top of the CNN, you see a quite big boost in performance.",
            "As I said, the code is available on GitHub.",
            "Feel free to clone it.",
            "What we did in addition."
        ],
        [
            "As a stress test for the Sullivan.",
            "So if you if you might know the Berkeley Segmentation database and there you have multiple ground rules instances for each image and what we did here is, we generalize the work of our lotion called Burger from 2012, where we want to combine multiple segmentations into one reliable segmentation.",
            "So here no RGB data is used whatsoever, so we just use the segmentations to combine them.",
            "So here we work directly on the pixel level.",
            "Connect any pairs of pixel within a graph distance of five.",
            "So there's a really huge problem and a stress test for the solver.",
            "And you optimize it with the proposed algorithm.",
            "You can see the results on the very top right, and if you use another solver which is also working on on this objective, which was the state of the art before algorithm, it leads to these result."
        ],
        [
            "Twitch do not look that good.",
            "So as I said, we."
        ],
        [
            "Paralyzed algorithm and you can see if we run it with eight threads, it's about 3 times faster than in a single thread mode, and we get better energies and better results than any other solver."
        ],
        [
            "That's on, I hope you come to our post on and if you have questions let us discuss the math and all the applications there.",
            "Thank you."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Good morning everybody.",
                    "label": 0
                },
                {
                    "sent": "I'm going to talk to you about our work and efficient Fusion move algorithm for the minimum cost lifted multicut problem, and I'm tossing buyer and his work was being done.",
                    "label": 1
                },
                {
                    "sent": "Dress or recruiter, an freight unbraced.",
                    "label": 0
                },
                {
                    "sent": "So since my.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "You might not be familiar with the Multicart objective, and specially not with the lifted multicut objective.",
                    "label": 1
                },
                {
                    "sent": "I'm going to spend some time to explain this.",
                    "label": 0
                },
                {
                    "sent": "Then I'm going to show on your algorithm and some cool applications and benchmarks.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So the multicut objective it's also known as correlation clustering.",
                    "label": 1
                },
                {
                    "sent": "So what are the ingredients we need?",
                    "label": 0
                },
                {
                    "sent": "So since we want to cluster.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Off we need first a graph.",
                    "label": 0
                },
                {
                    "sent": "And we have edge weights for any weights.",
                    "label": 0
                },
                {
                    "sent": "So the objective is basically just find a clustering which minimizes the sum of weights between clusters.",
                    "label": 1
                },
                {
                    "sent": "We can model attractive forces with positive weights and repulsive forces with negative weights.",
                    "label": 1
                },
                {
                    "sent": "The number of clusters does not need to be specified, so we just ran the multicart algorithm and the optimal number of clusters will be just given by the result.",
                    "label": 0
                },
                {
                    "sent": "We can formulate this as an LP where we have one variable per edge and 0 means this variable does.",
                    "label": 0
                },
                {
                    "sent": "Edge is not cut, 1 means it's cut.",
                    "label": 0
                },
                {
                    "sent": "Furthermore, we have we have weights, they're negative if they favors the edge to be cut, and they're positive if they want the edge to be not cut.",
                    "label": 0
                },
                {
                    "sent": "In addition to that, we need a set of constraints to ensure that this is a valid segmentation without dangling edges.",
                    "label": 0
                },
                {
                    "sent": "Please don't try to understand the constraints just from looking at that.",
                    "label": 0
                },
                {
                    "sent": "Let's have a look at example.",
                    "label": 0
                },
                {
                    "sent": "So here you see a super.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The segmentation of an image and the corresponding graph.",
                    "label": 0
                },
                {
                    "sent": "We have weights for any edge and if we omit the constraints for one second, it's basically just thresholding.",
                    "label": 0
                },
                {
                    "sent": "Any negative edge will be cut, positive edges won't be cut.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "As we see here.",
                    "label": 0
                },
                {
                    "sent": "But then we get a problem.",
                    "label": 0
                },
                {
                    "sent": "So as we see on the very right side, the edge between the node three and eight is set to be.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "But there is a pass of uncut edges.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Connecting those two nodes so it's not a valid segmentation, and this violates the constraints you see above.",
                    "label": 0
                },
                {
                    "sent": "So we can add these constraints iterative.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "In the cutting plane fashion, until there are no more violated constraints and we get the optimal clustering.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So the multi cut is used for image segmentation, so often you have an edge detector from the CNN or even older canny edge detector.",
                    "label": 0
                },
                {
                    "sent": "And if you just threshold this edge detector you could open ends as you can see on the third image indicated with these red errors and if we just plug this into the multi card objective the cycle constraints will remove these open ends and we will get a valid optimal segmentation with respect to the edge indicator we used.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Furthermore, this is used for closed surface segmentation for connectomics.",
                    "label": 0
                },
                {
                    "sent": "So here the goal is to extract an unknown number of neurons from electron microscopy data and of course we have attractive and repulsive terms between the Super box let's.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So now let's talk about the lifted Multicard objective.",
                    "label": 0
                },
                {
                    "sent": "So why do?",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We need it, so let's have a look at this tiny 3 * 2 grid graph and let's use some edge weight.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "In this case, we just use negative edge weights.",
                    "label": 0
                },
                {
                    "sent": "So the optimal multi.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Result will be to put any node in its own cluster.",
                    "label": 0
                },
                {
                    "sent": "Since any edge wants to be cut.",
                    "label": 0
                },
                {
                    "sent": "So now let's add a reward.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "For the node one and six to be in the same cluster well and now even.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Which would just be to add an edge between them and give it a high weight, in this case 5.",
                    "label": 0
                },
                {
                    "sent": "So let's solve this again with the multi cut.",
                    "label": 0
                },
                {
                    "sent": "What we get back is there.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Gordon believes that node one and node six are in the same cluster because there is edge which is not cut between them and connects them.",
                    "label": 0
                },
                {
                    "sent": "But if this is an image, what we really want is the following.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We would like to have node one and six to be connected in the original graph, and this additional edge which is here colored in green should should just give us the energy and does not.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Should not work with connectivity, so we want to use these additional edges just for energy, not for connectivity.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "This is exactly what the minimum lifted.",
                    "label": 1
                },
                {
                    "sent": "Multicut objective from beyond Andres is doing.",
                    "label": 0
                },
                {
                    "sent": "So, let's formalize this again, we have a graph.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And we have additional edges here, just one additional edge in green, but it can be arbitrarily many.",
                    "label": 0
                },
                {
                    "sent": "And we have edge weights.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So the setup is exactly the same as the multicart.",
                    "label": 0
                },
                {
                    "sent": "We have the same constraints as the multicart, so if you look at the con.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Duration you see above the edge between node one and two is set to be cut, but there is a path.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Connecting them so the set of constraints will forbid this.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Configuration.",
                    "label": 0
                },
                {
                    "sent": "We need a few more constraints, so if.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The additional edges cut as you see in the in the configuration above, there must not.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Your path between the endpoints of this additional edge as you.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And see here.",
                    "label": 0
                },
                {
                    "sent": "So this configuration is ruled out by the 2nd set of constraints and last but not least.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "If the additional edge edge is not cut, then we need to make sure that in the additional graph there is in the graph there is no cut between those nodes.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "As you can see here so.",
                    "label": 0
                }
            ]
        },
        "clip_31": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Is this complicated constraints we can enforce that these additional edges are just used for energy but not for connectivity, so doesn't idle P and this scales horribly.",
                    "label": 0
                },
                {
                    "sent": "So if we want to use it for large images, we're basically doomed.",
                    "label": 0
                },
                {
                    "sent": "So what can we do about it?",
                    "label": 0
                }
            ]
        },
        "clip_32": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So here in our paper we propose a Fusion move for this problem.",
                    "label": 0
                },
                {
                    "sent": "So in a Fusion move set up, it's all about combining two solutions into one single solution, which does not worsen the energy.",
                    "label": 0
                },
                {
                    "sent": "So how can we implement this?",
                    "label": 0
                }
            ]
        },
        "clip_33": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Let's just look at at some arbitrary solution for this problem where some edges are cut so matches are not cut.",
                    "label": 0
                },
                {
                    "sent": "Intersect.",
                    "label": 0
                }
            ]
        },
        "clip_34": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Solution now we ask for all edges which are neither cut.",
                    "label": 0
                }
            ]
        },
        "clip_35": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "In solution A&B, those are the edges which you can see here in bold.",
                    "label": 0
                },
                {
                    "sent": "So what we can do, we can just add must link constraints for any of those edges which are neither cut in A or B and since those are must link constraints, we can just contract these edges.",
                    "label": 0
                }
            ]
        },
        "clip_36": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And what we get back is a way smaller graph, and on the smaller graph we are unable to optimize the lifted multicard problem more easy since it's way smaller graph you have fewer edges and fewer nodes so.",
                    "label": 0
                }
            ]
        },
        "clip_37": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "It's just optimized this, then we get some edges to be cut back and some are not cut and we can basically use these results and project them back to the.",
                    "label": 0
                }
            ]
        },
        "clip_38": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Original graph which you can see here.",
                    "label": 0
                },
                {
                    "sent": "By construction solution, a anbia both indefeasible set of this procedure.",
                    "label": 0
                },
                {
                    "sent": "So we are guaranteed to not worsen the energy.",
                    "label": 0
                },
                {
                    "sent": "So here you.",
                    "label": 0
                }
            ]
        },
        "clip_39": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "See it again summarized.",
                    "label": 0
                },
                {
                    "sent": "We have two solutions we ask for any edges which are neither cut in both of these solutions.",
                    "label": 0
                },
                {
                    "sent": "We can add must link constraints for all these edges contract the graph.",
                    "label": 1
                },
                {
                    "sent": "Get a smaller problem.",
                    "label": 0
                },
                {
                    "sent": "Optimize it there.",
                    "label": 1
                },
                {
                    "sent": "And use this result on the original graph.",
                    "label": 0
                },
                {
                    "sent": "Of course, this is a straightforward generalization for Fusion moves from Victor Lipinski and Fusion moves for correlation clustering.",
                    "label": 0
                },
                {
                    "sent": "It's a fast and scalable algorithm.",
                    "label": 0
                },
                {
                    "sent": "We can easily make a parallel algorithm out of this, and it leads to state of the art results.",
                    "label": 0
                },
                {
                    "sent": "If you want to know more about about this algorithm, specially how we generate the proposal and so on, please visit us at our poster.",
                    "label": 0
                },
                {
                    "sent": "And now let's look at.",
                    "label": 0
                }
            ]
        },
        "clip_40": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Cool applications So what?",
                    "label": 0
                }
            ]
        },
        "clip_41": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Use this algorithm.",
                    "label": 0
                },
                {
                    "sent": "Most four is for segmenting neuron data.",
                    "label": 0
                },
                {
                    "sent": "As you can see here.",
                    "label": 0
                },
                {
                    "sent": "So this is from the SP 2003.",
                    "label": 0
                }
            ]
        },
        "clip_42": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Challenge and what we would like is to assign any neuron its identity, which is color tiers.",
                    "label": 0
                },
                {
                    "sent": "So everything which has a different color is a different neuron and we want to extract these neurons.",
                    "label": 0
                }
            ]
        },
        "clip_43": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So first we start with CNN and learn the membrane probability.",
                    "label": 0
                }
            ]
        },
        "clip_44": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Will lead to results like this.",
                    "label": 0
                },
                {
                    "sent": "Then we get so.",
                    "label": 0
                }
            ]
        },
        "clip_45": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "For pixels, and now, let's look at a different angle on this problem so.",
                    "label": 0
                }
            ]
        },
        "clip_46": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Here we have the Super pixels.",
                    "label": 0
                }
            ]
        },
        "clip_47": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "You have to notes in there.",
                    "label": 0
                }
            ]
        },
        "clip_48": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Rough and we have all these local edges in the.",
                    "label": 0
                }
            ]
        },
        "clip_49": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Of course we learn the edge weights of the local edges.",
                    "label": 0
                }
            ]
        },
        "clip_50": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And color them accordingly.",
                    "label": 0
                },
                {
                    "sent": "But what we do is the lifted multicopters we can add.",
                    "label": 0
                }
            ]
        },
        "clip_51": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And local edges, so edges which are not adjacent in the graph.",
                    "label": 0
                },
                {
                    "sent": "And we can learn these if they should be cut or not cut.",
                    "label": 0
                }
            ]
        },
        "clip_52": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So we do this and then we optimize this with the Pro.",
                    "label": 0
                }
            ]
        },
        "clip_53": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Host the algorithm so we get some edges back which are cut and some are not cut.",
                    "label": 0
                },
                {
                    "sent": "And we get.",
                    "label": 0
                }
            ]
        },
        "clip_54": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "These results, which are really close to human performance so.",
                    "label": 0
                }
            ]
        },
        "clip_55": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Our code is available, so not only the code photos over, but a complete pipeline to get these results on on neural data.",
                    "label": 0
                },
                {
                    "sent": "And using this code we get good results in this public available leaderboard of this challenge, so.",
                    "label": 0
                }
            ]
        },
        "clip_56": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So what you see here at the very bottom is the performance of about 2012.",
                    "label": 0
                },
                {
                    "sent": "This was the year of the competition.",
                    "label": 0
                },
                {
                    "sent": "Then there was some improvement over the years and what you see at the top is our CNN.",
                    "label": 0
                },
                {
                    "sent": "So our CNN by itself is a tiny bit better than the others.",
                    "label": 0
                },
                {
                    "sent": "But if you use our lifted Multicut pipeline on top of the CNN, you see a quite big boost in performance.",
                    "label": 0
                },
                {
                    "sent": "As I said, the code is available on GitHub.",
                    "label": 0
                },
                {
                    "sent": "Feel free to clone it.",
                    "label": 0
                },
                {
                    "sent": "What we did in addition.",
                    "label": 0
                }
            ]
        },
        "clip_57": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "As a stress test for the Sullivan.",
                    "label": 0
                },
                {
                    "sent": "So if you if you might know the Berkeley Segmentation database and there you have multiple ground rules instances for each image and what we did here is, we generalize the work of our lotion called Burger from 2012, where we want to combine multiple segmentations into one reliable segmentation.",
                    "label": 0
                },
                {
                    "sent": "So here no RGB data is used whatsoever, so we just use the segmentations to combine them.",
                    "label": 0
                },
                {
                    "sent": "So here we work directly on the pixel level.",
                    "label": 0
                },
                {
                    "sent": "Connect any pairs of pixel within a graph distance of five.",
                    "label": 0
                },
                {
                    "sent": "So there's a really huge problem and a stress test for the solver.",
                    "label": 0
                },
                {
                    "sent": "And you optimize it with the proposed algorithm.",
                    "label": 0
                },
                {
                    "sent": "You can see the results on the very top right, and if you use another solver which is also working on on this objective, which was the state of the art before algorithm, it leads to these result.",
                    "label": 0
                }
            ]
        },
        "clip_58": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Twitch do not look that good.",
                    "label": 0
                },
                {
                    "sent": "So as I said, we.",
                    "label": 0
                }
            ]
        },
        "clip_59": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Paralyzed algorithm and you can see if we run it with eight threads, it's about 3 times faster than in a single thread mode, and we get better energies and better results than any other solver.",
                    "label": 0
                }
            ]
        },
        "clip_60": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "That's on, I hope you come to our post on and if you have questions let us discuss the math and all the applications there.",
                    "label": 0
                },
                {
                    "sent": "Thank you.",
                    "label": 0
                }
            ]
        }
    }
}