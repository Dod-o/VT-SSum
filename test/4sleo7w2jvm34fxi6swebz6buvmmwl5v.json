{
    "id": "4sleo7w2jvm34fxi6swebz6buvmmwl5v",
    "title": "Practical Ontology Pattern Instantiation, Discovery, and Maintenance with Reasonable Ontology Templates",
    "info": {
        "author": [
            "Martin G. Skj\u00e6veland, Faculty of Mathematics and Natural Sciences, University of Groningen"
        ],
        "published": "Nov. 22, 2018",
        "recorded": "October 2018",
        "category": [
            "Top->Computer Science->Semantic Web"
        ]
    },
    "url": "http://videolectures.net/iswc2018_skjaveland_practical_instantiation_templa/",
    "segmentation": [
        [
            "So I'll be presenting work, joint work with my colleagues at the University of Oslo, Daniel Leffel and Henrik."
        ],
        [
            "The problem that we're tackling our main goal is that we want to improve the efficiency and quality of ontology engineering and the problems that we think we're faced with is that current ontology engineering methods are way too low level, and this makes ontology construction repetitive and error prone.",
            "It makes it difficult to engage end users because I think we as a community have yet to provide.",
            "The correct tools for the real people, as we heard in last, yesterday's keynote.",
            "It's difficult to generate sustainable large ontologies, and it's difficult to efficiently maintain these ontologies."
        ],
        [
            "We need our better abstractions.",
            "We need to be able to capture an instantiate, reoccuring modeling patterns.",
            "We need better formats that are adopted to the different types of roles that we have in until January.",
            "Ring the domain experts, the data managers and the ontology experts."
        ],
        [
            "So what are ontology reasonable ontology templates called author templates?",
            "So here we see some patterns.",
            "We see some pizzazz, and there is some recurring pattern here.",
            "And the blue stuff is what varies.",
            "But the black stuff stays the same.",
            "What we do is we represent the pattern using."
        ],
        [
            "A template and mark."
        ],
        [
            "The variables with green and we give it the name."
        ],
        [
            "And Mark List of parameters that are given to the template."
        ],
        [
            "This is a recursive structure, so each of.",
            "The triples are also templates."
        ],
        [
            "What we now can do is make instances of this template by referring to the pizza template and giving the arguments.",
            "This block here now represents the same pattern that we have on the left.",
            "So this is simple macros.",
            "What we?"
        ],
        [
            "Assuming that we now have a new template which represents the simple subclass of relationship.",
            "We"
        ],
        [
            "We can now replace this second triple here with a call to the subclass template.",
            "So."
        ],
        [
            "Whatever we gained, we have.",
            "We now have abstractions.",
            "We have a name.",
            "Pizza that represents this pattern and we can call it with arguments."
        ],
        [
            "This means that we don't repeat ourselves, so.",
            "We only make calls and do not need to repeat the pattern."
        ],
        [
            "Since templates can be built on other templates, we have this modularity and we can encapsulate the complexity of modeling.",
            "So in this simple example we see that we capture the OR we hide the complexity of the subclass relationship.",
            "So this I mean this is extremely simple, but.",
            "So the user does not need to know what how the modeling of the subclass template looks like."
        ],
        [
            "We got uniform modeling."
        ],
        [
            "And we separate to design and content, so the design or the templates and the content or the instances of the template."
        ],
        [
            "This ensures complete.",
            "We can also ensure completeness of input, so you cannot make pizzas without giving both arguments.",
            "And we have this simple input format that we shall exploit later."
        ],
        [
            "So how does this work?",
            "It works with simple syntactic substitution and macro expansion.",
            "So."
        ],
        [
            "I will now illustrate how this instance is expanded, so we replace.",
            "We take the pizza template and replace the."
        ],
        [
            "Labels, sorry the parameters with the arguments."
        ],
        [
            "Now we we expand until we reach the base template which is in our case the triple template.",
            "So we still need to expand the subcluster of template.",
            "Repeating the same operation.",
            "And we're done."
        ],
        [
            "And we see here that this represents the same pattern as over here."
        ],
        [
            "Going on to a more complex example.",
            "This is taken from the Pizza Ontology.",
            "So in the Pizza Ontology we have 20 two different named pizzas.",
            "And just by looking at.",
            "The ontology in any editor or or turtle it's difficult to see that there is in fact.",
            "A pattern that is repeated so it's difficult to really understand the ontology.",
            "And if we want to update the pattern, we need to repeat the process for each pizza.",
            "What we can do is represent the pattern as a template."
        ],
        [
            "So, assuming this is a prototypical instance of the pattern."
        ],
        [
            "Then we make an instance.",
            "Sorry, a signature.",
            "Which takes."
        ],
        [
            "So we have the template name."
        ],
        [
            "And it has three parameters."
        ],
        [
            "Each parameter has a name and we can say mandatory and we give it the type that."
        ],
        [
            "Types can also be optional."
        ],
        [
            "We can accept lists."
        ],
        [
            "Now we have the body or the pattern of the template and each of these templates represent."
        ],
        [
            "Common deal axioms."
        ],
        [
            "There is a small trick that we do."
        ],
        [
            "So I said that we can accept lists.",
            "And if we mark this instance with the list expansion, then."
        ],
        [
            "If we make an instance of this form.",
            "Giving it a list.",
            "Then it produces this output.",
            "So for each element in the list it creates an instance of this template.",
            "So now."
        ],
        [
            "Assuming I make a new pizza.",
            "With more toppings."
        ],
        [
            "I get this."
        ],
        [
            "We have different civilizations to represent templates.",
            "The one you've seen so far is called subtle, and it's.",
            "Meant to be easy to read and write.",
            "We also have a format for out or in Alva Cabul Airy."
        ],
        [
            "Which is not so easy to read and write, but on top you see the signature below.",
            "Here you see the patterns we make use of RDF lists and Turtle to have this compact format."
        ],
        [
            "We can also generate queries from templates.",
            "So this is a query that.",
            "Whose answers are the instances of the pattern?"
        ],
        [
            "We also have a tabular format.",
            "And this screenshot shows all the 22 name pizzas in the name Peter Pizza.",
            "OG."
        ],
        [
            "What we can learn from?",
            "The different civilizations that are shown are that templates are not only macros, but we can regard them as declarative mappings or transforms.",
            "Where we move data on this format by lifting it to a richer semantic format, which here is the pattern or expanded pattern.",
            "But we can also go the other way.",
            "Using queries."
        ],
        [
            "As we've seen, we have different formats or different format specifications.",
            "For the left hand side and right hand side, so we have tabular formats to represent the signature.",
            "We also saw it in RDF and we're experimenting with XML formats.",
            "Since this is.",
            "Houston industry."
        ],
        [
            "The the expansion is of course in OWL or RDF.",
            "We have a implementation of Java implementation which takes care."
        ],
        [
            "Move.",
            "The.",
            "Expansion we've also experimented using XLT to take the XML format using off the shelf XLT engines to do this expansion.",
            "And as we saw, we can also generate sparkle queries that performs the lowering."
        ],
        [
            "Our vision.",
            "For ontology engineering, is that all knowledge base interaction goes via templates?",
            "So."
        ],
        [
            "The three roles I mentioned in the introduction.",
            "Or then split across this figure where we have the ontology experts.",
            "That takes care of.",
            "The usual owl and RDF business, but also maintains the core templates which are the templates.",
            "The templates that represent.",
            "The owl axioms."
        ],
        [
            "Have the end user which has this tabular format to use as I as we saw on Excel spreadsheet.",
            "So this can be either manual input or generate the dumps from databases."
        ],
        [
            "In between we have the data manager, so this is constructed term.",
            "But there is someone in between here who takes care of translating the user format into templates.",
            "So this could be.",
            "If we take the analogy in programming.",
            "Then the ontology expert understands.",
            "The assembly language I'll.",
            "While the data manager uses the API created by the ontology expert.",
            "To create formats that match the user conceptualization of the domain expert."
        ],
        [
            "We have the similar shape Aurora rolls on the other side, so the data manager also combines templates to create.",
            "Templates that."
        ],
        [
            "Can generate reports.",
            "Anne.",
            "Output data for other systems.",
            "To use.",
            "So what we propose is that templates is a kind of API for all.",
            "And.",
            "We can maintain all interfaces with the Knowledge Graph by maintaining templates only."
        ],
        [
            "So the simple formal foundation from templates.",
            "Allows us to define different relationships between templates, so depends and overlaps and contains and from these simple relationships we can define two types of dependencies.",
            "The first one is lack of reuse.",
            "That's when we use.",
            "When we use a cap, when we use the pattern which is already.",
            "Captured by an existing template.",
            "So in this example.",
            "We see that T1 uses NB, which is the pattern that."
        ],
        [
            "T2 represents.",
            "So we should."
        ],
        [
            "And replace NB by a call to T2."
        ],
        [
            "There's also the uncaptured pattern, where parts.",
            "Where two templates share the same pattern.",
            "We then."
        ],
        [
            "Make a new template that represents that pattern."
        ],
        [
            "And refactor.",
            "We have evaluated our approach."
        ],
        [
            "Using a large scale ontology which is developed by a company called Able which produces oil platforms.",
            "Thanks."
        ],
        [
            "They have greater than ontology, called the MMD Ontology, which consists of.",
            "80,000 classes spread over 200 modules.",
            "What we've done?"
        ],
        [
            "Is to take.",
            "All the spreadsheets that they use to generate their ontology and we represent them as templates and we have seen that we can replicate their system using."
        ],
        [
            "Their system using templates."
        ],
        [
            "We can now do analysis on these templates.",
            "So the templates we end up with more than 900 templates.",
            "And after analysis, we see that only 500.",
            "50 of them are unique.",
            "So there is some kind of redundancy here and.",
            "As many as 350 are, perhaps super flus superfluous, but domain experts need to take a look at the patterns to see if this is really the case.",
            "Further analysis reveals that there is quite a lot of redundancies in the templates, so the high number is due to all the different permutations or overlaps between the different redundancies.",
            "We are visualized this here.",
            "This axis is how common the pattern is.",
            "We could say, well, this axis is how big the pattern is.",
            "So there are 400 templates.",
            "That has a common pattern of size 2.",
            "While there are.",
            "Some patterns of size 24 which are shared between.",
            "Two templates and saturation.",
            "Of the dot is how are how many templates is occurs for.",
            "So this high numbers has that we need some heuristics.",
            "For how to fix this?"
        ],
        [
            "We have some available resources online, so this is the home page."
        ],
        [
            "Have our command line tool."
        ],
        [
            "We have specifications for all the languages."
        ],
        [
            "We have a library of templates.",
            "So this is the.",
            "Documentation site for the pizza template."
        ],
        [
            "We have an executable demo which was presented yesterday."
        ],
        [
            "And all of this is put on get."
        ],
        [
            "So to sum up, we have an abstraction.",
            "Macro language for our definites.",
            "Built for Semantic web use.",
            "This gives us improved construction and maintenance of ontologies.",
            "And we have ideas for a methodology for different users, tools available and industry interest.",
            "What we need are editors for the day."
        ],
        [
            "The manager, an ontology experts and more on maintenance of these template libraries and we would also like to develop more input formats.",
            "Thanks.",
            "Thank you, mark."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So I'll be presenting work, joint work with my colleagues at the University of Oslo, Daniel Leffel and Henrik.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "The problem that we're tackling our main goal is that we want to improve the efficiency and quality of ontology engineering and the problems that we think we're faced with is that current ontology engineering methods are way too low level, and this makes ontology construction repetitive and error prone.",
                    "label": 1
                },
                {
                    "sent": "It makes it difficult to engage end users because I think we as a community have yet to provide.",
                    "label": 0
                },
                {
                    "sent": "The correct tools for the real people, as we heard in last, yesterday's keynote.",
                    "label": 1
                },
                {
                    "sent": "It's difficult to generate sustainable large ontologies, and it's difficult to efficiently maintain these ontologies.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We need our better abstractions.",
                    "label": 1
                },
                {
                    "sent": "We need to be able to capture an instantiate, reoccuring modeling patterns.",
                    "label": 0
                },
                {
                    "sent": "We need better formats that are adopted to the different types of roles that we have in until January.",
                    "label": 0
                },
                {
                    "sent": "Ring the domain experts, the data managers and the ontology experts.",
                    "label": 1
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So what are ontology reasonable ontology templates called author templates?",
                    "label": 0
                },
                {
                    "sent": "So here we see some patterns.",
                    "label": 0
                },
                {
                    "sent": "We see some pizzazz, and there is some recurring pattern here.",
                    "label": 0
                },
                {
                    "sent": "And the blue stuff is what varies.",
                    "label": 0
                },
                {
                    "sent": "But the black stuff stays the same.",
                    "label": 0
                },
                {
                    "sent": "What we do is we represent the pattern using.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "A template and mark.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The variables with green and we give it the name.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And Mark List of parameters that are given to the template.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This is a recursive structure, so each of.",
                    "label": 0
                },
                {
                    "sent": "The triples are also templates.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "What we now can do is make instances of this template by referring to the pizza template and giving the arguments.",
                    "label": 0
                },
                {
                    "sent": "This block here now represents the same pattern that we have on the left.",
                    "label": 0
                },
                {
                    "sent": "So this is simple macros.",
                    "label": 0
                },
                {
                    "sent": "What we?",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Assuming that we now have a new template which represents the simple subclass of relationship.",
                    "label": 0
                },
                {
                    "sent": "We",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We can now replace this second triple here with a call to the subclass template.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Whatever we gained, we have.",
                    "label": 0
                },
                {
                    "sent": "We now have abstractions.",
                    "label": 0
                },
                {
                    "sent": "We have a name.",
                    "label": 0
                },
                {
                    "sent": "Pizza that represents this pattern and we can call it with arguments.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This means that we don't repeat ourselves, so.",
                    "label": 0
                },
                {
                    "sent": "We only make calls and do not need to repeat the pattern.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Since templates can be built on other templates, we have this modularity and we can encapsulate the complexity of modeling.",
                    "label": 0
                },
                {
                    "sent": "So in this simple example we see that we capture the OR we hide the complexity of the subclass relationship.",
                    "label": 0
                },
                {
                    "sent": "So this I mean this is extremely simple, but.",
                    "label": 0
                },
                {
                    "sent": "So the user does not need to know what how the modeling of the subclass template looks like.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We got uniform modeling.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And we separate to design and content, so the design or the templates and the content or the instances of the template.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "This ensures complete.",
                    "label": 0
                },
                {
                    "sent": "We can also ensure completeness of input, so you cannot make pizzas without giving both arguments.",
                    "label": 1
                },
                {
                    "sent": "And we have this simple input format that we shall exploit later.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So how does this work?",
                    "label": 0
                },
                {
                    "sent": "It works with simple syntactic substitution and macro expansion.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I will now illustrate how this instance is expanded, so we replace.",
                    "label": 0
                },
                {
                    "sent": "We take the pizza template and replace the.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Labels, sorry the parameters with the arguments.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Now we we expand until we reach the base template which is in our case the triple template.",
                    "label": 0
                },
                {
                    "sent": "So we still need to expand the subcluster of template.",
                    "label": 0
                },
                {
                    "sent": "Repeating the same operation.",
                    "label": 0
                },
                {
                    "sent": "And we're done.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And we see here that this represents the same pattern as over here.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Going on to a more complex example.",
                    "label": 0
                },
                {
                    "sent": "This is taken from the Pizza Ontology.",
                    "label": 1
                },
                {
                    "sent": "So in the Pizza Ontology we have 20 two different named pizzas.",
                    "label": 0
                },
                {
                    "sent": "And just by looking at.",
                    "label": 0
                },
                {
                    "sent": "The ontology in any editor or or turtle it's difficult to see that there is in fact.",
                    "label": 0
                },
                {
                    "sent": "A pattern that is repeated so it's difficult to really understand the ontology.",
                    "label": 1
                },
                {
                    "sent": "And if we want to update the pattern, we need to repeat the process for each pizza.",
                    "label": 0
                },
                {
                    "sent": "What we can do is represent the pattern as a template.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So, assuming this is a prototypical instance of the pattern.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Then we make an instance.",
                    "label": 0
                },
                {
                    "sent": "Sorry, a signature.",
                    "label": 0
                },
                {
                    "sent": "Which takes.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So we have the template name.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And it has three parameters.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": false,
            "summarization_data": []
        },
        "clip_28": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Each parameter has a name and we can say mandatory and we give it the type that.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Types can also be optional.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We can accept lists.",
                    "label": 0
                }
            ]
        },
        "clip_31": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Now we have the body or the pattern of the template and each of these templates represent.",
                    "label": 0
                }
            ]
        },
        "clip_32": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Common deal axioms.",
                    "label": 0
                }
            ]
        },
        "clip_33": {
            "is_summarization_sample": false,
            "summarization_data": []
        },
        "clip_34": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "There is a small trick that we do.",
                    "label": 0
                }
            ]
        },
        "clip_35": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So I said that we can accept lists.",
                    "label": 0
                },
                {
                    "sent": "And if we mark this instance with the list expansion, then.",
                    "label": 0
                }
            ]
        },
        "clip_36": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "If we make an instance of this form.",
                    "label": 0
                },
                {
                    "sent": "Giving it a list.",
                    "label": 0
                },
                {
                    "sent": "Then it produces this output.",
                    "label": 0
                },
                {
                    "sent": "So for each element in the list it creates an instance of this template.",
                    "label": 0
                },
                {
                    "sent": "So now.",
                    "label": 0
                }
            ]
        },
        "clip_37": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Assuming I make a new pizza.",
                    "label": 0
                },
                {
                    "sent": "With more toppings.",
                    "label": 0
                }
            ]
        },
        "clip_38": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I get this.",
                    "label": 0
                }
            ]
        },
        "clip_39": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We have different civilizations to represent templates.",
                    "label": 0
                },
                {
                    "sent": "The one you've seen so far is called subtle, and it's.",
                    "label": 0
                },
                {
                    "sent": "Meant to be easy to read and write.",
                    "label": 1
                },
                {
                    "sent": "We also have a format for out or in Alva Cabul Airy.",
                    "label": 0
                }
            ]
        },
        "clip_40": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Which is not so easy to read and write, but on top you see the signature below.",
                    "label": 0
                },
                {
                    "sent": "Here you see the patterns we make use of RDF lists and Turtle to have this compact format.",
                    "label": 0
                }
            ]
        },
        "clip_41": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We can also generate queries from templates.",
                    "label": 0
                },
                {
                    "sent": "So this is a query that.",
                    "label": 0
                },
                {
                    "sent": "Whose answers are the instances of the pattern?",
                    "label": 0
                }
            ]
        },
        "clip_42": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We also have a tabular format.",
                    "label": 1
                },
                {
                    "sent": "And this screenshot shows all the 22 name pizzas in the name Peter Pizza.",
                    "label": 0
                },
                {
                    "sent": "OG.",
                    "label": 0
                }
            ]
        },
        "clip_43": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "What we can learn from?",
                    "label": 0
                },
                {
                    "sent": "The different civilizations that are shown are that templates are not only macros, but we can regard them as declarative mappings or transforms.",
                    "label": 0
                },
                {
                    "sent": "Where we move data on this format by lifting it to a richer semantic format, which here is the pattern or expanded pattern.",
                    "label": 0
                },
                {
                    "sent": "But we can also go the other way.",
                    "label": 0
                },
                {
                    "sent": "Using queries.",
                    "label": 0
                }
            ]
        },
        "clip_44": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "As we've seen, we have different formats or different format specifications.",
                    "label": 0
                },
                {
                    "sent": "For the left hand side and right hand side, so we have tabular formats to represent the signature.",
                    "label": 0
                },
                {
                    "sent": "We also saw it in RDF and we're experimenting with XML formats.",
                    "label": 0
                },
                {
                    "sent": "Since this is.",
                    "label": 0
                },
                {
                    "sent": "Houston industry.",
                    "label": 0
                }
            ]
        },
        "clip_45": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The the expansion is of course in OWL or RDF.",
                    "label": 0
                },
                {
                    "sent": "We have a implementation of Java implementation which takes care.",
                    "label": 0
                }
            ]
        },
        "clip_46": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Move.",
                    "label": 0
                },
                {
                    "sent": "The.",
                    "label": 0
                },
                {
                    "sent": "Expansion we've also experimented using XLT to take the XML format using off the shelf XLT engines to do this expansion.",
                    "label": 0
                },
                {
                    "sent": "And as we saw, we can also generate sparkle queries that performs the lowering.",
                    "label": 0
                }
            ]
        },
        "clip_47": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Our vision.",
                    "label": 0
                },
                {
                    "sent": "For ontology engineering, is that all knowledge base interaction goes via templates?",
                    "label": 1
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_48": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The three roles I mentioned in the introduction.",
                    "label": 0
                },
                {
                    "sent": "Or then split across this figure where we have the ontology experts.",
                    "label": 0
                },
                {
                    "sent": "That takes care of.",
                    "label": 0
                },
                {
                    "sent": "The usual owl and RDF business, but also maintains the core templates which are the templates.",
                    "label": 0
                },
                {
                    "sent": "The templates that represent.",
                    "label": 0
                },
                {
                    "sent": "The owl axioms.",
                    "label": 0
                }
            ]
        },
        "clip_49": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Have the end user which has this tabular format to use as I as we saw on Excel spreadsheet.",
                    "label": 0
                },
                {
                    "sent": "So this can be either manual input or generate the dumps from databases.",
                    "label": 0
                }
            ]
        },
        "clip_50": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "In between we have the data manager, so this is constructed term.",
                    "label": 0
                },
                {
                    "sent": "But there is someone in between here who takes care of translating the user format into templates.",
                    "label": 0
                },
                {
                    "sent": "So this could be.",
                    "label": 0
                },
                {
                    "sent": "If we take the analogy in programming.",
                    "label": 0
                },
                {
                    "sent": "Then the ontology expert understands.",
                    "label": 0
                },
                {
                    "sent": "The assembly language I'll.",
                    "label": 0
                },
                {
                    "sent": "While the data manager uses the API created by the ontology expert.",
                    "label": 1
                },
                {
                    "sent": "To create formats that match the user conceptualization of the domain expert.",
                    "label": 0
                }
            ]
        },
        "clip_51": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We have the similar shape Aurora rolls on the other side, so the data manager also combines templates to create.",
                    "label": 0
                },
                {
                    "sent": "Templates that.",
                    "label": 0
                }
            ]
        },
        "clip_52": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Can generate reports.",
                    "label": 0
                },
                {
                    "sent": "Anne.",
                    "label": 0
                },
                {
                    "sent": "Output data for other systems.",
                    "label": 0
                },
                {
                    "sent": "To use.",
                    "label": 0
                },
                {
                    "sent": "So what we propose is that templates is a kind of API for all.",
                    "label": 1
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "We can maintain all interfaces with the Knowledge Graph by maintaining templates only.",
                    "label": 1
                }
            ]
        },
        "clip_53": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So the simple formal foundation from templates.",
                    "label": 1
                },
                {
                    "sent": "Allows us to define different relationships between templates, so depends and overlaps and contains and from these simple relationships we can define two types of dependencies.",
                    "label": 1
                },
                {
                    "sent": "The first one is lack of reuse.",
                    "label": 0
                },
                {
                    "sent": "That's when we use.",
                    "label": 0
                },
                {
                    "sent": "When we use a cap, when we use the pattern which is already.",
                    "label": 1
                },
                {
                    "sent": "Captured by an existing template.",
                    "label": 0
                },
                {
                    "sent": "So in this example.",
                    "label": 0
                },
                {
                    "sent": "We see that T1 uses NB, which is the pattern that.",
                    "label": 0
                }
            ]
        },
        "clip_54": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "T2 represents.",
                    "label": 0
                },
                {
                    "sent": "So we should.",
                    "label": 0
                }
            ]
        },
        "clip_55": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And replace NB by a call to T2.",
                    "label": 0
                }
            ]
        },
        "clip_56": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "There's also the uncaptured pattern, where parts.",
                    "label": 0
                },
                {
                    "sent": "Where two templates share the same pattern.",
                    "label": 0
                },
                {
                    "sent": "We then.",
                    "label": 0
                }
            ]
        },
        "clip_57": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Make a new template that represents that pattern.",
                    "label": 0
                }
            ]
        },
        "clip_58": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And refactor.",
                    "label": 0
                },
                {
                    "sent": "We have evaluated our approach.",
                    "label": 0
                }
            ]
        },
        "clip_59": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Using a large scale ontology which is developed by a company called Able which produces oil platforms.",
                    "label": 0
                },
                {
                    "sent": "Thanks.",
                    "label": 0
                }
            ]
        },
        "clip_60": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "They have greater than ontology, called the MMD Ontology, which consists of.",
                    "label": 0
                },
                {
                    "sent": "80,000 classes spread over 200 modules.",
                    "label": 0
                },
                {
                    "sent": "What we've done?",
                    "label": 0
                }
            ]
        },
        "clip_61": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Is to take.",
                    "label": 0
                },
                {
                    "sent": "All the spreadsheets that they use to generate their ontology and we represent them as templates and we have seen that we can replicate their system using.",
                    "label": 0
                }
            ]
        },
        "clip_62": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Their system using templates.",
                    "label": 0
                }
            ]
        },
        "clip_63": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We can now do analysis on these templates.",
                    "label": 0
                },
                {
                    "sent": "So the templates we end up with more than 900 templates.",
                    "label": 0
                },
                {
                    "sent": "And after analysis, we see that only 500.",
                    "label": 0
                },
                {
                    "sent": "50 of them are unique.",
                    "label": 0
                },
                {
                    "sent": "So there is some kind of redundancy here and.",
                    "label": 0
                },
                {
                    "sent": "As many as 350 are, perhaps super flus superfluous, but domain experts need to take a look at the patterns to see if this is really the case.",
                    "label": 0
                },
                {
                    "sent": "Further analysis reveals that there is quite a lot of redundancies in the templates, so the high number is due to all the different permutations or overlaps between the different redundancies.",
                    "label": 0
                },
                {
                    "sent": "We are visualized this here.",
                    "label": 0
                },
                {
                    "sent": "This axis is how common the pattern is.",
                    "label": 0
                },
                {
                    "sent": "We could say, well, this axis is how big the pattern is.",
                    "label": 0
                },
                {
                    "sent": "So there are 400 templates.",
                    "label": 0
                },
                {
                    "sent": "That has a common pattern of size 2.",
                    "label": 0
                },
                {
                    "sent": "While there are.",
                    "label": 0
                },
                {
                    "sent": "Some patterns of size 24 which are shared between.",
                    "label": 0
                },
                {
                    "sent": "Two templates and saturation.",
                    "label": 0
                },
                {
                    "sent": "Of the dot is how are how many templates is occurs for.",
                    "label": 0
                },
                {
                    "sent": "So this high numbers has that we need some heuristics.",
                    "label": 0
                },
                {
                    "sent": "For how to fix this?",
                    "label": 0
                }
            ]
        },
        "clip_64": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We have some available resources online, so this is the home page.",
                    "label": 0
                }
            ]
        },
        "clip_65": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Have our command line tool.",
                    "label": 0
                }
            ]
        },
        "clip_66": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We have specifications for all the languages.",
                    "label": 0
                }
            ]
        },
        "clip_67": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We have a library of templates.",
                    "label": 0
                },
                {
                    "sent": "So this is the.",
                    "label": 0
                },
                {
                    "sent": "Documentation site for the pizza template.",
                    "label": 0
                }
            ]
        },
        "clip_68": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We have an executable demo which was presented yesterday.",
                    "label": 0
                }
            ]
        },
        "clip_69": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And all of this is put on get.",
                    "label": 0
                }
            ]
        },
        "clip_70": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So to sum up, we have an abstraction.",
                    "label": 0
                },
                {
                    "sent": "Macro language for our definites.",
                    "label": 0
                },
                {
                    "sent": "Built for Semantic web use.",
                    "label": 0
                },
                {
                    "sent": "This gives us improved construction and maintenance of ontologies.",
                    "label": 0
                },
                {
                    "sent": "And we have ideas for a methodology for different users, tools available and industry interest.",
                    "label": 0
                },
                {
                    "sent": "What we need are editors for the day.",
                    "label": 0
                }
            ]
        },
        "clip_71": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The manager, an ontology experts and more on maintenance of these template libraries and we would also like to develop more input formats.",
                    "label": 0
                },
                {
                    "sent": "Thanks.",
                    "label": 0
                },
                {
                    "sent": "Thank you, mark.",
                    "label": 0
                }
            ]
        }
    }
}