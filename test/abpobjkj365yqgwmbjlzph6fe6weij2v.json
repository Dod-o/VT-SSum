{
    "id": "abpobjkj365yqgwmbjlzph6fe6weij2v",
    "title": "Efficient Algorithms for Association Finding and Frequent Association Pattern Mining",
    "info": {
        "author": [
            "Gong Cheng, Nanjing University"
        ],
        "published": "Nov. 10, 2016",
        "recorded": "October 2016",
        "category": [
            "Top->Computer Science->Semantic Web"
        ]
    },
    "url": "http://videolectures.net/iswc2016_cheng_efficient_algorithms/",
    "segmentation": [
        [
            "Algorithm for finding associations between MCC and also algorithms for mining.",
            "There are frequent patterns."
        ],
        [
            "So first, some background and motivation.",
            "I think it's actually a well motivated research problem because we have seen a lot of researches in this direction.",
            "So so basically we know we have a very large graph data and we have a lot of entities that are connected by properties.",
            "But we also have some.",
            "You know, some.",
            "Some answers are not directly connected by an arc in the graph, but they are indirectly connected bypass or in more general cases sub graph.",
            "So we call such pass or subgraphs Association between entries.",
            "What's the weekend?",
            "Use associations between entities to do a lot of things in many applications.",
            "For instance, we can use associations to suggest friends in the social network, or we can use associations between people and events and other things to maybe recognize suspected terrorists.",
            "Or actually Association finding is at the core of many question answering solutions.",
            "So it's a very important problem."
        ],
        [
            "So more formally, an Association that connects a set of curiosities is a minimum sub graph that contains all the career entities and also is connected.",
            "So here is an example.",
            "We have a toy data graph right.",
            "We have three query entities which are in orange color and a curiosity is entities.",
            "As a user is particularly interested in so, so in this example the user is interested in some kind of connections between 3:00.",
            "People that are Alice, Bob and Chris.",
            "So here is an academic network about people and papers and conferences.",
            "OK so."
        ],
        [
            "No, I'm highlighting an Association which describes that Alice is author of a paper which is presented at the Code Workshop and Bob is reviewer of this workshop, and Chrissy attended this workshop.",
            "So here is an Association that connects the three entries in the data."
        ],
        [
            "And we can find many other examples in this graph.",
            "So an Association is kind of minimum sub graph, which means that."
        ],
        [
            "It is basically tree structured, otherwise we can, you know, remove some vertices or arcs to still make it connected subgraph."
        ],
        [
            "So yeah, we try to solve 2 problems in this work.",
            "First is how to efficiently find associations in a possibly very large graph like containing millions of vertices and billions of arcs, and the 2nd is how to help users explore a large, possibly large, set of associations that have been found.",
            "So the first problem."
        ],
        [
            "Is actually associated finding and to solve the second problem, we propose to mine the frequent patterns of this Association so that these patterns can group the associations so that these groups might be helpful for users to more effectively explore a large set of results.",
            "So let's move."
        ],
        [
            "Down to the first problem associated finding, so we try to aim to find all the associations that have limited diameter.",
            "We have to set up a diamond constraint because otherwise there may be too many associations that can be found.",
            "The diameter of a sub graph is greatest distance between any pair of vertices in this sub graph.",
            "So for instance in this highlighted Association, its diameter is 3 cause the greatest distance between any pair of entities in this Association is just the right OK.",
            "So, so we aim to find all the associates given a set of curiosities.",
            "We want to find all the associations between them and have a diamond have a limited diameter."
        ],
        [
            "So, so there is a a basic solution to this problem.",
            "We can just do graph search how we can do that.",
            "We found that actually Association shown here can be decomposed into a set of paths and each path starts from one curiosity and all this.",
            "So here all the three paths have common and vertex.",
            "So if we can successfully find all the three paths, they can be merged at their common vertex into.",
            "And Association, right?",
            "There's a basic solution, so it's the solution consists."
        ],
        [
            "2 Steps first is to find all possible paths starting from every country currency and then we try to merge this path.",
            "If they have a common end vertex.",
            "So that's a quite simple basic solution, and as we will see later in the experiment, this basic solution actually works reasonably fast, but we can do it faster.",
            "How we can do that?"
        ],
        [
            "We can leverage the distance between entries to speed up the algorithm.",
            "The idea is that we can actually prolong the search space.",
            "So let's see an example here.",
            "So we just assume that the diameter constraint is 3.",
            "OK, so we're only interesting sub graphs that have a diameter of 1, two or three.",
            "So when we do graph search starting from the Alice, which is a curiosity, and when the search arrives at this vertex, then we can immediately prompt the entire branch of search stemming from this answer.",
            "So we can point here why we can do that cause.",
            "The length of the path from Alice to then is just one.",
            "OK, we just follow an arc to here and we find that the distance between then and Bob, which is another community distances.",
            "It's actually 4 exist entire graph.",
            "OK, so 1 + 4 is 5 is already larger than the diameter constraints.",
            "That indicates that it would be impossible to find out an Association that has a diameter of three or smaller and also involves this path from Alice to them.",
            "That is impossible, so we can safely problem the search space.",
            "In this way, but the new problem is artist.",
            "That is, how can we?",
            "Obtain the inform the distance between possibly every pair of vertex in this."
        ],
        [
            "This graph.",
            "So yeah, it's actually classical problem research problem.",
            "We can use some well known algorithms to precompute the distance between every pair of vertices, right?",
            "We can precompute, but.",
            "It would be difficult to materialize the precomputed results you know, like for a large data set like the pedia, we have more than 1,000,000 or even more vertices in the graph.",
            "So there are two many distance information to be stored.",
            "It might be a challenge to store all that kind of distance information, but on the other hand other hand we can we can do online computing.",
            "OK, we don't store anything we don't pre compute anything, we just do online computing.",
            "But the downside is that.",
            "It takes time and I think you know when the graph is large.",
            "Computing information online computer distance online is time consuming, so users might not be willing to.",
            "You know, accept that kind of latency so we solve this issue by using a technique called distance Oracle which achieves a tradeoff between space and time.",
            "So this is always kind of technique or data kind of data structure that pre computes some information about the distance between all pairs of vertices in a graph.",
            "But it does not compute all the information and with such a data structure we can look up the distance between any pair of verticals in a very short time, so that's why it can achieve a good tradeoff between space space and time.",
            "So that's why we use that.",
            "In our graph search algorithm to produce such space."
        ],
        [
            "But I'm not getting to details here.",
            "OK, and another issue that we need to solve here is that duplicates associations can be found.",
            "Let's see an example.",
            "So here is an example that we have seen before.",
            "This Association can be can be formed by combining the three paths having a common and vertex.",
            "I see here right, but the same associ."
        ],
        [
            "Asian can also be formed by combining a lot of set of three paths.",
            "So if we look at these three paths, we also have a common and vertex paper A here.",
            "So if we combine these three paths, we will obtain this Association again, right?",
            "So in the search results there will be many duplicates and we want to do deduplication.",
            "So that is we need to identify.",
            "Essentially we want to identify which associations are isomorphic to each other, right?",
            "Is a graph isomorphism problem with?"
        ],
        [
            "Is a hard problem, but Fortunately.",
            "The Association here are tree structured, so there are some very efficient solutions to find out which associations are isomorphic to each other and we can we use a technique called Canonical code.",
            "We generated such a code for each tree and if for each tree structured Association and if two assertions have exactly the same Canonical code, they are duplicated.",
            "But"
        ],
        [
            "I don't get into details here.",
            "OK, let's move on to the second problem of mining frequent Association patterns.",
            "Associated pattern is conceptual abstract that summarizes a group of associations so we can obtain an Association pattern by replacing every intermediate entity by their classes.",
            "So we replace paper by the paper class, replaced ICC by the conference class.",
            "We do it for all the intermediate.",
            "Empties without changing the curiosities OK. Then we obtain an Association pattern.",
            "A clearly associated with pattern can be matched by a number of associations in the data.",
            "That is why we can use such a pattern to group the search results so that users can have a high level overview of the results to help them explore the results.",
            "And we are in."
        ],
        [
            "Interesting, frequent associated patterns.",
            "A frequent Association pattern is a pattern that is matched by more than a threshold, proportional associations and so."
        ],
        [
            "You can mine.",
            "We can actually mind the frequent patterns very easily because we can.",
            "So so for each Association that is found by graph search, we can generate all is possible Association patterns such as this one and then we again generate Canonical code for this pattern.",
            "So calculate the frequency of Association pattern is to count the current Surface content code.",
            "That's quite simple actually, but."
        ],
        [
            "One tricky thing is that it is not that trivial to compute a Canonical code for an Association pattern BECAUSW.",
            "You know, in Association all the vertices are different.",
            "They're different entities, but in an associated pattern becausw the vertices are classes, so 2 two different vertices may have the same class as there are labels, so it's we.",
            "We need to modify the way of generating a Canonical code for associate pattern.",
            "You can check the details in paper.",
            "I'm going to get in today."
        ],
        [
            "Yes here."
        ],
        [
            "OK, so finally some experimental results.",
            "We just want to test the performance of the of our two algorithms to the two different problems we tested on linked MDB, which is about a movie domain and also the pedia.",
            "We tested different parameter settings, different dynamic constraints at different numbers of curiosities, and under each parameter setting we tested 1000 random set of query entries as test cases.",
            "And we just did all the experiments on average workstation."
        ],
        [
            "Some results.",
            "Firstly, some results on the associated finding.",
            "We tested different variants of our approach.",
            "BSE means the basic solution.",
            "Without you know any product strategy and PRN means the optimizer solution using distance based prodding and interesting, we find that by using using problem strategy it's actually takes more time.",
            "Surprisingly takes more time to Wybie cause to use the product strategy we need to look up distance between.",
            "Many pairs of entities rights that has some costs so, so we can't just simply use the product strategy we need to.",
            "To change the way of using this strategy and so with developer of violent of our strategy, which is called P N1, which is basically the same as PR, and except that we do not do prowling at the last level of search.",
            "OK, because at the last level of search we can, yeah we can provide a search space, but we can only prove very small search space, but we need to pay a lot of distance look ups.",
            "So in order to have some real.",
            "Improvement of performance.",
            "We decided to not do prodding at the last level search and as a result, compared with the basic solution.",
            "By using this new variants of the product strategy we obtained consistently better results, so we succeeded in improving the basic solution by using the product."
        ],
        [
            "Strategy in the right way?",
            "Also, some results on frequent associated pattern mining.",
            "Basically given not more than 10,000 associations, there are frequent patterns can be mind very quickly, just one or several dozens of milliseconds.",
            "And on the pedia given more than 1 million associations, their frequent patterns can be mined within not more than three seconds.",
            "So I think it's reasonably fast considering that we are using just an average workstation.",
            "OK."
        ],
        [
            "Conclusion Actually, some takeaway messages.",
            "Firstly, that sub graph finding, undermining possibly faster than what we expected.",
            "So it just at the millisecond level so you can feel free to use such techniques in your research.",
            "And Secondly we found that distance article and Canonical codes are were really considered in semantic web research, so maybe the can be helpful to your own research.",
            "Thank you for your attention.",
            "So if I understood correctly, your approach works if the there is all the query entities are reachable in the graph, right?",
            "Yeah, the graph should be connected actually.",
            "So do you have any thought on extending your approach for covering other cases like John is out of paper a John also out of paper B and if I give paper A&B as the query entities, I extract the semantic that these papers have the same outer.",
            "I didn't grab the crossing that place, so so the graphics to connected right at the graph is connected, but there is no path between the entities.",
            "Paper A and paper B.",
            "If the graph extractors there is always a path between the bouquet so well, maybe when?",
            "When I say the graph is connected?"
        ],
        [
            "I mean, you know the graph is a directed graph, but when I say the graphic correctly, I made his weekly connected so there is always a path between every pair of entities in this graph.",
            "But maybe the arcs of path may not always go the same direction.",
            "That's possible, yeah, so we, so we actually treat the graph as an directive.",
            "OK, OK yeah, we actually treated it as on direct but yeah.",
            "Thanks, yeah this isn't a have you thought about the ranking?",
            "The multiple associations between the query nodes?",
            "Yes very good question and it's actually one of our future work because we can our approach.",
            "It is actually a compliment to the ranking approach becausw you know given like more than 1 million associations that can be found when.",
            "Whatever ranking stretch do we use, we can only shows maybe a turn or 20 top ranking results and there can't be a good representative of a million entries of a million Association.",
            "So that is why we.",
            "Consider.",
            "Using patterns because it's kind of.",
            "Abstractive summary of the results compared with ranking which is actually kind of extractive.",
            "Summary of the results.",
            "So I think they are complementary to each other.",
            "But yeah, I agree that we can also do ranking.",
            "We have time for the very last question.",
            "Yeah, so my question is if you broke up with slight forward.",
            "So basically where you are replacing the instances by classes."
        ],
        [
            "Yes here.",
            "So how do you choose which class to take?",
            "So you have basically hierarchy.",
            "So let's say if paper conference paper, scientific publication and so on.",
            "So you have to make a choice.",
            "Or do you just do all possible permutations?",
            "Well, we actually don't make any choices because we generate all possible patterns for each institution.",
            "So essentially, if paper has like two or three classes and maybe for instance, if paper A has a conference, is a paper, and it's also conference paper.",
            "And I said this is a conference and also a venue.",
            "So we will generate four patterns for this situation.",
            "OK, thanks, let's thank the speaker.",
            "Thank you."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Algorithm for finding associations between MCC and also algorithms for mining.",
                    "label": 0
                },
                {
                    "sent": "There are frequent patterns.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So first, some background and motivation.",
                    "label": 1
                },
                {
                    "sent": "I think it's actually a well motivated research problem because we have seen a lot of researches in this direction.",
                    "label": 0
                },
                {
                    "sent": "So so basically we know we have a very large graph data and we have a lot of entities that are connected by properties.",
                    "label": 0
                },
                {
                    "sent": "But we also have some.",
                    "label": 0
                },
                {
                    "sent": "You know, some.",
                    "label": 0
                },
                {
                    "sent": "Some answers are not directly connected by an arc in the graph, but they are indirectly connected bypass or in more general cases sub graph.",
                    "label": 0
                },
                {
                    "sent": "So we call such pass or subgraphs Association between entries.",
                    "label": 0
                },
                {
                    "sent": "What's the weekend?",
                    "label": 0
                },
                {
                    "sent": "Use associations between entities to do a lot of things in many applications.",
                    "label": 1
                },
                {
                    "sent": "For instance, we can use associations to suggest friends in the social network, or we can use associations between people and events and other things to maybe recognize suspected terrorists.",
                    "label": 0
                },
                {
                    "sent": "Or actually Association finding is at the core of many question answering solutions.",
                    "label": 0
                },
                {
                    "sent": "So it's a very important problem.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So more formally, an Association that connects a set of curiosities is a minimum sub graph that contains all the career entities and also is connected.",
                    "label": 1
                },
                {
                    "sent": "So here is an example.",
                    "label": 0
                },
                {
                    "sent": "We have a toy data graph right.",
                    "label": 0
                },
                {
                    "sent": "We have three query entities which are in orange color and a curiosity is entities.",
                    "label": 0
                },
                {
                    "sent": "As a user is particularly interested in so, so in this example the user is interested in some kind of connections between 3:00.",
                    "label": 0
                },
                {
                    "sent": "People that are Alice, Bob and Chris.",
                    "label": 0
                },
                {
                    "sent": "So here is an academic network about people and papers and conferences.",
                    "label": 0
                },
                {
                    "sent": "OK so.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "No, I'm highlighting an Association which describes that Alice is author of a paper which is presented at the Code Workshop and Bob is reviewer of this workshop, and Chrissy attended this workshop.",
                    "label": 0
                },
                {
                    "sent": "So here is an Association that connects the three entries in the data.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And we can find many other examples in this graph.",
                    "label": 0
                },
                {
                    "sent": "So an Association is kind of minimum sub graph, which means that.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "It is basically tree structured, otherwise we can, you know, remove some vertices or arcs to still make it connected subgraph.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So yeah, we try to solve 2 problems in this work.",
                    "label": 0
                },
                {
                    "sent": "First is how to efficiently find associations in a possibly very large graph like containing millions of vertices and billions of arcs, and the 2nd is how to help users explore a large, possibly large, set of associations that have been found.",
                    "label": 1
                },
                {
                    "sent": "So the first problem.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Is actually associated finding and to solve the second problem, we propose to mine the frequent patterns of this Association so that these patterns can group the associations so that these groups might be helpful for users to more effectively explore a large set of results.",
                    "label": 0
                },
                {
                    "sent": "So let's move.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Down to the first problem associated finding, so we try to aim to find all the associations that have limited diameter.",
                    "label": 0
                },
                {
                    "sent": "We have to set up a diamond constraint because otherwise there may be too many associations that can be found.",
                    "label": 0
                },
                {
                    "sent": "The diameter of a sub graph is greatest distance between any pair of vertices in this sub graph.",
                    "label": 1
                },
                {
                    "sent": "So for instance in this highlighted Association, its diameter is 3 cause the greatest distance between any pair of entities in this Association is just the right OK.",
                    "label": 0
                },
                {
                    "sent": "So, so we aim to find all the associates given a set of curiosities.",
                    "label": 0
                },
                {
                    "sent": "We want to find all the associations between them and have a diamond have a limited diameter.",
                    "label": 1
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So, so there is a a basic solution to this problem.",
                    "label": 0
                },
                {
                    "sent": "We can just do graph search how we can do that.",
                    "label": 0
                },
                {
                    "sent": "We found that actually Association shown here can be decomposed into a set of paths and each path starts from one curiosity and all this.",
                    "label": 1
                },
                {
                    "sent": "So here all the three paths have common and vertex.",
                    "label": 0
                },
                {
                    "sent": "So if we can successfully find all the three paths, they can be merged at their common vertex into.",
                    "label": 0
                },
                {
                    "sent": "And Association, right?",
                    "label": 1
                },
                {
                    "sent": "There's a basic solution, so it's the solution consists.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "2 Steps first is to find all possible paths starting from every country currency and then we try to merge this path.",
                    "label": 0
                },
                {
                    "sent": "If they have a common end vertex.",
                    "label": 0
                },
                {
                    "sent": "So that's a quite simple basic solution, and as we will see later in the experiment, this basic solution actually works reasonably fast, but we can do it faster.",
                    "label": 0
                },
                {
                    "sent": "How we can do that?",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We can leverage the distance between entries to speed up the algorithm.",
                    "label": 0
                },
                {
                    "sent": "The idea is that we can actually prolong the search space.",
                    "label": 0
                },
                {
                    "sent": "So let's see an example here.",
                    "label": 0
                },
                {
                    "sent": "So we just assume that the diameter constraint is 3.",
                    "label": 0
                },
                {
                    "sent": "OK, so we're only interesting sub graphs that have a diameter of 1, two or three.",
                    "label": 0
                },
                {
                    "sent": "So when we do graph search starting from the Alice, which is a curiosity, and when the search arrives at this vertex, then we can immediately prompt the entire branch of search stemming from this answer.",
                    "label": 0
                },
                {
                    "sent": "So we can point here why we can do that cause.",
                    "label": 0
                },
                {
                    "sent": "The length of the path from Alice to then is just one.",
                    "label": 0
                },
                {
                    "sent": "OK, we just follow an arc to here and we find that the distance between then and Bob, which is another community distances.",
                    "label": 0
                },
                {
                    "sent": "It's actually 4 exist entire graph.",
                    "label": 0
                },
                {
                    "sent": "OK, so 1 + 4 is 5 is already larger than the diameter constraints.",
                    "label": 0
                },
                {
                    "sent": "That indicates that it would be impossible to find out an Association that has a diameter of three or smaller and also involves this path from Alice to them.",
                    "label": 0
                },
                {
                    "sent": "That is impossible, so we can safely problem the search space.",
                    "label": 0
                },
                {
                    "sent": "In this way, but the new problem is artist.",
                    "label": 0
                },
                {
                    "sent": "That is, how can we?",
                    "label": 0
                },
                {
                    "sent": "Obtain the inform the distance between possibly every pair of vertex in this.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This graph.",
                    "label": 0
                },
                {
                    "sent": "So yeah, it's actually classical problem research problem.",
                    "label": 0
                },
                {
                    "sent": "We can use some well known algorithms to precompute the distance between every pair of vertices, right?",
                    "label": 0
                },
                {
                    "sent": "We can precompute, but.",
                    "label": 0
                },
                {
                    "sent": "It would be difficult to materialize the precomputed results you know, like for a large data set like the pedia, we have more than 1,000,000 or even more vertices in the graph.",
                    "label": 0
                },
                {
                    "sent": "So there are two many distance information to be stored.",
                    "label": 0
                },
                {
                    "sent": "It might be a challenge to store all that kind of distance information, but on the other hand other hand we can we can do online computing.",
                    "label": 0
                },
                {
                    "sent": "OK, we don't store anything we don't pre compute anything, we just do online computing.",
                    "label": 0
                },
                {
                    "sent": "But the downside is that.",
                    "label": 0
                },
                {
                    "sent": "It takes time and I think you know when the graph is large.",
                    "label": 0
                },
                {
                    "sent": "Computing information online computer distance online is time consuming, so users might not be willing to.",
                    "label": 0
                },
                {
                    "sent": "You know, accept that kind of latency so we solve this issue by using a technique called distance Oracle which achieves a tradeoff between space and time.",
                    "label": 0
                },
                {
                    "sent": "So this is always kind of technique or data kind of data structure that pre computes some information about the distance between all pairs of vertices in a graph.",
                    "label": 0
                },
                {
                    "sent": "But it does not compute all the information and with such a data structure we can look up the distance between any pair of verticals in a very short time, so that's why it can achieve a good tradeoff between space space and time.",
                    "label": 0
                },
                {
                    "sent": "So that's why we use that.",
                    "label": 0
                },
                {
                    "sent": "In our graph search algorithm to produce such space.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "But I'm not getting to details here.",
                    "label": 0
                },
                {
                    "sent": "OK, and another issue that we need to solve here is that duplicates associations can be found.",
                    "label": 0
                },
                {
                    "sent": "Let's see an example.",
                    "label": 0
                },
                {
                    "sent": "So here is an example that we have seen before.",
                    "label": 0
                },
                {
                    "sent": "This Association can be can be formed by combining the three paths having a common and vertex.",
                    "label": 0
                },
                {
                    "sent": "I see here right, but the same associ.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Asian can also be formed by combining a lot of set of three paths.",
                    "label": 0
                },
                {
                    "sent": "So if we look at these three paths, we also have a common and vertex paper A here.",
                    "label": 0
                },
                {
                    "sent": "So if we combine these three paths, we will obtain this Association again, right?",
                    "label": 0
                },
                {
                    "sent": "So in the search results there will be many duplicates and we want to do deduplication.",
                    "label": 0
                },
                {
                    "sent": "So that is we need to identify.",
                    "label": 0
                },
                {
                    "sent": "Essentially we want to identify which associations are isomorphic to each other, right?",
                    "label": 0
                },
                {
                    "sent": "Is a graph isomorphism problem with?",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Is a hard problem, but Fortunately.",
                    "label": 0
                },
                {
                    "sent": "The Association here are tree structured, so there are some very efficient solutions to find out which associations are isomorphic to each other and we can we use a technique called Canonical code.",
                    "label": 0
                },
                {
                    "sent": "We generated such a code for each tree and if for each tree structured Association and if two assertions have exactly the same Canonical code, they are duplicated.",
                    "label": 0
                },
                {
                    "sent": "But",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "I don't get into details here.",
                    "label": 0
                },
                {
                    "sent": "OK, let's move on to the second problem of mining frequent Association patterns.",
                    "label": 0
                },
                {
                    "sent": "Associated pattern is conceptual abstract that summarizes a group of associations so we can obtain an Association pattern by replacing every intermediate entity by their classes.",
                    "label": 1
                },
                {
                    "sent": "So we replace paper by the paper class, replaced ICC by the conference class.",
                    "label": 0
                },
                {
                    "sent": "We do it for all the intermediate.",
                    "label": 0
                },
                {
                    "sent": "Empties without changing the curiosities OK. Then we obtain an Association pattern.",
                    "label": 0
                },
                {
                    "sent": "A clearly associated with pattern can be matched by a number of associations in the data.",
                    "label": 0
                },
                {
                    "sent": "That is why we can use such a pattern to group the search results so that users can have a high level overview of the results to help them explore the results.",
                    "label": 0
                },
                {
                    "sent": "And we are in.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Interesting, frequent associated patterns.",
                    "label": 0
                },
                {
                    "sent": "A frequent Association pattern is a pattern that is matched by more than a threshold, proportional associations and so.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "You can mine.",
                    "label": 0
                },
                {
                    "sent": "We can actually mind the frequent patterns very easily because we can.",
                    "label": 0
                },
                {
                    "sent": "So so for each Association that is found by graph search, we can generate all is possible Association patterns such as this one and then we again generate Canonical code for this pattern.",
                    "label": 0
                },
                {
                    "sent": "So calculate the frequency of Association pattern is to count the current Surface content code.",
                    "label": 1
                },
                {
                    "sent": "That's quite simple actually, but.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "One tricky thing is that it is not that trivial to compute a Canonical code for an Association pattern BECAUSW.",
                    "label": 1
                },
                {
                    "sent": "You know, in Association all the vertices are different.",
                    "label": 0
                },
                {
                    "sent": "They're different entities, but in an associated pattern becausw the vertices are classes, so 2 two different vertices may have the same class as there are labels, so it's we.",
                    "label": 0
                },
                {
                    "sent": "We need to modify the way of generating a Canonical code for associate pattern.",
                    "label": 0
                },
                {
                    "sent": "You can check the details in paper.",
                    "label": 0
                },
                {
                    "sent": "I'm going to get in today.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Yes here.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, so finally some experimental results.",
                    "label": 0
                },
                {
                    "sent": "We just want to test the performance of the of our two algorithms to the two different problems we tested on linked MDB, which is about a movie domain and also the pedia.",
                    "label": 0
                },
                {
                    "sent": "We tested different parameter settings, different dynamic constraints at different numbers of curiosities, and under each parameter setting we tested 1000 random set of query entries as test cases.",
                    "label": 1
                },
                {
                    "sent": "And we just did all the experiments on average workstation.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Some results.",
                    "label": 0
                },
                {
                    "sent": "Firstly, some results on the associated finding.",
                    "label": 0
                },
                {
                    "sent": "We tested different variants of our approach.",
                    "label": 0
                },
                {
                    "sent": "BSE means the basic solution.",
                    "label": 0
                },
                {
                    "sent": "Without you know any product strategy and PRN means the optimizer solution using distance based prodding and interesting, we find that by using using problem strategy it's actually takes more time.",
                    "label": 0
                },
                {
                    "sent": "Surprisingly takes more time to Wybie cause to use the product strategy we need to look up distance between.",
                    "label": 0
                },
                {
                    "sent": "Many pairs of entities rights that has some costs so, so we can't just simply use the product strategy we need to.",
                    "label": 0
                },
                {
                    "sent": "To change the way of using this strategy and so with developer of violent of our strategy, which is called P N1, which is basically the same as PR, and except that we do not do prowling at the last level of search.",
                    "label": 0
                },
                {
                    "sent": "OK, because at the last level of search we can, yeah we can provide a search space, but we can only prove very small search space, but we need to pay a lot of distance look ups.",
                    "label": 0
                },
                {
                    "sent": "So in order to have some real.",
                    "label": 0
                },
                {
                    "sent": "Improvement of performance.",
                    "label": 0
                },
                {
                    "sent": "We decided to not do prodding at the last level search and as a result, compared with the basic solution.",
                    "label": 1
                },
                {
                    "sent": "By using this new variants of the product strategy we obtained consistently better results, so we succeeded in improving the basic solution by using the product.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Strategy in the right way?",
                    "label": 0
                },
                {
                    "sent": "Also, some results on frequent associated pattern mining.",
                    "label": 1
                },
                {
                    "sent": "Basically given not more than 10,000 associations, there are frequent patterns can be mind very quickly, just one or several dozens of milliseconds.",
                    "label": 0
                },
                {
                    "sent": "And on the pedia given more than 1 million associations, their frequent patterns can be mined within not more than three seconds.",
                    "label": 0
                },
                {
                    "sent": "So I think it's reasonably fast considering that we are using just an average workstation.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Conclusion Actually, some takeaway messages.",
                    "label": 1
                },
                {
                    "sent": "Firstly, that sub graph finding, undermining possibly faster than what we expected.",
                    "label": 1
                },
                {
                    "sent": "So it just at the millisecond level so you can feel free to use such techniques in your research.",
                    "label": 0
                },
                {
                    "sent": "And Secondly we found that distance article and Canonical codes are were really considered in semantic web research, so maybe the can be helpful to your own research.",
                    "label": 0
                },
                {
                    "sent": "Thank you for your attention.",
                    "label": 0
                },
                {
                    "sent": "So if I understood correctly, your approach works if the there is all the query entities are reachable in the graph, right?",
                    "label": 0
                },
                {
                    "sent": "Yeah, the graph should be connected actually.",
                    "label": 0
                },
                {
                    "sent": "So do you have any thought on extending your approach for covering other cases like John is out of paper a John also out of paper B and if I give paper A&B as the query entities, I extract the semantic that these papers have the same outer.",
                    "label": 0
                },
                {
                    "sent": "I didn't grab the crossing that place, so so the graphics to connected right at the graph is connected, but there is no path between the entities.",
                    "label": 0
                },
                {
                    "sent": "Paper A and paper B.",
                    "label": 0
                },
                {
                    "sent": "If the graph extractors there is always a path between the bouquet so well, maybe when?",
                    "label": 0
                },
                {
                    "sent": "When I say the graph is connected?",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I mean, you know the graph is a directed graph, but when I say the graphic correctly, I made his weekly connected so there is always a path between every pair of entities in this graph.",
                    "label": 0
                },
                {
                    "sent": "But maybe the arcs of path may not always go the same direction.",
                    "label": 0
                },
                {
                    "sent": "That's possible, yeah, so we, so we actually treat the graph as an directive.",
                    "label": 0
                },
                {
                    "sent": "OK, OK yeah, we actually treated it as on direct but yeah.",
                    "label": 0
                },
                {
                    "sent": "Thanks, yeah this isn't a have you thought about the ranking?",
                    "label": 0
                },
                {
                    "sent": "The multiple associations between the query nodes?",
                    "label": 0
                },
                {
                    "sent": "Yes very good question and it's actually one of our future work because we can our approach.",
                    "label": 0
                },
                {
                    "sent": "It is actually a compliment to the ranking approach becausw you know given like more than 1 million associations that can be found when.",
                    "label": 0
                },
                {
                    "sent": "Whatever ranking stretch do we use, we can only shows maybe a turn or 20 top ranking results and there can't be a good representative of a million entries of a million Association.",
                    "label": 0
                },
                {
                    "sent": "So that is why we.",
                    "label": 0
                },
                {
                    "sent": "Consider.",
                    "label": 0
                },
                {
                    "sent": "Using patterns because it's kind of.",
                    "label": 0
                },
                {
                    "sent": "Abstractive summary of the results compared with ranking which is actually kind of extractive.",
                    "label": 0
                },
                {
                    "sent": "Summary of the results.",
                    "label": 0
                },
                {
                    "sent": "So I think they are complementary to each other.",
                    "label": 0
                },
                {
                    "sent": "But yeah, I agree that we can also do ranking.",
                    "label": 0
                },
                {
                    "sent": "We have time for the very last question.",
                    "label": 0
                },
                {
                    "sent": "Yeah, so my question is if you broke up with slight forward.",
                    "label": 0
                },
                {
                    "sent": "So basically where you are replacing the instances by classes.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Yes here.",
                    "label": 0
                },
                {
                    "sent": "So how do you choose which class to take?",
                    "label": 0
                },
                {
                    "sent": "So you have basically hierarchy.",
                    "label": 0
                },
                {
                    "sent": "So let's say if paper conference paper, scientific publication and so on.",
                    "label": 0
                },
                {
                    "sent": "So you have to make a choice.",
                    "label": 0
                },
                {
                    "sent": "Or do you just do all possible permutations?",
                    "label": 0
                },
                {
                    "sent": "Well, we actually don't make any choices because we generate all possible patterns for each institution.",
                    "label": 0
                },
                {
                    "sent": "So essentially, if paper has like two or three classes and maybe for instance, if paper A has a conference, is a paper, and it's also conference paper.",
                    "label": 0
                },
                {
                    "sent": "And I said this is a conference and also a venue.",
                    "label": 0
                },
                {
                    "sent": "So we will generate four patterns for this situation.",
                    "label": 0
                },
                {
                    "sent": "OK, thanks, let's thank the speaker.",
                    "label": 0
                },
                {
                    "sent": "Thank you.",
                    "label": 0
                }
            ]
        }
    }
}