{
    "id": "stfz22y4owjk37mzcfdis2vsdlgjixiy",
    "title": "Isomorphism, Matrices and Graph Invariants; Subgraphs and Connectivity in Graphs",
    "info": {
        "author": [
            "Toma\u017e Pisanski, In\u0161titut za matematiko, fiziko in mehaniko (IMFM)"
        ],
        "published": "Nov. 8, 2007",
        "recorded": "October 2007",
        "category": [
            "Top->Mathematics->Graph Theory"
        ]
    },
    "url": "http://videolectures.net/fmf07_pisanski_img/",
    "segmentation": [
        [
            "OK.",
            "So today we continue with graphs and we'll talk a little bit about isomorphism of graphs, matrices, graphs."
        ],
        [
            "Invariants.",
            "So.",
            "There is one matrix which is also quite important.",
            "In graph theory, and there's the so called incidence matrix as you all probably know where you have.",
            "US rose are labeled by.",
            "The vertices of a graph and the columns are labeled by the.",
            "Edges of the graph.",
            "And the entry 1 means that that corresponding vertex is incident with the corresponding edge and zero that is not incident.",
            "So in this case where we were talking about this random graph.",
            "We have this is an example of the incidence matrix.",
            "Clearly if you label.",
            "The vertices in a different way.",
            "In a different order.",
            "Then you'll get a different matrix.",
            "It will be a permutation of.",
            "Rose, or if you label the edges in different order, order them differently."
        ],
        [
            "And you get again a different.",
            "The matrix, so there very well.",
            "First theorem of graph theory is the so called handshaking lemma which tells you exactly that two times the number of edges of a graph equals to the sum of the variances of the graph."
        ],
        [
            "And we've proven that, so I don't think that we have to do that again.",
            "And the proof uses.",
            "Uh.",
            "The so called the bookkeepers rule.",
            "There is another matrix which is called the adjacency matrix, where you have.",
            "Both vertices, both columns and both rows and columns are labeled by vertices, and here again the IJ entry equals 1 means that the height vertex is adjacent to the Jade vertex."
        ],
        [
            "Oh an important concept in graph theory is the concept of isomorphism of graphs, and if you have two graphs G&H and you have a mapping, let's say simple graphs as we.",
            "Considers all graphs here to be simple.",
            "Then mapping of 1 vertex set to the other vertex set which is bijection and preserves adjacency.",
            "Meaning that two vertices U&V are adjacent if and only if their images are adjacent, then such a mapping is called graph isomorphism.",
            "And.",
            "When we have this concept, we can define the graph invariant as any property.",
            "It is usually a number, but it may be any other property of a graph that is.",
            "Uh, stays the same under an isomorphism, so you may take any isomorphic copy of a graph, and that property must remain the same.",
            "Some simple example.",
            "The number of vertices.",
            "That's a graph invariant.",
            "The number of edges.",
            "Graph invariant.",
            "Minimal valence, maximal violence.",
            "That's all.",
            "They're all graph invariants, but there are other examples like.",
            "The one that I mentioned, for instance adjacency matrix.",
            "Or the incidence matrix?",
            "They're not graph invariants.",
            "'cause if you permute.",
            "Of.",
            "The rows or columns of the.",
            "Of the matrix, then you get a different matrix.",
            "But the graphs in this case are."
        ],
        [
            "In Italy isomorphic.",
            "So here we have an example.",
            "Usually to defer to see whether two graphs are isomorphic.",
            "It's easy and all you have to do you have to find that.",
            "Isomorphism.",
            "So let me try to.",
            "Let me try to find the automorphism here.",
            "Between these two graphs, let's say in the exercise one determine the isomorphism between these two graphs A&B.",
            "So we may try to map let's say.",
            "Vertex one to vertex one here.",
            "We may try to map vertex too.",
            "To vertex two, that's also OK.",
            "But then, uh, yeah.",
            "Three goes to three.",
            "Four goes to four.",
            "Nope, it won't work right, so we have to find the.",
            "Let's say this cycle here, which is used in this graph in the other graph.",
            "So maybe it would be better to start drawing something like this.",
            "Maybe we can do it like this.",
            "So if this rat cycle is mapped to the outer cycle of the other graph, then I think everything is going to be OK.",
            "So one goes to one, that's fine.",
            "Two goes to two.",
            "That's also OK, but then six goes to three.",
            "And then seven goes to four.",
            "And then three goes to five.",
            "And then four goes to.",
            "Four to six.",
            "It goes to 7.",
            "And five goes to.",
            "So that would be an example of of an isomorphism.",
            "On the."
        ],
        [
            "Easier to do the the other example here."
        ],
        [
            "The problem with graph isomorphisms is of course when the two graphs are not isomorphic.",
            "Becausw if you want to prove that two graphs are non isomorphic then you have to find some feature which distinguishes the two graphs.",
            "So you have to find some graph invariant.",
            "Which is true in one graph and it's false in the other graph, so it doesn't it has different value in the other graph."
        ],
        [
            "And for finding such a. Invariant that seems still to be a quite complicated task, although in practice there are very good algorithms which can do that, but.",
            "In general, this still seems to be quite complicated.",
            "So if we want to look at some example we have here this graph.",
            "Here the random graph it has four vertices.",
            "It obviously has five edges.",
            "It's minimal violence here.",
            "The violence is 3232, so the minimum balance is 2 and the maximum balance is 3.",
            "And as I mentioned earlier, the matrices are not."
        ],
        [
            "Graph invariants.",
            "Although if you take the spectrum of a matrix of the.",
            "Adjacency matrix, it is a graph invariant.",
            "So.",
            "What is a spectrum?",
            "Is the collection of eigenvalues, so the eigenvalues are graph invariants.",
            "They are independent of the permutation of simultaneous permutations of frozen sums, rows and columns of the.",
            "Adjacency matrix.",
            "Any questions?",
            "OK. Let's go to subgraphs and connectivity."
        ],
        [
            "In grass.",
            "If we have a graph and if we let's say VE and select two subset U, there's a subset of the vertex set and F which is a subset of the headset.",
            "Then it may happen that this pair you F is a graph or it's not a graph.",
            "If it is a graph.",
            "Then it is called the sub graph.",
            "Of G. But if it's not a graph, then of course not a sub graph.",
            "So for instance, let me just give you a little example.",
            "If we take.",
            "Or random graph here.",
            "And if we select this edge here.",
            "And this vertex here.",
            "This is not a subgraph becausw together with this edge.",
            "You have to select the two endpoints.",
            "If you select the three vertices and one edge, then that would be a sample OK.",
            "So of course if U equals V then we say that edge is a spanning sub graph.",
            "So this means.",
            "We just remove some of the edges of the original graph in order to get the sub graph or the other extreme is if you have.",
            "If you have a graph and you just select.",
            "A collection of vertices.",
            "Then this collection of vertices.",
            "Or somehow defines the maximal possible sub graph on that induced on that set of vertices.",
            "This means that you Add all the edges that belong that have both endpoints in this subset.",
            "Then we're talking about the induced sub graph.",
            "So as we said here in this sub graph, this is completely determined by the set."
        ],
        [
            "Curtis is.",
            "Here are.",
            "Three quick examples.",
            "So the very first graph is K4.",
            "Here is an example that is of a graph of a sub graph that is neither induced nor spanning.",
            "That's a spanning subgraph, and that's an induced subgraph."
        ],
        [
            "Um?",
            "So what is a walk?",
            "A walk in our case in a graph is just the sequence of vertices.",
            "V0V1 up to VK.",
            "With the property that two consecutive verticies.",
            "In that sequence are adjacent vertices in the graph.",
            "And in this case we can talk about.",
            "The initial vertex V0 and terminal vertex VK and we talk about the walk from V0 to VK or between V0 and VK.",
            "Uh V 0 maybe also called the beginning of the walk and the case.",
            "The end of the walk and K the number K is called the length of the walk W. So there are some special cases of walks, if I may just draw like this so walk looks like this, but it may repeat itself, so it may go.",
            "So once you make a picture of a walk, you don't see what was going on, you just we were walking like this.",
            "So here, here, here, here and then back and then here and here and here and here OK.",
            "So a walk is called a closed walk is the term if the terminal vertex is identical to the initial vertex on the walk.",
            "So we start walking somewhere and get to the same point.",
            "So that would not be a close walk.",
            "That would be an open walk.",
            "So.",
            "A very special case of a walk is a path.",
            "That's just the walk.",
            "Which belongs to an.",
            "Whose underlying sub graph is a path?",
            "As we defined it, so all vertices in the work must be distinct.",
            "On special cases also cycle.",
            "Where again all vertices are distinct except the very first and the last, which must be the same, so it's a closed walk with all vertices this thing.",
            "So a path can be also viewed as a subgraph of G as in Washington."
        ],
        [
            "It's also the same.",
            "Uh, there is a.",
            "Very easy but very important lemma stating that if I have somewhere to vertices, let's call them A&B.",
            "And if I have some work here.",
            "From A to B, then there must be also a path between A to B.",
            "And vice versa, but vice versa is trivial because any path is also a walk, so there is no."
        ],
        [
            "Include.",
            "Another concept, very useful and important in graph theory is connectedness.",
            "Usually when people talk about graphs.",
            "They.",
            "Think they're talking about connected graphs.",
            "So sometimes when we forget about stating that we usually think about connected graphs, and if we're talking about more general graphs, we say, well, we also allow disconnected graphs.",
            "Oh how do we?",
            "Define connectedness are usually.",
            "A claim in the following way you take your graph.",
            "Any graph you want, for instance this one here.",
            "You take one vertex.",
            "You bring it like this and shake it a little bit.",
            "If something falls down, the graph is not connected.",
            "If everything stays, then the graph is connected OK, but it's semi physical definition of a graph which is intuitive but not not mathematical.",
            "So.",
            "So one definition would be like this.",
            "We say that two vertices U&V are related.",
            "So we define a binary relation or on the set V. And we say that are related if and only if there is a walk or path between U&V.",
            "It's not hard to prove that R in this case is a cruel installation.",
            "So it's reflexive, symmetric and transitive.",
            "And I.",
            "Here's something should be changed, probably sorry.",
            "Off it's all here, right?",
            "OK, so the equivalence classes are called connected components of G. If.",
            "There is only one connected component.",
            "Then such a graph is called connected.",
            "In this case that I have here we have two connected components, so one would be this triangle and the other one would be this triangle here.",
            "So we have two connected components.",
            "The graph is not connected."
        ],
        [
            "It's 2 connected components.",
            "If we have a connected graph.",
            "Then everything is fine.",
            "We can define.",
            "Distance.",
            "Function on a graph and we say that the distance between U&V.",
            "Is the minimum length of any walk between U&V.",
            "No.",
            "Here instead of walk.",
            "We can safely say path.",
            "Becausw or.",
            "If you have a walk of some length, then there must be that path which is at least.",
            "At most.",
            "It's whose length is a small.",
            "It is at most the length of the walk.",
            "It may be shorter, it cannot be.",
            "It cannot be longer so.",
            "This is the usual definition, so this is the length of the shortest path between U&V and there is all there.",
            "All kinds of algorithms for finding shortest paths.",
            "Dijkstra not only in graphs in weighted graphs, but we're not going to talk about that cause it's more in the spirit of.",
            "Of computer science.",
            "Finally, let's define the diameter of G. There's the maximum distance between any 2.",
            "Vertices of G."
        ],
        [
            "OK, any questions?",
            "Blow trees.",
            "What is a tree?",
            "Well, there are several equivalent definitions, and they're all here, five of them, and they may be more.",
            "We decided to.",
            "To define it as a graph that is connected and there is exactly 1 path between any two vertices.",
            "And this important lemma tells you that all five definitions listed here are equivalent.",
            "So the graph is connected, but removal of any edge disconnected.",
            "That would be another definition.",
            "Over 3 or it's connected and the number of edges is just one less.",
            "Then the number of vertices.",
            "Or G contains no cycle and the other condition of the previous condition is true.",
            "And that's my favorite.",
            "G is connected and contains no cycle.",
            "Oh"
        ],
        [
            "Here.",
            "We also list on.",
            "You will have.",
            "The complete proof of this on the Internet.",
            "But here we are only.",
            "Give proof of one of the.",
            "Of the five.",
            "Steps right so we are."
        ],
        [
            "Trying to prove that if G is connected and there is exactly 1 path between any two vertices.",
            "So I have two vertices U&V and I know that there is exactly 1 path between U&V.",
            "Then I would like to prove that.",
            "It is connected, but removal of any edge disconnected.",
            "OK so if if the first condition is true means it's connected then this part is true.",
            "Two it is connected so there is nothing to it.",
            "We just have to prove that if we remove any edge then the graph.",
            "Or will be disconnected.",
            "OK, so let's take an edge.",
            "From let's say X&Y.",
            "That's an arbitrary age.",
            "Well, if that is if this one is true, this means there is exactly 1.",
            "Path between X&Y and that path is just the edge.",
            "Right?",
            "So.",
            "If I remove the edge E. There is no path between X&Y.",
            "So they must be in different components, connected components.",
            "So the graph is not connected anymore, so that way."
        ],
        [
            "And here are other."
        ],
        [
            "Proves that I'm not going to go."
        ],
        [
            "Into because I would like to cover a little bit more unless.",
            "Are there any questions?",
            "Bathroom wall should be exactly one walking stick.",
            "Oh no, there may be more than one walk.",
            "Let me give you an example.",
            "So I have.",
            "Let's say from X to Y.",
            "There is only one path that would be, let's say Z and that will be W 0X.",
            "The W that is the path between X&Y.",
            "Unique, but here is a walk XZWZY that's a walk which goes like this.",
            "So then we want more than one walk.",
            "Frank yeah.",
            "Yeah so.",
            "If we if and it's true if you start walking then you just know.",
            "OK, so path is no repeated vertices.",
            "OK and walk it.",
            "Maybe you may walk a little bit, wander around and do many things.",
            "Other questions."
        ],
        [
            "OK. Now that is very important.",
            "Consequence to this student that we stated above and prove just one fifth of the of it.",
            "And that is.",
            "Or any three.",
            "Contains at least one vertex of valence one.",
            "Here we have to be careful.",
            "All graphs that we consider here are finite.",
            "OK. Because for this for infinite graphs.",
            "This is not true.",
            "Let me give you an example of an infinite graph in which this is not true.",
            "I mean it's 3.",
            "So that's an example of an infinite 3.",
            "There is exactly 1.",
            "Path between any two vertices, so that's a tree.",
            "But these three has no vertex of variance one.",
            "Each vertex has valence 2.",
            "OK.",
            "So one has to be careful here.",
            "So here is the proof.",
            "Suppose G is a graph.",
            "Maybe 3 right in which every vertex has violence at least two.",
            "Then by the handshaking lemma.",
            "We have the number of edges is 1 / 2.",
            "Times the sum of the valencies of our graph, but remember the valence of each vertex is at least two so this is greater or equal to two.",
            "We have V of G valences, so this must be greater or equal to 1/2.",
            "Times this is 1/2 from here view of G comes from.",
            "V * 2 comes from this, and now these two and two Castle and to get view of G. So what do we get?",
            "We get that EOG is greater or equal to V of G. On the other hand, if Jesus 3, then EOG is less than the OG becausw.",
            "EOG is just view of the minus one as we.",
            "We've seen in the in the in the previous theorem, so that's a contradiction.",
            "So if you have such a graph, then G is definitely not a tree.",
            "And you see, this handshaking lemma holds for for finite graphs.",
            "It doesn't hold for.",
            "Necessary hold for it for infinite medals.",
            "Vertices of valence one have special name.",
            "They are called leaves."
        ],
        [
            "What is a spanning tree?",
            "A spanning tree is a spanning subgraph that is a 3.",
            "And it's very important.",
            "That the finite graph.",
            "Is connected if and only if it contains a spanning tree.",
            "Oh here again, we have to state that the graph is finite, because for instance, for infinite graphs the existence of a spanning tree.",
            "Is equivalent to the axiom of choice.",
            "So that's.",
            "You cannot prove it, you just have to assume it by Axiom.",
            "But for finite graphs, it's easy, right?",
            "If graph is connected.",
            "Then it must contain a spanning tree, so we have a finite graph.",
            "It is connected if it's not a tree, then by that theorem it must have at least one cycle.",
            "Take that cycle.",
            "Any edge on the cycle remove it.",
            "Under graph stays connected.",
            "Right?",
            "No, keep doing that cause the graph is finite, there are only finitely many.",
            "Edges and if you keep removing edges eventually.",
            "You'll have to.",
            "Get no edges and you have.",
            "If you get no edges, it means the graph is definitely not connected.",
            "So at some point you must have a.",
            "You must have a situation where.",
            "There is no cycle.",
            "And in that case you get graph which is connected and has no cycle, so it is a tree and it still has all the original vertices.",
            "So it's a spanning subgraph, and it's a tree, so the graph must careless spanning tree.",
            "The converse.",
            "Is obvious, so if you have a graph that has a spanning tree, then you must have between any two vertices of a graph.",
            "You must have at least one path that path.",
            "May follow the spanning tree.",
            "And graph must be connected."
        ],
        [
            "There is an interesting formula.",
            "To calculate the number of spanning trees.",
            "So obviously a connected graph may have more than one spanning tree.",
            "If the graph is 3, then this is the only spanning tree.",
            "But all other graphs.",
            "That are connected.",
            "Contain more than one spanning tree.",
            "For instance.",
            "Pool of KN South complete graph.",
            "Uh, there's the number of spanning tree in a complete graph equals 2 N to the power of minus two.",
            "I usually prove that via the so called prefer.",
            "Code.",
            "But I'm not going to do it here.",
            "Because we don't need it.",
            "Uh.",
            "Let me.",
            "Briefly mentioned two graph operations.",
            "There are simple graph operations.",
            "One is actually moval.",
            "And the other one is edge contraction.",
            "So Azure removal G -- E means we have a graph, for instance to complete it off.",
            "And then we decide to remove one edge.",
            "And in this case we get the random graph.",
            "The other operation is edge construction.",
            "Edge contraction let's take this graph here.",
            "And let's select an edge.",
            "Maybe this one here.",
            "So what we do we remove this edge and then identify?",
            "The two end points on that former edge.",
            "And this can be done in two ways in.",
            "In this way we do it in such a way that we keep the.",
            "Edges, so if this is let's say 1234 we get.",
            "Something like this one?",
            "Three, and this is the vertex 24.",
            "OK. And, uh.",
            "The number.",
            "Of spanning tree.",
            "Of spanning trees in the graph.",
            "Satisfies the following.",
            "Recursion.",
            "So the number of spanning trees of G is the same as the sum of the numbers of spanning trees of G -- E and G / E. Well, the proof is very easy.",
            "So.",
            "If we have a graph.",
            "And if I have an edge.",
            "So.",
            "When I count.",
            "The number of spanning trees.",
            "Or if I generate all possible spanning trees, then the class of spanning trees falls into two disjoint subclasses.",
            "There are the spanning trees that contain.",
            "SE and there are spanning trees that do not contain.",
            "The HE.",
            "They're definitely disjoint, so if I count those and I can count those, then I just have to add these two numbers and they get the number of spanning trees OK. Alright.",
            "So.",
            "If I have.",
            "A spanning tree that contains E. I may contract this edge.",
            "And I will get a spanning tree in the graph.",
            "G. Ovary.",
            "On the other hand, if I have a spanning tree in G. / E. I can always expand this edge and this will define a spanning tree in this graph.",
            "Which contains E. So there is a bijection between these two.",
            "So counting this spanning trees here is the same as counting the spanning trees here, so there's a number.",
            "There's this number upstairs now.",
            "What is the number downstairs?",
            "Well, if East never appears in the spanning tree, I throw it away.",
            "And I just count all spanning trees.",
            "That do not contain any, and there's the number of spanning trees of G -- D, so there's some of this doing this, however."
        ],
        [
            "Here is an example.",
            "Or so we have our random graph.",
            "We select E1 in this case.",
            "Here we delete it alright.",
            "If this is G. This graph is G -- E one, and here this is G. Divided by 81.",
            "And if you see you see this vertex here is this vertex here.",
            "OK. Contraction of the edgy.",
            "And similarly, you go all the way and you go.",
            "Here, for instance, there is only one spanning tree because we get already.",
            "The.",
            "Uh, three here there are two spanning trees, becausw I may select either this edge or this edge and each one.",
            "Each selection gives you gives me one spanning tree.",
            "Or I could have done something else to it and OK, here is one more so if you count all these numbers you get AIDS.",
            "So this graph has eight spanning trees.",
            "Here is an independent proof of this fact.",
            "So we have a random graph.",
            "It has a little too many edges to be a tree.",
            "How many edges do I have to delete in order to get a tree?",
            "How many edges do I have to delete together?",
            "3.",
            "Two right two?",
            "So how many edges do I have?",
            "Five so if I delete any pair of edges that can be done in 10 ways.",
            "Do I have 10 spanning trees?",
            "No, why not?",
            "Well, if I delete these two guys.",
            "Then I will separate this vertex from the rest, so the graph will not be connected.",
            "If I delete these two guys.",
            "I will get a disconnected graph, so I have to.",
            "And that's how I get a spanning trees OK. Any other choices OK?"
        ],
        [
            "There is a lovely theorem.",
            "It's due to Kirchhoff, so it's quite an old one.",
            "Which enables you to calculate the number of spanning trees just like this.",
            "So all you have to do is define a new matrix which is called the relation matrix of a graph L of G. There's the diagonal matrix composed of the valences of graph minus the adjacency matrix.",
            "And.",
            "Or you find its spectrum so its eigenvalues, it turns out.",
            "That the least eigenvalue is zero in this case.",
            "And all other eigenvalues are are positive.",
            "So if graph is connected.",
            "So you have to take the non zero eigenvalues Lambda one up to Lambda N -- 1 because Lambda and remember is zero.",
            "You take the product of those eigenvalues, divide that by by number of vertice is of graph and you get the spanning.",
            "The number of spanning trees.",
            "Uh, let me give you just a little more.",
            "How this works?",
            "So I wrote a little program in Mathematica.",
            "Using Vega, you'll.",
            "You will probably encounter Vega if you haven't encountered yet.",
            "Maybe in exercises or something, and now I will run this program for you.",
            "So first we load Vega.",
            "Oh you know, whenever you get new version of Mathematica.",
            "You get some errors, but.",
            "Now we define the function number of spanning tree of graph G. So what do we do?",
            "First we calculate the Laplace matrix of G, then find the eigenvalues of those and then select those that are positive and then multiply them together and then divide by the number of vertices of G. So that's by definition.",
            "We do it by definition.",
            "So let me define this function.",
            "That was easy.",
            "Now let's look at our random graph.",
            "So random graph.",
            "There's the complete graph on four vertices, and let's delete the edge 1 three from it.",
            "This is our graph.",
            "And now let's calculate the number of spanning trees of our random graph.",
            "Meditate.",
            "So it's like a miracle, but it works.",
            "Here I have another example you should take.",
            "Number of spanning 3 / 3 three here is the complete bipartite Graph 1 four that's a tree itself, so it's one.",
            "So that's not a proof, but it helps us a little bit.",
            "OK. And we get the same result if you calculate any of.",
            "Cofactors of laplace."
        ],
        [
            "Metrics only.",
            "I'm here is this example that I've ran through Mathematica, so the Laplace matrix again you see?",
            "You what do you do?",
            "You put on the diagonal, the valences so in the row one or in diagonal 11, that's the valence of vertex one.",
            "There's the valence of vertex two as the valence of vertex 3.",
            "And that's the balance of vertex four, and the rest is the negative adjacency matrix.",
            "OG OK."
        ],
        [
            "Oh a spanning subgraph is sometimes called a factor.",
            "There are two special spending graphs with that are very important.",
            "Spanning path is called the Hamilton Path, and spending cycle is called a Hamilton cycle and I think you've encountered those."
        ],
        [
            "Earlier.",
            "So let me finish.",
            "This part of the lecture by defining an isometric sub graph, so a graph.",
            "He's isometric.",
            "Intuitively, what does it mean you take it off, take a sub graph and then you what you want to do is you want to be the distance between any two vertices in the sub graph to be the same as the distance between these two vertices in the original graph becausw.",
            "In general, if you move from graph to sub graph, the distances may increase.",
            "But in the isometric subgraph they do not.",
            "Example.",
            "For instance, if you take the random graph.",
            "And if you remove this edge here, you get a sub graph.",
            "But the distance between this vertex and this vertex?",
            "In the original graph, is one in the sub graph is 2.",
            "So this graph is not an isometric some graph of graph.",
            "So let's stop here."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "So today we continue with graphs and we'll talk a little bit about isomorphism of graphs, matrices, graphs.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Invariants.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "There is one matrix which is also quite important.",
                    "label": 0
                },
                {
                    "sent": "In graph theory, and there's the so called incidence matrix as you all probably know where you have.",
                    "label": 0
                },
                {
                    "sent": "US rose are labeled by.",
                    "label": 0
                },
                {
                    "sent": "The vertices of a graph and the columns are labeled by the.",
                    "label": 0
                },
                {
                    "sent": "Edges of the graph.",
                    "label": 0
                },
                {
                    "sent": "And the entry 1 means that that corresponding vertex is incident with the corresponding edge and zero that is not incident.",
                    "label": 0
                },
                {
                    "sent": "So in this case where we were talking about this random graph.",
                    "label": 0
                },
                {
                    "sent": "We have this is an example of the incidence matrix.",
                    "label": 0
                },
                {
                    "sent": "Clearly if you label.",
                    "label": 0
                },
                {
                    "sent": "The vertices in a different way.",
                    "label": 0
                },
                {
                    "sent": "In a different order.",
                    "label": 0
                },
                {
                    "sent": "Then you'll get a different matrix.",
                    "label": 0
                },
                {
                    "sent": "It will be a permutation of.",
                    "label": 0
                },
                {
                    "sent": "Rose, or if you label the edges in different order, order them differently.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And you get again a different.",
                    "label": 0
                },
                {
                    "sent": "The matrix, so there very well.",
                    "label": 0
                },
                {
                    "sent": "First theorem of graph theory is the so called handshaking lemma which tells you exactly that two times the number of edges of a graph equals to the sum of the variances of the graph.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And we've proven that, so I don't think that we have to do that again.",
                    "label": 0
                },
                {
                    "sent": "And the proof uses.",
                    "label": 0
                },
                {
                    "sent": "Uh.",
                    "label": 0
                },
                {
                    "sent": "The so called the bookkeepers rule.",
                    "label": 0
                },
                {
                    "sent": "There is another matrix which is called the adjacency matrix, where you have.",
                    "label": 0
                },
                {
                    "sent": "Both vertices, both columns and both rows and columns are labeled by vertices, and here again the IJ entry equals 1 means that the height vertex is adjacent to the Jade vertex.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Oh an important concept in graph theory is the concept of isomorphism of graphs, and if you have two graphs G&H and you have a mapping, let's say simple graphs as we.",
                    "label": 0
                },
                {
                    "sent": "Considers all graphs here to be simple.",
                    "label": 0
                },
                {
                    "sent": "Then mapping of 1 vertex set to the other vertex set which is bijection and preserves adjacency.",
                    "label": 0
                },
                {
                    "sent": "Meaning that two vertices U&V are adjacent if and only if their images are adjacent, then such a mapping is called graph isomorphism.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "When we have this concept, we can define the graph invariant as any property.",
                    "label": 0
                },
                {
                    "sent": "It is usually a number, but it may be any other property of a graph that is.",
                    "label": 0
                },
                {
                    "sent": "Uh, stays the same under an isomorphism, so you may take any isomorphic copy of a graph, and that property must remain the same.",
                    "label": 0
                },
                {
                    "sent": "Some simple example.",
                    "label": 0
                },
                {
                    "sent": "The number of vertices.",
                    "label": 0
                },
                {
                    "sent": "That's a graph invariant.",
                    "label": 0
                },
                {
                    "sent": "The number of edges.",
                    "label": 0
                },
                {
                    "sent": "Graph invariant.",
                    "label": 0
                },
                {
                    "sent": "Minimal valence, maximal violence.",
                    "label": 0
                },
                {
                    "sent": "That's all.",
                    "label": 0
                },
                {
                    "sent": "They're all graph invariants, but there are other examples like.",
                    "label": 0
                },
                {
                    "sent": "The one that I mentioned, for instance adjacency matrix.",
                    "label": 0
                },
                {
                    "sent": "Or the incidence matrix?",
                    "label": 0
                },
                {
                    "sent": "They're not graph invariants.",
                    "label": 0
                },
                {
                    "sent": "'cause if you permute.",
                    "label": 0
                },
                {
                    "sent": "Of.",
                    "label": 0
                },
                {
                    "sent": "The rows or columns of the.",
                    "label": 0
                },
                {
                    "sent": "Of the matrix, then you get a different matrix.",
                    "label": 0
                },
                {
                    "sent": "But the graphs in this case are.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "In Italy isomorphic.",
                    "label": 0
                },
                {
                    "sent": "So here we have an example.",
                    "label": 0
                },
                {
                    "sent": "Usually to defer to see whether two graphs are isomorphic.",
                    "label": 0
                },
                {
                    "sent": "It's easy and all you have to do you have to find that.",
                    "label": 0
                },
                {
                    "sent": "Isomorphism.",
                    "label": 0
                },
                {
                    "sent": "So let me try to.",
                    "label": 0
                },
                {
                    "sent": "Let me try to find the automorphism here.",
                    "label": 0
                },
                {
                    "sent": "Between these two graphs, let's say in the exercise one determine the isomorphism between these two graphs A&B.",
                    "label": 0
                },
                {
                    "sent": "So we may try to map let's say.",
                    "label": 0
                },
                {
                    "sent": "Vertex one to vertex one here.",
                    "label": 0
                },
                {
                    "sent": "We may try to map vertex too.",
                    "label": 0
                },
                {
                    "sent": "To vertex two, that's also OK.",
                    "label": 0
                },
                {
                    "sent": "But then, uh, yeah.",
                    "label": 0
                },
                {
                    "sent": "Three goes to three.",
                    "label": 0
                },
                {
                    "sent": "Four goes to four.",
                    "label": 0
                },
                {
                    "sent": "Nope, it won't work right, so we have to find the.",
                    "label": 0
                },
                {
                    "sent": "Let's say this cycle here, which is used in this graph in the other graph.",
                    "label": 0
                },
                {
                    "sent": "So maybe it would be better to start drawing something like this.",
                    "label": 0
                },
                {
                    "sent": "Maybe we can do it like this.",
                    "label": 0
                },
                {
                    "sent": "So if this rat cycle is mapped to the outer cycle of the other graph, then I think everything is going to be OK.",
                    "label": 0
                },
                {
                    "sent": "So one goes to one, that's fine.",
                    "label": 0
                },
                {
                    "sent": "Two goes to two.",
                    "label": 0
                },
                {
                    "sent": "That's also OK, but then six goes to three.",
                    "label": 0
                },
                {
                    "sent": "And then seven goes to four.",
                    "label": 0
                },
                {
                    "sent": "And then three goes to five.",
                    "label": 0
                },
                {
                    "sent": "And then four goes to.",
                    "label": 0
                },
                {
                    "sent": "Four to six.",
                    "label": 0
                },
                {
                    "sent": "It goes to 7.",
                    "label": 0
                },
                {
                    "sent": "And five goes to.",
                    "label": 0
                },
                {
                    "sent": "So that would be an example of of an isomorphism.",
                    "label": 0
                },
                {
                    "sent": "On the.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Easier to do the the other example here.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The problem with graph isomorphisms is of course when the two graphs are not isomorphic.",
                    "label": 0
                },
                {
                    "sent": "Becausw if you want to prove that two graphs are non isomorphic then you have to find some feature which distinguishes the two graphs.",
                    "label": 0
                },
                {
                    "sent": "So you have to find some graph invariant.",
                    "label": 0
                },
                {
                    "sent": "Which is true in one graph and it's false in the other graph, so it doesn't it has different value in the other graph.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And for finding such a. Invariant that seems still to be a quite complicated task, although in practice there are very good algorithms which can do that, but.",
                    "label": 0
                },
                {
                    "sent": "In general, this still seems to be quite complicated.",
                    "label": 0
                },
                {
                    "sent": "So if we want to look at some example we have here this graph.",
                    "label": 0
                },
                {
                    "sent": "Here the random graph it has four vertices.",
                    "label": 0
                },
                {
                    "sent": "It obviously has five edges.",
                    "label": 0
                },
                {
                    "sent": "It's minimal violence here.",
                    "label": 0
                },
                {
                    "sent": "The violence is 3232, so the minimum balance is 2 and the maximum balance is 3.",
                    "label": 0
                },
                {
                    "sent": "And as I mentioned earlier, the matrices are not.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Graph invariants.",
                    "label": 0
                },
                {
                    "sent": "Although if you take the spectrum of a matrix of the.",
                    "label": 0
                },
                {
                    "sent": "Adjacency matrix, it is a graph invariant.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "What is a spectrum?",
                    "label": 0
                },
                {
                    "sent": "Is the collection of eigenvalues, so the eigenvalues are graph invariants.",
                    "label": 0
                },
                {
                    "sent": "They are independent of the permutation of simultaneous permutations of frozen sums, rows and columns of the.",
                    "label": 0
                },
                {
                    "sent": "Adjacency matrix.",
                    "label": 0
                },
                {
                    "sent": "Any questions?",
                    "label": 0
                },
                {
                    "sent": "OK. Let's go to subgraphs and connectivity.",
                    "label": 1
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "In grass.",
                    "label": 0
                },
                {
                    "sent": "If we have a graph and if we let's say VE and select two subset U, there's a subset of the vertex set and F which is a subset of the headset.",
                    "label": 0
                },
                {
                    "sent": "Then it may happen that this pair you F is a graph or it's not a graph.",
                    "label": 0
                },
                {
                    "sent": "If it is a graph.",
                    "label": 0
                },
                {
                    "sent": "Then it is called the sub graph.",
                    "label": 0
                },
                {
                    "sent": "Of G. But if it's not a graph, then of course not a sub graph.",
                    "label": 0
                },
                {
                    "sent": "So for instance, let me just give you a little example.",
                    "label": 0
                },
                {
                    "sent": "If we take.",
                    "label": 0
                },
                {
                    "sent": "Or random graph here.",
                    "label": 0
                },
                {
                    "sent": "And if we select this edge here.",
                    "label": 0
                },
                {
                    "sent": "And this vertex here.",
                    "label": 0
                },
                {
                    "sent": "This is not a subgraph becausw together with this edge.",
                    "label": 0
                },
                {
                    "sent": "You have to select the two endpoints.",
                    "label": 0
                },
                {
                    "sent": "If you select the three vertices and one edge, then that would be a sample OK.",
                    "label": 0
                },
                {
                    "sent": "So of course if U equals V then we say that edge is a spanning sub graph.",
                    "label": 0
                },
                {
                    "sent": "So this means.",
                    "label": 0
                },
                {
                    "sent": "We just remove some of the edges of the original graph in order to get the sub graph or the other extreme is if you have.",
                    "label": 0
                },
                {
                    "sent": "If you have a graph and you just select.",
                    "label": 0
                },
                {
                    "sent": "A collection of vertices.",
                    "label": 0
                },
                {
                    "sent": "Then this collection of vertices.",
                    "label": 0
                },
                {
                    "sent": "Or somehow defines the maximal possible sub graph on that induced on that set of vertices.",
                    "label": 0
                },
                {
                    "sent": "This means that you Add all the edges that belong that have both endpoints in this subset.",
                    "label": 0
                },
                {
                    "sent": "Then we're talking about the induced sub graph.",
                    "label": 0
                },
                {
                    "sent": "So as we said here in this sub graph, this is completely determined by the set.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Curtis is.",
                    "label": 0
                },
                {
                    "sent": "Here are.",
                    "label": 0
                },
                {
                    "sent": "Three quick examples.",
                    "label": 0
                },
                {
                    "sent": "So the very first graph is K4.",
                    "label": 0
                },
                {
                    "sent": "Here is an example that is of a graph of a sub graph that is neither induced nor spanning.",
                    "label": 0
                },
                {
                    "sent": "That's a spanning subgraph, and that's an induced subgraph.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Um?",
                    "label": 0
                },
                {
                    "sent": "So what is a walk?",
                    "label": 0
                },
                {
                    "sent": "A walk in our case in a graph is just the sequence of vertices.",
                    "label": 0
                },
                {
                    "sent": "V0V1 up to VK.",
                    "label": 0
                },
                {
                    "sent": "With the property that two consecutive verticies.",
                    "label": 0
                },
                {
                    "sent": "In that sequence are adjacent vertices in the graph.",
                    "label": 0
                },
                {
                    "sent": "And in this case we can talk about.",
                    "label": 0
                },
                {
                    "sent": "The initial vertex V0 and terminal vertex VK and we talk about the walk from V0 to VK or between V0 and VK.",
                    "label": 0
                },
                {
                    "sent": "Uh V 0 maybe also called the beginning of the walk and the case.",
                    "label": 0
                },
                {
                    "sent": "The end of the walk and K the number K is called the length of the walk W. So there are some special cases of walks, if I may just draw like this so walk looks like this, but it may repeat itself, so it may go.",
                    "label": 0
                },
                {
                    "sent": "So once you make a picture of a walk, you don't see what was going on, you just we were walking like this.",
                    "label": 0
                },
                {
                    "sent": "So here, here, here, here and then back and then here and here and here and here OK.",
                    "label": 0
                },
                {
                    "sent": "So a walk is called a closed walk is the term if the terminal vertex is identical to the initial vertex on the walk.",
                    "label": 0
                },
                {
                    "sent": "So we start walking somewhere and get to the same point.",
                    "label": 0
                },
                {
                    "sent": "So that would not be a close walk.",
                    "label": 0
                },
                {
                    "sent": "That would be an open walk.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "A very special case of a walk is a path.",
                    "label": 0
                },
                {
                    "sent": "That's just the walk.",
                    "label": 0
                },
                {
                    "sent": "Which belongs to an.",
                    "label": 0
                },
                {
                    "sent": "Whose underlying sub graph is a path?",
                    "label": 0
                },
                {
                    "sent": "As we defined it, so all vertices in the work must be distinct.",
                    "label": 0
                },
                {
                    "sent": "On special cases also cycle.",
                    "label": 0
                },
                {
                    "sent": "Where again all vertices are distinct except the very first and the last, which must be the same, so it's a closed walk with all vertices this thing.",
                    "label": 0
                },
                {
                    "sent": "So a path can be also viewed as a subgraph of G as in Washington.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "It's also the same.",
                    "label": 0
                },
                {
                    "sent": "Uh, there is a.",
                    "label": 0
                },
                {
                    "sent": "Very easy but very important lemma stating that if I have somewhere to vertices, let's call them A&B.",
                    "label": 0
                },
                {
                    "sent": "And if I have some work here.",
                    "label": 0
                },
                {
                    "sent": "From A to B, then there must be also a path between A to B.",
                    "label": 0
                },
                {
                    "sent": "And vice versa, but vice versa is trivial because any path is also a walk, so there is no.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Include.",
                    "label": 0
                },
                {
                    "sent": "Another concept, very useful and important in graph theory is connectedness.",
                    "label": 0
                },
                {
                    "sent": "Usually when people talk about graphs.",
                    "label": 0
                },
                {
                    "sent": "They.",
                    "label": 0
                },
                {
                    "sent": "Think they're talking about connected graphs.",
                    "label": 0
                },
                {
                    "sent": "So sometimes when we forget about stating that we usually think about connected graphs, and if we're talking about more general graphs, we say, well, we also allow disconnected graphs.",
                    "label": 0
                },
                {
                    "sent": "Oh how do we?",
                    "label": 0
                },
                {
                    "sent": "Define connectedness are usually.",
                    "label": 0
                },
                {
                    "sent": "A claim in the following way you take your graph.",
                    "label": 0
                },
                {
                    "sent": "Any graph you want, for instance this one here.",
                    "label": 0
                },
                {
                    "sent": "You take one vertex.",
                    "label": 0
                },
                {
                    "sent": "You bring it like this and shake it a little bit.",
                    "label": 0
                },
                {
                    "sent": "If something falls down, the graph is not connected.",
                    "label": 0
                },
                {
                    "sent": "If everything stays, then the graph is connected OK, but it's semi physical definition of a graph which is intuitive but not not mathematical.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "So one definition would be like this.",
                    "label": 0
                },
                {
                    "sent": "We say that two vertices U&V are related.",
                    "label": 0
                },
                {
                    "sent": "So we define a binary relation or on the set V. And we say that are related if and only if there is a walk or path between U&V.",
                    "label": 0
                },
                {
                    "sent": "It's not hard to prove that R in this case is a cruel installation.",
                    "label": 0
                },
                {
                    "sent": "So it's reflexive, symmetric and transitive.",
                    "label": 0
                },
                {
                    "sent": "And I.",
                    "label": 0
                },
                {
                    "sent": "Here's something should be changed, probably sorry.",
                    "label": 0
                },
                {
                    "sent": "Off it's all here, right?",
                    "label": 0
                },
                {
                    "sent": "OK, so the equivalence classes are called connected components of G. If.",
                    "label": 0
                },
                {
                    "sent": "There is only one connected component.",
                    "label": 0
                },
                {
                    "sent": "Then such a graph is called connected.",
                    "label": 0
                },
                {
                    "sent": "In this case that I have here we have two connected components, so one would be this triangle and the other one would be this triangle here.",
                    "label": 0
                },
                {
                    "sent": "So we have two connected components.",
                    "label": 0
                },
                {
                    "sent": "The graph is not connected.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "It's 2 connected components.",
                    "label": 0
                },
                {
                    "sent": "If we have a connected graph.",
                    "label": 0
                },
                {
                    "sent": "Then everything is fine.",
                    "label": 0
                },
                {
                    "sent": "We can define.",
                    "label": 0
                },
                {
                    "sent": "Distance.",
                    "label": 0
                },
                {
                    "sent": "Function on a graph and we say that the distance between U&V.",
                    "label": 0
                },
                {
                    "sent": "Is the minimum length of any walk between U&V.",
                    "label": 0
                },
                {
                    "sent": "No.",
                    "label": 0
                },
                {
                    "sent": "Here instead of walk.",
                    "label": 0
                },
                {
                    "sent": "We can safely say path.",
                    "label": 0
                },
                {
                    "sent": "Becausw or.",
                    "label": 0
                },
                {
                    "sent": "If you have a walk of some length, then there must be that path which is at least.",
                    "label": 0
                },
                {
                    "sent": "At most.",
                    "label": 0
                },
                {
                    "sent": "It's whose length is a small.",
                    "label": 0
                },
                {
                    "sent": "It is at most the length of the walk.",
                    "label": 0
                },
                {
                    "sent": "It may be shorter, it cannot be.",
                    "label": 0
                },
                {
                    "sent": "It cannot be longer so.",
                    "label": 0
                },
                {
                    "sent": "This is the usual definition, so this is the length of the shortest path between U&V and there is all there.",
                    "label": 0
                },
                {
                    "sent": "All kinds of algorithms for finding shortest paths.",
                    "label": 0
                },
                {
                    "sent": "Dijkstra not only in graphs in weighted graphs, but we're not going to talk about that cause it's more in the spirit of.",
                    "label": 0
                },
                {
                    "sent": "Of computer science.",
                    "label": 0
                },
                {
                    "sent": "Finally, let's define the diameter of G. There's the maximum distance between any 2.",
                    "label": 0
                },
                {
                    "sent": "Vertices of G.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, any questions?",
                    "label": 0
                },
                {
                    "sent": "Blow trees.",
                    "label": 0
                },
                {
                    "sent": "What is a tree?",
                    "label": 0
                },
                {
                    "sent": "Well, there are several equivalent definitions, and they're all here, five of them, and they may be more.",
                    "label": 0
                },
                {
                    "sent": "We decided to.",
                    "label": 0
                },
                {
                    "sent": "To define it as a graph that is connected and there is exactly 1 path between any two vertices.",
                    "label": 0
                },
                {
                    "sent": "And this important lemma tells you that all five definitions listed here are equivalent.",
                    "label": 0
                },
                {
                    "sent": "So the graph is connected, but removal of any edge disconnected.",
                    "label": 0
                },
                {
                    "sent": "That would be another definition.",
                    "label": 0
                },
                {
                    "sent": "Over 3 or it's connected and the number of edges is just one less.",
                    "label": 0
                },
                {
                    "sent": "Then the number of vertices.",
                    "label": 0
                },
                {
                    "sent": "Or G contains no cycle and the other condition of the previous condition is true.",
                    "label": 0
                },
                {
                    "sent": "And that's my favorite.",
                    "label": 0
                },
                {
                    "sent": "G is connected and contains no cycle.",
                    "label": 0
                },
                {
                    "sent": "Oh",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Here.",
                    "label": 0
                },
                {
                    "sent": "We also list on.",
                    "label": 0
                },
                {
                    "sent": "You will have.",
                    "label": 0
                },
                {
                    "sent": "The complete proof of this on the Internet.",
                    "label": 1
                },
                {
                    "sent": "But here we are only.",
                    "label": 0
                },
                {
                    "sent": "Give proof of one of the.",
                    "label": 1
                },
                {
                    "sent": "Of the five.",
                    "label": 0
                },
                {
                    "sent": "Steps right so we are.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Trying to prove that if G is connected and there is exactly 1 path between any two vertices.",
                    "label": 0
                },
                {
                    "sent": "So I have two vertices U&V and I know that there is exactly 1 path between U&V.",
                    "label": 0
                },
                {
                    "sent": "Then I would like to prove that.",
                    "label": 0
                },
                {
                    "sent": "It is connected, but removal of any edge disconnected.",
                    "label": 0
                },
                {
                    "sent": "OK so if if the first condition is true means it's connected then this part is true.",
                    "label": 0
                },
                {
                    "sent": "Two it is connected so there is nothing to it.",
                    "label": 0
                },
                {
                    "sent": "We just have to prove that if we remove any edge then the graph.",
                    "label": 0
                },
                {
                    "sent": "Or will be disconnected.",
                    "label": 0
                },
                {
                    "sent": "OK, so let's take an edge.",
                    "label": 0
                },
                {
                    "sent": "From let's say X&Y.",
                    "label": 0
                },
                {
                    "sent": "That's an arbitrary age.",
                    "label": 0
                },
                {
                    "sent": "Well, if that is if this one is true, this means there is exactly 1.",
                    "label": 0
                },
                {
                    "sent": "Path between X&Y and that path is just the edge.",
                    "label": 0
                },
                {
                    "sent": "Right?",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "If I remove the edge E. There is no path between X&Y.",
                    "label": 0
                },
                {
                    "sent": "So they must be in different components, connected components.",
                    "label": 0
                },
                {
                    "sent": "So the graph is not connected anymore, so that way.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": []
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And here are other.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Proves that I'm not going to go.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Into because I would like to cover a little bit more unless.",
                    "label": 0
                },
                {
                    "sent": "Are there any questions?",
                    "label": 0
                },
                {
                    "sent": "Bathroom wall should be exactly one walking stick.",
                    "label": 0
                },
                {
                    "sent": "Oh no, there may be more than one walk.",
                    "label": 0
                },
                {
                    "sent": "Let me give you an example.",
                    "label": 0
                },
                {
                    "sent": "So I have.",
                    "label": 0
                },
                {
                    "sent": "Let's say from X to Y.",
                    "label": 0
                },
                {
                    "sent": "There is only one path that would be, let's say Z and that will be W 0X.",
                    "label": 0
                },
                {
                    "sent": "The W that is the path between X&Y.",
                    "label": 0
                },
                {
                    "sent": "Unique, but here is a walk XZWZY that's a walk which goes like this.",
                    "label": 0
                },
                {
                    "sent": "So then we want more than one walk.",
                    "label": 0
                },
                {
                    "sent": "Frank yeah.",
                    "label": 0
                },
                {
                    "sent": "Yeah so.",
                    "label": 0
                },
                {
                    "sent": "If we if and it's true if you start walking then you just know.",
                    "label": 0
                },
                {
                    "sent": "OK, so path is no repeated vertices.",
                    "label": 0
                },
                {
                    "sent": "OK and walk it.",
                    "label": 0
                },
                {
                    "sent": "Maybe you may walk a little bit, wander around and do many things.",
                    "label": 0
                },
                {
                    "sent": "Other questions.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK. Now that is very important.",
                    "label": 0
                },
                {
                    "sent": "Consequence to this student that we stated above and prove just one fifth of the of it.",
                    "label": 0
                },
                {
                    "sent": "And that is.",
                    "label": 0
                },
                {
                    "sent": "Or any three.",
                    "label": 0
                },
                {
                    "sent": "Contains at least one vertex of valence one.",
                    "label": 0
                },
                {
                    "sent": "Here we have to be careful.",
                    "label": 0
                },
                {
                    "sent": "All graphs that we consider here are finite.",
                    "label": 0
                },
                {
                    "sent": "OK. Because for this for infinite graphs.",
                    "label": 0
                },
                {
                    "sent": "This is not true.",
                    "label": 0
                },
                {
                    "sent": "Let me give you an example of an infinite graph in which this is not true.",
                    "label": 0
                },
                {
                    "sent": "I mean it's 3.",
                    "label": 0
                },
                {
                    "sent": "So that's an example of an infinite 3.",
                    "label": 0
                },
                {
                    "sent": "There is exactly 1.",
                    "label": 0
                },
                {
                    "sent": "Path between any two vertices, so that's a tree.",
                    "label": 0
                },
                {
                    "sent": "But these three has no vertex of variance one.",
                    "label": 0
                },
                {
                    "sent": "Each vertex has valence 2.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "So one has to be careful here.",
                    "label": 0
                },
                {
                    "sent": "So here is the proof.",
                    "label": 0
                },
                {
                    "sent": "Suppose G is a graph.",
                    "label": 0
                },
                {
                    "sent": "Maybe 3 right in which every vertex has violence at least two.",
                    "label": 0
                },
                {
                    "sent": "Then by the handshaking lemma.",
                    "label": 0
                },
                {
                    "sent": "We have the number of edges is 1 / 2.",
                    "label": 0
                },
                {
                    "sent": "Times the sum of the valencies of our graph, but remember the valence of each vertex is at least two so this is greater or equal to two.",
                    "label": 0
                },
                {
                    "sent": "We have V of G valences, so this must be greater or equal to 1/2.",
                    "label": 0
                },
                {
                    "sent": "Times this is 1/2 from here view of G comes from.",
                    "label": 0
                },
                {
                    "sent": "V * 2 comes from this, and now these two and two Castle and to get view of G. So what do we get?",
                    "label": 0
                },
                {
                    "sent": "We get that EOG is greater or equal to V of G. On the other hand, if Jesus 3, then EOG is less than the OG becausw.",
                    "label": 0
                },
                {
                    "sent": "EOG is just view of the minus one as we.",
                    "label": 0
                },
                {
                    "sent": "We've seen in the in the in the previous theorem, so that's a contradiction.",
                    "label": 0
                },
                {
                    "sent": "So if you have such a graph, then G is definitely not a tree.",
                    "label": 0
                },
                {
                    "sent": "And you see, this handshaking lemma holds for for finite graphs.",
                    "label": 0
                },
                {
                    "sent": "It doesn't hold for.",
                    "label": 0
                },
                {
                    "sent": "Necessary hold for it for infinite medals.",
                    "label": 0
                },
                {
                    "sent": "Vertices of valence one have special name.",
                    "label": 0
                },
                {
                    "sent": "They are called leaves.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "What is a spanning tree?",
                    "label": 0
                },
                {
                    "sent": "A spanning tree is a spanning subgraph that is a 3.",
                    "label": 0
                },
                {
                    "sent": "And it's very important.",
                    "label": 0
                },
                {
                    "sent": "That the finite graph.",
                    "label": 0
                },
                {
                    "sent": "Is connected if and only if it contains a spanning tree.",
                    "label": 0
                },
                {
                    "sent": "Oh here again, we have to state that the graph is finite, because for instance, for infinite graphs the existence of a spanning tree.",
                    "label": 0
                },
                {
                    "sent": "Is equivalent to the axiom of choice.",
                    "label": 0
                },
                {
                    "sent": "So that's.",
                    "label": 0
                },
                {
                    "sent": "You cannot prove it, you just have to assume it by Axiom.",
                    "label": 0
                },
                {
                    "sent": "But for finite graphs, it's easy, right?",
                    "label": 0
                },
                {
                    "sent": "If graph is connected.",
                    "label": 0
                },
                {
                    "sent": "Then it must contain a spanning tree, so we have a finite graph.",
                    "label": 0
                },
                {
                    "sent": "It is connected if it's not a tree, then by that theorem it must have at least one cycle.",
                    "label": 0
                },
                {
                    "sent": "Take that cycle.",
                    "label": 0
                },
                {
                    "sent": "Any edge on the cycle remove it.",
                    "label": 0
                },
                {
                    "sent": "Under graph stays connected.",
                    "label": 0
                },
                {
                    "sent": "Right?",
                    "label": 0
                },
                {
                    "sent": "No, keep doing that cause the graph is finite, there are only finitely many.",
                    "label": 0
                },
                {
                    "sent": "Edges and if you keep removing edges eventually.",
                    "label": 0
                },
                {
                    "sent": "You'll have to.",
                    "label": 0
                },
                {
                    "sent": "Get no edges and you have.",
                    "label": 0
                },
                {
                    "sent": "If you get no edges, it means the graph is definitely not connected.",
                    "label": 0
                },
                {
                    "sent": "So at some point you must have a.",
                    "label": 0
                },
                {
                    "sent": "You must have a situation where.",
                    "label": 0
                },
                {
                    "sent": "There is no cycle.",
                    "label": 0
                },
                {
                    "sent": "And in that case you get graph which is connected and has no cycle, so it is a tree and it still has all the original vertices.",
                    "label": 0
                },
                {
                    "sent": "So it's a spanning subgraph, and it's a tree, so the graph must careless spanning tree.",
                    "label": 0
                },
                {
                    "sent": "The converse.",
                    "label": 0
                },
                {
                    "sent": "Is obvious, so if you have a graph that has a spanning tree, then you must have between any two vertices of a graph.",
                    "label": 0
                },
                {
                    "sent": "You must have at least one path that path.",
                    "label": 0
                },
                {
                    "sent": "May follow the spanning tree.",
                    "label": 0
                },
                {
                    "sent": "And graph must be connected.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "There is an interesting formula.",
                    "label": 0
                },
                {
                    "sent": "To calculate the number of spanning trees.",
                    "label": 0
                },
                {
                    "sent": "So obviously a connected graph may have more than one spanning tree.",
                    "label": 0
                },
                {
                    "sent": "If the graph is 3, then this is the only spanning tree.",
                    "label": 0
                },
                {
                    "sent": "But all other graphs.",
                    "label": 0
                },
                {
                    "sent": "That are connected.",
                    "label": 0
                },
                {
                    "sent": "Contain more than one spanning tree.",
                    "label": 0
                },
                {
                    "sent": "For instance.",
                    "label": 0
                },
                {
                    "sent": "Pool of KN South complete graph.",
                    "label": 0
                },
                {
                    "sent": "Uh, there's the number of spanning tree in a complete graph equals 2 N to the power of minus two.",
                    "label": 0
                },
                {
                    "sent": "I usually prove that via the so called prefer.",
                    "label": 0
                },
                {
                    "sent": "Code.",
                    "label": 0
                },
                {
                    "sent": "But I'm not going to do it here.",
                    "label": 0
                },
                {
                    "sent": "Because we don't need it.",
                    "label": 0
                },
                {
                    "sent": "Uh.",
                    "label": 0
                },
                {
                    "sent": "Let me.",
                    "label": 0
                },
                {
                    "sent": "Briefly mentioned two graph operations.",
                    "label": 0
                },
                {
                    "sent": "There are simple graph operations.",
                    "label": 0
                },
                {
                    "sent": "One is actually moval.",
                    "label": 0
                },
                {
                    "sent": "And the other one is edge contraction.",
                    "label": 0
                },
                {
                    "sent": "So Azure removal G -- E means we have a graph, for instance to complete it off.",
                    "label": 0
                },
                {
                    "sent": "And then we decide to remove one edge.",
                    "label": 0
                },
                {
                    "sent": "And in this case we get the random graph.",
                    "label": 0
                },
                {
                    "sent": "The other operation is edge construction.",
                    "label": 0
                },
                {
                    "sent": "Edge contraction let's take this graph here.",
                    "label": 0
                },
                {
                    "sent": "And let's select an edge.",
                    "label": 0
                },
                {
                    "sent": "Maybe this one here.",
                    "label": 0
                },
                {
                    "sent": "So what we do we remove this edge and then identify?",
                    "label": 0
                },
                {
                    "sent": "The two end points on that former edge.",
                    "label": 0
                },
                {
                    "sent": "And this can be done in two ways in.",
                    "label": 0
                },
                {
                    "sent": "In this way we do it in such a way that we keep the.",
                    "label": 0
                },
                {
                    "sent": "Edges, so if this is let's say 1234 we get.",
                    "label": 0
                },
                {
                    "sent": "Something like this one?",
                    "label": 0
                },
                {
                    "sent": "Three, and this is the vertex 24.",
                    "label": 0
                },
                {
                    "sent": "OK. And, uh.",
                    "label": 0
                },
                {
                    "sent": "The number.",
                    "label": 0
                },
                {
                    "sent": "Of spanning tree.",
                    "label": 0
                },
                {
                    "sent": "Of spanning trees in the graph.",
                    "label": 0
                },
                {
                    "sent": "Satisfies the following.",
                    "label": 0
                },
                {
                    "sent": "Recursion.",
                    "label": 0
                },
                {
                    "sent": "So the number of spanning trees of G is the same as the sum of the numbers of spanning trees of G -- E and G / E. Well, the proof is very easy.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "If we have a graph.",
                    "label": 0
                },
                {
                    "sent": "And if I have an edge.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "When I count.",
                    "label": 0
                },
                {
                    "sent": "The number of spanning trees.",
                    "label": 0
                },
                {
                    "sent": "Or if I generate all possible spanning trees, then the class of spanning trees falls into two disjoint subclasses.",
                    "label": 0
                },
                {
                    "sent": "There are the spanning trees that contain.",
                    "label": 0
                },
                {
                    "sent": "SE and there are spanning trees that do not contain.",
                    "label": 0
                },
                {
                    "sent": "The HE.",
                    "label": 0
                },
                {
                    "sent": "They're definitely disjoint, so if I count those and I can count those, then I just have to add these two numbers and they get the number of spanning trees OK. Alright.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "If I have.",
                    "label": 0
                },
                {
                    "sent": "A spanning tree that contains E. I may contract this edge.",
                    "label": 0
                },
                {
                    "sent": "And I will get a spanning tree in the graph.",
                    "label": 0
                },
                {
                    "sent": "G. Ovary.",
                    "label": 0
                },
                {
                    "sent": "On the other hand, if I have a spanning tree in G. / E. I can always expand this edge and this will define a spanning tree in this graph.",
                    "label": 0
                },
                {
                    "sent": "Which contains E. So there is a bijection between these two.",
                    "label": 0
                },
                {
                    "sent": "So counting this spanning trees here is the same as counting the spanning trees here, so there's a number.",
                    "label": 0
                },
                {
                    "sent": "There's this number upstairs now.",
                    "label": 0
                },
                {
                    "sent": "What is the number downstairs?",
                    "label": 0
                },
                {
                    "sent": "Well, if East never appears in the spanning tree, I throw it away.",
                    "label": 0
                },
                {
                    "sent": "And I just count all spanning trees.",
                    "label": 0
                },
                {
                    "sent": "That do not contain any, and there's the number of spanning trees of G -- D, so there's some of this doing this, however.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Here is an example.",
                    "label": 0
                },
                {
                    "sent": "Or so we have our random graph.",
                    "label": 0
                },
                {
                    "sent": "We select E1 in this case.",
                    "label": 0
                },
                {
                    "sent": "Here we delete it alright.",
                    "label": 0
                },
                {
                    "sent": "If this is G. This graph is G -- E one, and here this is G. Divided by 81.",
                    "label": 0
                },
                {
                    "sent": "And if you see you see this vertex here is this vertex here.",
                    "label": 0
                },
                {
                    "sent": "OK. Contraction of the edgy.",
                    "label": 0
                },
                {
                    "sent": "And similarly, you go all the way and you go.",
                    "label": 0
                },
                {
                    "sent": "Here, for instance, there is only one spanning tree because we get already.",
                    "label": 0
                },
                {
                    "sent": "The.",
                    "label": 0
                },
                {
                    "sent": "Uh, three here there are two spanning trees, becausw I may select either this edge or this edge and each one.",
                    "label": 0
                },
                {
                    "sent": "Each selection gives you gives me one spanning tree.",
                    "label": 0
                },
                {
                    "sent": "Or I could have done something else to it and OK, here is one more so if you count all these numbers you get AIDS.",
                    "label": 0
                },
                {
                    "sent": "So this graph has eight spanning trees.",
                    "label": 0
                },
                {
                    "sent": "Here is an independent proof of this fact.",
                    "label": 0
                },
                {
                    "sent": "So we have a random graph.",
                    "label": 0
                },
                {
                    "sent": "It has a little too many edges to be a tree.",
                    "label": 0
                },
                {
                    "sent": "How many edges do I have to delete in order to get a tree?",
                    "label": 0
                },
                {
                    "sent": "How many edges do I have to delete together?",
                    "label": 0
                },
                {
                    "sent": "3.",
                    "label": 0
                },
                {
                    "sent": "Two right two?",
                    "label": 0
                },
                {
                    "sent": "So how many edges do I have?",
                    "label": 0
                },
                {
                    "sent": "Five so if I delete any pair of edges that can be done in 10 ways.",
                    "label": 0
                },
                {
                    "sent": "Do I have 10 spanning trees?",
                    "label": 0
                },
                {
                    "sent": "No, why not?",
                    "label": 0
                },
                {
                    "sent": "Well, if I delete these two guys.",
                    "label": 0
                },
                {
                    "sent": "Then I will separate this vertex from the rest, so the graph will not be connected.",
                    "label": 0
                },
                {
                    "sent": "If I delete these two guys.",
                    "label": 0
                },
                {
                    "sent": "I will get a disconnected graph, so I have to.",
                    "label": 0
                },
                {
                    "sent": "And that's how I get a spanning trees OK. Any other choices OK?",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "There is a lovely theorem.",
                    "label": 0
                },
                {
                    "sent": "It's due to Kirchhoff, so it's quite an old one.",
                    "label": 0
                },
                {
                    "sent": "Which enables you to calculate the number of spanning trees just like this.",
                    "label": 0
                },
                {
                    "sent": "So all you have to do is define a new matrix which is called the relation matrix of a graph L of G. There's the diagonal matrix composed of the valences of graph minus the adjacency matrix.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "Or you find its spectrum so its eigenvalues, it turns out.",
                    "label": 0
                },
                {
                    "sent": "That the least eigenvalue is zero in this case.",
                    "label": 0
                },
                {
                    "sent": "And all other eigenvalues are are positive.",
                    "label": 0
                },
                {
                    "sent": "So if graph is connected.",
                    "label": 0
                },
                {
                    "sent": "So you have to take the non zero eigenvalues Lambda one up to Lambda N -- 1 because Lambda and remember is zero.",
                    "label": 0
                },
                {
                    "sent": "You take the product of those eigenvalues, divide that by by number of vertice is of graph and you get the spanning.",
                    "label": 0
                },
                {
                    "sent": "The number of spanning trees.",
                    "label": 0
                },
                {
                    "sent": "Uh, let me give you just a little more.",
                    "label": 0
                },
                {
                    "sent": "How this works?",
                    "label": 0
                },
                {
                    "sent": "So I wrote a little program in Mathematica.",
                    "label": 0
                },
                {
                    "sent": "Using Vega, you'll.",
                    "label": 0
                },
                {
                    "sent": "You will probably encounter Vega if you haven't encountered yet.",
                    "label": 0
                },
                {
                    "sent": "Maybe in exercises or something, and now I will run this program for you.",
                    "label": 0
                },
                {
                    "sent": "So first we load Vega.",
                    "label": 0
                },
                {
                    "sent": "Oh you know, whenever you get new version of Mathematica.",
                    "label": 0
                },
                {
                    "sent": "You get some errors, but.",
                    "label": 0
                },
                {
                    "sent": "Now we define the function number of spanning tree of graph G. So what do we do?",
                    "label": 0
                },
                {
                    "sent": "First we calculate the Laplace matrix of G, then find the eigenvalues of those and then select those that are positive and then multiply them together and then divide by the number of vertices of G. So that's by definition.",
                    "label": 0
                },
                {
                    "sent": "We do it by definition.",
                    "label": 0
                },
                {
                    "sent": "So let me define this function.",
                    "label": 0
                },
                {
                    "sent": "That was easy.",
                    "label": 0
                },
                {
                    "sent": "Now let's look at our random graph.",
                    "label": 0
                },
                {
                    "sent": "So random graph.",
                    "label": 0
                },
                {
                    "sent": "There's the complete graph on four vertices, and let's delete the edge 1 three from it.",
                    "label": 0
                },
                {
                    "sent": "This is our graph.",
                    "label": 0
                },
                {
                    "sent": "And now let's calculate the number of spanning trees of our random graph.",
                    "label": 0
                },
                {
                    "sent": "Meditate.",
                    "label": 0
                },
                {
                    "sent": "So it's like a miracle, but it works.",
                    "label": 0
                },
                {
                    "sent": "Here I have another example you should take.",
                    "label": 0
                },
                {
                    "sent": "Number of spanning 3 / 3 three here is the complete bipartite Graph 1 four that's a tree itself, so it's one.",
                    "label": 0
                },
                {
                    "sent": "So that's not a proof, but it helps us a little bit.",
                    "label": 0
                },
                {
                    "sent": "OK. And we get the same result if you calculate any of.",
                    "label": 0
                },
                {
                    "sent": "Cofactors of laplace.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Metrics only.",
                    "label": 0
                },
                {
                    "sent": "I'm here is this example that I've ran through Mathematica, so the Laplace matrix again you see?",
                    "label": 0
                },
                {
                    "sent": "You what do you do?",
                    "label": 0
                },
                {
                    "sent": "You put on the diagonal, the valences so in the row one or in diagonal 11, that's the valence of vertex one.",
                    "label": 0
                },
                {
                    "sent": "There's the valence of vertex two as the valence of vertex 3.",
                    "label": 0
                },
                {
                    "sent": "And that's the balance of vertex four, and the rest is the negative adjacency matrix.",
                    "label": 0
                },
                {
                    "sent": "OG OK.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Oh a spanning subgraph is sometimes called a factor.",
                    "label": 1
                },
                {
                    "sent": "There are two special spending graphs with that are very important.",
                    "label": 1
                },
                {
                    "sent": "Spanning path is called the Hamilton Path, and spending cycle is called a Hamilton cycle and I think you've encountered those.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Earlier.",
                    "label": 0
                },
                {
                    "sent": "So let me finish.",
                    "label": 0
                },
                {
                    "sent": "This part of the lecture by defining an isometric sub graph, so a graph.",
                    "label": 0
                },
                {
                    "sent": "He's isometric.",
                    "label": 0
                },
                {
                    "sent": "Intuitively, what does it mean you take it off, take a sub graph and then you what you want to do is you want to be the distance between any two vertices in the sub graph to be the same as the distance between these two vertices in the original graph becausw.",
                    "label": 0
                },
                {
                    "sent": "In general, if you move from graph to sub graph, the distances may increase.",
                    "label": 1
                },
                {
                    "sent": "But in the isometric subgraph they do not.",
                    "label": 1
                },
                {
                    "sent": "Example.",
                    "label": 0
                },
                {
                    "sent": "For instance, if you take the random graph.",
                    "label": 0
                },
                {
                    "sent": "And if you remove this edge here, you get a sub graph.",
                    "label": 0
                },
                {
                    "sent": "But the distance between this vertex and this vertex?",
                    "label": 0
                },
                {
                    "sent": "In the original graph, is one in the sub graph is 2.",
                    "label": 0
                },
                {
                    "sent": "So this graph is not an isometric some graph of graph.",
                    "label": 1
                },
                {
                    "sent": "So let's stop here.",
                    "label": 0
                }
            ]
        }
    }
}