{
    "id": "sj6v4ma5yb3tepxi7kvn7gg6gdhlxdz3",
    "title": "Randomized techniques for parameterized algorithms",
    "info": {
        "author": [
            "D\u00e1niel Marx, Computer and Automation research institute, Hungarian Academy of Science"
        ],
        "published": "Oct. 2, 2012",
        "recorded": "September 2012",
        "category": [
            "Top->Computer Science->Algorithms"
        ]
    },
    "url": "http://videolectures.net/algo2012_marx_parameterized_algorithms/",
    "segmentation": [
        [
            "Randomized algorithm is an algorithm that is not fully deterministic, but makes some random choices during its execution, so the result can be different on different runs, but it has a good bound on the probability of producing a correct answer, so it makes random choices, but we have a theoretical bound on that or probability and the motivation is that if we have a very good error probability then this is almost as good as having a fully deterministic algorithm becausw.",
            "Because if there are probabilities 10 to the minus 100, the probability of your computer is being destroyed by some natural disaster is probably much higher than that, so there's no such thing as a fully deterministic algorithm on Earth.",
            "And the advantage of randomized algorithms is that sometimes they are conceptually much simpler, much more elegant, and in some cases where maybe they are even more efficient.",
            "So it is definitely worth studying them.",
            "And also, if you're if you only care about atomistic algorithms, then you can look at a randomized algorithms.",
            "The first step it over to domestic algorithms, and in some cases there are techniques to the randomized randomized algorithm or source or randomized.",
            "Go down, give you some idea of finding a determine Istic algorithm."
        ],
        [
            "So in this talk I will talk about.",
            "Randomized algorithms or mattress problems so important as complexity.",
            "The central notion is fixed parameter tractability.",
            "We say that the problem that has some parameter K in the input, let's say the size of the social we are looking for or some measure of complexity of the input.",
            "We say that such a problem is fixed parameter tractable.",
            "If there's a problem solving it at F of K times the polynomial where F is an arbitrary function, possibly exponential function of K. So this means that the running time is polynomial, but there there's some nasty possible.",
            "Initial factor that depends only on this parameter K and doesn't depend on the size of the input.",
            "In my talk, I will present examples of randomized algorithm, randomized fixed, smarter tractability results.",
            "I will start with some very simple, very classical textbook examples and then I will move on to some more recent at more advanced techniques.",
            "But before that I would like to make a high level comment on how randomization is different in the context of polynomial time algorithms and in the context of this parameter, tractability."
        ],
        [
            "So important time randomized algorithms you use randomization to find something very boring.",
            "To believe that on average things are good and we just use randomization to find something average to find something, unproblematic to sign, find something that doesn't have a special situation.",
            "On the other hand, maybe this is not true for every randomized FPT algorithm, but for many of the randomized FPT algorithms we use randomization to find something very special.",
            "And violin appointment time randomized algorithms.",
            "We want that or probability typically to be a constant or at least or polynomial small in randomized FPT algorithms we usually want or sometimes even the error probability to Veladero probability to exponentially small.",
            "That's still good for us 'cause because we allow the running time to depend exponentially on this function on this parameter K. So we randomized FPT algorithms.",
            "We often use randomization to.",
            "To satisfy some about the number of constraints, but we use randomization because we do not know before hand this constraints, because these constraints are somehow related to the solution, But by randomization we do not have to know these constraints beforehand.",
            "Think of this distinction as two different dating strategies.",
            "So the first strategy is to be a nice guy to be as unproblematic as mainstream as normal as possible, hoping that this maximizes your chances of finding a partner.",
            "On the other hand, the second strategy is to be extra vagant do crazy things, paint your head hair pink and have tattoos and whatever, and then hope that by the law of large numbers there will be someone who is turned on by exactly this.",
            "Raisin and in this talk we will do precisely that, and it turns out to be a very successful strategy, at least in the context of parameterized algorithms.",
            "So we try to find solutions satisfying some crazy constraints, and it turns out that we will have a relatively good probability of finding such solutions."
        ],
        [
            "In a randomization are impractical and FPT.",
            "Randomization.",
            "There are two main source of of the two main ways.",
            "Randomization appears.",
            "The first is by formulating.",
            "The problem is as some algebraic problem and then using algebraic techniques.",
            "For example research, word searches palama and I will not talk anything about this.",
            "But in undress virtual invited talk on Friday you can hear more about this so please attend at all.",
            "In this talk, we will see only put your computer techniques where we are finding randomly some subset."
        ],
        [
            "OK, so this is the picture that you will see over and over again in this talk.",
            "And I mean this is the picture that I hope you will take home from this talk that we use randomization as a reduction.",
            "We have some problem that we want to solve problem A.",
            "We do some randomized magic and then after that we have to solve some other problem but that other problem is much easier.",
            "So this is not true for every randomized algorithms.",
            "But in for the randomized algorithm that I presented today, they will be all of.",
            "Or more reduction reduce exam some interesting problem to some problems that are matches here."
        ],
        [
            "I start with the.",
            "Video with the most classical random randomized example for parameterized algorithms.",
            "OK pass problem, which is which is given a graph G and then integer K. We gotta find a pass any pass.",
            "Any simple path of length exactly K?",
            "This is a this problem is NP hard as it contains a Hamiltonian path problem but but we hope that if for small values of K we might have a more efficient solution.",
            "So you can obviously do this in entered OK, but we want to do this in.",
            "F of K data times some polynomial and Ann and there are several techniques for doing this, But the first technique where this F of cave was just a single exponential is 2 to the K, not K to the K or not 2 to the two to the care.",
            "But this is just two to the order of K. The first algorithm to reach this trying time is due to allow user and speak using the color coding method and you saying that.",
            "At valid, KK is smaller than in a big graph.",
            "Probably it's easy to find some path of length K, But this is not true.",
            "This is a really challenging problem, so no surprise that it took so many smart people to figure out a solution and actually it was posed by Papadimitriou.",
            "Sandy anarchist as an open question.",
            "Whether you can find a path of length slogan in polynomial time and this was the 1st result answering that.",
            "So what is this color coding technique?",
            "It's very."
        ],
        [
            "Sample.",
            "So here is the graph and the assign random.",
            "Definitely we assign random colors from one to K2."
        ],
        [
            "Services and then we make a crazy requirement.",
            "We require that the path."
        ],
        [
            "We are looking for discolored 12345.",
            "OK, now if we find such a path then then then that's a good solution and we say yes.",
            "And if we don't find such a path, we say that no, sorry there's no solution now.",
            "Is this a good randomized algorithm?",
            "First, if there's no K passing the graph, then obviously there's no passcode color this way, so our algorithm will say no.",
            "On the other hand, if there's a case K pass, then there's some probability that it will be colored 123.",
            "OK, and this probability is exactly K to the minus K. We have K choices on each vertex and we have K vertices.",
            "So by probability K to the minus K. Any given solution will be colored van to 3K and therefore our algorithm will find this path.",
            "So if there is a solution then then the probability K to the minus K. This algorithm will find cave Pass and you could say that OK, this is not very good escape to the minus K probability is very low.",
            "But by repeating this algorithm we can boost this probability in a very simple way."
        ],
        [
            "Let's just say this useful fact that if you have a probability of success P and you repeat your algorithm 1 / P times, then the probability that it does not say yes.",
            "So in any of these 1 /, P repetitions is roughly one ovary, so roughly 38%.",
            "So if we have the success probability of K to the minus K, then."
        ],
        [
            "Dan Danner, after repeating this algorithm, K to the K times, we get a success.",
            "Probability of an ovary which is certainly or error probabilities 38.",
            "So success probability 62%, which is still still.",
            "Is this still is still or not so good, but but then we can repeat this whole thing again.",
            "A constant number of times and then we can.",
            "We can decrease the error probability to an arbitrary smaller constant by repeating the Holsinger 100 times.",
            "We can repeat the error probability of Vanover E to the 100, which is pretty good.",
            "OK, this is the idea.",
            "I just omitted advancing hard to.",
            "Hard to find this pass colored van to 3K."
        ],
        [
            "This is very, very easy to vary the exercise, so we have this vertices colored from one to K."
        ],
        [
            "Obviously, if that if there's an edge connecting non consecutive numbers, then those edges are you was less so from the point of view of finding such passes.",
            "So we can remove those."
        ],
        [
            "Look at him, OK, remove those and."
        ],
        [
            "And we can direct the remaining balance to the larger color and then all we need is a directed path from from a vertex invite."
        ],
        [
            "Van to the vertex in five.",
            "So there's a very simple polynomial time algorithm."
        ],
        [
            "Like that, and therefore we could reduce finding K path by by this randomized algorithm to finding a van 23K part colored path which is polynomial time solvable, and the success probability was K -- K to the minus K. So the running time for smaller course on probability is K title.",
            "OK times polynomial.",
            "OK, but in the beginning I promise to two to the order of K algorithm and not OK to the K algorithm so we can do this in a little."
        ],
        [
            "It's marked away VSI random colors, but we have a little bit less crazy requirement.",
            "Now we just require that the path is colorful, meaning that all the colors appear on it, but not necessarily in order, so 13452 this is a good."
        ],
        [
            "Bus.",
            "Now, obviously if there is no solution, then there's no color for solution.",
            "If there is a K fast, then what is the probability that it is colorful?",
            "There are K to the K colorings and K factorial of them are colorful, so by by plugging in Stirling approximation you get E to the minus K as the success probability, meaning that you have to repeat this."
        ],
        [
            "K to the E to the K times to have constant error probability.",
            "But now it's a little bit more difficult, hard to find the colorful path.",
            "Then there's a smart way and not so smart way of doing this.",
            "The not so smart ways to try all possible orderings.",
            "But then then we get a K factorial in the running time.",
            "The smarter ways to use dynamic."
        ],
        [
            "Darling, I don't have to go through this in detail, it is it is a nice exercise.",
            "So you introduce two to the K variables for each each vertex, meaning that with the meaning that there's a path ending and that vertex.",
            "Seeing exactly this subset of colors, you have these two to the K * N variables.",
            "You can write a simple recurrence relation hard too hard to compute these values from each other and and in total OK times polynomial time.",
            "You can find such a color proof.",
            "Passive."
        ],
        [
            "It exists so so now.",
            "Will this improve color coding?",
            "If you have error probability to the minus K and we can solve this easier problem in two to the case times and so the running time is the is the product of these two things.",
            "The product of Y2K and the product and two to the K. So it's two to the order of K. Here's about this is randomized."
        ],
        [
            "So, so how to do randomize it?",
            "And this is the only side I have been on the randomization in this talk.",
            "Most of the times it follow uses similar techniques, so the randomization is very simple.",
            "If you have the right tool at your disposal.",
            "The right tool here is the notion of K perfect family of hash functions.",
            "So that is a caper family of hash functions.",
            "It is a set of functions map giving especially colors from one to K2 N elements and the property of this function is that for any subset of K elements the family contains a. Coloring, that is that that assigns different colors to this key elements, so there's a.",
            "There's a hash function in the family that colors this subset in a colorful way.",
            "This is strange requirement, and there's a.",
            "It is known that there are there are such a perfect family of functions of small size of two to the order K time slogan size.",
            "And now, instead of going through random colorings, we simply.",
            "So instead of trying random colorings, we simply go through K perfect family of hash."
        ],
        [
            "Functions and this will be good cause because we know that if there's a solution by definition.",
            "OK, perfect family will contain at least 1 hash function that is colorful on this solution, and then the same thing works.",
            "We will find this colorful path.",
            "So you have to understand this definition, but after that it is just plugging it in and and you get a deterministic algorithm instead of a randomized algorithm."
        ],
        [
            "So now what we have is affiliated with the K pass problem to the problem of finding a colorful pass.",
            "Now we have a data.",
            "We have a deterministic reduction that creates that many instances two to the order K that slogan instances and each instance can be solved in that time.",
            "So we cannot do to the order K that Terministic algorithm.",
            "So color coding is for the simplest and most elegant example, where randomization of years for FPT algorithms, but in a sense it is already too smart.",
            "So it's a bit unnatural.",
            "Ivy are looking for this coloring, so there's the sense that there's an even more fundamental, and even even simpler examples of how randomization can appear I."
        ],
        [
            "Show you some examples, for example, in the case of bounded degree graphs.",
            "So in parameterized complexity we have like bounded degree graphs.",
            "They are usually easy and usually this can be explained by the fact that that it usually for a vertex the small neighborhood of the vertex that matters, and if you have bounded degree, there's only a bounded number of different small neighborhoods or so, so so most of the vertices are somehow equivalent, and there are even meta theorems showing that certain problems.",
            "Expressively, in a certain logical language, are FPT and but for concrete problems and bounded degree graphs you can usually find some solution, but but in my experience a randomization or gives a very elegant and very simple solution on bounded degree graphs.",
            "So let's look at this problem dance Cape Vertex subgraphs.",
            "We want to find find a set of K vertices that induce the maximum number of edges in use at least images.",
            "This program contains a special case OK click problem.",
            "So in general, for general graphs we do not expect it to be fixed by under tractable.",
            "On the other hand, for bounded degree graphs, there's a very simple randomized algorithm at the running time.",
            "Depends on on the on K, the number of vertices, and on the degree of the graph."
        ],
        [
            "Algorithm is the following.",
            "It's, uh, so this blue thing.",
            "Let's say that this blue thing is a social social media 9 vertices in using some number of edges and uniformly and independently at random, we remove every vertex with probability 1, / 2."
        ],
        [
            "Now with some probability, two to the minus K, none of the blue vertices are removed.",
            "One of the vertices of the solution is removed, so and also with probability two to the K -- K * D. None of the neighbors of the story, all of the neighbors of the solution are removed.",
            "Right, because we have K vertices in the solution, the maximum degree is D. We have K times Dean at most K times the neighbors with this probability or the neighbors of the of the solution are removed."
        ],
        [
            "So we get to reduce graph like this and removing the vertexes cannot make the problem easier, right?",
            "And because we we didn't remove any of the solution vertices, it cannot make the problem any harder, so we so we get with this probability we got an actual anti instance and in this actually it's interesting.",
            "We now have the property that the solution consists of disjoint connected components of this graph.",
            "So so so we should now consists of this component and that component.",
            "So in this region.",
            "Graph we have to find a set of connected components that containing at most K vertices, inducing at least M edges."
        ],
        [
            "So we have this connected components.",
            "Each cell number of vertices and some number of edges and we want to find a subset of them having at most K vertices and at least their matches.",
            "So what problem is this?",
            "Yes, it's our good friend Napsack.",
            "So."
        ],
        [
            "What you can do is.",
            "Is that we can express this problem as a set of items where the the weight of the items is the number of vertices in the components.",
            "The value of the items is the number of edges in in the components and the standard dynamic programming techniques.",
            "So the weights are integers and they have polynomial size, so bystander dynamic programming techniques we can solve this problem."
        ],
        [
            "Normal time, so again we have a reduction to a polynomial time solvable problem.",
            "So here the idea was that the solution is.",
            "So we can think of the solution as a witness that the problem has a yes answer and we wanted the randomization to work correctly on this list witness so it is often very, very helpful for thinking about this this way that to think of what is a good witness of a yes answer and vadouvan from randomization.",
            "So how do we want the random choices to operate on these witnesses?",
            "So to to explain this in more detail, I are to present another example.",
            "Let's see this simple problem may."
        ],
        [
            "You don't find it that natural, but it is useful for some.",
            "For recursion purposes, we want to separate a graph with K vertices in such a way that it has at least two big components.",
            "I mean, big means having at least Q vertices in some algorithms based on recursion.",
            "This is good, because then we still have a large component, which is which is smaller than the original graph, and in some cases this is helpful.",
            "And there's a very simple randomized algorithm for."
        ],
        [
            "This so this is a solution, right?",
            "Uh, set S with two big components.",
            "And again, very move each vertex with probability.",
            "Indefinitely."
        ],
        [
            "1/2 and because this is a solution and the witness of the solution is this set S and because these two components are large, they contain two large trees.",
            "And."
        ],
        [
            "Yes, and if it probably 2 to the minus K, we delete all the solution vertices and we probably two 2 -- 2 to the minus Q.",
            "We do not delete any of these Q vertices of the three with two to the 9th probability to the minus key.",
            "We do not delete any of those vertices so so so after the deletions we get to reduce graph that contains 2 big components.",
            "This and that that are that are separated from each other.",
            "So what we?"
        ],
        [
            "To do is that we look at the big components of this reduced graph, and if I and we check whether there's two big component that can be separated by K vertices in the original graph if confined to such big components separated in, that can be separated in origin graph, then clearly there's a solution and by this argument, if there's a solution in this graph with that probability, there's two big component that is easily separable and original graph.",
            "So I think this shows nicely what I was talking about that here we have a weakness of yes answer cause this thing of this separator S and 2 three is and we want random choices to happen in a certain way on this week."
        ],
        [
            "OK, so.",
            "Yeah, so so video is separation to some number of winning mastic problems."
        ],
        [
            "And I. I will move on to more advanced technique and which was introduced recently in the context of multi of the multicast problem and then later it was used for several other problems.",
            "Unfortunately I do not have time to give a full proof of this and and it would would be may be too technical and not really relevant to this talk.",
            "So what I will do is the following that I will present a statement of the technical result.",
            "You will not understand this.",
            "It will be a bit technical and bit counter intuitive, and then I will present.",
            "I will not prove this technical result.",
            "And I will present two applications of this result and then hopefully those two applications will make sense.",
            "And and then you will see why this technical result is interesting and if you are interested in approved and then you can look at the papers.",
            "So what is this technical result?"
        ],
        [
            "So first the setting is the following that we're looking at transfers or problems.",
            "What is the transfers?",
            "Also, let F be a family of subgraphs in a graph so family of objects and the transfers are is a set of vertices or set of edges such that each object each object.",
            "Contains one of the selected elements, so from each each of our our selected set hits, or each of these objects like maybe you have a set of cycles and you want a set of vertices that hits each of these cycles, you want each of the objects should have a representative in our selected set so threads are there is a fancy name.",
            "I prefer saying hitting or killing these objects that much more intuitive.",
            "And many classical problems can be formulated as transfers are problems addressed.",
            "Icat problem is just hitting all the passes from S2 T. This is another way of saying you're cutting us from the multicast problem.",
            "It's a heating order passes between the motive in the motor vehicle program we are set of terminals and we want to separate them from each other.",
            "This is nothing else than hitting all the passes between the terminals.",
            "No directed field feedback vertex set of directed feedback vertex set is hitting all the cycles or directed cycles in the graph, and this problem of graph bipartite graph by factorization or outside for transfers are which is which is removing vertices or edges to make the graph bipartite.",
            "This is nothing else than hitting all the odd cycles in the graph by vertices or edges.",
            "So we have several."
        ],
        [
            "Events in this framework.",
            "And.",
            "We need this definition so first.",
            "In our application we will have a set of terminals with some meaning.",
            "So we have some special lattices and and and and this family F will have we satisfy this requirement that they contain connected objects.",
            "OK, that's not a big requirement probably.",
            "And all of these objects intersect.",
            "So all of these objects somehow connected to T. And the figure might be misleading.",
            "Sorry, so the objects in F are not necessarily joint.",
            "You can have many.",
            "You're going to have exponential number of objects sinkiewicz as the order cycles in the graph, so.",
            "We have in this talk we always have objects are going through these terminals and then we define given a solution as we define the shadow of the solution to be those vertices that cannot be reached from the terminals.",
            "After removing this set set of."
        ],
        [
            "This is Aurora removing this set of edges, so this will be a crucial definition.",
            "The notion of shadow of a solution with respect to some set of terminals."
        ],
        [
            "OK, and then here is the technical result so.",
            "We have this notion of shadow and we have discussed condition that every object is connected and goes through T and Now what this result says is that there's an algorithm which computes a sad Z having a certain property having a certain property with some probability.",
            "So this set Z has the the probability two to the order of minus.",
            "Kate has the probability that there's a minimum F transfers all such that the shadow of the transfers are discovered by the and the and new edge of the transfers.",
            "Is contained in this, so this is the edge edge version in on directed graph, so so if there's a minimum transfers are with at most K edges, then with some probability there's a minimum transfers all such that the shadow is covered by the and no edge of this transfer is contained in Z.",
            "Some condition you at this point you usually want you should not be able to see why this is good, but let me point out something very, very strange.",
            "So this algorithm doesn't know about this set F, so it says that it computes a set Z.",
            "Side that with some probability something happens, but this is true for every F. So this algorithm somehow captures capture something that is common in all these transfers are problems.",
            "It doesn't have to know F which is good 'cause there would be issues.",
            "How to represent F, but this is not an issue because it doesn't know F. So think of this algorithm as as computing a random set that hopefully has has some probability of having a certain relation with an optimum solution.",
            "OK, now you can forget about this."
        ],
        [
            "Few minutes I will start explaining the first application.",
            "The first application is a clustering problem.",
            "Clustering usually means that you want to partition objects according to certain requirements you want.",
            "Typically you add objects that are similar to be close together and you have some some bound, some constraints on the number of size or clusters and so on.",
            "In this particular problem we have the following two constraints.",
            "We don't have any bound on the number of.",
            "Clusters that we want to partition into, but but each cluster must must be so small, should contain atmosphere vertices and there should be at most Q edges going out.",
            "And then this is overdefined problem.",
            "And we show that this problem can be solved in two to the order of Q times and so it's a FPT parameterized vacuum.",
            "So so if you if you'll only a few edges going out, but maybe the cluster size is a large number then then we have such an algorithm.",
            "I just mentioned that there is a tool to the order of P algorithm that it uses a different technique.",
            "So P is the size of the cluster and Q is the number of edges that can go out."
        ],
        [
            "And let's say that the cluster is good if it has size at most B and at most square Q edges are going out.",
            "And now a trivia necessary condition is that every vertex should be contained in at least one good cluster.",
            "Otherwise there's no solution, but."
        ],
        [
            "In fact, this is a sufficient condition as well.",
            "We show in the next slide that if every vertex is contained in a good cluster, then there's a partition into good class 'cause this is not obvious because there's good clusters can overlap, but it is true that there's a.",
            "There's a good cluster."
        ],
        [
            "Why is this true?",
            "So every vertex is contained in a good cluster.",
            "Let's find a collection of good clusters covering all the vertices such that the total size of this collection is at most as soon as possible.",
            "Now it can happen that two clusters in."
        ],
        [
            "Overlap, but we use this this modularity quality that the the edges leaving X plus the edges leaving Y is that is larger or equal than the edges leaving X -- y and edges living by minus X.",
            "So either the edges leaving X exactly the edges leaving X -- Y or the other way around now."
        ],
        [
            "The number of edges leaving X is larger than equal number of edges, leaving X -- Y.",
            "Then we carry plus X with X -- Y.",
            "It is still a good cluster because it has not more edges going out an smaller size and then every vertex is still covered by a good cluster and.",
            "And it."
        ],
        [
            "The decrease the size of the color collection a similarly if the other equality holds them Democratic less.",
            "Why we divide minus X and this proves this fact that if every vertex is contained in a good cluster, then there's a partition into good clusters."
        ],
        [
            "OK, So what we have to do is to check whether a given vertex is in a good cluster.",
            "And this is trivial to do in enter the queue time because you just guess all the Q edges going out and remove them.",
            "But we want to do it in two to the order of cute."
        ],
        [
            "And this is a strange way of looking at this problem, but this is actually transfers are problem.",
            "So what we what we have to hit with?",
            "We want to hit with Q edges or the trees of size at least be going through V because we want to reduce the component of the size P. So we want to hit all the trees going through V and and having more than P vertice is.",
            "So this is a translator."
        ],
        [
            "Problem which is good because we can we can.",
            "We can involve this theorem.",
            "So in our setting now we have a single Terminal V. Or the bad objects are going through the becausw order that objects are the trees of size.",
            "Maybe more than P versus 3 is having more than PvP vertices, and this algorithm computes asset Z such that with this probability there's an optimum solution as with these two properties.",
            "Right?",
            "So.",
            "From now on we can assume that this event indeed happens and we have this set Z and there exists an optimum solution whose shadow is covered by the a new edge of this solution is contained in Z."
        ],
        [
            "OK, so we have this set Z.",
            "It induces some number of components and this is the set outside Z.",
            "And then we have these two properties and I would like to ask you to sink a little bit about this so that can be the edges of the solution.",
            "That is this cluster that we are looking for.",
            "So we have these two properties that the shadow is covered by Z and new edge of S is contained in Z.",
            "So can we have an edge of the solution up there?",
            "No, because no edge of the solution is contained in Z, so there's no edges up there.",
            "And can we have an edge here?",
            "Now we know that the shadow of S is covered by Z, so this is not easy, which means that that none of the two endpoints is in the shadow, so so so both endpoints of this edge is reachable from V. So what was the point of removing this?",
            "It doesn't decrease the cluster size, so there cannot be any edge here and cannot be any edge of the solution there, so."
        ],
        [
            "Order or the edges of the solution are here.",
            "We can we can.",
            "We can just remove these edges.",
            "Connecting the central talk to those satellite components.",
            "So the cluster that we are looking for actually consists of this main part and some of the components out there, so all the other choice that we have is which components to select out there.",
            "So we want we do not want to include too many components up there because that increases the size of the cluster, but omitting a component means that we have to delete those edges so we don't want to make too many components.",
            "So, So what problem is this?",
            "And this is again our good friend, knapsack."
        ],
        [
            "Becaused because we have we have the same two type of constraints.",
            "We have a size constraint.",
            "We do not want to include too many.",
            "We do not want to include too many components into the central part and we do not want to omit too many components.",
            "Becausw omitting someone cost us some edges.",
            "So so after this reduction after computing this set.",
            "V. Viadrina scenario that can be reduced to the polynomial time solvable knapsack."
        ],
        [
            "All done.",
            "And therefore if we get this algorithm that has success, probability two to the order to the order of Minos order of K and and then we reduce it to a column at absolute problem.",
            "I I I will show you another application of this.",
            "Maybe maybe then you can.",
            "You can see how this works, but this time in the case of in the context of directed graphs.",
            "So as I said."
        ],
        [
            "Earlier the motivate cat problem.",
            "Is to break all the terminals from each other in a undirected or directed graph.",
            "From the fundamental complexity point of view, the interactive version is fairly well understood.",
            "The latest algorithm solves it in two to the K times a polynomial, but but the, but it seems that the directed version behaves very differently and the.",
            "Techniques working for undirected graph doesn't work for directed graphs, but.",
            "But this new technique that I'm presenting now can be used for directed graphs and we.",
            "We will see how.",
            "So obviously this is a.",
            "This is a transversal problem.",
            "Now the family is the set of directives passes going from one terminal to some other terminal."
        ],
        [
            "And if he had a notion of shadow before, but we need some other notion because we are in a directed graph, there are different ways of interpreting this.",
            "So now the shadow.",
            "Another setting is the following.",
            "These are the terminals.",
            "This is a solution.",
            "These are the strongly connected components of the terminals.",
            "And now this is the shadow.",
            "The shadow consists of those vertices that cannot be reached from any of the terminals in the solution, and those vertices from which no vertex of the terminal, no terminal can be reached.",
            "And and of course there could be some intersection that cannot be reached from the terminals and they are.",
            "And no terminal is reachable from here.",
            "This is our notion of shadow Now, so we consider both of these things as shadows.",
            "Is that clear?"
        ],
        [
            "OK, and I hear is the directed version that we will use so we have this definition of shadow and we impose the following condition on the objects.",
            "This condition is that.",
            "So it sounds a bit technical, but every every vertex of the object from every vertex of the object you can go in the object and reach a terminal, and every of every vertex of the object is reachable from some terminal.",
            "This is this is trivially true if the if the objects are passes between the terminals.",
            "Then obviously every vertex is on a path between two terminals.",
            "And nothing but understatement is very similar.",
            "We can compute a set Z such that with some probability the following happens.",
            "There's an optimum optimum.",
            "F transfers are such that the shadow is covered by this set Z and the solution is disjoint.",
            "From this set there.",
            "And again, this algorithm doesn't have to know F in any way.",
            "Yes, so again you guys think of it as some algorithm producing a random set and and from now on we can assume that this random set has the probability property that it is disjoint from the solution and it covers the shadow of the solution."
        ],
        [
            "So because because this set is disjoint from the solution somehow it nothing interesting happens in this set, right?",
            "Because we don't do not break everything anything there.",
            "So so we would like to remove this set from the problem because nothing is happening there.",
            "But of course removing this set can make the problem much easier.",
            "This is not a good idea, but in order to compensate."
        ],
        [
            "For removing this set whenever there is a fast growing inside this set from A to B.",
            "Area."
        ],
        [
            "We will add the directed path from A to B.",
            "So we do this from every pair of vertices.",
            "If there's a path going inside the between the two vertices, we just added direct edge because we know that no vertex will be deleted here anyway, so we can, and this doesn't change the problem and after that."
        ],
        [
            "We can remove this said Z.",
            "And the good thing is that.",
            "That this doesn't make the problem an easier, and it doesn't make the problem any harder becausw, because by assumption we had a solution disjoint from Z, so this will not destroy this solution.",
            "But now this solution will be shadow last.",
            "It doesn't have a shadow because the shadow of this solution was covered by Z.",
            "So after removing this this set this solution doesn't have a shadow.",
            "Alright, so all we have to look for now is a shadow lasso solution."
        ],
        [
            "OK, so so how does this show less social look like?",
            "OK, so these are some interactive components and this is the solution.",
            "This is the shadow but."
        ],
        [
            "What happens if there is no shadow, then, then, then what is this problem that we have to solve?",
            "What is this program?",
            "Yes, it's not a knapsack, but this time this is the undirected multiway cut problem because now we can observe that.",
            "This solution is a motivator and motivate cut in the underlying undirected graph, 'cause these are strongly connected components that cannot be an edge between them.",
            "'cause then there would be a pass from Evanta Tito.",
            "So the issue is that originally this was not true.",
            "This solution is not not necessarily motivate.",
            "Cutting the underlying undirected graph becausw to components can be connected somehow like this.",
            "But but here we have no such issue.",
            "There are no edges like that.",
            "All these vertices are deleted, so so this is actually an under a multi.",
            "They cut in the underlying undirected graph, so we can we can."
        ],
        [
            "We can just stay."
        ],
        [
            "Involve this previous result on undirected, motivate, cut and reduce the problem in a randomized way to do this.",
            "Problem then that we understood earlier.",
            "And.",
            "Yes, so and if you have the statement of this, this technique of what does it mean to compute such a sad Z, then the proof is actually very very simple.",
            "But you have to understand what this statement means."
        ],
        [
            "And.",
            "My final example is a very nice and very recent technique I just.",
            "Yeah, so the good thing is that this is this is a very nice technique that is applicable for a large number of problems.",
            "And it really changed the way how we, how we look at algorithms on three decompositions.",
            "But the bad thing is that I I don't want to introduce three this now.",
            "I don't want to talk about dynamic programming is done on trivet.",
            "So I apologize for that.",
            "So true, it's a bit technical topic and I strongly believe that attributes shouldn't be defined before a coffee break or very early in the morning.",
            "So if you know it really is, then you will like this.",
            "If you don't know trivets then then you will see a nice reduction and you have.",
            "Take my word for it, for that.",
            "This is indeed a meaningful reduction, and indeed the problem we are reducing two is in some sense better problem that the program that we started with.",
            "So a classical textbook approach to finding a Hamiltonian cycle on a graph of bounded tributes gives you an algorithm with running time K to K, or which is the same as saying 2 to the order of Cal OK. 'cause if you want if you have a separator of size K, you have to remember all possible ways the vertices in that separator separator are matched together are matched by partial solutions and there are.",
            "Data replicated locate different ways of this, so you have to remember all these rates and and and and.",
            "This gives this running time and it seems that this is the right running time.",
            "It seemed this algorithm since so so basically so fundamental that it seems that there's nothing more that can be done, and in fact there are similar problems where we have we have lower bounds showing that under some complexity assumption you need K to the Kate.",
            "I'm on a 3D composition of which K and I saw that this is true also for Hamiltonian cycle, but but it turns out that this is not true for Hamiltonian cycle, which was a big surprise that in that despite the fact that the obvious approach shows that.",
            "That probably you have to remember that many possibilities.",
            "There is a randomized algorithm with running time 4 today.",
            "OK, so single exponential, not two to the K log K, so there's another portal.",
            "OK times polynomial.",
            "And and defenders and.",
            "In the rest of my talk, I just show you how Hamiltonian cycle can can be reduced to something gas, which and that something else can be solved in this time."
        ],
        [
            "The main technical tool that is under.",
            "Yes, and I think that from this."
        ],
        [
            "Replacing three of them are here, roughly or probably."
        ],
        [
            "OK, so this is the technical result that we are using and I the so called isolation lemma.",
            "So let we have a universe you and we have a subset of family of subsets F. And we assign a random weights to elements of the universe between one and.",
            "And now we are interested in the probability of.",
            "Of having a unique minimum weight element.",
            "So depending on how we assign weights, there will be one or more minimum vital minimum weight.",
            "The subset in this family but but but if N is large then we have a very good chance that there's a unique minimumweight element.",
            "So if N is larger than you or larger than.",
            "Some polynomial, a few, then then then we have a good chance of of of having."
        ],
        [
            "Remove a talent in our setting.",
            "the University will be the set of edges of the graph and this family will be the family of all Hamiltonian cycles.",
            "There's an exponential number of million cycles.",
            "Obviously we don't know them, but this, but you don't have to know F for this isolation lab network.",
            "OK, so this Satanta some some polynomially large number and this ensures that from now on we can assume that there's a.",
            "There's a unique minimumweight Hamiltonian, so if there's a Hamiltonian cycle then there's a unique minimum weight Hamiltonian cycle.",
            "And also because these weights are polynomial if we can guess this minimum weight.",
            "So from now on we are looking for a Hamiltonian cycle of wait, wait exactly, see under the additional assumption that there is a unique Hamiltonian cycle of weight exactly, see.",
            "OK, and."
        ],
        [
            "How do we do that?",
            "What do we do so instead of looking for Hamiltonian cycles, if we look at cycle covers so cycle cover is a sub graph having a degree exactly 2 on each of the vertices, so it is a set of cycles.",
            "Sort of more cycles.",
            "Hamiltonian cycle is obvious cycle cover."
        ],
        [
            "As bad, but about the cycle cover, you can have more."
        ],
        [
            "Online components so so necessary."
        ],
        [
            "Cycle.",
            "And also, we're not just looking at cycles."
        ],
        [
            "Reverse, but we are looking at color cycle cover so colored cycle cover each color each cycle is.",
            "Assigned to either the color of white or black.",
            "Or the other way to look at this is that each vertex has a color and edges and vertices in the cycle cover have the same color.",
            "Now of course, the number of colored cycle versus larger than the number of cycle covers, but we know that."
        ],
        [
            "So each cycle cover gives rise to some number of color cycle covers, but."
        ],
        [
            "Obviously, each cycle cover with K components gives rise to two to the K colored cycle covers, because for each cycle you have a choice between two different colors.",
            "Another.",
            "The good thing is that so this means that the Hamiltonian cycle gives rise to."
        ],
        [
            "Two different colored cycle covers.",
            "Cycle cover with two components give rise to four different colored cycle covers.",
            "Cycle cover with three components gives that gives rise to 8 different colored cycle covers.",
            "So if there's no no Hamiltonian cycle of this weight, then the number of weight, see color cycle covers is divisible by forward because every cycle cover that is not a Hamiltonian cycle gives rise to some number of color cycle covers who's number is divisible by 4.",
            "Because they have at least two components, so two to the K is divisible by 4.",
            "On the other hand, if there's a unique batesia Hamiltonian cycle, then the number of such color cycle covers is not divisible by 4 cause because they have every cycle cover having more than one component gives rise to some number of which is divisible to four and this unique Hamiltonian cycle will give rise to exactly 2.",
            "Color cycle covers.",
            "So."
        ],
        [
            "So what we are doing is that."
        ],
        [
            "These are the steps of the algorithm.",
            "First we assign random weights to the edges of the graph.",
            "Then if there's a Hamiltonian cycle done with some good probability, there's a unique Hamiltonian cycle with minimum weight.",
            "We try all possible weights and then we count the number of colored cycle covers with that weight.",
            "And if the answer is not divisible by 4, then we say that yes, there is a Hamiltonian cycle.",
            "And OK, this is nice, but the part that you do not see is why why this problem is better than finding a Hamiltonian cycle.",
            "It looks much more impressive like this, accounting it's weighted.",
            "It's colored, but somehow Hamiltonian cycle is kind of a global problem that it had.",
            "You cannot really verify a Hamiltonian cycle locali because you really have to see whether it it gives a single cycle and not two cycles.",
            "On the other hand, this cycle cover thing.",
            "It's a completely local problem.",
            "What you have to check is that each vertex has exactly degree two.",
            "Each vertex has a color that is the same as its neighbor and and therefore in a.",
            "Is the part that you will not understand if you don't understand treated so.",
            "So in a dynamic programming on a tree decomposition, there's no state space in each bag will be 4 to the K because you just have to remember the degrees of the vertices and the colors of the vertices as opposed to being K to The Cave when you had to leave.",
            "Remember a matching of these vertices."
        ],
        [
            "So with this technique we have a.",
            "We have a randomized algorithm, but not unlikely to previous examples.",
            "We have a very good probability of success, so the so the exponential factor is not coming from the small success probability, but it comes from the from solving this easier problem that requires 4 to the K times a polynomial and you have to take my word for it that this is indeed an easier problem."
        ],
        [
            "And OK, so this is the end of my talk.",
            "I presented some some examples showing randomized algorithms for parameters programs.",
            "I hope you found the malagon 'cause I think they are quite elegant solutions for many of these problems and I mentioned it was that the randomization is sometimes possible by by plugging in standard techniques like caper factor.",
            "Hash functions, sometimes it's not known.",
            "And yes, and this is a crucial difference, I think that you have to think about randomization with different ways that implement polynomial time.",
            "Algorithms that a small success probability is still good for us becausw becausw exponential in K is good for us now, so so small success probability as a function of K is perfectly good for us.",
            "And this is the."
        ],
        [
            "The picture that you have seen repeatedly that we took some problem.",
            "We applied some randomized magic and then within a clean way we could reduce it to an easier problem that we could solve by some other techniques."
        ],
        [
            "OK, thanks very much."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Randomized algorithm is an algorithm that is not fully deterministic, but makes some random choices during its execution, so the result can be different on different runs, but it has a good bound on the probability of producing a correct answer, so it makes random choices, but we have a theoretical bound on that or probability and the motivation is that if we have a very good error probability then this is almost as good as having a fully deterministic algorithm becausw.",
                    "label": 0
                },
                {
                    "sent": "Because if there are probabilities 10 to the minus 100, the probability of your computer is being destroyed by some natural disaster is probably much higher than that, so there's no such thing as a fully deterministic algorithm on Earth.",
                    "label": 0
                },
                {
                    "sent": "And the advantage of randomized algorithms is that sometimes they are conceptually much simpler, much more elegant, and in some cases where maybe they are even more efficient.",
                    "label": 0
                },
                {
                    "sent": "So it is definitely worth studying them.",
                    "label": 0
                },
                {
                    "sent": "And also, if you're if you only care about atomistic algorithms, then you can look at a randomized algorithms.",
                    "label": 0
                },
                {
                    "sent": "The first step it over to domestic algorithms, and in some cases there are techniques to the randomized randomized algorithm or source or randomized.",
                    "label": 0
                },
                {
                    "sent": "Go down, give you some idea of finding a determine Istic algorithm.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So in this talk I will talk about.",
                    "label": 0
                },
                {
                    "sent": "Randomized algorithms or mattress problems so important as complexity.",
                    "label": 0
                },
                {
                    "sent": "The central notion is fixed parameter tractability.",
                    "label": 0
                },
                {
                    "sent": "We say that the problem that has some parameter K in the input, let's say the size of the social we are looking for or some measure of complexity of the input.",
                    "label": 0
                },
                {
                    "sent": "We say that such a problem is fixed parameter tractable.",
                    "label": 0
                },
                {
                    "sent": "If there's a problem solving it at F of K times the polynomial where F is an arbitrary function, possibly exponential function of K. So this means that the running time is polynomial, but there there's some nasty possible.",
                    "label": 0
                },
                {
                    "sent": "Initial factor that depends only on this parameter K and doesn't depend on the size of the input.",
                    "label": 0
                },
                {
                    "sent": "In my talk, I will present examples of randomized algorithm, randomized fixed, smarter tractability results.",
                    "label": 0
                },
                {
                    "sent": "I will start with some very simple, very classical textbook examples and then I will move on to some more recent at more advanced techniques.",
                    "label": 0
                },
                {
                    "sent": "But before that I would like to make a high level comment on how randomization is different in the context of polynomial time algorithms and in the context of this parameter, tractability.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So important time randomized algorithms you use randomization to find something very boring.",
                    "label": 0
                },
                {
                    "sent": "To believe that on average things are good and we just use randomization to find something average to find something, unproblematic to sign, find something that doesn't have a special situation.",
                    "label": 0
                },
                {
                    "sent": "On the other hand, maybe this is not true for every randomized FPT algorithm, but for many of the randomized FPT algorithms we use randomization to find something very special.",
                    "label": 0
                },
                {
                    "sent": "And violin appointment time randomized algorithms.",
                    "label": 0
                },
                {
                    "sent": "We want that or probability typically to be a constant or at least or polynomial small in randomized FPT algorithms we usually want or sometimes even the error probability to Veladero probability to exponentially small.",
                    "label": 0
                },
                {
                    "sent": "That's still good for us 'cause because we allow the running time to depend exponentially on this function on this parameter K. So we randomized FPT algorithms.",
                    "label": 0
                },
                {
                    "sent": "We often use randomization to.",
                    "label": 0
                },
                {
                    "sent": "To satisfy some about the number of constraints, but we use randomization because we do not know before hand this constraints, because these constraints are somehow related to the solution, But by randomization we do not have to know these constraints beforehand.",
                    "label": 0
                },
                {
                    "sent": "Think of this distinction as two different dating strategies.",
                    "label": 0
                },
                {
                    "sent": "So the first strategy is to be a nice guy to be as unproblematic as mainstream as normal as possible, hoping that this maximizes your chances of finding a partner.",
                    "label": 0
                },
                {
                    "sent": "On the other hand, the second strategy is to be extra vagant do crazy things, paint your head hair pink and have tattoos and whatever, and then hope that by the law of large numbers there will be someone who is turned on by exactly this.",
                    "label": 0
                },
                {
                    "sent": "Raisin and in this talk we will do precisely that, and it turns out to be a very successful strategy, at least in the context of parameterized algorithms.",
                    "label": 0
                },
                {
                    "sent": "So we try to find solutions satisfying some crazy constraints, and it turns out that we will have a relatively good probability of finding such solutions.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "In a randomization are impractical and FPT.",
                    "label": 0
                },
                {
                    "sent": "Randomization.",
                    "label": 0
                },
                {
                    "sent": "There are two main source of of the two main ways.",
                    "label": 0
                },
                {
                    "sent": "Randomization appears.",
                    "label": 0
                },
                {
                    "sent": "The first is by formulating.",
                    "label": 0
                },
                {
                    "sent": "The problem is as some algebraic problem and then using algebraic techniques.",
                    "label": 0
                },
                {
                    "sent": "For example research, word searches palama and I will not talk anything about this.",
                    "label": 0
                },
                {
                    "sent": "But in undress virtual invited talk on Friday you can hear more about this so please attend at all.",
                    "label": 0
                },
                {
                    "sent": "In this talk, we will see only put your computer techniques where we are finding randomly some subset.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, so this is the picture that you will see over and over again in this talk.",
                    "label": 1
                },
                {
                    "sent": "And I mean this is the picture that I hope you will take home from this talk that we use randomization as a reduction.",
                    "label": 0
                },
                {
                    "sent": "We have some problem that we want to solve problem A.",
                    "label": 0
                },
                {
                    "sent": "We do some randomized magic and then after that we have to solve some other problem but that other problem is much easier.",
                    "label": 0
                },
                {
                    "sent": "So this is not true for every randomized algorithms.",
                    "label": 0
                },
                {
                    "sent": "But in for the randomized algorithm that I presented today, they will be all of.",
                    "label": 0
                },
                {
                    "sent": "Or more reduction reduce exam some interesting problem to some problems that are matches here.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "I start with the.",
                    "label": 0
                },
                {
                    "sent": "Video with the most classical random randomized example for parameterized algorithms.",
                    "label": 0
                },
                {
                    "sent": "OK pass problem, which is which is given a graph G and then integer K. We gotta find a pass any pass.",
                    "label": 0
                },
                {
                    "sent": "Any simple path of length exactly K?",
                    "label": 0
                },
                {
                    "sent": "This is a this problem is NP hard as it contains a Hamiltonian path problem but but we hope that if for small values of K we might have a more efficient solution.",
                    "label": 0
                },
                {
                    "sent": "So you can obviously do this in entered OK, but we want to do this in.",
                    "label": 1
                },
                {
                    "sent": "F of K data times some polynomial and Ann and there are several techniques for doing this, But the first technique where this F of cave was just a single exponential is 2 to the K, not K to the K or not 2 to the two to the care.",
                    "label": 0
                },
                {
                    "sent": "But this is just two to the order of K. The first algorithm to reach this trying time is due to allow user and speak using the color coding method and you saying that.",
                    "label": 0
                },
                {
                    "sent": "At valid, KK is smaller than in a big graph.",
                    "label": 0
                },
                {
                    "sent": "Probably it's easy to find some path of length K, But this is not true.",
                    "label": 0
                },
                {
                    "sent": "This is a really challenging problem, so no surprise that it took so many smart people to figure out a solution and actually it was posed by Papadimitriou.",
                    "label": 0
                },
                {
                    "sent": "Sandy anarchist as an open question.",
                    "label": 0
                },
                {
                    "sent": "Whether you can find a path of length slogan in polynomial time and this was the 1st result answering that.",
                    "label": 0
                },
                {
                    "sent": "So what is this color coding technique?",
                    "label": 0
                },
                {
                    "sent": "It's very.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Sample.",
                    "label": 0
                },
                {
                    "sent": "So here is the graph and the assign random.",
                    "label": 0
                },
                {
                    "sent": "Definitely we assign random colors from one to K2.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Services and then we make a crazy requirement.",
                    "label": 0
                },
                {
                    "sent": "We require that the path.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We are looking for discolored 12345.",
                    "label": 0
                },
                {
                    "sent": "OK, now if we find such a path then then then that's a good solution and we say yes.",
                    "label": 0
                },
                {
                    "sent": "And if we don't find such a path, we say that no, sorry there's no solution now.",
                    "label": 0
                },
                {
                    "sent": "Is this a good randomized algorithm?",
                    "label": 0
                },
                {
                    "sent": "First, if there's no K passing the graph, then obviously there's no passcode color this way, so our algorithm will say no.",
                    "label": 0
                },
                {
                    "sent": "On the other hand, if there's a case K pass, then there's some probability that it will be colored 123.",
                    "label": 0
                },
                {
                    "sent": "OK, and this probability is exactly K to the minus K. We have K choices on each vertex and we have K vertices.",
                    "label": 0
                },
                {
                    "sent": "So by probability K to the minus K. Any given solution will be colored van to 3K and therefore our algorithm will find this path.",
                    "label": 0
                },
                {
                    "sent": "So if there is a solution then then the probability K to the minus K. This algorithm will find cave Pass and you could say that OK, this is not very good escape to the minus K probability is very low.",
                    "label": 0
                },
                {
                    "sent": "But by repeating this algorithm we can boost this probability in a very simple way.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Let's just say this useful fact that if you have a probability of success P and you repeat your algorithm 1 / P times, then the probability that it does not say yes.",
                    "label": 0
                },
                {
                    "sent": "So in any of these 1 /, P repetitions is roughly one ovary, so roughly 38%.",
                    "label": 0
                },
                {
                    "sent": "So if we have the success probability of K to the minus K, then.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Dan Danner, after repeating this algorithm, K to the K times, we get a success.",
                    "label": 0
                },
                {
                    "sent": "Probability of an ovary which is certainly or error probabilities 38.",
                    "label": 0
                },
                {
                    "sent": "So success probability 62%, which is still still.",
                    "label": 0
                },
                {
                    "sent": "Is this still is still or not so good, but but then we can repeat this whole thing again.",
                    "label": 0
                },
                {
                    "sent": "A constant number of times and then we can.",
                    "label": 0
                },
                {
                    "sent": "We can decrease the error probability to an arbitrary smaller constant by repeating the Holsinger 100 times.",
                    "label": 0
                },
                {
                    "sent": "We can repeat the error probability of Vanover E to the 100, which is pretty good.",
                    "label": 1
                },
                {
                    "sent": "OK, this is the idea.",
                    "label": 0
                },
                {
                    "sent": "I just omitted advancing hard to.",
                    "label": 0
                },
                {
                    "sent": "Hard to find this pass colored van to 3K.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This is very, very easy to vary the exercise, so we have this vertices colored from one to K.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Obviously, if that if there's an edge connecting non consecutive numbers, then those edges are you was less so from the point of view of finding such passes.",
                    "label": 0
                },
                {
                    "sent": "So we can remove those.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Look at him, OK, remove those and.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And we can direct the remaining balance to the larger color and then all we need is a directed path from from a vertex invite.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Van to the vertex in five.",
                    "label": 0
                },
                {
                    "sent": "So there's a very simple polynomial time algorithm.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Like that, and therefore we could reduce finding K path by by this randomized algorithm to finding a van 23K part colored path which is polynomial time solvable, and the success probability was K -- K to the minus K. So the running time for smaller course on probability is K title.",
                    "label": 0
                },
                {
                    "sent": "OK times polynomial.",
                    "label": 0
                },
                {
                    "sent": "OK, but in the beginning I promise to two to the order of K algorithm and not OK to the K algorithm so we can do this in a little.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "It's marked away VSI random colors, but we have a little bit less crazy requirement.",
                    "label": 0
                },
                {
                    "sent": "Now we just require that the path is colorful, meaning that all the colors appear on it, but not necessarily in order, so 13452 this is a good.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Bus.",
                    "label": 0
                },
                {
                    "sent": "Now, obviously if there is no solution, then there's no color for solution.",
                    "label": 0
                },
                {
                    "sent": "If there is a K fast, then what is the probability that it is colorful?",
                    "label": 1
                },
                {
                    "sent": "There are K to the K colorings and K factorial of them are colorful, so by by plugging in Stirling approximation you get E to the minus K as the success probability, meaning that you have to repeat this.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "K to the E to the K times to have constant error probability.",
                    "label": 0
                },
                {
                    "sent": "But now it's a little bit more difficult, hard to find the colorful path.",
                    "label": 0
                },
                {
                    "sent": "Then there's a smart way and not so smart way of doing this.",
                    "label": 0
                },
                {
                    "sent": "The not so smart ways to try all possible orderings.",
                    "label": 0
                },
                {
                    "sent": "But then then we get a K factorial in the running time.",
                    "label": 0
                },
                {
                    "sent": "The smarter ways to use dynamic.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Darling, I don't have to go through this in detail, it is it is a nice exercise.",
                    "label": 0
                },
                {
                    "sent": "So you introduce two to the K variables for each each vertex, meaning that with the meaning that there's a path ending and that vertex.",
                    "label": 0
                },
                {
                    "sent": "Seeing exactly this subset of colors, you have these two to the K * N variables.",
                    "label": 0
                },
                {
                    "sent": "You can write a simple recurrence relation hard too hard to compute these values from each other and and in total OK times polynomial time.",
                    "label": 0
                },
                {
                    "sent": "You can find such a color proof.",
                    "label": 0
                },
                {
                    "sent": "Passive.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "It exists so so now.",
                    "label": 0
                },
                {
                    "sent": "Will this improve color coding?",
                    "label": 0
                },
                {
                    "sent": "If you have error probability to the minus K and we can solve this easier problem in two to the case times and so the running time is the is the product of these two things.",
                    "label": 0
                },
                {
                    "sent": "The product of Y2K and the product and two to the K. So it's two to the order of K. Here's about this is randomized.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So, so how to do randomize it?",
                    "label": 0
                },
                {
                    "sent": "And this is the only side I have been on the randomization in this talk.",
                    "label": 0
                },
                {
                    "sent": "Most of the times it follow uses similar techniques, so the randomization is very simple.",
                    "label": 0
                },
                {
                    "sent": "If you have the right tool at your disposal.",
                    "label": 0
                },
                {
                    "sent": "The right tool here is the notion of K perfect family of hash functions.",
                    "label": 0
                },
                {
                    "sent": "So that is a caper family of hash functions.",
                    "label": 0
                },
                {
                    "sent": "It is a set of functions map giving especially colors from one to K2 N elements and the property of this function is that for any subset of K elements the family contains a. Coloring, that is that that assigns different colors to this key elements, so there's a.",
                    "label": 0
                },
                {
                    "sent": "There's a hash function in the family that colors this subset in a colorful way.",
                    "label": 1
                },
                {
                    "sent": "This is strange requirement, and there's a.",
                    "label": 0
                },
                {
                    "sent": "It is known that there are there are such a perfect family of functions of small size of two to the order K time slogan size.",
                    "label": 0
                },
                {
                    "sent": "And now, instead of going through random colorings, we simply.",
                    "label": 0
                },
                {
                    "sent": "So instead of trying random colorings, we simply go through K perfect family of hash.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Functions and this will be good cause because we know that if there's a solution by definition.",
                    "label": 0
                },
                {
                    "sent": "OK, perfect family will contain at least 1 hash function that is colorful on this solution, and then the same thing works.",
                    "label": 0
                },
                {
                    "sent": "We will find this colorful path.",
                    "label": 0
                },
                {
                    "sent": "So you have to understand this definition, but after that it is just plugging it in and and you get a deterministic algorithm instead of a randomized algorithm.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So now what we have is affiliated with the K pass problem to the problem of finding a colorful pass.",
                    "label": 0
                },
                {
                    "sent": "Now we have a data.",
                    "label": 0
                },
                {
                    "sent": "We have a deterministic reduction that creates that many instances two to the order K that slogan instances and each instance can be solved in that time.",
                    "label": 0
                },
                {
                    "sent": "So we cannot do to the order K that Terministic algorithm.",
                    "label": 0
                },
                {
                    "sent": "So color coding is for the simplest and most elegant example, where randomization of years for FPT algorithms, but in a sense it is already too smart.",
                    "label": 0
                },
                {
                    "sent": "So it's a bit unnatural.",
                    "label": 0
                },
                {
                    "sent": "Ivy are looking for this coloring, so there's the sense that there's an even more fundamental, and even even simpler examples of how randomization can appear I.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Show you some examples, for example, in the case of bounded degree graphs.",
                    "label": 0
                },
                {
                    "sent": "So in parameterized complexity we have like bounded degree graphs.",
                    "label": 0
                },
                {
                    "sent": "They are usually easy and usually this can be explained by the fact that that it usually for a vertex the small neighborhood of the vertex that matters, and if you have bounded degree, there's only a bounded number of different small neighborhoods or so, so so most of the vertices are somehow equivalent, and there are even meta theorems showing that certain problems.",
                    "label": 0
                },
                {
                    "sent": "Expressively, in a certain logical language, are FPT and but for concrete problems and bounded degree graphs you can usually find some solution, but but in my experience a randomization or gives a very elegant and very simple solution on bounded degree graphs.",
                    "label": 0
                },
                {
                    "sent": "So let's look at this problem dance Cape Vertex subgraphs.",
                    "label": 0
                },
                {
                    "sent": "We want to find find a set of K vertices that induce the maximum number of edges in use at least images.",
                    "label": 0
                },
                {
                    "sent": "This program contains a special case OK click problem.",
                    "label": 0
                },
                {
                    "sent": "So in general, for general graphs we do not expect it to be fixed by under tractable.",
                    "label": 0
                },
                {
                    "sent": "On the other hand, for bounded degree graphs, there's a very simple randomized algorithm at the running time.",
                    "label": 0
                },
                {
                    "sent": "Depends on on the on K, the number of vertices, and on the degree of the graph.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Algorithm is the following.",
                    "label": 0
                },
                {
                    "sent": "It's, uh, so this blue thing.",
                    "label": 0
                },
                {
                    "sent": "Let's say that this blue thing is a social social media 9 vertices in using some number of edges and uniformly and independently at random, we remove every vertex with probability 1, / 2.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Now with some probability, two to the minus K, none of the blue vertices are removed.",
                    "label": 0
                },
                {
                    "sent": "One of the vertices of the solution is removed, so and also with probability two to the K -- K * D. None of the neighbors of the story, all of the neighbors of the solution are removed.",
                    "label": 0
                },
                {
                    "sent": "Right, because we have K vertices in the solution, the maximum degree is D. We have K times Dean at most K times the neighbors with this probability or the neighbors of the of the solution are removed.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So we get to reduce graph like this and removing the vertexes cannot make the problem easier, right?",
                    "label": 0
                },
                {
                    "sent": "And because we we didn't remove any of the solution vertices, it cannot make the problem any harder, so we so we get with this probability we got an actual anti instance and in this actually it's interesting.",
                    "label": 0
                },
                {
                    "sent": "We now have the property that the solution consists of disjoint connected components of this graph.",
                    "label": 0
                },
                {
                    "sent": "So so so we should now consists of this component and that component.",
                    "label": 0
                },
                {
                    "sent": "So in this region.",
                    "label": 0
                },
                {
                    "sent": "Graph we have to find a set of connected components that containing at most K vertices, inducing at least M edges.",
                    "label": 1
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So we have this connected components.",
                    "label": 1
                },
                {
                    "sent": "Each cell number of vertices and some number of edges and we want to find a subset of them having at most K vertices and at least their matches.",
                    "label": 0
                },
                {
                    "sent": "So what problem is this?",
                    "label": 0
                },
                {
                    "sent": "Yes, it's our good friend Napsack.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "What you can do is.",
                    "label": 0
                },
                {
                    "sent": "Is that we can express this problem as a set of items where the the weight of the items is the number of vertices in the components.",
                    "label": 0
                },
                {
                    "sent": "The value of the items is the number of edges in in the components and the standard dynamic programming techniques.",
                    "label": 0
                },
                {
                    "sent": "So the weights are integers and they have polynomial size, so bystander dynamic programming techniques we can solve this problem.",
                    "label": 0
                }
            ]
        },
        "clip_31": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Normal time, so again we have a reduction to a polynomial time solvable problem.",
                    "label": 0
                },
                {
                    "sent": "So here the idea was that the solution is.",
                    "label": 0
                },
                {
                    "sent": "So we can think of the solution as a witness that the problem has a yes answer and we wanted the randomization to work correctly on this list witness so it is often very, very helpful for thinking about this this way that to think of what is a good witness of a yes answer and vadouvan from randomization.",
                    "label": 0
                },
                {
                    "sent": "So how do we want the random choices to operate on these witnesses?",
                    "label": 0
                },
                {
                    "sent": "So to to explain this in more detail, I are to present another example.",
                    "label": 0
                },
                {
                    "sent": "Let's see this simple problem may.",
                    "label": 0
                }
            ]
        },
        "clip_32": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "You don't find it that natural, but it is useful for some.",
                    "label": 0
                },
                {
                    "sent": "For recursion purposes, we want to separate a graph with K vertices in such a way that it has at least two big components.",
                    "label": 0
                },
                {
                    "sent": "I mean, big means having at least Q vertices in some algorithms based on recursion.",
                    "label": 0
                },
                {
                    "sent": "This is good, because then we still have a large component, which is which is smaller than the original graph, and in some cases this is helpful.",
                    "label": 0
                },
                {
                    "sent": "And there's a very simple randomized algorithm for.",
                    "label": 0
                }
            ]
        },
        "clip_33": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This so this is a solution, right?",
                    "label": 0
                },
                {
                    "sent": "Uh, set S with two big components.",
                    "label": 0
                },
                {
                    "sent": "And again, very move each vertex with probability.",
                    "label": 0
                },
                {
                    "sent": "Indefinitely.",
                    "label": 0
                }
            ]
        },
        "clip_34": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "1/2 and because this is a solution and the witness of the solution is this set S and because these two components are large, they contain two large trees.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                }
            ]
        },
        "clip_35": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Yes, and if it probably 2 to the minus K, we delete all the solution vertices and we probably two 2 -- 2 to the minus Q.",
                    "label": 0
                },
                {
                    "sent": "We do not delete any of these Q vertices of the three with two to the 9th probability to the minus key.",
                    "label": 0
                },
                {
                    "sent": "We do not delete any of those vertices so so so after the deletions we get to reduce graph that contains 2 big components.",
                    "label": 0
                },
                {
                    "sent": "This and that that are that are separated from each other.",
                    "label": 0
                },
                {
                    "sent": "So what we?",
                    "label": 0
                }
            ]
        },
        "clip_36": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "To do is that we look at the big components of this reduced graph, and if I and we check whether there's two big component that can be separated by K vertices in the original graph if confined to such big components separated in, that can be separated in origin graph, then clearly there's a solution and by this argument, if there's a solution in this graph with that probability, there's two big component that is easily separable and original graph.",
                    "label": 0
                },
                {
                    "sent": "So I think this shows nicely what I was talking about that here we have a weakness of yes answer cause this thing of this separator S and 2 three is and we want random choices to happen in a certain way on this week.",
                    "label": 0
                }
            ]
        },
        "clip_37": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so.",
                    "label": 0
                },
                {
                    "sent": "Yeah, so so video is separation to some number of winning mastic problems.",
                    "label": 0
                }
            ]
        },
        "clip_38": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And I. I will move on to more advanced technique and which was introduced recently in the context of multi of the multicast problem and then later it was used for several other problems.",
                    "label": 0
                },
                {
                    "sent": "Unfortunately I do not have time to give a full proof of this and and it would would be may be too technical and not really relevant to this talk.",
                    "label": 0
                },
                {
                    "sent": "So what I will do is the following that I will present a statement of the technical result.",
                    "label": 0
                },
                {
                    "sent": "You will not understand this.",
                    "label": 0
                },
                {
                    "sent": "It will be a bit technical and bit counter intuitive, and then I will present.",
                    "label": 0
                },
                {
                    "sent": "I will not prove this technical result.",
                    "label": 0
                },
                {
                    "sent": "And I will present two applications of this result and then hopefully those two applications will make sense.",
                    "label": 0
                },
                {
                    "sent": "And and then you will see why this technical result is interesting and if you are interested in approved and then you can look at the papers.",
                    "label": 0
                },
                {
                    "sent": "So what is this technical result?",
                    "label": 0
                }
            ]
        },
        "clip_39": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So first the setting is the following that we're looking at transfers or problems.",
                    "label": 0
                },
                {
                    "sent": "What is the transfers?",
                    "label": 0
                },
                {
                    "sent": "Also, let F be a family of subgraphs in a graph so family of objects and the transfers are is a set of vertices or set of edges such that each object each object.",
                    "label": 0
                },
                {
                    "sent": "Contains one of the selected elements, so from each each of our our selected set hits, or each of these objects like maybe you have a set of cycles and you want a set of vertices that hits each of these cycles, you want each of the objects should have a representative in our selected set so threads are there is a fancy name.",
                    "label": 0
                },
                {
                    "sent": "I prefer saying hitting or killing these objects that much more intuitive.",
                    "label": 0
                },
                {
                    "sent": "And many classical problems can be formulated as transfers are problems addressed.",
                    "label": 0
                },
                {
                    "sent": "Icat problem is just hitting all the passes from S2 T. This is another way of saying you're cutting us from the multicast problem.",
                    "label": 0
                },
                {
                    "sent": "It's a heating order passes between the motive in the motor vehicle program we are set of terminals and we want to separate them from each other.",
                    "label": 0
                },
                {
                    "sent": "This is nothing else than hitting all the passes between the terminals.",
                    "label": 0
                },
                {
                    "sent": "No directed field feedback vertex set of directed feedback vertex set is hitting all the cycles or directed cycles in the graph, and this problem of graph bipartite graph by factorization or outside for transfers are which is which is removing vertices or edges to make the graph bipartite.",
                    "label": 0
                },
                {
                    "sent": "This is nothing else than hitting all the odd cycles in the graph by vertices or edges.",
                    "label": 0
                },
                {
                    "sent": "So we have several.",
                    "label": 0
                }
            ]
        },
        "clip_40": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Events in this framework.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "We need this definition so first.",
                    "label": 0
                },
                {
                    "sent": "In our application we will have a set of terminals with some meaning.",
                    "label": 1
                },
                {
                    "sent": "So we have some special lattices and and and and this family F will have we satisfy this requirement that they contain connected objects.",
                    "label": 0
                },
                {
                    "sent": "OK, that's not a big requirement probably.",
                    "label": 0
                },
                {
                    "sent": "And all of these objects intersect.",
                    "label": 0
                },
                {
                    "sent": "So all of these objects somehow connected to T. And the figure might be misleading.",
                    "label": 1
                },
                {
                    "sent": "Sorry, so the objects in F are not necessarily joint.",
                    "label": 0
                },
                {
                    "sent": "You can have many.",
                    "label": 0
                },
                {
                    "sent": "You're going to have exponential number of objects sinkiewicz as the order cycles in the graph, so.",
                    "label": 0
                },
                {
                    "sent": "We have in this talk we always have objects are going through these terminals and then we define given a solution as we define the shadow of the solution to be those vertices that cannot be reached from the terminals.",
                    "label": 1
                },
                {
                    "sent": "After removing this set set of.",
                    "label": 0
                }
            ]
        },
        "clip_41": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This is Aurora removing this set of edges, so this will be a crucial definition.",
                    "label": 0
                },
                {
                    "sent": "The notion of shadow of a solution with respect to some set of terminals.",
                    "label": 0
                }
            ]
        },
        "clip_42": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, and then here is the technical result so.",
                    "label": 1
                },
                {
                    "sent": "We have this notion of shadow and we have discussed condition that every object is connected and goes through T and Now what this result says is that there's an algorithm which computes a sad Z having a certain property having a certain property with some probability.",
                    "label": 0
                },
                {
                    "sent": "So this set Z has the the probability two to the order of minus.",
                    "label": 0
                },
                {
                    "sent": "Kate has the probability that there's a minimum F transfers all such that the shadow of the transfers are discovered by the and the and new edge of the transfers.",
                    "label": 1
                },
                {
                    "sent": "Is contained in this, so this is the edge edge version in on directed graph, so so if there's a minimum transfers are with at most K edges, then with some probability there's a minimum transfers all such that the shadow is covered by the and no edge of this transfer is contained in Z.",
                    "label": 1
                },
                {
                    "sent": "Some condition you at this point you usually want you should not be able to see why this is good, but let me point out something very, very strange.",
                    "label": 0
                },
                {
                    "sent": "So this algorithm doesn't know about this set F, so it says that it computes a set Z.",
                    "label": 0
                },
                {
                    "sent": "Side that with some probability something happens, but this is true for every F. So this algorithm somehow captures capture something that is common in all these transfers are problems.",
                    "label": 0
                },
                {
                    "sent": "It doesn't have to know F which is good 'cause there would be issues.",
                    "label": 0
                },
                {
                    "sent": "How to represent F, but this is not an issue because it doesn't know F. So think of this algorithm as as computing a random set that hopefully has has some probability of having a certain relation with an optimum solution.",
                    "label": 0
                },
                {
                    "sent": "OK, now you can forget about this.",
                    "label": 0
                }
            ]
        },
        "clip_43": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Few minutes I will start explaining the first application.",
                    "label": 0
                },
                {
                    "sent": "The first application is a clustering problem.",
                    "label": 0
                },
                {
                    "sent": "Clustering usually means that you want to partition objects according to certain requirements you want.",
                    "label": 0
                },
                {
                    "sent": "Typically you add objects that are similar to be close together and you have some some bound, some constraints on the number of size or clusters and so on.",
                    "label": 0
                },
                {
                    "sent": "In this particular problem we have the following two constraints.",
                    "label": 1
                },
                {
                    "sent": "We don't have any bound on the number of.",
                    "label": 1
                },
                {
                    "sent": "Clusters that we want to partition into, but but each cluster must must be so small, should contain atmosphere vertices and there should be at most Q edges going out.",
                    "label": 0
                },
                {
                    "sent": "And then this is overdefined problem.",
                    "label": 0
                },
                {
                    "sent": "And we show that this problem can be solved in two to the order of Q times and so it's a FPT parameterized vacuum.",
                    "label": 0
                },
                {
                    "sent": "So so if you if you'll only a few edges going out, but maybe the cluster size is a large number then then we have such an algorithm.",
                    "label": 0
                },
                {
                    "sent": "I just mentioned that there is a tool to the order of P algorithm that it uses a different technique.",
                    "label": 1
                },
                {
                    "sent": "So P is the size of the cluster and Q is the number of edges that can go out.",
                    "label": 0
                }
            ]
        },
        "clip_44": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And let's say that the cluster is good if it has size at most B and at most square Q edges are going out.",
                    "label": 0
                },
                {
                    "sent": "And now a trivia necessary condition is that every vertex should be contained in at least one good cluster.",
                    "label": 0
                },
                {
                    "sent": "Otherwise there's no solution, but.",
                    "label": 0
                }
            ]
        },
        "clip_45": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "In fact, this is a sufficient condition as well.",
                    "label": 1
                },
                {
                    "sent": "We show in the next slide that if every vertex is contained in a good cluster, then there's a partition into good class 'cause this is not obvious because there's good clusters can overlap, but it is true that there's a.",
                    "label": 1
                },
                {
                    "sent": "There's a good cluster.",
                    "label": 0
                }
            ]
        },
        "clip_46": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Why is this true?",
                    "label": 0
                },
                {
                    "sent": "So every vertex is contained in a good cluster.",
                    "label": 1
                },
                {
                    "sent": "Let's find a collection of good clusters covering all the vertices such that the total size of this collection is at most as soon as possible.",
                    "label": 0
                },
                {
                    "sent": "Now it can happen that two clusters in.",
                    "label": 0
                }
            ]
        },
        "clip_47": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Overlap, but we use this this modularity quality that the the edges leaving X plus the edges leaving Y is that is larger or equal than the edges leaving X -- y and edges living by minus X.",
                    "label": 0
                },
                {
                    "sent": "So either the edges leaving X exactly the edges leaving X -- Y or the other way around now.",
                    "label": 0
                }
            ]
        },
        "clip_48": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "The number of edges leaving X is larger than equal number of edges, leaving X -- Y.",
                    "label": 0
                },
                {
                    "sent": "Then we carry plus X with X -- Y.",
                    "label": 1
                },
                {
                    "sent": "It is still a good cluster because it has not more edges going out an smaller size and then every vertex is still covered by a good cluster and.",
                    "label": 1
                },
                {
                    "sent": "And it.",
                    "label": 0
                }
            ]
        },
        "clip_49": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The decrease the size of the color collection a similarly if the other equality holds them Democratic less.",
                    "label": 0
                },
                {
                    "sent": "Why we divide minus X and this proves this fact that if every vertex is contained in a good cluster, then there's a partition into good clusters.",
                    "label": 0
                }
            ]
        },
        "clip_50": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, So what we have to do is to check whether a given vertex is in a good cluster.",
                    "label": 1
                },
                {
                    "sent": "And this is trivial to do in enter the queue time because you just guess all the Q edges going out and remove them.",
                    "label": 0
                },
                {
                    "sent": "But we want to do it in two to the order of cute.",
                    "label": 0
                }
            ]
        },
        "clip_51": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And this is a strange way of looking at this problem, but this is actually transfers are problem.",
                    "label": 0
                },
                {
                    "sent": "So what we what we have to hit with?",
                    "label": 1
                },
                {
                    "sent": "We want to hit with Q edges or the trees of size at least be going through V because we want to reduce the component of the size P. So we want to hit all the trees going through V and and having more than P vertice is.",
                    "label": 0
                },
                {
                    "sent": "So this is a translator.",
                    "label": 0
                }
            ]
        },
        "clip_52": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Problem which is good because we can we can.",
                    "label": 0
                },
                {
                    "sent": "We can involve this theorem.",
                    "label": 1
                },
                {
                    "sent": "So in our setting now we have a single Terminal V. Or the bad objects are going through the becausw order that objects are the trees of size.",
                    "label": 1
                },
                {
                    "sent": "Maybe more than P versus 3 is having more than PvP vertices, and this algorithm computes asset Z such that with this probability there's an optimum solution as with these two properties.",
                    "label": 1
                },
                {
                    "sent": "Right?",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "From now on we can assume that this event indeed happens and we have this set Z and there exists an optimum solution whose shadow is covered by the a new edge of this solution is contained in Z.",
                    "label": 0
                }
            ]
        },
        "clip_53": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, so we have this set Z.",
                    "label": 0
                },
                {
                    "sent": "It induces some number of components and this is the set outside Z.",
                    "label": 0
                },
                {
                    "sent": "And then we have these two properties and I would like to ask you to sink a little bit about this so that can be the edges of the solution.",
                    "label": 0
                },
                {
                    "sent": "That is this cluster that we are looking for.",
                    "label": 0
                },
                {
                    "sent": "So we have these two properties that the shadow is covered by Z and new edge of S is contained in Z.",
                    "label": 1
                },
                {
                    "sent": "So can we have an edge of the solution up there?",
                    "label": 0
                },
                {
                    "sent": "No, because no edge of the solution is contained in Z, so there's no edges up there.",
                    "label": 0
                },
                {
                    "sent": "And can we have an edge here?",
                    "label": 0
                },
                {
                    "sent": "Now we know that the shadow of S is covered by Z, so this is not easy, which means that that none of the two endpoints is in the shadow, so so so both endpoints of this edge is reachable from V. So what was the point of removing this?",
                    "label": 0
                },
                {
                    "sent": "It doesn't decrease the cluster size, so there cannot be any edge here and cannot be any edge of the solution there, so.",
                    "label": 0
                }
            ]
        },
        "clip_54": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Order or the edges of the solution are here.",
                    "label": 1
                },
                {
                    "sent": "We can we can.",
                    "label": 0
                },
                {
                    "sent": "We can just remove these edges.",
                    "label": 0
                },
                {
                    "sent": "Connecting the central talk to those satellite components.",
                    "label": 0
                },
                {
                    "sent": "So the cluster that we are looking for actually consists of this main part and some of the components out there, so all the other choice that we have is which components to select out there.",
                    "label": 0
                },
                {
                    "sent": "So we want we do not want to include too many components up there because that increases the size of the cluster, but omitting a component means that we have to delete those edges so we don't want to make too many components.",
                    "label": 0
                },
                {
                    "sent": "So, So what problem is this?",
                    "label": 0
                },
                {
                    "sent": "And this is again our good friend, knapsack.",
                    "label": 0
                }
            ]
        },
        "clip_55": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Becaused because we have we have the same two type of constraints.",
                    "label": 0
                },
                {
                    "sent": "We have a size constraint.",
                    "label": 0
                },
                {
                    "sent": "We do not want to include too many.",
                    "label": 0
                },
                {
                    "sent": "We do not want to include too many components into the central part and we do not want to omit too many components.",
                    "label": 0
                },
                {
                    "sent": "Becausw omitting someone cost us some edges.",
                    "label": 0
                },
                {
                    "sent": "So so after this reduction after computing this set.",
                    "label": 0
                },
                {
                    "sent": "V. Viadrina scenario that can be reduced to the polynomial time solvable knapsack.",
                    "label": 0
                }
            ]
        },
        "clip_56": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "All done.",
                    "label": 0
                },
                {
                    "sent": "And therefore if we get this algorithm that has success, probability two to the order to the order of Minos order of K and and then we reduce it to a column at absolute problem.",
                    "label": 0
                },
                {
                    "sent": "I I I will show you another application of this.",
                    "label": 0
                },
                {
                    "sent": "Maybe maybe then you can.",
                    "label": 0
                },
                {
                    "sent": "You can see how this works, but this time in the case of in the context of directed graphs.",
                    "label": 0
                },
                {
                    "sent": "So as I said.",
                    "label": 0
                }
            ]
        },
        "clip_57": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Earlier the motivate cat problem.",
                    "label": 0
                },
                {
                    "sent": "Is to break all the terminals from each other in a undirected or directed graph.",
                    "label": 0
                },
                {
                    "sent": "From the fundamental complexity point of view, the interactive version is fairly well understood.",
                    "label": 0
                },
                {
                    "sent": "The latest algorithm solves it in two to the K times a polynomial, but but the, but it seems that the directed version behaves very differently and the.",
                    "label": 0
                },
                {
                    "sent": "Techniques working for undirected graph doesn't work for directed graphs, but.",
                    "label": 0
                },
                {
                    "sent": "But this new technique that I'm presenting now can be used for directed graphs and we.",
                    "label": 0
                },
                {
                    "sent": "We will see how.",
                    "label": 0
                },
                {
                    "sent": "So obviously this is a.",
                    "label": 0
                },
                {
                    "sent": "This is a transversal problem.",
                    "label": 0
                },
                {
                    "sent": "Now the family is the set of directives passes going from one terminal to some other terminal.",
                    "label": 0
                }
            ]
        },
        "clip_58": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And if he had a notion of shadow before, but we need some other notion because we are in a directed graph, there are different ways of interpreting this.",
                    "label": 0
                },
                {
                    "sent": "So now the shadow.",
                    "label": 0
                },
                {
                    "sent": "Another setting is the following.",
                    "label": 0
                },
                {
                    "sent": "These are the terminals.",
                    "label": 0
                },
                {
                    "sent": "This is a solution.",
                    "label": 0
                },
                {
                    "sent": "These are the strongly connected components of the terminals.",
                    "label": 0
                },
                {
                    "sent": "And now this is the shadow.",
                    "label": 0
                },
                {
                    "sent": "The shadow consists of those vertices that cannot be reached from any of the terminals in the solution, and those vertices from which no vertex of the terminal, no terminal can be reached.",
                    "label": 0
                },
                {
                    "sent": "And and of course there could be some intersection that cannot be reached from the terminals and they are.",
                    "label": 0
                },
                {
                    "sent": "And no terminal is reachable from here.",
                    "label": 0
                },
                {
                    "sent": "This is our notion of shadow Now, so we consider both of these things as shadows.",
                    "label": 0
                },
                {
                    "sent": "Is that clear?",
                    "label": 0
                }
            ]
        },
        "clip_59": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, and I hear is the directed version that we will use so we have this definition of shadow and we impose the following condition on the objects.",
                    "label": 0
                },
                {
                    "sent": "This condition is that.",
                    "label": 0
                },
                {
                    "sent": "So it sounds a bit technical, but every every vertex of the object from every vertex of the object you can go in the object and reach a terminal, and every of every vertex of the object is reachable from some terminal.",
                    "label": 0
                },
                {
                    "sent": "This is this is trivially true if the if the objects are passes between the terminals.",
                    "label": 0
                },
                {
                    "sent": "Then obviously every vertex is on a path between two terminals.",
                    "label": 0
                },
                {
                    "sent": "And nothing but understatement is very similar.",
                    "label": 0
                },
                {
                    "sent": "We can compute a set Z such that with some probability the following happens.",
                    "label": 1
                },
                {
                    "sent": "There's an optimum optimum.",
                    "label": 0
                },
                {
                    "sent": "F transfers are such that the shadow is covered by this set Z and the solution is disjoint.",
                    "label": 0
                },
                {
                    "sent": "From this set there.",
                    "label": 0
                },
                {
                    "sent": "And again, this algorithm doesn't have to know F in any way.",
                    "label": 0
                },
                {
                    "sent": "Yes, so again you guys think of it as some algorithm producing a random set and and from now on we can assume that this random set has the probability property that it is disjoint from the solution and it covers the shadow of the solution.",
                    "label": 0
                }
            ]
        },
        "clip_60": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So because because this set is disjoint from the solution somehow it nothing interesting happens in this set, right?",
                    "label": 0
                },
                {
                    "sent": "Because we don't do not break everything anything there.",
                    "label": 0
                },
                {
                    "sent": "So so we would like to remove this set from the problem because nothing is happening there.",
                    "label": 0
                },
                {
                    "sent": "But of course removing this set can make the problem much easier.",
                    "label": 0
                },
                {
                    "sent": "This is not a good idea, but in order to compensate.",
                    "label": 0
                }
            ]
        },
        "clip_61": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "For removing this set whenever there is a fast growing inside this set from A to B.",
                    "label": 0
                },
                {
                    "sent": "Area.",
                    "label": 0
                }
            ]
        },
        "clip_62": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We will add the directed path from A to B.",
                    "label": 0
                },
                {
                    "sent": "So we do this from every pair of vertices.",
                    "label": 0
                },
                {
                    "sent": "If there's a path going inside the between the two vertices, we just added direct edge because we know that no vertex will be deleted here anyway, so we can, and this doesn't change the problem and after that.",
                    "label": 1
                }
            ]
        },
        "clip_63": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We can remove this said Z.",
                    "label": 1
                },
                {
                    "sent": "And the good thing is that.",
                    "label": 0
                },
                {
                    "sent": "That this doesn't make the problem an easier, and it doesn't make the problem any harder becausw, because by assumption we had a solution disjoint from Z, so this will not destroy this solution.",
                    "label": 1
                },
                {
                    "sent": "But now this solution will be shadow last.",
                    "label": 0
                },
                {
                    "sent": "It doesn't have a shadow because the shadow of this solution was covered by Z.",
                    "label": 0
                },
                {
                    "sent": "So after removing this this set this solution doesn't have a shadow.",
                    "label": 0
                },
                {
                    "sent": "Alright, so all we have to look for now is a shadow lasso solution.",
                    "label": 0
                }
            ]
        },
        "clip_64": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so so how does this show less social look like?",
                    "label": 0
                },
                {
                    "sent": "OK, so these are some interactive components and this is the solution.",
                    "label": 0
                },
                {
                    "sent": "This is the shadow but.",
                    "label": 0
                }
            ]
        },
        "clip_65": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "What happens if there is no shadow, then, then, then what is this problem that we have to solve?",
                    "label": 0
                },
                {
                    "sent": "What is this program?",
                    "label": 0
                },
                {
                    "sent": "Yes, it's not a knapsack, but this time this is the undirected multiway cut problem because now we can observe that.",
                    "label": 0
                },
                {
                    "sent": "This solution is a motivator and motivate cut in the underlying undirected graph, 'cause these are strongly connected components that cannot be an edge between them.",
                    "label": 0
                },
                {
                    "sent": "'cause then there would be a pass from Evanta Tito.",
                    "label": 0
                },
                {
                    "sent": "So the issue is that originally this was not true.",
                    "label": 0
                },
                {
                    "sent": "This solution is not not necessarily motivate.",
                    "label": 0
                },
                {
                    "sent": "Cutting the underlying undirected graph becausw to components can be connected somehow like this.",
                    "label": 0
                },
                {
                    "sent": "But but here we have no such issue.",
                    "label": 0
                },
                {
                    "sent": "There are no edges like that.",
                    "label": 0
                },
                {
                    "sent": "All these vertices are deleted, so so this is actually an under a multi.",
                    "label": 0
                },
                {
                    "sent": "They cut in the underlying undirected graph, so we can we can.",
                    "label": 0
                }
            ]
        },
        "clip_66": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We can just stay.",
                    "label": 0
                }
            ]
        },
        "clip_67": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Involve this previous result on undirected, motivate, cut and reduce the problem in a randomized way to do this.",
                    "label": 0
                },
                {
                    "sent": "Problem then that we understood earlier.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "Yes, so and if you have the statement of this, this technique of what does it mean to compute such a sad Z, then the proof is actually very very simple.",
                    "label": 0
                },
                {
                    "sent": "But you have to understand what this statement means.",
                    "label": 0
                }
            ]
        },
        "clip_68": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "My final example is a very nice and very recent technique I just.",
                    "label": 0
                },
                {
                    "sent": "Yeah, so the good thing is that this is this is a very nice technique that is applicable for a large number of problems.",
                    "label": 0
                },
                {
                    "sent": "And it really changed the way how we, how we look at algorithms on three decompositions.",
                    "label": 0
                },
                {
                    "sent": "But the bad thing is that I I don't want to introduce three this now.",
                    "label": 0
                },
                {
                    "sent": "I don't want to talk about dynamic programming is done on trivet.",
                    "label": 0
                },
                {
                    "sent": "So I apologize for that.",
                    "label": 0
                },
                {
                    "sent": "So true, it's a bit technical topic and I strongly believe that attributes shouldn't be defined before a coffee break or very early in the morning.",
                    "label": 0
                },
                {
                    "sent": "So if you know it really is, then you will like this.",
                    "label": 0
                },
                {
                    "sent": "If you don't know trivets then then you will see a nice reduction and you have.",
                    "label": 0
                },
                {
                    "sent": "Take my word for it, for that.",
                    "label": 0
                },
                {
                    "sent": "This is indeed a meaningful reduction, and indeed the problem we are reducing two is in some sense better problem that the program that we started with.",
                    "label": 0
                },
                {
                    "sent": "So a classical textbook approach to finding a Hamiltonian cycle on a graph of bounded tributes gives you an algorithm with running time K to K, or which is the same as saying 2 to the order of Cal OK. 'cause if you want if you have a separator of size K, you have to remember all possible ways the vertices in that separator separator are matched together are matched by partial solutions and there are.",
                    "label": 0
                },
                {
                    "sent": "Data replicated locate different ways of this, so you have to remember all these rates and and and and.",
                    "label": 0
                },
                {
                    "sent": "This gives this running time and it seems that this is the right running time.",
                    "label": 0
                },
                {
                    "sent": "It seemed this algorithm since so so basically so fundamental that it seems that there's nothing more that can be done, and in fact there are similar problems where we have we have lower bounds showing that under some complexity assumption you need K to the Kate.",
                    "label": 0
                },
                {
                    "sent": "I'm on a 3D composition of which K and I saw that this is true also for Hamiltonian cycle, but but it turns out that this is not true for Hamiltonian cycle, which was a big surprise that in that despite the fact that the obvious approach shows that.",
                    "label": 0
                },
                {
                    "sent": "That probably you have to remember that many possibilities.",
                    "label": 0
                },
                {
                    "sent": "There is a randomized algorithm with running time 4 today.",
                    "label": 0
                },
                {
                    "sent": "OK, so single exponential, not two to the K log K, so there's another portal.",
                    "label": 0
                },
                {
                    "sent": "OK times polynomial.",
                    "label": 0
                },
                {
                    "sent": "And and defenders and.",
                    "label": 0
                },
                {
                    "sent": "In the rest of my talk, I just show you how Hamiltonian cycle can can be reduced to something gas, which and that something else can be solved in this time.",
                    "label": 0
                }
            ]
        },
        "clip_69": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The main technical tool that is under.",
                    "label": 0
                },
                {
                    "sent": "Yes, and I think that from this.",
                    "label": 0
                }
            ]
        },
        "clip_70": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Replacing three of them are here, roughly or probably.",
                    "label": 0
                }
            ]
        },
        "clip_71": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so this is the technical result that we are using and I the so called isolation lemma.",
                    "label": 0
                },
                {
                    "sent": "So let we have a universe you and we have a subset of family of subsets F. And we assign a random weights to elements of the universe between one and.",
                    "label": 0
                },
                {
                    "sent": "And now we are interested in the probability of.",
                    "label": 0
                },
                {
                    "sent": "Of having a unique minimum weight element.",
                    "label": 0
                },
                {
                    "sent": "So depending on how we assign weights, there will be one or more minimum vital minimum weight.",
                    "label": 0
                },
                {
                    "sent": "The subset in this family but but but if N is large then we have a very good chance that there's a unique minimumweight element.",
                    "label": 0
                },
                {
                    "sent": "So if N is larger than you or larger than.",
                    "label": 0
                },
                {
                    "sent": "Some polynomial, a few, then then then we have a good chance of of of having.",
                    "label": 0
                }
            ]
        },
        "clip_72": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Remove a talent in our setting.",
                    "label": 0
                },
                {
                    "sent": "the University will be the set of edges of the graph and this family will be the family of all Hamiltonian cycles.",
                    "label": 0
                },
                {
                    "sent": "There's an exponential number of million cycles.",
                    "label": 0
                },
                {
                    "sent": "Obviously we don't know them, but this, but you don't have to know F for this isolation lab network.",
                    "label": 0
                },
                {
                    "sent": "OK, so this Satanta some some polynomially large number and this ensures that from now on we can assume that there's a.",
                    "label": 0
                },
                {
                    "sent": "There's a unique minimumweight Hamiltonian, so if there's a Hamiltonian cycle then there's a unique minimum weight Hamiltonian cycle.",
                    "label": 0
                },
                {
                    "sent": "And also because these weights are polynomial if we can guess this minimum weight.",
                    "label": 1
                },
                {
                    "sent": "So from now on we are looking for a Hamiltonian cycle of wait, wait exactly, see under the additional assumption that there is a unique Hamiltonian cycle of weight exactly, see.",
                    "label": 1
                },
                {
                    "sent": "OK, and.",
                    "label": 0
                }
            ]
        },
        "clip_73": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "How do we do that?",
                    "label": 0
                },
                {
                    "sent": "What do we do so instead of looking for Hamiltonian cycles, if we look at cycle covers so cycle cover is a sub graph having a degree exactly 2 on each of the vertices, so it is a set of cycles.",
                    "label": 1
                },
                {
                    "sent": "Sort of more cycles.",
                    "label": 0
                },
                {
                    "sent": "Hamiltonian cycle is obvious cycle cover.",
                    "label": 0
                }
            ]
        },
        "clip_74": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "As bad, but about the cycle cover, you can have more.",
                    "label": 0
                }
            ]
        },
        "clip_75": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Online components so so necessary.",
                    "label": 0
                }
            ]
        },
        "clip_76": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Cycle.",
                    "label": 0
                },
                {
                    "sent": "And also, we're not just looking at cycles.",
                    "label": 0
                }
            ]
        },
        "clip_77": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Reverse, but we are looking at color cycle cover so colored cycle cover each color each cycle is.",
                    "label": 1
                },
                {
                    "sent": "Assigned to either the color of white or black.",
                    "label": 1
                },
                {
                    "sent": "Or the other way to look at this is that each vertex has a color and edges and vertices in the cycle cover have the same color.",
                    "label": 0
                },
                {
                    "sent": "Now of course, the number of colored cycle versus larger than the number of cycle covers, but we know that.",
                    "label": 0
                }
            ]
        },
        "clip_78": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So each cycle cover gives rise to some number of color cycle covers, but.",
                    "label": 0
                }
            ]
        },
        "clip_79": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Obviously, each cycle cover with K components gives rise to two to the K colored cycle covers, because for each cycle you have a choice between two different colors.",
                    "label": 1
                },
                {
                    "sent": "Another.",
                    "label": 1
                },
                {
                    "sent": "The good thing is that so this means that the Hamiltonian cycle gives rise to.",
                    "label": 0
                }
            ]
        },
        "clip_80": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Two different colored cycle covers.",
                    "label": 0
                },
                {
                    "sent": "Cycle cover with two components give rise to four different colored cycle covers.",
                    "label": 1
                },
                {
                    "sent": "Cycle cover with three components gives that gives rise to 8 different colored cycle covers.",
                    "label": 1
                },
                {
                    "sent": "So if there's no no Hamiltonian cycle of this weight, then the number of weight, see color cycle covers is divisible by forward because every cycle cover that is not a Hamiltonian cycle gives rise to some number of color cycle covers who's number is divisible by 4.",
                    "label": 0
                },
                {
                    "sent": "Because they have at least two components, so two to the K is divisible by 4.",
                    "label": 0
                },
                {
                    "sent": "On the other hand, if there's a unique batesia Hamiltonian cycle, then the number of such color cycle covers is not divisible by 4 cause because they have every cycle cover having more than one component gives rise to some number of which is divisible to four and this unique Hamiltonian cycle will give rise to exactly 2.",
                    "label": 1
                },
                {
                    "sent": "Color cycle covers.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_81": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So what we are doing is that.",
                    "label": 0
                }
            ]
        },
        "clip_82": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "These are the steps of the algorithm.",
                    "label": 0
                },
                {
                    "sent": "First we assign random weights to the edges of the graph.",
                    "label": 0
                },
                {
                    "sent": "Then if there's a Hamiltonian cycle done with some good probability, there's a unique Hamiltonian cycle with minimum weight.",
                    "label": 1
                },
                {
                    "sent": "We try all possible weights and then we count the number of colored cycle covers with that weight.",
                    "label": 1
                },
                {
                    "sent": "And if the answer is not divisible by 4, then we say that yes, there is a Hamiltonian cycle.",
                    "label": 0
                },
                {
                    "sent": "And OK, this is nice, but the part that you do not see is why why this problem is better than finding a Hamiltonian cycle.",
                    "label": 0
                },
                {
                    "sent": "It looks much more impressive like this, accounting it's weighted.",
                    "label": 0
                },
                {
                    "sent": "It's colored, but somehow Hamiltonian cycle is kind of a global problem that it had.",
                    "label": 0
                },
                {
                    "sent": "You cannot really verify a Hamiltonian cycle locali because you really have to see whether it it gives a single cycle and not two cycles.",
                    "label": 0
                },
                {
                    "sent": "On the other hand, this cycle cover thing.",
                    "label": 0
                },
                {
                    "sent": "It's a completely local problem.",
                    "label": 0
                },
                {
                    "sent": "What you have to check is that each vertex has exactly degree two.",
                    "label": 0
                },
                {
                    "sent": "Each vertex has a color that is the same as its neighbor and and therefore in a.",
                    "label": 0
                },
                {
                    "sent": "Is the part that you will not understand if you don't understand treated so.",
                    "label": 0
                },
                {
                    "sent": "So in a dynamic programming on a tree decomposition, there's no state space in each bag will be 4 to the K because you just have to remember the degrees of the vertices and the colors of the vertices as opposed to being K to The Cave when you had to leave.",
                    "label": 0
                },
                {
                    "sent": "Remember a matching of these vertices.",
                    "label": 0
                }
            ]
        },
        "clip_83": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So with this technique we have a.",
                    "label": 0
                },
                {
                    "sent": "We have a randomized algorithm, but not unlikely to previous examples.",
                    "label": 0
                },
                {
                    "sent": "We have a very good probability of success, so the so the exponential factor is not coming from the small success probability, but it comes from the from solving this easier problem that requires 4 to the K times a polynomial and you have to take my word for it that this is indeed an easier problem.",
                    "label": 0
                }
            ]
        },
        "clip_84": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And OK, so this is the end of my talk.",
                    "label": 0
                },
                {
                    "sent": "I presented some some examples showing randomized algorithms for parameters programs.",
                    "label": 0
                },
                {
                    "sent": "I hope you found the malagon 'cause I think they are quite elegant solutions for many of these problems and I mentioned it was that the randomization is sometimes possible by by plugging in standard techniques like caper factor.",
                    "label": 0
                },
                {
                    "sent": "Hash functions, sometimes it's not known.",
                    "label": 0
                },
                {
                    "sent": "And yes, and this is a crucial difference, I think that you have to think about randomization with different ways that implement polynomial time.",
                    "label": 0
                },
                {
                    "sent": "Algorithms that a small success probability is still good for us becausw becausw exponential in K is good for us now, so so small success probability as a function of K is perfectly good for us.",
                    "label": 0
                },
                {
                    "sent": "And this is the.",
                    "label": 0
                }
            ]
        },
        "clip_85": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The picture that you have seen repeatedly that we took some problem.",
                    "label": 0
                },
                {
                    "sent": "We applied some randomized magic and then within a clean way we could reduce it to an easier problem that we could solve by some other techniques.",
                    "label": 0
                }
            ]
        },
        "clip_86": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, thanks very much.",
                    "label": 0
                }
            ]
        }
    }
}