{
    "id": "yxjmn3xkotlyfxgy2ln2biolurvw6hdz",
    "title": "HPC Python Programming (Part 1)",
    "info": {
        "author": [
            "Ramses van Zon, University of Toronto"
        ],
        "published": "Sept. 19, 2016",
        "recorded": "June 2016",
        "category": [
            "Top->Computer Science",
            "Top->Computers->Programming"
        ]
    },
    "url": "http://videolectures.net/ihpcss2016_van_zon_HPC_python_part1/",
    "segmentation": [
        [
            "OK, so you're here for HPC Python And that's a topic that just some people for.",
            "Some people shouldn't even exist, because Python is not high performance.",
            "You're here nonetheless."
        ],
        [
            "So we'll assume for the sake of practicality that this exists.",
            "What I really want to talk about here is the issue of performance and Python.",
            "In many cases using Python issue is more convenient, but it is true that it's typically slower than compiled languages.",
            "Today, as most of the week is about pushing the boundaries, so we're going to see how we can make Python faster than maybe your first attempt at writing a script, so it will be a point where you're writing something.",
            "Python 'cause it's a quick script and it's great.",
            "Now you're attacking a bigger problem and it's just too slow to be practical.",
            "Maybe just a few things she can do to just fix up that script, so that's still practical.",
            "But at some point there might be a time when you just have to switch to a compiled language to get full performance, and so one of the ways to know whether there's any way to improve your performance is to do performance analysis.",
            "So there's going to be a mini performance session inside this session that won't use any of the tools that you will use tomorrow, but there are specific profiling tools for Python to find out where your bottlenecks are now.",
            "What can we speed up, speed up, and then we'll talk about some ways that we can speed up our Python code.",
            "Well, let's talk about NUM Py specifically, which is innovations of a lot of these things.",
            "And then we'll look at a few ways we can actually do parallel computing in Python.",
            "These are some packages that and it will see alone.",
            "Listen 'cause we'll see them and then they will end up or I'll end with a couple of packages or more frameworks that are more geared towards data science and so they're more.",
            "Here for mention, we can talk in more detail privately, but but I want to show you where where Python is is actually going to be probably more useful in a parallel right now.",
            "Just because when you're doing data processing.",
            "You might be limited basically by the speed by which you can read your data.",
            "Rather, the speed of your scripts per say, in which case having a convenient parallel framework is more important than the writing beautiful see codes.",
            "That is no faster because you're still waiting for the disks."
        ],
        [
            "So."
        ],
        [
            "We're going to get started.",
            "We're going to use bridges as as with everything else.",
            "So if you're following along on your laptop, this is totally possible, but you might not get all of the speedups that we are seeing.",
            "You still need a fair bit of.",
            "Buy some packages.",
            "So if I hope if this was your plan that you've already installed them most in most.",
            "Python installations at pretty typically these days.",
            "They come with a package manager and you can say I want these packages and it starts downloading and installing them, so it shouldn't be hard, but.",
            "So, Interestingly enough, the same will have to be done on bridges.",
            "Not all of these modules are in the standard Python module that that business has.",
            "Which is fine because not every user might use them, so I put him in my directory and I was told.",
            "A few hours ago it wasn't readable, so it made it made my directory on bridges readable, so you'll be able to copy it from there.",
            "It also has some things to install.",
            "Necessary packages at if you working on your own laptop and you just want to code, you can get them from from sign.",
            "It's get repose.",
            "You won't get the things that so don't do that on bridges because you'll be missing some stuff on bridge is what I want you to do."
        ],
        [
            "With the following, so you'll have to log into bridges.",
            "So just SH, dash Y, your username and bridges that PSC that video and then.",
            "And then install some coding software that sounds more.",
            "Difficult, it might be so copy this whole directory over to your directory and go to the code directory within it within it and type setup or source.",
            "Set up the source part is important and the first time you do this it will install in your local home directory the packages that were listed on the 1st slide as well as a standalone version of Spark, which you're totally welcome to delete afterwards.",
            "If you don't want it, but that's what it will do.",
            "Just so you know, it doesn't do that.",
            "So do affect your home directory, so this is not your trading account.",
            "If this is your actual breaches account for instructors, that might be in the audience is kind of put some stuff in there, check out what setup doesn't delete it after yes.",
            "Repository is not present.",
            "I tried to cheat blow.",
            "It doesn't do it.",
            "Friday, where you trying to do it on your laptop.",
            "So OK, that's just good at quick shop that's not working so much.",
            "Working for me, yeah.",
            "Here they are saying this must not be working.",
            "OK, let's give that a shot here.",
            "Yeah, that's awesome, OK?",
            "Very strange.",
            "I can try fix that later.",
            "In the meantime, see if the bridge is 1.",
            "Works for you OK?",
            "So here we are, log in so I'll do it live too, although for me the packages are already installed.",
            "Spell averages.",
            "Is this is this size big enough?",
            "By the way, the font size in the back, yeah OK.",
            "So should we have the whole screen?",
            "OK.",
            "So.",
            "I would have copied it already, but of course my directory is that directory, so there's a code directory.",
            "There's a whole bunch of code in here we're not going to go into detail on each of them, just bunch of examples of all the modules.",
            "Then all the packages that I said, but we do need to source set up and.",
            "I can tell much of you are copying from this directory right now, so for me it will just say, yeah, this is already there.",
            "This is already there for you.",
            "It should, especially at the end say OK, I'm installing spark.",
            "Give me a few seconds or I'm selling this so this could take a few minutes.",
            "Which this is the perfect time to do this?",
            "'cause will go on and we'll see what to do later.",
            "But let's let it go.",
            "It should be OK once it's done.",
            "Perhaps we want to do our scaling and our testing on a dedicated node node on these login notes that we are in now.",
            "So we're going to ask for an interactive job with interact Dash N 28 and then for good measure you're going to source set up again.",
            "App 'cause it says some environment stuff up that doesn't translate through the interact.",
            "Most of it doesn't, but not everything I turn.",
            "It turns out in that same code directory is a makefile.",
            "So which can we just mostly meant for you to have hints of how to use these things?",
            "Most of them are just Python.",
            "Run that script.",
            "There's a few comparisons with compiled code and so.",
            "As that Makefile compiler compiled code for YouTube as source setup, make help will tell you all of the different targets that you could type after make, but this is you don't have to do.",
            "This makefile is just there for your convenience.",
            "If you want to use it, and if you want to get an idea of how to use a different."
        ],
        [
            "Things, but we're actually just going to type them in as we go along.",
            "So those are the prerequisites, so I hope most of you are.",
            "Installing this stuff, or maybe it's already done?",
            "I'm not, I forgot exactly how long it take.",
            "If you have problems by the end we get to hands-on.",
            "Let us know and we'll see if we can fix it."
        ],
        [
            "Sorry, said this, but I Python being at and I should ask who here has programmed in Python.",
            "Excellent, OK, so that was my assumption that most of you would be, so that's good at Python is a high level interpreted languages.",
            "You know, for those of you that haven't programmed in Python, it's also languages is fairly easy to read if you just take it line by line or at least easy to explain without having to explain why the curly braced us in a; Thus it's nice, but because it's high level, interpreted and interpreted means it takes one line at a time and executes.",
            "It means that it is often at odds with high performance.",
            "This is the fastest way to do it at.",
            "However, it doesn't mean that you can write things more quickly, typically in Python, then in C or you spend less time debugging exactly what went wrong, so it could be faster to get your stuff going.",
            "And if it takes you two months to write that C++ code or one day to write the Python code, and it only has to run for a day, it doesn't matter that this Python at ran for three days, right?",
            "It still win, so there is a point in having a high level language.",
            "And so I'm going to try and show the things that you should use when you find that your Python script is actually not quite as performance as you need it to be."
        ],
        [
            "But I won't be able to completely beat the compiled code.",
            "So the thing that makes it slow is this.",
            "This line by line translation this means.",
            "A few things and.",
            "I know there are Python implementations that improve upon this, But the standard one at this is this is the case C Python you take.",
            "The other compiler man's compiler interpreter takes a line of your Python code, tries to figure out what it says, and then translate that in library calls that are then subsequently done, and so that means that it has to do it for every line.",
            "Compiler takes.",
            "Your whole code, translates it at once, and.",
            "That means the translation it has to be done once, but also you can't.",
            "It can cross optimized.",
            "You can see that it's certain line doesn't do anything.",
            "You can see there's a certain line could be done earlier, just makes because it made sense because the data was already processor etc etc.",
            "All these optimizations you're losing."
        ],
        [
            "It's a dynamic language, part of the structure of data types such that they carry basically their data type with them, which means every time you use a data type, it's checking using a datum.",
            "Its data type is checked.",
            "Memory management is automatic, which is very convenient, but also means that it has to keep track of how much memory is what you're not using anymore, what it can throw away overhead.",
            "All these extra bits of information that every piece of data has means that streaming to the processor isn't as fast as it could be, and guess what?",
            "CPU's are built to handle streaming data best, so less performance.",
            "Those are all things that make Python."
        ],
        [
            "Not a performance, so I'm going to have.",
            "Yes, this one is going to be something that you should never do.",
            "This is a sin I'm committing right in front of you.",
            "I'm going to simulate the diffusion equation, which is kind of a time dependent version of the Laplace equation we saw earlier in the challenge with Python.",
            "You can do it.",
            "This is the equation for those of you that like equations like Me 2 dimensional will put it on a square domain, so the X Files Go for an X1 to X2 and Y values from the same and will set the.",
            "The boundary conditions 220 on the boundary but will give it some initial condition, and this is a diffusion can also think of it as a heat equation.",
            "Is the same iteration.",
            "So you could imagine you have heated up a plate and you just see how it how that heat gets dissipated overtime.",
            "Anne."
        ],
        [
            "This is what it will look like, so I took this hot plate.",
            "Essentially an gave it 4 hot spots and then I'm just going to see as a function of time how it evolves and I am plotting this by the way, Python comes to very nice plotting packages and so you can put plotting in your code without too much trouble.",
            "It's a lot more trouble in compiled language to do that in a portable way, so you can see it slowly diffuses and it becomes some diffuse.",
            "Almost uniform I have.",
            "Temperature or density depending how you want to look at it.",
            "Eventually it would be completely black, completely diffused out.",
            "So this is what we're after."
        ],
        [
            "And and as with everything as with our holiday, so we do that.",
            "How do we solve this while we discretize, so I'm not apologetic for the poor resolution here because this is exactly the reason resolution that I intended to have you cut it in squares.",
            "And basically what happens is that the four neighbors of each block have an influence on the middle block.",
            "It's not exactly the average, as in the Laplace challenge, but it's it's a fraction of that effectively.",
            "OK, so we're going to do this expensive.",
            "Times stepping, we're going to take the average and add parship apart of that average to the center and do that for every pixel.",
            "We're using graphics in Python we use Matplotlib is kind of doesn't come with it, but it almost always comes with it anyway.",
            "And for C++ and Fortran, if you're curious and if you're running it and if the graphics transfers nicely over the wireless, which I'm not sure off, uses a routine called PG plot, which is ancient and yet still very useful if you are.",
            "If you need graphics on Linux.",
            "Within a program, another thing that I've done so these I'll show you the codes in the second, but an all the parameters are always the same for the FORTRAN to C++ an and the Python And I just took C++.",
            "We're not going to use this rather than for comparison, and I like C++ just a tad better than C. So all the parameters are in this gift to the parents to GY.",
            "So we want to play with it.",
            "We can change that."
        ],
        [
            "That file and it looks like this, so this is totally valid Python code which is executed.",
            "Possibly exactly the point, because it's going to get included, so diffusion constant D is set, the range of X, which is the same as the range of Y.",
            "In this case, how long we want to run this for?",
            "What are spatial resolution is that is that that's the DX.",
            "How often we want to get output.",
            "So graphics, or at least a line saying how far along we are.",
            "So this is .5 and whether we better not, we want graphics or not.",
            "OK, so."
        ],
        [
            "See how that performs.",
            "Have got speakers.",
            "They do, essentially essentially this anger.",
            "Their direct translations are called F2, DC, PF90, or PIE.",
            "You can look at them there in that code directory and they're literally direct translations of one another."
        ],
        [
            "So we're going to first thing we have to do with compiled code, which is a drawback.",
            "Is compilers, so this is the point where we're using the Makefile, and the only point, so we're going to make diffusion, C, C++, version, and F-90.",
            "So this creates the binaries for those will show you how it does it, and I've created this little alias here.",
            "The setup will do it for you too.",
            "You can use it.",
            "It's called the time.",
            "Which basically just calls time.",
            "At the time is a built-in for bash, but I like anytime because it only gives me the elapsed time.",
            "Right now I know if you use the time, the time command in front of any other commands.",
            "So yeah, it'll give you 3 timings and I don't want to get into what the differences are right now I just care how how long I have to wait for this to go so the elapsed time and so everything will say he lapsed.",
            "So the compilation to 1.8 seconds.",
            "Alright, so now these are ready to run.",
            "The device is already ready ready to."
        ],
        [
            "So let's run all three.",
            "Let's run the CPP.",
            "That took 2.44 seconds.",
            "Obviously I switched off graphics here and there.",
            "Fortran is slightly slightly faster, 2.37 seconds and the Python two 599.90 seconds.",
            "So if there was nothing to be done, we would now go and have a nice afternoon.",
            "And then that'll be it.",
            "'cause this does not look promising for Python for HPC.",
            "Python as his nature in his native form is not high performance, and it's not intended to be in.",
            "It will never be.",
            "OK.",
            "So even the fact that I had to compile also just a simple code doesn't.",
            "I mean doesn't add up to to the overhead of Python.",
            "OK."
        ],
        [
            "Why do we bother?",
            "Because the whole code for diffusion is here.",
            "This is the whole code.",
            "I left out the plotting part, but it's just one function that's that's that's in this other diff 2D plots file, But that's it.",
            "So we do it because."
        ],
        [
            "You can write very clear, concise code.",
            "It's very flexible as a lot of packages, and it's easy to use, so your development time goes down and the performance hit is about as bad as it can get when you do it for diffusion equation and the diffusion equation every way the Python doesn't natively, every pixel is its own object, knows what type is this?",
            "I have to go over to over each pixel and and do some numerical analysis on it every time there's a check.",
            "If it's the right type, that analysis is even possible.",
            "Or at each pixel needs only like a few, a few summations and multiplications.",
            "Very little work per per work unit, so to speak, so it's very tightly coupled whenever you have a workflow that can be paralyzed, but it's very tightly coupled, you don't want every date, and to have a whole bunch of extra data, like what type it is, because it's going to slow it down and watch.",
            "The overhead is very high if your work units are low.",
            "Now, so we were taking more or less the worst possible case.",
            "This is on purpose because we're going to make that case still go very, very very, very much faster than it is now, just not compiled first.",
            "OK, so we'll learn a lot of new tricks as we go along.",
            "Now, if you're using Python for post processing, and most of what you're doing is fall out, then the comparison is much less bad because FiOS typically limited by how fast your disks are.",
            "Your file system is, so it doesn't have to be this bad.",
            "There's ways to improve things with dedicated packages, which is exactly what will do.",
            "You can sometimes Lucius compiled languages to get the worst performance hits out of the way so.",
            "We have to do that first.",
            "We first have to see.",
            "OK, this is.",
            "These were all serial codes.",
            "I thought was horrific 1st Order of business make Python a little less horrific even before we start paralyzing, you can't write an allocation request and say I need 600 times the amount of time that I really need to because I'm writing it in Python to just like and say, well, you know what, I'll run it on 600 nodes and it'll run at the same time.",
            "You're not going to get those 600 nodes right?",
            "That's not the right way to do it so."
        ],
        [
            "Let's clean this up.",
            "Well."
        ],
        [
            "Mattoon this.",
            "Code there's two.",
            "For our purposes.",
            "They make two parts, 2 bottlenecks that we can look at.",
            "The first one is CPU performance, like.",
            "How much CPU did be used and what part of the code really made it that slow?",
            "So this is that CPU performance and there's two convenient packages for Python that they'll tell you exactly where your code spends the most time, so there's no point in looking at the code and go, and that one.",
            "Seems like I can use it.",
            "Package to make it faster if you don't know if that line has any significant contribution to the overall runtime.",
            "So this is what you want to do.",
            "You want to figure out where to hotspot."
        ],
        [
            "Sir.",
            "So you still look at see profile first.",
            "It comes with Python actually don't have to install it.",
            "See Profile is a multi faster version of profile.",
            "So everybody you should see profile but you have to say that it is the profile exists as well and you still as with anything that is a test, you were typically just on a smaller representative case, but so we're going to look at what happens when we run our code through this profiler.",
            "And this is the command you use.",
            "So one of the nice things about the profile is you don't have to change anything to your code.",
            "You'll learn tomorrow if you go to the former session that this is called instrumenting.",
            "When you have to change your code for.",
            "For the purposes of profiling this, for this package you don't have to, but you have to start Python with this Dash MC profile, which loads this module.",
            "This for the MX4 and then I'd like the results to be sorted by cumulative time so the largest time is on top.",
            "That makes sense and so when I do that when I run this.",
            "I can see.",
            "It's hard to see I can see that it's as well.",
            "In Line 9 of death to the NUM py, you're spending a lot of time and then in line 15.",
            "I guess now you think that's great.",
            "I'll look at those lines.",
            "Turns out those lines are function calls.",
            "See profile only measures the time spent in functions, which is very good when you have a nice modular code that's already split up in functions and you want to know which function is the most expensive.",
            "You saw the code, there's few slides earlier.",
            "It wasn't one big monolithic code.",
            "Help Erica Bash it in his software development session because that's not how you write code, but it is very convenient because you know, I want to show that it doesn't show this for this program.",
            "In this case, this tool cannot show us where the problem is because I don't have enough functions."
        ],
        [
            "Here's another tool that can, it's called line profiler.",
            "Hey, that makes sense, line by line and so again, do this on a representative case and they can tell you line by line where things are.",
            "Now you don't have to have your your code in a function, because as it turns out, you need to instrument anything you want to measure the times of with a little thing ylitalo header, it's X profile will see it in a second, but that's all you have to add, but you have to add it to a function and that function can be one big monolithic code.",
            "So and then, once you've done that, you run it through the command called current Prof with a couple of options."
        ],
        [
            "So suppose this was my code, this is.",
            "Only only a demonstration obviously I don't know what this would do, but you have a fairly large lists of once and I'm computing the string value of the 01 and then I."
        ],
        [
            "Added two is the one I deleted.",
            "I print it so this is just a bit of nonsense code to profile it I have to wrap that into a function if it's already in a function, so if it is well written code you just add edit profile to any function you want to go into so you can be very selective in what functions you you measure.",
            "So you put that profile in the front and then you run it through current Prof Dash L which is which means line by line.",
            "It doesn't have to do it line by line.",
            "And this fee, which means I want to actually see if you the results.",
            "I know why you wouldn't want to do that, but."
        ],
        [
            "And this is the output, so you're running in that way.",
            "The first 2 lines at the output of the of the actual program, and after that comes to profiling.",
            "Information, and so it was.",
            "C is line by line.",
            "We see how many times the line was hit, how many, how much time it took there, what percentage of the time it took there.",
            "And so we can see that line number 4 takes 75% of the time is if this was something we wanted to optimize, that would be the line we attack.",
            "The next line would be the Dell, although that's probably worthwhile.",
            "OK."
        ],
        [
            "The second aspect that we might want to know about or where a bottleneck might lie is memory performance.",
            "This can creep up suddenly like your stuff is working fine, and then you run a bigger case an IT crashes and memory might be as."
        ],
        [
            "And so you're you should worry about memory even.",
            "Even if you're not hitting it anywhere, because as soon as you run out of memory on any modern machine, a couple of things could happen.",
            "If you are more or less lucky, what will happen is that the operating system will start using a hard drive as part of memory, so swapping which it does so that you can keep going and in the hope that this terribly memory intensive process will will end soon.",
            "But it's very slow, and you probably have experienced this sometimes, and that's the good case in the bad case.",
            "You're on a system that doesn't have a hard drive or hasn't set up any swap space, in which case your application crashes.",
            "The OS will see this.",
            "This model is taking too much memory.",
            "I'm going to kill it.",
            "But if you're in an even less ideally a situation, you might the OS might make the wrong decision on which process to kill and might kill.",
            "I don't know your SSH daemon and so now you can log into the code or some other system process at disconnect especially happened when your memory goes up very fast, and then the OS has no time to decide which one and just fix it and kills the wrong one.",
            "No trash is also also no good, but a lot harder to to detect because you can't even go and see what's wrong."
        ],
        [
            "So you want to know how much memory you are using, and that's the thing with Python, you can't always be completely sure like in see you have to allocate your memory or at least you should be doing that.",
            "In Python, you just use objects.",
            "And some things.",
            "At some point the optics gold, like they're not used anymore, and I cleaned up.",
            "See now that makes this into something that happens in the background, and you might want to know where things are happening at the same time.",
            "Some objects you don't quite sure how much memory day takes.",
            "Things tend to be more visible in, especially in C is no OK.",
            "This is structural.",
            "Just look at this definition.",
            "At 64 bytes.",
            "I know what I'm at.",
            "You don't know that with Python objects to be."
        ],
        [
            "So.",
            "The way Python.",
            "Trace memory is it through a garbage collector, so every object that was ever used skip track off an it sees if you're still using it.",
            "How does it know you're still using it?",
            "You're using it.",
            "If you have a name for it.",
            "So if it's if it's a variable that's in a function.",
            "I just had a equals two that fuck that variable left in this function.",
            "As soon as you exit the function that A isn't there anymore, but that object still lives.",
            "The garbage collector C is.",
            "Oh, here's an object.",
            "Nobody is using it.",
            "Nobody is pointing to it.",
            "It has no name in where I am now.",
            "Get rid of it.",
            "You can also do this by hands and this is sometimes a good idea if you're patching up big monolithic parts, like maybe the diffusion code when your note, but you don't need.",
            "An object anymore?",
            "You know it's pretty large.",
            "You can delete and then just just disappears.",
            "So I did have a little example here, so X was a little list of four zeros.",
            "One side LXX does not exist anymore, so when I try to print it, this has not defined, which is exactly the point.",
            "OK, so you can manage memory to some extent in Python, but what if you're not quite sure what's going?"
        ],
        [
            "You need a memory profiler.",
            "So this will go like the line profiler line by line and see what happens to the memory.",
            "It's very good for caching memory leaks as well.",
            "An unexpected large memory usage especially.",
            "Looks nice, but it needs the same instrumentation as the as a line profiler so that saying.",
            "Instrumented code I can run through the memory profiler.",
            "It just does something else.",
            "YT profiles memory and then for this to run recently.",
            "Well, you need the P as usual, but it wasn't the list and it will be installed."
        ],
        [
            "So what happens when I take that thing?",
            "A bit of cold that it did.",
            "Just funny.",
            "1 one is a one.",
            "I call it with Python but now with Dash M memory profiler so there's no name.",
            "There's no current draw for something.",
            "This is just my foundation."
        ],
        [
            "And this is what it tells me.",
            "So again, line by line it tells me.",
            "Where I'm standing now, where I'm spending my time and how much memory I'm taking and how much it increments and so we see on Line 4 that I get an increment of 32 megabytes, which makes sense because that's pretty much what this is.",
            "And then that memory stays around, stays around.",
            "There's no.",
            "There's a small increase here 'cause I've made a string.",
            "Nothing here 'cause I'm added to this training.",
            "Apparently adding that is so little it doesn't measure in megabytes.",
            "And then when idel that variable I get back my memory.",
            "OK, so.",
            "Here it should be obvious where it was, but the memory profiler will tell me this is where I get extra memory.",
            "OK.",
            "So we can do this.",
            "We can.",
            "We can now profile these things."
        ],
        [
            "So let's give this a shot.",
            "At who here has had trouble with installing this this little bit of modules in the in their home account data source set up anybody for which that failed.",
            "Effect.",
            "Oh get the patches in Wichita before your own.",
            "That's good.",
            "OK, OK, that's that's good to know.",
            "So if you yeah, so if you don't want to go go to the site and then.",
            "If you go to the public section, there are stairs zip.",
            "As if link here on the right, I did not.",
            "Don't see right now 'cause you only get half my screen.",
            "OK.",
            "There it is.",
            "OK.",
            "So if everybody has been able to install these things, let's see if we can try and take that code, reduce.",
            "So here we are.",
            "So I've got the diff to everything that's got to do with the Fusion school diff.",
            "To do something organizes this a little bit.",
            "So the parents one is where you want to.",
            "Play a little bit with the parameters, probably.",
            "Let's do that.",
            "On the terminal favorite graphics is false already at crank this one up.",
            "The smaller the axe, the longer this takes by Thinker Cube.",
            "So for the purposes of illustration.",
            "Actually, comments don't work in this thing, so .2.",
            "For instance.",
            "And then if we ran it again, this is just now should become a reasonable time.",
            "Alright, you don't run the parents, you run the.",
            "Sing a song.",
            "Yeah, so this is it goes up to 15 as the parameter file suits and so one I want you guys to try and take this code.",
            "Should look at it.",
            "You'll see that I've put everything in a main function, so it should be fairly easy to.",
            "Yes.",
            "So it should be pretty.",
            "Yeah, but the red is pretty bad fix that.",
            "I'll fix the Rep when you guys instrument this code with an ad profile and run it through the profilers you guys try that and then you can tell me afterwards which line had the most memory usage increase and which line had the most CPU or time usage ready.",
            "See if we can do here.",
            "House.",
            "Let's say I give you 3 minutes, OK.",
            "Try this.",
            "Yep.",
            "Yes, so get an interactive note.",
            "I mean, yeah.",
            "So.",
            "Put back to point away so you should have been doing.",
            "Cops"
        ],
        [
            "So you should have logged into bridges and then this setup and then you get an interactive node setup once more.",
            "This is really only needed if you need that each time function that turns out and I don't do make help but just edit that, go to the source directory so you already there CDs.",
            "HPC Pies code an edited if 2D dot PY at profile to that one function and the slides are up on the on the wiki.",
            "But pull up the first one."
        ],
        [
            "So the current profit is the first one you're going to try after that.",
            "We write those down.",
            "8 think there must be space.",
            "Do whatever.",
            "Kern, Prof V. Lower case L. That's what that is, and then whatever his name is.",
            "So in this case, if.",
            "To the top, I and then the other one.",
            "I think I can remove that.",
            "IPhone Dash M. It's just that.",
            "Memory_ profiler.",
            "And again, Dave today.",
            "Dog.",
            "It's better.",
            "Try that.",
            "Raise your hand if you plan to Sue, profile at least one of them.",
            "OK, how about two of them?",
            "Working on that one OK. One of them needed an extra.",
            "Or something else?"
        ],
        [
            "Alright, so.",
            "Shout out if you have profile that so far which one has the.",
            "Most CPU usage which line just a number here.",
            "Nobody.",
            "4848 any other ones that are close to that?",
            "47 well, that's still OK, so.",
            "That computation takes the longest.",
            "I'll believe you.",
            "Because it makes sense and I saw it too.",
            "So the way we find it out just so that you have the solution or you see the solution, all you do is add.",
            "Yeah, that's.",
            "Profile here.",
            "And then.",
            "Rather than running it through Python, you run it through current Prof.",
            "It's a little slower as you can tell.",
            "Last thing is, if I can't break it, it just does what it was so far.",
            "So this this shouldn't be too bad and I see the same the same effect.",
            "This is a large one I see dense.",
            "Next is a pretty large one too.",
            "So many fori itself as well.",
            "Yes, this is the downside of having a nice large funds.",
            "Then the output is little garbled.",
            "It look better on your terminal I'm sure.",
            "Alright, how about memory?",
            "48 yes.",
            "But what you can do?",
            "Is making it even?",
            "Smaller test case and just only run it for.",
            "One rather than 15.",
            "Price on dash.",
            "Memory profiler.",
            "Yeah it will be slower, which is exactly why you want to run this for smaller case.",
            "And then I tried to current profit residents were horrible.",
            "This one is a lot better, not worse.",
            "Air.",
            "Doesn't like it when it still does it.",
            "It doesn't like it, but it still stopped.",
            "So it's not.",
            "It's kind of interesting 'cause it seems to happen at.",
            "Apparently odd points, right?",
            "Yeah.",
            "You don't, you don't see any of it.",
            "Did you duty at profile?",
            "Did you add that that little line?",
            "Yep.",
            "Best Buy I don't know.",
            "That's a good idea.",
            "Did you add this to the line before the definition?",
            "Yeah, that's the thing.",
            "So that's the one that makes the profile go.",
            "I have to pay attention here.",
            "It's all you have to do for every function you want to inspect by the desert.",
            "Now unfortunately, it won't run with that if you don't run it through the profiler.",
            "So after you are done profiling, you best remove that, but that's that's the case for any performance tool that uses instrumentation, unfortunately.",
            "Someone should write an auto instrumental for this one, but.",
            "It's a small thing.",
            "So there's some.",
            "There's some funny things.",
            "Yeah, this is way too big.",
            "OK, there's a few funny things we can see happen here.",
            "I see large increases here an and when I enter a for loop.",
            "They're not terribly large, but they're they're the large.",
            "They're one of the largest one here.",
            "It is kind of funny that that happens.",
            "Does anybody know why?",
            "When I entered at that for loop, I certainly get an increase in memory usage.",
            "It's range 'cause what range does at this impact from 2.",
            "His pre allocate a list of endpoints and then go over there less one we want.",
            "So I basically creating the list.",
            "There's a way to improve that in Python 2 and you were you replace range by X range.",
            "Just put a nail exit front which is a good idea here.",
            "This is not going to change much with the size of our problem because the number of points is going to be very similar.",
            "But if we were memory bound and this.",
            "This was where we've suddenly made it jump into 12 of 12 gigs or something like that.",
            "We know we did something wrong, so we can.",
            "We can find out.",
            "Find out unexpected hotspots because I would have thought that you know the densities here.",
            "When I define these density variables and I got my points in both both directions, I would have thought, well, that's where my memory allocation is.",
            "That's probably where it is and you can see you can find hidden uses of memory quite quite nicely with this tool.",
            "Sorry once for this.",
            "So."
        ],
        [
            "We know where the hotspots are actually for the Fusion, we don't have to worry too much about memory, but we at least know how to find him.",
            "And for CPU we saw was in the computation of the Laplacian as well.",
            "At this sort of Russian being the right inside of that equation.",
            "For those of you not familiar with the term terminology.",
            "So to the DDX squared and the device work, and with completing the next one, which is which is in essence doing that, I'm parts that I'm stepping, which makes sense.",
            "That's that's the bulk of what we want to do, so we might not be so surprised, but it is.",
            "Where where we potentially can gain the gain the most, and so one of the things that this code uses is plain nested Python lists."
        ],
        [
            "For disarray, if you look at the code, we looked at, the code is a second ago.",
            "If you look carefully, you'll see that this endpoint by endpoints array is actually a list of lists and it an analyst in Python itself is a number of elements that can be of any type that says what type it is."
        ],
        [
            "And they are simply not the ideal day today, not for numerical stuff.",
            "OK, so for a number of things, once they are slow, so that's why we look at them here.",
            "But also they don't quite do what you think they might do, so I have a little list here.",
            "A little array 1234 called a another Ray called B and now multiplying a by two.",
            "You know what that does?",
            "I get the list twice.",
            "Now, if I was writing some mathematical expression, I would I might expect to get each element of that list multiplied by two.",
            "It's for Fortran would do what I would do.",
            "It's not listed because the service they are not vectors, they just you want twice the vector we're trying to list years twice the list.",
            "Similarly, if I add a plus B, you add a list to a list, you get a larger list.",
            "You don't get the elements that added, right?",
            "But when we're doing numerical work, we probably do want the elements so so they're not the ideal data type because their lists they're not a race, so we."
        ],
        [
            "Graceann people have underage for awhile and so these guys have written NUM py.",
            "Not Python guys.",
            "Other guys that needed to know numerical Python And NUM Py in his essence kiss you erase that behave more or less issue wants.",
            "We'll just go through these line by line to to see what they do, and then I can explain why they're doing the right so useful, but at NUM PY is a package, so whenever you wanna import from package you say from that package and then whatever you want to support so you can make zeros and ones and zeros.",
            "5 gives you an array of five, so when you print it, or when you just have that output, you'll see array and then it seems like a list, but it's just the way it printed it out.",
            "It's not a list, it's in array.",
            "Same with once and you'll see as I've illustrated here.",
            "You can specify what time the list is.",
            "I'm sorry, but I'm the array is all members of the array have to have the same type.",
            "That means then rather than having a list which is essentially a combination of taipana data type in the data type data etc etc is once the type and then all the data.",
            "So all the data is now contiguous in memory that can be streamed.",
            "Some good can come after that arrives.",
            "There's useful things in NUM Py likely create a range of numbers it creates.",
            "Create a linearly increasing range of numbers, so that's pretty nice.",
            "You can want to go from one to five.",
            "Here you go from one to five.",
            "You have an array."
        ],
        [
            "The array elements are accessed like like in C or C++.",
            "If you have multidimensional arrays, which number I can do as well?",
            "You don't have to have nested arrays of arrays, it's just a multidimensional array, but they're stored row bencher like in.",
            "See another fortran.",
            "This usually doesn't matter too much if you're using it, except if you're looping over them and you have to know in what direction you should go.",
            "But it is true.",
            "It also starts with zero like in C, so very much see based Python or at least a standard modulation is written in C and you can kind of see it.",
            "So the first index is zero and starts at 0 and the First Nations role in a second is the is the column.",
            "If you have a matrix."
        ],
        [
            "So here's again, some zeros, but in this case I have a two by three matrix of zeros.",
            "I can set elements at different from.",
            "See, you don't have to repeat your square brackets, but you can, so this is a choice.",
            "At you can set the elements and once they said they were put in here and there you go."
        ],
        [
            "If you set an element that doesn't exist, he'll tell you about it.",
            "It's very friendly.",
            "Well, I know it says in friendly tone, but it is useful.",
            "C and even Fortran if you don't have the right flags will let you go out of bounds and you deal with the safehold.",
            "Right, it will say hey index two is out of bounds.",
            "Very convenient, very costly, right?",
            "If I'm going over a double nested loop an for every time I access an element, I have to check if those numbers are within range is pretty slow.",
            "But fair."
        ],
        [
            "Useful for debugging debugging.",
            "So those are all those are good properties.",
            "In general, there's something that is also a good property, but you won't think it at first at that has to do with copying variables.",
            "Regular.",
            "Variables like AMB which are here assigned some integer, so he extend these is A and a is 20.",
            "What happens is that a is 20 and these 10 why?",
            "Because he was 10 and then became 20.",
            "D was undefined then it became 10 and nothing happened.",
            "Right?",
            "Not so with the race."
        ],
        [
            "Here's a 2 dimensional array hey called 8 and I copied it to iterate be.",
            "And I said element 1 zero 216 of a. I print a Loma hold.",
            "There are 16 and I just put in.",
            "I've been be hey, it also has to 60.",
            "So what happened is that B is not a copy of a B is really just a different name for a.",
            "They're the same objects.",
            "Just both, they're called by two names A&B, and if it really is a name issue, by the way, names is the same thing that triggers the garbage collection.",
            "If there's no more names for an object, that's when it knows there's nothing that can extend deleted, so.",
            "If you're used to C or C++ pointers, that looks a little bit like that, right?",
            "You can also not just equate pointers, and you don't.",
            "You haven't copied it at now.",
            "You do that.",
            "Partly out of efficiency considerations, if you were to pass one of these two a function, or you, there's no copying.",
            "Copying can be expensive, especially if you have large arrays, and that's exactly what they would like to use them by 4, so that's fine."
        ],
        [
            "But we have to be able to copy that.",
            "So yes, of course we can do that.",
            "But you just have to say B = 8.",
            "Copy Rotterdam, then just A and that creates a new copy.",
            "So basically it allocates some memory an there's there object with that puts the same information in there and then gives that new copy the name B.",
            "Now when I assign 16 two eight, it arrives here, but it does not get into the thing.",
            "So when you want it too, so you have to think about do I want to copy or do I just mean the same thing?"
        ],
        [
            "Another useful thing then, one of the reasons why we didn't like lists is that you can have Victor effector and effector scalar multiplication.",
            "Another arithmetic with vectors and matrices.",
            "So it's easier to see by.",
            "Example, so here's an MPA range which gives you the number zero to three.",
            "Is much like the director, Python range function, and.",
            "By the way, this will take the type from whatever arrangements, so this is an array of integers.",
            "This a range is an array of double precision floating point numbers to that array.",
            "I can add a scalar and every element of that array will get that edition, so this distributed distributed that that's the overall.",
            "So he's been set to two, so you can do it with the variable too.",
            "That's the only important to be made here, but it could also multiply 2 arrays A&B.",
            "Anne.",
            "Depending on what filter background you come from, you might expect different outcomes, but what number does is a element by element.",
            "Arithmetic, so if I multiply A&B every element of a gets multiplied with every element of the array without model P and that gets stored in the array, so 0 * 3 is zero 1 * 4 Four 2 * 510 three Times 618.",
            "It is better than this, but you know that's so that's what it does.",
            "You can do B * C or C was a scalar and you get what you expect too.",
            "It's just like plus it just does the same operation on each element.",
            "Make sense so element by element operations plus times divide minus.",
            "I think even power they are they are all supported."
        ],
        [
            "So that does.",
            "And cause some confusion.",
            "Sometimes when you're trying to multiply the matrix with vector.",
            "So if you're doing this as part, expect the outcome to be what linear algebra tells you to be.",
            "So we act with the matrix on the on the vector, you get a vector back.",
            "You'd be surprised, so here's the matrix.",
            "A elements 123234.",
            "Here it is.",
            "I create a vector B that has elements 123, and then I multiply a with B.",
            "It's hard, I should get a vector back according to linear algebra, but they get a matrix, so one number does not do.",
            "Is the matrix definition.",
            "Linear algebra, definition of computing two rows that are the sum of these multiplications.",
            "Rather, it does much of the spirit of Elementwise.",
            "Array."
        ],
        [
            "Take it does this so it takes.",
            "Your vector onto 3 head multiplies the 1st three elements.",
            "Of your array with them 123 and then it kind of runs out of elements, so it just repeats the for the next column as well.",
            "So that's why that's why I've got the one here.",
            "The two from both ones here briefly.",
            "So make matrix times vector still a matrix in Numpy.",
            "The same you might not expect."
        ],
        [
            "But now expect it is true for matrix matrix multiplication.",
            "So it does not do the linear algebra version of matrix matrix multiplication.",
            "It multiplies element."
        ],
        [
            "By elements here it makes a lot more sense given element by element.",
            "Of course you just match the elements that you get that matrix back.",
            "Sometimes you want matrix."
        ],
        [
            "Matrix multiplication."
        ],
        [
            "Going to linear algebra.",
            "And there's just some functions for that.",
            "So rather than doing those, yeah, sorry.",
            "So up till now it's just being real."
        ],
        [
            "You see, for generation, thanks for this is different.",
            "'cause Fortran requires left and right side be conformable.",
            "And here it doesn't.",
            "But what what?",
            "What happens if I had a big a bigger 8 * a smaller rate?",
            "Would it just repeat it stencil?",
            "Why I think I think that's what it does.",
            "Is it weird it is it is I. I would have rather seen this given error yes, but most likely not what you want.",
            "You most likely written something wrong.",
            "Yeah, yeah, there must be cases where it makes sense, but I made it.",
            "Yeah, yeah, so it's not quite.",
            "It's not quite fortunate array notation.",
            "I mean when they when they are the same shape it is right then.",
            "They're not funny stuff happens.",
            "Anne."
        ],
        [
            "So for the for the furnace staff offered for the linear algebra, you just have some functions called dots.",
            "For adult products there's a transposed two, and I think there's a few other ones that are useful, but Delta is the one that fixes all of these right?",
            "It can do an inner product with the dots, and they can do a matrix matrix or matrix vector.",
            "Whatever one so so the capability is there is just not what those operators do.",
            "So something to be aware of."
        ],
        [
            "OK, so suppose that we now realize computing the location was kind of expensive.",
            "We were using lists.",
            "We're using lists of lists that can be very good, let's try NUM PY arrays, and that's actually the implementation I showed you that fits on on one slides at the beginning.",
            "The implementation of this 2D so."
        ],
        [
            "The original one took must be some fluctuations in their runtimes, but took about 600 seconds.",
            "I re implemented this in in NUM Py an.",
            "It's 20 seconds.",
            "Well, that's about 30 times faster.",
            "This can make this alone can make the difference between a script that is worth keeping and script that has to be thrown away because you might as well just go to compiled language, right?",
            "This could make.",
            "This could make it into a useful, useful script, so that's.",
            "This is why people are so adamant on people using NUM py.",
            "Because it does it, it is a faster way to access memory.",
            "But it's still not as fast as it."
        ],
        [
            "Things can be decompiled versions.",
            "Still, about almost 10 times faster and this is all still cereal, right?",
            "So good and effective 10 if you're if you can code your script faster, definitely definitely worth it.",
            "At times."
        ],
        [
            "Now the next step.",
            "Of performance could be well, yeah.",
            "We've done what we can we first NUM PY and so.",
            "Apparently we have to go to some form of compiled language and I heard that there is this compiler for Python called Cython that makes everything fast.",
            "So there is a compiler for Python called Cython that will take your Python code typically in module form.",
            "That's usually how people use it and compile it and make it into a compiled language, so Python can have modules that are either written in Python or in C. An insight and sort of makes it the translation to see and then compiles it if C is faster than your compiled module must be faster, right?",
            "So here's a test.",
            "I did this.",
            "We might have to make forgot about it.",
            "One of them make things just to make this make this item.",
            "Package, but so did this an I get the old output of about 20 seconds for my regular NUM py.",
            "An application in Python And using Cython.",
            "I got 22.20.",
            "This is within the noise I think, so it's not that site on is slower, but it definitely didn't help.",
            "I really was anybody expecting siphon to win here?",
            "Why it doesn't is because site and respects.",
            "Python And does exactly what Python does.",
            "It does the checking of types.",
            "It does.",
            "Garbage collection is all of these things.",
            "It respects the Python syntax perfectly, so if you give it a Python module, it's not going to be much faster.",
            "I would have actually expected to gain something, but and this might just be that loading this Cython stuff has some overhead, and 22nd is too much to see it, but still, the way to get performance out of Syphon site on is too.",
            "Is to take that Python code and use site on Cython extensions and there are extensions to the Python language in there that specify the types of things so that what does it save you when it saves you having to check the types right?",
            "There's other things you can do to make essentially your Python closer to what the secret pilot can work with.",
            "They can optimize.",
            "the C compiler.",
            "Can't optimize pure Python code.",
            "Because it has to do all of these type checkings, array bounds, checking's etc etc.",
            "So just using cyclists siphoned could be a good way to go if you have a really nice package it just has to be faster and you're going to use it back.",
            "It should get in again again in Python.",
            "It's an excellent way to write extension modules for Python where it's worth the trouble of writing something that is is already very good impact on this sort of prototype.",
            "You just wanted to to go faster but you will have to learn Cython.",
            "Which is essentially a new language, and because it's essentially or an extended language, I'm not going to do it today.",
            "We have alot of things to talk about already.",
            "I'm going to try and use things that only work within sort of pure Python, or a module that already exists for Python.",
            "Is it better to use site and or to build to write our C extension, an right wrapper Python And compile them so the letter is going to be faster unless?",
            "If you're not using this iPhone extent extensions, if you use the size and extensions, you should be getting comfortable.",
            "Comparable speed between the two.",
            "So it doesn't mean that if you have a library is already see they serve for turn based and you want to call it in Python is already written.",
            "Yeah, don't go changing it to siphon, just write some wrapper code.",
            "It's not terribly hard.",
            "You can look up how that goes with that.",
            "That's that's fine.",
            "If you use the extension of fact and you should be getting comfortable stuff like that that that should be pretty much the same like depending on how you Golden spiritual caveats.",
            "OK, so with NUM Py we've an without going into what is essentially a compiled language, we've pretty much.",
            "Squeezed out all the juice from the."
        ],
        [
            "Serial performance, so when I look at a parallel performance.",
            "Now.",
            "If we weren't at HPC Summer School, there are some parts that it would probably skip, but I think it's.",
            "Let's say fun to see how.",
            "Threading shared memory programming.",
            "MPI would could and can work in Python, so will make it a bit of contact with the other."
        ],
        [
            "Sections and we're going to look at a couple of possible ways of doing this, and then a couple of ways of doing it very differently.",
            "But they all revolve around using the multiple cores, or in some cases multiple nodes that you might have at your event durability.",
            "So these are the packages now Max 4 threads, multiprocessing, MPI, four PY, I I I by parallel.",
            "In Spark you might have heard of Spark.",
            "It's a popular data science thingy, so we look at it very briefly.",
            "It's true that if this was a data science talk, we would go into that.",
            "This is a mix top."
        ],
        [
            "So.",
            "Let's look at them one by one and you'll see that it may.",
            "I hope it makes sense as we go along.",
            "We'll look at this one and then take a break maybe.",
            "What is non exper?"
        ],
        [
            "It's annoying to pronounce.",
            "What does it do?",
            "Essentially it's a.",
            "It's a just in time compiler for for NUM py expressions.",
            "What does just in time means?",
            "It means, as soon as you hit the expression.",
            "You are going to look at that expression and not an.",
            "Compile it and then execute compile stuff.",
            "Now that seems like cheating because I just said we're not going to compile stuff.",
            "But The thing is you just call a module with the string that hasher expression, and that's all you do.",
            "And I'm really comparing from your point of view, you're just giving it an expression.",
            "So he could think of matrix expression.",
            "It will break things up in threads and then calculating parallel.",
            "So that's the part that makes it a really nice package.",
            "The fact that not just edit it compiles just in time, but it used threads to do those those evaluations.",
            "It's a little awkward.",
            "It's a little old.",
            "But I want you to show up, but when I wanted to show you this anyway, it takes input as a string.",
            "So if you have your expression, you have to put it in the string, and so.",
            "But it can.",
            "It can really.",
            "It can give a really nice speedup because it's using all the cores that.",
            "I mean that's the main.",
            "The main thing here."
        ],
        [
            "Anne.",
            "So.",
            "He gave her an array expression, but it really is a little restricted.",
            "Anne.",
            "You can use these operators which seem to be all of them as certain functions like sine, cosine, where can be useful if you want to pick out of if you want to do something.",
            "Depending on the value of of another array.",
            "And you can do a couple of reductions.",
            "We've now both all seen reductions either in the the Open ACC track I think, or the OR the MPI track as such as salmon product.",
            "That's it.",
            "No Max for some reason."
        ],
        [
            "So here's an example.",
            "So I import NUM PY in MX and give them short names.",
            "I already did it with non PNP and um Express.",
            "Just use any.",
            "2 random factors of.",
            "1000 million long.",
            "And then I want to compute with those random vectors a ^2 + B ^2 + 2 * 8 * P. And so.",
            "Something's missing here.",
            "Yeah.",
            "Sorry, this site isn't quite right.",
            "What they should say.",
            "No, no, no, it is right so.",
            "I forgot my owner and Ione time module there so anytime is is the same thing As for the as I just said for the bash it just computes elapsed time but it too needs this thing in the string.",
            "I tried to be.",
            "Python, like pure Python And so I needed a timing routine so this so this is doing the.",
            "This is what NUM py this this is given to non pious.",
            "Actually this is not the compilation yet but each time.",
            "S you know which of these variables should be should be known about.",
            "So that's why ABC is there so the NUM PY array takes our number expression takes .008 seconds.",
            "I'm gonna try this life this is this is too short an example.",
            "In part, it's time.",
            "From time to time.",
            "OK. And I'm fine.",
            "Correct?",
            "It is comfy brand brand.",
            "Gonna try and use.",
            "10,000,000 right 123 yeah 10,000,000.",
            "Another one.",
            "We I'll pre allocates.",
            "A bunch of zeros for C. I cannot zeros and then.",
            "A time.",
            "C = A ^2 B ^2 * 2 * 8 * P. ABC.",
            "It's hard to keep track of all these zeros.",
            "Maybe something went wrong in the.",
            "You're all right.",
            "2 seconds.",
            "One of the reasons I'm doing this session is I'm impatient man.",
            "So let's go back to last less.",
            "Let's try that one.",
            "There we go.",
            "If that's possible, I'm not quite sure why these are so.",
            "Slow.",
            "The.",
            "Say.",
            "So let this go.",
            "We'll see what comes out.",
            "If you're using Ipython, there's an easier way to do this and just put person time in front of something, but I wanted to keep just just in Python enough.",
            "Not get yet another flavor of fighting in there.",
            "OK, so suppose that."
        ],
        [
            "That's true.",
            "Anne.",
            "Now let's try and use numex.",
            "So this one I think I did this one on my laptop, that's why I'm only using two threads, but.",
            "Basically, rather than saying.",
            "C equals something you say.",
            "Any dot evaluate you gave it the expression and the array you want to go into.",
            "And so even even from that, without using more than one threads.",
            "You see that we are about twice as fast, so this was only so this is now still cereal, but someone compiled under the hood so you don't have to worry about it too much.",
            "And then as soon as we turn on the threads.",
            "So in this case I took two threads.",
            "I guess it's something that's closer as like almost two times the performance.",
            "So let's try that here.",
            "So the time for this expression using.",
            "NUM py is .22.",
            "And let me not set the threads which I think means it gets the default of 28 threads and try each time.",
            "Me evaluate.",
            "A ^2 + B's friend.",
            "It is annoying to have someone to have to have this in strings.",
            "I realized this.",
            "Um?",
            "It means I have to be careful nesting my strings.",
            "I'm doing this right?",
            "No doubt about it.",
            "See how deep will see.",
            "Baby see.",
            "I think that looks like it's.",
            "The reason it takes longer than this is actually that some sort of sampling, so it does it 10 times or something and averages that, so it's.",
            "I could try and change the sampling, but I wouldn't.",
            "That wouldn't be proper, right?",
            "So we'll see how that goes, but this should hopefully do better, so I know this is a bit of a yeah two times faster and an kind of awkward.",
            "Note that if you're actually using it the first part, the time you would leave it out, so you just start with any evaluate, give it this string.",
            "And the rest is just pure Python, right?",
            "But we have just done parallel programming in my phone, 'cause we're using threads.",
            "This is sort of the simplest way to use threads in Python.",
            "It's it's it doesn't have support for open MP.",
            "This is about as close as she gets an.",
            "There's a few drawbacks."
        ],
        [
            "Til you can't do offsets.",
            "In these expressions and, so that's very annoying for us, because the line that took the most time this reflection line.",
            "Is filled with offsets and slices and stuff and what it does.",
            "I haven't seen this, but this is so.",
            "Let's look at that code and show you what that does.",
            "Well this is OK. Oh, here we go.",
            "Wow.",
            "So the.",
            "Going back to numerical expert now Max using 28 cores.",
            "Apparently I can't get this down 2.08 from points 23, so yeah, that is at about 28.",
            "It looks like about 28.",
            "I thought just the value.",
            "That's a nice thing about Python, right?",
            "You can just.",
            "Ask it how much faster was that?",
            "What's my speed up?",
            "Yeah, so I I'm sure to .5 is numerical noise and I think there's a half Korean there.",
            "The 28 cores that we used set up this expression 28 times, but it and they can do that for a number of reasons.",
            "It's very streamlined.",
            "You can only do it with full arrays, so that array is there in memory or rabies.",
            "There the stream zoom in and you can imagine that that's more or less to the nicest way to give it to the CPU.",
            "It gets compiled behind the scenes because spreads over thread.",
            "I had 10 million things to do, so that's a nice bit of work.",
            "They'll spread out nicely over 28 cores, so all of the all of the qualifications for having nice performance are met, but it can't do this.",
            "Run out of out of out of the blue because it can't or won't allow offsets.",
            "I'm gonna show you.",
            "Pull this off non pie.",
            "Alright.",
            "That's better, yeah, just better in terms of functions.",
            "So see how bad case.",
            "It's a bit messy.",
            "Agreed, by the way that this is computed.",
            "Here is that it uses array notation.",
            "This is an example.",
            "Nothing here.",
            "An example of the.",
            "We have data parallelism.",
            "That was alluded to in the past few days as well, so rather than having an array or having a loop over array indices.",
            "What is essential services if I have my?",
            "Hot plate.",
            "And I had my grids.",
            "What I want to compute for this is the Laplacian, which happens to be at these four at it.",
            "And this one subtracted times four that happens to be how the Laplacian.",
            "Up to a scaling website, so I need to see these four and what this essentially says it will take it as a whole array.",
            "And I wonder if I know I want to do NUM py element by element.",
            "How can I do that?",
            "Well, what if I just shifted this whole thing?",
            "I have a color so suppose I wanted this guy and this guy to overlap.",
            "Then I would have to shift.",
            "This and just bring it here.",
            "I can if you can do that.",
            "If I can align them such that the elements to be combined are lines, then I can just add them like so.",
            "So this is essentially what is happening here.",
            "By cleverly chosen offsets.",
            "I can add them as full array so whenever I do this in Python I select a range.",
            "When I get back, is a sub array.",
            "I'm gonna make that a little bit more clear.",
            "Hopefully so.",
            "To make this work, something that has to happen as well as the realization that all I need to compute is the inner part.",
            "These are my boundary conditions.",
            "They're all zero.",
            "Don't care much about them.",
            "I don't have to recompute them.",
            "They stay zero fixed boundary conditions.",
            "So what I want to compute.",
            "Is this sub matrix?",
            "And that's exactly what this last part does, right?",
            "The last part shift from one.",
            "Remember, we're starting from zero, so one is here to number of rows plus one the number of rows here is 2.",
            "It's only counting in our side, so that's this one.",
            "2 + 1 is 3 and three is always the last one that you don't get.",
            "You guys remember your range function.",
            "That's always the same.",
            "In Python, you specify a range for saying the start and the element you not getting.",
            "And we'll just look at the first one to see where this goes.",
            "For this instead starts at 2.",
            "So that's here.",
            "And goes to nrows plus one, so I'm not getting four.",
            "Well, as perfect as this guy.",
            "So these two matrices get combined.",
            "So I got them for mining this guy.",
            "But this guy, I'll try to push the blue guy, which means that this circle gets combined with this circle in this circle.",
            "Gets combined with this one, so it's a clever way of shifting things around that.",
            "Makes this data parallel.",
            "This is one of the reasons that this number expression this not by implementation was as fast as it was.",
            "I could still have looped over the indices and not gained as much.",
            "But that will be not as people say it by Sonic.",
            "So.",
            "This poses a problem for our.",
            "Our next we can skip this expression to it because it has these shifts and it doesn't like that.",
            "So I was going to give this as an exercise and then I realized this is this is going to be a little bit too lengthy.",
            "The way we do this, we want it.",
            "We want to do this same thing as this one.",
            "And we can we have to kind of fake it, so there's there's tricks and I'll just tell you there's tricks that do the same thing.",
            "Where you can make an umpire a that basically starts here.",
            "So I take the original Ray.",
            "Which starts here and I can just say, well, let's just make an array that starts here using the same buffer.",
            "However, I have to be wary or have to be aware of the memory layout and This is why.",
            "This technique is a little bit.",
            "Say.",
            "Squeaky, you had attended a little bit fitted, but we saw that there is a potential 28 times speedup, so it might be worthwhile, but it's not nice.",
            "We're getting into a territory where you'd rather not be.",
            "You have a working Python code, and now you've got it.",
            "Add a whole bunch or enough bunch of extra.",
            "Overhead to make NUM expert like what you give it.",
            "It is possible though."
        ],
        [
            "And the implementation is in this 2D_nomics if you're interested looking to look at it, but right now I just want to mention that this this can work.",
            "And it gives a really nice feature.",
            "It doesn't give the 28 speed up.",
            "Anne.",
            "My guess is we're hitting a memory.",
            "Maybe we're hitting some memory and this neighborhood just sitting another.",
            "Another bottleneck we should profile again after this.",
            "To be honest, maybe some other part of the program is now important.",
            "Remember we went from 600 to four.",
            "Hey, that's more than 100 times faster, so.",
            "It might have been worth the effort, but you don't really want to do this.",
            "Right, you don't want to change your code substantially and make it less readable just for the for a script to be faster.",
            "This is the point where you go.",
            "Maybe C++, maybe Fortran, maybe see baby.",
            "Is there it can work?",
            "Anne.",
            "I just want to mention before the break that there is an alternative that doesn't do parallel stuff necessarily.",
            "It kinda little bit cold seiano it's becoming very popular.",
            "I don't mention it because it comes out of Canada.",
            "It's it's very popular in the machine learning community and it does a similar thing.",
            "You give it an expression and it compiles it.",
            "And then because of that, it can run substantially faster.",
            "It takes slices and all of that, so that's great, but it doesn't use threads.",
            "It only uses feds if you can find a library that does the linear algebra for it, that's fine thread.",
            "So that's Blass, or I'm not sure if it doesn't backblast certainly, so if you can find if you don't know what classes doesn't matter, don't listen for the next minute, it could find the blast routines that you provide an if those are paralyzed and you spreads, it will use threads and be faster.",
            "But if that's not the case, it doesn't do threading itself.",
            "End of minutes.",
            "So.",
            "It can also use deep use and that I wish I had tried that, but I haven't so I can tell you if that's going to help.",
            "So doing it in piano, you do compile the compilation a little bit more.",
            "For both he creates.",
            "Placeholders for each of the variables that you want you create its expression.",
            "This function function compiles the function and then you call it like this.",
            "So does this work?",
            "So we're using 28 cores?",
            "Here these two, we already had an umpire was 20 seconds, not next made it into four and seiano makes it into 13, so definitely faster.",
            "And so definitely worthwhile if you issue.",
            "To try.",
            "But it's a little bit unfair because now not actually uses 28 cores, and this uses one, so you think, well, maybe if you tone it back to one will work better, But actually turns out to be almost to draw.",
            "So for some reason the an out and part of this is that the Tiana compilation is.",
            "A little bit more expensive so a larger, larger size might have done differently.",
            "The takeaway message from this slide is just try them.",
            "Try Seiano first because you don't have to change as much of your code.",
            "And see if it's fast enough.",
            "But no, it's only cereal, most likely an.",
            "You should learn tomorrow to figure out if that's really the case and how to figure it out.",
            "If you're not satisfied, maybe use Nomex, but Nomex should be the last thing you're using because after that, your code is substantially different.",
            "At least the the kernel of it is substantially different, and so it really that should be your last resort, but you can do parallel programming in Python And you can't speed your Python script up by more than a factor of 100 on bridges.",
            "And with that I think it's a good time to do a break and I guess we'll be back here.",
            "Let's take a 20 minute break.",
            "Oh yeah, this question, sorry.",
            "One quick question with your.",
            "With the NUM PY arrays, can you take sine and cosine you know?",
            "Are the math functions and things extended across them for you in for?",
            "I don't think not mix well, yeah, not mix produces an umpire do it too.",
            "So here's the.",
            "Can"
        ],
        [
            "It was an umpire, somebody you can do it?",
            "Yeah, because given factors to sign a pirate or something, you might have to do.",
            "NP does sign, so prefix it with the NUM py OK, so that it no just do elementwise like Fortran is element wise just like four times yes.",
            "Any other questions?",
            "Yeah, so I've heard of another just in time compiler for NUM PY called number and I'm not sure.",
            "I'm not familiar with if it's able to use threads or not, but I know that it's very simple to implement it.",
            "Simply like you put in a profile, basically a decorator or what it's called.",
            "Do you know how that fits how that?",
            "How does that compare to either of these?",
            "I think it tries to be more of an over arching like these are bits and pieces, so hopefully that will become something that is more coherent, but.",
            "It's fairly new and I don't know exactly how how it compares, sure.",
            "There are other just in time compilers, one that I have tried is called pie pie.",
            "Which is fantastic and fast, and but not all packages are compatible with Py Pi and even NUM PY itself is if he.",
            "So that's why I left it out because nobody is going to be the basis of all of your stuff so.",
            "Not not for this.",
            "For this for the scripts.",
            "Other questions.",
            "Alright, see you in 20 minutes."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, so you're here for HPC Python And that's a topic that just some people for.",
                    "label": 1
                },
                {
                    "sent": "Some people shouldn't even exist, because Python is not high performance.",
                    "label": 0
                },
                {
                    "sent": "You're here nonetheless.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So we'll assume for the sake of practicality that this exists.",
                    "label": 0
                },
                {
                    "sent": "What I really want to talk about here is the issue of performance and Python.",
                    "label": 1
                },
                {
                    "sent": "In many cases using Python issue is more convenient, but it is true that it's typically slower than compiled languages.",
                    "label": 0
                },
                {
                    "sent": "Today, as most of the week is about pushing the boundaries, so we're going to see how we can make Python faster than maybe your first attempt at writing a script, so it will be a point where you're writing something.",
                    "label": 0
                },
                {
                    "sent": "Python 'cause it's a quick script and it's great.",
                    "label": 0
                },
                {
                    "sent": "Now you're attacking a bigger problem and it's just too slow to be practical.",
                    "label": 0
                },
                {
                    "sent": "Maybe just a few things she can do to just fix up that script, so that's still practical.",
                    "label": 0
                },
                {
                    "sent": "But at some point there might be a time when you just have to switch to a compiled language to get full performance, and so one of the ways to know whether there's any way to improve your performance is to do performance analysis.",
                    "label": 0
                },
                {
                    "sent": "So there's going to be a mini performance session inside this session that won't use any of the tools that you will use tomorrow, but there are specific profiling tools for Python to find out where your bottlenecks are now.",
                    "label": 1
                },
                {
                    "sent": "What can we speed up, speed up, and then we'll talk about some ways that we can speed up our Python code.",
                    "label": 0
                },
                {
                    "sent": "Well, let's talk about NUM Py specifically, which is innovations of a lot of these things.",
                    "label": 0
                },
                {
                    "sent": "And then we'll look at a few ways we can actually do parallel computing in Python.",
                    "label": 0
                },
                {
                    "sent": "These are some packages that and it will see alone.",
                    "label": 0
                },
                {
                    "sent": "Listen 'cause we'll see them and then they will end up or I'll end with a couple of packages or more frameworks that are more geared towards data science and so they're more.",
                    "label": 0
                },
                {
                    "sent": "Here for mention, we can talk in more detail privately, but but I want to show you where where Python is is actually going to be probably more useful in a parallel right now.",
                    "label": 0
                },
                {
                    "sent": "Just because when you're doing data processing.",
                    "label": 0
                },
                {
                    "sent": "You might be limited basically by the speed by which you can read your data.",
                    "label": 0
                },
                {
                    "sent": "Rather, the speed of your scripts per say, in which case having a convenient parallel framework is more important than the writing beautiful see codes.",
                    "label": 0
                },
                {
                    "sent": "That is no faster because you're still waiting for the disks.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We're going to get started.",
                    "label": 0
                },
                {
                    "sent": "We're going to use bridges as as with everything else.",
                    "label": 0
                },
                {
                    "sent": "So if you're following along on your laptop, this is totally possible, but you might not get all of the speedups that we are seeing.",
                    "label": 1
                },
                {
                    "sent": "You still need a fair bit of.",
                    "label": 0
                },
                {
                    "sent": "Buy some packages.",
                    "label": 0
                },
                {
                    "sent": "So if I hope if this was your plan that you've already installed them most in most.",
                    "label": 0
                },
                {
                    "sent": "Python installations at pretty typically these days.",
                    "label": 0
                },
                {
                    "sent": "They come with a package manager and you can say I want these packages and it starts downloading and installing them, so it shouldn't be hard, but.",
                    "label": 1
                },
                {
                    "sent": "So, Interestingly enough, the same will have to be done on bridges.",
                    "label": 0
                },
                {
                    "sent": "Not all of these modules are in the standard Python module that that business has.",
                    "label": 0
                },
                {
                    "sent": "Which is fine because not every user might use them, so I put him in my directory and I was told.",
                    "label": 1
                },
                {
                    "sent": "A few hours ago it wasn't readable, so it made it made my directory on bridges readable, so you'll be able to copy it from there.",
                    "label": 0
                },
                {
                    "sent": "It also has some things to install.",
                    "label": 0
                },
                {
                    "sent": "Necessary packages at if you working on your own laptop and you just want to code, you can get them from from sign.",
                    "label": 1
                },
                {
                    "sent": "It's get repose.",
                    "label": 0
                },
                {
                    "sent": "You won't get the things that so don't do that on bridges because you'll be missing some stuff on bridge is what I want you to do.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "With the following, so you'll have to log into bridges.",
                    "label": 1
                },
                {
                    "sent": "So just SH, dash Y, your username and bridges that PSC that video and then.",
                    "label": 0
                },
                {
                    "sent": "And then install some coding software that sounds more.",
                    "label": 0
                },
                {
                    "sent": "Difficult, it might be so copy this whole directory over to your directory and go to the code directory within it within it and type setup or source.",
                    "label": 0
                },
                {
                    "sent": "Set up the source part is important and the first time you do this it will install in your local home directory the packages that were listed on the 1st slide as well as a standalone version of Spark, which you're totally welcome to delete afterwards.",
                    "label": 0
                },
                {
                    "sent": "If you don't want it, but that's what it will do.",
                    "label": 0
                },
                {
                    "sent": "Just so you know, it doesn't do that.",
                    "label": 0
                },
                {
                    "sent": "So do affect your home directory, so this is not your trading account.",
                    "label": 0
                },
                {
                    "sent": "If this is your actual breaches account for instructors, that might be in the audience is kind of put some stuff in there, check out what setup doesn't delete it after yes.",
                    "label": 0
                },
                {
                    "sent": "Repository is not present.",
                    "label": 0
                },
                {
                    "sent": "I tried to cheat blow.",
                    "label": 0
                },
                {
                    "sent": "It doesn't do it.",
                    "label": 0
                },
                {
                    "sent": "Friday, where you trying to do it on your laptop.",
                    "label": 0
                },
                {
                    "sent": "So OK, that's just good at quick shop that's not working so much.",
                    "label": 0
                },
                {
                    "sent": "Working for me, yeah.",
                    "label": 0
                },
                {
                    "sent": "Here they are saying this must not be working.",
                    "label": 0
                },
                {
                    "sent": "OK, let's give that a shot here.",
                    "label": 0
                },
                {
                    "sent": "Yeah, that's awesome, OK?",
                    "label": 0
                },
                {
                    "sent": "Very strange.",
                    "label": 0
                },
                {
                    "sent": "I can try fix that later.",
                    "label": 0
                },
                {
                    "sent": "In the meantime, see if the bridge is 1.",
                    "label": 0
                },
                {
                    "sent": "Works for you OK?",
                    "label": 0
                },
                {
                    "sent": "So here we are, log in so I'll do it live too, although for me the packages are already installed.",
                    "label": 0
                },
                {
                    "sent": "Spell averages.",
                    "label": 0
                },
                {
                    "sent": "Is this is this size big enough?",
                    "label": 0
                },
                {
                    "sent": "By the way, the font size in the back, yeah OK.",
                    "label": 0
                },
                {
                    "sent": "So should we have the whole screen?",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "I would have copied it already, but of course my directory is that directory, so there's a code directory.",
                    "label": 0
                },
                {
                    "sent": "There's a whole bunch of code in here we're not going to go into detail on each of them, just bunch of examples of all the modules.",
                    "label": 0
                },
                {
                    "sent": "Then all the packages that I said, but we do need to source set up and.",
                    "label": 0
                },
                {
                    "sent": "I can tell much of you are copying from this directory right now, so for me it will just say, yeah, this is already there.",
                    "label": 0
                },
                {
                    "sent": "This is already there for you.",
                    "label": 0
                },
                {
                    "sent": "It should, especially at the end say OK, I'm installing spark.",
                    "label": 0
                },
                {
                    "sent": "Give me a few seconds or I'm selling this so this could take a few minutes.",
                    "label": 0
                },
                {
                    "sent": "Which this is the perfect time to do this?",
                    "label": 0
                },
                {
                    "sent": "'cause will go on and we'll see what to do later.",
                    "label": 0
                },
                {
                    "sent": "But let's let it go.",
                    "label": 1
                },
                {
                    "sent": "It should be OK once it's done.",
                    "label": 0
                },
                {
                    "sent": "Perhaps we want to do our scaling and our testing on a dedicated node node on these login notes that we are in now.",
                    "label": 0
                },
                {
                    "sent": "So we're going to ask for an interactive job with interact Dash N 28 and then for good measure you're going to source set up again.",
                    "label": 1
                },
                {
                    "sent": "App 'cause it says some environment stuff up that doesn't translate through the interact.",
                    "label": 0
                },
                {
                    "sent": "Most of it doesn't, but not everything I turn.",
                    "label": 0
                },
                {
                    "sent": "It turns out in that same code directory is a makefile.",
                    "label": 0
                },
                {
                    "sent": "So which can we just mostly meant for you to have hints of how to use these things?",
                    "label": 0
                },
                {
                    "sent": "Most of them are just Python.",
                    "label": 1
                },
                {
                    "sent": "Run that script.",
                    "label": 1
                },
                {
                    "sent": "There's a few comparisons with compiled code and so.",
                    "label": 0
                },
                {
                    "sent": "As that Makefile compiler compiled code for YouTube as source setup, make help will tell you all of the different targets that you could type after make, but this is you don't have to do.",
                    "label": 0
                },
                {
                    "sent": "This makefile is just there for your convenience.",
                    "label": 0
                },
                {
                    "sent": "If you want to use it, and if you want to get an idea of how to use a different.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Things, but we're actually just going to type them in as we go along.",
                    "label": 0
                },
                {
                    "sent": "So those are the prerequisites, so I hope most of you are.",
                    "label": 0
                },
                {
                    "sent": "Installing this stuff, or maybe it's already done?",
                    "label": 0
                },
                {
                    "sent": "I'm not, I forgot exactly how long it take.",
                    "label": 0
                },
                {
                    "sent": "If you have problems by the end we get to hands-on.",
                    "label": 0
                },
                {
                    "sent": "Let us know and we'll see if we can fix it.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Sorry, said this, but I Python being at and I should ask who here has programmed in Python.",
                    "label": 1
                },
                {
                    "sent": "Excellent, OK, so that was my assumption that most of you would be, so that's good at Python is a high level interpreted languages.",
                    "label": 1
                },
                {
                    "sent": "You know, for those of you that haven't programmed in Python, it's also languages is fairly easy to read if you just take it line by line or at least easy to explain without having to explain why the curly braced us in a; Thus it's nice, but because it's high level, interpreted and interpreted means it takes one line at a time and executes.",
                    "label": 0
                },
                {
                    "sent": "It means that it is often at odds with high performance.",
                    "label": 1
                },
                {
                    "sent": "This is the fastest way to do it at.",
                    "label": 0
                },
                {
                    "sent": "However, it doesn't mean that you can write things more quickly, typically in Python, then in C or you spend less time debugging exactly what went wrong, so it could be faster to get your stuff going.",
                    "label": 0
                },
                {
                    "sent": "And if it takes you two months to write that C++ code or one day to write the Python code, and it only has to run for a day, it doesn't matter that this Python at ran for three days, right?",
                    "label": 0
                },
                {
                    "sent": "It still win, so there is a point in having a high level language.",
                    "label": 0
                },
                {
                    "sent": "And so I'm going to try and show the things that you should use when you find that your Python script is actually not quite as performance as you need it to be.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "But I won't be able to completely beat the compiled code.",
                    "label": 0
                },
                {
                    "sent": "So the thing that makes it slow is this.",
                    "label": 0
                },
                {
                    "sent": "This line by line translation this means.",
                    "label": 0
                },
                {
                    "sent": "A few things and.",
                    "label": 0
                },
                {
                    "sent": "I know there are Python implementations that improve upon this, But the standard one at this is this is the case C Python you take.",
                    "label": 0
                },
                {
                    "sent": "The other compiler man's compiler interpreter takes a line of your Python code, tries to figure out what it says, and then translate that in library calls that are then subsequently done, and so that means that it has to do it for every line.",
                    "label": 0
                },
                {
                    "sent": "Compiler takes.",
                    "label": 0
                },
                {
                    "sent": "Your whole code, translates it at once, and.",
                    "label": 0
                },
                {
                    "sent": "That means the translation it has to be done once, but also you can't.",
                    "label": 0
                },
                {
                    "sent": "It can cross optimized.",
                    "label": 0
                },
                {
                    "sent": "You can see that it's certain line doesn't do anything.",
                    "label": 0
                },
                {
                    "sent": "You can see there's a certain line could be done earlier, just makes because it made sense because the data was already processor etc etc.",
                    "label": 0
                },
                {
                    "sent": "All these optimizations you're losing.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "It's a dynamic language, part of the structure of data types such that they carry basically their data type with them, which means every time you use a data type, it's checking using a datum.",
                    "label": 1
                },
                {
                    "sent": "Its data type is checked.",
                    "label": 1
                },
                {
                    "sent": "Memory management is automatic, which is very convenient, but also means that it has to keep track of how much memory is what you're not using anymore, what it can throw away overhead.",
                    "label": 0
                },
                {
                    "sent": "All these extra bits of information that every piece of data has means that streaming to the processor isn't as fast as it could be, and guess what?",
                    "label": 1
                },
                {
                    "sent": "CPU's are built to handle streaming data best, so less performance.",
                    "label": 0
                },
                {
                    "sent": "Those are all things that make Python.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Not a performance, so I'm going to have.",
                    "label": 0
                },
                {
                    "sent": "Yes, this one is going to be something that you should never do.",
                    "label": 0
                },
                {
                    "sent": "This is a sin I'm committing right in front of you.",
                    "label": 0
                },
                {
                    "sent": "I'm going to simulate the diffusion equation, which is kind of a time dependent version of the Laplace equation we saw earlier in the challenge with Python.",
                    "label": 1
                },
                {
                    "sent": "You can do it.",
                    "label": 1
                },
                {
                    "sent": "This is the equation for those of you that like equations like Me 2 dimensional will put it on a square domain, so the X Files Go for an X1 to X2 and Y values from the same and will set the.",
                    "label": 0
                },
                {
                    "sent": "The boundary conditions 220 on the boundary but will give it some initial condition, and this is a diffusion can also think of it as a heat equation.",
                    "label": 1
                },
                {
                    "sent": "Is the same iteration.",
                    "label": 0
                },
                {
                    "sent": "So you could imagine you have heated up a plate and you just see how it how that heat gets dissipated overtime.",
                    "label": 0
                },
                {
                    "sent": "Anne.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This is what it will look like, so I took this hot plate.",
                    "label": 0
                },
                {
                    "sent": "Essentially an gave it 4 hot spots and then I'm just going to see as a function of time how it evolves and I am plotting this by the way, Python comes to very nice plotting packages and so you can put plotting in your code without too much trouble.",
                    "label": 0
                },
                {
                    "sent": "It's a lot more trouble in compiled language to do that in a portable way, so you can see it slowly diffuses and it becomes some diffuse.",
                    "label": 0
                },
                {
                    "sent": "Almost uniform I have.",
                    "label": 0
                },
                {
                    "sent": "Temperature or density depending how you want to look at it.",
                    "label": 0
                },
                {
                    "sent": "Eventually it would be completely black, completely diffused out.",
                    "label": 0
                },
                {
                    "sent": "So this is what we're after.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And and as with everything as with our holiday, so we do that.",
                    "label": 0
                },
                {
                    "sent": "How do we solve this while we discretize, so I'm not apologetic for the poor resolution here because this is exactly the reason resolution that I intended to have you cut it in squares.",
                    "label": 1
                },
                {
                    "sent": "And basically what happens is that the four neighbors of each block have an influence on the middle block.",
                    "label": 0
                },
                {
                    "sent": "It's not exactly the average, as in the Laplace challenge, but it's it's a fraction of that effectively.",
                    "label": 0
                },
                {
                    "sent": "OK, so we're going to do this expensive.",
                    "label": 0
                },
                {
                    "sent": "Times stepping, we're going to take the average and add parship apart of that average to the center and do that for every pixel.",
                    "label": 0
                },
                {
                    "sent": "We're using graphics in Python we use Matplotlib is kind of doesn't come with it, but it almost always comes with it anyway.",
                    "label": 1
                },
                {
                    "sent": "And for C++ and Fortran, if you're curious and if you're running it and if the graphics transfers nicely over the wireless, which I'm not sure off, uses a routine called PG plot, which is ancient and yet still very useful if you are.",
                    "label": 1
                },
                {
                    "sent": "If you need graphics on Linux.",
                    "label": 0
                },
                {
                    "sent": "Within a program, another thing that I've done so these I'll show you the codes in the second, but an all the parameters are always the same for the FORTRAN to C++ an and the Python And I just took C++.",
                    "label": 0
                },
                {
                    "sent": "We're not going to use this rather than for comparison, and I like C++ just a tad better than C. So all the parameters are in this gift to the parents to GY.",
                    "label": 0
                },
                {
                    "sent": "So we want to play with it.",
                    "label": 0
                },
                {
                    "sent": "We can change that.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "That file and it looks like this, so this is totally valid Python code which is executed.",
                    "label": 0
                },
                {
                    "sent": "Possibly exactly the point, because it's going to get included, so diffusion constant D is set, the range of X, which is the same as the range of Y.",
                    "label": 0
                },
                {
                    "sent": "In this case, how long we want to run this for?",
                    "label": 0
                },
                {
                    "sent": "What are spatial resolution is that is that that's the DX.",
                    "label": 0
                },
                {
                    "sent": "How often we want to get output.",
                    "label": 0
                },
                {
                    "sent": "So graphics, or at least a line saying how far along we are.",
                    "label": 0
                },
                {
                    "sent": "So this is .5 and whether we better not, we want graphics or not.",
                    "label": 0
                },
                {
                    "sent": "OK, so.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "See how that performs.",
                    "label": 0
                },
                {
                    "sent": "Have got speakers.",
                    "label": 0
                },
                {
                    "sent": "They do, essentially essentially this anger.",
                    "label": 0
                },
                {
                    "sent": "Their direct translations are called F2, DC, PF90, or PIE.",
                    "label": 0
                },
                {
                    "sent": "You can look at them there in that code directory and they're literally direct translations of one another.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So we're going to first thing we have to do with compiled code, which is a drawback.",
                    "label": 0
                },
                {
                    "sent": "Is compilers, so this is the point where we're using the Makefile, and the only point, so we're going to make diffusion, C, C++, version, and F-90.",
                    "label": 1
                },
                {
                    "sent": "So this creates the binaries for those will show you how it does it, and I've created this little alias here.",
                    "label": 0
                },
                {
                    "sent": "The setup will do it for you too.",
                    "label": 0
                },
                {
                    "sent": "You can use it.",
                    "label": 0
                },
                {
                    "sent": "It's called the time.",
                    "label": 0
                },
                {
                    "sent": "Which basically just calls time.",
                    "label": 1
                },
                {
                    "sent": "At the time is a built-in for bash, but I like anytime because it only gives me the elapsed time.",
                    "label": 1
                },
                {
                    "sent": "Right now I know if you use the time, the time command in front of any other commands.",
                    "label": 0
                },
                {
                    "sent": "So yeah, it'll give you 3 timings and I don't want to get into what the differences are right now I just care how how long I have to wait for this to go so the elapsed time and so everything will say he lapsed.",
                    "label": 0
                },
                {
                    "sent": "So the compilation to 1.8 seconds.",
                    "label": 0
                },
                {
                    "sent": "Alright, so now these are ready to run.",
                    "label": 0
                },
                {
                    "sent": "The device is already ready ready to.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So let's run all three.",
                    "label": 0
                },
                {
                    "sent": "Let's run the CPP.",
                    "label": 0
                },
                {
                    "sent": "That took 2.44 seconds.",
                    "label": 0
                },
                {
                    "sent": "Obviously I switched off graphics here and there.",
                    "label": 0
                },
                {
                    "sent": "Fortran is slightly slightly faster, 2.37 seconds and the Python two 599.90 seconds.",
                    "label": 1
                },
                {
                    "sent": "So if there was nothing to be done, we would now go and have a nice afternoon.",
                    "label": 0
                },
                {
                    "sent": "And then that'll be it.",
                    "label": 1
                },
                {
                    "sent": "'cause this does not look promising for Python for HPC.",
                    "label": 0
                },
                {
                    "sent": "Python as his nature in his native form is not high performance, and it's not intended to be in.",
                    "label": 0
                },
                {
                    "sent": "It will never be.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "So even the fact that I had to compile also just a simple code doesn't.",
                    "label": 0
                },
                {
                    "sent": "I mean doesn't add up to to the overhead of Python.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Why do we bother?",
                    "label": 0
                },
                {
                    "sent": "Because the whole code for diffusion is here.",
                    "label": 0
                },
                {
                    "sent": "This is the whole code.",
                    "label": 0
                },
                {
                    "sent": "I left out the plotting part, but it's just one function that's that's that's in this other diff 2D plots file, But that's it.",
                    "label": 0
                },
                {
                    "sent": "So we do it because.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "You can write very clear, concise code.",
                    "label": 1
                },
                {
                    "sent": "It's very flexible as a lot of packages, and it's easy to use, so your development time goes down and the performance hit is about as bad as it can get when you do it for diffusion equation and the diffusion equation every way the Python doesn't natively, every pixel is its own object, knows what type is this?",
                    "label": 0
                },
                {
                    "sent": "I have to go over to over each pixel and and do some numerical analysis on it every time there's a check.",
                    "label": 0
                },
                {
                    "sent": "If it's the right type, that analysis is even possible.",
                    "label": 0
                },
                {
                    "sent": "Or at each pixel needs only like a few, a few summations and multiplications.",
                    "label": 1
                },
                {
                    "sent": "Very little work per per work unit, so to speak, so it's very tightly coupled whenever you have a workflow that can be paralyzed, but it's very tightly coupled, you don't want every date, and to have a whole bunch of extra data, like what type it is, because it's going to slow it down and watch.",
                    "label": 0
                },
                {
                    "sent": "The overhead is very high if your work units are low.",
                    "label": 0
                },
                {
                    "sent": "Now, so we were taking more or less the worst possible case.",
                    "label": 0
                },
                {
                    "sent": "This is on purpose because we're going to make that case still go very, very very, very much faster than it is now, just not compiled first.",
                    "label": 0
                },
                {
                    "sent": "OK, so we'll learn a lot of new tricks as we go along.",
                    "label": 1
                },
                {
                    "sent": "Now, if you're using Python for post processing, and most of what you're doing is fall out, then the comparison is much less bad because FiOS typically limited by how fast your disks are.",
                    "label": 1
                },
                {
                    "sent": "Your file system is, so it doesn't have to be this bad.",
                    "label": 0
                },
                {
                    "sent": "There's ways to improve things with dedicated packages, which is exactly what will do.",
                    "label": 1
                },
                {
                    "sent": "You can sometimes Lucius compiled languages to get the worst performance hits out of the way so.",
                    "label": 0
                },
                {
                    "sent": "We have to do that first.",
                    "label": 0
                },
                {
                    "sent": "We first have to see.",
                    "label": 0
                },
                {
                    "sent": "OK, this is.",
                    "label": 0
                },
                {
                    "sent": "These were all serial codes.",
                    "label": 0
                },
                {
                    "sent": "I thought was horrific 1st Order of business make Python a little less horrific even before we start paralyzing, you can't write an allocation request and say I need 600 times the amount of time that I really need to because I'm writing it in Python to just like and say, well, you know what, I'll run it on 600 nodes and it'll run at the same time.",
                    "label": 0
                },
                {
                    "sent": "You're not going to get those 600 nodes right?",
                    "label": 0
                },
                {
                    "sent": "That's not the right way to do it so.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Let's clean this up.",
                    "label": 0
                },
                {
                    "sent": "Well.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Mattoon this.",
                    "label": 0
                },
                {
                    "sent": "Code there's two.",
                    "label": 0
                },
                {
                    "sent": "For our purposes.",
                    "label": 0
                },
                {
                    "sent": "They make two parts, 2 bottlenecks that we can look at.",
                    "label": 1
                },
                {
                    "sent": "The first one is CPU performance, like.",
                    "label": 0
                },
                {
                    "sent": "How much CPU did be used and what part of the code really made it that slow?",
                    "label": 1
                },
                {
                    "sent": "So this is that CPU performance and there's two convenient packages for Python that they'll tell you exactly where your code spends the most time, so there's no point in looking at the code and go, and that one.",
                    "label": 0
                },
                {
                    "sent": "Seems like I can use it.",
                    "label": 0
                },
                {
                    "sent": "Package to make it faster if you don't know if that line has any significant contribution to the overall runtime.",
                    "label": 0
                },
                {
                    "sent": "So this is what you want to do.",
                    "label": 0
                },
                {
                    "sent": "You want to figure out where to hotspot.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Sir.",
                    "label": 0
                },
                {
                    "sent": "So you still look at see profile first.",
                    "label": 0
                },
                {
                    "sent": "It comes with Python actually don't have to install it.",
                    "label": 0
                },
                {
                    "sent": "See Profile is a multi faster version of profile.",
                    "label": 0
                },
                {
                    "sent": "So everybody you should see profile but you have to say that it is the profile exists as well and you still as with anything that is a test, you were typically just on a smaller representative case, but so we're going to look at what happens when we run our code through this profiler.",
                    "label": 0
                },
                {
                    "sent": "And this is the command you use.",
                    "label": 0
                },
                {
                    "sent": "So one of the nice things about the profile is you don't have to change anything to your code.",
                    "label": 0
                },
                {
                    "sent": "You'll learn tomorrow if you go to the former session that this is called instrumenting.",
                    "label": 0
                },
                {
                    "sent": "When you have to change your code for.",
                    "label": 0
                },
                {
                    "sent": "For the purposes of profiling this, for this package you don't have to, but you have to start Python with this Dash MC profile, which loads this module.",
                    "label": 0
                },
                {
                    "sent": "This for the MX4 and then I'd like the results to be sorted by cumulative time so the largest time is on top.",
                    "label": 0
                },
                {
                    "sent": "That makes sense and so when I do that when I run this.",
                    "label": 0
                },
                {
                    "sent": "I can see.",
                    "label": 0
                },
                {
                    "sent": "It's hard to see I can see that it's as well.",
                    "label": 0
                },
                {
                    "sent": "In Line 9 of death to the NUM py, you're spending a lot of time and then in line 15.",
                    "label": 0
                },
                {
                    "sent": "I guess now you think that's great.",
                    "label": 0
                },
                {
                    "sent": "I'll look at those lines.",
                    "label": 0
                },
                {
                    "sent": "Turns out those lines are function calls.",
                    "label": 0
                },
                {
                    "sent": "See profile only measures the time spent in functions, which is very good when you have a nice modular code that's already split up in functions and you want to know which function is the most expensive.",
                    "label": 0
                },
                {
                    "sent": "You saw the code, there's few slides earlier.",
                    "label": 0
                },
                {
                    "sent": "It wasn't one big monolithic code.",
                    "label": 0
                },
                {
                    "sent": "Help Erica Bash it in his software development session because that's not how you write code, but it is very convenient because you know, I want to show that it doesn't show this for this program.",
                    "label": 0
                },
                {
                    "sent": "In this case, this tool cannot show us where the problem is because I don't have enough functions.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Here's another tool that can, it's called line profiler.",
                    "label": 1
                },
                {
                    "sent": "Hey, that makes sense, line by line and so again, do this on a representative case and they can tell you line by line where things are.",
                    "label": 1
                },
                {
                    "sent": "Now you don't have to have your your code in a function, because as it turns out, you need to instrument anything you want to measure the times of with a little thing ylitalo header, it's X profile will see it in a second, but that's all you have to add, but you have to add it to a function and that function can be one big monolithic code.",
                    "label": 0
                },
                {
                    "sent": "So and then, once you've done that, you run it through the command called current Prof with a couple of options.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So suppose this was my code, this is.",
                    "label": 0
                },
                {
                    "sent": "Only only a demonstration obviously I don't know what this would do, but you have a fairly large lists of once and I'm computing the string value of the 01 and then I.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Added two is the one I deleted.",
                    "label": 0
                },
                {
                    "sent": "I print it so this is just a bit of nonsense code to profile it I have to wrap that into a function if it's already in a function, so if it is well written code you just add edit profile to any function you want to go into so you can be very selective in what functions you you measure.",
                    "label": 0
                },
                {
                    "sent": "So you put that profile in the front and then you run it through current Prof Dash L which is which means line by line.",
                    "label": 0
                },
                {
                    "sent": "It doesn't have to do it line by line.",
                    "label": 0
                },
                {
                    "sent": "And this fee, which means I want to actually see if you the results.",
                    "label": 0
                },
                {
                    "sent": "I know why you wouldn't want to do that, but.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And this is the output, so you're running in that way.",
                    "label": 0
                },
                {
                    "sent": "The first 2 lines at the output of the of the actual program, and after that comes to profiling.",
                    "label": 0
                },
                {
                    "sent": "Information, and so it was.",
                    "label": 0
                },
                {
                    "sent": "C is line by line.",
                    "label": 0
                },
                {
                    "sent": "We see how many times the line was hit, how many, how much time it took there, what percentage of the time it took there.",
                    "label": 0
                },
                {
                    "sent": "And so we can see that line number 4 takes 75% of the time is if this was something we wanted to optimize, that would be the line we attack.",
                    "label": 0
                },
                {
                    "sent": "The next line would be the Dell, although that's probably worthwhile.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The second aspect that we might want to know about or where a bottleneck might lie is memory performance.",
                    "label": 0
                },
                {
                    "sent": "This can creep up suddenly like your stuff is working fine, and then you run a bigger case an IT crashes and memory might be as.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And so you're you should worry about memory even.",
                    "label": 1
                },
                {
                    "sent": "Even if you're not hitting it anywhere, because as soon as you run out of memory on any modern machine, a couple of things could happen.",
                    "label": 1
                },
                {
                    "sent": "If you are more or less lucky, what will happen is that the operating system will start using a hard drive as part of memory, so swapping which it does so that you can keep going and in the hope that this terribly memory intensive process will will end soon.",
                    "label": 0
                },
                {
                    "sent": "But it's very slow, and you probably have experienced this sometimes, and that's the good case in the bad case.",
                    "label": 1
                },
                {
                    "sent": "You're on a system that doesn't have a hard drive or hasn't set up any swap space, in which case your application crashes.",
                    "label": 0
                },
                {
                    "sent": "The OS will see this.",
                    "label": 0
                },
                {
                    "sent": "This model is taking too much memory.",
                    "label": 0
                },
                {
                    "sent": "I'm going to kill it.",
                    "label": 0
                },
                {
                    "sent": "But if you're in an even less ideally a situation, you might the OS might make the wrong decision on which process to kill and might kill.",
                    "label": 0
                },
                {
                    "sent": "I don't know your SSH daemon and so now you can log into the code or some other system process at disconnect especially happened when your memory goes up very fast, and then the OS has no time to decide which one and just fix it and kills the wrong one.",
                    "label": 0
                },
                {
                    "sent": "No trash is also also no good, but a lot harder to to detect because you can't even go and see what's wrong.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So you want to know how much memory you are using, and that's the thing with Python, you can't always be completely sure like in see you have to allocate your memory or at least you should be doing that.",
                    "label": 0
                },
                {
                    "sent": "In Python, you just use objects.",
                    "label": 0
                },
                {
                    "sent": "And some things.",
                    "label": 0
                },
                {
                    "sent": "At some point the optics gold, like they're not used anymore, and I cleaned up.",
                    "label": 1
                },
                {
                    "sent": "See now that makes this into something that happens in the background, and you might want to know where things are happening at the same time.",
                    "label": 0
                },
                {
                    "sent": "Some objects you don't quite sure how much memory day takes.",
                    "label": 1
                },
                {
                    "sent": "Things tend to be more visible in, especially in C is no OK.",
                    "label": 0
                },
                {
                    "sent": "This is structural.",
                    "label": 0
                },
                {
                    "sent": "Just look at this definition.",
                    "label": 0
                },
                {
                    "sent": "At 64 bytes.",
                    "label": 0
                },
                {
                    "sent": "I know what I'm at.",
                    "label": 1
                },
                {
                    "sent": "You don't know that with Python objects to be.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "The way Python.",
                    "label": 0
                },
                {
                    "sent": "Trace memory is it through a garbage collector, so every object that was ever used skip track off an it sees if you're still using it.",
                    "label": 1
                },
                {
                    "sent": "How does it know you're still using it?",
                    "label": 0
                },
                {
                    "sent": "You're using it.",
                    "label": 0
                },
                {
                    "sent": "If you have a name for it.",
                    "label": 0
                },
                {
                    "sent": "So if it's if it's a variable that's in a function.",
                    "label": 0
                },
                {
                    "sent": "I just had a equals two that fuck that variable left in this function.",
                    "label": 0
                },
                {
                    "sent": "As soon as you exit the function that A isn't there anymore, but that object still lives.",
                    "label": 0
                },
                {
                    "sent": "The garbage collector C is.",
                    "label": 1
                },
                {
                    "sent": "Oh, here's an object.",
                    "label": 0
                },
                {
                    "sent": "Nobody is using it.",
                    "label": 0
                },
                {
                    "sent": "Nobody is pointing to it.",
                    "label": 0
                },
                {
                    "sent": "It has no name in where I am now.",
                    "label": 0
                },
                {
                    "sent": "Get rid of it.",
                    "label": 1
                },
                {
                    "sent": "You can also do this by hands and this is sometimes a good idea if you're patching up big monolithic parts, like maybe the diffusion code when your note, but you don't need.",
                    "label": 1
                },
                {
                    "sent": "An object anymore?",
                    "label": 1
                },
                {
                    "sent": "You know it's pretty large.",
                    "label": 0
                },
                {
                    "sent": "You can delete and then just just disappears.",
                    "label": 0
                },
                {
                    "sent": "So I did have a little example here, so X was a little list of four zeros.",
                    "label": 0
                },
                {
                    "sent": "One side LXX does not exist anymore, so when I try to print it, this has not defined, which is exactly the point.",
                    "label": 0
                },
                {
                    "sent": "OK, so you can manage memory to some extent in Python, but what if you're not quite sure what's going?",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "You need a memory profiler.",
                    "label": 1
                },
                {
                    "sent": "So this will go like the line profiler line by line and see what happens to the memory.",
                    "label": 1
                },
                {
                    "sent": "It's very good for caching memory leaks as well.",
                    "label": 1
                },
                {
                    "sent": "An unexpected large memory usage especially.",
                    "label": 0
                },
                {
                    "sent": "Looks nice, but it needs the same instrumentation as the as a line profiler so that saying.",
                    "label": 1
                },
                {
                    "sent": "Instrumented code I can run through the memory profiler.",
                    "label": 0
                },
                {
                    "sent": "It just does something else.",
                    "label": 0
                },
                {
                    "sent": "YT profiles memory and then for this to run recently.",
                    "label": 0
                },
                {
                    "sent": "Well, you need the P as usual, but it wasn't the list and it will be installed.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So what happens when I take that thing?",
                    "label": 0
                },
                {
                    "sent": "A bit of cold that it did.",
                    "label": 0
                },
                {
                    "sent": "Just funny.",
                    "label": 0
                },
                {
                    "sent": "1 one is a one.",
                    "label": 0
                },
                {
                    "sent": "I call it with Python but now with Dash M memory profiler so there's no name.",
                    "label": 1
                },
                {
                    "sent": "There's no current draw for something.",
                    "label": 0
                },
                {
                    "sent": "This is just my foundation.",
                    "label": 0
                }
            ]
        },
        "clip_31": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And this is what it tells me.",
                    "label": 0
                },
                {
                    "sent": "So again, line by line it tells me.",
                    "label": 0
                },
                {
                    "sent": "Where I'm standing now, where I'm spending my time and how much memory I'm taking and how much it increments and so we see on Line 4 that I get an increment of 32 megabytes, which makes sense because that's pretty much what this is.",
                    "label": 0
                },
                {
                    "sent": "And then that memory stays around, stays around.",
                    "label": 0
                },
                {
                    "sent": "There's no.",
                    "label": 0
                },
                {
                    "sent": "There's a small increase here 'cause I've made a string.",
                    "label": 0
                },
                {
                    "sent": "Nothing here 'cause I'm added to this training.",
                    "label": 0
                },
                {
                    "sent": "Apparently adding that is so little it doesn't measure in megabytes.",
                    "label": 0
                },
                {
                    "sent": "And then when idel that variable I get back my memory.",
                    "label": 0
                },
                {
                    "sent": "OK, so.",
                    "label": 0
                },
                {
                    "sent": "Here it should be obvious where it was, but the memory profiler will tell me this is where I get extra memory.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "So we can do this.",
                    "label": 0
                },
                {
                    "sent": "We can.",
                    "label": 0
                },
                {
                    "sent": "We can now profile these things.",
                    "label": 0
                }
            ]
        },
        "clip_32": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So let's give this a shot.",
                    "label": 0
                },
                {
                    "sent": "At who here has had trouble with installing this this little bit of modules in the in their home account data source set up anybody for which that failed.",
                    "label": 0
                },
                {
                    "sent": "Effect.",
                    "label": 0
                },
                {
                    "sent": "Oh get the patches in Wichita before your own.",
                    "label": 0
                },
                {
                    "sent": "That's good.",
                    "label": 0
                },
                {
                    "sent": "OK, OK, that's that's good to know.",
                    "label": 0
                },
                {
                    "sent": "So if you yeah, so if you don't want to go go to the site and then.",
                    "label": 0
                },
                {
                    "sent": "If you go to the public section, there are stairs zip.",
                    "label": 1
                },
                {
                    "sent": "As if link here on the right, I did not.",
                    "label": 1
                },
                {
                    "sent": "Don't see right now 'cause you only get half my screen.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "There it is.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "So if everybody has been able to install these things, let's see if we can try and take that code, reduce.",
                    "label": 0
                },
                {
                    "sent": "So here we are.",
                    "label": 0
                },
                {
                    "sent": "So I've got the diff to everything that's got to do with the Fusion school diff.",
                    "label": 1
                },
                {
                    "sent": "To do something organizes this a little bit.",
                    "label": 0
                },
                {
                    "sent": "So the parents one is where you want to.",
                    "label": 0
                },
                {
                    "sent": "Play a little bit with the parameters, probably.",
                    "label": 0
                },
                {
                    "sent": "Let's do that.",
                    "label": 0
                },
                {
                    "sent": "On the terminal favorite graphics is false already at crank this one up.",
                    "label": 0
                },
                {
                    "sent": "The smaller the axe, the longer this takes by Thinker Cube.",
                    "label": 0
                },
                {
                    "sent": "So for the purposes of illustration.",
                    "label": 0
                },
                {
                    "sent": "Actually, comments don't work in this thing, so .2.",
                    "label": 0
                },
                {
                    "sent": "For instance.",
                    "label": 0
                },
                {
                    "sent": "And then if we ran it again, this is just now should become a reasonable time.",
                    "label": 0
                },
                {
                    "sent": "Alright, you don't run the parents, you run the.",
                    "label": 0
                },
                {
                    "sent": "Sing a song.",
                    "label": 0
                },
                {
                    "sent": "Yeah, so this is it goes up to 15 as the parameter file suits and so one I want you guys to try and take this code.",
                    "label": 0
                },
                {
                    "sent": "Should look at it.",
                    "label": 0
                },
                {
                    "sent": "You'll see that I've put everything in a main function, so it should be fairly easy to.",
                    "label": 0
                },
                {
                    "sent": "Yes.",
                    "label": 0
                },
                {
                    "sent": "So it should be pretty.",
                    "label": 0
                },
                {
                    "sent": "Yeah, but the red is pretty bad fix that.",
                    "label": 0
                },
                {
                    "sent": "I'll fix the Rep when you guys instrument this code with an ad profile and run it through the profilers you guys try that and then you can tell me afterwards which line had the most memory usage increase and which line had the most CPU or time usage ready.",
                    "label": 1
                },
                {
                    "sent": "See if we can do here.",
                    "label": 0
                },
                {
                    "sent": "House.",
                    "label": 0
                },
                {
                    "sent": "Let's say I give you 3 minutes, OK.",
                    "label": 0
                },
                {
                    "sent": "Try this.",
                    "label": 0
                },
                {
                    "sent": "Yep.",
                    "label": 0
                },
                {
                    "sent": "Yes, so get an interactive note.",
                    "label": 0
                },
                {
                    "sent": "I mean, yeah.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "Put back to point away so you should have been doing.",
                    "label": 0
                },
                {
                    "sent": "Cops",
                    "label": 0
                }
            ]
        },
        "clip_33": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So you should have logged into bridges and then this setup and then you get an interactive node setup once more.",
                    "label": 0
                },
                {
                    "sent": "This is really only needed if you need that each time function that turns out and I don't do make help but just edit that, go to the source directory so you already there CDs.",
                    "label": 0
                },
                {
                    "sent": "HPC Pies code an edited if 2D dot PY at profile to that one function and the slides are up on the on the wiki.",
                    "label": 0
                },
                {
                    "sent": "But pull up the first one.",
                    "label": 0
                }
            ]
        },
        "clip_34": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So the current profit is the first one you're going to try after that.",
                    "label": 0
                },
                {
                    "sent": "We write those down.",
                    "label": 0
                },
                {
                    "sent": "8 think there must be space.",
                    "label": 0
                },
                {
                    "sent": "Do whatever.",
                    "label": 0
                },
                {
                    "sent": "Kern, Prof V. Lower case L. That's what that is, and then whatever his name is.",
                    "label": 0
                },
                {
                    "sent": "So in this case, if.",
                    "label": 0
                },
                {
                    "sent": "To the top, I and then the other one.",
                    "label": 0
                },
                {
                    "sent": "I think I can remove that.",
                    "label": 0
                },
                {
                    "sent": "IPhone Dash M. It's just that.",
                    "label": 0
                },
                {
                    "sent": "Memory_ profiler.",
                    "label": 0
                },
                {
                    "sent": "And again, Dave today.",
                    "label": 0
                },
                {
                    "sent": "Dog.",
                    "label": 0
                },
                {
                    "sent": "It's better.",
                    "label": 0
                },
                {
                    "sent": "Try that.",
                    "label": 0
                },
                {
                    "sent": "Raise your hand if you plan to Sue, profile at least one of them.",
                    "label": 0
                },
                {
                    "sent": "OK, how about two of them?",
                    "label": 0
                },
                {
                    "sent": "Working on that one OK. One of them needed an extra.",
                    "label": 0
                },
                {
                    "sent": "Or something else?",
                    "label": 0
                }
            ]
        },
        "clip_35": {
            "is_summarization_sample": false,
            "summarization_data": []
        },
        "clip_36": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Alright, so.",
                    "label": 0
                },
                {
                    "sent": "Shout out if you have profile that so far which one has the.",
                    "label": 0
                },
                {
                    "sent": "Most CPU usage which line just a number here.",
                    "label": 0
                },
                {
                    "sent": "Nobody.",
                    "label": 0
                },
                {
                    "sent": "4848 any other ones that are close to that?",
                    "label": 0
                },
                {
                    "sent": "47 well, that's still OK, so.",
                    "label": 0
                },
                {
                    "sent": "That computation takes the longest.",
                    "label": 0
                },
                {
                    "sent": "I'll believe you.",
                    "label": 0
                },
                {
                    "sent": "Because it makes sense and I saw it too.",
                    "label": 0
                },
                {
                    "sent": "So the way we find it out just so that you have the solution or you see the solution, all you do is add.",
                    "label": 0
                },
                {
                    "sent": "Yeah, that's.",
                    "label": 0
                },
                {
                    "sent": "Profile here.",
                    "label": 0
                },
                {
                    "sent": "And then.",
                    "label": 0
                },
                {
                    "sent": "Rather than running it through Python, you run it through current Prof.",
                    "label": 0
                },
                {
                    "sent": "It's a little slower as you can tell.",
                    "label": 0
                },
                {
                    "sent": "Last thing is, if I can't break it, it just does what it was so far.",
                    "label": 0
                },
                {
                    "sent": "So this this shouldn't be too bad and I see the same the same effect.",
                    "label": 0
                },
                {
                    "sent": "This is a large one I see dense.",
                    "label": 0
                },
                {
                    "sent": "Next is a pretty large one too.",
                    "label": 0
                },
                {
                    "sent": "So many fori itself as well.",
                    "label": 0
                },
                {
                    "sent": "Yes, this is the downside of having a nice large funds.",
                    "label": 0
                },
                {
                    "sent": "Then the output is little garbled.",
                    "label": 0
                },
                {
                    "sent": "It look better on your terminal I'm sure.",
                    "label": 0
                },
                {
                    "sent": "Alright, how about memory?",
                    "label": 0
                },
                {
                    "sent": "48 yes.",
                    "label": 0
                },
                {
                    "sent": "But what you can do?",
                    "label": 0
                },
                {
                    "sent": "Is making it even?",
                    "label": 0
                },
                {
                    "sent": "Smaller test case and just only run it for.",
                    "label": 0
                },
                {
                    "sent": "One rather than 15.",
                    "label": 0
                },
                {
                    "sent": "Price on dash.",
                    "label": 0
                },
                {
                    "sent": "Memory profiler.",
                    "label": 0
                },
                {
                    "sent": "Yeah it will be slower, which is exactly why you want to run this for smaller case.",
                    "label": 0
                },
                {
                    "sent": "And then I tried to current profit residents were horrible.",
                    "label": 0
                },
                {
                    "sent": "This one is a lot better, not worse.",
                    "label": 0
                },
                {
                    "sent": "Air.",
                    "label": 0
                },
                {
                    "sent": "Doesn't like it when it still does it.",
                    "label": 0
                },
                {
                    "sent": "It doesn't like it, but it still stopped.",
                    "label": 0
                },
                {
                    "sent": "So it's not.",
                    "label": 0
                },
                {
                    "sent": "It's kind of interesting 'cause it seems to happen at.",
                    "label": 0
                },
                {
                    "sent": "Apparently odd points, right?",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "You don't, you don't see any of it.",
                    "label": 0
                },
                {
                    "sent": "Did you duty at profile?",
                    "label": 0
                },
                {
                    "sent": "Did you add that that little line?",
                    "label": 0
                },
                {
                    "sent": "Yep.",
                    "label": 0
                },
                {
                    "sent": "Best Buy I don't know.",
                    "label": 0
                },
                {
                    "sent": "That's a good idea.",
                    "label": 0
                },
                {
                    "sent": "Did you add this to the line before the definition?",
                    "label": 0
                },
                {
                    "sent": "Yeah, that's the thing.",
                    "label": 0
                },
                {
                    "sent": "So that's the one that makes the profile go.",
                    "label": 0
                },
                {
                    "sent": "I have to pay attention here.",
                    "label": 0
                },
                {
                    "sent": "It's all you have to do for every function you want to inspect by the desert.",
                    "label": 0
                },
                {
                    "sent": "Now unfortunately, it won't run with that if you don't run it through the profiler.",
                    "label": 0
                },
                {
                    "sent": "So after you are done profiling, you best remove that, but that's that's the case for any performance tool that uses instrumentation, unfortunately.",
                    "label": 0
                },
                {
                    "sent": "Someone should write an auto instrumental for this one, but.",
                    "label": 0
                },
                {
                    "sent": "It's a small thing.",
                    "label": 0
                },
                {
                    "sent": "So there's some.",
                    "label": 0
                },
                {
                    "sent": "There's some funny things.",
                    "label": 0
                },
                {
                    "sent": "Yeah, this is way too big.",
                    "label": 0
                },
                {
                    "sent": "OK, there's a few funny things we can see happen here.",
                    "label": 0
                },
                {
                    "sent": "I see large increases here an and when I enter a for loop.",
                    "label": 0
                },
                {
                    "sent": "They're not terribly large, but they're they're the large.",
                    "label": 0
                },
                {
                    "sent": "They're one of the largest one here.",
                    "label": 0
                },
                {
                    "sent": "It is kind of funny that that happens.",
                    "label": 0
                },
                {
                    "sent": "Does anybody know why?",
                    "label": 0
                },
                {
                    "sent": "When I entered at that for loop, I certainly get an increase in memory usage.",
                    "label": 0
                },
                {
                    "sent": "It's range 'cause what range does at this impact from 2.",
                    "label": 0
                },
                {
                    "sent": "His pre allocate a list of endpoints and then go over there less one we want.",
                    "label": 0
                },
                {
                    "sent": "So I basically creating the list.",
                    "label": 0
                },
                {
                    "sent": "There's a way to improve that in Python 2 and you were you replace range by X range.",
                    "label": 0
                },
                {
                    "sent": "Just put a nail exit front which is a good idea here.",
                    "label": 0
                },
                {
                    "sent": "This is not going to change much with the size of our problem because the number of points is going to be very similar.",
                    "label": 0
                },
                {
                    "sent": "But if we were memory bound and this.",
                    "label": 0
                },
                {
                    "sent": "This was where we've suddenly made it jump into 12 of 12 gigs or something like that.",
                    "label": 0
                },
                {
                    "sent": "We know we did something wrong, so we can.",
                    "label": 0
                },
                {
                    "sent": "We can find out.",
                    "label": 0
                },
                {
                    "sent": "Find out unexpected hotspots because I would have thought that you know the densities here.",
                    "label": 0
                },
                {
                    "sent": "When I define these density variables and I got my points in both both directions, I would have thought, well, that's where my memory allocation is.",
                    "label": 0
                },
                {
                    "sent": "That's probably where it is and you can see you can find hidden uses of memory quite quite nicely with this tool.",
                    "label": 0
                },
                {
                    "sent": "Sorry once for this.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_37": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We know where the hotspots are actually for the Fusion, we don't have to worry too much about memory, but we at least know how to find him.",
                    "label": 0
                },
                {
                    "sent": "And for CPU we saw was in the computation of the Laplacian as well.",
                    "label": 0
                },
                {
                    "sent": "At this sort of Russian being the right inside of that equation.",
                    "label": 0
                },
                {
                    "sent": "For those of you not familiar with the term terminology.",
                    "label": 0
                },
                {
                    "sent": "So to the DDX squared and the device work, and with completing the next one, which is which is in essence doing that, I'm parts that I'm stepping, which makes sense.",
                    "label": 0
                },
                {
                    "sent": "That's that's the bulk of what we want to do, so we might not be so surprised, but it is.",
                    "label": 0
                },
                {
                    "sent": "Where where we potentially can gain the gain the most, and so one of the things that this code uses is plain nested Python lists.",
                    "label": 0
                }
            ]
        },
        "clip_38": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "For disarray, if you look at the code, we looked at, the code is a second ago.",
                    "label": 0
                },
                {
                    "sent": "If you look carefully, you'll see that this endpoint by endpoints array is actually a list of lists and it an analyst in Python itself is a number of elements that can be of any type that says what type it is.",
                    "label": 0
                }
            ]
        },
        "clip_39": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And they are simply not the ideal day today, not for numerical stuff.",
                    "label": 1
                },
                {
                    "sent": "OK, so for a number of things, once they are slow, so that's why we look at them here.",
                    "label": 1
                },
                {
                    "sent": "But also they don't quite do what you think they might do, so I have a little list here.",
                    "label": 0
                },
                {
                    "sent": "A little array 1234 called a another Ray called B and now multiplying a by two.",
                    "label": 0
                },
                {
                    "sent": "You know what that does?",
                    "label": 0
                },
                {
                    "sent": "I get the list twice.",
                    "label": 0
                },
                {
                    "sent": "Now, if I was writing some mathematical expression, I would I might expect to get each element of that list multiplied by two.",
                    "label": 0
                },
                {
                    "sent": "It's for Fortran would do what I would do.",
                    "label": 0
                },
                {
                    "sent": "It's not listed because the service they are not vectors, they just you want twice the vector we're trying to list years twice the list.",
                    "label": 0
                },
                {
                    "sent": "Similarly, if I add a plus B, you add a list to a list, you get a larger list.",
                    "label": 1
                },
                {
                    "sent": "You don't get the elements that added, right?",
                    "label": 0
                },
                {
                    "sent": "But when we're doing numerical work, we probably do want the elements so so they're not the ideal data type because their lists they're not a race, so we.",
                    "label": 1
                }
            ]
        },
        "clip_40": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Graceann people have underage for awhile and so these guys have written NUM py.",
                    "label": 0
                },
                {
                    "sent": "Not Python guys.",
                    "label": 0
                },
                {
                    "sent": "Other guys that needed to know numerical Python And NUM Py in his essence kiss you erase that behave more or less issue wants.",
                    "label": 0
                },
                {
                    "sent": "We'll just go through these line by line to to see what they do, and then I can explain why they're doing the right so useful, but at NUM PY is a package, so whenever you wanna import from package you say from that package and then whatever you want to support so you can make zeros and ones and zeros.",
                    "label": 0
                },
                {
                    "sent": "5 gives you an array of five, so when you print it, or when you just have that output, you'll see array and then it seems like a list, but it's just the way it printed it out.",
                    "label": 0
                },
                {
                    "sent": "It's not a list, it's in array.",
                    "label": 0
                },
                {
                    "sent": "Same with once and you'll see as I've illustrated here.",
                    "label": 0
                },
                {
                    "sent": "You can specify what time the list is.",
                    "label": 0
                },
                {
                    "sent": "I'm sorry, but I'm the array is all members of the array have to have the same type.",
                    "label": 0
                },
                {
                    "sent": "That means then rather than having a list which is essentially a combination of taipana data type in the data type data etc etc is once the type and then all the data.",
                    "label": 0
                },
                {
                    "sent": "So all the data is now contiguous in memory that can be streamed.",
                    "label": 0
                },
                {
                    "sent": "Some good can come after that arrives.",
                    "label": 0
                },
                {
                    "sent": "There's useful things in NUM Py likely create a range of numbers it creates.",
                    "label": 0
                },
                {
                    "sent": "Create a linearly increasing range of numbers, so that's pretty nice.",
                    "label": 0
                },
                {
                    "sent": "You can want to go from one to five.",
                    "label": 0
                },
                {
                    "sent": "Here you go from one to five.",
                    "label": 0
                },
                {
                    "sent": "You have an array.",
                    "label": 0
                }
            ]
        },
        "clip_41": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "The array elements are accessed like like in C or C++.",
                    "label": 1
                },
                {
                    "sent": "If you have multidimensional arrays, which number I can do as well?",
                    "label": 0
                },
                {
                    "sent": "You don't have to have nested arrays of arrays, it's just a multidimensional array, but they're stored row bencher like in.",
                    "label": 0
                },
                {
                    "sent": "See another fortran.",
                    "label": 0
                },
                {
                    "sent": "This usually doesn't matter too much if you're using it, except if you're looping over them and you have to know in what direction you should go.",
                    "label": 0
                },
                {
                    "sent": "But it is true.",
                    "label": 0
                },
                {
                    "sent": "It also starts with zero like in C, so very much see based Python or at least a standard modulation is written in C and you can kind of see it.",
                    "label": 0
                },
                {
                    "sent": "So the first index is zero and starts at 0 and the First Nations role in a second is the is the column.",
                    "label": 1
                },
                {
                    "sent": "If you have a matrix.",
                    "label": 0
                }
            ]
        },
        "clip_42": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So here's again, some zeros, but in this case I have a two by three matrix of zeros.",
                    "label": 0
                },
                {
                    "sent": "I can set elements at different from.",
                    "label": 0
                },
                {
                    "sent": "See, you don't have to repeat your square brackets, but you can, so this is a choice.",
                    "label": 0
                },
                {
                    "sent": "At you can set the elements and once they said they were put in here and there you go.",
                    "label": 0
                }
            ]
        },
        "clip_43": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "If you set an element that doesn't exist, he'll tell you about it.",
                    "label": 0
                },
                {
                    "sent": "It's very friendly.",
                    "label": 0
                },
                {
                    "sent": "Well, I know it says in friendly tone, but it is useful.",
                    "label": 0
                },
                {
                    "sent": "C and even Fortran if you don't have the right flags will let you go out of bounds and you deal with the safehold.",
                    "label": 0
                },
                {
                    "sent": "Right, it will say hey index two is out of bounds.",
                    "label": 0
                },
                {
                    "sent": "Very convenient, very costly, right?",
                    "label": 0
                },
                {
                    "sent": "If I'm going over a double nested loop an for every time I access an element, I have to check if those numbers are within range is pretty slow.",
                    "label": 0
                },
                {
                    "sent": "But fair.",
                    "label": 0
                }
            ]
        },
        "clip_44": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Useful for debugging debugging.",
                    "label": 0
                },
                {
                    "sent": "So those are all those are good properties.",
                    "label": 0
                },
                {
                    "sent": "In general, there's something that is also a good property, but you won't think it at first at that has to do with copying variables.",
                    "label": 0
                },
                {
                    "sent": "Regular.",
                    "label": 0
                },
                {
                    "sent": "Variables like AMB which are here assigned some integer, so he extend these is A and a is 20.",
                    "label": 0
                },
                {
                    "sent": "What happens is that a is 20 and these 10 why?",
                    "label": 0
                },
                {
                    "sent": "Because he was 10 and then became 20.",
                    "label": 0
                },
                {
                    "sent": "D was undefined then it became 10 and nothing happened.",
                    "label": 0
                },
                {
                    "sent": "Right?",
                    "label": 0
                },
                {
                    "sent": "Not so with the race.",
                    "label": 0
                }
            ]
        },
        "clip_45": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Here's a 2 dimensional array hey called 8 and I copied it to iterate be.",
                    "label": 0
                },
                {
                    "sent": "And I said element 1 zero 216 of a. I print a Loma hold.",
                    "label": 0
                },
                {
                    "sent": "There are 16 and I just put in.",
                    "label": 0
                },
                {
                    "sent": "I've been be hey, it also has to 60.",
                    "label": 0
                },
                {
                    "sent": "So what happened is that B is not a copy of a B is really just a different name for a.",
                    "label": 0
                },
                {
                    "sent": "They're the same objects.",
                    "label": 0
                },
                {
                    "sent": "Just both, they're called by two names A&B, and if it really is a name issue, by the way, names is the same thing that triggers the garbage collection.",
                    "label": 0
                },
                {
                    "sent": "If there's no more names for an object, that's when it knows there's nothing that can extend deleted, so.",
                    "label": 0
                },
                {
                    "sent": "If you're used to C or C++ pointers, that looks a little bit like that, right?",
                    "label": 0
                },
                {
                    "sent": "You can also not just equate pointers, and you don't.",
                    "label": 0
                },
                {
                    "sent": "You haven't copied it at now.",
                    "label": 0
                },
                {
                    "sent": "You do that.",
                    "label": 0
                },
                {
                    "sent": "Partly out of efficiency considerations, if you were to pass one of these two a function, or you, there's no copying.",
                    "label": 0
                },
                {
                    "sent": "Copying can be expensive, especially if you have large arrays, and that's exactly what they would like to use them by 4, so that's fine.",
                    "label": 0
                }
            ]
        },
        "clip_46": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "But we have to be able to copy that.",
                    "label": 0
                },
                {
                    "sent": "So yes, of course we can do that.",
                    "label": 0
                },
                {
                    "sent": "But you just have to say B = 8.",
                    "label": 0
                },
                {
                    "sent": "Copy Rotterdam, then just A and that creates a new copy.",
                    "label": 0
                },
                {
                    "sent": "So basically it allocates some memory an there's there object with that puts the same information in there and then gives that new copy the name B.",
                    "label": 0
                },
                {
                    "sent": "Now when I assign 16 two eight, it arrives here, but it does not get into the thing.",
                    "label": 0
                },
                {
                    "sent": "So when you want it too, so you have to think about do I want to copy or do I just mean the same thing?",
                    "label": 0
                }
            ]
        },
        "clip_47": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Another useful thing then, one of the reasons why we didn't like lists is that you can have Victor effector and effector scalar multiplication.",
                    "label": 1
                },
                {
                    "sent": "Another arithmetic with vectors and matrices.",
                    "label": 0
                },
                {
                    "sent": "So it's easier to see by.",
                    "label": 0
                },
                {
                    "sent": "Example, so here's an MPA range which gives you the number zero to three.",
                    "label": 0
                },
                {
                    "sent": "Is much like the director, Python range function, and.",
                    "label": 0
                },
                {
                    "sent": "By the way, this will take the type from whatever arrangements, so this is an array of integers.",
                    "label": 0
                },
                {
                    "sent": "This a range is an array of double precision floating point numbers to that array.",
                    "label": 0
                },
                {
                    "sent": "I can add a scalar and every element of that array will get that edition, so this distributed distributed that that's the overall.",
                    "label": 0
                },
                {
                    "sent": "So he's been set to two, so you can do it with the variable too.",
                    "label": 0
                },
                {
                    "sent": "That's the only important to be made here, but it could also multiply 2 arrays A&B.",
                    "label": 0
                },
                {
                    "sent": "Anne.",
                    "label": 1
                },
                {
                    "sent": "Depending on what filter background you come from, you might expect different outcomes, but what number does is a element by element.",
                    "label": 0
                },
                {
                    "sent": "Arithmetic, so if I multiply A&B every element of a gets multiplied with every element of the array without model P and that gets stored in the array, so 0 * 3 is zero 1 * 4 Four 2 * 510 three Times 618.",
                    "label": 0
                },
                {
                    "sent": "It is better than this, but you know that's so that's what it does.",
                    "label": 0
                },
                {
                    "sent": "You can do B * C or C was a scalar and you get what you expect too.",
                    "label": 1
                },
                {
                    "sent": "It's just like plus it just does the same operation on each element.",
                    "label": 0
                },
                {
                    "sent": "Make sense so element by element operations plus times divide minus.",
                    "label": 0
                },
                {
                    "sent": "I think even power they are they are all supported.",
                    "label": 0
                }
            ]
        },
        "clip_48": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So that does.",
                    "label": 0
                },
                {
                    "sent": "And cause some confusion.",
                    "label": 0
                },
                {
                    "sent": "Sometimes when you're trying to multiply the matrix with vector.",
                    "label": 0
                },
                {
                    "sent": "So if you're doing this as part, expect the outcome to be what linear algebra tells you to be.",
                    "label": 0
                },
                {
                    "sent": "So we act with the matrix on the on the vector, you get a vector back.",
                    "label": 0
                },
                {
                    "sent": "You'd be surprised, so here's the matrix.",
                    "label": 0
                },
                {
                    "sent": "A elements 123234.",
                    "label": 0
                },
                {
                    "sent": "Here it is.",
                    "label": 0
                },
                {
                    "sent": "I create a vector B that has elements 123, and then I multiply a with B.",
                    "label": 0
                },
                {
                    "sent": "It's hard, I should get a vector back according to linear algebra, but they get a matrix, so one number does not do.",
                    "label": 0
                },
                {
                    "sent": "Is the matrix definition.",
                    "label": 0
                },
                {
                    "sent": "Linear algebra, definition of computing two rows that are the sum of these multiplications.",
                    "label": 0
                },
                {
                    "sent": "Rather, it does much of the spirit of Elementwise.",
                    "label": 0
                },
                {
                    "sent": "Array.",
                    "label": 0
                }
            ]
        },
        "clip_49": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Take it does this so it takes.",
                    "label": 0
                },
                {
                    "sent": "Your vector onto 3 head multiplies the 1st three elements.",
                    "label": 0
                },
                {
                    "sent": "Of your array with them 123 and then it kind of runs out of elements, so it just repeats the for the next column as well.",
                    "label": 0
                },
                {
                    "sent": "So that's why that's why I've got the one here.",
                    "label": 0
                },
                {
                    "sent": "The two from both ones here briefly.",
                    "label": 0
                },
                {
                    "sent": "So make matrix times vector still a matrix in Numpy.",
                    "label": 0
                },
                {
                    "sent": "The same you might not expect.",
                    "label": 0
                }
            ]
        },
        "clip_50": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "But now expect it is true for matrix matrix multiplication.",
                    "label": 0
                },
                {
                    "sent": "So it does not do the linear algebra version of matrix matrix multiplication.",
                    "label": 0
                },
                {
                    "sent": "It multiplies element.",
                    "label": 0
                }
            ]
        },
        "clip_51": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "By elements here it makes a lot more sense given element by element.",
                    "label": 0
                },
                {
                    "sent": "Of course you just match the elements that you get that matrix back.",
                    "label": 0
                },
                {
                    "sent": "Sometimes you want matrix.",
                    "label": 0
                }
            ]
        },
        "clip_52": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Matrix multiplication.",
                    "label": 0
                }
            ]
        },
        "clip_53": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Going to linear algebra.",
                    "label": 0
                },
                {
                    "sent": "And there's just some functions for that.",
                    "label": 0
                },
                {
                    "sent": "So rather than doing those, yeah, sorry.",
                    "label": 0
                },
                {
                    "sent": "So up till now it's just being real.",
                    "label": 0
                }
            ]
        },
        "clip_54": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "You see, for generation, thanks for this is different.",
                    "label": 0
                },
                {
                    "sent": "'cause Fortran requires left and right side be conformable.",
                    "label": 0
                },
                {
                    "sent": "And here it doesn't.",
                    "label": 0
                },
                {
                    "sent": "But what what?",
                    "label": 0
                },
                {
                    "sent": "What happens if I had a big a bigger 8 * a smaller rate?",
                    "label": 0
                },
                {
                    "sent": "Would it just repeat it stencil?",
                    "label": 0
                },
                {
                    "sent": "Why I think I think that's what it does.",
                    "label": 0
                },
                {
                    "sent": "Is it weird it is it is I. I would have rather seen this given error yes, but most likely not what you want.",
                    "label": 0
                },
                {
                    "sent": "You most likely written something wrong.",
                    "label": 0
                },
                {
                    "sent": "Yeah, yeah, there must be cases where it makes sense, but I made it.",
                    "label": 0
                },
                {
                    "sent": "Yeah, yeah, so it's not quite.",
                    "label": 0
                },
                {
                    "sent": "It's not quite fortunate array notation.",
                    "label": 0
                },
                {
                    "sent": "I mean when they when they are the same shape it is right then.",
                    "label": 0
                },
                {
                    "sent": "They're not funny stuff happens.",
                    "label": 0
                },
                {
                    "sent": "Anne.",
                    "label": 0
                }
            ]
        },
        "clip_55": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So for the for the furnace staff offered for the linear algebra, you just have some functions called dots.",
                    "label": 0
                },
                {
                    "sent": "For adult products there's a transposed two, and I think there's a few other ones that are useful, but Delta is the one that fixes all of these right?",
                    "label": 0
                },
                {
                    "sent": "It can do an inner product with the dots, and they can do a matrix matrix or matrix vector.",
                    "label": 0
                },
                {
                    "sent": "Whatever one so so the capability is there is just not what those operators do.",
                    "label": 0
                },
                {
                    "sent": "So something to be aware of.",
                    "label": 0
                }
            ]
        },
        "clip_56": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so suppose that we now realize computing the location was kind of expensive.",
                    "label": 0
                },
                {
                    "sent": "We were using lists.",
                    "label": 0
                },
                {
                    "sent": "We're using lists of lists that can be very good, let's try NUM PY arrays, and that's actually the implementation I showed you that fits on on one slides at the beginning.",
                    "label": 0
                },
                {
                    "sent": "The implementation of this 2D so.",
                    "label": 0
                }
            ]
        },
        "clip_57": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The original one took must be some fluctuations in their runtimes, but took about 600 seconds.",
                    "label": 0
                },
                {
                    "sent": "I re implemented this in in NUM Py an.",
                    "label": 0
                },
                {
                    "sent": "It's 20 seconds.",
                    "label": 0
                },
                {
                    "sent": "Well, that's about 30 times faster.",
                    "label": 0
                },
                {
                    "sent": "This can make this alone can make the difference between a script that is worth keeping and script that has to be thrown away because you might as well just go to compiled language, right?",
                    "label": 0
                },
                {
                    "sent": "This could make.",
                    "label": 0
                },
                {
                    "sent": "This could make it into a useful, useful script, so that's.",
                    "label": 0
                },
                {
                    "sent": "This is why people are so adamant on people using NUM py.",
                    "label": 0
                },
                {
                    "sent": "Because it does it, it is a faster way to access memory.",
                    "label": 0
                },
                {
                    "sent": "But it's still not as fast as it.",
                    "label": 0
                }
            ]
        },
        "clip_58": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Things can be decompiled versions.",
                    "label": 0
                },
                {
                    "sent": "Still, about almost 10 times faster and this is all still cereal, right?",
                    "label": 0
                },
                {
                    "sent": "So good and effective 10 if you're if you can code your script faster, definitely definitely worth it.",
                    "label": 0
                },
                {
                    "sent": "At times.",
                    "label": 0
                }
            ]
        },
        "clip_59": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Now the next step.",
                    "label": 0
                },
                {
                    "sent": "Of performance could be well, yeah.",
                    "label": 0
                },
                {
                    "sent": "We've done what we can we first NUM PY and so.",
                    "label": 1
                },
                {
                    "sent": "Apparently we have to go to some form of compiled language and I heard that there is this compiler for Python called Cython that makes everything fast.",
                    "label": 1
                },
                {
                    "sent": "So there is a compiler for Python called Cython that will take your Python code typically in module form.",
                    "label": 1
                },
                {
                    "sent": "That's usually how people use it and compile it and make it into a compiled language, so Python can have modules that are either written in Python or in C. An insight and sort of makes it the translation to see and then compiles it if C is faster than your compiled module must be faster, right?",
                    "label": 0
                },
                {
                    "sent": "So here's a test.",
                    "label": 0
                },
                {
                    "sent": "I did this.",
                    "label": 0
                },
                {
                    "sent": "We might have to make forgot about it.",
                    "label": 0
                },
                {
                    "sent": "One of them make things just to make this make this item.",
                    "label": 1
                },
                {
                    "sent": "Package, but so did this an I get the old output of about 20 seconds for my regular NUM py.",
                    "label": 1
                },
                {
                    "sent": "An application in Python And using Cython.",
                    "label": 0
                },
                {
                    "sent": "I got 22.20.",
                    "label": 0
                },
                {
                    "sent": "This is within the noise I think, so it's not that site on is slower, but it definitely didn't help.",
                    "label": 0
                },
                {
                    "sent": "I really was anybody expecting siphon to win here?",
                    "label": 0
                },
                {
                    "sent": "Why it doesn't is because site and respects.",
                    "label": 0
                },
                {
                    "sent": "Python And does exactly what Python does.",
                    "label": 0
                },
                {
                    "sent": "It does the checking of types.",
                    "label": 1
                },
                {
                    "sent": "It does.",
                    "label": 1
                },
                {
                    "sent": "Garbage collection is all of these things.",
                    "label": 1
                },
                {
                    "sent": "It respects the Python syntax perfectly, so if you give it a Python module, it's not going to be much faster.",
                    "label": 0
                },
                {
                    "sent": "I would have actually expected to gain something, but and this might just be that loading this Cython stuff has some overhead, and 22nd is too much to see it, but still, the way to get performance out of Syphon site on is too.",
                    "label": 0
                },
                {
                    "sent": "Is to take that Python code and use site on Cython extensions and there are extensions to the Python language in there that specify the types of things so that what does it save you when it saves you having to check the types right?",
                    "label": 0
                },
                {
                    "sent": "There's other things you can do to make essentially your Python closer to what the secret pilot can work with.",
                    "label": 0
                },
                {
                    "sent": "They can optimize.",
                    "label": 0
                },
                {
                    "sent": "the C compiler.",
                    "label": 1
                },
                {
                    "sent": "Can't optimize pure Python code.",
                    "label": 0
                },
                {
                    "sent": "Because it has to do all of these type checkings, array bounds, checking's etc etc.",
                    "label": 0
                },
                {
                    "sent": "So just using cyclists siphoned could be a good way to go if you have a really nice package it just has to be faster and you're going to use it back.",
                    "label": 1
                },
                {
                    "sent": "It should get in again again in Python.",
                    "label": 0
                },
                {
                    "sent": "It's an excellent way to write extension modules for Python where it's worth the trouble of writing something that is is already very good impact on this sort of prototype.",
                    "label": 0
                },
                {
                    "sent": "You just wanted to to go faster but you will have to learn Cython.",
                    "label": 0
                },
                {
                    "sent": "Which is essentially a new language, and because it's essentially or an extended language, I'm not going to do it today.",
                    "label": 0
                },
                {
                    "sent": "We have alot of things to talk about already.",
                    "label": 0
                },
                {
                    "sent": "I'm going to try and use things that only work within sort of pure Python, or a module that already exists for Python.",
                    "label": 0
                },
                {
                    "sent": "Is it better to use site and or to build to write our C extension, an right wrapper Python And compile them so the letter is going to be faster unless?",
                    "label": 1
                },
                {
                    "sent": "If you're not using this iPhone extent extensions, if you use the size and extensions, you should be getting comfortable.",
                    "label": 0
                },
                {
                    "sent": "Comparable speed between the two.",
                    "label": 0
                },
                {
                    "sent": "So it doesn't mean that if you have a library is already see they serve for turn based and you want to call it in Python is already written.",
                    "label": 0
                },
                {
                    "sent": "Yeah, don't go changing it to siphon, just write some wrapper code.",
                    "label": 0
                },
                {
                    "sent": "It's not terribly hard.",
                    "label": 0
                },
                {
                    "sent": "You can look up how that goes with that.",
                    "label": 0
                },
                {
                    "sent": "That's that's fine.",
                    "label": 0
                },
                {
                    "sent": "If you use the extension of fact and you should be getting comfortable stuff like that that that should be pretty much the same like depending on how you Golden spiritual caveats.",
                    "label": 0
                },
                {
                    "sent": "OK, so with NUM Py we've an without going into what is essentially a compiled language, we've pretty much.",
                    "label": 0
                },
                {
                    "sent": "Squeezed out all the juice from the.",
                    "label": 0
                }
            ]
        },
        "clip_60": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Serial performance, so when I look at a parallel performance.",
                    "label": 0
                },
                {
                    "sent": "Now.",
                    "label": 0
                },
                {
                    "sent": "If we weren't at HPC Summer School, there are some parts that it would probably skip, but I think it's.",
                    "label": 0
                },
                {
                    "sent": "Let's say fun to see how.",
                    "label": 0
                },
                {
                    "sent": "Threading shared memory programming.",
                    "label": 0
                },
                {
                    "sent": "MPI would could and can work in Python, so will make it a bit of contact with the other.",
                    "label": 0
                }
            ]
        },
        "clip_61": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Sections and we're going to look at a couple of possible ways of doing this, and then a couple of ways of doing it very differently.",
                    "label": 1
                },
                {
                    "sent": "But they all revolve around using the multiple cores, or in some cases multiple nodes that you might have at your event durability.",
                    "label": 0
                },
                {
                    "sent": "So these are the packages now Max 4 threads, multiprocessing, MPI, four PY, I I I by parallel.",
                    "label": 1
                },
                {
                    "sent": "In Spark you might have heard of Spark.",
                    "label": 0
                },
                {
                    "sent": "It's a popular data science thingy, so we look at it very briefly.",
                    "label": 0
                },
                {
                    "sent": "It's true that if this was a data science talk, we would go into that.",
                    "label": 0
                },
                {
                    "sent": "This is a mix top.",
                    "label": 0
                }
            ]
        },
        "clip_62": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "Let's look at them one by one and you'll see that it may.",
                    "label": 0
                },
                {
                    "sent": "I hope it makes sense as we go along.",
                    "label": 0
                },
                {
                    "sent": "We'll look at this one and then take a break maybe.",
                    "label": 0
                },
                {
                    "sent": "What is non exper?",
                    "label": 0
                }
            ]
        },
        "clip_63": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "It's annoying to pronounce.",
                    "label": 0
                },
                {
                    "sent": "What does it do?",
                    "label": 0
                },
                {
                    "sent": "Essentially it's a.",
                    "label": 0
                },
                {
                    "sent": "It's a just in time compiler for for NUM py expressions.",
                    "label": 1
                },
                {
                    "sent": "What does just in time means?",
                    "label": 0
                },
                {
                    "sent": "It means, as soon as you hit the expression.",
                    "label": 0
                },
                {
                    "sent": "You are going to look at that expression and not an.",
                    "label": 0
                },
                {
                    "sent": "Compile it and then execute compile stuff.",
                    "label": 0
                },
                {
                    "sent": "Now that seems like cheating because I just said we're not going to compile stuff.",
                    "label": 0
                },
                {
                    "sent": "But The thing is you just call a module with the string that hasher expression, and that's all you do.",
                    "label": 0
                },
                {
                    "sent": "And I'm really comparing from your point of view, you're just giving it an expression.",
                    "label": 0
                },
                {
                    "sent": "So he could think of matrix expression.",
                    "label": 1
                },
                {
                    "sent": "It will break things up in threads and then calculating parallel.",
                    "label": 0
                },
                {
                    "sent": "So that's the part that makes it a really nice package.",
                    "label": 0
                },
                {
                    "sent": "The fact that not just edit it compiles just in time, but it used threads to do those those evaluations.",
                    "label": 0
                },
                {
                    "sent": "It's a little awkward.",
                    "label": 0
                },
                {
                    "sent": "It's a little old.",
                    "label": 1
                },
                {
                    "sent": "But I want you to show up, but when I wanted to show you this anyway, it takes input as a string.",
                    "label": 0
                },
                {
                    "sent": "So if you have your expression, you have to put it in the string, and so.",
                    "label": 0
                },
                {
                    "sent": "But it can.",
                    "label": 0
                },
                {
                    "sent": "It can really.",
                    "label": 0
                },
                {
                    "sent": "It can give a really nice speedup because it's using all the cores that.",
                    "label": 0
                },
                {
                    "sent": "I mean that's the main.",
                    "label": 0
                },
                {
                    "sent": "The main thing here.",
                    "label": 0
                }
            ]
        },
        "clip_64": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Anne.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "He gave her an array expression, but it really is a little restricted.",
                    "label": 0
                },
                {
                    "sent": "Anne.",
                    "label": 0
                },
                {
                    "sent": "You can use these operators which seem to be all of them as certain functions like sine, cosine, where can be useful if you want to pick out of if you want to do something.",
                    "label": 0
                },
                {
                    "sent": "Depending on the value of of another array.",
                    "label": 0
                },
                {
                    "sent": "And you can do a couple of reductions.",
                    "label": 0
                },
                {
                    "sent": "We've now both all seen reductions either in the the Open ACC track I think, or the OR the MPI track as such as salmon product.",
                    "label": 0
                },
                {
                    "sent": "That's it.",
                    "label": 0
                },
                {
                    "sent": "No Max for some reason.",
                    "label": 0
                }
            ]
        },
        "clip_65": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So here's an example.",
                    "label": 0
                },
                {
                    "sent": "So I import NUM PY in MX and give them short names.",
                    "label": 1
                },
                {
                    "sent": "I already did it with non PNP and um Express.",
                    "label": 0
                },
                {
                    "sent": "Just use any.",
                    "label": 0
                },
                {
                    "sent": "2 random factors of.",
                    "label": 0
                },
                {
                    "sent": "1000 million long.",
                    "label": 0
                },
                {
                    "sent": "And then I want to compute with those random vectors a ^2 + B ^2 + 2 * 8 * P. And so.",
                    "label": 1
                },
                {
                    "sent": "Something's missing here.",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "Sorry, this site isn't quite right.",
                    "label": 0
                },
                {
                    "sent": "What they should say.",
                    "label": 0
                },
                {
                    "sent": "No, no, no, it is right so.",
                    "label": 1
                },
                {
                    "sent": "I forgot my owner and Ione time module there so anytime is is the same thing As for the as I just said for the bash it just computes elapsed time but it too needs this thing in the string.",
                    "label": 0
                },
                {
                    "sent": "I tried to be.",
                    "label": 0
                },
                {
                    "sent": "Python, like pure Python And so I needed a timing routine so this so this is doing the.",
                    "label": 0
                },
                {
                    "sent": "This is what NUM py this this is given to non pious.",
                    "label": 0
                },
                {
                    "sent": "Actually this is not the compilation yet but each time.",
                    "label": 0
                },
                {
                    "sent": "S you know which of these variables should be should be known about.",
                    "label": 0
                },
                {
                    "sent": "So that's why ABC is there so the NUM PY array takes our number expression takes .008 seconds.",
                    "label": 0
                },
                {
                    "sent": "I'm gonna try this life this is this is too short an example.",
                    "label": 0
                },
                {
                    "sent": "In part, it's time.",
                    "label": 0
                },
                {
                    "sent": "From time to time.",
                    "label": 1
                },
                {
                    "sent": "OK. And I'm fine.",
                    "label": 0
                },
                {
                    "sent": "Correct?",
                    "label": 0
                },
                {
                    "sent": "It is comfy brand brand.",
                    "label": 0
                },
                {
                    "sent": "Gonna try and use.",
                    "label": 0
                },
                {
                    "sent": "10,000,000 right 123 yeah 10,000,000.",
                    "label": 0
                },
                {
                    "sent": "Another one.",
                    "label": 1
                },
                {
                    "sent": "We I'll pre allocates.",
                    "label": 0
                },
                {
                    "sent": "A bunch of zeros for C. I cannot zeros and then.",
                    "label": 0
                },
                {
                    "sent": "A time.",
                    "label": 0
                },
                {
                    "sent": "C = A ^2 B ^2 * 2 * 8 * P. ABC.",
                    "label": 1
                },
                {
                    "sent": "It's hard to keep track of all these zeros.",
                    "label": 1
                },
                {
                    "sent": "Maybe something went wrong in the.",
                    "label": 0
                },
                {
                    "sent": "You're all right.",
                    "label": 0
                },
                {
                    "sent": "2 seconds.",
                    "label": 0
                },
                {
                    "sent": "One of the reasons I'm doing this session is I'm impatient man.",
                    "label": 0
                },
                {
                    "sent": "So let's go back to last less.",
                    "label": 0
                },
                {
                    "sent": "Let's try that one.",
                    "label": 0
                },
                {
                    "sent": "There we go.",
                    "label": 1
                },
                {
                    "sent": "If that's possible, I'm not quite sure why these are so.",
                    "label": 0
                },
                {
                    "sent": "Slow.",
                    "label": 0
                },
                {
                    "sent": "The.",
                    "label": 0
                },
                {
                    "sent": "Say.",
                    "label": 0
                },
                {
                    "sent": "So let this go.",
                    "label": 0
                },
                {
                    "sent": "We'll see what comes out.",
                    "label": 0
                },
                {
                    "sent": "If you're using Ipython, there's an easier way to do this and just put person time in front of something, but I wanted to keep just just in Python enough.",
                    "label": 0
                },
                {
                    "sent": "Not get yet another flavor of fighting in there.",
                    "label": 0
                },
                {
                    "sent": "OK, so suppose that.",
                    "label": 0
                }
            ]
        },
        "clip_66": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "That's true.",
                    "label": 0
                },
                {
                    "sent": "Anne.",
                    "label": 0
                },
                {
                    "sent": "Now let's try and use numex.",
                    "label": 0
                },
                {
                    "sent": "So this one I think I did this one on my laptop, that's why I'm only using two threads, but.",
                    "label": 0
                },
                {
                    "sent": "Basically, rather than saying.",
                    "label": 0
                },
                {
                    "sent": "C equals something you say.",
                    "label": 0
                },
                {
                    "sent": "Any dot evaluate you gave it the expression and the array you want to go into.",
                    "label": 0
                },
                {
                    "sent": "And so even even from that, without using more than one threads.",
                    "label": 0
                },
                {
                    "sent": "You see that we are about twice as fast, so this was only so this is now still cereal, but someone compiled under the hood so you don't have to worry about it too much.",
                    "label": 0
                },
                {
                    "sent": "And then as soon as we turn on the threads.",
                    "label": 0
                },
                {
                    "sent": "So in this case I took two threads.",
                    "label": 0
                },
                {
                    "sent": "I guess it's something that's closer as like almost two times the performance.",
                    "label": 0
                },
                {
                    "sent": "So let's try that here.",
                    "label": 0
                },
                {
                    "sent": "So the time for this expression using.",
                    "label": 0
                },
                {
                    "sent": "NUM py is .22.",
                    "label": 0
                },
                {
                    "sent": "And let me not set the threads which I think means it gets the default of 28 threads and try each time.",
                    "label": 0
                },
                {
                    "sent": "Me evaluate.",
                    "label": 0
                },
                {
                    "sent": "A ^2 + B's friend.",
                    "label": 0
                },
                {
                    "sent": "It is annoying to have someone to have to have this in strings.",
                    "label": 0
                },
                {
                    "sent": "I realized this.",
                    "label": 0
                },
                {
                    "sent": "Um?",
                    "label": 0
                },
                {
                    "sent": "It means I have to be careful nesting my strings.",
                    "label": 0
                },
                {
                    "sent": "I'm doing this right?",
                    "label": 0
                },
                {
                    "sent": "No doubt about it.",
                    "label": 0
                },
                {
                    "sent": "See how deep will see.",
                    "label": 0
                },
                {
                    "sent": "Baby see.",
                    "label": 0
                },
                {
                    "sent": "I think that looks like it's.",
                    "label": 0
                },
                {
                    "sent": "The reason it takes longer than this is actually that some sort of sampling, so it does it 10 times or something and averages that, so it's.",
                    "label": 0
                },
                {
                    "sent": "I could try and change the sampling, but I wouldn't.",
                    "label": 0
                },
                {
                    "sent": "That wouldn't be proper, right?",
                    "label": 0
                },
                {
                    "sent": "So we'll see how that goes, but this should hopefully do better, so I know this is a bit of a yeah two times faster and an kind of awkward.",
                    "label": 0
                },
                {
                    "sent": "Note that if you're actually using it the first part, the time you would leave it out, so you just start with any evaluate, give it this string.",
                    "label": 0
                },
                {
                    "sent": "And the rest is just pure Python, right?",
                    "label": 0
                },
                {
                    "sent": "But we have just done parallel programming in my phone, 'cause we're using threads.",
                    "label": 0
                },
                {
                    "sent": "This is sort of the simplest way to use threads in Python.",
                    "label": 0
                },
                {
                    "sent": "It's it's it doesn't have support for open MP.",
                    "label": 0
                },
                {
                    "sent": "This is about as close as she gets an.",
                    "label": 0
                },
                {
                    "sent": "There's a few drawbacks.",
                    "label": 0
                }
            ]
        },
        "clip_67": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Til you can't do offsets.",
                    "label": 1
                },
                {
                    "sent": "In these expressions and, so that's very annoying for us, because the line that took the most time this reflection line.",
                    "label": 0
                },
                {
                    "sent": "Is filled with offsets and slices and stuff and what it does.",
                    "label": 1
                },
                {
                    "sent": "I haven't seen this, but this is so.",
                    "label": 0
                },
                {
                    "sent": "Let's look at that code and show you what that does.",
                    "label": 0
                },
                {
                    "sent": "Well this is OK. Oh, here we go.",
                    "label": 0
                },
                {
                    "sent": "Wow.",
                    "label": 0
                },
                {
                    "sent": "So the.",
                    "label": 0
                },
                {
                    "sent": "Going back to numerical expert now Max using 28 cores.",
                    "label": 0
                },
                {
                    "sent": "Apparently I can't get this down 2.08 from points 23, so yeah, that is at about 28.",
                    "label": 0
                },
                {
                    "sent": "It looks like about 28.",
                    "label": 0
                },
                {
                    "sent": "I thought just the value.",
                    "label": 0
                },
                {
                    "sent": "That's a nice thing about Python, right?",
                    "label": 0
                },
                {
                    "sent": "You can just.",
                    "label": 0
                },
                {
                    "sent": "Ask it how much faster was that?",
                    "label": 0
                },
                {
                    "sent": "What's my speed up?",
                    "label": 0
                },
                {
                    "sent": "Yeah, so I I'm sure to .5 is numerical noise and I think there's a half Korean there.",
                    "label": 0
                },
                {
                    "sent": "The 28 cores that we used set up this expression 28 times, but it and they can do that for a number of reasons.",
                    "label": 0
                },
                {
                    "sent": "It's very streamlined.",
                    "label": 0
                },
                {
                    "sent": "You can only do it with full arrays, so that array is there in memory or rabies.",
                    "label": 0
                },
                {
                    "sent": "There the stream zoom in and you can imagine that that's more or less to the nicest way to give it to the CPU.",
                    "label": 0
                },
                {
                    "sent": "It gets compiled behind the scenes because spreads over thread.",
                    "label": 0
                },
                {
                    "sent": "I had 10 million things to do, so that's a nice bit of work.",
                    "label": 0
                },
                {
                    "sent": "They'll spread out nicely over 28 cores, so all of the all of the qualifications for having nice performance are met, but it can't do this.",
                    "label": 0
                },
                {
                    "sent": "Run out of out of out of the blue because it can't or won't allow offsets.",
                    "label": 0
                },
                {
                    "sent": "I'm gonna show you.",
                    "label": 0
                },
                {
                    "sent": "Pull this off non pie.",
                    "label": 0
                },
                {
                    "sent": "Alright.",
                    "label": 0
                },
                {
                    "sent": "That's better, yeah, just better in terms of functions.",
                    "label": 0
                },
                {
                    "sent": "So see how bad case.",
                    "label": 0
                },
                {
                    "sent": "It's a bit messy.",
                    "label": 0
                },
                {
                    "sent": "Agreed, by the way that this is computed.",
                    "label": 0
                },
                {
                    "sent": "Here is that it uses array notation.",
                    "label": 0
                },
                {
                    "sent": "This is an example.",
                    "label": 0
                },
                {
                    "sent": "Nothing here.",
                    "label": 0
                },
                {
                    "sent": "An example of the.",
                    "label": 0
                },
                {
                    "sent": "We have data parallelism.",
                    "label": 0
                },
                {
                    "sent": "That was alluded to in the past few days as well, so rather than having an array or having a loop over array indices.",
                    "label": 0
                },
                {
                    "sent": "What is essential services if I have my?",
                    "label": 0
                },
                {
                    "sent": "Hot plate.",
                    "label": 0
                },
                {
                    "sent": "And I had my grids.",
                    "label": 0
                },
                {
                    "sent": "What I want to compute for this is the Laplacian, which happens to be at these four at it.",
                    "label": 1
                },
                {
                    "sent": "And this one subtracted times four that happens to be how the Laplacian.",
                    "label": 0
                },
                {
                    "sent": "Up to a scaling website, so I need to see these four and what this essentially says it will take it as a whole array.",
                    "label": 0
                },
                {
                    "sent": "And I wonder if I know I want to do NUM py element by element.",
                    "label": 0
                },
                {
                    "sent": "How can I do that?",
                    "label": 0
                },
                {
                    "sent": "Well, what if I just shifted this whole thing?",
                    "label": 0
                },
                {
                    "sent": "I have a color so suppose I wanted this guy and this guy to overlap.",
                    "label": 0
                },
                {
                    "sent": "Then I would have to shift.",
                    "label": 0
                },
                {
                    "sent": "This and just bring it here.",
                    "label": 0
                },
                {
                    "sent": "I can if you can do that.",
                    "label": 0
                },
                {
                    "sent": "If I can align them such that the elements to be combined are lines, then I can just add them like so.",
                    "label": 0
                },
                {
                    "sent": "So this is essentially what is happening here.",
                    "label": 0
                },
                {
                    "sent": "By cleverly chosen offsets.",
                    "label": 0
                },
                {
                    "sent": "I can add them as full array so whenever I do this in Python I select a range.",
                    "label": 0
                },
                {
                    "sent": "When I get back, is a sub array.",
                    "label": 0
                },
                {
                    "sent": "I'm gonna make that a little bit more clear.",
                    "label": 0
                },
                {
                    "sent": "Hopefully so.",
                    "label": 1
                },
                {
                    "sent": "To make this work, something that has to happen as well as the realization that all I need to compute is the inner part.",
                    "label": 0
                },
                {
                    "sent": "These are my boundary conditions.",
                    "label": 0
                },
                {
                    "sent": "They're all zero.",
                    "label": 0
                },
                {
                    "sent": "Don't care much about them.",
                    "label": 0
                },
                {
                    "sent": "I don't have to recompute them.",
                    "label": 0
                },
                {
                    "sent": "They stay zero fixed boundary conditions.",
                    "label": 0
                },
                {
                    "sent": "So what I want to compute.",
                    "label": 0
                },
                {
                    "sent": "Is this sub matrix?",
                    "label": 0
                },
                {
                    "sent": "And that's exactly what this last part does, right?",
                    "label": 1
                },
                {
                    "sent": "The last part shift from one.",
                    "label": 0
                },
                {
                    "sent": "Remember, we're starting from zero, so one is here to number of rows plus one the number of rows here is 2.",
                    "label": 0
                },
                {
                    "sent": "It's only counting in our side, so that's this one.",
                    "label": 0
                },
                {
                    "sent": "2 + 1 is 3 and three is always the last one that you don't get.",
                    "label": 0
                },
                {
                    "sent": "You guys remember your range function.",
                    "label": 0
                },
                {
                    "sent": "That's always the same.",
                    "label": 0
                },
                {
                    "sent": "In Python, you specify a range for saying the start and the element you not getting.",
                    "label": 1
                },
                {
                    "sent": "And we'll just look at the first one to see where this goes.",
                    "label": 0
                },
                {
                    "sent": "For this instead starts at 2.",
                    "label": 0
                },
                {
                    "sent": "So that's here.",
                    "label": 0
                },
                {
                    "sent": "And goes to nrows plus one, so I'm not getting four.",
                    "label": 0
                },
                {
                    "sent": "Well, as perfect as this guy.",
                    "label": 0
                },
                {
                    "sent": "So these two matrices get combined.",
                    "label": 0
                },
                {
                    "sent": "So I got them for mining this guy.",
                    "label": 0
                },
                {
                    "sent": "But this guy, I'll try to push the blue guy, which means that this circle gets combined with this circle in this circle.",
                    "label": 0
                },
                {
                    "sent": "Gets combined with this one, so it's a clever way of shifting things around that.",
                    "label": 0
                },
                {
                    "sent": "Makes this data parallel.",
                    "label": 0
                },
                {
                    "sent": "This is one of the reasons that this number expression this not by implementation was as fast as it was.",
                    "label": 0
                },
                {
                    "sent": "I could still have looped over the indices and not gained as much.",
                    "label": 0
                },
                {
                    "sent": "But that will be not as people say it by Sonic.",
                    "label": 1
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "This poses a problem for our.",
                    "label": 0
                },
                {
                    "sent": "Our next we can skip this expression to it because it has these shifts and it doesn't like that.",
                    "label": 0
                },
                {
                    "sent": "So I was going to give this as an exercise and then I realized this is this is going to be a little bit too lengthy.",
                    "label": 0
                },
                {
                    "sent": "The way we do this, we want it.",
                    "label": 1
                },
                {
                    "sent": "We want to do this same thing as this one.",
                    "label": 0
                },
                {
                    "sent": "And we can we have to kind of fake it, so there's there's tricks and I'll just tell you there's tricks that do the same thing.",
                    "label": 1
                },
                {
                    "sent": "Where you can make an umpire a that basically starts here.",
                    "label": 1
                },
                {
                    "sent": "So I take the original Ray.",
                    "label": 0
                },
                {
                    "sent": "Which starts here and I can just say, well, let's just make an array that starts here using the same buffer.",
                    "label": 0
                },
                {
                    "sent": "However, I have to be wary or have to be aware of the memory layout and This is why.",
                    "label": 0
                },
                {
                    "sent": "This technique is a little bit.",
                    "label": 0
                },
                {
                    "sent": "Say.",
                    "label": 0
                },
                {
                    "sent": "Squeaky, you had attended a little bit fitted, but we saw that there is a potential 28 times speedup, so it might be worthwhile, but it's not nice.",
                    "label": 0
                },
                {
                    "sent": "We're getting into a territory where you'd rather not be.",
                    "label": 0
                },
                {
                    "sent": "You have a working Python code, and now you've got it.",
                    "label": 0
                },
                {
                    "sent": "Add a whole bunch or enough bunch of extra.",
                    "label": 0
                },
                {
                    "sent": "Overhead to make NUM expert like what you give it.",
                    "label": 0
                },
                {
                    "sent": "It is possible though.",
                    "label": 0
                }
            ]
        },
        "clip_68": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And the implementation is in this 2D_nomics if you're interested looking to look at it, but right now I just want to mention that this this can work.",
                    "label": 0
                },
                {
                    "sent": "And it gives a really nice feature.",
                    "label": 0
                },
                {
                    "sent": "It doesn't give the 28 speed up.",
                    "label": 0
                },
                {
                    "sent": "Anne.",
                    "label": 0
                },
                {
                    "sent": "My guess is we're hitting a memory.",
                    "label": 0
                },
                {
                    "sent": "Maybe we're hitting some memory and this neighborhood just sitting another.",
                    "label": 0
                },
                {
                    "sent": "Another bottleneck we should profile again after this.",
                    "label": 0
                },
                {
                    "sent": "To be honest, maybe some other part of the program is now important.",
                    "label": 0
                },
                {
                    "sent": "Remember we went from 600 to four.",
                    "label": 0
                },
                {
                    "sent": "Hey, that's more than 100 times faster, so.",
                    "label": 0
                },
                {
                    "sent": "It might have been worth the effort, but you don't really want to do this.",
                    "label": 0
                },
                {
                    "sent": "Right, you don't want to change your code substantially and make it less readable just for the for a script to be faster.",
                    "label": 0
                },
                {
                    "sent": "This is the point where you go.",
                    "label": 0
                },
                {
                    "sent": "Maybe C++, maybe Fortran, maybe see baby.",
                    "label": 0
                },
                {
                    "sent": "Is there it can work?",
                    "label": 0
                },
                {
                    "sent": "Anne.",
                    "label": 0
                },
                {
                    "sent": "I just want to mention before the break that there is an alternative that doesn't do parallel stuff necessarily.",
                    "label": 0
                },
                {
                    "sent": "It kinda little bit cold seiano it's becoming very popular.",
                    "label": 0
                },
                {
                    "sent": "I don't mention it because it comes out of Canada.",
                    "label": 0
                },
                {
                    "sent": "It's it's very popular in the machine learning community and it does a similar thing.",
                    "label": 0
                },
                {
                    "sent": "You give it an expression and it compiles it.",
                    "label": 0
                },
                {
                    "sent": "And then because of that, it can run substantially faster.",
                    "label": 0
                },
                {
                    "sent": "It takes slices and all of that, so that's great, but it doesn't use threads.",
                    "label": 0
                },
                {
                    "sent": "It only uses feds if you can find a library that does the linear algebra for it, that's fine thread.",
                    "label": 0
                },
                {
                    "sent": "So that's Blass, or I'm not sure if it doesn't backblast certainly, so if you can find if you don't know what classes doesn't matter, don't listen for the next minute, it could find the blast routines that you provide an if those are paralyzed and you spreads, it will use threads and be faster.",
                    "label": 0
                },
                {
                    "sent": "But if that's not the case, it doesn't do threading itself.",
                    "label": 0
                },
                {
                    "sent": "End of minutes.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "It can also use deep use and that I wish I had tried that, but I haven't so I can tell you if that's going to help.",
                    "label": 0
                },
                {
                    "sent": "So doing it in piano, you do compile the compilation a little bit more.",
                    "label": 0
                },
                {
                    "sent": "For both he creates.",
                    "label": 0
                },
                {
                    "sent": "Placeholders for each of the variables that you want you create its expression.",
                    "label": 0
                },
                {
                    "sent": "This function function compiles the function and then you call it like this.",
                    "label": 0
                },
                {
                    "sent": "So does this work?",
                    "label": 0
                },
                {
                    "sent": "So we're using 28 cores?",
                    "label": 0
                },
                {
                    "sent": "Here these two, we already had an umpire was 20 seconds, not next made it into four and seiano makes it into 13, so definitely faster.",
                    "label": 0
                },
                {
                    "sent": "And so definitely worthwhile if you issue.",
                    "label": 0
                },
                {
                    "sent": "To try.",
                    "label": 0
                },
                {
                    "sent": "But it's a little bit unfair because now not actually uses 28 cores, and this uses one, so you think, well, maybe if you tone it back to one will work better, But actually turns out to be almost to draw.",
                    "label": 0
                },
                {
                    "sent": "So for some reason the an out and part of this is that the Tiana compilation is.",
                    "label": 0
                },
                {
                    "sent": "A little bit more expensive so a larger, larger size might have done differently.",
                    "label": 0
                },
                {
                    "sent": "The takeaway message from this slide is just try them.",
                    "label": 0
                },
                {
                    "sent": "Try Seiano first because you don't have to change as much of your code.",
                    "label": 0
                },
                {
                    "sent": "And see if it's fast enough.",
                    "label": 0
                },
                {
                    "sent": "But no, it's only cereal, most likely an.",
                    "label": 0
                },
                {
                    "sent": "You should learn tomorrow to figure out if that's really the case and how to figure it out.",
                    "label": 0
                },
                {
                    "sent": "If you're not satisfied, maybe use Nomex, but Nomex should be the last thing you're using because after that, your code is substantially different.",
                    "label": 0
                },
                {
                    "sent": "At least the the kernel of it is substantially different, and so it really that should be your last resort, but you can do parallel programming in Python And you can't speed your Python script up by more than a factor of 100 on bridges.",
                    "label": 0
                },
                {
                    "sent": "And with that I think it's a good time to do a break and I guess we'll be back here.",
                    "label": 0
                },
                {
                    "sent": "Let's take a 20 minute break.",
                    "label": 0
                },
                {
                    "sent": "Oh yeah, this question, sorry.",
                    "label": 0
                },
                {
                    "sent": "One quick question with your.",
                    "label": 0
                },
                {
                    "sent": "With the NUM PY arrays, can you take sine and cosine you know?",
                    "label": 0
                },
                {
                    "sent": "Are the math functions and things extended across them for you in for?",
                    "label": 0
                },
                {
                    "sent": "I don't think not mix well, yeah, not mix produces an umpire do it too.",
                    "label": 0
                },
                {
                    "sent": "So here's the.",
                    "label": 0
                },
                {
                    "sent": "Can",
                    "label": 0
                }
            ]
        },
        "clip_69": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "It was an umpire, somebody you can do it?",
                    "label": 0
                },
                {
                    "sent": "Yeah, because given factors to sign a pirate or something, you might have to do.",
                    "label": 0
                },
                {
                    "sent": "NP does sign, so prefix it with the NUM py OK, so that it no just do elementwise like Fortran is element wise just like four times yes.",
                    "label": 0
                },
                {
                    "sent": "Any other questions?",
                    "label": 0
                },
                {
                    "sent": "Yeah, so I've heard of another just in time compiler for NUM PY called number and I'm not sure.",
                    "label": 0
                },
                {
                    "sent": "I'm not familiar with if it's able to use threads or not, but I know that it's very simple to implement it.",
                    "label": 0
                },
                {
                    "sent": "Simply like you put in a profile, basically a decorator or what it's called.",
                    "label": 0
                },
                {
                    "sent": "Do you know how that fits how that?",
                    "label": 0
                },
                {
                    "sent": "How does that compare to either of these?",
                    "label": 0
                },
                {
                    "sent": "I think it tries to be more of an over arching like these are bits and pieces, so hopefully that will become something that is more coherent, but.",
                    "label": 0
                },
                {
                    "sent": "It's fairly new and I don't know exactly how how it compares, sure.",
                    "label": 0
                },
                {
                    "sent": "There are other just in time compilers, one that I have tried is called pie pie.",
                    "label": 0
                },
                {
                    "sent": "Which is fantastic and fast, and but not all packages are compatible with Py Pi and even NUM PY itself is if he.",
                    "label": 0
                },
                {
                    "sent": "So that's why I left it out because nobody is going to be the basis of all of your stuff so.",
                    "label": 0
                },
                {
                    "sent": "Not not for this.",
                    "label": 0
                },
                {
                    "sent": "For this for the scripts.",
                    "label": 0
                },
                {
                    "sent": "Other questions.",
                    "label": 0
                },
                {
                    "sent": "Alright, see you in 20 minutes.",
                    "label": 0
                }
            ]
        }
    }
}