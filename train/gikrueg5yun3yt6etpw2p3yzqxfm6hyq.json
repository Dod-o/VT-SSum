{
    "id": "gikrueg5yun3yt6etpw2p3yzqxfm6hyq",
    "title": "A SPARQL Extension for Generating RDF from Heterogeneous Formats",
    "info": {
        "author": [
            "Antoine Zimmermann, MINES Saint-\u00c9tienne"
        ],
        "published": "July 10, 2017",
        "recorded": "June 2017",
        "category": [
            "Top->Computer Science->Big Data",
            "Top->Computer Science->Semantic Web"
        ]
    },
    "url": "http://videolectures.net/eswc2017_zimmermann_heterogeneous_formats/",
    "segmentation": [
        [
            "In this presentation I'm going to talk about a language that allows you to express a transformation from any set of documents in any formats to an RDF graph.",
            "This this is a joint work with my colleague Maxim Lafrancois who couldn't be here to present because he is now traveling back to France and so I'm using mostly his slides that I slightly.",
            "Modified and also with Noorani Beckerle, which who is a student of mine."
        ],
        [
            "So in order to to present this work, I will start with a motivation of why did we need something to transform documents in any format to RDF.",
            "We have this big we had this big project C Smart Energy Aware Systems European project involving a lot of partners where the one of the goal was to design an information model.",
            "That would cover all the aspects of energy systems such that.",
            "Got any device or subsystem in that kind of system would be able to communicate and interoperate with any other part of the system using data that conformed to this model.",
            "And this model was in fact designed as a set of our ontologies, which means that in order to conform to this, the data should be exchanged in RDF.",
            "But the problem is that in the energy domain there are things there are devices.",
            "There are systems that have their own data model that are using their own formats, and so in order to interoperate we need to to transform these formats into RDF.",
            "We also."
        ],
        [
            "I have another project where we are interested in open data and more specifically in real time open data coming from sensors and again you should know that open data is very rarely in RDF.",
            "So if we want to go towards a vision of interoperable open data and link data, we need to make these conversions."
        ],
        [
            "So."
        ],
        [
            "Basically we have a data Lake where we have a profusion of heterogeneous data formats and to ensure the semantic web and link data vision.",
            "We would like to have everything lift up to the RDF data model such that they can exchange information.",
            "We need."
        ],
        [
            "To do this in the open data in the open data world, so showing here all the levels of the linked open data stairs, but also."
        ],
        [
            "So at the level of devices in the web, the emerging web of things."
        ],
        [
            "So we started by looking at existing approaches.",
            "The most straightforward would be to simply implement a tool that would take as input file or set of file and then generate a naughty of graph and there are such existing tools or devices that do this for a lot of performance.",
            "Actually 44 reference formats on that webpage.",
            "The problem is that they are not flexible in terms of what the output.",
            "Of the of the tool, you don't decide what only of graph will come out, it's implement.",
            "It's in the implementation."
        ],
        [
            "So we looked at other approaches where we rely on a mapping language, a language which allows you to declare declaratively say what will be the transformation, and then the mapping document becomes an extra input in addition to the source files and the generic engine will produce the yard have."
        ],
        [
            "Rough, and as such, mapping language.",
            "For example, Riddle Standard since 2007, but it's only made for XML transformation to RDF we."
        ],
        [
            "Of X Parker that is made to manipulate both RDF and XML and from one to the other or two from the other two.",
            "The first it has been extended to cover a bit more things like CSV and the relational model, but it's still very much tide to the XML model.",
            "And since it's a full fledge programming language.",
            "Using it is boys time to implementing an audio Pfizer in some way, so we don't really want to use that."
        ],
        [
            "We have all to our email which is limited, which is a language to express transformations from relational databases, to RDF.",
            "It's limited to this model, so we are not interested in that."
        ],
        [
            "A similar thing for CSV files.",
            "There is a standard to express a mapping from CSV files to RDF, but again it's limited to one format.",
            "We don't really want to use that so."
        ],
        [
            "The most promising language that we considered using is RML, an extension of R2, RML that is able to deal with several data formats that are quite quite popular.",
            "Jason XML, CSV, in addition to relational databases.",
            "So it was the closest to what we needed, and we really try to use that at first.",
            "Because a lot of our data was in Jason.",
            "But we faced."
        ],
        [
            "Problems The thing is first, even though we had a lot of Jason an mostly the performance that RML is able to deal with are the ones we are seeing.",
            "There are also other formats like proper proprietary formats for energy data.",
            "And our email is not able to to deal with them.",
            "Also it has some issues in from our best perspective in the way you have to model the transformation.",
            "Plus it's not really easy to extend it to another format.",
            "Also, you can only use one logical source as a forum mapping an.",
            "We would like to combine several files or several documents to generate an RDF graph.",
            "And finally there are some issues with the expressiveness of the language.",
            "For instance, it was we didn't figure out how to create an RDF list from a set of values, so.",
            "We"
        ],
        [
            "We're back to doing research.",
            "How could we make a language that is satisfying our requirements?",
            "Can we make a language that is at the same time extend easily extendable to any format that is expressive enough to cover all the cases that we have and that is still rather simple?",
            "We don't want to implement on the advisors every time we make a mapping."
        ],
        [
            "So to answer these questions, we looked at the process of RDF generation, how as human if if we have to explain how we we transform data source into RDF, how do we do it usually?"
        ],
        [
            "We start from from the source data.",
            "We look at the structure and."
        ],
        [
            "We identify reccuring values or recurring structure, and in many cases this recurring structures can be expressed in a selection language like X path for XML, Jason Path for Jason etc etc.",
            "Each data model has its own selection language, so we do this."
        ],
        [
            "For all the values of interest and then to expr."
        ],
        [
            "I explain what we do.",
            "We basically draw a graph pattern reusing the parts that have been identified in the original source.",
            "Well."
        ],
        [
            "In the meantime, I did not talk about a very important but very difficult part of the process, which is the selection of the ontologies.",
            "We do not address this with our language.",
            "It's still a very open problem.",
            "But the result of this analysis of the process is was that there are essentially two parts and we would like to do couple the two parts have a language where you express on the one hand the selection and on the other end the graph pattern that we want to generate."
        ],
        [
            "And so for showing how this looks like, I will go to a.",
            "The web on our web interface, so it looks like this.",
            "You see that it looks very much like Sparkle.",
            "We find where binds.",
            "There are lots of keywords that are like in sparkle, but there is this part called generate which is in fact very similar to construct in Inspire sparkle in normal sparkle and this would show the graph pattern that you want to output so it's very easy to see what you're what you're generating with this language.",
            "Then you express.",
            "You say from which source there can be more than one.",
            "This is a simple example, but you can have any number of sources.",
            "And then the Eater Eater Eater parts is telling you how to divide your file into blocks that are going to be processed one by one eater iteratively.",
            "And for each block we execute the parts in the wear clothes and hear the where clause is a normal standard.",
            "Sparkle wear clothes.",
            "There is nothing new in this close.",
            "The BIND is a bind like in sparkle.",
            "This FN that: custom CSV is allowed.",
            "It's a custom function and this is allowed by the sparkle syntax you are allowed to implement special functions and so syntactically syntactically.",
            "This is a normal wear clothes.",
            "And since it's a normal wear clothes you can add.",
            "Triple patterns in it you can add query patterns inside the where clause so you can combine RDF data with the data that are coming from from the source files.",
            "And with these special functions we implement the selectors, the selection patterns of of the of each data format.",
            "So if you want to see the result, the results show that we made 2 two is it showing?",
            "Which.",
            "Interesting, so I don't have the same thing on my screen and on this screen and I so I can show you the result.",
            "Apparently that's a strange thing.",
            "Ah, I think I get.",
            "This marker oh, actually it's still showing the PowerPoint.",
            "It's it's not showing my so I have to quit too.",
            "So this is, this is just what I say.",
            "This is still valid.",
            "I didn't do anything else.",
            "This shows what I said, but if I go to result you see that I generated 2 airport from a document that I can show you.",
            "This is a CSV document with two lines.",
            "And I simply used selectors, whoops.",
            "In in this document.",
            "So back to the presentation.",
            "Not here.",
            "Here."
        ],
        [
            "Yes."
        ],
        [
            "So we have this website where you can download the code.",
            "It's a it's extending extending Jenna.",
            "You have the documentation and a little tutorial.",
            "We also have a usable jar that you can try on with the common line.",
            "We all."
        ],
        [
            "So have a Web API that you can use in a way that is very similar to a spot.",
            "The Sparkle protocol you have, query parimeter, etc."
        ],
        [
            "There is this web interface where you have syntax highlighting and syntax checking."
        ],
        [
            "And at the moment, the formats that we can handle are these ones and they are all based on custom functions that we implemented and to say how easy it is to extend the language.",
            "We had a little workshop kind of hack hackathon where a group of people just discovered this sparkle generate language and they wanted to implement a function that would give them the distance from one point to the other on Earth, but not the collision distance but the distance when you go along the roads and that was made in the matter of a few hours or.",
            "Even less.",
            "We also have quite a lot of test case."
        ],
        [
            "Is among which test cases that comes from other mapping languages.",
            "So for example we we have implemented the test cases of RML in sparkle generate."
        ],
        [
            "We made experiments to try see the performance of our implementation.",
            "Of course its comparison of implementation, not comparison of the languages.",
            "But it shows that.",
            "With an implementation made on top of Jenner that is relatively straightforward, we made it in in about a month.",
            "We could make something that is fairly scalable."
        ],
        [
            "So to conclude, we made a language that, in your opinion, is quite expressive because it has all the expressiveness of sparkle expressions flexible, because you can easily extend it, extensible also.",
            "And that's we think, integrates quite well with in a semantic web workflow, because you're using a language that is very similar to the one you use for querying data or or.",
            "Transforming from audio to audio, for example.",
            "But we don't want to stop here.",
            "There are custom functions that we think are quite valuable that we should implement, especially to deal with the specific data formats.",
            "We also would like to have syntactic sugar such that we can use the expressions directly in the generic close.",
            "At the moment we need to construct your eyes by concatenating strings and things like that.",
            "It's it's not really looking nice in the bind.",
            "Apart, we would like to make this much more easy.",
            "And finally, but not the least, because it's it's quite important for the use cases that I presented at the beginning, we want to support data streams and this is an ongoing work.",
            "We think that this will be ready, probably before summer.",
            "And that's it.",
            "Text, antwan.",
            "This looks pretty cool.",
            "I want to download it and one thing so you.",
            "You kind of parse all these formats and what do you do when the schema is present in some form?",
            "So when you have no column names in CSV or when you have an XSD for XML etc.",
            "So there are different approaches for that.",
            "If you have any constructs to do to get sort of the schema or customize it or.",
            "Well.",
            "Maybe keep the mic because I'm I want you to clarify a bit.",
            "Do you mean can we have a query transformation that we may would make use of the schema in addition to the data?",
            "Well I think to some extent, yes you could have so.",
            "Difficult to to make examples like this, but if the schema is relatively simple, for example.",
            "What?",
            "What kind of example?",
            "If the schema is just a CSV file that says the name of the column and a type or property or something like this, you can extract this and then for each line of the of your CSV file you would take, you would use the value in such column.",
            "And generate something in the data type that is associated with the with this property in the in the other file.",
            "So you can make this kind of combination where you have several files.",
            "One it could be one file that comes that serve as a configuration for the transformation of another file, for example.",
            "But in cases when it is more complex, like when you have an excess D that is separated from XML and you want to know what the schema is.",
            "Before, because you don't know exactly, in many cases you have you have that problem before.",
            "Yeah, I imagine, but this is not something that we really investigated, so I suggest you until it's clear that it would be quite complicated to do, but I am not sure whether it's possible or not.",
            "Thank you any other question.",
            "That yesterday I first here.",
            "Hi thanks.",
            "So you say that the sparkle generator is expressive and extensible.",
            "How did you?",
            "Validate that that it is well expressed.",
            "More expressiveness, so expressive in the sense that we can reuse.",
            "So maybe if I take.",
            "Oops.",
            "If I take some examples, I go back to the interface here and we have examples, so this was this one was a really simple one.",
            "But first, let's look at it.",
            "You have at least all the expressiveness of sparkle expressions.",
            "So you can put any sparkle expressions in in in your bindings and creates your values like this.",
            "The other thing is.",
            "Let's say this one.",
            "This is a RML test case.",
            "In this case, you have a generate here and you generate something and you can have nested generates.",
            "So, so you then have another iterate or in other bindings and possibly again other ones, etc.",
            "And each of these sub generate can make use of another source to make another part of the audio graph.",
            "So well, we didn't quantify the expressiveness really, it's more like.",
            "We could make some of the things that we had trouble doing with RML, so I'm sure that our email could be extended to have more powerful expressions, of course, but at the moment that was not sufficient for needs.",
            "OK. We have another question.",
            "There are question two questions actually.",
            "The first one is quick.",
            "You said you wanted to support binary formats as well.",
            "Yeah, Oh yeah, so so I can show you the list of formats we have in in the list of formats we have C board, which is a binary version of Jason, so it's it's sometimes used in in IoT devices to in order to be compatible with Jason and still be quite compact.",
            "And the selectors you apply to Seaborn here is Jason Path as well right?",
            "You just Jason path but you need to use a different function because you don't extract the information in the same way, But the syntax of this that custom function is exactly the same As for Jason Path.",
            "Yeah, so one could argue that for binary formats that have textual representations you don't really need to have a custom function.",
            "And do the transformation outside of the execution of the.",
            "Other query but OK OK.",
            "I my second question is you insisted on the fact that the where clause is.",
            "A valid sparkle wear clothes.",
            "So if you have if you have triple patterns.",
            "I'm.",
            "Can you have?",
            "Could this patterns be about the data you have just generated, know, know, know that that the idea was that?",
            "In an ecosystem where you have lots of of data sources in in various formats, and you want to generate RDF, there may be nodes where there is a triple store.",
            "There is an existing triple store and then you want to combine something from the Triple Store with some external sources.",
            "OK thanks.",
            "We have another question there.",
            "I are you familiar with the XML language?",
            "SML simplified.",
            "No, actually.",
            "OK, that's like another like formalisation for like, let's say competing art weremole.",
            "It was presented at ELDO 2015.",
            "It was from OK.",
            "So I I have to take note of the maybe my colleague knows about it but I. OK, so there they propose a different formalisation for writing like mapping document than Art wormell and they like checked with users.",
            "Like the expressivity an which one the users prefer, so I guess like I mean if you propose another formalisation another way, like of like a writing, mapping documents.",
            "I guess that like that's what you're going to evaluate rather than like the implementations, yeah sure.",
            "Well the implementation was more like 2.",
            "For us to have an idea how how we perform to see if the implementation is quite simple, because in fact you can transform the generate query into.",
            "Sparkle construct query.",
            "If you you have to actually using the source to make a block of values statements in sparkle, so in sparkle you can.",
            "You can put the values you're using explicitly with value statement and just just having the simple transformation of the query.",
            "You could in principle use any sparkle engine.",
            "To implement a sparkle, generate engine on top of it.",
            "Soo but OK, let's like get a bit like more into like the evaluation.",
            "So here you propose like an approach for heterogeneous sources.",
            "But your evaluation is like on a single source.",
            "Honest, I don't remember.",
            "Honestly, I I was not the one who made the evaluation so I don't remember which query we used to do that.",
            "It may be imperfect.",
            "Possible, sorry about that in the paper.",
            "You say that it's like a CSV file.",
            "Here I can see the number of rows like yeah, it's just a scalability test actually.",
            "The what was important for us is to see the curve that the shape of the curve of of our system and well.",
            "In from outlook knowledge, RML is is really the the competitor in for that kind of language.",
            "So we thought that that comparing the two would also help give an idea of how it's behaving.",
            "If the target is the new sources I would expect at least to see how the system behaves when you have like to use like this.",
            "Yeah, that's well, that's something we should we should do about the joins.",
            "Did you evaluate this?",
            "Is this is something that we we still have to do?",
            "We have test cases we didn't evaluate the performance of this, but at least we have test cases that show that it is possible to do it and it it works.",
            "So some of these test cases long list.",
            "Are relying on multiple sources and sometimes different formats.",
            "I don't remember which one.",
            "That's not a performance test, of course, but it's at least it's a feasibility test and it it works.",
            "So I mean, as far as I know from Maxim, these are the test cases that we use, like the unit test in the animal not, not only there are CSV test from the CSV on the web working group, there are various tests from.",
            "I don't remember exactly X sparkle from the Xbox Aelteste set.",
            "There are tests from.",
            "Other did you try them without a Mail too?",
            "Like the X parking with RM L2 you'd like to convey because you say like no I I don't know.",
            "OK, so could you also tell us why our email is not extensible or easily extensible?",
            "Well in RML you need to define.",
            "You you need to change your vocabulary, you have a vocabulary to say.",
            "This is mapping using a CSV file or using Jason file.",
            "You would extend the vocabulary and then.",
            "You also need to change the implementation in well, I'm.",
            "For the implementation, I'm not sure how it is implemented, but I would guess that it's a bit.",
            "More difficult to modularizes it in such a way that.",
            "For for supporting a new format, you would only have to implement one custom function.",
            "Yeah, you know, I'm not the first.",
            "I'm not the first author of of this, so Maxim went in more detail about RML, so I'm not.",
            "I admit, I'm not an expert in RML so I don't know all the details and I know that already has been evolving and by the time we wrote this paper, I don't remember exactly when it was but.",
            "Probably there has been changes to two RML.",
            "I think it's better if you continue the discussion offline because it's longer than.",
            "Expected, so let's thank the speaker again for his presentation."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "In this presentation I'm going to talk about a language that allows you to express a transformation from any set of documents in any formats to an RDF graph.",
                    "label": 0
                },
                {
                    "sent": "This this is a joint work with my colleague Maxim Lafrancois who couldn't be here to present because he is now traveling back to France and so I'm using mostly his slides that I slightly.",
                    "label": 0
                },
                {
                    "sent": "Modified and also with Noorani Beckerle, which who is a student of mine.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So in order to to present this work, I will start with a motivation of why did we need something to transform documents in any format to RDF.",
                    "label": 0
                },
                {
                    "sent": "We have this big we had this big project C Smart Energy Aware Systems European project involving a lot of partners where the one of the goal was to design an information model.",
                    "label": 0
                },
                {
                    "sent": "That would cover all the aspects of energy systems such that.",
                    "label": 0
                },
                {
                    "sent": "Got any device or subsystem in that kind of system would be able to communicate and interoperate with any other part of the system using data that conformed to this model.",
                    "label": 0
                },
                {
                    "sent": "And this model was in fact designed as a set of our ontologies, which means that in order to conform to this, the data should be exchanged in RDF.",
                    "label": 0
                },
                {
                    "sent": "But the problem is that in the energy domain there are things there are devices.",
                    "label": 1
                },
                {
                    "sent": "There are systems that have their own data model that are using their own formats, and so in order to interoperate we need to to transform these formats into RDF.",
                    "label": 0
                },
                {
                    "sent": "We also.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I have another project where we are interested in open data and more specifically in real time open data coming from sensors and again you should know that open data is very rarely in RDF.",
                    "label": 0
                },
                {
                    "sent": "So if we want to go towards a vision of interoperable open data and link data, we need to make these conversions.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Basically we have a data Lake where we have a profusion of heterogeneous data formats and to ensure the semantic web and link data vision.",
                    "label": 0
                },
                {
                    "sent": "We would like to have everything lift up to the RDF data model such that they can exchange information.",
                    "label": 0
                },
                {
                    "sent": "We need.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "To do this in the open data in the open data world, so showing here all the levels of the linked open data stairs, but also.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So at the level of devices in the web, the emerging web of things.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So we started by looking at existing approaches.",
                    "label": 1
                },
                {
                    "sent": "The most straightforward would be to simply implement a tool that would take as input file or set of file and then generate a naughty of graph and there are such existing tools or devices that do this for a lot of performance.",
                    "label": 1
                },
                {
                    "sent": "Actually 44 reference formats on that webpage.",
                    "label": 0
                },
                {
                    "sent": "The problem is that they are not flexible in terms of what the output.",
                    "label": 0
                },
                {
                    "sent": "Of the of the tool, you don't decide what only of graph will come out, it's implement.",
                    "label": 0
                },
                {
                    "sent": "It's in the implementation.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So we looked at other approaches where we rely on a mapping language, a language which allows you to declare declaratively say what will be the transformation, and then the mapping document becomes an extra input in addition to the source files and the generic engine will produce the yard have.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Rough, and as such, mapping language.",
                    "label": 0
                },
                {
                    "sent": "For example, Riddle Standard since 2007, but it's only made for XML transformation to RDF we.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Of X Parker that is made to manipulate both RDF and XML and from one to the other or two from the other two.",
                    "label": 0
                },
                {
                    "sent": "The first it has been extended to cover a bit more things like CSV and the relational model, but it's still very much tide to the XML model.",
                    "label": 0
                },
                {
                    "sent": "And since it's a full fledge programming language.",
                    "label": 0
                },
                {
                    "sent": "Using it is boys time to implementing an audio Pfizer in some way, so we don't really want to use that.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We have all to our email which is limited, which is a language to express transformations from relational databases, to RDF.",
                    "label": 0
                },
                {
                    "sent": "It's limited to this model, so we are not interested in that.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "A similar thing for CSV files.",
                    "label": 0
                },
                {
                    "sent": "There is a standard to express a mapping from CSV files to RDF, but again it's limited to one format.",
                    "label": 0
                },
                {
                    "sent": "We don't really want to use that so.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The most promising language that we considered using is RML, an extension of R2, RML that is able to deal with several data formats that are quite quite popular.",
                    "label": 0
                },
                {
                    "sent": "Jason XML, CSV, in addition to relational databases.",
                    "label": 0
                },
                {
                    "sent": "So it was the closest to what we needed, and we really try to use that at first.",
                    "label": 0
                },
                {
                    "sent": "Because a lot of our data was in Jason.",
                    "label": 0
                },
                {
                    "sent": "But we faced.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Problems The thing is first, even though we had a lot of Jason an mostly the performance that RML is able to deal with are the ones we are seeing.",
                    "label": 0
                },
                {
                    "sent": "There are also other formats like proper proprietary formats for energy data.",
                    "label": 0
                },
                {
                    "sent": "And our email is not able to to deal with them.",
                    "label": 0
                },
                {
                    "sent": "Also it has some issues in from our best perspective in the way you have to model the transformation.",
                    "label": 0
                },
                {
                    "sent": "Plus it's not really easy to extend it to another format.",
                    "label": 0
                },
                {
                    "sent": "Also, you can only use one logical source as a forum mapping an.",
                    "label": 1
                },
                {
                    "sent": "We would like to combine several files or several documents to generate an RDF graph.",
                    "label": 1
                },
                {
                    "sent": "And finally there are some issues with the expressiveness of the language.",
                    "label": 0
                },
                {
                    "sent": "For instance, it was we didn't figure out how to create an RDF list from a set of values, so.",
                    "label": 0
                },
                {
                    "sent": "We",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We're back to doing research.",
                    "label": 0
                },
                {
                    "sent": "How could we make a language that is satisfying our requirements?",
                    "label": 0
                },
                {
                    "sent": "Can we make a language that is at the same time extend easily extendable to any format that is expressive enough to cover all the cases that we have and that is still rather simple?",
                    "label": 1
                },
                {
                    "sent": "We don't want to implement on the advisors every time we make a mapping.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So to answer these questions, we looked at the process of RDF generation, how as human if if we have to explain how we we transform data source into RDF, how do we do it usually?",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We start from from the source data.",
                    "label": 0
                },
                {
                    "sent": "We look at the structure and.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We identify reccuring values or recurring structure, and in many cases this recurring structures can be expressed in a selection language like X path for XML, Jason Path for Jason etc etc.",
                    "label": 0
                },
                {
                    "sent": "Each data model has its own selection language, so we do this.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "For all the values of interest and then to expr.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I explain what we do.",
                    "label": 0
                },
                {
                    "sent": "We basically draw a graph pattern reusing the parts that have been identified in the original source.",
                    "label": 0
                },
                {
                    "sent": "Well.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "In the meantime, I did not talk about a very important but very difficult part of the process, which is the selection of the ontologies.",
                    "label": 0
                },
                {
                    "sent": "We do not address this with our language.",
                    "label": 0
                },
                {
                    "sent": "It's still a very open problem.",
                    "label": 0
                },
                {
                    "sent": "But the result of this analysis of the process is was that there are essentially two parts and we would like to do couple the two parts have a language where you express on the one hand the selection and on the other end the graph pattern that we want to generate.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And so for showing how this looks like, I will go to a.",
                    "label": 0
                },
                {
                    "sent": "The web on our web interface, so it looks like this.",
                    "label": 0
                },
                {
                    "sent": "You see that it looks very much like Sparkle.",
                    "label": 0
                },
                {
                    "sent": "We find where binds.",
                    "label": 0
                },
                {
                    "sent": "There are lots of keywords that are like in sparkle, but there is this part called generate which is in fact very similar to construct in Inspire sparkle in normal sparkle and this would show the graph pattern that you want to output so it's very easy to see what you're what you're generating with this language.",
                    "label": 0
                },
                {
                    "sent": "Then you express.",
                    "label": 0
                },
                {
                    "sent": "You say from which source there can be more than one.",
                    "label": 0
                },
                {
                    "sent": "This is a simple example, but you can have any number of sources.",
                    "label": 0
                },
                {
                    "sent": "And then the Eater Eater Eater parts is telling you how to divide your file into blocks that are going to be processed one by one eater iteratively.",
                    "label": 0
                },
                {
                    "sent": "And for each block we execute the parts in the wear clothes and hear the where clause is a normal standard.",
                    "label": 0
                },
                {
                    "sent": "Sparkle wear clothes.",
                    "label": 0
                },
                {
                    "sent": "There is nothing new in this close.",
                    "label": 0
                },
                {
                    "sent": "The BIND is a bind like in sparkle.",
                    "label": 0
                },
                {
                    "sent": "This FN that: custom CSV is allowed.",
                    "label": 0
                },
                {
                    "sent": "It's a custom function and this is allowed by the sparkle syntax you are allowed to implement special functions and so syntactically syntactically.",
                    "label": 0
                },
                {
                    "sent": "This is a normal wear clothes.",
                    "label": 0
                },
                {
                    "sent": "And since it's a normal wear clothes you can add.",
                    "label": 0
                },
                {
                    "sent": "Triple patterns in it you can add query patterns inside the where clause so you can combine RDF data with the data that are coming from from the source files.",
                    "label": 0
                },
                {
                    "sent": "And with these special functions we implement the selectors, the selection patterns of of the of each data format.",
                    "label": 0
                },
                {
                    "sent": "So if you want to see the result, the results show that we made 2 two is it showing?",
                    "label": 0
                },
                {
                    "sent": "Which.",
                    "label": 0
                },
                {
                    "sent": "Interesting, so I don't have the same thing on my screen and on this screen and I so I can show you the result.",
                    "label": 0
                },
                {
                    "sent": "Apparently that's a strange thing.",
                    "label": 0
                },
                {
                    "sent": "Ah, I think I get.",
                    "label": 0
                },
                {
                    "sent": "This marker oh, actually it's still showing the PowerPoint.",
                    "label": 0
                },
                {
                    "sent": "It's it's not showing my so I have to quit too.",
                    "label": 0
                },
                {
                    "sent": "So this is, this is just what I say.",
                    "label": 0
                },
                {
                    "sent": "This is still valid.",
                    "label": 0
                },
                {
                    "sent": "I didn't do anything else.",
                    "label": 0
                },
                {
                    "sent": "This shows what I said, but if I go to result you see that I generated 2 airport from a document that I can show you.",
                    "label": 0
                },
                {
                    "sent": "This is a CSV document with two lines.",
                    "label": 0
                },
                {
                    "sent": "And I simply used selectors, whoops.",
                    "label": 0
                },
                {
                    "sent": "In in this document.",
                    "label": 0
                },
                {
                    "sent": "So back to the presentation.",
                    "label": 0
                },
                {
                    "sent": "Not here.",
                    "label": 0
                },
                {
                    "sent": "Here.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Yes.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So we have this website where you can download the code.",
                    "label": 0
                },
                {
                    "sent": "It's a it's extending extending Jenna.",
                    "label": 0
                },
                {
                    "sent": "You have the documentation and a little tutorial.",
                    "label": 0
                },
                {
                    "sent": "We also have a usable jar that you can try on with the common line.",
                    "label": 0
                },
                {
                    "sent": "We all.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So have a Web API that you can use in a way that is very similar to a spot.",
                    "label": 0
                },
                {
                    "sent": "The Sparkle protocol you have, query parimeter, etc.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "There is this web interface where you have syntax highlighting and syntax checking.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And at the moment, the formats that we can handle are these ones and they are all based on custom functions that we implemented and to say how easy it is to extend the language.",
                    "label": 0
                },
                {
                    "sent": "We had a little workshop kind of hack hackathon where a group of people just discovered this sparkle generate language and they wanted to implement a function that would give them the distance from one point to the other on Earth, but not the collision distance but the distance when you go along the roads and that was made in the matter of a few hours or.",
                    "label": 0
                },
                {
                    "sent": "Even less.",
                    "label": 0
                },
                {
                    "sent": "We also have quite a lot of test case.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Is among which test cases that comes from other mapping languages.",
                    "label": 0
                },
                {
                    "sent": "So for example we we have implemented the test cases of RML in sparkle generate.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We made experiments to try see the performance of our implementation.",
                    "label": 0
                },
                {
                    "sent": "Of course its comparison of implementation, not comparison of the languages.",
                    "label": 0
                },
                {
                    "sent": "But it shows that.",
                    "label": 0
                },
                {
                    "sent": "With an implementation made on top of Jenner that is relatively straightforward, we made it in in about a month.",
                    "label": 0
                },
                {
                    "sent": "We could make something that is fairly scalable.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So to conclude, we made a language that, in your opinion, is quite expressive because it has all the expressiveness of sparkle expressions flexible, because you can easily extend it, extensible also.",
                    "label": 0
                },
                {
                    "sent": "And that's we think, integrates quite well with in a semantic web workflow, because you're using a language that is very similar to the one you use for querying data or or.",
                    "label": 0
                },
                {
                    "sent": "Transforming from audio to audio, for example.",
                    "label": 0
                },
                {
                    "sent": "But we don't want to stop here.",
                    "label": 0
                },
                {
                    "sent": "There are custom functions that we think are quite valuable that we should implement, especially to deal with the specific data formats.",
                    "label": 0
                },
                {
                    "sent": "We also would like to have syntactic sugar such that we can use the expressions directly in the generic close.",
                    "label": 0
                },
                {
                    "sent": "At the moment we need to construct your eyes by concatenating strings and things like that.",
                    "label": 0
                },
                {
                    "sent": "It's it's not really looking nice in the bind.",
                    "label": 0
                },
                {
                    "sent": "Apart, we would like to make this much more easy.",
                    "label": 0
                },
                {
                    "sent": "And finally, but not the least, because it's it's quite important for the use cases that I presented at the beginning, we want to support data streams and this is an ongoing work.",
                    "label": 0
                },
                {
                    "sent": "We think that this will be ready, probably before summer.",
                    "label": 0
                },
                {
                    "sent": "And that's it.",
                    "label": 0
                },
                {
                    "sent": "Text, antwan.",
                    "label": 0
                },
                {
                    "sent": "This looks pretty cool.",
                    "label": 0
                },
                {
                    "sent": "I want to download it and one thing so you.",
                    "label": 0
                },
                {
                    "sent": "You kind of parse all these formats and what do you do when the schema is present in some form?",
                    "label": 0
                },
                {
                    "sent": "So when you have no column names in CSV or when you have an XSD for XML etc.",
                    "label": 0
                },
                {
                    "sent": "So there are different approaches for that.",
                    "label": 0
                },
                {
                    "sent": "If you have any constructs to do to get sort of the schema or customize it or.",
                    "label": 0
                },
                {
                    "sent": "Well.",
                    "label": 0
                },
                {
                    "sent": "Maybe keep the mic because I'm I want you to clarify a bit.",
                    "label": 0
                },
                {
                    "sent": "Do you mean can we have a query transformation that we may would make use of the schema in addition to the data?",
                    "label": 0
                },
                {
                    "sent": "Well I think to some extent, yes you could have so.",
                    "label": 0
                },
                {
                    "sent": "Difficult to to make examples like this, but if the schema is relatively simple, for example.",
                    "label": 0
                },
                {
                    "sent": "What?",
                    "label": 0
                },
                {
                    "sent": "What kind of example?",
                    "label": 0
                },
                {
                    "sent": "If the schema is just a CSV file that says the name of the column and a type or property or something like this, you can extract this and then for each line of the of your CSV file you would take, you would use the value in such column.",
                    "label": 0
                },
                {
                    "sent": "And generate something in the data type that is associated with the with this property in the in the other file.",
                    "label": 0
                },
                {
                    "sent": "So you can make this kind of combination where you have several files.",
                    "label": 0
                },
                {
                    "sent": "One it could be one file that comes that serve as a configuration for the transformation of another file, for example.",
                    "label": 0
                },
                {
                    "sent": "But in cases when it is more complex, like when you have an excess D that is separated from XML and you want to know what the schema is.",
                    "label": 0
                },
                {
                    "sent": "Before, because you don't know exactly, in many cases you have you have that problem before.",
                    "label": 0
                },
                {
                    "sent": "Yeah, I imagine, but this is not something that we really investigated, so I suggest you until it's clear that it would be quite complicated to do, but I am not sure whether it's possible or not.",
                    "label": 0
                },
                {
                    "sent": "Thank you any other question.",
                    "label": 0
                },
                {
                    "sent": "That yesterday I first here.",
                    "label": 0
                },
                {
                    "sent": "Hi thanks.",
                    "label": 0
                },
                {
                    "sent": "So you say that the sparkle generator is expressive and extensible.",
                    "label": 0
                },
                {
                    "sent": "How did you?",
                    "label": 0
                },
                {
                    "sent": "Validate that that it is well expressed.",
                    "label": 0
                },
                {
                    "sent": "More expressiveness, so expressive in the sense that we can reuse.",
                    "label": 0
                },
                {
                    "sent": "So maybe if I take.",
                    "label": 0
                },
                {
                    "sent": "Oops.",
                    "label": 0
                },
                {
                    "sent": "If I take some examples, I go back to the interface here and we have examples, so this was this one was a really simple one.",
                    "label": 0
                },
                {
                    "sent": "But first, let's look at it.",
                    "label": 0
                },
                {
                    "sent": "You have at least all the expressiveness of sparkle expressions.",
                    "label": 0
                },
                {
                    "sent": "So you can put any sparkle expressions in in in your bindings and creates your values like this.",
                    "label": 0
                },
                {
                    "sent": "The other thing is.",
                    "label": 0
                },
                {
                    "sent": "Let's say this one.",
                    "label": 0
                },
                {
                    "sent": "This is a RML test case.",
                    "label": 0
                },
                {
                    "sent": "In this case, you have a generate here and you generate something and you can have nested generates.",
                    "label": 0
                },
                {
                    "sent": "So, so you then have another iterate or in other bindings and possibly again other ones, etc.",
                    "label": 0
                },
                {
                    "sent": "And each of these sub generate can make use of another source to make another part of the audio graph.",
                    "label": 0
                },
                {
                    "sent": "So well, we didn't quantify the expressiveness really, it's more like.",
                    "label": 0
                },
                {
                    "sent": "We could make some of the things that we had trouble doing with RML, so I'm sure that our email could be extended to have more powerful expressions, of course, but at the moment that was not sufficient for needs.",
                    "label": 0
                },
                {
                    "sent": "OK. We have another question.",
                    "label": 0
                },
                {
                    "sent": "There are question two questions actually.",
                    "label": 0
                },
                {
                    "sent": "The first one is quick.",
                    "label": 0
                },
                {
                    "sent": "You said you wanted to support binary formats as well.",
                    "label": 0
                },
                {
                    "sent": "Yeah, Oh yeah, so so I can show you the list of formats we have in in the list of formats we have C board, which is a binary version of Jason, so it's it's sometimes used in in IoT devices to in order to be compatible with Jason and still be quite compact.",
                    "label": 0
                },
                {
                    "sent": "And the selectors you apply to Seaborn here is Jason Path as well right?",
                    "label": 0
                },
                {
                    "sent": "You just Jason path but you need to use a different function because you don't extract the information in the same way, But the syntax of this that custom function is exactly the same As for Jason Path.",
                    "label": 0
                },
                {
                    "sent": "Yeah, so one could argue that for binary formats that have textual representations you don't really need to have a custom function.",
                    "label": 0
                },
                {
                    "sent": "And do the transformation outside of the execution of the.",
                    "label": 0
                },
                {
                    "sent": "Other query but OK OK.",
                    "label": 0
                },
                {
                    "sent": "I my second question is you insisted on the fact that the where clause is.",
                    "label": 0
                },
                {
                    "sent": "A valid sparkle wear clothes.",
                    "label": 0
                },
                {
                    "sent": "So if you have if you have triple patterns.",
                    "label": 0
                },
                {
                    "sent": "I'm.",
                    "label": 0
                },
                {
                    "sent": "Can you have?",
                    "label": 0
                },
                {
                    "sent": "Could this patterns be about the data you have just generated, know, know, know that that the idea was that?",
                    "label": 0
                },
                {
                    "sent": "In an ecosystem where you have lots of of data sources in in various formats, and you want to generate RDF, there may be nodes where there is a triple store.",
                    "label": 0
                },
                {
                    "sent": "There is an existing triple store and then you want to combine something from the Triple Store with some external sources.",
                    "label": 0
                },
                {
                    "sent": "OK thanks.",
                    "label": 0
                },
                {
                    "sent": "We have another question there.",
                    "label": 0
                },
                {
                    "sent": "I are you familiar with the XML language?",
                    "label": 0
                },
                {
                    "sent": "SML simplified.",
                    "label": 0
                },
                {
                    "sent": "No, actually.",
                    "label": 0
                },
                {
                    "sent": "OK, that's like another like formalisation for like, let's say competing art weremole.",
                    "label": 0
                },
                {
                    "sent": "It was presented at ELDO 2015.",
                    "label": 0
                },
                {
                    "sent": "It was from OK.",
                    "label": 0
                },
                {
                    "sent": "So I I have to take note of the maybe my colleague knows about it but I. OK, so there they propose a different formalisation for writing like mapping document than Art wormell and they like checked with users.",
                    "label": 0
                },
                {
                    "sent": "Like the expressivity an which one the users prefer, so I guess like I mean if you propose another formalisation another way, like of like a writing, mapping documents.",
                    "label": 0
                },
                {
                    "sent": "I guess that like that's what you're going to evaluate rather than like the implementations, yeah sure.",
                    "label": 0
                },
                {
                    "sent": "Well the implementation was more like 2.",
                    "label": 0
                },
                {
                    "sent": "For us to have an idea how how we perform to see if the implementation is quite simple, because in fact you can transform the generate query into.",
                    "label": 0
                },
                {
                    "sent": "Sparkle construct query.",
                    "label": 0
                },
                {
                    "sent": "If you you have to actually using the source to make a block of values statements in sparkle, so in sparkle you can.",
                    "label": 0
                },
                {
                    "sent": "You can put the values you're using explicitly with value statement and just just having the simple transformation of the query.",
                    "label": 0
                },
                {
                    "sent": "You could in principle use any sparkle engine.",
                    "label": 0
                },
                {
                    "sent": "To implement a sparkle, generate engine on top of it.",
                    "label": 0
                },
                {
                    "sent": "Soo but OK, let's like get a bit like more into like the evaluation.",
                    "label": 0
                },
                {
                    "sent": "So here you propose like an approach for heterogeneous sources.",
                    "label": 0
                },
                {
                    "sent": "But your evaluation is like on a single source.",
                    "label": 0
                },
                {
                    "sent": "Honest, I don't remember.",
                    "label": 0
                },
                {
                    "sent": "Honestly, I I was not the one who made the evaluation so I don't remember which query we used to do that.",
                    "label": 0
                },
                {
                    "sent": "It may be imperfect.",
                    "label": 0
                },
                {
                    "sent": "Possible, sorry about that in the paper.",
                    "label": 0
                },
                {
                    "sent": "You say that it's like a CSV file.",
                    "label": 0
                },
                {
                    "sent": "Here I can see the number of rows like yeah, it's just a scalability test actually.",
                    "label": 0
                },
                {
                    "sent": "The what was important for us is to see the curve that the shape of the curve of of our system and well.",
                    "label": 0
                },
                {
                    "sent": "In from outlook knowledge, RML is is really the the competitor in for that kind of language.",
                    "label": 0
                },
                {
                    "sent": "So we thought that that comparing the two would also help give an idea of how it's behaving.",
                    "label": 0
                },
                {
                    "sent": "If the target is the new sources I would expect at least to see how the system behaves when you have like to use like this.",
                    "label": 0
                },
                {
                    "sent": "Yeah, that's well, that's something we should we should do about the joins.",
                    "label": 0
                },
                {
                    "sent": "Did you evaluate this?",
                    "label": 0
                },
                {
                    "sent": "Is this is something that we we still have to do?",
                    "label": 0
                },
                {
                    "sent": "We have test cases we didn't evaluate the performance of this, but at least we have test cases that show that it is possible to do it and it it works.",
                    "label": 0
                },
                {
                    "sent": "So some of these test cases long list.",
                    "label": 0
                },
                {
                    "sent": "Are relying on multiple sources and sometimes different formats.",
                    "label": 0
                },
                {
                    "sent": "I don't remember which one.",
                    "label": 0
                },
                {
                    "sent": "That's not a performance test, of course, but it's at least it's a feasibility test and it it works.",
                    "label": 0
                },
                {
                    "sent": "So I mean, as far as I know from Maxim, these are the test cases that we use, like the unit test in the animal not, not only there are CSV test from the CSV on the web working group, there are various tests from.",
                    "label": 0
                },
                {
                    "sent": "I don't remember exactly X sparkle from the Xbox Aelteste set.",
                    "label": 0
                },
                {
                    "sent": "There are tests from.",
                    "label": 0
                },
                {
                    "sent": "Other did you try them without a Mail too?",
                    "label": 0
                },
                {
                    "sent": "Like the X parking with RM L2 you'd like to convey because you say like no I I don't know.",
                    "label": 0
                },
                {
                    "sent": "OK, so could you also tell us why our email is not extensible or easily extensible?",
                    "label": 0
                },
                {
                    "sent": "Well in RML you need to define.",
                    "label": 0
                },
                {
                    "sent": "You you need to change your vocabulary, you have a vocabulary to say.",
                    "label": 0
                },
                {
                    "sent": "This is mapping using a CSV file or using Jason file.",
                    "label": 0
                },
                {
                    "sent": "You would extend the vocabulary and then.",
                    "label": 0
                },
                {
                    "sent": "You also need to change the implementation in well, I'm.",
                    "label": 0
                },
                {
                    "sent": "For the implementation, I'm not sure how it is implemented, but I would guess that it's a bit.",
                    "label": 0
                },
                {
                    "sent": "More difficult to modularizes it in such a way that.",
                    "label": 0
                },
                {
                    "sent": "For for supporting a new format, you would only have to implement one custom function.",
                    "label": 0
                },
                {
                    "sent": "Yeah, you know, I'm not the first.",
                    "label": 0
                },
                {
                    "sent": "I'm not the first author of of this, so Maxim went in more detail about RML, so I'm not.",
                    "label": 0
                },
                {
                    "sent": "I admit, I'm not an expert in RML so I don't know all the details and I know that already has been evolving and by the time we wrote this paper, I don't remember exactly when it was but.",
                    "label": 0
                },
                {
                    "sent": "Probably there has been changes to two RML.",
                    "label": 0
                },
                {
                    "sent": "I think it's better if you continue the discussion offline because it's longer than.",
                    "label": 0
                },
                {
                    "sent": "Expected, so let's thank the speaker again for his presentation.",
                    "label": 0
                }
            ]
        }
    }
}