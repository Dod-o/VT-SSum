{
    "id": "xw7e5ouyeom3gyppgut4zsoxt2grlpmo",
    "title": "Fundamentals of Linked Data: Main Standards and Technology Components, Motivating Application Scenario",
    "info": {
        "author": [
            "Barry Norton, British Museum"
        ],
        "published": "Oct. 19, 2014",
        "recorded": "September 2014",
        "category": [
            "Top->Computer Science->Semantic Web"
        ]
    },
    "url": "http://videolectures.net/eswc2014_norton_linked_data/",
    "segmentation": [
        [
            "I'm not feeling too well.",
            "I apologize, so if I'm hard to understand, give me a shout and I'll go to the side and cough or whatever is necessary.",
            "But I hope that I'm clear.",
            "So indeed, having moved from academic research for, I guess that spans about 10 years worth of worth of work full with Jaune.",
            "Indeed, with context I worked for many people applying link data, including the BBC, the Press Association, but the one that I really enjoyed working out was the British Museum, because we've got cool stuff we put in terms of open data, we put online data about 2 million objects in the permanent collection with quite a rich RDF description.",
            "Of those objects, the project that I work on is funded.",
            "John mentioned European funding.",
            "I go even further afield and have American funding at the moment from the Andrew Mellon Foundation.",
            "I'm not making the ten millions yet, but I'm making the two millions.",
            "So there's two things to say about that one.",
            "It means that we collaborate as John was talking about.",
            "So we work with many museums.",
            "At the moment, the data that Yale has online, especially about their British art, we help them create in RDF and going forward we're working with people like the Rijksmuseum in Amsterdam and many and many others to publish their data online.",
            "But I'm not just going to talk to you during the week now that I've stolen a second slot.",
            "About publishing data, but also about building rail applications.",
            "OK, so we I guess we have a history in this community of coming to you with hypothetical examples of what one could do.",
            "In the Euclid project, many of whose slides I would use and would encourage you to go and look at, we came up with an application scenario that while we didn't build it ourselves, was based on things that people were really doing, and it was around music because I was pushing music as usual, so it's worth acknowledging when we go through that stuff.",
            "Both in my talk and iranis talk, that people like Eve Greymon who was at the BBC now is moving to.",
            "Netflix I think.",
            "Netflix an Alex percent who was working in Galway as a research.",
            "He now has a company called Civil Really Doing Link data for Music as a service.",
            "These people were pioneers and made rail application that we took inspiration from in Euclid.",
            "Micciche in introducing what I'm talking about now and talk about a real application that I'm working on.",
            "And again, I said there's two reasons to mention the funding.",
            "The second reason for that is where hiring onto the team.",
            "Building this application, there's a two job adverts out until the end of this week, so if anybody's interested talk to me if you're not interested in a job but you're interested in internship there, scope for that too, so that's my pitch out of the way for that."
        ],
        [
            "I come to you representing two datasets that will get chance to use and build queries about, and if you'd like in your student projects, build applications about they sort of high and low culture.",
            "OK, my day job.",
            "Is there, which is a nice place to work and we have these very well known objects like the Rosetta Stone and Easter Island head which I love working next to and I say we published data about more than two million of them in RDF and in the wealth in the time honored Semantic Web way give people a sparkle endpoint to query against, which is nice if you're on the Internet.",
            "If you're on the South Creek with a very poor connection.",
            "Not necessarily so usable, so it also sets over there on the laptop at the back, which will be on the network all week so you can access that and query against it during the week without an Internet connection.",
            "All of those same things also apply to what I do in my spare time, which is low culture.",
            "Hence Rita Ora, which was about to get into my slides, and Justin Bieber, among many other pieces of music, including lovely traditional classical Greek music, for instance, in the Musicbrainz data set.",
            "Now I'm not responsible for Musicbrainz.",
            "That's an effort that's been going on for a long time.",
            "It's basically crowdsourcing.",
            "It's almost all user submitted although.",
            "Increasingly, there pull some of the core data from record labels.",
            "Now what I do is turn that into RDF, so that step that we were talking about going from one model and relational database into RDF for consumption is what I look after for them.",
            "So I run a site called Linked brains.com which is the link data about Musicbrainz and again it's also sitting at the back.",
            "It finished loading while John was talking the dump from yesterday that I made.",
            "So we have very new up-to-date music data.",
            "If you want to base your projects around something like that.",
            "So some."
        ],
        [
            "Lessons from these things and using those as teaching material as I've done worth mentioning 'cause John said I used to train at the BBC Academy and Eve indeed pushed Musicbrainz, which he done a mapping of an old schema of when he started when he left Queen Marian worked for the BBC so that one of the things that the BBC published very early in terms of linked data was there music reviews marked up using Musicbrainz.",
            "So instead of just saying.",
            "We reviewed this terrible new album from Justin Bieber.",
            "They say we've reviewed this terrible new album with this.",
            "You are I from Justin Bieber who has this yr I which has these tracks on that have you are eyes and use RDF to explain the connection between those persistent artifacts.",
            "OK so.",
            "That's motivated by that's recommended by this note from Tim Berners Lee, who seen this before.",
            "OK, so we talk about it often, so don't be glum that I have.",
            "This slide I'm going to concentrate on one part specifically that I find we don't talk about enough.",
            "OK, it's not.",
            "Use your eyes as name names for things, because that's well accepted.",
            "OK, all of the rest.",
            "People will tell you exactly the same thing.",
            "Give you our eyes to the parts of your process.",
            "If you're building an API.",
            "If you have an online order system, the customer has a persistent web ID, which is ERI the order that they create has a persistent urri the items that they put into that order all have persistent ur eyes.",
            "OK, we don't need to persuade the world.",
            "Of that principle, they know it.",
            "They do it second principle.",
            "Use HTTP ur eyes.",
            "That's just a corollary.",
            "Most of what people build software with now has some web elements and the identifiers that they use are HTTP or web.",
            "Ur eyes that you can resolve battle one.",
            "Linking to other things again that it's almost taken off.",
            "Hopefully with us, hopefully not despite us, but it has taken off.",
            "If you're not talking about a knowledge graph in the last year, then you're not on the hype curve.",
            "Everybody is talking about building graphs of knowledge where you interlink these things that have ur eyes.",
            "OK, Google are doing it, Microsoft are doing it.",
            "Facebook are doing it.",
            "LinkedIn are doing it.",
            "It's just a nice model for things.",
            "OK question is why is it a nice model and why do we have this recommendation in the middle that you should use these technologies?",
            "RDF and spark?",
            "All right, so I'm going to try and motivate a little bit why this data model and why use these standards because the world buys the rest of the stuff already.",
            "You can learn that from anyone."
        ],
        [
            "So are there any Futurama fans 'cause if not, this falls flat?",
            "Thank goodness there's one of two, so it's like back wants to know why that bit why these standards, OK?"
        ],
        [
            "Why not indeed?",
            "Just use CSV's OK and this is a really timely question.",
            "I think this is what the W 3C are concentrating on the at the moment.",
            "How much open data can you just publish using, separated value files?",
            "Essentially spreadsheet tables?",
            "OK.",
            "Some very good things about CSV's and you can see it reflected in John mentioned that governments publish a lot of data.",
            "All of the UK stuff is on this hub.",
            "Data Gov UK OK and indeed as a partially publicly funded body the British Museum is part of that.",
            "We publish RDF.",
            "But when you rank the datasets that comes very low right up at the top comes CSV files.",
            "OK, it's actually quite easy to do.",
            "But even more than that, it's easy to deal with for certain tasks.",
            "OK, you'll hear people talking about a lot, line by line processing.",
            "OK, where one line of a file ending in a line break has a unit of information that you can do some processing on and then go to the next line.",
            "OK, and this fits very nicely into the big data world where we use tools like Hadoop.",
            "OK, if you have such a file massive.",
            "The massive one where every line is understandable by itself, you can chunk it.",
            "According to some threshold some size and send each chunk off to different places to get processed and then just do a bit of processing to put them together at the end and get your results over as much hardware as you want to throw again against it.",
            "OK, that's called MapReduce.",
            "In the map step you find your chunks.",
            "You map the processing that you want to apply over each chunk, and then he reduced the results together to get the final result.",
            "There are a lot of problems that can be tackled that way, but there are a lot of problems that can't as well.",
            "OK, a lot of the backlash against the Hadoop style of Big Data is.",
            "It only fits some problems right.",
            "Not everything can be described line by line in that style.",
            "Oh yeah, I'm just a plug because I hope that people are using this kind of thing in their projects.",
            "They would.",
            "The resurgent scale is knowing about how to use tools like grep and SED and AWK and jumping to scripting languages like Python when you need them to do this style of processing.",
            "OK, I'm not saying you shouldn't do this, I'm saying you should do this.",
            "OK, I'm saying the model of your data that you publish in that you sharing that you agree with other people is very very often more rich than this.",
            "OK, so does that mean that you have to do everything in a triple store or inside an OWL reasoner or something?",
            "No, not at all.",
            "Sparkle is an interface to this world.",
            "Any select query which will learn about just after lunch.",
            "You can view the results as a CSV file, but you've said how to take the rich data and transform it into a table.",
            "That means something line by line, not as much as your whole data, but enough for a particular application.",
            "OK, so this stuff is great, but it's not how to publish data that's richer than that.",
            "You publish data in a richer model and use something like sparkle to reduce it into a line by line processable file.",
            "Oh, so the answer to that."
        ],
        [
            "I forget how funny this presentation is.",
            "Why don't see his face?",
            "No, no, that's not enough."
        ],
        [
            "So an example from music, because it's always going to be music with me.",
            "If it's not the Easter Island head, this looks like a nice way to share album information.",
            "About 60's rock middle of the road stuff because it's in summer school.",
            "We've got a column for artist, a column for album.",
            "OK, so we've got rubber soul and revolver with some of the 60s albums from The Beatles are inside and Peppers and we have the Stones albums underneath that.",
            "OK. Now from anybody know from a database point of view why old school relational databases would object to this?",
            "Yeah.",
            "Because this information repeats, so unless I really say that's an identifier.",
            "Then I'm repeating something that should be under a separate primary key and the name of an artist isn't an identifier.",
            "OK, there are several artists with the same name, so you can't just use their name to give an identifier to them.",
            "OK, but that is a file which can be very useful for line by line processing, but it's in database terms, it's denormalized.",
            "OK, we take what should be, will jump to that in a second under another table.",
            "Under a key with you under the identifier is a key and push it all into one table.",
            "So what kind of things can I do with that?",
            "If somebody gave me that CSV file on the web, what kind of questions could I answer with it?",
            "How many albums does peopleready exactly how many albums did The Beatles release?",
            "How many albums did the Stones release?",
            "How many albums did The Beatles release that start with the letter R?",
            "I'm being a bit glib, but there are useful things that you can do.",
            "On top of that."
        ],
        [
            "Now as the denormalization, if I want to add the tracks, look look what happens.",
            "Now the duplication goes nuts OK when I want to have all the tracks on rubber soul.",
            "Now I'm not just repeating The Beatles, which isn't really an identifier under The Beatles.",
            "I'm repeating rubber soul, which isn't really an identifier.",
            "Again, out different albums share names.",
            "It's not a good identifier.",
            "OK, but still that kind of denormalized table can be useful to give to someone for processing.",
            "I can process that in Ork or in a little Python script and tell you things like how many tracks were on rubber soul.",
            "OK, what's the average number of cracks on a 60s Beatles album?",
            "I start to answer real questions with that data.",
            "But just because that's useful for you to answer those questions doesn't mean that that's a sensible way to publish music data.",
            "It's not.",
            "OK, card would like it and Tim would like it."
        ],
        [
            "So last word about denormalization.",
            "If I want to have gift to someone both who were the members of The Beatles and what albums did they release with which track on now Denormalization gets utterly nuts 'cause that's two different degrees, that's two different dimensions.",
            "Of hierarchy in that data.",
            "OK, before we saw strict hierarchy that out, there artist releases the album and the album has tracks on now we've got that, but it's that the artist who has members the band who has members.",
            "OK, so I've got no easy way to denormalize that.",
            "Do I repeat and repeat and repeat all of the tracks on rubber soul for every single member of The Beatles?",
            "Or do I start putting nulls in and make this a really sparse representation?",
            "Both of them are poor choices.",
            "OK, and it's that is absolutely the reason that this isn't a single table model and I shouldn't be giving people a single CSV.",
            "So what I could do in the old school way?"
        ],
        [
            "Well, not old school.",
            "This is what people are doing on data Gov UK is give people Excel files instead of CSV files.",
            "And often people make the mistake.",
            "Oh, that's just the proprietary version of a CSV.",
            "It's not.",
            "OK, an Excel workbook has several worksheets on it and people use them like relational databases.",
            "If you know this model, they put the different degrees of extension from a route from the artist on different sheets.",
            "So I've got one sheet that tells me the member of these bands, John Paul, George and Ringo and Mickey, Charlie and Ronnie, OK respectively for Beatles and Stones and on a separate sheet I have the albums from those artists.",
            "OK, now that is just to me.",
            "Indicative that those people should know more about relational databases, OK, what they're doing is denormalize.",
            "Sorry is normalizing the data across separate tables, but not in the way that a relational database will allow you to govern that properly.",
            "To make sure that you're doing it properly and optimizing processing of it.",
            "So."
        ],
        [
            "Why not use relational databases?",
            "We have decades of experience in that, whereas for my 2 posts this week I can probably guess the origin of most of the candidates that I'll get who are experienced in linked data and sparkle.",
            "If I were advertising for a sequel post, there's millions of people all over the world would be interested.",
            "There's lots of skill there in SQL.",
            "OK, that's the query language for relational databases.",
            "If you don't know now.",
            "Musicbrainz in fact is and remains in a relational database.",
            "A few years ago, just just as I started to work for Queen Mary, which is why I went there.",
            "They were talking about reorganizing the schema for Musicbrainz to make it more extensible.",
            "OK, and they chose to stick with Postgres and relational database.",
            "That's the core schema.",
            "OK, each one of the boxes is a table.",
            "Each one of the arrows is a foreign key relationship between tables.",
            "OK, is the use of, say and identify defined by this table.",
            "In rows in that table, so you can refer to the album that was made or the OR from the track.",
            "You can refer back to the album from the member.",
            "You can refer back to the band.",
            "In theory it's not what they do in that case, but I'll explain that in a second.",
            "OK, so relational database is great.",
            "Is TT listening?",
            "I've gotta be cautious with this on why don't we just put relational databases on the web?",
            "They do OK, they don't give a public SQL endpoint the way that we talk about public sparkle endpoints.",
            "OK, 'cause they know SQL is expensive and lots of people might be using it one.",
            "They build an API which is something that he's going to tell you about and John will probably mention again too.",
            "They say if you want the whole database.",
            "You can have the Postgres index.",
            "OK, and load it into Postgres yourself, but that's really tough.",
            "Or you can just have a virtual machine.",
            "You put it into your VM host into VM Ware, ES XI, VirtualBox and press go and there you have your SQL endpoints.",
            "OK, so there's one of those running over there.",
            "Why don't we do that in general?",
            "In fact, why isn't this the model for data on the web?",
            "Teacher will say it could be it can be in some cases you can use the entity relationship model to expose data, but Musicbrainz has a selling at less."
        ],
        [
            "Son.",
            "I think I've said all of that in fact, so that you can get the virtual machine with that database already running and run your sparkle against it.",
            "It's also worth mentioning last time I did mention this, Jim Hendler was in the audience.",
            "I had to win him over a little bit, but he agreed with me in the end.",
            "I believe that most CSV on the web.",
            "Isn't what we what we believe.",
            "People typing into Excel and then exporting from Excel to CSV.",
            "There's a huge amount of CSV which is just dumps from relational database tables.",
            "OK, so there's that commonality.",
            "If you want to do your line by line processing, you can use SQL on a relational database to give you the CSV that you can go through line by line, and people do it in the massive numbers.",
            "So.",
            "Aside, Bug says, why not relational databases?",
            "Why not keep that model and publish our data that way?",
            "Any ideas?",
            "OK, the difficulties and I'm glad this question came up during John's talk maintaining things.",
            "OK Musicbrainz is a classic example.",
            "It started in the days of when MP, threes, just MP3 sharing just became popular in the Napster era.",
            "Oread is Genesis then.",
            "People both say VICD sorry, stick them in their machines, rip them and want to share them.",
            "In order to share them.",
            "With our friendly, searchable tool like Napster, then he tags you need to know what's the album called.",
            "What are the tracks called?",
            "Who's the artist?",
            "So somebody can search for Metallica's album that Metallica got very annoyed about people having from Napster.",
            "So there were services that would do two things catalog albums and the tracks on them against artists and do a clever thing called audio fingerprinting where it can look at what you've just raped.",
            "And identify which track it is and they therefore retrieve that that artist in the album information CDDB, one of the services that did that got taken over as I remember, and people were looking for another source for this and Musicbrainz set, came up with a really nice idea on heavily in support of let's have a wiki where we can crowd source, which is a lovely crowdsourcing tools.",
            "This information.",
            "Let people submit it and rebuild that database completely in the public domain.",
            "OK, after they got quite successful at that, many people were using this service.",
            "They started subverting that service in from one point of view and saying it's actually a really rich resource of music publication information, but could we add the producer on the album?",
            "Could we add the guest musicians on a particular track?",
            "Could we get that if you buy this in Japan on CD you get 2 extra tracks from the European CD release?",
            "Unless you buy the vinyl release in London.",
            "OK, seriously, this is how music goes on.",
            "As John says, I'm a big geek about it.",
            "So people start saying can we add this?",
            "Can we add this?",
            "Can we add this and everything that they want to add is a relationship between a concept which is quite stable.",
            "We know what well I keep saying album Musicbrainz is a little bit finer because of this issue of how things get released and even strange things like multiformat releases and different geographic releases at different times and reissues.",
            "It calls release group what we commonly understand US album.",
            "OK, it has releases inmates that are released on a medium and each medium has a track list made up of tracks and the tracks have audio signatures.",
            "Those things don't change much.",
            "Artist release group release Medium, OK, Fairly stable, but people keep wanting new relationships between things.",
            "OK, now for my money.",
            "I would say the best model where you.",
            "As John says, we know from semantics where you have a core stability.",
            "But some extension, overtime and where that extension is relationship oriented for me.",
            "You should use a graph model.",
            "And I'm not being a link data zealot.",
            "I'm quite happy that you might consider using a graph database that isn't necessarily really in our world like Neo 4 J, or many of the other things that Maribel is excellent tutorial that you should look up and goes through OK.",
            "There are graph lots of graph oriented databases, some of them do RDF import and export, and some of those give you a sparkle query interface.",
            "OK, I'm not saying that you necessarily need RDF and Sparkle to do this, but it's very nice.",
            "I'm saying your best model would be graph oriented.",
            "You identify those things.",
            "That are off stable classes.",
            "Got the artists that releases, etc.",
            "The instances grow overtime, but the classes stay fairly fixed, but people want new relationships all the time.",
            "OK, who was associate producer who played the kazoo?",
            "Who was on this album but credited under a different name 'cause he was under contract under exclusive contract to a different record label.",
            "This music geeks love things like this and when the data set gets over a certain size via crowdsourcing, they want to offload more and more of their intense geeky knowledge.",
            "OK, so we need a data model that let's them do that.",
            "What musicbrainz days."
        ],
        [
            "We start with a relational database.",
            "This might get complex, so I'm not going to dwell on it too much.",
            "It's tough to do that in a relational database.",
            "Fundamentally, what you need to do every time you have a new relationship.",
            "In a properly normalized relational database.",
            "If it's a one to one or a one to many relationship, you need to introduce a new column into a table that's quite disruptive, because everybody who's running one of these virtual machines with your database on needs to stop the database, change the schema.",
            "Massage the data they've already got into that new schema and then potentially adapt all of the queries that they have over it.",
            "That's bad enough if you have a many to many relationship and it's normalized.",
            "You need a new table.",
            "You need to introduce what's called a join table that can point to both sides of this relationship.",
            "What Musicbrainz date?",
            "Again, this is the kind of thing that would make card who established how not just the relational database relational model should work through relational algebra.",
            "But also how you should get your data in there.",
            "It that's commonly broken, we often have denormalized data in relational databases 'cause it doesn't fit or it doesn't evolve well, OK, what Musicbrainz does very briefly is has a predefined set of join tables for relationships between any two entities you can think of.",
            "So all tests to release group artist to track OK Artist to artist itself.",
            "OK, and it has one extra table, a table full of ur eyes so you can have artists who you are.",
            "I relationships OK through that join table without join table.",
            "Doesn't say what kind of relationship it is so that introduce a table called linked link types and anybody can go to the wiki or to the API and submit a new.",
            "Link type to type the relationship between things of a certain pair of classes so you can say I've just started a new new music review website.",
            "I'm reviewing albums, so I want to use the table that links albums properly, called release groups to websites.",
            "the UI table.",
            "But each such link that I make I want to type it with the type that says this is done with his name.",
            "This is John's review.",
            "OK, so we can do that.",
            "But it's painful to query and it's not normalized and it doesn't work to what relational databases do.",
            "Well, I think I might have the slide now.",
            "I don't.",
            "Previous years I talked about how we go about mapping this relational database into RDF, which you can query at the back of the room or online in order to make a simple query like using the DB pedia that John mentioned IDs for The Beatles and Paul McCartney.",
            "Is Paul McCartney, or was he ever a member of The Beatles?",
            "OK, in sparkle one triple pattern, which is actually just triple you say Paul McCartney member Beatles, tell me that it says yes.",
            "OK, on this model, which is how everything with Musicbrainz is built outside Link data, you have to do 15 joins to answer that query.",
            "OK, 'cause you have to go through these join tables and disambiguate what link type it is, it's not pretty."
        ],
        [
            "So last query?",
            "Oh yeah, please.",
            "That is, the with the relational databases we we must know the team in order to to.",
            "3 squared, yeah.",
            "Do not have to know that you don't have to know the whole schema.",
            "You have to know which relationships you are interested in, which may involve knowing which classes of things you're interested in and what relationships they potentially share, but you don't have to know the whole schema.",
            "You have to know some of the relationships and those relationships might not be explicitly stated in the data.",
            "This is what I was talking about.",
            "Reasoning you can query for relationship that nobody explicitly made.",
            "Between 2:00, you identified things because they made some other relationship or chain of relationships that infer the one that you know.",
            "OK, so it's much.",
            "Less of an all or nothing to learn how to query link data, but then even more this extensibility that I was talking about comes in as well.",
            "You don't have to know that someone has added a new relationship because they haven't changed the schema, they've just started using a bit more schema.",
            "And when you find out about it, you might want to query about it, but in the meantime it doesn't affect you.",
            "They haven't changed the definition of tables, they've just put some new arcs in the graph that you weren't looking for anyway.",
            "OK, so they're perfectly safe there until you decide that you want to use them.",
            "That's why extensibility is nice.",
            "Yeah, question on the motivation behind the maintainers issue, yeah?",
            "Finally, elementary just changed the controlled environment within an uncontrolled one.",
            "I mean, in databases we have normalization that is here to control the data to make that there is no error.",
            "Yeah, in the RDS or all schema, the way that we are using them, there is no control.",
            "I mean in all the datasets that I used.",
            "Yeah, there's very few actions and if its actions actually haven't, we changed some technical.",
            "Challenge with semantic challenge.",
            "Yeah, so I've got 222 things to say in response to that.",
            "We go back to France, so address the end.",
            "I don't believe that axioms as in Owl ontologies that will talk to those of you who are not so familiar with the rest of the week are the right way to constrain your data.",
            "Owl is not a constraint language.",
            "OK, in many cases when you think you're constraining something, you're having a very different effect than the one that you expect.",
            "If you're thinking it's a constraint.",
            "If you say the cardinality of something is wrong.",
            "If you say the artist that recorded an album is unique in Owl, perfectly easy to do, and then someone says Sargent Peppers was made by The Beatles and Sargent Peppers was made by The Rolling Stones.",
            "Your database doesn't tell you cardinality constraint violated.",
            "That second statement is not one that you should add.",
            "It says oh, The Beatles and The Rolling Stones must be the same band.",
            "OK, axioms are not the way to constrain.",
            "Your triplestore or anything that uses semantics.",
            "So now let me jump back earlier in the question.",
            "You're kind of suggesting that what we've got is a choice between relational databases or triple stores.",
            "What we call native RDF databases is a much better term, but everybody knows this time Triple Store.",
            "In fact, there is a whole spectrum of data management now beyond the summer school where it's only our remix talk about semantic technologies.",
            "I'd really recommend the book Polyglot Persistence by Martin Fowler.",
            "So nice survey of the different ways that people manage data.",
            "And most debate now most of the new things where the activities happening is not relational.",
            "They call it no sequel.",
            "To some degree.",
            "It may or may not support SQL, but what it really doesn't is support that acid properties that have always been associated with relational databases.",
            "OK, now among those different ways that people are storing data now are key value stores.",
            "Key document stores with partial indexes, graph databases.",
            "Some of those graph databases, RDF databases.",
            "OK, all of them have gone for this again.",
            "It's a bit of a misnomer.",
            "Schemaless.",
            "Idea Schema list doesn't mean that there's no schema.",
            "It means that the schema is more flexible and can evolve without doing this awful.",
            "Shut the whole thing down, split the table, load all the data again, check all your queries.",
            "OK, everybody wants schema lesson, evolvability.",
            "OK, now the way that you ensure the integrity of your data.",
            "Therefore, is an issue not just in this binary choice between triple store in relational, but in all of these databases that potentially violate things like consistency.",
            "So there aren't points in the world where you say the data should be consistent and someone should check it.",
            "For me, OK, the way that big web companies like Facebook operate now is, there aren't consistent points.",
            "There's never any global view of every post everyones made, and every comment that was made to it.",
            "If I check in Europe or if I check in East Coast America, I see a different representation of what comments there are and what likes.",
            "There are often quite disconcerting when you travel around to see, but I posted that and it's just not here anymore.",
            "And then a couple of hours later it is there OK.",
            "They've thrown away consistency.",
            "So you have that as well.",
            "You want to check that somehow your data has a notion of consistency, but there aren't global points where.",
            "One database engine could check it for you.",
            "Now everyone is running on distributed clusters.",
            "OK, so now to jump back to the first point with RDF data, don't use owl is my recommendation.",
            "You Sparkle Sparkle 1 one has got much better at running queries that check what is and isn't in your data.",
            "OK for me.",
            "The way that I want to constrain what do we publish to the world is to do something like test driven development in programming.",
            "In test driven development, you set a test and then you write code that matches it.",
            "In my way of publishing data, you write queries that should have positive answers and also queries that should never be true, 'cause they violate properties like uniqueness.",
            "OK, write those queries and then regression test your data against it.",
            "Don't put in new inferences without testing all of those queries.",
            "OK, don't accept data from someone else and load it up into your triple store and expose it on your on your web rather than your nearest staging database.",
            "Without regression testing against all those queries.",
            "That's how you check your data is in good form for other people to use.",
            "OK, now I should go slightly right in the face because I said I just loaded a very new dump of Musicbrainz while John was talking, so we'll see if that makes sense.",
            "OK, last bed this this was bigger John.",
            "We spent a long time working on this whynott.",
            "If you're exposing things on the web, go with these web technologies.",
            "OK, in the 90s there was this big fandom for HTML.",
            "That was the basis of the web.",
            "OK, so let's.",
            "Take this human readable view HTML and produce a machine readable thing for sharing data XML.",
            "OK, it's also it doesn't impose a schema.",
            "You can define any schema you want in XML and publish and share data.",
            "OK, even to some degree, people looked a bit at HTTP and said, yeah, let's transmit it the same way that web pages are Saints.",
            "OK, so didn't we solve all of this in the 90s?",
            "Is not the way to go?"
        ],
        [
            "My favorite slide for me.",
            "As I say, we we spent a lot of time applying semantics to XML based, soap driven whistle, described web services, and while we were researching realized that's actually what everybody in the enterprise is doing.",
            "Laughing that XML and soap.",
            "OK, the rest of the world has gone.",
            "Rest is passing things around in Jason using HTTP properly instead of abusing HTTP to send around XML, which is all fallen over specified."
        ],
        [
            "So just to try and give you an idea what you could do, that's what HTML looks like.",
            "We've probably all seen it.",
            "You can make it XML schema for your music and it's nice 'cause it's nested so you can do hierarchies and you can do separate branches of hierarchies away from one another.",
            "Look I've got my.",
            "Recurring list of artists and here's one artist called The Beatles and I can put the Members and then separately from those I can put the albums and underneath the albums I can put the tracks.",
            "It's lovely, solves everything.",
            "Right now it doesn't.",
            "Again, extensibility is an awful problem here.",
            "What do I do with that schema when someone says it doesn't work very well with The Beatles?",
            "Alright, let's say, but that pool that you've got there nested inside The Beatles.",
            "He was also in wings.",
            "How am I going to express that?",
            "How am I going to say that he was a producer on another album?",
            "There's just no space in the schema for that.",
            "You end up breaking this scheme or all of the time as well.",
            "OK, added to which."
        ],
        [
            "We were doing this which violates what everybody knows, not just us.",
            "Which is you should one use your eyes to identify things, but two let people look at the ur eyes up to find out about them, OK?",
            "On the web.",
            "You have this, tell me about and I think that's The Beatles.",
            "They usually you ideas.",
            "Will talk about ideas in about OK, they don't have to be human readable.",
            "But that identifies The Beatles and you can pass it around and give it to other people and they can look it up to find out what you were talking about.",
            "With soap, you get that everything all of the music in the world is under slash WS or something like it.",
            "It's only by 9 what XML you send to request things from that place on the web that you get anything intelligible at all.",
            "OK, so if you tell me about The Beatles, I have to understand the entire schema in which you sent it to me.",
            "And it's related schemas.",
            "To find out how to ask more about it and that will break the minute that somebody wants to express something else about those entities.",
            "Not nice."
        ],
        [
            "So Jason rest.",
            "Gets rid of a lot of the horrible stuff in XML.",
            "So nice simple hierarchical schema with recurrent elements.",
            "Really nice with programming languages with JavaScript switches.",
            "Really majority programming language now it is it's native data representation with other programming languages now that they all have dictionaries.",
            "OK, even apples lovely new language that looks a bit like Objective C looks a bit like Python.",
            "Why does it look like Python?",
            "Because everybody's got dictionaries, so you can pass it really easily into a programming model, and people often not always, but often use HTTP well when they're passing.",
            "This Jason around, OK?",
            "It's kind of schemaless because you're adding keys to a dictionary.",
            "You don't break things, but you do because it's hierarchical.",
            "You have a fixed hierarchy for things, so if you've embedded something in a hierarchy that now you discover that you need to use in a new context, you've broken your schema and you have to refactor and databases that take Jason like Mongo DB have maybe not as much, but have a serious of problem with refactoring, as do relational databases.",
            "You have to take the thing down, take all of the data apart making new hierarchical model for it.",
            "Load into that.",
            "Have everybody change how they interact with that API is painful.",
            "The native graph model is much nicer and this is where we're getting too.",
            "Native graphs, lots of people using.",
            "People are sharing them.",
            "How do you share?",
            "A graph?",
            "How do you write?",
            "Write it down.",
            "We don't have CSB.",
            "We don't have SQL definitions.",
            "So how do you share a graph?",
            "A.",
            "That's a nice thing to do, but not if not.",
            "If someone wants everything, OK.",
            "If I want to go to my government Department so one of the ones that funds US Department of Culture, Media and Sport and say tell me all of the funding for this sector, I don't want to be walking through an API and learning about it and gradually building up that stuff.",
            "I just want to give it to me.",
            "Now if it's nice and tabular, maybe they can give me CSV and you can produce that from a graph.",
            "Sparkle is one way.",
            "But if, as we saw earlier, within Denormalization, the model is so rich and potentially changing all the time that I need for it to be a graph.",
            "How do I get a whole graph to someone else?",
            "There's really only one game in town, and it's already F. OK, you look at other people doing graphs and so Freebase is the basis of Google's knowledge graph.",
            "I said knowledge graphs are these big attempts to build massive graphs full of relationships.",
            "There is an API, there's a query language for it.",
            "MQL, on the Freebase API.",
            "But the best way to get the whole graph is as RDF.",
            "OK, even though it's not a native RDF database that runs Freebase there.",
            "GIF RDF to other people.",
            "OK, nicest way to get all of Musicbrainz isn't to go through.",
            "All of those awful schema SQL definitions of tables and insert the data aim I'd.",
            "I'll give it get the RDF graph.",
            "OK, what do people do with other graph databases?",
            "Embarrassingly, if you want Musicbrainz in Neo 4 J, you have to download the binary indexed image of NEO for J and reconstitute it under the same version of database or under one that's backwards compatible and will upgrade it.",
            "Or for the W3C has solved this for us.",
            "You can pass around graphs to other people in RDF.",
            "OK. What we really will talk about after lunch is they've also standardized for us.",
            "How do you interact with that graph with complex queries?",
            "Do you have to learn MQL for Freebase and another API for a different graph and another API for different graph?",
            "No.",
            "If you load RDF.",
            "A good database that supports it will be able to give you a sparkle interface over rates for a standardized query language that should work the same here and there and everywhere, at least so far as SQL says that.",
            "8:00 o'clock hello are you talking?",
            "12 times lunch 12:30, right?",
            "So let's talk.",
            "I might."
        ],
        [
            "No slide I had."
        ],
        [
            "Yeah, plus I am going to flip to as promised some Euclid material."
        ],
        [
            "OK, so I'm going to skip entirely the motivating scenario for Euclid, but just mention it was music based.",
            "Therefore we will see after lunch some music oriented queries and me sweating trying to get them to work on the Triple Store at the back."
        ],
        [
            "Because I shouldn't have got a life to prepare the more in advance, but we'll see.",
            "I'm going to jump forward to review this idea of RDF, and I'm going to reinforce this.",
            "I'm going to jump to the high culture stuff at some point.",
            "This way you can tell you about it.",
            "Again, everything in RDF is a statement modeling and relationship between two things.",
            "OK, we normally give AURI to the things being related to The Beatles, to Sargent Peppers too.",
            "Wrong album, I can't think of any tracks on it.",
            "Embarrassing so to these things to the artist tracks albums OK and then make relationships between them that are one directed.",
            "OK, it's from one of these things to another one.",
            "OK, and that we can say disambiguate it, or in general in graph terms labeled with what relationship holds between those two things.",
            "OK, so the fact that Paul McCartney is a member of The Beatles.",
            "The member of is a relationship.",
            "There might be other relationships between those two same entities.",
            "You might have relationship for being a founding member of a band.",
            "OK, so you get that.",
            "A relationship name as well an identifier.",
            "Two things that go along that those relationships we need to identify and we need to let people understand they can go out to the web and find out what is the relationship that you've said exist between these two things.",
            "So it's an identifier.",
            "So we use a Uri and we want people to be able to find out about it even when they don't know.",
            "So we're using HTTP ur eye in linked data.",
            "OK, so in music we use an ontology that.",
            "Perhaps without much flair is called the music ontology, but it was made by Eve who I mentioned before, who you should all be quite impressed has now got a great job at Netflix and is moving to California.",
            "He indeed makes relationships in that ontology like member of and founding member of OK.",
            "He gives them ur eyes which means one you can understand them, their HTTP ur eyes, you look them up and you get the ontology definition for what that relationship supposed to mean.",
            "And two you can reuse them.",
            "Which is what John was talking about.",
            "OK, you don't have to use all of the music ontology to model some things about music.",
            "OK, I'll talk about another ontology, which is what brings me to Crete so often, even though I can't deal with the climate.",
            "The group 4th of in Iraq, Leon are the leaders through a group that Dominic will probably tell you about the International Museums Group called the CRM, which is about modeling cultural heritage.",
            "This is an application idea which isn't.",
            "Completely made up.",
            "I actually did.",
            "This is to say I met someone who was making a radio show.",
            "OK, now radio programs Eve after he started the music Ontology at Queen Mary went to the BBC and made what's called a program ontology.",
            "So giving information to programs.",
            "There's no apology for that.",
            "The person who was making this radio show on Resonance FM in London was going to the craters at the British Museum and saying pick a favorite Gallery in the museum and tell me what music you associate with it.",
            "And then during the show will play that music and you will talk about the Gallery and some of the objects there.",
            "OK, I wanted to make that into linked data, which means I need the program ontology.",
            "I need the CRM ontology that we used to talk about objects and I need the music ontology to talk about what music they chose.",
            "I didn't need to know or use the whole music ontology, nor the whole of CRM, nor the whole program ontology.",
            "I picked what classes of things do I have?",
            "The programs for the radio programs?",
            "The man made objects for, the objects, the locations for the Gallery, that albums, and the tracks and their artists for the music and reuse those classes.",
            "And some of the relationships between them to encode that link data.",
            "And I didn't define for myself.",
            "A single new class or property I just made instances of those existing ontologies and very often that's the case.",
            "You can.",
            "So everything in RDF.",
            "Is relationships between identified things OK the from in the relationship we call the subject, the two we call the object?",
            "The predicate predicates what the relationship is.",
            "That middle bit says member of or has track or things like this.",
            "OK, in the simple case that all ur eyes The Beatles has a UI member of has a Uri an I'm sorry the wrong way round member has a Uri and Paul McCartney has a Uri.",
            "So the triple the statement is 3YR eyes in a row OK?",
            "And if you view it as a graph, you've got a node for Paul, a note for The Beatles and Arrow between them that goes from The Beatles to pull because respectively, the subject in the object and is labeled with the relationship.",
            "What we called a predicate.",
            "OK, probably worth saying.",
            "You hear both property and predicates.",
            "The slightly different property is the definition of the relationship predicate is the role that it takes in a triple is being used as the middle part of a triple OK, so ontologies give you properties, then statements that you make.",
            "Use those properties as predicates as definitions of specific relationships."
        ],
        [
            "So here's some examples.",
            "Oh, I start with the same us.",
            "Can't remember we did that.",
            "Musicbrainz has an ID for The Beatles and so does DB pedia.",
            "OK, one thing about these identifiers that's worth knowing is.",
            "They have to be unique in the sense that if you use a UI for The Beatles, you can't use it the next day for the stones.",
            "Once you've used in your eye for something, you have to be consistent.",
            "You don't reuse it for something else.",
            "You've said I want everyone to agree when I say this, I mean The Beatles and they might want to use it to you.",
            "Stick with it.",
            "OK, that doesn't mean that everyone has to use the same UI for The Beatles link data deliberately.",
            "An owl and RDF S underneath.",
            "They don't have what's called a unique name assumption.",
            "In fact, there can be multiple ID's for something like that.",
            "An owl.",
            "Which will learn more about gives us an easy way to overcome those differences and say this is the same as that.",
            "OK in this owl namespace and will get rid of those very quickly.",
            "We have a property called Samos that says this means that and that means this and anything that Musicbrainz knows about.",
            "The Beatles.",
            "Can be inferred into this identified the DPT users and vice versa.",
            "Anything you can get from DB Pedia goes with Musicbrainz.",
            "Now we merge really useful things 'cause Musicbrainz has lots of release oriented information publication information whereas Wikipedia hence DB Pedia has more biographical information put them together and straight away.",
            "You have a nice application scenario putting that stuff together.",
            "Literal is just a bit of text without a global identity, we don't need to be making shared statements about this string of text.",
            "The Beatles or about a number like 3 or about the date like the 1st of September 2014.",
            "OK, those can just be bits of data without a global identity.",
            "And just like XML, and indeed when you encode RDF in XML really using that, we use this idea of literal OK. Literals, as we'll see in a second, can be disambiguated a little bit, but.",
            "So far so good.",
            "Everything is triples.",
            "Everything we've seen so far is verbose.",
            "Full sentences, subject, predicate, object.",
            "OK. We know that we can ease your eyes for these things and for an object you could use a literal.",
            "You can attach something that doesn't have identity is just informative."
        ],
        [
            "You draw it in a graph.",
            "He looks like that OK.",
            "The subject is the start of the arrow.",
            "It means that if you've got more than one statement where AURI is used in both of the two statements.",
            "You can move."
        ],
        [
            "Which of these arrows together to make a graph?",
            "OK, so those two statements that we had before the subject was the same you are.",
            "I OK where you've got two statements that have the same subject?",
            "You've got two arrows 'cause you got two statements, but they are from the same place from the same subject.",
            "OK, so you had that outgoing reshape.",
            "If they had the same objects they would have the incoming V shaped.",
            "They're both arrows pointing to the same thing, and that I'm so sweet you don't take pictures.",
            "Do you think so Photoshop happy?",
            "I blame being L OK two statements, two arrows in a graph and you've got these merge points.",
            "OK, it doesn't matter who made these assertions.",
            "We say if you get a statement from someone, it's an assertion.",
            "Doesn't matter if those two assertions were made by different people, we can merge them into one graph.",
            "OK, so if.",
            "From Wikipedia, DB Pedia tells you something about The Beatles, and Musicbrainz tells you something more about The Beatles.",
            "You can merge those graphs together, either becausw they share ur eyes in the 1st place.",
            "Unfortunately Peter in Musicbrainz don't do this very well.",
            "Musicbrainz and Freebase do that very well.",
            "Or so when that doesn't work by using same as to merge them in the 2nd place through reasoning so they were separate bits of graph but same as means actually two of those nodes are the same, so we can merge them after the fact.",
            "I was on about the same and so yeah, kind of left.",
            "Here goes, I mean same as it's like a strong commitment.",
            "It is a strong commitment so.",
            "I'm not sure what you mean by flat, but let me tell you what it does.",
            "OK, if you have this same as.",
            "Then it means everything that applies as a relationship to either of them.",
            "So for instance, this name of The Beatles applies to the other one as well.",
            "So through inference we take all of those outcoming arcs and add them here.",
            "All of the incoming arcs and add them here, and vice versa.",
            "So you just merge the whole thing semantically, so there's no difference between them.",
            "And you're right, that's a very strong commitment.",
            "So in the application that I'll talk more about the British Museum, we very often don't use a mass.",
            "OK, we have a central work of our documentation Department is to provide the vocabulary for people to describe things like people and places common everyday examples.",
            "But materials and cultures OK.",
            "When we when we document a certain material as being part of the composition of an object, we would like to put that together with other museums like the yellow collection and Rights Museum and other things that I may have mentioned.",
            "They might mean something subtly different by the material, so we want to say it's kind of the same flaxen linen or linen in English and something very similar in Dutch.",
            "But actually the subtle differences.",
            "We don't use same as in that case because they're indistinguishable after after your assertion of same as, so we use the vocabulary called scosta.",
            "Say things like there's a close match between those things.",
            "Musical environment can be made using powerful Sarah and Freddie Mercury, yeah.",
            "Test absolutely that comes up.",
            "In musicbrainz.",
            "There's another great.",
            "So I was gung ho about making more DB pedia links when I started publishing the RDF for Musicbrainz because.",
            "Music artists and albums are quite well represented on Wikipedia.",
            "Alot of them have their own pages, therefore they have IDs.",
            "Therefore they are in DB pedia.",
            "Therefore you want to do things like this OK?",
            "You're absolutely right.",
            "Wikipedia might make one page for Freddie Mercury, including his Bourne identity if you like.",
            "Sorry not Matthew Bourne, but did identity was born with and others, whereas Musicbrainz says no.",
            "Actually those are two different.",
            "People and the releases they make might be different.",
            "So Prince for instance Prince Prince and the new power generation and that funny symbol they had for a few years make different releases so they're related to one another.",
            "But they're not the same problem with same as is.",
            "Even if Musicbrainz has different identifiers for them.",
            "If you make all of those identifiers same as the DB pedia resource from the Wikipedia page, then all of them have lost their identity.",
            "That all smashed into one thing.",
            "You didn't say that Musicbrainz Prince is the same as Musicbrainz squiggle, but you did say Musicbrainz Prince is the same as Wikipedia.",
            "Prince and Musicbrainz Squiggle is the same as DB pedia squid Prince.",
            "OK, therefore Musicbrainz prints and squiggles are also now the same.",
            "That indistinguishable.",
            "OK, I had that problem.",
            "I had it with albums as well.",
            "There are album series.",
            "This whole thing about releases and release groups where the whole series just has one Wikipedia page where it's actually there were released, staged month by month.",
            "You lose your distinctiveness if you same as so mostly with Musicbrainz DB Pedia.",
            "I also use course.",
            "Instead of our same ours.",
            "When we are in the context of pure RDF, other relationship is just the one additional relationship.",
            "It doesn't mean anything, but when you are in old context, it means that the two concepts are the same.",
            "Yeah, so it depends on the regional.",
            "It depends on the regional.",
            "Most as I said, reasoning can be very useful not to do constraints OK, not to make.",
            "Arbitrary identifications of things.",
            "Are you being cautious with same as but doing things like I was saying before inferring the schema, or from your vocabulary, or inferring the things that always are true of music ontology that a solo music artist and a group of both kinds of music artists?",
            "OK, so Paul McCartney is an artist just as much as The Beatles were an artist.",
            "That's something you get with our DFS, reasoning or owl.",
            "That is fairly unchallenged that you do want.",
            "Most triple stores will not do all of our.",
            "You're right, you have to choose a reason to do that.",
            "But they'll do a significant part that includes our DFS reasoning, plus a bit of OWL, and that bit of nearly always include same as OK.",
            "So however, you're storing your RDF, it's got a bit of reasoning.",
            "Same as he's going to have an effect and you need to be careful with it.",
            "That's probably why we had it in the slides here email.",
            "I'm just going to follow up on that really quickly without running out of time.",
            "I hope that is generally true about forward versus backward chaining, but it's not necessarily true.",
            "You can forward chain and keep your inference is separate so that you can only bring them into answering the query when you want them.",
            "That's what we do at the moment in research space and the second point indeed on the web.",
            "You can find in Euclid and our lemma forward chaining version of Musicbrainz or Link brains.",
            "You can find the virtual version and it's the virtuoso one that I brought with me.",
            "So exactly that distinction is present with us.",
            "Now if you want to query you might see some of those differences."
        ],
        [
            "I don't want to talk about black nodes.",
            "You don't always want to keep your eyes to things you can do without them, but they've got no identity beyond the context that you define them in.",
            "That said, if you want to know more about."
        ],
        [
            "Later do come and ask much more interesting 'cause we're getting ready for sparkle after the break is to know a little bit more about the syntax.",
            "How long do I have 10 more minutes, right?",
            "A little bit more about the syntax that we can reasonably used to write RDF.",
            "OK, one syntax is what I showed you before subject, predicate object.",
            "Subject predicate object.",
            "Like a very well spoken person with very formal sentence is laid out OK the mad scientist.",
            "Of this or the matter, no.",
            "It is unfair to scientist Mad Engineer in that comparison is RDF and XML.",
            "Don't use it.",
            "Don't try and read and write RDF and XML.",
            "That's for mad engineers and machines.",
            "OK, the way to read and write RDF is using Turtle.",
            "The terse RDF triple language.",
            "OK, it says.",
            "First, yes, you can have these full ur eyes writing out subject, predicate, object.",
            "Perfectly valid, but most people are lazy and want to take some shortcuts, hence the terseness.",
            "First shortcut.",
            "We can make this instead of writing out these incredibly long you right?",
            "Yeah, yeah.",
            "Yeah, so your ontology.",
            "You could equally write in Turtle or RDF XML.",
            "You had this changed a little bit between our one and our two, but you had another XML syntax or two or three 4 hours specifically, but fundamentally you would turn that into RDF and that RDF is expressible as RDF and XML, or N triples the thing that I showed you so far, or turtle which is the shortcuts or now Jason LD.",
            "You can send your ontology to someone.",
            "In Jason LD it's RDF, therefore it defines an ontology.",
            "Is also an free talking religion, and three is a sad.",
            "Misnomer most of the time that you see it.",
            "It used to be that the media type you see very often text slash entry in fact, so I said N triples everything is valid in turtle.",
            "Everything in Turtle is valid in entry, which is not a standard.",
            "But there are some more things in entry that most people don't use and aren't aware of and make the mistake of calling their turtle entry.",
            "Now with RDF 1 one things were a lot clearer.",
            "Turtle is a formally defined standard with an Internet media type and a grammar, and when you're writing totally, you should say Turtle don't say entry.",
            "OK, but will understand what you mean if you do.",
            "Good good good.",
            "OK.",
            "Instead of writing out long ur eyes all the time which you would have to in N triples.",
            "If you're being verbose, we say almost all of these you are.",
            "I start with the same bits and they're only different either.",
            "After the final slash or after a hash.",
            "So we keep all of the bits that is the same between many many instances or classes or properties and say that's a namespace like XML does.",
            "If you've had the misfortune to deal with XML and give it a short name.",
            "Often the names we use are common, so when you say audio for audio fessor owl, that's more or less the prefix definition that everyone in the world would make OK, there being very mean.",
            "If they don't, but they're quite within their rights.",
            "When it goes outside those, there are some conventions.",
            "People normally say the program ontology that I just talked about his P. Oh, the music ontology that I just talked about his Mo DB Pedia.",
            "No, there's a few different names that people use for it.",
            "And confusingly, there sometimes mistake the ontology for the schema for the instances.",
            "So you have to be a bit careful.",
            "That said where things are common, it is nice to go to a site called prefix dot CC.",
            "Normally most useful to mention when people have web access, so we'll see how we do through the week.",
            "But you can look these things up and instead of telling you this is what Mo means, it will tell you this is what most people mean by email.",
            "But some freaks also mean this as well.",
            "It gives you this crowdsourced voting mechanism to see what is the popular use of that short namespace.",
            "It doesn't matter what you use.",
            "OK, these are just used for expanding things out full.",
            "You arise within your documents.",
            "How does that look?"
        ],
        [
            "Like this?",
            "OK, ignore the after a minute.",
            "I'll explain that, but just look at the object.",
            "The object instead of being a full urri in between angle brackets, says Mo: music group.",
            "It means look at the prefix for Mo.",
            "Pop music group on the end and you've got your urri.",
            "OK, there's a couple more things we can do that are worth knowing.",
            "If you use base, it means anything that's in angle brackets can continue from there.",
            "OK, so if you see something in angle brackets that doesn't look like a urri what's ur I?",
            "It's something with a colon in it.",
            "OK, that's more or less the only definition apart from syntactic restrictions on what kind of characters can come in, what places UI has a column?",
            "OK, there's no: in there.",
            "How come?",
            "Because for this we go up to base OK?",
            "One more thing that you might see, you can have an anonymous prefix or prefix that doesn't have.",
            "Some letters to identify before the call on.",
            "It just has the column that is different from base.",
            "Base continues inside angle brackets that anonymous prefix.",
            "Is like that, no angle brackets, you just put a colon and then the local name.",
            "OK, that will go on top of the anonymous one.",
            "Last thing about this bit of Turtle, about their conciseness of identifiers, the most concise one that you can have is the one that's used a very great deal.",
            "It's the predicate, so it's the property which used as a predicate.",
            "Add some instance into a class.",
            "OK, it's the things that that is the thing that makes Beatles music Group an Paul McCartney music artist.",
            "OK, I just said it makes him.",
            "A music artist because it's used so often, we just use our no: not angle brackets stands for the local name type in the RDF namespace.",
            "OK, but nobody wants to type RDF type.",
            "Definitely nobody wants to talk HTTP: w3.org blah blah blah blah blah.",
            "So we just put up.",
            "You'll use that in queries alot if you want to make sure that that part of your query that you're dealing with something of a certain class then you say that thing is Earth and nominated.",
            "Past that it goes in.",
            "Good, I have two minutes to wrap this up."
        ],
        [
            "Right, so last piece of punctuation.",
            "We don't just use fullstops and again just to remind you with one of my 2 remaining minutes, this is true for writing and reading.",
            "RDF is turtle, but it's also true for querying RDF models in sparkle.",
            "That's why I'm belaboring this to make sure that you're ready to make queries this afternoon if you have, as we had before more than one statement about the same subject.",
            "I'm lazy, I don't want to repeat the subject, so instead of finishing subject predicate object, my first statement with a full stop, I say I'm still talking; And I'm talking about the same subject so I have another predicate object.",
            "OK; Means I'm still talking about that subject and I'm not going to repeat it.",
            "OK whereas?"
        ],
        [
            "A comma says, oh.",
            "Who made these slides marybelle?"
        ],
        [
            "I always play marybelle when I can't read.",
            "Yeah, indeed it was sorry.",
            "So after the; We're still talking about the same subject and we've got predicate object.",
            "This time we've gotta, thank you.",
            "Maribel, means not only am I still talking about the same subject, but I'm still came out the same relationship.",
            "The same predicate.",
            "OK, so I'm just going to have another object for that subject under that relationship.",
            "So in full.",
            "Beatles has the label with the literal.",
            "With the literal, this string.",
            "The Beatles.",
            "And.",
            "That same subject, The Beatles, is the same as The Beatles in DB Pedia.",
            "And it's also same as.",
            "That BBC ID for The Beatles.",
            "OK so.",
            "You're going to start a whole new subject, predicate object statement; You're still talking about the same subject, You could just add another object to the same relationship for that subject.",
            "OK, my last five seconds."
        ],
        [
            "This was the bit about literals worth knowing, because it's handy for querying.",
            "A literal is just this bit in quote marks, it's just the string, but you can tell either people or machines what sort of thing you mean by that string.",
            "How to interpret that string?",
            "For humans, the important things to know is which language is it in?",
            "So DB Pedia Beatles the abstract you get from DB pedia.",
            "Both in English and German and other things.",
            "Notice the comma between them, such two objects, but this abstract property to that subject.",
            "A machine is interested in things like how do I pass this as a data type and we reuse those from XML?",
            "So that's not very readable to a human OK, and in fact in Musicbrainz we put a millisecond duration so humans can read it, but that's very, very unambiguous way in XML to represent temporal durations.",
            "OK, which can be passed by a machine that knows it's 3 minutes 48 seconds with certain qualifications.",
            "OK, so in both cases we're tagging we say the literal.",
            "The @ means we're tagging it with a language 'cause humans going to read it.",
            "The double carrot sign means we're tagging with the data type 'cause the machine is going to look into this string and decide how to deal with it.",
            "OK, so that's my crash course.",
            "Intro to RDF and Link data, and then we're going to some information on querying it and have a goal with that with my Fame Triple Store near the bar this afternoon with any questions.",
            "Or is it is everyone hungry as I am?"
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "I'm not feeling too well.",
                    "label": 0
                },
                {
                    "sent": "I apologize, so if I'm hard to understand, give me a shout and I'll go to the side and cough or whatever is necessary.",
                    "label": 0
                },
                {
                    "sent": "But I hope that I'm clear.",
                    "label": 0
                },
                {
                    "sent": "So indeed, having moved from academic research for, I guess that spans about 10 years worth of worth of work full with Jaune.",
                    "label": 0
                },
                {
                    "sent": "Indeed, with context I worked for many people applying link data, including the BBC, the Press Association, but the one that I really enjoyed working out was the British Museum, because we've got cool stuff we put in terms of open data, we put online data about 2 million objects in the permanent collection with quite a rich RDF description.",
                    "label": 0
                },
                {
                    "sent": "Of those objects, the project that I work on is funded.",
                    "label": 0
                },
                {
                    "sent": "John mentioned European funding.",
                    "label": 0
                },
                {
                    "sent": "I go even further afield and have American funding at the moment from the Andrew Mellon Foundation.",
                    "label": 1
                },
                {
                    "sent": "I'm not making the ten millions yet, but I'm making the two millions.",
                    "label": 0
                },
                {
                    "sent": "So there's two things to say about that one.",
                    "label": 0
                },
                {
                    "sent": "It means that we collaborate as John was talking about.",
                    "label": 0
                },
                {
                    "sent": "So we work with many museums.",
                    "label": 0
                },
                {
                    "sent": "At the moment, the data that Yale has online, especially about their British art, we help them create in RDF and going forward we're working with people like the Rijksmuseum in Amsterdam and many and many others to publish their data online.",
                    "label": 0
                },
                {
                    "sent": "But I'm not just going to talk to you during the week now that I've stolen a second slot.",
                    "label": 0
                },
                {
                    "sent": "About publishing data, but also about building rail applications.",
                    "label": 0
                },
                {
                    "sent": "OK, so we I guess we have a history in this community of coming to you with hypothetical examples of what one could do.",
                    "label": 0
                },
                {
                    "sent": "In the Euclid project, many of whose slides I would use and would encourage you to go and look at, we came up with an application scenario that while we didn't build it ourselves, was based on things that people were really doing, and it was around music because I was pushing music as usual, so it's worth acknowledging when we go through that stuff.",
                    "label": 0
                },
                {
                    "sent": "Both in my talk and iranis talk, that people like Eve Greymon who was at the BBC now is moving to.",
                    "label": 0
                },
                {
                    "sent": "Netflix I think.",
                    "label": 0
                },
                {
                    "sent": "Netflix an Alex percent who was working in Galway as a research.",
                    "label": 0
                },
                {
                    "sent": "He now has a company called Civil Really Doing Link data for Music as a service.",
                    "label": 0
                },
                {
                    "sent": "These people were pioneers and made rail application that we took inspiration from in Euclid.",
                    "label": 0
                },
                {
                    "sent": "Micciche in introducing what I'm talking about now and talk about a real application that I'm working on.",
                    "label": 0
                },
                {
                    "sent": "And again, I said there's two reasons to mention the funding.",
                    "label": 0
                },
                {
                    "sent": "The second reason for that is where hiring onto the team.",
                    "label": 0
                },
                {
                    "sent": "Building this application, there's a two job adverts out until the end of this week, so if anybody's interested talk to me if you're not interested in a job but you're interested in internship there, scope for that too, so that's my pitch out of the way for that.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I come to you representing two datasets that will get chance to use and build queries about, and if you'd like in your student projects, build applications about they sort of high and low culture.",
                    "label": 0
                },
                {
                    "sent": "OK, my day job.",
                    "label": 0
                },
                {
                    "sent": "Is there, which is a nice place to work and we have these very well known objects like the Rosetta Stone and Easter Island head which I love working next to and I say we published data about more than two million of them in RDF and in the wealth in the time honored Semantic Web way give people a sparkle endpoint to query against, which is nice if you're on the Internet.",
                    "label": 0
                },
                {
                    "sent": "If you're on the South Creek with a very poor connection.",
                    "label": 0
                },
                {
                    "sent": "Not necessarily so usable, so it also sets over there on the laptop at the back, which will be on the network all week so you can access that and query against it during the week without an Internet connection.",
                    "label": 0
                },
                {
                    "sent": "All of those same things also apply to what I do in my spare time, which is low culture.",
                    "label": 0
                },
                {
                    "sent": "Hence Rita Ora, which was about to get into my slides, and Justin Bieber, among many other pieces of music, including lovely traditional classical Greek music, for instance, in the Musicbrainz data set.",
                    "label": 0
                },
                {
                    "sent": "Now I'm not responsible for Musicbrainz.",
                    "label": 0
                },
                {
                    "sent": "That's an effort that's been going on for a long time.",
                    "label": 0
                },
                {
                    "sent": "It's basically crowdsourcing.",
                    "label": 0
                },
                {
                    "sent": "It's almost all user submitted although.",
                    "label": 0
                },
                {
                    "sent": "Increasingly, there pull some of the core data from record labels.",
                    "label": 0
                },
                {
                    "sent": "Now what I do is turn that into RDF, so that step that we were talking about going from one model and relational database into RDF for consumption is what I look after for them.",
                    "label": 0
                },
                {
                    "sent": "So I run a site called Linked brains.com which is the link data about Musicbrainz and again it's also sitting at the back.",
                    "label": 0
                },
                {
                    "sent": "It finished loading while John was talking the dump from yesterday that I made.",
                    "label": 0
                },
                {
                    "sent": "So we have very new up-to-date music data.",
                    "label": 0
                },
                {
                    "sent": "If you want to base your projects around something like that.",
                    "label": 0
                },
                {
                    "sent": "So some.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Lessons from these things and using those as teaching material as I've done worth mentioning 'cause John said I used to train at the BBC Academy and Eve indeed pushed Musicbrainz, which he done a mapping of an old schema of when he started when he left Queen Marian worked for the BBC so that one of the things that the BBC published very early in terms of linked data was there music reviews marked up using Musicbrainz.",
                    "label": 0
                },
                {
                    "sent": "So instead of just saying.",
                    "label": 0
                },
                {
                    "sent": "We reviewed this terrible new album from Justin Bieber.",
                    "label": 0
                },
                {
                    "sent": "They say we've reviewed this terrible new album with this.",
                    "label": 0
                },
                {
                    "sent": "You are I from Justin Bieber who has this yr I which has these tracks on that have you are eyes and use RDF to explain the connection between those persistent artifacts.",
                    "label": 0
                },
                {
                    "sent": "OK so.",
                    "label": 0
                },
                {
                    "sent": "That's motivated by that's recommended by this note from Tim Berners Lee, who seen this before.",
                    "label": 0
                },
                {
                    "sent": "OK, so we talk about it often, so don't be glum that I have.",
                    "label": 0
                },
                {
                    "sent": "This slide I'm going to concentrate on one part specifically that I find we don't talk about enough.",
                    "label": 0
                },
                {
                    "sent": "OK, it's not.",
                    "label": 0
                },
                {
                    "sent": "Use your eyes as name names for things, because that's well accepted.",
                    "label": 1
                },
                {
                    "sent": "OK, all of the rest.",
                    "label": 0
                },
                {
                    "sent": "People will tell you exactly the same thing.",
                    "label": 0
                },
                {
                    "sent": "Give you our eyes to the parts of your process.",
                    "label": 0
                },
                {
                    "sent": "If you're building an API.",
                    "label": 0
                },
                {
                    "sent": "If you have an online order system, the customer has a persistent web ID, which is ERI the order that they create has a persistent urri the items that they put into that order all have persistent ur eyes.",
                    "label": 0
                },
                {
                    "sent": "OK, we don't need to persuade the world.",
                    "label": 0
                },
                {
                    "sent": "Of that principle, they know it.",
                    "label": 0
                },
                {
                    "sent": "They do it second principle.",
                    "label": 0
                },
                {
                    "sent": "Use HTTP ur eyes.",
                    "label": 0
                },
                {
                    "sent": "That's just a corollary.",
                    "label": 1
                },
                {
                    "sent": "Most of what people build software with now has some web elements and the identifiers that they use are HTTP or web.",
                    "label": 0
                },
                {
                    "sent": "Ur eyes that you can resolve battle one.",
                    "label": 1
                },
                {
                    "sent": "Linking to other things again that it's almost taken off.",
                    "label": 0
                },
                {
                    "sent": "Hopefully with us, hopefully not despite us, but it has taken off.",
                    "label": 0
                },
                {
                    "sent": "If you're not talking about a knowledge graph in the last year, then you're not on the hype curve.",
                    "label": 0
                },
                {
                    "sent": "Everybody is talking about building graphs of knowledge where you interlink these things that have ur eyes.",
                    "label": 0
                },
                {
                    "sent": "OK, Google are doing it, Microsoft are doing it.",
                    "label": 0
                },
                {
                    "sent": "Facebook are doing it.",
                    "label": 0
                },
                {
                    "sent": "LinkedIn are doing it.",
                    "label": 0
                },
                {
                    "sent": "It's just a nice model for things.",
                    "label": 0
                },
                {
                    "sent": "OK question is why is it a nice model and why do we have this recommendation in the middle that you should use these technologies?",
                    "label": 0
                },
                {
                    "sent": "RDF and spark?",
                    "label": 0
                },
                {
                    "sent": "All right, so I'm going to try and motivate a little bit why this data model and why use these standards because the world buys the rest of the stuff already.",
                    "label": 0
                },
                {
                    "sent": "You can learn that from anyone.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So are there any Futurama fans 'cause if not, this falls flat?",
                    "label": 0
                },
                {
                    "sent": "Thank goodness there's one of two, so it's like back wants to know why that bit why these standards, OK?",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Why not indeed?",
                    "label": 0
                },
                {
                    "sent": "Just use CSV's OK and this is a really timely question.",
                    "label": 0
                },
                {
                    "sent": "I think this is what the W 3C are concentrating on the at the moment.",
                    "label": 1
                },
                {
                    "sent": "How much open data can you just publish using, separated value files?",
                    "label": 0
                },
                {
                    "sent": "Essentially spreadsheet tables?",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "Some very good things about CSV's and you can see it reflected in John mentioned that governments publish a lot of data.",
                    "label": 0
                },
                {
                    "sent": "All of the UK stuff is on this hub.",
                    "label": 0
                },
                {
                    "sent": "Data Gov UK OK and indeed as a partially publicly funded body the British Museum is part of that.",
                    "label": 0
                },
                {
                    "sent": "We publish RDF.",
                    "label": 0
                },
                {
                    "sent": "But when you rank the datasets that comes very low right up at the top comes CSV files.",
                    "label": 0
                },
                {
                    "sent": "OK, it's actually quite easy to do.",
                    "label": 1
                },
                {
                    "sent": "But even more than that, it's easy to deal with for certain tasks.",
                    "label": 0
                },
                {
                    "sent": "OK, you'll hear people talking about a lot, line by line processing.",
                    "label": 0
                },
                {
                    "sent": "OK, where one line of a file ending in a line break has a unit of information that you can do some processing on and then go to the next line.",
                    "label": 0
                },
                {
                    "sent": "OK, and this fits very nicely into the big data world where we use tools like Hadoop.",
                    "label": 0
                },
                {
                    "sent": "OK, if you have such a file massive.",
                    "label": 0
                },
                {
                    "sent": "The massive one where every line is understandable by itself, you can chunk it.",
                    "label": 0
                },
                {
                    "sent": "According to some threshold some size and send each chunk off to different places to get processed and then just do a bit of processing to put them together at the end and get your results over as much hardware as you want to throw again against it.",
                    "label": 0
                },
                {
                    "sent": "OK, that's called MapReduce.",
                    "label": 0
                },
                {
                    "sent": "In the map step you find your chunks.",
                    "label": 1
                },
                {
                    "sent": "You map the processing that you want to apply over each chunk, and then he reduced the results together to get the final result.",
                    "label": 0
                },
                {
                    "sent": "There are a lot of problems that can be tackled that way, but there are a lot of problems that can't as well.",
                    "label": 0
                },
                {
                    "sent": "OK, a lot of the backlash against the Hadoop style of Big Data is.",
                    "label": 0
                },
                {
                    "sent": "It only fits some problems right.",
                    "label": 0
                },
                {
                    "sent": "Not everything can be described line by line in that style.",
                    "label": 0
                },
                {
                    "sent": "Oh yeah, I'm just a plug because I hope that people are using this kind of thing in their projects.",
                    "label": 0
                },
                {
                    "sent": "They would.",
                    "label": 0
                },
                {
                    "sent": "The resurgent scale is knowing about how to use tools like grep and SED and AWK and jumping to scripting languages like Python when you need them to do this style of processing.",
                    "label": 0
                },
                {
                    "sent": "OK, I'm not saying you shouldn't do this, I'm saying you should do this.",
                    "label": 0
                },
                {
                    "sent": "OK, I'm saying the model of your data that you publish in that you sharing that you agree with other people is very very often more rich than this.",
                    "label": 0
                },
                {
                    "sent": "OK, so does that mean that you have to do everything in a triple store or inside an OWL reasoner or something?",
                    "label": 0
                },
                {
                    "sent": "No, not at all.",
                    "label": 0
                },
                {
                    "sent": "Sparkle is an interface to this world.",
                    "label": 0
                },
                {
                    "sent": "Any select query which will learn about just after lunch.",
                    "label": 0
                },
                {
                    "sent": "You can view the results as a CSV file, but you've said how to take the rich data and transform it into a table.",
                    "label": 0
                },
                {
                    "sent": "That means something line by line, not as much as your whole data, but enough for a particular application.",
                    "label": 1
                },
                {
                    "sent": "OK, so this stuff is great, but it's not how to publish data that's richer than that.",
                    "label": 0
                },
                {
                    "sent": "You publish data in a richer model and use something like sparkle to reduce it into a line by line processable file.",
                    "label": 0
                },
                {
                    "sent": "Oh, so the answer to that.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I forget how funny this presentation is.",
                    "label": 0
                },
                {
                    "sent": "Why don't see his face?",
                    "label": 0
                },
                {
                    "sent": "No, no, that's not enough.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So an example from music, because it's always going to be music with me.",
                    "label": 0
                },
                {
                    "sent": "If it's not the Easter Island head, this looks like a nice way to share album information.",
                    "label": 0
                },
                {
                    "sent": "About 60's rock middle of the road stuff because it's in summer school.",
                    "label": 0
                },
                {
                    "sent": "We've got a column for artist, a column for album.",
                    "label": 0
                },
                {
                    "sent": "OK, so we've got rubber soul and revolver with some of the 60s albums from The Beatles are inside and Peppers and we have the Stones albums underneath that.",
                    "label": 1
                },
                {
                    "sent": "OK. Now from anybody know from a database point of view why old school relational databases would object to this?",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "Because this information repeats, so unless I really say that's an identifier.",
                    "label": 0
                },
                {
                    "sent": "Then I'm repeating something that should be under a separate primary key and the name of an artist isn't an identifier.",
                    "label": 0
                },
                {
                    "sent": "OK, there are several artists with the same name, so you can't just use their name to give an identifier to them.",
                    "label": 0
                },
                {
                    "sent": "OK, but that is a file which can be very useful for line by line processing, but it's in database terms, it's denormalized.",
                    "label": 0
                },
                {
                    "sent": "OK, we take what should be, will jump to that in a second under another table.",
                    "label": 0
                },
                {
                    "sent": "Under a key with you under the identifier is a key and push it all into one table.",
                    "label": 0
                },
                {
                    "sent": "So what kind of things can I do with that?",
                    "label": 0
                },
                {
                    "sent": "If somebody gave me that CSV file on the web, what kind of questions could I answer with it?",
                    "label": 0
                },
                {
                    "sent": "How many albums does peopleready exactly how many albums did The Beatles release?",
                    "label": 0
                },
                {
                    "sent": "How many albums did the Stones release?",
                    "label": 0
                },
                {
                    "sent": "How many albums did The Beatles release that start with the letter R?",
                    "label": 0
                },
                {
                    "sent": "I'm being a bit glib, but there are useful things that you can do.",
                    "label": 0
                },
                {
                    "sent": "On top of that.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Now as the denormalization, if I want to add the tracks, look look what happens.",
                    "label": 0
                },
                {
                    "sent": "Now the duplication goes nuts OK when I want to have all the tracks on rubber soul.",
                    "label": 0
                },
                {
                    "sent": "Now I'm not just repeating The Beatles, which isn't really an identifier under The Beatles.",
                    "label": 1
                },
                {
                    "sent": "I'm repeating rubber soul, which isn't really an identifier.",
                    "label": 0
                },
                {
                    "sent": "Again, out different albums share names.",
                    "label": 0
                },
                {
                    "sent": "It's not a good identifier.",
                    "label": 0
                },
                {
                    "sent": "OK, but still that kind of denormalized table can be useful to give to someone for processing.",
                    "label": 0
                },
                {
                    "sent": "I can process that in Ork or in a little Python script and tell you things like how many tracks were on rubber soul.",
                    "label": 0
                },
                {
                    "sent": "OK, what's the average number of cracks on a 60s Beatles album?",
                    "label": 0
                },
                {
                    "sent": "I start to answer real questions with that data.",
                    "label": 0
                },
                {
                    "sent": "But just because that's useful for you to answer those questions doesn't mean that that's a sensible way to publish music data.",
                    "label": 0
                },
                {
                    "sent": "It's not.",
                    "label": 0
                },
                {
                    "sent": "OK, card would like it and Tim would like it.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So last word about denormalization.",
                    "label": 0
                },
                {
                    "sent": "If I want to have gift to someone both who were the members of The Beatles and what albums did they release with which track on now Denormalization gets utterly nuts 'cause that's two different degrees, that's two different dimensions.",
                    "label": 0
                },
                {
                    "sent": "Of hierarchy in that data.",
                    "label": 0
                },
                {
                    "sent": "OK, before we saw strict hierarchy that out, there artist releases the album and the album has tracks on now we've got that, but it's that the artist who has members the band who has members.",
                    "label": 0
                },
                {
                    "sent": "OK, so I've got no easy way to denormalize that.",
                    "label": 0
                },
                {
                    "sent": "Do I repeat and repeat and repeat all of the tracks on rubber soul for every single member of The Beatles?",
                    "label": 1
                },
                {
                    "sent": "Or do I start putting nulls in and make this a really sparse representation?",
                    "label": 0
                },
                {
                    "sent": "Both of them are poor choices.",
                    "label": 0
                },
                {
                    "sent": "OK, and it's that is absolutely the reason that this isn't a single table model and I shouldn't be giving people a single CSV.",
                    "label": 0
                },
                {
                    "sent": "So what I could do in the old school way?",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Well, not old school.",
                    "label": 0
                },
                {
                    "sent": "This is what people are doing on data Gov UK is give people Excel files instead of CSV files.",
                    "label": 0
                },
                {
                    "sent": "And often people make the mistake.",
                    "label": 0
                },
                {
                    "sent": "Oh, that's just the proprietary version of a CSV.",
                    "label": 0
                },
                {
                    "sent": "It's not.",
                    "label": 0
                },
                {
                    "sent": "OK, an Excel workbook has several worksheets on it and people use them like relational databases.",
                    "label": 0
                },
                {
                    "sent": "If you know this model, they put the different degrees of extension from a route from the artist on different sheets.",
                    "label": 0
                },
                {
                    "sent": "So I've got one sheet that tells me the member of these bands, John Paul, George and Ringo and Mickey, Charlie and Ronnie, OK respectively for Beatles and Stones and on a separate sheet I have the albums from those artists.",
                    "label": 0
                },
                {
                    "sent": "OK, now that is just to me.",
                    "label": 1
                },
                {
                    "sent": "Indicative that those people should know more about relational databases, OK, what they're doing is denormalize.",
                    "label": 1
                },
                {
                    "sent": "Sorry is normalizing the data across separate tables, but not in the way that a relational database will allow you to govern that properly.",
                    "label": 0
                },
                {
                    "sent": "To make sure that you're doing it properly and optimizing processing of it.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Why not use relational databases?",
                    "label": 1
                },
                {
                    "sent": "We have decades of experience in that, whereas for my 2 posts this week I can probably guess the origin of most of the candidates that I'll get who are experienced in linked data and sparkle.",
                    "label": 0
                },
                {
                    "sent": "If I were advertising for a sequel post, there's millions of people all over the world would be interested.",
                    "label": 0
                },
                {
                    "sent": "There's lots of skill there in SQL.",
                    "label": 0
                },
                {
                    "sent": "OK, that's the query language for relational databases.",
                    "label": 0
                },
                {
                    "sent": "If you don't know now.",
                    "label": 0
                },
                {
                    "sent": "Musicbrainz in fact is and remains in a relational database.",
                    "label": 0
                },
                {
                    "sent": "A few years ago, just just as I started to work for Queen Mary, which is why I went there.",
                    "label": 0
                },
                {
                    "sent": "They were talking about reorganizing the schema for Musicbrainz to make it more extensible.",
                    "label": 0
                },
                {
                    "sent": "OK, and they chose to stick with Postgres and relational database.",
                    "label": 0
                },
                {
                    "sent": "That's the core schema.",
                    "label": 0
                },
                {
                    "sent": "OK, each one of the boxes is a table.",
                    "label": 0
                },
                {
                    "sent": "Each one of the arrows is a foreign key relationship between tables.",
                    "label": 0
                },
                {
                    "sent": "OK, is the use of, say and identify defined by this table.",
                    "label": 0
                },
                {
                    "sent": "In rows in that table, so you can refer to the album that was made or the OR from the track.",
                    "label": 0
                },
                {
                    "sent": "You can refer back to the album from the member.",
                    "label": 0
                },
                {
                    "sent": "You can refer back to the band.",
                    "label": 0
                },
                {
                    "sent": "In theory it's not what they do in that case, but I'll explain that in a second.",
                    "label": 0
                },
                {
                    "sent": "OK, so relational database is great.",
                    "label": 0
                },
                {
                    "sent": "Is TT listening?",
                    "label": 0
                },
                {
                    "sent": "I've gotta be cautious with this on why don't we just put relational databases on the web?",
                    "label": 0
                },
                {
                    "sent": "They do OK, they don't give a public SQL endpoint the way that we talk about public sparkle endpoints.",
                    "label": 0
                },
                {
                    "sent": "OK, 'cause they know SQL is expensive and lots of people might be using it one.",
                    "label": 0
                },
                {
                    "sent": "They build an API which is something that he's going to tell you about and John will probably mention again too.",
                    "label": 0
                },
                {
                    "sent": "They say if you want the whole database.",
                    "label": 0
                },
                {
                    "sent": "You can have the Postgres index.",
                    "label": 0
                },
                {
                    "sent": "OK, and load it into Postgres yourself, but that's really tough.",
                    "label": 0
                },
                {
                    "sent": "Or you can just have a virtual machine.",
                    "label": 0
                },
                {
                    "sent": "You put it into your VM host into VM Ware, ES XI, VirtualBox and press go and there you have your SQL endpoints.",
                    "label": 0
                },
                {
                    "sent": "OK, so there's one of those running over there.",
                    "label": 0
                },
                {
                    "sent": "Why don't we do that in general?",
                    "label": 0
                },
                {
                    "sent": "In fact, why isn't this the model for data on the web?",
                    "label": 0
                },
                {
                    "sent": "Teacher will say it could be it can be in some cases you can use the entity relationship model to expose data, but Musicbrainz has a selling at less.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Son.",
                    "label": 0
                },
                {
                    "sent": "I think I've said all of that in fact, so that you can get the virtual machine with that database already running and run your sparkle against it.",
                    "label": 0
                },
                {
                    "sent": "It's also worth mentioning last time I did mention this, Jim Hendler was in the audience.",
                    "label": 0
                },
                {
                    "sent": "I had to win him over a little bit, but he agreed with me in the end.",
                    "label": 0
                },
                {
                    "sent": "I believe that most CSV on the web.",
                    "label": 0
                },
                {
                    "sent": "Isn't what we what we believe.",
                    "label": 0
                },
                {
                    "sent": "People typing into Excel and then exporting from Excel to CSV.",
                    "label": 0
                },
                {
                    "sent": "There's a huge amount of CSV which is just dumps from relational database tables.",
                    "label": 0
                },
                {
                    "sent": "OK, so there's that commonality.",
                    "label": 0
                },
                {
                    "sent": "If you want to do your line by line processing, you can use SQL on a relational database to give you the CSV that you can go through line by line, and people do it in the massive numbers.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "Aside, Bug says, why not relational databases?",
                    "label": 0
                },
                {
                    "sent": "Why not keep that model and publish our data that way?",
                    "label": 0
                },
                {
                    "sent": "Any ideas?",
                    "label": 0
                },
                {
                    "sent": "OK, the difficulties and I'm glad this question came up during John's talk maintaining things.",
                    "label": 0
                },
                {
                    "sent": "OK Musicbrainz is a classic example.",
                    "label": 0
                },
                {
                    "sent": "It started in the days of when MP, threes, just MP3 sharing just became popular in the Napster era.",
                    "label": 0
                },
                {
                    "sent": "Oread is Genesis then.",
                    "label": 0
                },
                {
                    "sent": "People both say VICD sorry, stick them in their machines, rip them and want to share them.",
                    "label": 0
                },
                {
                    "sent": "In order to share them.",
                    "label": 0
                },
                {
                    "sent": "With our friendly, searchable tool like Napster, then he tags you need to know what's the album called.",
                    "label": 0
                },
                {
                    "sent": "What are the tracks called?",
                    "label": 0
                },
                {
                    "sent": "Who's the artist?",
                    "label": 0
                },
                {
                    "sent": "So somebody can search for Metallica's album that Metallica got very annoyed about people having from Napster.",
                    "label": 0
                },
                {
                    "sent": "So there were services that would do two things catalog albums and the tracks on them against artists and do a clever thing called audio fingerprinting where it can look at what you've just raped.",
                    "label": 0
                },
                {
                    "sent": "And identify which track it is and they therefore retrieve that that artist in the album information CDDB, one of the services that did that got taken over as I remember, and people were looking for another source for this and Musicbrainz set, came up with a really nice idea on heavily in support of let's have a wiki where we can crowd source, which is a lovely crowdsourcing tools.",
                    "label": 0
                },
                {
                    "sent": "This information.",
                    "label": 0
                },
                {
                    "sent": "Let people submit it and rebuild that database completely in the public domain.",
                    "label": 0
                },
                {
                    "sent": "OK, after they got quite successful at that, many people were using this service.",
                    "label": 0
                },
                {
                    "sent": "They started subverting that service in from one point of view and saying it's actually a really rich resource of music publication information, but could we add the producer on the album?",
                    "label": 0
                },
                {
                    "sent": "Could we add the guest musicians on a particular track?",
                    "label": 0
                },
                {
                    "sent": "Could we get that if you buy this in Japan on CD you get 2 extra tracks from the European CD release?",
                    "label": 0
                },
                {
                    "sent": "Unless you buy the vinyl release in London.",
                    "label": 0
                },
                {
                    "sent": "OK, seriously, this is how music goes on.",
                    "label": 0
                },
                {
                    "sent": "As John says, I'm a big geek about it.",
                    "label": 0
                },
                {
                    "sent": "So people start saying can we add this?",
                    "label": 0
                },
                {
                    "sent": "Can we add this?",
                    "label": 0
                },
                {
                    "sent": "Can we add this and everything that they want to add is a relationship between a concept which is quite stable.",
                    "label": 0
                },
                {
                    "sent": "We know what well I keep saying album Musicbrainz is a little bit finer because of this issue of how things get released and even strange things like multiformat releases and different geographic releases at different times and reissues.",
                    "label": 0
                },
                {
                    "sent": "It calls release group what we commonly understand US album.",
                    "label": 0
                },
                {
                    "sent": "OK, it has releases inmates that are released on a medium and each medium has a track list made up of tracks and the tracks have audio signatures.",
                    "label": 0
                },
                {
                    "sent": "Those things don't change much.",
                    "label": 0
                },
                {
                    "sent": "Artist release group release Medium, OK, Fairly stable, but people keep wanting new relationships between things.",
                    "label": 0
                },
                {
                    "sent": "OK, now for my money.",
                    "label": 0
                },
                {
                    "sent": "I would say the best model where you.",
                    "label": 0
                },
                {
                    "sent": "As John says, we know from semantics where you have a core stability.",
                    "label": 0
                },
                {
                    "sent": "But some extension, overtime and where that extension is relationship oriented for me.",
                    "label": 0
                },
                {
                    "sent": "You should use a graph model.",
                    "label": 0
                },
                {
                    "sent": "And I'm not being a link data zealot.",
                    "label": 0
                },
                {
                    "sent": "I'm quite happy that you might consider using a graph database that isn't necessarily really in our world like Neo 4 J, or many of the other things that Maribel is excellent tutorial that you should look up and goes through OK.",
                    "label": 0
                },
                {
                    "sent": "There are graph lots of graph oriented databases, some of them do RDF import and export, and some of those give you a sparkle query interface.",
                    "label": 0
                },
                {
                    "sent": "OK, I'm not saying that you necessarily need RDF and Sparkle to do this, but it's very nice.",
                    "label": 0
                },
                {
                    "sent": "I'm saying your best model would be graph oriented.",
                    "label": 0
                },
                {
                    "sent": "You identify those things.",
                    "label": 0
                },
                {
                    "sent": "That are off stable classes.",
                    "label": 0
                },
                {
                    "sent": "Got the artists that releases, etc.",
                    "label": 0
                },
                {
                    "sent": "The instances grow overtime, but the classes stay fairly fixed, but people want new relationships all the time.",
                    "label": 0
                },
                {
                    "sent": "OK, who was associate producer who played the kazoo?",
                    "label": 0
                },
                {
                    "sent": "Who was on this album but credited under a different name 'cause he was under contract under exclusive contract to a different record label.",
                    "label": 0
                },
                {
                    "sent": "This music geeks love things like this and when the data set gets over a certain size via crowdsourcing, they want to offload more and more of their intense geeky knowledge.",
                    "label": 0
                },
                {
                    "sent": "OK, so we need a data model that let's them do that.",
                    "label": 0
                },
                {
                    "sent": "What musicbrainz days.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We start with a relational database.",
                    "label": 0
                },
                {
                    "sent": "This might get complex, so I'm not going to dwell on it too much.",
                    "label": 0
                },
                {
                    "sent": "It's tough to do that in a relational database.",
                    "label": 0
                },
                {
                    "sent": "Fundamentally, what you need to do every time you have a new relationship.",
                    "label": 0
                },
                {
                    "sent": "In a properly normalized relational database.",
                    "label": 0
                },
                {
                    "sent": "If it's a one to one or a one to many relationship, you need to introduce a new column into a table that's quite disruptive, because everybody who's running one of these virtual machines with your database on needs to stop the database, change the schema.",
                    "label": 0
                },
                {
                    "sent": "Massage the data they've already got into that new schema and then potentially adapt all of the queries that they have over it.",
                    "label": 1
                },
                {
                    "sent": "That's bad enough if you have a many to many relationship and it's normalized.",
                    "label": 0
                },
                {
                    "sent": "You need a new table.",
                    "label": 0
                },
                {
                    "sent": "You need to introduce what's called a join table that can point to both sides of this relationship.",
                    "label": 0
                },
                {
                    "sent": "What Musicbrainz date?",
                    "label": 0
                },
                {
                    "sent": "Again, this is the kind of thing that would make card who established how not just the relational database relational model should work through relational algebra.",
                    "label": 0
                },
                {
                    "sent": "But also how you should get your data in there.",
                    "label": 0
                },
                {
                    "sent": "It that's commonly broken, we often have denormalized data in relational databases 'cause it doesn't fit or it doesn't evolve well, OK, what Musicbrainz does very briefly is has a predefined set of join tables for relationships between any two entities you can think of.",
                    "label": 0
                },
                {
                    "sent": "So all tests to release group artist to track OK Artist to artist itself.",
                    "label": 0
                },
                {
                    "sent": "OK, and it has one extra table, a table full of ur eyes so you can have artists who you are.",
                    "label": 0
                },
                {
                    "sent": "I relationships OK through that join table without join table.",
                    "label": 0
                },
                {
                    "sent": "Doesn't say what kind of relationship it is so that introduce a table called linked link types and anybody can go to the wiki or to the API and submit a new.",
                    "label": 1
                },
                {
                    "sent": "Link type to type the relationship between things of a certain pair of classes so you can say I've just started a new new music review website.",
                    "label": 0
                },
                {
                    "sent": "I'm reviewing albums, so I want to use the table that links albums properly, called release groups to websites.",
                    "label": 0
                },
                {
                    "sent": "the UI table.",
                    "label": 0
                },
                {
                    "sent": "But each such link that I make I want to type it with the type that says this is done with his name.",
                    "label": 0
                },
                {
                    "sent": "This is John's review.",
                    "label": 0
                },
                {
                    "sent": "OK, so we can do that.",
                    "label": 0
                },
                {
                    "sent": "But it's painful to query and it's not normalized and it doesn't work to what relational databases do.",
                    "label": 0
                },
                {
                    "sent": "Well, I think I might have the slide now.",
                    "label": 0
                },
                {
                    "sent": "I don't.",
                    "label": 0
                },
                {
                    "sent": "Previous years I talked about how we go about mapping this relational database into RDF, which you can query at the back of the room or online in order to make a simple query like using the DB pedia that John mentioned IDs for The Beatles and Paul McCartney.",
                    "label": 0
                },
                {
                    "sent": "Is Paul McCartney, or was he ever a member of The Beatles?",
                    "label": 0
                },
                {
                    "sent": "OK, in sparkle one triple pattern, which is actually just triple you say Paul McCartney member Beatles, tell me that it says yes.",
                    "label": 0
                },
                {
                    "sent": "OK, on this model, which is how everything with Musicbrainz is built outside Link data, you have to do 15 joins to answer that query.",
                    "label": 0
                },
                {
                    "sent": "OK, 'cause you have to go through these join tables and disambiguate what link type it is, it's not pretty.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So last query?",
                    "label": 0
                },
                {
                    "sent": "Oh yeah, please.",
                    "label": 0
                },
                {
                    "sent": "That is, the with the relational databases we we must know the team in order to to.",
                    "label": 0
                },
                {
                    "sent": "3 squared, yeah.",
                    "label": 0
                },
                {
                    "sent": "Do not have to know that you don't have to know the whole schema.",
                    "label": 0
                },
                {
                    "sent": "You have to know which relationships you are interested in, which may involve knowing which classes of things you're interested in and what relationships they potentially share, but you don't have to know the whole schema.",
                    "label": 0
                },
                {
                    "sent": "You have to know some of the relationships and those relationships might not be explicitly stated in the data.",
                    "label": 0
                },
                {
                    "sent": "This is what I was talking about.",
                    "label": 0
                },
                {
                    "sent": "Reasoning you can query for relationship that nobody explicitly made.",
                    "label": 0
                },
                {
                    "sent": "Between 2:00, you identified things because they made some other relationship or chain of relationships that infer the one that you know.",
                    "label": 0
                },
                {
                    "sent": "OK, so it's much.",
                    "label": 0
                },
                {
                    "sent": "Less of an all or nothing to learn how to query link data, but then even more this extensibility that I was talking about comes in as well.",
                    "label": 0
                },
                {
                    "sent": "You don't have to know that someone has added a new relationship because they haven't changed the schema, they've just started using a bit more schema.",
                    "label": 0
                },
                {
                    "sent": "And when you find out about it, you might want to query about it, but in the meantime it doesn't affect you.",
                    "label": 0
                },
                {
                    "sent": "They haven't changed the definition of tables, they've just put some new arcs in the graph that you weren't looking for anyway.",
                    "label": 0
                },
                {
                    "sent": "OK, so they're perfectly safe there until you decide that you want to use them.",
                    "label": 0
                },
                {
                    "sent": "That's why extensibility is nice.",
                    "label": 0
                },
                {
                    "sent": "Yeah, question on the motivation behind the maintainers issue, yeah?",
                    "label": 0
                },
                {
                    "sent": "Finally, elementary just changed the controlled environment within an uncontrolled one.",
                    "label": 0
                },
                {
                    "sent": "I mean, in databases we have normalization that is here to control the data to make that there is no error.",
                    "label": 0
                },
                {
                    "sent": "Yeah, in the RDS or all schema, the way that we are using them, there is no control.",
                    "label": 0
                },
                {
                    "sent": "I mean in all the datasets that I used.",
                    "label": 0
                },
                {
                    "sent": "Yeah, there's very few actions and if its actions actually haven't, we changed some technical.",
                    "label": 0
                },
                {
                    "sent": "Challenge with semantic challenge.",
                    "label": 0
                },
                {
                    "sent": "Yeah, so I've got 222 things to say in response to that.",
                    "label": 0
                },
                {
                    "sent": "We go back to France, so address the end.",
                    "label": 0
                },
                {
                    "sent": "I don't believe that axioms as in Owl ontologies that will talk to those of you who are not so familiar with the rest of the week are the right way to constrain your data.",
                    "label": 0
                },
                {
                    "sent": "Owl is not a constraint language.",
                    "label": 0
                },
                {
                    "sent": "OK, in many cases when you think you're constraining something, you're having a very different effect than the one that you expect.",
                    "label": 0
                },
                {
                    "sent": "If you're thinking it's a constraint.",
                    "label": 0
                },
                {
                    "sent": "If you say the cardinality of something is wrong.",
                    "label": 0
                },
                {
                    "sent": "If you say the artist that recorded an album is unique in Owl, perfectly easy to do, and then someone says Sargent Peppers was made by The Beatles and Sargent Peppers was made by The Rolling Stones.",
                    "label": 0
                },
                {
                    "sent": "Your database doesn't tell you cardinality constraint violated.",
                    "label": 0
                },
                {
                    "sent": "That second statement is not one that you should add.",
                    "label": 0
                },
                {
                    "sent": "It says oh, The Beatles and The Rolling Stones must be the same band.",
                    "label": 0
                },
                {
                    "sent": "OK, axioms are not the way to constrain.",
                    "label": 0
                },
                {
                    "sent": "Your triplestore or anything that uses semantics.",
                    "label": 0
                },
                {
                    "sent": "So now let me jump back earlier in the question.",
                    "label": 0
                },
                {
                    "sent": "You're kind of suggesting that what we've got is a choice between relational databases or triple stores.",
                    "label": 0
                },
                {
                    "sent": "What we call native RDF databases is a much better term, but everybody knows this time Triple Store.",
                    "label": 0
                },
                {
                    "sent": "In fact, there is a whole spectrum of data management now beyond the summer school where it's only our remix talk about semantic technologies.",
                    "label": 0
                },
                {
                    "sent": "I'd really recommend the book Polyglot Persistence by Martin Fowler.",
                    "label": 0
                },
                {
                    "sent": "So nice survey of the different ways that people manage data.",
                    "label": 0
                },
                {
                    "sent": "And most debate now most of the new things where the activities happening is not relational.",
                    "label": 0
                },
                {
                    "sent": "They call it no sequel.",
                    "label": 0
                },
                {
                    "sent": "To some degree.",
                    "label": 0
                },
                {
                    "sent": "It may or may not support SQL, but what it really doesn't is support that acid properties that have always been associated with relational databases.",
                    "label": 0
                },
                {
                    "sent": "OK, now among those different ways that people are storing data now are key value stores.",
                    "label": 0
                },
                {
                    "sent": "Key document stores with partial indexes, graph databases.",
                    "label": 0
                },
                {
                    "sent": "Some of those graph databases, RDF databases.",
                    "label": 0
                },
                {
                    "sent": "OK, all of them have gone for this again.",
                    "label": 0
                },
                {
                    "sent": "It's a bit of a misnomer.",
                    "label": 0
                },
                {
                    "sent": "Schemaless.",
                    "label": 0
                },
                {
                    "sent": "Idea Schema list doesn't mean that there's no schema.",
                    "label": 0
                },
                {
                    "sent": "It means that the schema is more flexible and can evolve without doing this awful.",
                    "label": 0
                },
                {
                    "sent": "Shut the whole thing down, split the table, load all the data again, check all your queries.",
                    "label": 0
                },
                {
                    "sent": "OK, everybody wants schema lesson, evolvability.",
                    "label": 0
                },
                {
                    "sent": "OK, now the way that you ensure the integrity of your data.",
                    "label": 0
                },
                {
                    "sent": "Therefore, is an issue not just in this binary choice between triple store in relational, but in all of these databases that potentially violate things like consistency.",
                    "label": 0
                },
                {
                    "sent": "So there aren't points in the world where you say the data should be consistent and someone should check it.",
                    "label": 0
                },
                {
                    "sent": "For me, OK, the way that big web companies like Facebook operate now is, there aren't consistent points.",
                    "label": 0
                },
                {
                    "sent": "There's never any global view of every post everyones made, and every comment that was made to it.",
                    "label": 0
                },
                {
                    "sent": "If I check in Europe or if I check in East Coast America, I see a different representation of what comments there are and what likes.",
                    "label": 0
                },
                {
                    "sent": "There are often quite disconcerting when you travel around to see, but I posted that and it's just not here anymore.",
                    "label": 0
                },
                {
                    "sent": "And then a couple of hours later it is there OK.",
                    "label": 0
                },
                {
                    "sent": "They've thrown away consistency.",
                    "label": 0
                },
                {
                    "sent": "So you have that as well.",
                    "label": 0
                },
                {
                    "sent": "You want to check that somehow your data has a notion of consistency, but there aren't global points where.",
                    "label": 0
                },
                {
                    "sent": "One database engine could check it for you.",
                    "label": 0
                },
                {
                    "sent": "Now everyone is running on distributed clusters.",
                    "label": 0
                },
                {
                    "sent": "OK, so now to jump back to the first point with RDF data, don't use owl is my recommendation.",
                    "label": 0
                },
                {
                    "sent": "You Sparkle Sparkle 1 one has got much better at running queries that check what is and isn't in your data.",
                    "label": 0
                },
                {
                    "sent": "OK for me.",
                    "label": 0
                },
                {
                    "sent": "The way that I want to constrain what do we publish to the world is to do something like test driven development in programming.",
                    "label": 0
                },
                {
                    "sent": "In test driven development, you set a test and then you write code that matches it.",
                    "label": 0
                },
                {
                    "sent": "In my way of publishing data, you write queries that should have positive answers and also queries that should never be true, 'cause they violate properties like uniqueness.",
                    "label": 0
                },
                {
                    "sent": "OK, write those queries and then regression test your data against it.",
                    "label": 0
                },
                {
                    "sent": "Don't put in new inferences without testing all of those queries.",
                    "label": 0
                },
                {
                    "sent": "OK, don't accept data from someone else and load it up into your triple store and expose it on your on your web rather than your nearest staging database.",
                    "label": 0
                },
                {
                    "sent": "Without regression testing against all those queries.",
                    "label": 0
                },
                {
                    "sent": "That's how you check your data is in good form for other people to use.",
                    "label": 0
                },
                {
                    "sent": "OK, now I should go slightly right in the face because I said I just loaded a very new dump of Musicbrainz while John was talking, so we'll see if that makes sense.",
                    "label": 0
                },
                {
                    "sent": "OK, last bed this this was bigger John.",
                    "label": 0
                },
                {
                    "sent": "We spent a long time working on this whynott.",
                    "label": 0
                },
                {
                    "sent": "If you're exposing things on the web, go with these web technologies.",
                    "label": 0
                },
                {
                    "sent": "OK, in the 90s there was this big fandom for HTML.",
                    "label": 0
                },
                {
                    "sent": "That was the basis of the web.",
                    "label": 0
                },
                {
                    "sent": "OK, so let's.",
                    "label": 0
                },
                {
                    "sent": "Take this human readable view HTML and produce a machine readable thing for sharing data XML.",
                    "label": 0
                },
                {
                    "sent": "OK, it's also it doesn't impose a schema.",
                    "label": 0
                },
                {
                    "sent": "You can define any schema you want in XML and publish and share data.",
                    "label": 0
                },
                {
                    "sent": "OK, even to some degree, people looked a bit at HTTP and said, yeah, let's transmit it the same way that web pages are Saints.",
                    "label": 0
                },
                {
                    "sent": "OK, so didn't we solve all of this in the 90s?",
                    "label": 1
                },
                {
                    "sent": "Is not the way to go?",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "My favorite slide for me.",
                    "label": 0
                },
                {
                    "sent": "As I say, we we spent a lot of time applying semantics to XML based, soap driven whistle, described web services, and while we were researching realized that's actually what everybody in the enterprise is doing.",
                    "label": 0
                },
                {
                    "sent": "Laughing that XML and soap.",
                    "label": 0
                },
                {
                    "sent": "OK, the rest of the world has gone.",
                    "label": 0
                },
                {
                    "sent": "Rest is passing things around in Jason using HTTP properly instead of abusing HTTP to send around XML, which is all fallen over specified.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So just to try and give you an idea what you could do, that's what HTML looks like.",
                    "label": 0
                },
                {
                    "sent": "We've probably all seen it.",
                    "label": 0
                },
                {
                    "sent": "You can make it XML schema for your music and it's nice 'cause it's nested so you can do hierarchies and you can do separate branches of hierarchies away from one another.",
                    "label": 0
                },
                {
                    "sent": "Look I've got my.",
                    "label": 0
                },
                {
                    "sent": "Recurring list of artists and here's one artist called The Beatles and I can put the Members and then separately from those I can put the albums and underneath the albums I can put the tracks.",
                    "label": 0
                },
                {
                    "sent": "It's lovely, solves everything.",
                    "label": 0
                },
                {
                    "sent": "Right now it doesn't.",
                    "label": 0
                },
                {
                    "sent": "Again, extensibility is an awful problem here.",
                    "label": 0
                },
                {
                    "sent": "What do I do with that schema when someone says it doesn't work very well with The Beatles?",
                    "label": 0
                },
                {
                    "sent": "Alright, let's say, but that pool that you've got there nested inside The Beatles.",
                    "label": 0
                },
                {
                    "sent": "He was also in wings.",
                    "label": 0
                },
                {
                    "sent": "How am I going to express that?",
                    "label": 0
                },
                {
                    "sent": "How am I going to say that he was a producer on another album?",
                    "label": 0
                },
                {
                    "sent": "There's just no space in the schema for that.",
                    "label": 0
                },
                {
                    "sent": "You end up breaking this scheme or all of the time as well.",
                    "label": 0
                },
                {
                    "sent": "OK, added to which.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We were doing this which violates what everybody knows, not just us.",
                    "label": 0
                },
                {
                    "sent": "Which is you should one use your eyes to identify things, but two let people look at the ur eyes up to find out about them, OK?",
                    "label": 0
                },
                {
                    "sent": "On the web.",
                    "label": 0
                },
                {
                    "sent": "You have this, tell me about and I think that's The Beatles.",
                    "label": 0
                },
                {
                    "sent": "They usually you ideas.",
                    "label": 0
                },
                {
                    "sent": "Will talk about ideas in about OK, they don't have to be human readable.",
                    "label": 0
                },
                {
                    "sent": "But that identifies The Beatles and you can pass it around and give it to other people and they can look it up to find out what you were talking about.",
                    "label": 0
                },
                {
                    "sent": "With soap, you get that everything all of the music in the world is under slash WS or something like it.",
                    "label": 0
                },
                {
                    "sent": "It's only by 9 what XML you send to request things from that place on the web that you get anything intelligible at all.",
                    "label": 0
                },
                {
                    "sent": "OK, so if you tell me about The Beatles, I have to understand the entire schema in which you sent it to me.",
                    "label": 0
                },
                {
                    "sent": "And it's related schemas.",
                    "label": 0
                },
                {
                    "sent": "To find out how to ask more about it and that will break the minute that somebody wants to express something else about those entities.",
                    "label": 0
                },
                {
                    "sent": "Not nice.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So Jason rest.",
                    "label": 0
                },
                {
                    "sent": "Gets rid of a lot of the horrible stuff in XML.",
                    "label": 1
                },
                {
                    "sent": "So nice simple hierarchical schema with recurrent elements.",
                    "label": 0
                },
                {
                    "sent": "Really nice with programming languages with JavaScript switches.",
                    "label": 0
                },
                {
                    "sent": "Really majority programming language now it is it's native data representation with other programming languages now that they all have dictionaries.",
                    "label": 0
                },
                {
                    "sent": "OK, even apples lovely new language that looks a bit like Objective C looks a bit like Python.",
                    "label": 0
                },
                {
                    "sent": "Why does it look like Python?",
                    "label": 0
                },
                {
                    "sent": "Because everybody's got dictionaries, so you can pass it really easily into a programming model, and people often not always, but often use HTTP well when they're passing.",
                    "label": 0
                },
                {
                    "sent": "This Jason around, OK?",
                    "label": 0
                },
                {
                    "sent": "It's kind of schemaless because you're adding keys to a dictionary.",
                    "label": 0
                },
                {
                    "sent": "You don't break things, but you do because it's hierarchical.",
                    "label": 0
                },
                {
                    "sent": "You have a fixed hierarchy for things, so if you've embedded something in a hierarchy that now you discover that you need to use in a new context, you've broken your schema and you have to refactor and databases that take Jason like Mongo DB have maybe not as much, but have a serious of problem with refactoring, as do relational databases.",
                    "label": 0
                },
                {
                    "sent": "You have to take the thing down, take all of the data apart making new hierarchical model for it.",
                    "label": 0
                },
                {
                    "sent": "Load into that.",
                    "label": 0
                },
                {
                    "sent": "Have everybody change how they interact with that API is painful.",
                    "label": 0
                },
                {
                    "sent": "The native graph model is much nicer and this is where we're getting too.",
                    "label": 0
                },
                {
                    "sent": "Native graphs, lots of people using.",
                    "label": 0
                },
                {
                    "sent": "People are sharing them.",
                    "label": 0
                },
                {
                    "sent": "How do you share?",
                    "label": 0
                },
                {
                    "sent": "A graph?",
                    "label": 0
                },
                {
                    "sent": "How do you write?",
                    "label": 0
                },
                {
                    "sent": "Write it down.",
                    "label": 0
                },
                {
                    "sent": "We don't have CSB.",
                    "label": 0
                },
                {
                    "sent": "We don't have SQL definitions.",
                    "label": 0
                },
                {
                    "sent": "So how do you share a graph?",
                    "label": 0
                },
                {
                    "sent": "A.",
                    "label": 0
                },
                {
                    "sent": "That's a nice thing to do, but not if not.",
                    "label": 0
                },
                {
                    "sent": "If someone wants everything, OK.",
                    "label": 0
                },
                {
                    "sent": "If I want to go to my government Department so one of the ones that funds US Department of Culture, Media and Sport and say tell me all of the funding for this sector, I don't want to be walking through an API and learning about it and gradually building up that stuff.",
                    "label": 0
                },
                {
                    "sent": "I just want to give it to me.",
                    "label": 0
                },
                {
                    "sent": "Now if it's nice and tabular, maybe they can give me CSV and you can produce that from a graph.",
                    "label": 0
                },
                {
                    "sent": "Sparkle is one way.",
                    "label": 0
                },
                {
                    "sent": "But if, as we saw earlier, within Denormalization, the model is so rich and potentially changing all the time that I need for it to be a graph.",
                    "label": 0
                },
                {
                    "sent": "How do I get a whole graph to someone else?",
                    "label": 0
                },
                {
                    "sent": "There's really only one game in town, and it's already F. OK, you look at other people doing graphs and so Freebase is the basis of Google's knowledge graph.",
                    "label": 0
                },
                {
                    "sent": "I said knowledge graphs are these big attempts to build massive graphs full of relationships.",
                    "label": 0
                },
                {
                    "sent": "There is an API, there's a query language for it.",
                    "label": 0
                },
                {
                    "sent": "MQL, on the Freebase API.",
                    "label": 0
                },
                {
                    "sent": "But the best way to get the whole graph is as RDF.",
                    "label": 0
                },
                {
                    "sent": "OK, even though it's not a native RDF database that runs Freebase there.",
                    "label": 0
                },
                {
                    "sent": "GIF RDF to other people.",
                    "label": 0
                },
                {
                    "sent": "OK, nicest way to get all of Musicbrainz isn't to go through.",
                    "label": 0
                },
                {
                    "sent": "All of those awful schema SQL definitions of tables and insert the data aim I'd.",
                    "label": 0
                },
                {
                    "sent": "I'll give it get the RDF graph.",
                    "label": 0
                },
                {
                    "sent": "OK, what do people do with other graph databases?",
                    "label": 0
                },
                {
                    "sent": "Embarrassingly, if you want Musicbrainz in Neo 4 J, you have to download the binary indexed image of NEO for J and reconstitute it under the same version of database or under one that's backwards compatible and will upgrade it.",
                    "label": 0
                },
                {
                    "sent": "Or for the W3C has solved this for us.",
                    "label": 0
                },
                {
                    "sent": "You can pass around graphs to other people in RDF.",
                    "label": 0
                },
                {
                    "sent": "OK. What we really will talk about after lunch is they've also standardized for us.",
                    "label": 0
                },
                {
                    "sent": "How do you interact with that graph with complex queries?",
                    "label": 0
                },
                {
                    "sent": "Do you have to learn MQL for Freebase and another API for a different graph and another API for different graph?",
                    "label": 0
                },
                {
                    "sent": "No.",
                    "label": 0
                },
                {
                    "sent": "If you load RDF.",
                    "label": 0
                },
                {
                    "sent": "A good database that supports it will be able to give you a sparkle interface over rates for a standardized query language that should work the same here and there and everywhere, at least so far as SQL says that.",
                    "label": 0
                },
                {
                    "sent": "8:00 o'clock hello are you talking?",
                    "label": 0
                },
                {
                    "sent": "12 times lunch 12:30, right?",
                    "label": 0
                },
                {
                    "sent": "So let's talk.",
                    "label": 0
                },
                {
                    "sent": "I might.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "No slide I had.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Yeah, plus I am going to flip to as promised some Euclid material.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": []
        },
        "clip_21": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so I'm going to skip entirely the motivating scenario for Euclid, but just mention it was music based.",
                    "label": 0
                },
                {
                    "sent": "Therefore we will see after lunch some music oriented queries and me sweating trying to get them to work on the Triple Store at the back.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Because I shouldn't have got a life to prepare the more in advance, but we'll see.",
                    "label": 0
                },
                {
                    "sent": "I'm going to jump forward to review this idea of RDF, and I'm going to reinforce this.",
                    "label": 0
                },
                {
                    "sent": "I'm going to jump to the high culture stuff at some point.",
                    "label": 0
                },
                {
                    "sent": "This way you can tell you about it.",
                    "label": 0
                },
                {
                    "sent": "Again, everything in RDF is a statement modeling and relationship between two things.",
                    "label": 1
                },
                {
                    "sent": "OK, we normally give AURI to the things being related to The Beatles, to Sargent Peppers too.",
                    "label": 0
                },
                {
                    "sent": "Wrong album, I can't think of any tracks on it.",
                    "label": 0
                },
                {
                    "sent": "Embarrassing so to these things to the artist tracks albums OK and then make relationships between them that are one directed.",
                    "label": 0
                },
                {
                    "sent": "OK, it's from one of these things to another one.",
                    "label": 0
                },
                {
                    "sent": "OK, and that we can say disambiguate it, or in general in graph terms labeled with what relationship holds between those two things.",
                    "label": 0
                },
                {
                    "sent": "OK, so the fact that Paul McCartney is a member of The Beatles.",
                    "label": 0
                },
                {
                    "sent": "The member of is a relationship.",
                    "label": 0
                },
                {
                    "sent": "There might be other relationships between those two same entities.",
                    "label": 0
                },
                {
                    "sent": "You might have relationship for being a founding member of a band.",
                    "label": 0
                },
                {
                    "sent": "OK, so you get that.",
                    "label": 0
                },
                {
                    "sent": "A relationship name as well an identifier.",
                    "label": 0
                },
                {
                    "sent": "Two things that go along that those relationships we need to identify and we need to let people understand they can go out to the web and find out what is the relationship that you've said exist between these two things.",
                    "label": 0
                },
                {
                    "sent": "So it's an identifier.",
                    "label": 0
                },
                {
                    "sent": "So we use a Uri and we want people to be able to find out about it even when they don't know.",
                    "label": 0
                },
                {
                    "sent": "So we're using HTTP ur eye in linked data.",
                    "label": 0
                },
                {
                    "sent": "OK, so in music we use an ontology that.",
                    "label": 0
                },
                {
                    "sent": "Perhaps without much flair is called the music ontology, but it was made by Eve who I mentioned before, who you should all be quite impressed has now got a great job at Netflix and is moving to California.",
                    "label": 0
                },
                {
                    "sent": "He indeed makes relationships in that ontology like member of and founding member of OK.",
                    "label": 0
                },
                {
                    "sent": "He gives them ur eyes which means one you can understand them, their HTTP ur eyes, you look them up and you get the ontology definition for what that relationship supposed to mean.",
                    "label": 0
                },
                {
                    "sent": "And two you can reuse them.",
                    "label": 0
                },
                {
                    "sent": "Which is what John was talking about.",
                    "label": 0
                },
                {
                    "sent": "OK, you don't have to use all of the music ontology to model some things about music.",
                    "label": 0
                },
                {
                    "sent": "OK, I'll talk about another ontology, which is what brings me to Crete so often, even though I can't deal with the climate.",
                    "label": 0
                },
                {
                    "sent": "The group 4th of in Iraq, Leon are the leaders through a group that Dominic will probably tell you about the International Museums Group called the CRM, which is about modeling cultural heritage.",
                    "label": 0
                },
                {
                    "sent": "This is an application idea which isn't.",
                    "label": 0
                },
                {
                    "sent": "Completely made up.",
                    "label": 0
                },
                {
                    "sent": "I actually did.",
                    "label": 0
                },
                {
                    "sent": "This is to say I met someone who was making a radio show.",
                    "label": 0
                },
                {
                    "sent": "OK, now radio programs Eve after he started the music Ontology at Queen Mary went to the BBC and made what's called a program ontology.",
                    "label": 0
                },
                {
                    "sent": "So giving information to programs.",
                    "label": 0
                },
                {
                    "sent": "There's no apology for that.",
                    "label": 0
                },
                {
                    "sent": "The person who was making this radio show on Resonance FM in London was going to the craters at the British Museum and saying pick a favorite Gallery in the museum and tell me what music you associate with it.",
                    "label": 0
                },
                {
                    "sent": "And then during the show will play that music and you will talk about the Gallery and some of the objects there.",
                    "label": 0
                },
                {
                    "sent": "OK, I wanted to make that into linked data, which means I need the program ontology.",
                    "label": 0
                },
                {
                    "sent": "I need the CRM ontology that we used to talk about objects and I need the music ontology to talk about what music they chose.",
                    "label": 0
                },
                {
                    "sent": "I didn't need to know or use the whole music ontology, nor the whole of CRM, nor the whole program ontology.",
                    "label": 0
                },
                {
                    "sent": "I picked what classes of things do I have?",
                    "label": 0
                },
                {
                    "sent": "The programs for the radio programs?",
                    "label": 0
                },
                {
                    "sent": "The man made objects for, the objects, the locations for the Gallery, that albums, and the tracks and their artists for the music and reuse those classes.",
                    "label": 0
                },
                {
                    "sent": "And some of the relationships between them to encode that link data.",
                    "label": 1
                },
                {
                    "sent": "And I didn't define for myself.",
                    "label": 0
                },
                {
                    "sent": "A single new class or property I just made instances of those existing ontologies and very often that's the case.",
                    "label": 0
                },
                {
                    "sent": "You can.",
                    "label": 0
                },
                {
                    "sent": "So everything in RDF.",
                    "label": 0
                },
                {
                    "sent": "Is relationships between identified things OK the from in the relationship we call the subject, the two we call the object?",
                    "label": 0
                },
                {
                    "sent": "The predicate predicates what the relationship is.",
                    "label": 0
                },
                {
                    "sent": "That middle bit says member of or has track or things like this.",
                    "label": 0
                },
                {
                    "sent": "OK, in the simple case that all ur eyes The Beatles has a UI member of has a Uri an I'm sorry the wrong way round member has a Uri and Paul McCartney has a Uri.",
                    "label": 0
                },
                {
                    "sent": "So the triple the statement is 3YR eyes in a row OK?",
                    "label": 0
                },
                {
                    "sent": "And if you view it as a graph, you've got a node for Paul, a note for The Beatles and Arrow between them that goes from The Beatles to pull because respectively, the subject in the object and is labeled with the relationship.",
                    "label": 0
                },
                {
                    "sent": "What we called a predicate.",
                    "label": 0
                },
                {
                    "sent": "OK, probably worth saying.",
                    "label": 0
                },
                {
                    "sent": "You hear both property and predicates.",
                    "label": 0
                },
                {
                    "sent": "The slightly different property is the definition of the relationship predicate is the role that it takes in a triple is being used as the middle part of a triple OK, so ontologies give you properties, then statements that you make.",
                    "label": 1
                },
                {
                    "sent": "Use those properties as predicates as definitions of specific relationships.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So here's some examples.",
                    "label": 0
                },
                {
                    "sent": "Oh, I start with the same us.",
                    "label": 0
                },
                {
                    "sent": "Can't remember we did that.",
                    "label": 0
                },
                {
                    "sent": "Musicbrainz has an ID for The Beatles and so does DB pedia.",
                    "label": 0
                },
                {
                    "sent": "OK, one thing about these identifiers that's worth knowing is.",
                    "label": 0
                },
                {
                    "sent": "They have to be unique in the sense that if you use a UI for The Beatles, you can't use it the next day for the stones.",
                    "label": 0
                },
                {
                    "sent": "Once you've used in your eye for something, you have to be consistent.",
                    "label": 0
                },
                {
                    "sent": "You don't reuse it for something else.",
                    "label": 0
                },
                {
                    "sent": "You've said I want everyone to agree when I say this, I mean The Beatles and they might want to use it to you.",
                    "label": 0
                },
                {
                    "sent": "Stick with it.",
                    "label": 0
                },
                {
                    "sent": "OK, that doesn't mean that everyone has to use the same UI for The Beatles link data deliberately.",
                    "label": 0
                },
                {
                    "sent": "An owl and RDF S underneath.",
                    "label": 0
                },
                {
                    "sent": "They don't have what's called a unique name assumption.",
                    "label": 0
                },
                {
                    "sent": "In fact, there can be multiple ID's for something like that.",
                    "label": 0
                },
                {
                    "sent": "An owl.",
                    "label": 0
                },
                {
                    "sent": "Which will learn more about gives us an easy way to overcome those differences and say this is the same as that.",
                    "label": 0
                },
                {
                    "sent": "OK in this owl namespace and will get rid of those very quickly.",
                    "label": 0
                },
                {
                    "sent": "We have a property called Samos that says this means that and that means this and anything that Musicbrainz knows about.",
                    "label": 0
                },
                {
                    "sent": "The Beatles.",
                    "label": 0
                },
                {
                    "sent": "Can be inferred into this identified the DPT users and vice versa.",
                    "label": 0
                },
                {
                    "sent": "Anything you can get from DB Pedia goes with Musicbrainz.",
                    "label": 0
                },
                {
                    "sent": "Now we merge really useful things 'cause Musicbrainz has lots of release oriented information publication information whereas Wikipedia hence DB Pedia has more biographical information put them together and straight away.",
                    "label": 0
                },
                {
                    "sent": "You have a nice application scenario putting that stuff together.",
                    "label": 0
                },
                {
                    "sent": "Literal is just a bit of text without a global identity, we don't need to be making shared statements about this string of text.",
                    "label": 0
                },
                {
                    "sent": "The Beatles or about a number like 3 or about the date like the 1st of September 2014.",
                    "label": 0
                },
                {
                    "sent": "OK, those can just be bits of data without a global identity.",
                    "label": 0
                },
                {
                    "sent": "And just like XML, and indeed when you encode RDF in XML really using that, we use this idea of literal OK. Literals, as we'll see in a second, can be disambiguated a little bit, but.",
                    "label": 0
                },
                {
                    "sent": "So far so good.",
                    "label": 0
                },
                {
                    "sent": "Everything is triples.",
                    "label": 0
                },
                {
                    "sent": "Everything we've seen so far is verbose.",
                    "label": 0
                },
                {
                    "sent": "Full sentences, subject, predicate, object.",
                    "label": 0
                },
                {
                    "sent": "OK. We know that we can ease your eyes for these things and for an object you could use a literal.",
                    "label": 0
                },
                {
                    "sent": "You can attach something that doesn't have identity is just informative.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "You draw it in a graph.",
                    "label": 0
                },
                {
                    "sent": "He looks like that OK.",
                    "label": 0
                },
                {
                    "sent": "The subject is the start of the arrow.",
                    "label": 1
                },
                {
                    "sent": "It means that if you've got more than one statement where AURI is used in both of the two statements.",
                    "label": 0
                },
                {
                    "sent": "You can move.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Which of these arrows together to make a graph?",
                    "label": 0
                },
                {
                    "sent": "OK, so those two statements that we had before the subject was the same you are.",
                    "label": 0
                },
                {
                    "sent": "I OK where you've got two statements that have the same subject?",
                    "label": 0
                },
                {
                    "sent": "You've got two arrows 'cause you got two statements, but they are from the same place from the same subject.",
                    "label": 0
                },
                {
                    "sent": "OK, so you had that outgoing reshape.",
                    "label": 0
                },
                {
                    "sent": "If they had the same objects they would have the incoming V shaped.",
                    "label": 0
                },
                {
                    "sent": "They're both arrows pointing to the same thing, and that I'm so sweet you don't take pictures.",
                    "label": 0
                },
                {
                    "sent": "Do you think so Photoshop happy?",
                    "label": 0
                },
                {
                    "sent": "I blame being L OK two statements, two arrows in a graph and you've got these merge points.",
                    "label": 0
                },
                {
                    "sent": "OK, it doesn't matter who made these assertions.",
                    "label": 0
                },
                {
                    "sent": "We say if you get a statement from someone, it's an assertion.",
                    "label": 0
                },
                {
                    "sent": "Doesn't matter if those two assertions were made by different people, we can merge them into one graph.",
                    "label": 0
                },
                {
                    "sent": "OK, so if.",
                    "label": 0
                },
                {
                    "sent": "From Wikipedia, DB Pedia tells you something about The Beatles, and Musicbrainz tells you something more about The Beatles.",
                    "label": 0
                },
                {
                    "sent": "You can merge those graphs together, either becausw they share ur eyes in the 1st place.",
                    "label": 0
                },
                {
                    "sent": "Unfortunately Peter in Musicbrainz don't do this very well.",
                    "label": 0
                },
                {
                    "sent": "Musicbrainz and Freebase do that very well.",
                    "label": 0
                },
                {
                    "sent": "Or so when that doesn't work by using same as to merge them in the 2nd place through reasoning so they were separate bits of graph but same as means actually two of those nodes are the same, so we can merge them after the fact.",
                    "label": 0
                },
                {
                    "sent": "I was on about the same and so yeah, kind of left.",
                    "label": 0
                },
                {
                    "sent": "Here goes, I mean same as it's like a strong commitment.",
                    "label": 0
                },
                {
                    "sent": "It is a strong commitment so.",
                    "label": 0
                },
                {
                    "sent": "I'm not sure what you mean by flat, but let me tell you what it does.",
                    "label": 0
                },
                {
                    "sent": "OK, if you have this same as.",
                    "label": 0
                },
                {
                    "sent": "Then it means everything that applies as a relationship to either of them.",
                    "label": 0
                },
                {
                    "sent": "So for instance, this name of The Beatles applies to the other one as well.",
                    "label": 1
                },
                {
                    "sent": "So through inference we take all of those outcoming arcs and add them here.",
                    "label": 0
                },
                {
                    "sent": "All of the incoming arcs and add them here, and vice versa.",
                    "label": 0
                },
                {
                    "sent": "So you just merge the whole thing semantically, so there's no difference between them.",
                    "label": 0
                },
                {
                    "sent": "And you're right, that's a very strong commitment.",
                    "label": 0
                },
                {
                    "sent": "So in the application that I'll talk more about the British Museum, we very often don't use a mass.",
                    "label": 0
                },
                {
                    "sent": "OK, we have a central work of our documentation Department is to provide the vocabulary for people to describe things like people and places common everyday examples.",
                    "label": 0
                },
                {
                    "sent": "But materials and cultures OK.",
                    "label": 0
                },
                {
                    "sent": "When we when we document a certain material as being part of the composition of an object, we would like to put that together with other museums like the yellow collection and Rights Museum and other things that I may have mentioned.",
                    "label": 0
                },
                {
                    "sent": "They might mean something subtly different by the material, so we want to say it's kind of the same flaxen linen or linen in English and something very similar in Dutch.",
                    "label": 0
                },
                {
                    "sent": "But actually the subtle differences.",
                    "label": 0
                },
                {
                    "sent": "We don't use same as in that case because they're indistinguishable after after your assertion of same as, so we use the vocabulary called scosta.",
                    "label": 0
                },
                {
                    "sent": "Say things like there's a close match between those things.",
                    "label": 0
                },
                {
                    "sent": "Musical environment can be made using powerful Sarah and Freddie Mercury, yeah.",
                    "label": 0
                },
                {
                    "sent": "Test absolutely that comes up.",
                    "label": 0
                },
                {
                    "sent": "In musicbrainz.",
                    "label": 0
                },
                {
                    "sent": "There's another great.",
                    "label": 0
                },
                {
                    "sent": "So I was gung ho about making more DB pedia links when I started publishing the RDF for Musicbrainz because.",
                    "label": 0
                },
                {
                    "sent": "Music artists and albums are quite well represented on Wikipedia.",
                    "label": 0
                },
                {
                    "sent": "Alot of them have their own pages, therefore they have IDs.",
                    "label": 0
                },
                {
                    "sent": "Therefore they are in DB pedia.",
                    "label": 0
                },
                {
                    "sent": "Therefore you want to do things like this OK?",
                    "label": 0
                },
                {
                    "sent": "You're absolutely right.",
                    "label": 0
                },
                {
                    "sent": "Wikipedia might make one page for Freddie Mercury, including his Bourne identity if you like.",
                    "label": 0
                },
                {
                    "sent": "Sorry not Matthew Bourne, but did identity was born with and others, whereas Musicbrainz says no.",
                    "label": 0
                },
                {
                    "sent": "Actually those are two different.",
                    "label": 0
                },
                {
                    "sent": "People and the releases they make might be different.",
                    "label": 0
                },
                {
                    "sent": "So Prince for instance Prince Prince and the new power generation and that funny symbol they had for a few years make different releases so they're related to one another.",
                    "label": 0
                },
                {
                    "sent": "But they're not the same problem with same as is.",
                    "label": 0
                },
                {
                    "sent": "Even if Musicbrainz has different identifiers for them.",
                    "label": 0
                },
                {
                    "sent": "If you make all of those identifiers same as the DB pedia resource from the Wikipedia page, then all of them have lost their identity.",
                    "label": 0
                },
                {
                    "sent": "That all smashed into one thing.",
                    "label": 0
                },
                {
                    "sent": "You didn't say that Musicbrainz Prince is the same as Musicbrainz squiggle, but you did say Musicbrainz Prince is the same as Wikipedia.",
                    "label": 0
                },
                {
                    "sent": "Prince and Musicbrainz Squiggle is the same as DB pedia squid Prince.",
                    "label": 0
                },
                {
                    "sent": "OK, therefore Musicbrainz prints and squiggles are also now the same.",
                    "label": 0
                },
                {
                    "sent": "That indistinguishable.",
                    "label": 0
                },
                {
                    "sent": "OK, I had that problem.",
                    "label": 0
                },
                {
                    "sent": "I had it with albums as well.",
                    "label": 0
                },
                {
                    "sent": "There are album series.",
                    "label": 0
                },
                {
                    "sent": "This whole thing about releases and release groups where the whole series just has one Wikipedia page where it's actually there were released, staged month by month.",
                    "label": 0
                },
                {
                    "sent": "You lose your distinctiveness if you same as so mostly with Musicbrainz DB Pedia.",
                    "label": 0
                },
                {
                    "sent": "I also use course.",
                    "label": 0
                },
                {
                    "sent": "Instead of our same ours.",
                    "label": 0
                },
                {
                    "sent": "When we are in the context of pure RDF, other relationship is just the one additional relationship.",
                    "label": 0
                },
                {
                    "sent": "It doesn't mean anything, but when you are in old context, it means that the two concepts are the same.",
                    "label": 0
                },
                {
                    "sent": "Yeah, so it depends on the regional.",
                    "label": 0
                },
                {
                    "sent": "It depends on the regional.",
                    "label": 0
                },
                {
                    "sent": "Most as I said, reasoning can be very useful not to do constraints OK, not to make.",
                    "label": 0
                },
                {
                    "sent": "Arbitrary identifications of things.",
                    "label": 0
                },
                {
                    "sent": "Are you being cautious with same as but doing things like I was saying before inferring the schema, or from your vocabulary, or inferring the things that always are true of music ontology that a solo music artist and a group of both kinds of music artists?",
                    "label": 0
                },
                {
                    "sent": "OK, so Paul McCartney is an artist just as much as The Beatles were an artist.",
                    "label": 0
                },
                {
                    "sent": "That's something you get with our DFS, reasoning or owl.",
                    "label": 0
                },
                {
                    "sent": "That is fairly unchallenged that you do want.",
                    "label": 0
                },
                {
                    "sent": "Most triple stores will not do all of our.",
                    "label": 0
                },
                {
                    "sent": "You're right, you have to choose a reason to do that.",
                    "label": 0
                },
                {
                    "sent": "But they'll do a significant part that includes our DFS reasoning, plus a bit of OWL, and that bit of nearly always include same as OK.",
                    "label": 0
                },
                {
                    "sent": "So however, you're storing your RDF, it's got a bit of reasoning.",
                    "label": 0
                },
                {
                    "sent": "Same as he's going to have an effect and you need to be careful with it.",
                    "label": 0
                },
                {
                    "sent": "That's probably why we had it in the slides here email.",
                    "label": 0
                },
                {
                    "sent": "I'm just going to follow up on that really quickly without running out of time.",
                    "label": 0
                },
                {
                    "sent": "I hope that is generally true about forward versus backward chaining, but it's not necessarily true.",
                    "label": 0
                },
                {
                    "sent": "You can forward chain and keep your inference is separate so that you can only bring them into answering the query when you want them.",
                    "label": 0
                },
                {
                    "sent": "That's what we do at the moment in research space and the second point indeed on the web.",
                    "label": 1
                },
                {
                    "sent": "You can find in Euclid and our lemma forward chaining version of Musicbrainz or Link brains.",
                    "label": 0
                },
                {
                    "sent": "You can find the virtual version and it's the virtuoso one that I brought with me.",
                    "label": 0
                },
                {
                    "sent": "So exactly that distinction is present with us.",
                    "label": 0
                },
                {
                    "sent": "Now if you want to query you might see some of those differences.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I don't want to talk about black nodes.",
                    "label": 0
                },
                {
                    "sent": "You don't always want to keep your eyes to things you can do without them, but they've got no identity beyond the context that you define them in.",
                    "label": 0
                },
                {
                    "sent": "That said, if you want to know more about.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Later do come and ask much more interesting 'cause we're getting ready for sparkle after the break is to know a little bit more about the syntax.",
                    "label": 0
                },
                {
                    "sent": "How long do I have 10 more minutes, right?",
                    "label": 0
                },
                {
                    "sent": "A little bit more about the syntax that we can reasonably used to write RDF.",
                    "label": 0
                },
                {
                    "sent": "OK, one syntax is what I showed you before subject, predicate object.",
                    "label": 0
                },
                {
                    "sent": "Subject predicate object.",
                    "label": 0
                },
                {
                    "sent": "Like a very well spoken person with very formal sentence is laid out OK the mad scientist.",
                    "label": 0
                },
                {
                    "sent": "Of this or the matter, no.",
                    "label": 0
                },
                {
                    "sent": "It is unfair to scientist Mad Engineer in that comparison is RDF and XML.",
                    "label": 0
                },
                {
                    "sent": "Don't use it.",
                    "label": 0
                },
                {
                    "sent": "Don't try and read and write RDF and XML.",
                    "label": 0
                },
                {
                    "sent": "That's for mad engineers and machines.",
                    "label": 0
                },
                {
                    "sent": "OK, the way to read and write RDF is using Turtle.",
                    "label": 0
                },
                {
                    "sent": "The terse RDF triple language.",
                    "label": 0
                },
                {
                    "sent": "OK, it says.",
                    "label": 0
                },
                {
                    "sent": "First, yes, you can have these full ur eyes writing out subject, predicate, object.",
                    "label": 0
                },
                {
                    "sent": "Perfectly valid, but most people are lazy and want to take some shortcuts, hence the terseness.",
                    "label": 0
                },
                {
                    "sent": "First shortcut.",
                    "label": 0
                },
                {
                    "sent": "We can make this instead of writing out these incredibly long you right?",
                    "label": 0
                },
                {
                    "sent": "Yeah, yeah.",
                    "label": 0
                },
                {
                    "sent": "Yeah, so your ontology.",
                    "label": 0
                },
                {
                    "sent": "You could equally write in Turtle or RDF XML.",
                    "label": 0
                },
                {
                    "sent": "You had this changed a little bit between our one and our two, but you had another XML syntax or two or three 4 hours specifically, but fundamentally you would turn that into RDF and that RDF is expressible as RDF and XML, or N triples the thing that I showed you so far, or turtle which is the shortcuts or now Jason LD.",
                    "label": 0
                },
                {
                    "sent": "You can send your ontology to someone.",
                    "label": 0
                },
                {
                    "sent": "In Jason LD it's RDF, therefore it defines an ontology.",
                    "label": 0
                },
                {
                    "sent": "Is also an free talking religion, and three is a sad.",
                    "label": 0
                },
                {
                    "sent": "Misnomer most of the time that you see it.",
                    "label": 0
                },
                {
                    "sent": "It used to be that the media type you see very often text slash entry in fact, so I said N triples everything is valid in turtle.",
                    "label": 0
                },
                {
                    "sent": "Everything in Turtle is valid in entry, which is not a standard.",
                    "label": 0
                },
                {
                    "sent": "But there are some more things in entry that most people don't use and aren't aware of and make the mistake of calling their turtle entry.",
                    "label": 0
                },
                {
                    "sent": "Now with RDF 1 one things were a lot clearer.",
                    "label": 0
                },
                {
                    "sent": "Turtle is a formally defined standard with an Internet media type and a grammar, and when you're writing totally, you should say Turtle don't say entry.",
                    "label": 1
                },
                {
                    "sent": "OK, but will understand what you mean if you do.",
                    "label": 0
                },
                {
                    "sent": "Good good good.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "Instead of writing out long ur eyes all the time which you would have to in N triples.",
                    "label": 0
                },
                {
                    "sent": "If you're being verbose, we say almost all of these you are.",
                    "label": 0
                },
                {
                    "sent": "I start with the same bits and they're only different either.",
                    "label": 0
                },
                {
                    "sent": "After the final slash or after a hash.",
                    "label": 0
                },
                {
                    "sent": "So we keep all of the bits that is the same between many many instances or classes or properties and say that's a namespace like XML does.",
                    "label": 0
                },
                {
                    "sent": "If you've had the misfortune to deal with XML and give it a short name.",
                    "label": 0
                },
                {
                    "sent": "Often the names we use are common, so when you say audio for audio fessor owl, that's more or less the prefix definition that everyone in the world would make OK, there being very mean.",
                    "label": 0
                },
                {
                    "sent": "If they don't, but they're quite within their rights.",
                    "label": 0
                },
                {
                    "sent": "When it goes outside those, there are some conventions.",
                    "label": 0
                },
                {
                    "sent": "People normally say the program ontology that I just talked about his P. Oh, the music ontology that I just talked about his Mo DB Pedia.",
                    "label": 0
                },
                {
                    "sent": "No, there's a few different names that people use for it.",
                    "label": 0
                },
                {
                    "sent": "And confusingly, there sometimes mistake the ontology for the schema for the instances.",
                    "label": 0
                },
                {
                    "sent": "So you have to be a bit careful.",
                    "label": 0
                },
                {
                    "sent": "That said where things are common, it is nice to go to a site called prefix dot CC.",
                    "label": 0
                },
                {
                    "sent": "Normally most useful to mention when people have web access, so we'll see how we do through the week.",
                    "label": 0
                },
                {
                    "sent": "But you can look these things up and instead of telling you this is what Mo means, it will tell you this is what most people mean by email.",
                    "label": 0
                },
                {
                    "sent": "But some freaks also mean this as well.",
                    "label": 0
                },
                {
                    "sent": "It gives you this crowdsourced voting mechanism to see what is the popular use of that short namespace.",
                    "label": 0
                },
                {
                    "sent": "It doesn't matter what you use.",
                    "label": 0
                },
                {
                    "sent": "OK, these are just used for expanding things out full.",
                    "label": 0
                },
                {
                    "sent": "You arise within your documents.",
                    "label": 0
                },
                {
                    "sent": "How does that look?",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Like this?",
                    "label": 0
                },
                {
                    "sent": "OK, ignore the after a minute.",
                    "label": 0
                },
                {
                    "sent": "I'll explain that, but just look at the object.",
                    "label": 0
                },
                {
                    "sent": "The object instead of being a full urri in between angle brackets, says Mo: music group.",
                    "label": 0
                },
                {
                    "sent": "It means look at the prefix for Mo.",
                    "label": 0
                },
                {
                    "sent": "Pop music group on the end and you've got your urri.",
                    "label": 0
                },
                {
                    "sent": "OK, there's a couple more things we can do that are worth knowing.",
                    "label": 0
                },
                {
                    "sent": "If you use base, it means anything that's in angle brackets can continue from there.",
                    "label": 0
                },
                {
                    "sent": "OK, so if you see something in angle brackets that doesn't look like a urri what's ur I?",
                    "label": 0
                },
                {
                    "sent": "It's something with a colon in it.",
                    "label": 0
                },
                {
                    "sent": "OK, that's more or less the only definition apart from syntactic restrictions on what kind of characters can come in, what places UI has a column?",
                    "label": 0
                },
                {
                    "sent": "OK, there's no: in there.",
                    "label": 0
                },
                {
                    "sent": "How come?",
                    "label": 0
                },
                {
                    "sent": "Because for this we go up to base OK?",
                    "label": 0
                },
                {
                    "sent": "One more thing that you might see, you can have an anonymous prefix or prefix that doesn't have.",
                    "label": 0
                },
                {
                    "sent": "Some letters to identify before the call on.",
                    "label": 0
                },
                {
                    "sent": "It just has the column that is different from base.",
                    "label": 0
                },
                {
                    "sent": "Base continues inside angle brackets that anonymous prefix.",
                    "label": 0
                },
                {
                    "sent": "Is like that, no angle brackets, you just put a colon and then the local name.",
                    "label": 0
                },
                {
                    "sent": "OK, that will go on top of the anonymous one.",
                    "label": 0
                },
                {
                    "sent": "Last thing about this bit of Turtle, about their conciseness of identifiers, the most concise one that you can have is the one that's used a very great deal.",
                    "label": 0
                },
                {
                    "sent": "It's the predicate, so it's the property which used as a predicate.",
                    "label": 0
                },
                {
                    "sent": "Add some instance into a class.",
                    "label": 0
                },
                {
                    "sent": "OK, it's the things that that is the thing that makes Beatles music Group an Paul McCartney music artist.",
                    "label": 0
                },
                {
                    "sent": "OK, I just said it makes him.",
                    "label": 0
                },
                {
                    "sent": "A music artist because it's used so often, we just use our no: not angle brackets stands for the local name type in the RDF namespace.",
                    "label": 0
                },
                {
                    "sent": "OK, but nobody wants to type RDF type.",
                    "label": 0
                },
                {
                    "sent": "Definitely nobody wants to talk HTTP: w3.org blah blah blah blah blah.",
                    "label": 0
                },
                {
                    "sent": "So we just put up.",
                    "label": 0
                },
                {
                    "sent": "You'll use that in queries alot if you want to make sure that that part of your query that you're dealing with something of a certain class then you say that thing is Earth and nominated.",
                    "label": 0
                },
                {
                    "sent": "Past that it goes in.",
                    "label": 0
                },
                {
                    "sent": "Good, I have two minutes to wrap this up.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Right, so last piece of punctuation.",
                    "label": 0
                },
                {
                    "sent": "We don't just use fullstops and again just to remind you with one of my 2 remaining minutes, this is true for writing and reading.",
                    "label": 0
                },
                {
                    "sent": "RDF is turtle, but it's also true for querying RDF models in sparkle.",
                    "label": 0
                },
                {
                    "sent": "That's why I'm belaboring this to make sure that you're ready to make queries this afternoon if you have, as we had before more than one statement about the same subject.",
                    "label": 1
                },
                {
                    "sent": "I'm lazy, I don't want to repeat the subject, so instead of finishing subject predicate object, my first statement with a full stop, I say I'm still talking; And I'm talking about the same subject so I have another predicate object.",
                    "label": 1
                },
                {
                    "sent": "OK; Means I'm still talking about that subject and I'm not going to repeat it.",
                    "label": 0
                },
                {
                    "sent": "OK whereas?",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "A comma says, oh.",
                    "label": 0
                },
                {
                    "sent": "Who made these slides marybelle?",
                    "label": 0
                }
            ]
        },
        "clip_31": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "I always play marybelle when I can't read.",
                    "label": 0
                },
                {
                    "sent": "Yeah, indeed it was sorry.",
                    "label": 0
                },
                {
                    "sent": "So after the; We're still talking about the same subject and we've got predicate object.",
                    "label": 0
                },
                {
                    "sent": "This time we've gotta, thank you.",
                    "label": 0
                },
                {
                    "sent": "Maribel, means not only am I still talking about the same subject, but I'm still came out the same relationship.",
                    "label": 0
                },
                {
                    "sent": "The same predicate.",
                    "label": 0
                },
                {
                    "sent": "OK, so I'm just going to have another object for that subject under that relationship.",
                    "label": 0
                },
                {
                    "sent": "So in full.",
                    "label": 0
                },
                {
                    "sent": "Beatles has the label with the literal.",
                    "label": 0
                },
                {
                    "sent": "With the literal, this string.",
                    "label": 0
                },
                {
                    "sent": "The Beatles.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "That same subject, The Beatles, is the same as The Beatles in DB Pedia.",
                    "label": 1
                },
                {
                    "sent": "And it's also same as.",
                    "label": 0
                },
                {
                    "sent": "That BBC ID for The Beatles.",
                    "label": 0
                },
                {
                    "sent": "OK so.",
                    "label": 0
                },
                {
                    "sent": "You're going to start a whole new subject, predicate object statement; You're still talking about the same subject, You could just add another object to the same relationship for that subject.",
                    "label": 0
                },
                {
                    "sent": "OK, my last five seconds.",
                    "label": 0
                }
            ]
        },
        "clip_32": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This was the bit about literals worth knowing, because it's handy for querying.",
                    "label": 0
                },
                {
                    "sent": "A literal is just this bit in quote marks, it's just the string, but you can tell either people or machines what sort of thing you mean by that string.",
                    "label": 0
                },
                {
                    "sent": "How to interpret that string?",
                    "label": 0
                },
                {
                    "sent": "For humans, the important things to know is which language is it in?",
                    "label": 0
                },
                {
                    "sent": "So DB Pedia Beatles the abstract you get from DB pedia.",
                    "label": 0
                },
                {
                    "sent": "Both in English and German and other things.",
                    "label": 0
                },
                {
                    "sent": "Notice the comma between them, such two objects, but this abstract property to that subject.",
                    "label": 0
                },
                {
                    "sent": "A machine is interested in things like how do I pass this as a data type and we reuse those from XML?",
                    "label": 0
                },
                {
                    "sent": "So that's not very readable to a human OK, and in fact in Musicbrainz we put a millisecond duration so humans can read it, but that's very, very unambiguous way in XML to represent temporal durations.",
                    "label": 0
                },
                {
                    "sent": "OK, which can be passed by a machine that knows it's 3 minutes 48 seconds with certain qualifications.",
                    "label": 0
                },
                {
                    "sent": "OK, so in both cases we're tagging we say the literal.",
                    "label": 0
                },
                {
                    "sent": "The @ means we're tagging it with a language 'cause humans going to read it.",
                    "label": 0
                },
                {
                    "sent": "The double carrot sign means we're tagging with the data type 'cause the machine is going to look into this string and decide how to deal with it.",
                    "label": 0
                },
                {
                    "sent": "OK, so that's my crash course.",
                    "label": 0
                },
                {
                    "sent": "Intro to RDF and Link data, and then we're going to some information on querying it and have a goal with that with my Fame Triple Store near the bar this afternoon with any questions.",
                    "label": 0
                },
                {
                    "sent": "Or is it is everyone hungry as I am?",
                    "label": 0
                }
            ]
        }
    }
}