{
    "id": "zjors33e6nrjnaexpzjhnbugihtsuzmz",
    "title": "Automatic Polytime Reductions of NP Problems into a Fragment of STRIPS",
    "info": {
        "author": [
            "Alejandro Machado, University Sim\u00f3n Bol\u00ed\u00advar"
        ],
        "published": "July 21, 2011",
        "recorded": "June 2011",
        "category": [
            "Top->Computer Science->Artificial Intelligence->Planning and Scheduling"
        ]
    },
    "url": "http://videolectures.net/icaps2011_machado_polytime/",
    "segmentation": [
        [
            "Hello everybody.",
            "This is joint work with Labornet an elder."
        ],
        [
            "Oracle.",
            "So our motivation is that for using planners for solving problems, 1 needs to come up with sound.",
            "Pretty details in you need to encode your problem into PDL and it is not always clear how to do this.",
            "It is not always easy to model any type of problem into PDL even if you know well what the problem is.",
            "So it would be nice to automatically generate problems described in a high level declarative language into PDL."
        ],
        [
            "So our contribution is based on a tool system that automatically translates NP problems into PDL we are using.",
            "We are describing these problems specified using logic in a declarative manner and the translation runs in polynomial time.",
            "So the existence of plans for generated PDFs can be decided in nondeterministic polynomial time, so there is a complexity guarantee, and the tool is fully characterized by many formal properties that I will do."
        ],
        [
            "Skype later.",
            "So in this talk we will revise relevant concepts from the field of descriptive complexity theory.",
            "We will talk about the tool and the translations we have been implemented and we will talk about the experiment sweeper."
        ],
        [
            "Formed so for descriptive."
        ],
        [
            "Complexity theory.",
            "It is a branch of complexity theory that that and computer science and mathematics that uses logic instead of Turing machines, so to characterize complexity classes.",
            "So it does not commit to a specific model of computation.",
            "So in descriptive complexity theory of problem corresponds to a collection of finite structures and the collection is a set of finite models for logical formula like complexity, complexity classes over the class of problems correspond to a fragment of logic.",
            "So if you have different complexity classes, those correspond to different fragments of logic which we will see."
        ],
        [
            "Some examples in the next slide.",
            "For example, NP equals all problems that are definable in the existential fragment of 2nd order logic.",
            "And P equals the 2nd order horn formulas.",
            "Cohen P = a second order universal quantification formulas and a polynomial time hierarchy equals the whole 2nd order logical formulas space and P space equals second order logical formulas plus a transitive closure operator."
        ],
        [
            "So let's take sad as an example for explaining all these theory, so we have over there a CNF, which you should be familiar with.",
            "We have numbered the clauses and the variables with numbers from zero to two."
        ],
        [
            "In this small example.",
            "So we can encode the CNF easily using relations.",
            "B&N of RT2, which are interpreted as PXY if and only if the variable X appears positive in close Y an negative for the reciprocal of this."
        ],
        [
            "So our formula in CNF can be encoded with a structure with an universe of size 3.",
            "In this case an, which the interpretation of P is.",
            "That said, we see over there and then the same way for the interpretation of North.",
            "So for example.",
            "We have the pair 00 is in their interpretation of P because variable X appears positive in close zero variable X0 appears positive inflows 0, so that's why that pair is in that interpretation.",
            "And so on for the rest."
        ],
        [
            "So a model for this satisfiable for this formula is to assign X 0X1 to true and X2 to false and we need we can encode this language easily by using the unary relation T. Such that those formulas that are there hold TX0X1 and not T X2, so T has an interpretation of zero and one."
        ],
        [
            "So the extended structure.",
            "If we take this structure we had before for modeling the CNF, and we extended with the relation T. That structure is a model that should there should be a model of that formula you see over there and the meaning of that formula is very simple.",
            "Is that for every class there exists a variable such that either their variable is positive in the Class C. And it is assigned to true or the variable is negative.",
            "In Class C An it is assigned to false.",
            "So this holds if and only if T encodes our model."
        ],
        [
            "Of the formula.",
            "So the formula is satisfiable if and only if that structure if a model of this formula we see right here and you can see it's 2nd order existential formula because we only have 125 relation and it is existentially quantified, we don't have a universal quantification operators for 2nd order."
        ],
        [
            "Logic so sad is the set.",
            "South."
        ],
        [
            "It's file formulas, meaning that for every satisfiable formula, it's encoding is a structure that satisfies this property, and for every structure that satisfy the property.",
            "Then it encodes are satisfied with formula."
        ],
        [
            "So as another example, three colorability anagrafe problems can be modeled easily with this approach.",
            "Here's a very compact formula for formulating 3 little ability, and think about how difficult it would be to try to do this in PDL without any tool like this."
        ],
        [
            "We also have a directed Hamiltonian path.",
            "And the only relation that we need for the structure is E, which means that there is either an an director directed edge between nodes X&Y."
        ],
        [
            "So about the tool."
        ],
        [
            "We designed a tool that takes an input, a simple, the signature that contains the relational symbols that we're going to use in a formula.",
            "Then there's a second order existential formula that is encoding the NP problem that will become the domain PDL and there is a finite structure that encodes the instance.",
            "A particular instance of those problems.",
            "So the output our PDL for a fragment of strips that is decidable in nondeterministic polynomial time.",
            "So the guarantees of these is that.",
            "The translation runs in Poly time for fixed formula and the output is no harder than the input complexity.",
            "Why so?",
            "We have a complexity guarantee that the output PD else can be solved in under germanistik polynomial time as well."
        ],
        [
            "We know about the related work well from Carolean Sheriff.",
            "In 2005 they developed dialogue lag, specification of NP problems, translation into set.",
            "And there's also the work of my challenger in Africa, which divides the framework for describing problems based on the model extension MX.",
            "And so what's different about our approach is that we are targeting strips and we would like to go beyond an P because the expressive power of strips is much larger than NP, and that we also have a specific solver for this.",
            "So it's not just about modeling in logic, but about actually being able to solve this with state of the art planners.",
            "So that's basically the."
        ],
        [
            "Our contribution.",
            "About the translate."
        ],
        [
            "Chen translation is divided in two steps.",
            "The generation of PDL domain generation of the problem instance for the first one we only need the signature and the 2nd order formula.",
            "Then we can generate their domain and for the instance we need to add to that a finite structure that models the specific problem that we're trying to solve, which would be the instance."
        ],
        [
            "So we have devised at different translations.",
            "There are many translations that target different planners, so we're aware of.",
            "There is translation that is better suited for sequential planners.",
            "There are some this translation that is better for parallel planners and we will explain.",
            "Here is the parallel planners.",
            "One 'cause it was the one that gave us this results.",
            "It was the one that we implemented fully so."
        ],
        [
            "I would describe this.",
            "For the domain, the formula is assumed to have negations only at the literal level, an if it has negation set other levels, we just push them in to the literal level using the Morgan's laws.",
            "There are two predicates for each relational symbol P that is quantified, so we have a predicate PAP for every quantified relation that we have in the formula.",
            "Their operators are odd positive influence for quantified relations, and for each subformula.",
            "Except the literals, we have a fluent that denotes the validity of that formula of that super formula with respect to the structure and their operators that add the fluent.",
            "So we can build a proof after guessing the values of their relations."
        ],
        [
            "So an for the instance where there are as many objects in the in the PDL as each element in the universe of the structure and in the initial situation we have fluids for the interpretation in the structure and all not fluens are there for quantified relations.",
            "So initially all quantified relations are assumed to be false and then the planner tries to prove tries to find a combination of those relations that make the plan.",
            "Possible that made the prove of the formula."
        ],
        [
            "Apple.",
            "So as an example again said, we have two relations for this quantified formula that that."
        ],
        [
            "Sorry to flow and sorry.",
            "And we have a fluent for."
        ],
        [
            "P&N sure."
        ],
        [
            "Part of the formula as well.",
            "And therefore that's a formula for us.",
            "For example, we have a fluent that.",
            "Represents the end of those two conjuncts, and note that the free variables of that formula over there are actually the parameters of the fluent over there."
        ],
        [
            "And also true for the exists, which is very similar.",
            "So for every subformula we have fluents like this."
        ],
        [
            "For the actions.",
            "We have an action to set true the value of our relation.",
            "So in this case only one parameter because the relation is are two one.",
            "So we are currently require that the planner is the guessing phase or it should be guessing at different values of T and the effect is that it actually assigns the flow into true to fluent debt models this."
        ],
        [
            "Relation.",
            "And we have also actions for the sub formulas that are not at the literal level.",
            "So for example to establish this end you should have spread condition.",
            "It's two conjuncts.",
            "And the effect would be to add the fluent of the end so you can let the planner build the proof."
        ],
        [
            "And also very similarly for the exists.",
            "Here we have two parameters because the X is the actual parameter of the exist.",
            "It's the object that.",
            "This is the certificate for this this existence and see because it is a free variable in that form."
        ],
        [
            "No.",
            "So for the for all is a little bit more complicated because we have to make an induction over all the objects and."
        ],
        [
            "Domain.",
            "So there are some formal properties that characterizes tool.",
            "If G is a grounding function that generates a grounded strips problem, we define F2 to go to be a function that goes from the finest structures to into strips such that F is just to apply that grounding function to the domain.",
            "An instance of the translated problems."
        ],
        [
            "So F is a part time reduction from the NP problems into fragmenta strips that is decidable in NP."
        ],
        [
            "Deterministic polynomial time and if F of a has a plan, then it has a plan with a linear makespan and we can find automatically tight bounds for the length of the plan in this case because the formula we can calculate how long it is and how long it should take for a proof to be possible."
        ],
        [
            "So some experiments we."
        ],
        [
            "Performed.",
            "We modeled all these NP complete domains.",
            "And we attempted to, well, we translated them, and we generated several instances.",
            "We took the instances from SAT lip from the phase transition, and other instances were randomly generated by us with both positive and negative instances."
        ],
        [
            "So the results where I think there were good.",
            "There were a total of 1920 problem instances, of which we saw 1614, about 700.",
            "On the positive side, and about 900 on negative side and M was able to solve 84% of the benchmark.",
            "We used different tenants M because it was the one that gave us the base results.",
            "Recall us, I just said that this translation is better suited for parallel planners and this one did really good."
        ],
        [
            "So these are some results.",
            "The average time is in seconds."
        ],
        [
            "Um?",
            "We performed experiments on finding the chromatic number of graphs, so the chromatic number is at least K, so just the graph is K colorable.",
            "So we use the tool in Oracle to find out whether it was colorable.",
            "412 for increasing values of K until it reached a value by which it was colorable."
        ],
        [
            "So the tool produces Peter, yells from declarative description.",
            "It can be thought of an automatic generation of reductions.",
            "There are different translations are available, but only one implemented.",
            "There are many different applications for the tool.",
            "One example is to generate automatically benchmarks for maybe the international planning competition, maybe other things that you want to study about, and we had to say though, that not every entropy problem.",
            "Has a nice formula.",
            "For example modeling sub.",
            "To some you would need arithmetic to do that and to model some of the problems from the bench that the usual benchmark, the planetis complainer community uses in 2nd order logic would be.",
            "Kind of hard, you know, to model logistics or some domain like that in this logic wouldn't be such a good idea, but for high level problems that can be expressed in this fashion, it's a really good tool.",
            "So in the future we plan to improve this tool by incorporating types and maybe other translations that we will try.",
            "Maybe the translation for the optimal planners and we would try to aim at other complexity classes of by extending our language to manage.",
            "Other fragments of logic to eventually be able to scale to P space problems, which is our ultimate goal here."
        ],
        [
            "So thanks everybody.",
            "I was sponsored by the European Space Agency and thanks also to the people from the icaps DC.",
            "And well, thank you.",
            "That was all.",
            "Lots of time.",
            "So if you translate polynomial problem or a logspace problem, will the resulting planning problems still maintain the same complexity class?",
            "If you translate a polynomial time problem, we don't have that complexity guarantee mean if we are dealing with existential 2nd order logic for geological formula.",
            "The only thing that we can guarantee is that it can be translated to NP, so maybe it wouldn't be such a good idea to model P problems in this tool, but we really haven't considered that possibility.",
            "I'm just assuming you had a question, yes, so I know that you want to go up to pee space.",
            "I actually want to go down to pee so any kind of your intuition about having.",
            "Similar kind of result for 2nd order horn with respect to P problems.",
            "How nasty it will be, how helpful it will be, how what well?",
            "I guess, then you wouldn't need the existential 2nd order quantifier, but we really haven't explored that possibility that much.",
            "But now that you say it, it does sound interesting.",
            "You know, I want.",
            "I would like to add something like we have a.",
            "We can correct arise a fragment of strips that is decidable in MP, but for other classes is not clear.",
            "So how do I can be sure that the problem that I am generating is in peak?",
            "What is it syntactic characterization of P in planning?",
            "And if we were beyond MP, for example 2: P, what is it?",
            "What is the syntactic characterization of Co NP in terms of strips or PD?",
            "Ellis is completely not clear, right so?",
            "There is a gap there.",
            "That my problem is.",
            "OK. Domain.",
            "So I suppose that I have a domain that I know to be polynomial and just translation to PDL, so I don't know how to make it well.",
            "So I wonder whether there is there will be a case where translation to a second order horn will be kind of natural.",
            "And then some tool allow what you do will translate to PDL so it will save me the burden of translating into PDL and completely.",
            "We would like to do something here that you know for sure.",
            "Yeah, yeah yeah, yeah.",
            "The soldier will not know, but that's OK. OK guys, I think we're taking this offline.",
            "Any other questions from the audience?",
            "Or do you just want to follow the discussion of the?",
            "So this is really nice work Weepu phase of it.",
            "It reminded me of sort of PSR where you can use divide predicates too quickly.",
            "Disting encode whether or not to satisfy the formula or not.",
            "I know you encode into pure strips, but have you thought about encoding to strips plus dry predicates and future work?",
            "I'm sorry I didn't.",
            "Can you formulate your question again so I only with drive predicates?",
            "I mean so so so this looks like a classic example here where essentially in your proof phase if the preconditions of reaction are satisfied you want to apply it because you want to satisfy as many clothes as you can.",
            "So in something like the PSR domain much used to prove that you can supply power.",
            "So I was just wondering if you've looked at using drive predicates in your encoding here.",
            "Well.",
            "Yeah.",
            "To generate axioms in order to make the PDA like easier.",
            "That's a good idea, but we haven't thought about it.",
            "Thank you.",
            "More questions.",
            "I was actually wondering.",
            "I mean, you've been using this app based planner, which as we all know uses different deadlines for the length of the plan.",
            "Have you used?",
            "I mean you have information about the language plan.",
            "Did you use that for?",
            "Yes, we use that we included that into solver so.",
            "Yep.",
            "When the instance has doesn't satisfy the property, when we when this CNF is not satisfy aghbal, how do you stop the planet right?",
            "Because the planet will go keep going so.",
            "But we have this window so we know that if the instant is not it doesn't have a plan of certain light length then it's not certifiable.",
            "So we can stop the.",
            "Yes.",
            "Yeah, I just wanted to.",
            "I just wanted to to remark the fact that apparently planning was what was the more useful here when Bly an actor, wherever he's we're working on this financial controller synthesis will also fine.",
            "For now, the operator planner was very suitable for that, so I I think that is you are really trying to get into a problem with a lot of things are happening at the same time.",
            "You should look at.",
            "By using a parallel planner.",
            "Because I mean, it's very, very common if we have for now.",
            "OK, I have a last phone.",
            "Did you also try juristic search planners on those instances where there any good?",
            "For that we we also tried FF and a llama, but the one that did best was it was like by a huge margin or more or less.",
            "OK yeah, well they've been made for solving such problems.",
            "OK, thank you again, yes."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Hello everybody.",
                    "label": 0
                },
                {
                    "sent": "This is joint work with Labornet an elder.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Oracle.",
                    "label": 0
                },
                {
                    "sent": "So our motivation is that for using planners for solving problems, 1 needs to come up with sound.",
                    "label": 1
                },
                {
                    "sent": "Pretty details in you need to encode your problem into PDL and it is not always clear how to do this.",
                    "label": 1
                },
                {
                    "sent": "It is not always easy to model any type of problem into PDL even if you know well what the problem is.",
                    "label": 0
                },
                {
                    "sent": "So it would be nice to automatically generate problems described in a high level declarative language into PDL.",
                    "label": 1
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So our contribution is based on a tool system that automatically translates NP problems into PDL we are using.",
                    "label": 1
                },
                {
                    "sent": "We are describing these problems specified using logic in a declarative manner and the translation runs in polynomial time.",
                    "label": 1
                },
                {
                    "sent": "So the existence of plans for generated PDFs can be decided in nondeterministic polynomial time, so there is a complexity guarantee, and the tool is fully characterized by many formal properties that I will do.",
                    "label": 1
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Skype later.",
                    "label": 0
                },
                {
                    "sent": "So in this talk we will revise relevant concepts from the field of descriptive complexity theory.",
                    "label": 1
                },
                {
                    "sent": "We will talk about the tool and the translations we have been implemented and we will talk about the experiment sweeper.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Formed so for descriptive.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Complexity theory.",
                    "label": 0
                },
                {
                    "sent": "It is a branch of complexity theory that that and computer science and mathematics that uses logic instead of Turing machines, so to characterize complexity classes.",
                    "label": 1
                },
                {
                    "sent": "So it does not commit to a specific model of computation.",
                    "label": 0
                },
                {
                    "sent": "So in descriptive complexity theory of problem corresponds to a collection of finite structures and the collection is a set of finite models for logical formula like complexity, complexity classes over the class of problems correspond to a fragment of logic.",
                    "label": 1
                },
                {
                    "sent": "So if you have different complexity classes, those correspond to different fragments of logic which we will see.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Some examples in the next slide.",
                    "label": 0
                },
                {
                    "sent": "For example, NP equals all problems that are definable in the existential fragment of 2nd order logic.",
                    "label": 1
                },
                {
                    "sent": "And P equals the 2nd order horn formulas.",
                    "label": 0
                },
                {
                    "sent": "Cohen P = a second order universal quantification formulas and a polynomial time hierarchy equals the whole 2nd order logical formulas space and P space equals second order logical formulas plus a transitive closure operator.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So let's take sad as an example for explaining all these theory, so we have over there a CNF, which you should be familiar with.",
                    "label": 0
                },
                {
                    "sent": "We have numbered the clauses and the variables with numbers from zero to two.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "In this small example.",
                    "label": 0
                },
                {
                    "sent": "So we can encode the CNF easily using relations.",
                    "label": 0
                },
                {
                    "sent": "B&N of RT2, which are interpreted as PXY if and only if the variable X appears positive in close Y an negative for the reciprocal of this.",
                    "label": 1
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So our formula in CNF can be encoded with a structure with an universe of size 3.",
                    "label": 0
                },
                {
                    "sent": "In this case an, which the interpretation of P is.",
                    "label": 1
                },
                {
                    "sent": "That said, we see over there and then the same way for the interpretation of North.",
                    "label": 0
                },
                {
                    "sent": "So for example.",
                    "label": 0
                },
                {
                    "sent": "We have the pair 00 is in their interpretation of P because variable X appears positive in close zero variable X0 appears positive inflows 0, so that's why that pair is in that interpretation.",
                    "label": 0
                },
                {
                    "sent": "And so on for the rest.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So a model for this satisfiable for this formula is to assign X 0X1 to true and X2 to false and we need we can encode this language easily by using the unary relation T. Such that those formulas that are there hold TX0X1 and not T X2, so T has an interpretation of zero and one.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So the extended structure.",
                    "label": 0
                },
                {
                    "sent": "If we take this structure we had before for modeling the CNF, and we extended with the relation T. That structure is a model that should there should be a model of that formula you see over there and the meaning of that formula is very simple.",
                    "label": 1
                },
                {
                    "sent": "Is that for every class there exists a variable such that either their variable is positive in the Class C. And it is assigned to true or the variable is negative.",
                    "label": 0
                },
                {
                    "sent": "In Class C An it is assigned to false.",
                    "label": 1
                },
                {
                    "sent": "So this holds if and only if T encodes our model.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Of the formula.",
                    "label": 0
                },
                {
                    "sent": "So the formula is satisfiable if and only if that structure if a model of this formula we see right here and you can see it's 2nd order existential formula because we only have 125 relation and it is existentially quantified, we don't have a universal quantification operators for 2nd order.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Logic so sad is the set.",
                    "label": 0
                },
                {
                    "sent": "South.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "It's file formulas, meaning that for every satisfiable formula, it's encoding is a structure that satisfies this property, and for every structure that satisfy the property.",
                    "label": 0
                },
                {
                    "sent": "Then it encodes are satisfied with formula.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So as another example, three colorability anagrafe problems can be modeled easily with this approach.",
                    "label": 0
                },
                {
                    "sent": "Here's a very compact formula for formulating 3 little ability, and think about how difficult it would be to try to do this in PDL without any tool like this.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We also have a directed Hamiltonian path.",
                    "label": 0
                },
                {
                    "sent": "And the only relation that we need for the structure is E, which means that there is either an an director directed edge between nodes X&Y.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So about the tool.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We designed a tool that takes an input, a simple, the signature that contains the relational symbols that we're going to use in a formula.",
                    "label": 0
                },
                {
                    "sent": "Then there's a second order existential formula that is encoding the NP problem that will become the domain PDL and there is a finite structure that encodes the instance.",
                    "label": 0
                },
                {
                    "sent": "A particular instance of those problems.",
                    "label": 0
                },
                {
                    "sent": "So the output our PDL for a fragment of strips that is decidable in nondeterministic polynomial time.",
                    "label": 1
                },
                {
                    "sent": "So the guarantees of these is that.",
                    "label": 1
                },
                {
                    "sent": "The translation runs in Poly time for fixed formula and the output is no harder than the input complexity.",
                    "label": 0
                },
                {
                    "sent": "Why so?",
                    "label": 0
                },
                {
                    "sent": "We have a complexity guarantee that the output PD else can be solved in under germanistik polynomial time as well.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We know about the related work well from Carolean Sheriff.",
                    "label": 0
                },
                {
                    "sent": "In 2005 they developed dialogue lag, specification of NP problems, translation into set.",
                    "label": 1
                },
                {
                    "sent": "And there's also the work of my challenger in Africa, which divides the framework for describing problems based on the model extension MX.",
                    "label": 1
                },
                {
                    "sent": "And so what's different about our approach is that we are targeting strips and we would like to go beyond an P because the expressive power of strips is much larger than NP, and that we also have a specific solver for this.",
                    "label": 0
                },
                {
                    "sent": "So it's not just about modeling in logic, but about actually being able to solve this with state of the art planners.",
                    "label": 0
                },
                {
                    "sent": "So that's basically the.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Our contribution.",
                    "label": 0
                },
                {
                    "sent": "About the translate.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Chen translation is divided in two steps.",
                    "label": 1
                },
                {
                    "sent": "The generation of PDL domain generation of the problem instance for the first one we only need the signature and the 2nd order formula.",
                    "label": 0
                },
                {
                    "sent": "Then we can generate their domain and for the instance we need to add to that a finite structure that models the specific problem that we're trying to solve, which would be the instance.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So we have devised at different translations.",
                    "label": 1
                },
                {
                    "sent": "There are many translations that target different planners, so we're aware of.",
                    "label": 1
                },
                {
                    "sent": "There is translation that is better suited for sequential planners.",
                    "label": 1
                },
                {
                    "sent": "There are some this translation that is better for parallel planners and we will explain.",
                    "label": 0
                },
                {
                    "sent": "Here is the parallel planners.",
                    "label": 0
                },
                {
                    "sent": "One 'cause it was the one that gave us this results.",
                    "label": 0
                },
                {
                    "sent": "It was the one that we implemented fully so.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "I would describe this.",
                    "label": 0
                },
                {
                    "sent": "For the domain, the formula is assumed to have negations only at the literal level, an if it has negation set other levels, we just push them in to the literal level using the Morgan's laws.",
                    "label": 1
                },
                {
                    "sent": "There are two predicates for each relational symbol P that is quantified, so we have a predicate PAP for every quantified relation that we have in the formula.",
                    "label": 1
                },
                {
                    "sent": "Their operators are odd positive influence for quantified relations, and for each subformula.",
                    "label": 1
                },
                {
                    "sent": "Except the literals, we have a fluent that denotes the validity of that formula of that super formula with respect to the structure and their operators that add the fluent.",
                    "label": 0
                },
                {
                    "sent": "So we can build a proof after guessing the values of their relations.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So an for the instance where there are as many objects in the in the PDL as each element in the universe of the structure and in the initial situation we have fluids for the interpretation in the structure and all not fluens are there for quantified relations.",
                    "label": 1
                },
                {
                    "sent": "So initially all quantified relations are assumed to be false and then the planner tries to prove tries to find a combination of those relations that make the plan.",
                    "label": 0
                },
                {
                    "sent": "Possible that made the prove of the formula.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Apple.",
                    "label": 0
                },
                {
                    "sent": "So as an example again said, we have two relations for this quantified formula that that.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Sorry to flow and sorry.",
                    "label": 0
                },
                {
                    "sent": "And we have a fluent for.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "P&N sure.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Part of the formula as well.",
                    "label": 0
                },
                {
                    "sent": "And therefore that's a formula for us.",
                    "label": 0
                },
                {
                    "sent": "For example, we have a fluent that.",
                    "label": 0
                },
                {
                    "sent": "Represents the end of those two conjuncts, and note that the free variables of that formula over there are actually the parameters of the fluent over there.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And also true for the exists, which is very similar.",
                    "label": 0
                },
                {
                    "sent": "So for every subformula we have fluents like this.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "For the actions.",
                    "label": 0
                },
                {
                    "sent": "We have an action to set true the value of our relation.",
                    "label": 0
                },
                {
                    "sent": "So in this case only one parameter because the relation is are two one.",
                    "label": 0
                },
                {
                    "sent": "So we are currently require that the planner is the guessing phase or it should be guessing at different values of T and the effect is that it actually assigns the flow into true to fluent debt models this.",
                    "label": 0
                }
            ]
        },
        "clip_31": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Relation.",
                    "label": 0
                },
                {
                    "sent": "And we have also actions for the sub formulas that are not at the literal level.",
                    "label": 0
                },
                {
                    "sent": "So for example to establish this end you should have spread condition.",
                    "label": 0
                },
                {
                    "sent": "It's two conjuncts.",
                    "label": 0
                },
                {
                    "sent": "And the effect would be to add the fluent of the end so you can let the planner build the proof.",
                    "label": 0
                }
            ]
        },
        "clip_32": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And also very similarly for the exists.",
                    "label": 0
                },
                {
                    "sent": "Here we have two parameters because the X is the actual parameter of the exist.",
                    "label": 0
                },
                {
                    "sent": "It's the object that.",
                    "label": 0
                },
                {
                    "sent": "This is the certificate for this this existence and see because it is a free variable in that form.",
                    "label": 0
                }
            ]
        },
        "clip_33": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "No.",
                    "label": 0
                },
                {
                    "sent": "So for the for all is a little bit more complicated because we have to make an induction over all the objects and.",
                    "label": 0
                }
            ]
        },
        "clip_34": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Domain.",
                    "label": 0
                },
                {
                    "sent": "So there are some formal properties that characterizes tool.",
                    "label": 1
                },
                {
                    "sent": "If G is a grounding function that generates a grounded strips problem, we define F2 to go to be a function that goes from the finest structures to into strips such that F is just to apply that grounding function to the domain.",
                    "label": 1
                },
                {
                    "sent": "An instance of the translated problems.",
                    "label": 0
                }
            ]
        },
        "clip_35": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So F is a part time reduction from the NP problems into fragmenta strips that is decidable in NP.",
                    "label": 0
                }
            ]
        },
        "clip_36": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Deterministic polynomial time and if F of a has a plan, then it has a plan with a linear makespan and we can find automatically tight bounds for the length of the plan in this case because the formula we can calculate how long it is and how long it should take for a proof to be possible.",
                    "label": 0
                }
            ]
        },
        "clip_37": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So some experiments we.",
                    "label": 0
                }
            ]
        },
        "clip_38": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Performed.",
                    "label": 0
                },
                {
                    "sent": "We modeled all these NP complete domains.",
                    "label": 0
                },
                {
                    "sent": "And we attempted to, well, we translated them, and we generated several instances.",
                    "label": 0
                },
                {
                    "sent": "We took the instances from SAT lip from the phase transition, and other instances were randomly generated by us with both positive and negative instances.",
                    "label": 1
                }
            ]
        },
        "clip_39": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So the results where I think there were good.",
                    "label": 0
                },
                {
                    "sent": "There were a total of 1920 problem instances, of which we saw 1614, about 700.",
                    "label": 1
                },
                {
                    "sent": "On the positive side, and about 900 on negative side and M was able to solve 84% of the benchmark.",
                    "label": 1
                },
                {
                    "sent": "We used different tenants M because it was the one that gave us the base results.",
                    "label": 0
                },
                {
                    "sent": "Recall us, I just said that this translation is better suited for parallel planners and this one did really good.",
                    "label": 0
                }
            ]
        },
        "clip_40": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So these are some results.",
                    "label": 0
                },
                {
                    "sent": "The average time is in seconds.",
                    "label": 0
                }
            ]
        },
        "clip_41": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Um?",
                    "label": 0
                },
                {
                    "sent": "We performed experiments on finding the chromatic number of graphs, so the chromatic number is at least K, so just the graph is K colorable.",
                    "label": 0
                },
                {
                    "sent": "So we use the tool in Oracle to find out whether it was colorable.",
                    "label": 0
                },
                {
                    "sent": "412 for increasing values of K until it reached a value by which it was colorable.",
                    "label": 0
                }
            ]
        },
        "clip_42": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So the tool produces Peter, yells from declarative description.",
                    "label": 1
                },
                {
                    "sent": "It can be thought of an automatic generation of reductions.",
                    "label": 1
                },
                {
                    "sent": "There are different translations are available, but only one implemented.",
                    "label": 1
                },
                {
                    "sent": "There are many different applications for the tool.",
                    "label": 0
                },
                {
                    "sent": "One example is to generate automatically benchmarks for maybe the international planning competition, maybe other things that you want to study about, and we had to say though, that not every entropy problem.",
                    "label": 0
                },
                {
                    "sent": "Has a nice formula.",
                    "label": 0
                },
                {
                    "sent": "For example modeling sub.",
                    "label": 1
                },
                {
                    "sent": "To some you would need arithmetic to do that and to model some of the problems from the bench that the usual benchmark, the planetis complainer community uses in 2nd order logic would be.",
                    "label": 0
                },
                {
                    "sent": "Kind of hard, you know, to model logistics or some domain like that in this logic wouldn't be such a good idea, but for high level problems that can be expressed in this fashion, it's a really good tool.",
                    "label": 0
                },
                {
                    "sent": "So in the future we plan to improve this tool by incorporating types and maybe other translations that we will try.",
                    "label": 0
                },
                {
                    "sent": "Maybe the translation for the optimal planners and we would try to aim at other complexity classes of by extending our language to manage.",
                    "label": 0
                },
                {
                    "sent": "Other fragments of logic to eventually be able to scale to P space problems, which is our ultimate goal here.",
                    "label": 0
                }
            ]
        },
        "clip_43": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So thanks everybody.",
                    "label": 0
                },
                {
                    "sent": "I was sponsored by the European Space Agency and thanks also to the people from the icaps DC.",
                    "label": 1
                },
                {
                    "sent": "And well, thank you.",
                    "label": 0
                },
                {
                    "sent": "That was all.",
                    "label": 0
                },
                {
                    "sent": "Lots of time.",
                    "label": 0
                },
                {
                    "sent": "So if you translate polynomial problem or a logspace problem, will the resulting planning problems still maintain the same complexity class?",
                    "label": 0
                },
                {
                    "sent": "If you translate a polynomial time problem, we don't have that complexity guarantee mean if we are dealing with existential 2nd order logic for geological formula.",
                    "label": 0
                },
                {
                    "sent": "The only thing that we can guarantee is that it can be translated to NP, so maybe it wouldn't be such a good idea to model P problems in this tool, but we really haven't considered that possibility.",
                    "label": 0
                },
                {
                    "sent": "I'm just assuming you had a question, yes, so I know that you want to go up to pee space.",
                    "label": 0
                },
                {
                    "sent": "I actually want to go down to pee so any kind of your intuition about having.",
                    "label": 0
                },
                {
                    "sent": "Similar kind of result for 2nd order horn with respect to P problems.",
                    "label": 0
                },
                {
                    "sent": "How nasty it will be, how helpful it will be, how what well?",
                    "label": 0
                },
                {
                    "sent": "I guess, then you wouldn't need the existential 2nd order quantifier, but we really haven't explored that possibility that much.",
                    "label": 0
                },
                {
                    "sent": "But now that you say it, it does sound interesting.",
                    "label": 0
                },
                {
                    "sent": "You know, I want.",
                    "label": 0
                },
                {
                    "sent": "I would like to add something like we have a.",
                    "label": 0
                },
                {
                    "sent": "We can correct arise a fragment of strips that is decidable in MP, but for other classes is not clear.",
                    "label": 0
                },
                {
                    "sent": "So how do I can be sure that the problem that I am generating is in peak?",
                    "label": 0
                },
                {
                    "sent": "What is it syntactic characterization of P in planning?",
                    "label": 0
                },
                {
                    "sent": "And if we were beyond MP, for example 2: P, what is it?",
                    "label": 0
                },
                {
                    "sent": "What is the syntactic characterization of Co NP in terms of strips or PD?",
                    "label": 0
                },
                {
                    "sent": "Ellis is completely not clear, right so?",
                    "label": 0
                },
                {
                    "sent": "There is a gap there.",
                    "label": 0
                },
                {
                    "sent": "That my problem is.",
                    "label": 0
                },
                {
                    "sent": "OK. Domain.",
                    "label": 0
                },
                {
                    "sent": "So I suppose that I have a domain that I know to be polynomial and just translation to PDL, so I don't know how to make it well.",
                    "label": 0
                },
                {
                    "sent": "So I wonder whether there is there will be a case where translation to a second order horn will be kind of natural.",
                    "label": 0
                },
                {
                    "sent": "And then some tool allow what you do will translate to PDL so it will save me the burden of translating into PDL and completely.",
                    "label": 0
                },
                {
                    "sent": "We would like to do something here that you know for sure.",
                    "label": 0
                },
                {
                    "sent": "Yeah, yeah yeah, yeah.",
                    "label": 0
                },
                {
                    "sent": "The soldier will not know, but that's OK. OK guys, I think we're taking this offline.",
                    "label": 0
                },
                {
                    "sent": "Any other questions from the audience?",
                    "label": 0
                },
                {
                    "sent": "Or do you just want to follow the discussion of the?",
                    "label": 0
                },
                {
                    "sent": "So this is really nice work Weepu phase of it.",
                    "label": 0
                },
                {
                    "sent": "It reminded me of sort of PSR where you can use divide predicates too quickly.",
                    "label": 0
                },
                {
                    "sent": "Disting encode whether or not to satisfy the formula or not.",
                    "label": 0
                },
                {
                    "sent": "I know you encode into pure strips, but have you thought about encoding to strips plus dry predicates and future work?",
                    "label": 0
                },
                {
                    "sent": "I'm sorry I didn't.",
                    "label": 0
                },
                {
                    "sent": "Can you formulate your question again so I only with drive predicates?",
                    "label": 0
                },
                {
                    "sent": "I mean so so so this looks like a classic example here where essentially in your proof phase if the preconditions of reaction are satisfied you want to apply it because you want to satisfy as many clothes as you can.",
                    "label": 0
                },
                {
                    "sent": "So in something like the PSR domain much used to prove that you can supply power.",
                    "label": 0
                },
                {
                    "sent": "So I was just wondering if you've looked at using drive predicates in your encoding here.",
                    "label": 0
                },
                {
                    "sent": "Well.",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "To generate axioms in order to make the PDA like easier.",
                    "label": 0
                },
                {
                    "sent": "That's a good idea, but we haven't thought about it.",
                    "label": 0
                },
                {
                    "sent": "Thank you.",
                    "label": 0
                },
                {
                    "sent": "More questions.",
                    "label": 0
                },
                {
                    "sent": "I was actually wondering.",
                    "label": 0
                },
                {
                    "sent": "I mean, you've been using this app based planner, which as we all know uses different deadlines for the length of the plan.",
                    "label": 0
                },
                {
                    "sent": "Have you used?",
                    "label": 0
                },
                {
                    "sent": "I mean you have information about the language plan.",
                    "label": 0
                },
                {
                    "sent": "Did you use that for?",
                    "label": 0
                },
                {
                    "sent": "Yes, we use that we included that into solver so.",
                    "label": 0
                },
                {
                    "sent": "Yep.",
                    "label": 0
                },
                {
                    "sent": "When the instance has doesn't satisfy the property, when we when this CNF is not satisfy aghbal, how do you stop the planet right?",
                    "label": 0
                },
                {
                    "sent": "Because the planet will go keep going so.",
                    "label": 0
                },
                {
                    "sent": "But we have this window so we know that if the instant is not it doesn't have a plan of certain light length then it's not certifiable.",
                    "label": 0
                },
                {
                    "sent": "So we can stop the.",
                    "label": 0
                },
                {
                    "sent": "Yes.",
                    "label": 0
                },
                {
                    "sent": "Yeah, I just wanted to.",
                    "label": 0
                },
                {
                    "sent": "I just wanted to to remark the fact that apparently planning was what was the more useful here when Bly an actor, wherever he's we're working on this financial controller synthesis will also fine.",
                    "label": 0
                },
                {
                    "sent": "For now, the operator planner was very suitable for that, so I I think that is you are really trying to get into a problem with a lot of things are happening at the same time.",
                    "label": 0
                },
                {
                    "sent": "You should look at.",
                    "label": 0
                },
                {
                    "sent": "By using a parallel planner.",
                    "label": 0
                },
                {
                    "sent": "Because I mean, it's very, very common if we have for now.",
                    "label": 0
                },
                {
                    "sent": "OK, I have a last phone.",
                    "label": 0
                },
                {
                    "sent": "Did you also try juristic search planners on those instances where there any good?",
                    "label": 0
                },
                {
                    "sent": "For that we we also tried FF and a llama, but the one that did best was it was like by a huge margin or more or less.",
                    "label": 0
                },
                {
                    "sent": "OK yeah, well they've been made for solving such problems.",
                    "label": 0
                },
                {
                    "sent": "OK, thank you again, yes.",
                    "label": 0
                }
            ]
        }
    }
}