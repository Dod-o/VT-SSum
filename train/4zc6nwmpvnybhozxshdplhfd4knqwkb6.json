{
    "id": "4zc6nwmpvnybhozxshdplhfd4knqwkb6",
    "title": "Tools and Techniques for Sparse Optimization and Beyond",
    "info": {
        "author": [
            "Ewout van den Berg, IBM Thomas J. Watson Research Center"
        ],
        "published": "Oct. 13, 2014",
        "recorded": "September 2014",
        "category": [
            "Top->Computers->Software->Open-Source Software",
            "Top->Computers->Programming->Python",
            "Top->Computer Science->Optimization Methods",
            "Top->Computer Science->Programming Languages",
            "Top->Computer Science->Machine Learning",
            "Top->Mathematics"
        ]
    },
    "url": "http://videolectures.net/tcmm2014_van_den_berg_sparse_optimization/",
    "segmentation": [
        [
            "I'd like to thank the organizing committee for inviting me.",
            "I'll be talking about sparse optimization and beyond, so it's it's it's."
        ],
        [
            "It's a collection of three different topics, so the first topic is SPD L1, which is a solver for sparse optimization.",
            "Second part will be spot which is a linear operator toolbox in Matlab.",
            "And then the third topic is at Demco, which is a framework for discipline massive computing.",
            "So let's start with."
        ],
        [
            "SP GL1's solver.",
            "First party optimization.",
            "This is joint work with Michael Friedlander at the Department of Computer Science at UBC in Canada.",
            "So can everybody hear me properly?",
            "Yeah.",
            "OK."
        ],
        [
            "So sparse optimization appears or comes from compressed sensing and sparse recovery.",
            "And so let's start with two examples of this.",
            "So in compressed sensing, let's see the laser pointer.",
            "Income percentage we assume there's a sparse signal we want to measure or sparsely representable signal signal.",
            "And we measure it as as a linear operator, 8X plus noise.",
            "So that's B looks noisy.",
            "So in this example I have a 1% sparse vector.",
            "AA is a randomly subsampled 1200 by 16,000 discrete cosine transform so you have a squared discrete cosine transform and you at random choose 1200 rows.",
            "Once I have this, I add 10% noise.",
            "And solve the following basis pursuit denoise formulation so that's minimized.",
            "The one norm of X, subject to the misfit AX minus B is less than some tolerance level Sigma.",
            "And when we do that, we obtain this result.",
            "Which is also sparse.",
            "In fact, the sparsity pattern is the same, but because there's a noise term here, the coefficients are little bit less than those in the original, so that's one example for compressed sensing."
        ],
        [
            "An sparse recovery, sort of a generalization of this?",
            "Not not all the one or minimization is compressed sensing.",
            "So here's an example for deblurring.",
            "Here we have a Penguin, and we could say that this Penguin can be sparsely represented in the wavelet basis.",
            "At least approximately.",
            "Once we have that, we measure this with with a blurring operator, so we get an image B and then we have W, the wavelets beta, blurring an we form a linear matrix, A right that is just a.",
            "And then we solve AX minus B2 norm less than Sigma and minimized one normal vex.",
            "So in this case you don't really need to do this.",
            "But this is just an example.",
            "Once we get the sparse X, we reconstructed with the wavelet and get a similar Penguin.",
            "So that's just an example of sparse recovery.",
            "So a key of both of those is the basis pursuit denoise formulation given here."
        ],
        [
            "So this is for sparsity.",
            "We minimize the one norm, but there's."
        ],
        [
            "Generalizations four of sparsity or other structure, so one of them is the multiple measurements vector where instead of having one column B, you have several.",
            "And you assume that the sparsity pattern."
        ],
        [
            "Such as here, whoops, sorry.",
            "This one.",
            "The sparsity pattern itself doesn't change, just the values on that pattern change, so overtime they remain the same.",
            "So what you done then want to?"
        ],
        [
            "Minimize.",
            "Is the 1 two norm.",
            "So you take the two normal feature over matrix and you take the one room of that.",
            "So the 1 two norm subject to again a misfit term that's multiple measurement vectors.",
            "Uh."
        ],
        [
            "And more recently is the nuclear norm minimization, where instead of minimizing the sum of absolute values of X, you minimize the sum of the singular values.",
            "And that gives you a low rank matrix.",
            "OK, so this is.",
            "Matrix completion where projection doesn't matter.",
            "It's an operator in front of X."
        ],
        [
            "So the general formulation can be written as minimize cap of X capitalized on smooth its coefficients.",
            "Subject to row of X minus, beware row is some residual sum penalty term.",
            "OK.",
            "So this is the formulation we will be looking at."
        ],
        [
            "So let me first introduce the parade curve.",
            "So we want to minimize cap are subject to rose less than something.",
            "If we just look at all the points X and we plot the value of Kappa and value of row, then you get something like this.",
            "This is the very best you can do for a given Copa, so you cannot get the residual lower than this.",
            "You can go all the way above and what we want.",
            "So there's a tradeoff.",
            "What we want is that the Misfit is less than Sigma."
        ],
        [
            "So we're only interested in this part.",
            "This is feasible.",
            "Now we want to minimize Kappa, so that means we need to find this point."
        ],
        [
            "Right here.",
            "So that's basically it.",
            "The only problem is that minimizing of nonsmooth objective is difficult, minimalization is difficult, and also the constraints are not not really that simple.",
            "You cannot easily project on these constraints, for example.",
            "So the solution is to change the formulation."
        ],
        [
            "We're going to just minimize the misfit.",
            "Subject to the coefficient norm, the cap is less than Tau.",
            "OK, so now this is the feasible set.",
            "And now we want to minimize the residual."
        ],
        [
            "So we go down.",
            "And we get the same solution.",
            "The only problem of course I'm given Sigma, but we were solving for Tau here.",
            "So how do I know which which value of total use right?"
        ],
        [
            "So what we do is we apply routefinding approach here.",
            "So this is the parade curve.",
            "What?"
        ],
        [
            "We do is we first minimize residual subject to coppers lesson and how.",
            "For a given time, so we go all the way down and we find this point on the parade curve.",
            "Once we have that."
        ],
        [
            "We compute the gradient at the point.",
            "OK, we."
        ],
        [
            "Compute the intersection here.",
            "And then we'll give a new towel.",
            "And then we."
        ],
        [
            "Again, solve that problem."
        ],
        [
            "Compute the gradient up."
        ],
        [
            "Dataw etc."
        ],
        [
            "So."
        ],
        [
            "In the end, what we have is a solution to the original problem.",
            "Using a couple of Newton steps."
        ],
        [
            "OK, so that's the original problem.",
            "What we do is we need a solver for the minimizing of row, subject to a Cup of constraint.",
            "What we need to show also is that the pressure curve is indeed differentiable.",
            "And also a good way of evaluating the gradient, because of course if that's really expensive, it's not a good approach.",
            "I'll look at."
        ],
        [
            "These two 1st and then go back to the solvers."
        ],
        [
            "So for differentiability with the following theorem, let Kappa be a gauge function, or I'll discuss this in a bit.",
            "And let robita tuner.",
            "Then the Prado curve is convex and differentiable on a certain interval.",
            "And this interval towel Bar is is the smallest out for which the parade of function no longer goes down.",
            "So either it reaches 0 or if he is not in the range space of A at that point.",
            "OK, so on that set the gradient of the parade curve is minus the polar function of Kappa.",
            "Short of the jewel.",
            "Of a transpose R divided by the two norm of R. Where R is the misfit at the solution, so we minimize.",
            "The point we get the solution of the Prado curve.",
            "That's the next.",
            "We compute the residual and then we just plug it in here and for the one norm the polar of Cap is simply the Infinity norm, so that's the maximum absolute value of this vector.",
            "8 transpose, R. So that's easy to compute."
        ],
        [
            "So gauge functions are as follows.",
            "There are non negative convex functions.",
            "At the vanish at the origin.",
            "An F of Alpha access Alpha F of X.",
            "So there are linear in that sense right?",
            "And for all Alpha is greater than zero.",
            "So if this was valid for an absolute value of Alpha would be norm, so it includes."
        ],
        [
            "Norms, and here are some of the norms to L2 norm.",
            "L1 norm and the polar of the L1 norm as L Infinity norm.",
            "So that's that's for the.",
            "Roll is the two norm."
        ],
        [
            "And in more general.",
            "If row is a differentiable function, a convex differentiable function whenever R is not zero.",
            "Then is continuously differentiable on a similar interval.",
            "With minus Kappa polar a transpose Y, where Y is the argmax of this equation.",
            "OK, so it doesn't really matter what this is.",
            "It's easy to evaluate them.",
            "So for the for the proof of this we need a couple of ingredients.",
            "The first ingredient is is the relationship between gradients an subgradients?",
            "So a subgradient of a convex function.",
            "You can imagine it as sort of a plane supporting the function at that point, and if there's if there's a.",
            "If the function is non smooth, then there's a several different place, so that's.",
            "Sort of the subgradient.",
            "So there's many.",
            "There's not a unique gradient, but there are several.",
            "Let's just upgrade.",
            "OK, so subgradients of five tokens correspond to the LaGrange multipliers of the constraint OK.",
            "So that's a one to one relationship, an.",
            "Dis LaGrange multipliers.",
            "They come up in a derivation of the jewel function of the of the original 1.",
            "Using conjugate functions.",
            "OK, the details don't don't really matter.",
            "So what we then need to show is that the uniqueness of this LaGrange multiplier Y.",
            "That if it's unique, that means that the LaGrange multipliers unique, which means that this subgradient is unique.",
            "Which means that the gradient is unique, so that's that's how to prove those.",
            "So it's just.",
            "If the LaGrange multiplier here is unique, then the gradient issue can efforts differentiable."
        ],
        [
            "OK, so we finished the differentiability of the Prado curve and a practical way of evaluating it.",
            "Let's look at the solver for this problem, because we still need to evaluate the point on on the parade curve.",
            "So we want to minimize AX minus B2 norm or square tunam subject to capital of X is less than 10."
        ],
        [
            "OK.",
            "So there's several different ways of going about doing this."
        ],
        [
            "The first one we use where SPG L1 comes from is non monotone, spectrally projected gradient method.",
            "So the outline of the algorithm is follows.",
            "You initialize X and some scaling factor gamma.",
            "While you're not done, compute the gradient, which is a transpose X -- B.",
            "Then we do a line search.",
            "So it's that there's sufficient dissent, an because we also work on a constraint domain, we need to do projection so.",
            "We can either say X minus scaling factor plus stepsize times the gradient.",
            "And we project that.",
            "So that's a projected gradient.",
            "So if you do five line searches.",
            "5 lines search steps.",
            "Then you need to project five times.",
            "Another way is to Project X minus gamma times the gradient.",
            "So you take a long step.",
            "Then you project it back and then you compute the difference to the original point and then you backtrack along that line towards the current point X to find a new point.",
            "OK, so that just requires one projection and is potentially cheaper.",
            "And then you just update the Scaling factor index and you repeat until converges.",
            "I."
        ],
        [
            "A second method is the projected quasi Newton methods.",
            "Here what we do is we initialize X and a quadratic model of the objective.",
            "Using for example BFF's.",
            "While we're not converged, we minimize the quadratic model subject to the original constraints.",
            "Then evaluate the original function F and the gradient and and update the quadratic model with this.",
            "This is useful especially if.",
            "If F is really expensive to evaluate, then you just minimize a quadratic model instead of the original function, so you can do many more cheap steps on the quadratic function and then evaluate one expensive step on the actual function."
        ],
        [
            "Then there's an implementation of natural fast algorithm.",
            "I'll just just."
        ],
        [
            "This one and a hybrid quasi Newton method which switches between 1st order methods and 2nd order methods.",
            "So I also omit the details for this approach, but I'd be happy to discuss it."
        ],
        [
            "OK, so the the solver ingredient for all of these are.",
            "We need products with A and a transpose.",
            "Right, so we look here.",
            "We need a an A transpose.",
            "We need projection.",
            "That's projectional to defeasible set.",
            "And to apply the outer framework and with the root finding procedure we also need evaluation with essentially only Kappa polar, but it also helps to evaluate a Kappa, so that's that's the ingredients.",
            "Anne."
        ],
        [
            "Let's see, so let's.",
            "Let's also look at the projection, because the projection to the feasible set is done frequently.",
            "So it also needs to be cheap, of course."
        ],
        [
            "OK, so for basis pursuit, denoise capaz de one run.",
            "And it turns out that you can do projection onto the one norm.",
            "Basically, by sorting the original vector, the input vector to be projected and then choosing a certain threshold so that can be done.",
            "In order N log N operations and if you do it randomized, then the expected runtime becomes ordering.",
            "OK, so this can be applied to very large problems and actually for this randomized version to work well you need to have really big problems.",
            "Otherwise they do the sorting just just works just as well."
        ],
        [
            "OK, so for group sparsity where we take the one norm of the order summation of the two norms along either the rows or columns.",
            "Here.",
            "It turns out that you can simply compute the two norm of each of the rows or columns.",
            "Put that in a vector V, then Project V onto the one rumble.",
            "Of the of the desired radius and then re scale all the entries in each of the rows and columns according to the The factor by which is or skilled.",
            "OK, so that's basically the same as one or minimization projection onto the one rumble."
        ],
        [
            "For the nuclear norm, minimization is also similar.",
            "The first step is really expensive.",
            "You compute an SVD of the current.",
            "Matrix X.",
            "Then you take the singular values.",
            "You project those onto the one rumble.",
            "And then you compute U DY AG's at which is the projection times V transpose.",
            "So you sort of undo the SVD with the new singular values.",
            "So.",
            "Those are the projections."
        ],
        [
            "Let's see.",
            "So now we also have all the ingredients.",
            "We have a solver for the generalized lesu problem, or several.",
            "Differentiability of the Prado curve.",
            "Anna practical way of evaluating the gradient."
        ],
        [
            "So let's see.",
            "Let me just summarize it.",
            "I'm going a bit fast or slow down a little.",
            "Anne.",
            "So we have a framework implemented in MATLAB and it's available online here.",
            "It's there's several sub problem solvers.",
            "There's a normal tone, spectrally projected gradient where the non monotone.",
            "Add refers to the line search, so the line search does not require progress at each iteration.",
            "And we have a projected quasi Newton method an and hybrid quasi Newton method which is still work in progress.",
            "OK. And it's also the formulation, so it's source basis pursuit denoise, which is probably the most widely used formulation.",
            "It solves joint, sparse and multiple measurement vector problems.",
            "It can also solve sign restricted version, so we want to minimize the one norm of X subject to access non negative or basically the sum of X.",
            "And also it does support nuclear norm minimization, although this solver or the framework may not be the most applicable, because we need to compute the whole singular value decomposition.",
            "An penalized formulations typically can take only the top five or so, and just work with that.",
            "So although it supports it, I wouldn't really recommend using this over for one norm.",
            "It's a good server, so for basis pursuit denoise, it's not bad.",
            "Anne.",
            "So are there any questions on the first part of the talk?",
            "Nope.",
            "Talking about the Quasi Newton coalition, what does it mean exactly in the context of the nose route optimization?",
            "Because it's it's common in the area where all the problems are differentiable, right?",
            "So that's the."
        ],
        [
            "The hybrid quasi Newton methods right?",
            "So what this method does is it's.",
            "It switches between 1st order methods and quasi Newton 2nd order methods so.",
            "If you take a gradient step or at a certain point and you project it back.",
            "Right, that's that's on the the one normal.",
            "That's the constraint.",
            "The One rumble is less than something.",
            "So this projection is on one of the faces of this high dimensional ball.",
            "It can be an edge face in everything.",
            "So if you'll end on the same face more than once.",
            "You can make a model along just that face.",
            "I mean, there's there's.",
            "If you restrict deatrich to that phase or line or something.",
            "There's a function on that face.",
            "So if you if you re parameterized the problem.",
            "You just need to minimize some quadratic function over the entire space.",
            "So then you can use Quasi Newton on that phase to make more progress hopefully.",
            "Because because towards the end, especially the projected 1st order method can be slow.",
            "Because you project a long way out, maybe while you're almost orthogonal to the face and you project back, you take a tiny little step, but still maybe you need to do a lot of steps.",
            "So in those cases where you keep grinding away towards the end, then the quasi Newton method slowly takes over.",
            "So there's some preliminary results on this an I can switch between iterations.",
            "So you see, initially it's mostly 1st order steps, then gradually you increase the number of 2nd order steps and eventually just second order methods.",
            "So that's.",
            "OK."
        ],
        [
            "OK, so.",
            "The second topic is the linear operator toolbox from Matlab, and this this came about because in compressed sensing.",
            "Almost all the let me see if I can find it."
        ],
        [
            "All the problems are of this Form 8 * X -- B and it's these are always linear operators.",
            "And we developed a problem of tests test problems.",
            "A suite of test problems.",
            "Basically, to fine tune and to benchmark our solver.",
            "So then the construction of these operators became tedious and we wanted to have a better way of."
        ],
        [
            "Of doing this, so that's that's where spot came about, so this is joint work.",
            "With Michael Friedlander, Felix Fermin, Ryans Harbor, North Korea, marsette at UBC."
        ],
        [
            "OK, so there's there's there's many structured linear operators in compressed sensing.",
            "I'll give some examples later.",
            "And often there's there's fast implicit representations.",
            "So, for example, for a DCT or wavelet operator, maybe a blurring operator, those all have fast transformations.",
            "You don't need to form the whole matrix and apply it, nobody forms a Fourier matrix and then do a matrix vector multiply, right?",
            "That's just too expensive.",
            "So if we want to use these fast implicit representations, then usually we need to make function calls, so here."
        ],
        [
            "We see we evaluate the DCT of action and the inverse DCT.",
            "And the advantage of calling functions is these are fast operations, so these can be order N log.",
            "And of course, there's no no real memory requirements except for storing the input and output basically.",
            "So for for DCT.",
            "You can evaluate very large density matrix vector products because they are implicit.",
            "A disadvantage, of course, is you cannot really pass this to a function you cannot.",
            "Well, you could, but it's more complicated.",
            "And they're very difficult to manipulate.",
            "I can't say give me the first row of the DCT.",
            "So."
        ],
        [
            "At the other extreme is sort of the Matlab approach or the matrix approach.",
            "So here what we do is we apply a DCT to a identity matrix, which means I query every.",
            "Every column.",
            "And form a matrix.",
            "And then I can just say D * X and Y transpose times Y instead of.",
            "Calling the functions right.",
            "So the advantage of this is you can pass into function and are easy to manipulate, but it doesn't scale very well.",
            "So if we have a.",
            "A 16,000 square DCT then it might not even fit in memory anymore and it's just too slow."
        ],
        [
            "So what sport was designed for is to take advantage of the best of both worlds, where we just define an operator, opt, ECT.",
            "And what is a size 16?",
            "And then you get an implicit operator and you can just just like here you can just multiply by D&D transpose.",
            "And the advantage of this is it fast operations and low memory requirements and the other advantages are you can pass it to a function an you can easily manipulate it.",
            "So that's sort of an operator version of the matrices."
        ],
        [
            "So to use it, of course, we first need to instantiate elementary spot operators, just like in Matlab.",
            "You can start with the matrix.",
            "Then we need to have a way to manipulate and combine them, because if we just have the original entry, might just as well use the functions.",
            "We need to be able to apply them, obviously an.",
            "The last point is how to implement new operators.",
            "OK."
        ],
        [
            "So let's first look at how to apply them, and then it makes makes things a bit more concrete."
        ],
        [
            "So in spot operators are designed to work on vectors, so it's all about matrices and matrix vector product so.",
            "All data is vectorized.",
            "If you have an image you just work with the vectorized version of the image.",
            "Internally, data can be reshaped if needed.",
            "So if you want to do a 2 dimensional FFT, then initially internally knows the dimension of the actual end by North.",
            "And it will reshape the input to N by N and then apply the 2D DfT.",
            "But the operator itself is M * N. That's the size of the image by an M * N."
        ],
        [
            "OK, an application is similar to matrix vector products, so it's always you apply operator D2 X.",
            "You get another output.",
            "You can do Y transpose times D, which is just the same as taking D, transpose Y transpose.",
            "So that's how things are implemented.",
            "If we do an operator times of matrix product that's done by simply applying the operator to each of the columns and then combining them to the final result.",
            "Because they have to look like matrices, we want to be able to query information such as size.",
            "We want to be able to display them and check if they are empty, for example.",
            "An another useful feature actually is that the operator keeps track of how many times it's been applied.",
            "So.",
            "You can just pass this to most.",
            "Most existing functions, if they don't check or do very matrix specific operations.",
            "And then it will just keep track of how many times it's called.",
            "So even if you have a solver that you don't want to edit and you don't know the internals, you can still check the performance in terms of number of matrix vector multiplies without touching the code.",
            "So that's a useful useful function for benchmarking."
        ],
        [
            "OK, so let's let's go over some elementary operations.",
            "There's identity Operator 0, so once an diagonal that's just the basic Matlab operations, you can wrap a matrix into an operator an you can for example, so do a big Gaussian matrix or a big binary matrix.",
            "So those those appear often in compressed sensing.",
            "An especially for big Gaussians, they may not fit in memory.",
            "But if you store the random number seeds at each column, for example, you can just apply them and generate them on the fly while multiplying.",
            "So that's job Gaussian operation the same for binary."
        ],
        [
            "So then there's of course, fast transformations.",
            "These are wrappers to curvelet operators and surface.",
            "Let's an.",
            "Then there's the more traditional discrete cosine transform for one 2 dimensional signals.",
            "Discrete Fourier for one and two dimensional.",
            "Again an wavelets.",
            "So here for example, we construct a 2 dimensional discrete Fourier transform.",
            "Anne.",
            "Of size M by N. So this will give an operator of M * N by M * N. Then there's."
        ],
        [
            "Yet others or heavyside operator which is once on and below the diagonal and zeros above.",
            "An audemar matrices and toplitz and those.",
            "Of course fast transformations.",
            "Ann and the convolutions already showed the convolution operator on the Penguin with some blurring mask, and there's regular, truncated and cyclic versions.",
            "For the convolution, you basically give it the size of the input and by in a 2 dimensional kernel.",
            "A coordinate within the kernel that should be the center.",
            "And one of these three types.",
            "And it's based on it's implemented using the discrete Fourier transform, so it's also fast."
        ],
        [
            "OK, so once we've instantiated some of these elementary operators we want to do something with them, otherwise it will be pretty pointless.",
            "So the first thing of course is multiplication.",
            "And here what we do is we multiply 1 operator times another, so both of them are spot operators, so that gives a new my new operator, so implicit if one of these were matrix, anytime we see a matrix or vector and a multiplication, we evaluate it.",
            "So these are two operators and we form a new one.",
            "We can just do scaling and negation.",
            "So that's that's the basic multiplication."
        ],
        [
            "In addition, we can.",
            "Add matrix operators together.",
            "Just like he ran, if we then multiply y * 8 is the same as first summing them and then multiplying.",
            "And we can also add matrices, so in this in this case what we do, we first transform this M2A and operator and then add them together.",
            "So that forms a new implicit operator."
        ],
        [
            "And then of course usual transpose conjugation, so complex conjugate, or just the complex transpose?",
            "Those are implemented?"
        ],
        [
            "Dictionaries are one of the main reasons why we implemented the operator toolbox to start with, because in compressed sensing often you have sparsity not in one basis but in different basis.",
            "So an operator signal can be sparse in a DCT and identity matrix and something else.",
            "I'll give an example of that later so.",
            "Basically, dictionaries are combination.",
            "You put the matrices next to each other in one big operator.",
            "OK, so we can do this horizontally, vertically and of course just the whole matrix way of doing this."
        ],
        [
            "Another way to combine them is to make a block diagonal operator where each operator sits on the diagonal.",
            "Then there's an overlap factor, which allows you to squeeze the operators or squeeze them vertically.",
            "I'm not sure I've seen any application, but it's it's there.",
            "And."
        ],
        [
            "OK, so for high dimensional.",
            "Operations is sometimes useful to form Kronecker products.",
            "So here we can take the Kronecker product of A&B&C just by by typing chronicler of these three and that will make a very large implicit matrix."
        ],
        [
            "So here's an example.",
            "If we've ioncube data volume.",
            "And we want to do a Fourier transformation along a single dimension.",
            "Then we can just form a DfT of size N and an identity of size N. And form one of these three Kronecker products.",
            "An just just apply them so the first one would apply it in this direction.",
            "Second one will do it in this direction.",
            "And third one would apply it into third dimension.",
            "So of course in this example you may better write a function to do that or or something.",
            "But if you then want to combine this with yet other operations, then it's better to just use the toolbox."
        ],
        [
            "OK, so to continue the muscle up way of combining operations and everything.",
            "We can also do slicing.",
            "We can index rows or columns of an operator.",
            "Or just a subset of so we just extract a rectangular subset of the entries.",
            "But of course the matrix is still never formed."
        ],
        [
            "Implicit.",
            "One example of this is the randomly restricted Fourier.",
            "So we generate the Fourier matrix.",
            "We permute 1 to 128.",
            "Just randomly shuffle it.",
            "Take the first 50 entries and choose those rows so this this would compute."
        ],
        [
            "Then there's assignment.",
            "We can assign either an operator or matrix to a subset of the entries.",
            "We can cut out rows or columns just by assigning the empty.",
            "An empty set."
        ],
        [
            "Finally, there's a pseudoinverse.",
            "Or a\\ operation.",
            "Anne.",
            "So if we want to solve for a axis is equal to B or approximately be we type A\\ B in MATLAB.",
            "And get the solution.",
            "What we can also do equivalently is we can divine the pseudo inverse of a that gives a new operator.",
            "And then we can apply that operator on any vector or combine it with yet others and do whatever we want.",
            "OK, So what happens here is in the overdetermined systems we solve AX minus B tunam minimize it.",
            "So that gives a unique solution.",
            "Underdetermined gives the minimized least two norm solution to ax equals to be.",
            "OK.",
            "So these are linear systems and their solve by LSQR.",
            "So that's not external."
        ],
        [
            "Edge.",
            "So often we have a function that implements some operator and its transpose.",
            "So maybe we just want to wrap that as an operator as well, so we can we.",
            "Here we have a function and you apply it to X.",
            "That's the one and here we do the transpose of the operation, apply it to Y and get X.",
            "So these are two function calls.",
            "What we can also do is we can wrap it as a operator.",
            "We say this is N by N. This is the function handle and this indicates whether it's complex or not.",
            "OK, so here we just apply F on X, which is exactly the same as the first line and this is this is the 2nd way of combining it."
        ],
        [
            "And maybe you already have a class implementation, so it's instead of a function is a class, and you can also wrap those into operators and then combine them, slice them and do whatever you want with it."
        ],
        [
            "Of course, if you want to generate a new class altogether, you can just derive it from the op spot class.",
            "Write the constructor.",
            "Implement the multiply an if necessary, you can.",
            "Overload some more more functions and other operations to make them more efficient."
        ],
        [
            "OK, so let me just give a couple of examples how they are used in compressed sensing and sparse recovery.",
            "So this this was the example I showed at the very beginning, the sparse X and here we need to evaluate 8 * X.",
            "And a in this case was a restricted DCT operator.",
            "So here we first create the DCT operator.",
            "After we select a number of rows that we want to keep, we just index the operator and get a new operator.",
            "And then we recover X by calling SVG 01, where we say a is the matrix BSDD observed vector.",
            "And this this is the misfit.",
            "This value gives gives out the maximum norm of the one norm.",
            "This is empty an initial X, which is also empty, so it will just solve minimize the one or minimize the one norm of X subject to AX minus B2 enormous less than Sigma.",
            "That will give X and.",
            "Then you can do further processing with that."
        ],
        [
            "Here's another example of compressed sensing.",
            "I hope your signal is a bit visible, but it's sort of a smooth signal here with some spikes.",
            "So the problem here that is that this signal is not sparse in the DCT domain.",
            "But it's not sparse in the identity domain either.",
            "But if you combine them then then there's a couple of rows you can add together with the proper ways to form this signal.",
            "Right?",
            "So.",
            "If we combine them in dictionary B, then this this signal is B * X, where X is sparse.",
            "And suppose we want to measure this indirectly with with a Gaussian matrix.",
            "So here for example, we have a 1000 square DCT operator plus a 1000 square identity matrix.",
            "Combine it into 1000 by 2000 dictionary.",
            "An we measure this signal with 480 Gaussians OK. We could also do a matrix of random 480 by 1024 here, but it's equivalent in this case OK?",
            "So because we measure the dictionary times X, we form a matrix A. HM Times B.",
            "So in that case B becomes a * X. OK, and based on that we want to recover.",
            "So we apply this over with.",
            "With A&B we get a solution that is sparse.",
            "X hat.",
            "And if we then apply B on X hat, we get back the original signal, so that's that's an illustration of this magic of compressed sensing where you recover a signal of 1024 from only 480 measurements.",
            "OK."
        ],
        [
            "Here is another example of sparse recovery, which which is easy to implement with the spot framework.",
            "Here we have a signal that is exactly sparse in the DCT domain, so V is D transpose X.",
            "And what we then do is we only see a couple of those entries.",
            "So we see the red dots only.",
            "So we can either form a restriction operator which select some rows, or it's basically a identity matrix with zeros and one on the diagonal, and then we leave out all the rows that are 0.",
            "So that's a restriction.",
            "We can either multiply the DCT by the restriction, or we can just select the appropriate rows of DNN, transpose it.",
            "Formulation here.",
            "OK, so with this A and this B we can then solve the one minimization problem again.",
            "We get back in an X.",
            "And then we reconstruct the original signal by applying the DCT.",
            "So again, in this case, even though we just see all the red dots here, we can exactly reconstruct the original signal using L1 minimization.",
            "So even even though some of these peaks I think.",
            "In this case, all the peaks are there, but maybe this this because for example not observed, but you still exactly recover that.",
            "OK.",
            "So that's.",
            "Best."
        ],
        [
            "The example for inpainting.",
            "And then deblurring.",
            "We've already seen the formulation where we have a wavelet and a blurring operator.",
            "Here we construct a wavelet operator for an end by end signal with the higher wavelength.",
            "So that's a square signal.",
            "A convolution also of size N by N with a certain mask.",
            "I think I chose a Gaussian kernel, truncated Gaussian kernel for blurring.",
            "Anne, it's cyclic.",
            "So all the points that are above it will wrap back up to defeat which, which is why you can see a little bit of defeat here is just as an example.",
            "OK.",
            "So we can combine these in operator A.",
            "And then once we have X hat by solving a minimalization problem, we can reconstruct the Penguin by applying the wavelet transpose or the synthesis operator OK."
        ],
        [
            "So that's the linear operator toolbox, so it was developed to go with the sparse solver in particular, but it's useful for prototyping operators, complex operators very quickly.",
            "Performance is usually OK if you really have very specialized operators.",
            "Then it's useful to prototype with spot and then implement them once.",
            "Once you see it works.",
            "If you want to try a lot of different transformations, you don't want to.",
            "Implement all of them and then and then roll it out.",
            "You just want to first try it and then implement the final choice."
        ],
        [
            "OK, so the any any questions on the linear operator toolbox?",
            "Yeah.",
            "Use it for PGL.",
            "Do you do?",
            "Do you do any preconditioning on these operators?",
            "Is that something that no no.",
            "I don't think it would work probably well.",
            "We want to minimize the misfit write AX minus B2 norm subject to X. I've not seen any preconditioning in this this kind of problem here, so in some sense right, you have these prepare.",
            "Prepared DST, right?",
            "Awkward parent thing and then apply, whereas here preparation step could be baked into the construction of the matrix operator, right?",
            "Yeah, I think I think actually model up should have something like this for complicated operators.",
            "Of course it's a MATLAB matrix selector.",
            "Don't have it, but I think for things like wavelets maybe maybe I don't want to know all the details of how to call a wavelet operator where you have to 1st construct some filter and do stuff and so I think that's a more natural way here.",
            "Yeah.",
            "Yeah, but of course there's a little overhead because of the implementation.",
            "The object oriented system in Matlab is not really great idea, but it works.",
            "Remember folks as similar support for linear operators or distance away, you construct listed sequences, right?",
            "Yes.",
            "Operators in street scene yeah.",
            "I'm not so sure.",
            "So what are they?",
            "More advanced features here what?",
            "There.",
            "So I think T folks allows a function to be passed.",
            "I don't think they have all these routines to construct DCT operators and everything.",
            "Can do certain things, for instance.",
            "Yeah.",
            "I told them to implement, make it sport compatible.",
            "So basically if you just if your code just does 8 * X or a transpose times X.",
            "And then, then there's no additional changes you need to do to your code to use pot.",
            "Only if you say is matrix A and then otherwise if it's a function and things get a bit otherwise, it shouldn't matter, because I don't think T Fox uses anything other than matrix vector multiplies.",
            "Yeah.",
            "So.",
            "Anne.",
            "Yeah, but I'm not sure what is implemented right now.",
            "Right now, yeah.",
            "Being updated.",
            "I, I'm not sure I think.",
            "I think they're trying to make a connection with VX.",
            "But I'm not sure how far they got or how far they want to push it.",
            "So, but it should be compatible, otherwise there may be a sort of a wrapper function that you can write, which is a bit pointless in some sense.",
            "You have to write a function to represent an operator.",
            "Yeah, but it should be, otherwise it should be compatible.",
            "Yeah.",
            "OK, so let's let's move on to the third topic.",
            "I prototype framework for discipline massive computing, so this is joint work with David Donna Hood Statistics Department at Stanford."
        ],
        [
            "So what is it?",
            "It's a system for setting up and managing structured batches of jobs, basically.",
            "It also contains a database which stores the jobs and also stores all the results.",
            "Plus an easy to use interface that's designed for expressiveness.",
            "So there's there's a number of different objectives here.",
            "That we wanted to work on.",
            "Also, it allows for formatted output based on the structure of the job, so you form a job and based on the structure it can do smarter formatting.",
            "So importantly, it's a prototype, so it probably raises more design questions than answers, so there's there's several parts of the talk where there's just a lot of work to be done, or various different options to implement it.",
            "OK, so any any questions, suggestions are welcome and maybe we can even make it into a bit over this."
        ],
        [
            "Discussion, so this is typically how I work in terms of generating results, generating figures out, putting tables and everything.",
            "I have a function that generate figure with some export flag.",
            "Do I want to just show it on the screen or do I want to export it to a figure?",
            "Then I get the location of all the figure directories.",
            "It could be.",
            "Maybe the current directory slash figure.",
            "Then for how many parameters you want to do, you run some experiments.",
            "You get some data, you do some operations, you plot it.",
            "And at the end, if you want to export it, you export it to a PDF and you get your output file."
        ],
        [
            "So here there's the run experiments.",
            "Anne Anne here.",
            "What it does it gets there.",
            "The location of the cache directory.",
            "Where do I store my intermediate results?",
            "I form a filename based on the cash plus filename.",
            "40 specific parameters.",
            "So maybe if I have 123I I add 1, two or three at the end.",
            "Then I check if the file exists.",
            "If it does, I load it and extract the data field.",
            "Otherwise I really run the time consuming experiments and I save the results and in all cases you just return the data."
        ],
        [
            "OK, so.",
            "The advantage of this is it's reproducible.",
            "It's an exact way of generating the data, and then you always block the same and also if you want to go back to your plot half year or two years later, you can just easily generate the figure.",
            "It always uses precomputed results whenever possible, so that saves a lot of time.",
            "An if you want to recompute it, you just delete all the cache files and recompute it so you can distribute this code as one.",
            "The code to the cache files.",
            "If people want to rerun everything and reproduce it, they can.",
            "If they just say I want to regenerate the figures, they load the data and the files, and you can just regenerate the figures.",
            "So the disadvantage?",
            "Well the partial disadvantages, it's a repetitive pattern for all of the figures and tables and experiments, so it's repetitive, which makes it easy.",
            "But of course it's tedious to rewrite this every single time you do something.",
            "Then there's also no consistency guarantees with respect to code changes.",
            "So if I change the run experiment code and I still have some existing cache cache files that were generated with the previous version, then it's no longer consistent.",
            "If I want to do parallel computing here, I need to manually call the run experiment function on different set of parameters, so that's not very convenient.",
            "And also the intention or the goal of the experiment is not not very."
        ],
        [
            "Clear so if you look at this you just do something and you don't really know what's going on."
        ],
        [
            "So what would be the ideal system?",
            "And this is just sort of what we wanted to aim for.",
            "And of course this is difficult.",
            "So we we developed a system that some part of this.",
            "So ideally you have a high level description language that is self documenting.",
            "So the minimum set of.",
            "Keywords or commands.",
            "It explains a experiments and also explains what you want to show.",
            "So maybe we want to say.",
            "I would like to see the.",
            "The residual of the one or misfit as a function of tower, something like this and then it would just solve it so it would automatically generate and execute some workflow with easy access to the results and automate the data in a database.",
            "And be fully reproducible and also traceable.",
            "So once you have a result you can exactly see what is the provenance.",
            "Well, how was this result generated?",
            "So this would be the ideal system.",
            "Of course I didn't implement this."
        ],
        [
            "So in terms of the high language language, high level language, there's some challenges of course so.",
            "First you need to find an appropriate scope.",
            "You cannot develop a high level language that does everything, I think.",
            "If you have one, let me know that will be useful, but I don't think it is possible.",
            "So you want something to be simple but expressive enough to be useful so you don't want some software that can just do one thing in one or two commands to be very easy to use, but cannot solve many problems.",
            "Of course, you also don't want to develop a completely new language that can also replace C or something, right?",
            "There's some somewhere in between where you have a very simple.",
            "Language that is also very powerful and I think one example of this is CVS where.",
            "You can learn it in 5 minutes, but it's powerful enough to solve a lot of problems."
        ],
        [
            "So for the scope of the of the projects, I went through several decades of different journals and see what kind of results do they show.",
            "What is the format of them an?",
            "Often what you see, it's sort of a number of curves for different methods for different, maybe problem sizes.",
            "In some outcomes, that's that's one type of experiment.",
            "Maybe you have a 2 dimensional surface plot.",
            "Of a number of different parameters, maybe Monte Carlo samples.",
            "Or very often a table that compares method one and two for different settings and show different results.",
            "So these are the type of problems that often arise in all of these.",
            "Is OK, I give you an Alpha animator.",
            "A couple of those an you map it to a function so you can parallelize the computation for each Alpha and beta pair.",
            "Here you can parallelize, maybe each each side of N at each of the methods in independently.",
            "Here you can independently compute each trace, and here maybe individually you can.",
            "Run each method which each different parameter settings.",
            "So these decompose easily.",
            "So how can we express this this kind?"
        ],
        [
            "Of.",
            "Problems.",
            "So for example, if we want to compute the performance of three algorithms on different problems, right?",
            "So the framework I implemented allows you to specify this follows.",
            "You say there's some options function 1, two and three.",
            "An hour will explain what functions are here.",
            "Those are the function options.",
            "Then there's problem options.",
            "You want to three those.",
            "Those are also options, and that gives another set.",
            "Now I want to evaluate all of the different combinations.",
            "So I say all the options are the function options times the problem options.",
            "And in this case it would compute nine different tuples of parameters.",
            "OK, then I say within the current project evaluate these these options and give me some job identifiers.",
            "And once I get the results, you can say demco tabulates from the tickets.",
            "The output fields have named results, so I say give me the iterations as and plot them as it are and give me the runtime field.",
            "And tabulate it so the result of that would be."
        ],
        [
            "Be a table.",
            "It knows that its functions times problem, so it knows the structure of this table.",
            "It also knows that these are functions, so it just gives some default labels.",
            "It just outputs everything, so that's sort of the high level.",
            "Output here, most of most of the framework itself is in the first 4 lines.",
            "I've only written one output formatting routine, but it knows about the structure and this is sort of.",
            "What do you want to do and how do I do it right?",
            "This is sort of 1 to one mapping."
        ],
        [
            "OK, so the system."
        ],
        [
            "Reviews as follows.",
            "There's a front end which has interfaces.",
            "I think in my flippin Python right now.",
            "Can they communicate with an engine and a local database?",
            "That specifies an external database that contains all the results.",
            "An all the jobs Ann.",
            "And then there's a back end which looks at the job.",
            "So the flow."
        ],
        [
            "As follows.",
            "From Matlab, which I generate some jobs.",
            "And the engine will then communicate with the database of course."
        ],
        [
            "And it just returns some job IDs."
        ],
        [
            "The dump dispatcher looks at the database.",
            "Say there's new jobs.",
            "Let me submit them to some computational platform."
        ],
        [
            "Ann, once they're done, the results are imported back into."
        ],
        [
            "Database and they can be queried by the original system.",
            "Anne."
        ],
        [
            "Of course, if someone else is also curious to check these results or something else, it can access the same database.",
            "And get exactly the results that already computed or at more results also."
        ],
        [
            "OK, so let's let's look at the front."
        ],
        [
            "Sent.",
            "Front end is implemented on the local machine.",
            "It provides routines for job specification and processing of the results.",
            "So that was the example code.",
            "An older job specifications are done in the context of a project, so that's basically a database.",
            "OK, so here we generate the project demo project and the local name demo.",
            "This is this is just like drop box drop box has a local directory name.",
            "This is the local directory name it used to look up there."
        ],
        [
            "Summation information, so once you give a project, engineer will look in a local database and see which external database to use."
        ],
        [
            "So you can add a new project by or joining existing one.",
            "Here create a new project demo demo and the host name, Database name and user credentials.",
            "And given an input to that database, obviously this is this is.",
            "This may not be secure, but it's a prototype, so this is something that would require more thought, such as user manual management, authentication and permissions, who can read through the database from the database, who can write to it and maybe manage it.",
            "OK."
        ],
        [
            "So once we have a project, we need to generate jobs.",
            "an A job is has three components.",
            "It has a function.",
            "What do we want to evaluate then parameters on what do we want to evaluate this function and a computational platform?",
            "Where do we want to run all the code?"
        ],
        [
            "So let's look at a function."
        ],
        [
            "To create a function you can just say project import function and then function.",
            "This could be Matlab or Python.",
            "At the moment an you can for example specify Python function, but essentially call it from Matlab.",
            "So there's there's there's a lot of issues with functions, and I think these are general and they may not have been solved so.",
            "For example, there's version control and or.",
            "How do I exactly identify a particular function?",
            "OK. How can users know about this function or also identify it?",
            "And then one of the other difficulties.",
            "What about dependencies an if there's compiled libraries, you need those kind of things.",
            "And of course, this is easier when there's established software packages where you just say I want to use this package version 2.",
            "So that's easier to identify, but if you're quickly writing new functions all the time, you change them.",
            "Then it becomes difficult to identify."
        ],
        [
            "So let's let's."
        ],
        [
            "Get that version control later.",
            "So one thing is that the results are associated to one particular function, sort of mathematical, right?",
            "You apply.",
            "FX&F doesn't suddenly change, it's it's a function.",
            "So one way to do that is to identify different version IDs with function names, but that's difficult to know because I keep changing my file.",
            "And how do I say I want to keep version 3251?",
            "How do I remember this number that's that's tedious.",
            "Also, if you change a function, of course you want to evaluate invalidate the results in the database because they don't originate from that function, so you don't know if it's consistent.",
            "What we do want is we want to keep existing results for each of these functions.",
            "OK, version control itself.",
            "Is beyond the scope of the database.",
            "We don't want to have implement a whole new version control system, just just for the framework so.",
            "For the implementation, I made a couple of compromises.",
            "First, functions are identified by their hash code, so you compute one number and that's the function, and if you change their code, it's a new function.",
            "So once we submit a function, we compute, copy the source code to the database, and that's it.",
            "That's one code.",
            "Of course, if you just add some comments to it.",
            "That's a new function, but the behavior is exactly the same.",
            "So one way to do that is you could declare one function to be equal to the other function.",
            "And then users can just choose any repository such as Git or Git or Drop Box to access function so I can share it with everybody and you just say I use this function.",
            "OK."
        ],
        [
            "So there's some more issues.",
            "Of course the dependencies.",
            "So a function may just be the top top level and then how do you know which functions it calls in which libraries it uses?",
            "How do you ensure the correct version of each of these libraries, and how do you compile them on a computational platform?",
            "And I think that's just in general a software engineering problem that has not been solved yet.",
            "So one possibility is to use the cloud with machine images that is very reliable.",
            "You can just say exactly.",
            "I want to run my experiment on this machine image on some node on the cloud.",
            "Showdown is highly reproducible, but of course it's not very flexible.",
            "It's very static.",
            "You have image and that's it, so it's not very suitable for prototyping.",
            "And this framework is is more between prototyping and and development.",
            "So for the implementation I have the not very satisfactory solution of allowing only one standalone function.",
            "Anne.",
            "If there's any dependencies they have to be available on the platform.",
            "There's an existing solution in Python which is called Pie Cloud is good software.",
            "I have a slide on it towards the end.",
            "But even then, compiled libraries remain difficult.",
            "You would have to pre install them on the cloud so it's not a solved problem."
        ],
        [
            "OK, so once we import the function to the database, we still need to call it with some parameters and and."
        ],
        [
            "Where do we want to run them so?",
            "For parameters, there's three different options.",
            "You can just call the function with a.",
            "Name value pairs.",
            "So meta three method should be 3 and scale should be true.",
            "OK. You can make a demco parameter structure where same methods, three skills true, and then call the function on the parameters.",
            "What you can also do is you can specialize the function so fun that set parameters these or or you can set the parameters like this and then you just call the function.",
            "So this is useful when you have a specialized function, for example some optimization algorithm which specific settings that we function one and you have other settings we function to the same same same code."
        ],
        [
            "OK then then of course we need to specify where do we run this code.",
            "So here we get a platform.",
            "The cluster for example, some local cluster and then we say run this function on this platform.",
            "You can also set the default platform and then it always runs it on that platform unless you specify a."
        ],
        [
            "Allies.",
            "So again, there's there's quite a few unresolved issues.",
            "Should platforms be project specific?",
            "Probably not.",
            "So you want to share the platforms across different projects, right?",
            "How do you specify a new platform for static machines or just clusters?",
            "It's fairly easy.",
            "But for dynamic platform such as a cloud, it becomes a little harder to specify a platform because maybe you have to boot it and so this is still basically an open question.",
            "And then of course access control and platform maintenance.",
            "Starting and stopping and nodes on the cloud and how do you account for computational time?",
            "So if I share the database with someone, someone uses the machine a lot, how do you divide that?",
            "That's that's difficult.",
            "And of course ideally have some online server that takes care of all this, starting, stopping and job monitoring, so that's.",
            "That's this."
        ],
        [
            "OK, so we have the three components over Java function parameters.",
            "Anna computational platform so.",
            "Any combination of those defines a single job.",
            "OK, so how do?"
        ],
        [
            "You put everything together.",
            "So this submission of a function evaluation so.",
            "When we call the function on the platform and some parameters we get, we get a ticket with job ID.",
            "OK, so we can say project that evaluate this function with this parameter on this platform.",
            "This is basically the same as.",
            "As the second one, because a function is instantiated from a project so it knows about the parent project.",
            "So this this is just some syntactic sugaring."
        ],
        [
            "OK. Parameters and computational platform are optional in the sense that you can have a default computational platform and maybe no parameters.",
            "Any combination gives a unique job an, so here we run this one job on a particular platform.",
            "In terms of jobs, there's two types of jobs.",
            "I think there's there's.",
            "Jobs with dynamic results and which static results so dynamic results would be runtime, for example so.",
            "Then you really want to evaluate the function on a particular platform, but maybe you say, well, I already computed this function on another platform and I just care about the results and they shouldn't really matter.",
            "That depends on the platform, so you can just evaluate it on any platform if you have it on any platform, you just return those, otherwise you start a new job on the default platform.",
            "So this is a single function calls, but of course we want to run a whole lot of jobs so.",
            "The parallel job submissions, as I mentioned in the introduction, slides are often structures and we want to avoid submitting 1000 jobs in a for loop."
        ],
        [
            "So how do we do that?",
            "We define these options here.",
            "So we say dimension can be 1020 thirty and can be some other values, and we evaluate that outer product.",
            "We evaluate it on some platform and we just get the results."
        ],
        [
            "So we can have lists of functions, list of parameters and platforms.",
            "So we can say options options can be over parameters.",
            "Options can be over functions or platforms.",
            "OK, outer product of those and we can also submit.",
            "So we just add them together.",
            "Anne.",
            "Every combination can have be at most one function, obviously because we cannot evaluate two functions somehow.",
            "It can have at most one platform and each named parameter can also appear only once, so then otherwise, if we would have them twice in different values.",
            "I don't know which one to choose.",
            "So once we call this evaluate, we get an array of job IDs.",
            "Maybe some of them already exist.",
            "So if I computed some of these combinations, it will return the job ID that corresponded to that evaluated result."
        ],
        [
            "And once we submitted, we can ask for a summary.",
            "So it says there's two pending submitted so many an several running and others are completed already.",
            "This is an array, so we can just get the size and we can get a summary.",
            "Maybe it's submitted.",
            "So we can check individual jobs if they've completed or not.",
            "Anne.",
            "Other things that could be implemented are constellation of jobs, deleting, restarting, etc."
        ],
        [
            "I.",
            "Here we summarize Job 1 two and we say it was submitted, then it was started, completed, and here's the standard output, just in case you want to see it OK."
        ],
        [
            "Then of course, we're interested in the results, otherwise we wouldn't have to compute it.",
            "So here we can say, give me the output value name.",
            "And there's a mosque associated with it, because some of them may not be done yet.",
            "May not have been computed.",
            "You can get a default value and this is syntactic sugaring again, forget value name.",
            "OK. And then at the end there's a formatting where based on these outer product, so maybe some nations you can decide what format format to plug it in, and you can."
        ],
        [
            "Great tables such as the one I just showed earlier.",
            "Where it takes advantage of the outer product to form this?"
        ],
        [
            "OK, so everything can be labeled for formatting, so you can say platform one is this is called cloud or something.",
            "Again, for formatting, more work is needed and I think."
        ],
        [
            "Stats."
        ],
        [
            "Front end.",
            "OK, so the front end has three components.",
            "There's a interface in Matlab in Python.",
            "The core is in C, and then there's an intermediate layer in Python or or Max.",
            "So the interface language implements the main classes, demco object, ETC platform.",
            "An IT interacts with the core through the intermediate layer, so it implements project platform and the function classes and then the parameters options and the manipulation so it overloads the multiplication for example.",
            "And it generates a ticket."
        ],
        [
            "Every.",
            "Once you initiate a project or a platform, or you set the default, these are fairly simple operations for the interface.",
            "It just calls.",
            "The core routine says give me the platform and it will.",
            "The core will implement the access to the database, so that's that's a fairly thin layer.",
            "For the functions, once you specify source file, the engine will compute the DD hash code.",
            "And imported if needed and.",
            "Return to function ID.",
            "Options you just combine them and you check uniqueness of the fields, so see if the products are valid and then you submit that."
        ],
        [
            "So let's let's look at that briefly.",
            "First of course, to check Server platform in a function or given an, it sets the default if needed.",
            "And it converts the objects the model of objects.",
            "For example, two structures for easy access.",
            "Model up the Max interface doesn't really allow easy access to objects, which is, I think, really badly supported so.",
            "In the intermediate layer we convert everything to a set of predefined data types, so every language has their own data types.",
            "Ann, I wanted the framework to work with different programming languages, so I just defined some integer types, maybe double string structures and cells.",
            "And then we map the model of variables to the engine variables and back in the same for Python.",
            "So so maybe list tuples and set a road map to cells and their map back to one of them.",
            "May be an umpire object array.",
            "OK, so that's.",
            "That's the conversion of data types."
        ],
        [
            "So the core engine, once it gets a job submission, it generates all the required parameter combinations.",
            "It serializes them so so you can have a binary comparison in the database.",
            "It then checks the database and maybe submits a new jobs if it doesn't already exist and return to job IDs."
        ],
        [
            "So part of good part of the code is the serialization over the variables."
        ],
        [
            "Excited to redo that because a lot of the existing ones are text based and I don't think text based.",
            "Interfaces are very good for large matrices, for example because there's just all bulky.",
            "And so, for example, if we have this basis pursuit denoise problem and we want to evaluate it for different vectors B and different house.",
            "So we just say there's an options for touted options for B an an outer product of those.",
            "So once we evaluate that we may have to give it a, which could be very big matrix.",
            "OK. An unfortunately it does not have an interface for spot because we cannot serialize random arbitrary classes in Matlab.",
            "So MATLAB may not be the best programming language for this.",
            "I think Python has better support for these kinds of things.",
            "But I wanted to have it work in model up as well, so that's why it's a bit restrictive.",
            "So every time we have a big matrix, so we generate 50 tuples of a B tile with the same big matrix.",
            "So that's that's not very efficient of course."
        ],
        [
            "So what we do is for large variables when we serialize it, we serialize it as a chunk and then we just say this variable is a is a chunk and so you can generate very big datasets and have very small keys in the database still.",
            "So instead of replicating the data, we just refer to a chunk ID.",
            "It reduces storage and it's also faster.",
            "What we also do is instead of generating each tuple and then serializing, we pre serialize those and then combine them together so it's a lot faster."
        ],
        [
            "I'm."
        ],
        [
            "Back end implementation is very simple.",
            "Because we just have a job dispatcher and a computational platform."
        ],
        [
            "OK.",
            "So the job dispatcher just checks the database to see if there's any new jobs.",
            "It checks the status of existing jobs on the cluster an if there are new results, it will get them from the computational platform and imports them back into the database.",
            "Idea potentially, you could also say once the computational platform is done with the computation, it sends them to the database.",
            "But I didn't really want the computational platform to be active in that sense, it shouldn't worry about, oh, I can't access the database right now.",
            "I'll wait and I'll try again later.",
            "Platform shouldn't do that, so the job dispatcher queries both the platform and the database, and an arranges the data transfers between it."
        ],
        [
            "So on the computational platform, it's also fairly thin layer.",
            "It has a set of primitives which are mostly one or two lines.",
            "Shell scripts maybe generate a platform wide unique job ID which could just be the current time on that platform.",
            "You could provide a path name for a job, so I give you the job.",
            "Give me part name.",
            "And then then the.",
            "The back end job dispatcher will just use that job name and copy all the files to that directory.",
            "When you request the computational platform to submit a job to the queue, whatever Q it uses, maybe it has some job submission queue.",
            "You want to get the job status and clean up the job, so that's fairly very thin layer."
        ],
        [
            "And of course, the computational platform.",
            "Also requires some of the framework routines, so it needs to be able to load a parameter file.",
            "In a unified format.",
            "So there are the same from model up in Python And everything.",
            "Then there's a very thin wrapper for Python MATLAB scripts to just say low today to call the function, maybe redirect the output if necessary, and then output a data file.",
            "So that's very small code as well."
        ],
        [
            "And as I mentioned, the job dispatcher just queries the database for pending and submitted jobs.",
            "It calls all of those the previous primitives on the computational platform and orchestrates everything.",
            "A copy of the output files.",
            "ANAN monitors everything, so I think that's basically everything."
        ],
        [
            "Yeah."
        ],
        [
            "Some related work still.",
            "So I mentioned pie cloud.",
            "I'm not sure if it's still running, but it was about a year ago and it's a very good platform in Python.",
            "So you just say import cloud and you define some function you can call that function, But you can also say cloud called this function with parameters one and two.",
            "That will give you job ID and then you can query the result.",
            "So this is very powerful an because it's in Python.",
            "Python has more support for querying dependencies.",
            "Serializing objects so that's a lot easier.",
            "So this is this is a very easy to use software.",
            "Or maybe it was a very it's used.",
            "I'm not sure if it exists.",
            "Anne.",
            "The only disadvantage I think is is it requires a access to a existing Pi cloud dedicated cloud for this.",
            "So you have to submit the jobs on that cloud.",
            "So that's the only disadvantage of course, so you cannot say I have my own cluster.",
            "I want to just do this so that doesn't work.",
            "There's no result database, but you could also see this as an external add-on, so that's not a real issue, except of course that you would have to write a cache database.",
            "Anet was acquired by Drop Box in 2013, so I think it's shutting down or has already been shut down."
        ],
        [
            "Some other work is is is workflows workflows have been around for a long time, so there's exist extensive work on it.",
            "It's more modular approach where you say I specify how some data is transformed through some other output, which is combined with others, and so it's a very high level way of specifying jobs, so it's very suitable for well established process pipelines.",
            "Once you have some image processing pipeline, you just say here's the new images do the whole thing and I get my output.",
            "It's perhaps less suitable for rapid prototyping and fine granularity jobs where you have a lot of tiny little jobs that it may be too heavy for that.",
            "You could use the execution platform.",
            "Of course, there's infrastructure that says I want to submit this job somewhere, and there's job management and everything so that that could be useful.",
            "Something that's also done here a lot is eksperiment databases.",
            "They emphasis is a little different.",
            "It's basically a repository or database or for example.",
            "Albums in machine learning?",
            "So maybe we have an amnist classification problem, an which algorithms run, and what are those results?",
            "In which parameters wasn't run with.",
            "So this is a shared database of results and you can submit your results to it.",
            "An DD.",
            "The advantage of these experiment databases is that you can do meta learning, or you can just mind the results.",
            "So you can say what is the general trend in the number of iterations or if certain parameter or different types of methods.",
            "So you can say I want to have first order methods, maybe you can say I want to 2nd order methods.",
            "What is the difference?",
            "Or you could say what is the most defining parameter that performs the effects performance most so.",
            "That's experiment databases.",
            "I think the only downside is is because you want to query this kind of high level queries.",
            "They're structured databases, so they are specific to certain problem classes and it knows about this class is, so that's the only restriction I'd say."
        ],
        [
            "So in summary, I just presented a prototype framework for structured computation.",
            "I introduced the sparse recovery solver SPO one and discuss the linear operator toolbox spot so."
        ],
        [
            "I'd like to thank you."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I'd like to thank the organizing committee for inviting me.",
                    "label": 0
                },
                {
                    "sent": "I'll be talking about sparse optimization and beyond, so it's it's it's.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "It's a collection of three different topics, so the first topic is SPD L1, which is a solver for sparse optimization.",
                    "label": 1
                },
                {
                    "sent": "Second part will be spot which is a linear operator toolbox in Matlab.",
                    "label": 1
                },
                {
                    "sent": "And then the third topic is at Demco, which is a framework for discipline massive computing.",
                    "label": 0
                },
                {
                    "sent": "So let's start with.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "SP GL1's solver.",
                    "label": 0
                },
                {
                    "sent": "First party optimization.",
                    "label": 0
                },
                {
                    "sent": "This is joint work with Michael Friedlander at the Department of Computer Science at UBC in Canada.",
                    "label": 1
                },
                {
                    "sent": "So can everybody hear me properly?",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So sparse optimization appears or comes from compressed sensing and sparse recovery.",
                    "label": 1
                },
                {
                    "sent": "And so let's start with two examples of this.",
                    "label": 1
                },
                {
                    "sent": "So in compressed sensing, let's see the laser pointer.",
                    "label": 0
                },
                {
                    "sent": "Income percentage we assume there's a sparse signal we want to measure or sparsely representable signal signal.",
                    "label": 0
                },
                {
                    "sent": "And we measure it as as a linear operator, 8X plus noise.",
                    "label": 0
                },
                {
                    "sent": "So that's B looks noisy.",
                    "label": 1
                },
                {
                    "sent": "So in this example I have a 1% sparse vector.",
                    "label": 0
                },
                {
                    "sent": "AA is a randomly subsampled 1200 by 16,000 discrete cosine transform so you have a squared discrete cosine transform and you at random choose 1200 rows.",
                    "label": 0
                },
                {
                    "sent": "Once I have this, I add 10% noise.",
                    "label": 0
                },
                {
                    "sent": "And solve the following basis pursuit denoise formulation so that's minimized.",
                    "label": 1
                },
                {
                    "sent": "The one norm of X, subject to the misfit AX minus B is less than some tolerance level Sigma.",
                    "label": 0
                },
                {
                    "sent": "And when we do that, we obtain this result.",
                    "label": 0
                },
                {
                    "sent": "Which is also sparse.",
                    "label": 0
                },
                {
                    "sent": "In fact, the sparsity pattern is the same, but because there's a noise term here, the coefficients are little bit less than those in the original, so that's one example for compressed sensing.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "An sparse recovery, sort of a generalization of this?",
                    "label": 1
                },
                {
                    "sent": "Not not all the one or minimization is compressed sensing.",
                    "label": 0
                },
                {
                    "sent": "So here's an example for deblurring.",
                    "label": 0
                },
                {
                    "sent": "Here we have a Penguin, and we could say that this Penguin can be sparsely represented in the wavelet basis.",
                    "label": 0
                },
                {
                    "sent": "At least approximately.",
                    "label": 0
                },
                {
                    "sent": "Once we have that, we measure this with with a blurring operator, so we get an image B and then we have W, the wavelets beta, blurring an we form a linear matrix, A right that is just a.",
                    "label": 0
                },
                {
                    "sent": "And then we solve AX minus B2 norm less than Sigma and minimized one normal vex.",
                    "label": 0
                },
                {
                    "sent": "So in this case you don't really need to do this.",
                    "label": 0
                },
                {
                    "sent": "But this is just an example.",
                    "label": 0
                },
                {
                    "sent": "Once we get the sparse X, we reconstructed with the wavelet and get a similar Penguin.",
                    "label": 0
                },
                {
                    "sent": "So that's just an example of sparse recovery.",
                    "label": 1
                },
                {
                    "sent": "So a key of both of those is the basis pursuit denoise formulation given here.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So this is for sparsity.",
                    "label": 0
                },
                {
                    "sent": "We minimize the one norm, but there's.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Generalizations four of sparsity or other structure, so one of them is the multiple measurements vector where instead of having one column B, you have several.",
                    "label": 0
                },
                {
                    "sent": "And you assume that the sparsity pattern.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Such as here, whoops, sorry.",
                    "label": 0
                },
                {
                    "sent": "This one.",
                    "label": 0
                },
                {
                    "sent": "The sparsity pattern itself doesn't change, just the values on that pattern change, so overtime they remain the same.",
                    "label": 0
                },
                {
                    "sent": "So what you done then want to?",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Minimize.",
                    "label": 0
                },
                {
                    "sent": "Is the 1 two norm.",
                    "label": 0
                },
                {
                    "sent": "So you take the two normal feature over matrix and you take the one room of that.",
                    "label": 0
                },
                {
                    "sent": "So the 1 two norm subject to again a misfit term that's multiple measurement vectors.",
                    "label": 1
                },
                {
                    "sent": "Uh.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And more recently is the nuclear norm minimization, where instead of minimizing the sum of absolute values of X, you minimize the sum of the singular values.",
                    "label": 0
                },
                {
                    "sent": "And that gives you a low rank matrix.",
                    "label": 0
                },
                {
                    "sent": "OK, so this is.",
                    "label": 0
                },
                {
                    "sent": "Matrix completion where projection doesn't matter.",
                    "label": 0
                },
                {
                    "sent": "It's an operator in front of X.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So the general formulation can be written as minimize cap of X capitalized on smooth its coefficients.",
                    "label": 0
                },
                {
                    "sent": "Subject to row of X minus, beware row is some residual sum penalty term.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "So this is the formulation we will be looking at.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So let me first introduce the parade curve.",
                    "label": 0
                },
                {
                    "sent": "So we want to minimize cap are subject to rose less than something.",
                    "label": 0
                },
                {
                    "sent": "If we just look at all the points X and we plot the value of Kappa and value of row, then you get something like this.",
                    "label": 0
                },
                {
                    "sent": "This is the very best you can do for a given Copa, so you cannot get the residual lower than this.",
                    "label": 0
                },
                {
                    "sent": "You can go all the way above and what we want.",
                    "label": 0
                },
                {
                    "sent": "So there's a tradeoff.",
                    "label": 0
                },
                {
                    "sent": "What we want is that the Misfit is less than Sigma.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So we're only interested in this part.",
                    "label": 0
                },
                {
                    "sent": "This is feasible.",
                    "label": 0
                },
                {
                    "sent": "Now we want to minimize Kappa, so that means we need to find this point.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Right here.",
                    "label": 0
                },
                {
                    "sent": "So that's basically it.",
                    "label": 0
                },
                {
                    "sent": "The only problem is that minimizing of nonsmooth objective is difficult, minimalization is difficult, and also the constraints are not not really that simple.",
                    "label": 0
                },
                {
                    "sent": "You cannot easily project on these constraints, for example.",
                    "label": 0
                },
                {
                    "sent": "So the solution is to change the formulation.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We're going to just minimize the misfit.",
                    "label": 0
                },
                {
                    "sent": "Subject to the coefficient norm, the cap is less than Tau.",
                    "label": 0
                },
                {
                    "sent": "OK, so now this is the feasible set.",
                    "label": 0
                },
                {
                    "sent": "And now we want to minimize the residual.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So we go down.",
                    "label": 0
                },
                {
                    "sent": "And we get the same solution.",
                    "label": 0
                },
                {
                    "sent": "The only problem of course I'm given Sigma, but we were solving for Tau here.",
                    "label": 0
                },
                {
                    "sent": "So how do I know which which value of total use right?",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So what we do is we apply routefinding approach here.",
                    "label": 0
                },
                {
                    "sent": "So this is the parade curve.",
                    "label": 0
                },
                {
                    "sent": "What?",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We do is we first minimize residual subject to coppers lesson and how.",
                    "label": 0
                },
                {
                    "sent": "For a given time, so we go all the way down and we find this point on the parade curve.",
                    "label": 0
                },
                {
                    "sent": "Once we have that.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We compute the gradient at the point.",
                    "label": 0
                },
                {
                    "sent": "OK, we.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Compute the intersection here.",
                    "label": 0
                },
                {
                    "sent": "And then we'll give a new towel.",
                    "label": 0
                },
                {
                    "sent": "And then we.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Again, solve that problem.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Compute the gradient up.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Dataw etc.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "In the end, what we have is a solution to the original problem.",
                    "label": 0
                },
                {
                    "sent": "Using a couple of Newton steps.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so that's the original problem.",
                    "label": 0
                },
                {
                    "sent": "What we do is we need a solver for the minimizing of row, subject to a Cup of constraint.",
                    "label": 0
                },
                {
                    "sent": "What we need to show also is that the pressure curve is indeed differentiable.",
                    "label": 0
                },
                {
                    "sent": "And also a good way of evaluating the gradient, because of course if that's really expensive, it's not a good approach.",
                    "label": 0
                },
                {
                    "sent": "I'll look at.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "These two 1st and then go back to the solvers.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So for differentiability with the following theorem, let Kappa be a gauge function, or I'll discuss this in a bit.",
                    "label": 0
                },
                {
                    "sent": "And let robita tuner.",
                    "label": 0
                },
                {
                    "sent": "Then the Prado curve is convex and differentiable on a certain interval.",
                    "label": 0
                },
                {
                    "sent": "And this interval towel Bar is is the smallest out for which the parade of function no longer goes down.",
                    "label": 0
                },
                {
                    "sent": "So either it reaches 0 or if he is not in the range space of A at that point.",
                    "label": 0
                },
                {
                    "sent": "OK, so on that set the gradient of the parade curve is minus the polar function of Kappa.",
                    "label": 0
                },
                {
                    "sent": "Short of the jewel.",
                    "label": 0
                },
                {
                    "sent": "Of a transpose R divided by the two norm of R. Where R is the misfit at the solution, so we minimize.",
                    "label": 0
                },
                {
                    "sent": "The point we get the solution of the Prado curve.",
                    "label": 0
                },
                {
                    "sent": "That's the next.",
                    "label": 0
                },
                {
                    "sent": "We compute the residual and then we just plug it in here and for the one norm the polar of Cap is simply the Infinity norm, so that's the maximum absolute value of this vector.",
                    "label": 0
                },
                {
                    "sent": "8 transpose, R. So that's easy to compute.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So gauge functions are as follows.",
                    "label": 0
                },
                {
                    "sent": "There are non negative convex functions.",
                    "label": 0
                },
                {
                    "sent": "At the vanish at the origin.",
                    "label": 0
                },
                {
                    "sent": "An F of Alpha access Alpha F of X.",
                    "label": 0
                },
                {
                    "sent": "So there are linear in that sense right?",
                    "label": 0
                },
                {
                    "sent": "And for all Alpha is greater than zero.",
                    "label": 0
                },
                {
                    "sent": "So if this was valid for an absolute value of Alpha would be norm, so it includes.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Norms, and here are some of the norms to L2 norm.",
                    "label": 0
                },
                {
                    "sent": "L1 norm and the polar of the L1 norm as L Infinity norm.",
                    "label": 0
                },
                {
                    "sent": "So that's that's for the.",
                    "label": 0
                },
                {
                    "sent": "Roll is the two norm.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And in more general.",
                    "label": 0
                },
                {
                    "sent": "If row is a differentiable function, a convex differentiable function whenever R is not zero.",
                    "label": 0
                },
                {
                    "sent": "Then is continuously differentiable on a similar interval.",
                    "label": 0
                },
                {
                    "sent": "With minus Kappa polar a transpose Y, where Y is the argmax of this equation.",
                    "label": 0
                },
                {
                    "sent": "OK, so it doesn't really matter what this is.",
                    "label": 0
                },
                {
                    "sent": "It's easy to evaluate them.",
                    "label": 0
                },
                {
                    "sent": "So for the for the proof of this we need a couple of ingredients.",
                    "label": 0
                },
                {
                    "sent": "The first ingredient is is the relationship between gradients an subgradients?",
                    "label": 0
                },
                {
                    "sent": "So a subgradient of a convex function.",
                    "label": 0
                },
                {
                    "sent": "You can imagine it as sort of a plane supporting the function at that point, and if there's if there's a.",
                    "label": 0
                },
                {
                    "sent": "If the function is non smooth, then there's a several different place, so that's.",
                    "label": 0
                },
                {
                    "sent": "Sort of the subgradient.",
                    "label": 0
                },
                {
                    "sent": "So there's many.",
                    "label": 0
                },
                {
                    "sent": "There's not a unique gradient, but there are several.",
                    "label": 0
                },
                {
                    "sent": "Let's just upgrade.",
                    "label": 0
                },
                {
                    "sent": "OK, so subgradients of five tokens correspond to the LaGrange multipliers of the constraint OK.",
                    "label": 0
                },
                {
                    "sent": "So that's a one to one relationship, an.",
                    "label": 0
                },
                {
                    "sent": "Dis LaGrange multipliers.",
                    "label": 0
                },
                {
                    "sent": "They come up in a derivation of the jewel function of the of the original 1.",
                    "label": 0
                },
                {
                    "sent": "Using conjugate functions.",
                    "label": 0
                },
                {
                    "sent": "OK, the details don't don't really matter.",
                    "label": 0
                },
                {
                    "sent": "So what we then need to show is that the uniqueness of this LaGrange multiplier Y.",
                    "label": 0
                },
                {
                    "sent": "That if it's unique, that means that the LaGrange multipliers unique, which means that this subgradient is unique.",
                    "label": 0
                },
                {
                    "sent": "Which means that the gradient is unique, so that's that's how to prove those.",
                    "label": 0
                },
                {
                    "sent": "So it's just.",
                    "label": 0
                },
                {
                    "sent": "If the LaGrange multiplier here is unique, then the gradient issue can efforts differentiable.",
                    "label": 0
                }
            ]
        },
        "clip_31": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so we finished the differentiability of the Prado curve and a practical way of evaluating it.",
                    "label": 0
                },
                {
                    "sent": "Let's look at the solver for this problem, because we still need to evaluate the point on on the parade curve.",
                    "label": 0
                },
                {
                    "sent": "So we want to minimize AX minus B2 norm or square tunam subject to capital of X is less than 10.",
                    "label": 0
                }
            ]
        },
        "clip_32": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "So there's several different ways of going about doing this.",
                    "label": 0
                }
            ]
        },
        "clip_33": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The first one we use where SPG L1 comes from is non monotone, spectrally projected gradient method.",
                    "label": 0
                },
                {
                    "sent": "So the outline of the algorithm is follows.",
                    "label": 0
                },
                {
                    "sent": "You initialize X and some scaling factor gamma.",
                    "label": 0
                },
                {
                    "sent": "While you're not done, compute the gradient, which is a transpose X -- B.",
                    "label": 0
                },
                {
                    "sent": "Then we do a line search.",
                    "label": 0
                },
                {
                    "sent": "So it's that there's sufficient dissent, an because we also work on a constraint domain, we need to do projection so.",
                    "label": 0
                },
                {
                    "sent": "We can either say X minus scaling factor plus stepsize times the gradient.",
                    "label": 0
                },
                {
                    "sent": "And we project that.",
                    "label": 0
                },
                {
                    "sent": "So that's a projected gradient.",
                    "label": 0
                },
                {
                    "sent": "So if you do five line searches.",
                    "label": 0
                },
                {
                    "sent": "5 lines search steps.",
                    "label": 0
                },
                {
                    "sent": "Then you need to project five times.",
                    "label": 0
                },
                {
                    "sent": "Another way is to Project X minus gamma times the gradient.",
                    "label": 0
                },
                {
                    "sent": "So you take a long step.",
                    "label": 0
                },
                {
                    "sent": "Then you project it back and then you compute the difference to the original point and then you backtrack along that line towards the current point X to find a new point.",
                    "label": 0
                },
                {
                    "sent": "OK, so that just requires one projection and is potentially cheaper.",
                    "label": 0
                },
                {
                    "sent": "And then you just update the Scaling factor index and you repeat until converges.",
                    "label": 0
                },
                {
                    "sent": "I.",
                    "label": 0
                }
            ]
        },
        "clip_34": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "A second method is the projected quasi Newton methods.",
                    "label": 0
                },
                {
                    "sent": "Here what we do is we initialize X and a quadratic model of the objective.",
                    "label": 0
                },
                {
                    "sent": "Using for example BFF's.",
                    "label": 0
                },
                {
                    "sent": "While we're not converged, we minimize the quadratic model subject to the original constraints.",
                    "label": 0
                },
                {
                    "sent": "Then evaluate the original function F and the gradient and and update the quadratic model with this.",
                    "label": 0
                },
                {
                    "sent": "This is useful especially if.",
                    "label": 0
                },
                {
                    "sent": "If F is really expensive to evaluate, then you just minimize a quadratic model instead of the original function, so you can do many more cheap steps on the quadratic function and then evaluate one expensive step on the actual function.",
                    "label": 0
                }
            ]
        },
        "clip_35": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Then there's an implementation of natural fast algorithm.",
                    "label": 0
                },
                {
                    "sent": "I'll just just.",
                    "label": 0
                }
            ]
        },
        "clip_36": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This one and a hybrid quasi Newton method which switches between 1st order methods and 2nd order methods.",
                    "label": 0
                },
                {
                    "sent": "So I also omit the details for this approach, but I'd be happy to discuss it.",
                    "label": 0
                }
            ]
        },
        "clip_37": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so the the solver ingredient for all of these are.",
                    "label": 0
                },
                {
                    "sent": "We need products with A and a transpose.",
                    "label": 0
                },
                {
                    "sent": "Right, so we look here.",
                    "label": 0
                },
                {
                    "sent": "We need a an A transpose.",
                    "label": 0
                },
                {
                    "sent": "We need projection.",
                    "label": 0
                },
                {
                    "sent": "That's projectional to defeasible set.",
                    "label": 0
                },
                {
                    "sent": "And to apply the outer framework and with the root finding procedure we also need evaluation with essentially only Kappa polar, but it also helps to evaluate a Kappa, so that's that's the ingredients.",
                    "label": 0
                },
                {
                    "sent": "Anne.",
                    "label": 0
                }
            ]
        },
        "clip_38": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Let's see, so let's.",
                    "label": 0
                },
                {
                    "sent": "Let's also look at the projection, because the projection to the feasible set is done frequently.",
                    "label": 0
                },
                {
                    "sent": "So it also needs to be cheap, of course.",
                    "label": 0
                }
            ]
        },
        "clip_39": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so for basis pursuit, denoise capaz de one run.",
                    "label": 0
                },
                {
                    "sent": "And it turns out that you can do projection onto the one norm.",
                    "label": 0
                },
                {
                    "sent": "Basically, by sorting the original vector, the input vector to be projected and then choosing a certain threshold so that can be done.",
                    "label": 0
                },
                {
                    "sent": "In order N log N operations and if you do it randomized, then the expected runtime becomes ordering.",
                    "label": 0
                },
                {
                    "sent": "OK, so this can be applied to very large problems and actually for this randomized version to work well you need to have really big problems.",
                    "label": 0
                },
                {
                    "sent": "Otherwise they do the sorting just just works just as well.",
                    "label": 0
                }
            ]
        },
        "clip_40": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so for group sparsity where we take the one norm of the order summation of the two norms along either the rows or columns.",
                    "label": 0
                },
                {
                    "sent": "Here.",
                    "label": 0
                },
                {
                    "sent": "It turns out that you can simply compute the two norm of each of the rows or columns.",
                    "label": 0
                },
                {
                    "sent": "Put that in a vector V, then Project V onto the one rumble.",
                    "label": 0
                },
                {
                    "sent": "Of the of the desired radius and then re scale all the entries in each of the rows and columns according to the The factor by which is or skilled.",
                    "label": 0
                },
                {
                    "sent": "OK, so that's basically the same as one or minimization projection onto the one rumble.",
                    "label": 0
                }
            ]
        },
        "clip_41": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "For the nuclear norm, minimization is also similar.",
                    "label": 0
                },
                {
                    "sent": "The first step is really expensive.",
                    "label": 0
                },
                {
                    "sent": "You compute an SVD of the current.",
                    "label": 0
                },
                {
                    "sent": "Matrix X.",
                    "label": 0
                },
                {
                    "sent": "Then you take the singular values.",
                    "label": 0
                },
                {
                    "sent": "You project those onto the one rumble.",
                    "label": 0
                },
                {
                    "sent": "And then you compute U DY AG's at which is the projection times V transpose.",
                    "label": 0
                },
                {
                    "sent": "So you sort of undo the SVD with the new singular values.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "Those are the projections.",
                    "label": 0
                }
            ]
        },
        "clip_42": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Let's see.",
                    "label": 0
                },
                {
                    "sent": "So now we also have all the ingredients.",
                    "label": 0
                },
                {
                    "sent": "We have a solver for the generalized lesu problem, or several.",
                    "label": 0
                },
                {
                    "sent": "Differentiability of the Prado curve.",
                    "label": 0
                },
                {
                    "sent": "Anna practical way of evaluating the gradient.",
                    "label": 0
                }
            ]
        },
        "clip_43": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So let's see.",
                    "label": 0
                },
                {
                    "sent": "Let me just summarize it.",
                    "label": 0
                },
                {
                    "sent": "I'm going a bit fast or slow down a little.",
                    "label": 0
                },
                {
                    "sent": "Anne.",
                    "label": 0
                },
                {
                    "sent": "So we have a framework implemented in MATLAB and it's available online here.",
                    "label": 0
                },
                {
                    "sent": "It's there's several sub problem solvers.",
                    "label": 0
                },
                {
                    "sent": "There's a normal tone, spectrally projected gradient where the non monotone.",
                    "label": 0
                },
                {
                    "sent": "Add refers to the line search, so the line search does not require progress at each iteration.",
                    "label": 0
                },
                {
                    "sent": "And we have a projected quasi Newton method an and hybrid quasi Newton method which is still work in progress.",
                    "label": 0
                },
                {
                    "sent": "OK. And it's also the formulation, so it's source basis pursuit denoise, which is probably the most widely used formulation.",
                    "label": 0
                },
                {
                    "sent": "It solves joint, sparse and multiple measurement vector problems.",
                    "label": 0
                },
                {
                    "sent": "It can also solve sign restricted version, so we want to minimize the one norm of X subject to access non negative or basically the sum of X.",
                    "label": 0
                },
                {
                    "sent": "And also it does support nuclear norm minimization, although this solver or the framework may not be the most applicable, because we need to compute the whole singular value decomposition.",
                    "label": 0
                },
                {
                    "sent": "An penalized formulations typically can take only the top five or so, and just work with that.",
                    "label": 0
                },
                {
                    "sent": "So although it supports it, I wouldn't really recommend using this over for one norm.",
                    "label": 0
                },
                {
                    "sent": "It's a good server, so for basis pursuit denoise, it's not bad.",
                    "label": 0
                },
                {
                    "sent": "Anne.",
                    "label": 0
                },
                {
                    "sent": "So are there any questions on the first part of the talk?",
                    "label": 0
                },
                {
                    "sent": "Nope.",
                    "label": 0
                },
                {
                    "sent": "Talking about the Quasi Newton coalition, what does it mean exactly in the context of the nose route optimization?",
                    "label": 0
                },
                {
                    "sent": "Because it's it's common in the area where all the problems are differentiable, right?",
                    "label": 0
                },
                {
                    "sent": "So that's the.",
                    "label": 0
                }
            ]
        },
        "clip_44": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The hybrid quasi Newton methods right?",
                    "label": 0
                },
                {
                    "sent": "So what this method does is it's.",
                    "label": 0
                },
                {
                    "sent": "It switches between 1st order methods and quasi Newton 2nd order methods so.",
                    "label": 0
                },
                {
                    "sent": "If you take a gradient step or at a certain point and you project it back.",
                    "label": 0
                },
                {
                    "sent": "Right, that's that's on the the one normal.",
                    "label": 0
                },
                {
                    "sent": "That's the constraint.",
                    "label": 0
                },
                {
                    "sent": "The One rumble is less than something.",
                    "label": 0
                },
                {
                    "sent": "So this projection is on one of the faces of this high dimensional ball.",
                    "label": 0
                },
                {
                    "sent": "It can be an edge face in everything.",
                    "label": 0
                },
                {
                    "sent": "So if you'll end on the same face more than once.",
                    "label": 0
                },
                {
                    "sent": "You can make a model along just that face.",
                    "label": 0
                },
                {
                    "sent": "I mean, there's there's.",
                    "label": 0
                },
                {
                    "sent": "If you restrict deatrich to that phase or line or something.",
                    "label": 0
                },
                {
                    "sent": "There's a function on that face.",
                    "label": 0
                },
                {
                    "sent": "So if you if you re parameterized the problem.",
                    "label": 0
                },
                {
                    "sent": "You just need to minimize some quadratic function over the entire space.",
                    "label": 0
                },
                {
                    "sent": "So then you can use Quasi Newton on that phase to make more progress hopefully.",
                    "label": 0
                },
                {
                    "sent": "Because because towards the end, especially the projected 1st order method can be slow.",
                    "label": 0
                },
                {
                    "sent": "Because you project a long way out, maybe while you're almost orthogonal to the face and you project back, you take a tiny little step, but still maybe you need to do a lot of steps.",
                    "label": 0
                },
                {
                    "sent": "So in those cases where you keep grinding away towards the end, then the quasi Newton method slowly takes over.",
                    "label": 0
                },
                {
                    "sent": "So there's some preliminary results on this an I can switch between iterations.",
                    "label": 0
                },
                {
                    "sent": "So you see, initially it's mostly 1st order steps, then gradually you increase the number of 2nd order steps and eventually just second order methods.",
                    "label": 0
                },
                {
                    "sent": "So that's.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_45": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so.",
                    "label": 0
                },
                {
                    "sent": "The second topic is the linear operator toolbox from Matlab, and this this came about because in compressed sensing.",
                    "label": 0
                },
                {
                    "sent": "Almost all the let me see if I can find it.",
                    "label": 0
                }
            ]
        },
        "clip_46": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "All the problems are of this Form 8 * X -- B and it's these are always linear operators.",
                    "label": 0
                },
                {
                    "sent": "And we developed a problem of tests test problems.",
                    "label": 0
                },
                {
                    "sent": "A suite of test problems.",
                    "label": 0
                },
                {
                    "sent": "Basically, to fine tune and to benchmark our solver.",
                    "label": 0
                },
                {
                    "sent": "So then the construction of these operators became tedious and we wanted to have a better way of.",
                    "label": 0
                }
            ]
        },
        "clip_47": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Of doing this, so that's that's where spot came about, so this is joint work.",
                    "label": 0
                },
                {
                    "sent": "With Michael Friedlander, Felix Fermin, Ryans Harbor, North Korea, marsette at UBC.",
                    "label": 0
                }
            ]
        },
        "clip_48": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so there's there's there's many structured linear operators in compressed sensing.",
                    "label": 0
                },
                {
                    "sent": "I'll give some examples later.",
                    "label": 0
                },
                {
                    "sent": "And often there's there's fast implicit representations.",
                    "label": 0
                },
                {
                    "sent": "So, for example, for a DCT or wavelet operator, maybe a blurring operator, those all have fast transformations.",
                    "label": 0
                },
                {
                    "sent": "You don't need to form the whole matrix and apply it, nobody forms a Fourier matrix and then do a matrix vector multiply, right?",
                    "label": 0
                },
                {
                    "sent": "That's just too expensive.",
                    "label": 0
                },
                {
                    "sent": "So if we want to use these fast implicit representations, then usually we need to make function calls, so here.",
                    "label": 0
                }
            ]
        },
        "clip_49": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We see we evaluate the DCT of action and the inverse DCT.",
                    "label": 0
                },
                {
                    "sent": "And the advantage of calling functions is these are fast operations, so these can be order N log.",
                    "label": 0
                },
                {
                    "sent": "And of course, there's no no real memory requirements except for storing the input and output basically.",
                    "label": 0
                },
                {
                    "sent": "So for for DCT.",
                    "label": 0
                },
                {
                    "sent": "You can evaluate very large density matrix vector products because they are implicit.",
                    "label": 0
                },
                {
                    "sent": "A disadvantage, of course, is you cannot really pass this to a function you cannot.",
                    "label": 0
                },
                {
                    "sent": "Well, you could, but it's more complicated.",
                    "label": 0
                },
                {
                    "sent": "And they're very difficult to manipulate.",
                    "label": 0
                },
                {
                    "sent": "I can't say give me the first row of the DCT.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_50": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "At the other extreme is sort of the Matlab approach or the matrix approach.",
                    "label": 0
                },
                {
                    "sent": "So here what we do is we apply a DCT to a identity matrix, which means I query every.",
                    "label": 0
                },
                {
                    "sent": "Every column.",
                    "label": 0
                },
                {
                    "sent": "And form a matrix.",
                    "label": 0
                },
                {
                    "sent": "And then I can just say D * X and Y transpose times Y instead of.",
                    "label": 0
                },
                {
                    "sent": "Calling the functions right.",
                    "label": 0
                },
                {
                    "sent": "So the advantage of this is you can pass into function and are easy to manipulate, but it doesn't scale very well.",
                    "label": 0
                },
                {
                    "sent": "So if we have a.",
                    "label": 0
                },
                {
                    "sent": "A 16,000 square DCT then it might not even fit in memory anymore and it's just too slow.",
                    "label": 0
                }
            ]
        },
        "clip_51": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So what sport was designed for is to take advantage of the best of both worlds, where we just define an operator, opt, ECT.",
                    "label": 0
                },
                {
                    "sent": "And what is a size 16?",
                    "label": 0
                },
                {
                    "sent": "And then you get an implicit operator and you can just just like here you can just multiply by D&D transpose.",
                    "label": 0
                },
                {
                    "sent": "And the advantage of this is it fast operations and low memory requirements and the other advantages are you can pass it to a function an you can easily manipulate it.",
                    "label": 0
                },
                {
                    "sent": "So that's sort of an operator version of the matrices.",
                    "label": 0
                }
            ]
        },
        "clip_52": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So to use it, of course, we first need to instantiate elementary spot operators, just like in Matlab.",
                    "label": 0
                },
                {
                    "sent": "You can start with the matrix.",
                    "label": 0
                },
                {
                    "sent": "Then we need to have a way to manipulate and combine them, because if we just have the original entry, might just as well use the functions.",
                    "label": 0
                },
                {
                    "sent": "We need to be able to apply them, obviously an.",
                    "label": 0
                },
                {
                    "sent": "The last point is how to implement new operators.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_53": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So let's first look at how to apply them, and then it makes makes things a bit more concrete.",
                    "label": 0
                }
            ]
        },
        "clip_54": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So in spot operators are designed to work on vectors, so it's all about matrices and matrix vector product so.",
                    "label": 0
                },
                {
                    "sent": "All data is vectorized.",
                    "label": 0
                },
                {
                    "sent": "If you have an image you just work with the vectorized version of the image.",
                    "label": 0
                },
                {
                    "sent": "Internally, data can be reshaped if needed.",
                    "label": 0
                },
                {
                    "sent": "So if you want to do a 2 dimensional FFT, then initially internally knows the dimension of the actual end by North.",
                    "label": 0
                },
                {
                    "sent": "And it will reshape the input to N by N and then apply the 2D DfT.",
                    "label": 0
                },
                {
                    "sent": "But the operator itself is M * N. That's the size of the image by an M * N.",
                    "label": 0
                }
            ]
        },
        "clip_55": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, an application is similar to matrix vector products, so it's always you apply operator D2 X.",
                    "label": 0
                },
                {
                    "sent": "You get another output.",
                    "label": 0
                },
                {
                    "sent": "You can do Y transpose times D, which is just the same as taking D, transpose Y transpose.",
                    "label": 0
                },
                {
                    "sent": "So that's how things are implemented.",
                    "label": 0
                },
                {
                    "sent": "If we do an operator times of matrix product that's done by simply applying the operator to each of the columns and then combining them to the final result.",
                    "label": 0
                },
                {
                    "sent": "Because they have to look like matrices, we want to be able to query information such as size.",
                    "label": 0
                },
                {
                    "sent": "We want to be able to display them and check if they are empty, for example.",
                    "label": 0
                },
                {
                    "sent": "An another useful feature actually is that the operator keeps track of how many times it's been applied.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "You can just pass this to most.",
                    "label": 0
                },
                {
                    "sent": "Most existing functions, if they don't check or do very matrix specific operations.",
                    "label": 0
                },
                {
                    "sent": "And then it will just keep track of how many times it's called.",
                    "label": 0
                },
                {
                    "sent": "So even if you have a solver that you don't want to edit and you don't know the internals, you can still check the performance in terms of number of matrix vector multiplies without touching the code.",
                    "label": 0
                },
                {
                    "sent": "So that's a useful useful function for benchmarking.",
                    "label": 0
                }
            ]
        },
        "clip_56": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so let's let's go over some elementary operations.",
                    "label": 0
                },
                {
                    "sent": "There's identity Operator 0, so once an diagonal that's just the basic Matlab operations, you can wrap a matrix into an operator an you can for example, so do a big Gaussian matrix or a big binary matrix.",
                    "label": 0
                },
                {
                    "sent": "So those those appear often in compressed sensing.",
                    "label": 0
                },
                {
                    "sent": "An especially for big Gaussians, they may not fit in memory.",
                    "label": 0
                },
                {
                    "sent": "But if you store the random number seeds at each column, for example, you can just apply them and generate them on the fly while multiplying.",
                    "label": 0
                },
                {
                    "sent": "So that's job Gaussian operation the same for binary.",
                    "label": 0
                }
            ]
        },
        "clip_57": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So then there's of course, fast transformations.",
                    "label": 0
                },
                {
                    "sent": "These are wrappers to curvelet operators and surface.",
                    "label": 0
                },
                {
                    "sent": "Let's an.",
                    "label": 0
                },
                {
                    "sent": "Then there's the more traditional discrete cosine transform for one 2 dimensional signals.",
                    "label": 0
                },
                {
                    "sent": "Discrete Fourier for one and two dimensional.",
                    "label": 0
                },
                {
                    "sent": "Again an wavelets.",
                    "label": 0
                },
                {
                    "sent": "So here for example, we construct a 2 dimensional discrete Fourier transform.",
                    "label": 0
                },
                {
                    "sent": "Anne.",
                    "label": 0
                },
                {
                    "sent": "Of size M by N. So this will give an operator of M * N by M * N. Then there's.",
                    "label": 0
                }
            ]
        },
        "clip_58": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Yet others or heavyside operator which is once on and below the diagonal and zeros above.",
                    "label": 0
                },
                {
                    "sent": "An audemar matrices and toplitz and those.",
                    "label": 0
                },
                {
                    "sent": "Of course fast transformations.",
                    "label": 0
                },
                {
                    "sent": "Ann and the convolutions already showed the convolution operator on the Penguin with some blurring mask, and there's regular, truncated and cyclic versions.",
                    "label": 0
                },
                {
                    "sent": "For the convolution, you basically give it the size of the input and by in a 2 dimensional kernel.",
                    "label": 0
                },
                {
                    "sent": "A coordinate within the kernel that should be the center.",
                    "label": 0
                },
                {
                    "sent": "And one of these three types.",
                    "label": 0
                },
                {
                    "sent": "And it's based on it's implemented using the discrete Fourier transform, so it's also fast.",
                    "label": 0
                }
            ]
        },
        "clip_59": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so once we've instantiated some of these elementary operators we want to do something with them, otherwise it will be pretty pointless.",
                    "label": 0
                },
                {
                    "sent": "So the first thing of course is multiplication.",
                    "label": 0
                },
                {
                    "sent": "And here what we do is we multiply 1 operator times another, so both of them are spot operators, so that gives a new my new operator, so implicit if one of these were matrix, anytime we see a matrix or vector and a multiplication, we evaluate it.",
                    "label": 0
                },
                {
                    "sent": "So these are two operators and we form a new one.",
                    "label": 0
                },
                {
                    "sent": "We can just do scaling and negation.",
                    "label": 0
                },
                {
                    "sent": "So that's that's the basic multiplication.",
                    "label": 0
                }
            ]
        },
        "clip_60": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "In addition, we can.",
                    "label": 0
                },
                {
                    "sent": "Add matrix operators together.",
                    "label": 0
                },
                {
                    "sent": "Just like he ran, if we then multiply y * 8 is the same as first summing them and then multiplying.",
                    "label": 0
                },
                {
                    "sent": "And we can also add matrices, so in this in this case what we do, we first transform this M2A and operator and then add them together.",
                    "label": 0
                },
                {
                    "sent": "So that forms a new implicit operator.",
                    "label": 0
                }
            ]
        },
        "clip_61": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And then of course usual transpose conjugation, so complex conjugate, or just the complex transpose?",
                    "label": 0
                },
                {
                    "sent": "Those are implemented?",
                    "label": 0
                }
            ]
        },
        "clip_62": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Dictionaries are one of the main reasons why we implemented the operator toolbox to start with, because in compressed sensing often you have sparsity not in one basis but in different basis.",
                    "label": 0
                },
                {
                    "sent": "So an operator signal can be sparse in a DCT and identity matrix and something else.",
                    "label": 0
                },
                {
                    "sent": "I'll give an example of that later so.",
                    "label": 0
                },
                {
                    "sent": "Basically, dictionaries are combination.",
                    "label": 0
                },
                {
                    "sent": "You put the matrices next to each other in one big operator.",
                    "label": 0
                },
                {
                    "sent": "OK, so we can do this horizontally, vertically and of course just the whole matrix way of doing this.",
                    "label": 0
                }
            ]
        },
        "clip_63": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Another way to combine them is to make a block diagonal operator where each operator sits on the diagonal.",
                    "label": 0
                },
                {
                    "sent": "Then there's an overlap factor, which allows you to squeeze the operators or squeeze them vertically.",
                    "label": 0
                },
                {
                    "sent": "I'm not sure I've seen any application, but it's it's there.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                }
            ]
        },
        "clip_64": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so for high dimensional.",
                    "label": 0
                },
                {
                    "sent": "Operations is sometimes useful to form Kronecker products.",
                    "label": 0
                },
                {
                    "sent": "So here we can take the Kronecker product of A&B&C just by by typing chronicler of these three and that will make a very large implicit matrix.",
                    "label": 0
                }
            ]
        },
        "clip_65": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So here's an example.",
                    "label": 0
                },
                {
                    "sent": "If we've ioncube data volume.",
                    "label": 0
                },
                {
                    "sent": "And we want to do a Fourier transformation along a single dimension.",
                    "label": 0
                },
                {
                    "sent": "Then we can just form a DfT of size N and an identity of size N. And form one of these three Kronecker products.",
                    "label": 0
                },
                {
                    "sent": "An just just apply them so the first one would apply it in this direction.",
                    "label": 0
                },
                {
                    "sent": "Second one will do it in this direction.",
                    "label": 0
                },
                {
                    "sent": "And third one would apply it into third dimension.",
                    "label": 0
                },
                {
                    "sent": "So of course in this example you may better write a function to do that or or something.",
                    "label": 0
                },
                {
                    "sent": "But if you then want to combine this with yet other operations, then it's better to just use the toolbox.",
                    "label": 0
                }
            ]
        },
        "clip_66": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so to continue the muscle up way of combining operations and everything.",
                    "label": 0
                },
                {
                    "sent": "We can also do slicing.",
                    "label": 0
                },
                {
                    "sent": "We can index rows or columns of an operator.",
                    "label": 0
                },
                {
                    "sent": "Or just a subset of so we just extract a rectangular subset of the entries.",
                    "label": 0
                },
                {
                    "sent": "But of course the matrix is still never formed.",
                    "label": 0
                }
            ]
        },
        "clip_67": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Implicit.",
                    "label": 0
                },
                {
                    "sent": "One example of this is the randomly restricted Fourier.",
                    "label": 0
                },
                {
                    "sent": "So we generate the Fourier matrix.",
                    "label": 0
                },
                {
                    "sent": "We permute 1 to 128.",
                    "label": 0
                },
                {
                    "sent": "Just randomly shuffle it.",
                    "label": 0
                },
                {
                    "sent": "Take the first 50 entries and choose those rows so this this would compute.",
                    "label": 0
                }
            ]
        },
        "clip_68": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Then there's assignment.",
                    "label": 0
                },
                {
                    "sent": "We can assign either an operator or matrix to a subset of the entries.",
                    "label": 0
                },
                {
                    "sent": "We can cut out rows or columns just by assigning the empty.",
                    "label": 0
                },
                {
                    "sent": "An empty set.",
                    "label": 0
                }
            ]
        },
        "clip_69": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Finally, there's a pseudoinverse.",
                    "label": 0
                },
                {
                    "sent": "Or a\\ operation.",
                    "label": 0
                },
                {
                    "sent": "Anne.",
                    "label": 0
                },
                {
                    "sent": "So if we want to solve for a axis is equal to B or approximately be we type A\\ B in MATLAB.",
                    "label": 0
                },
                {
                    "sent": "And get the solution.",
                    "label": 0
                },
                {
                    "sent": "What we can also do equivalently is we can divine the pseudo inverse of a that gives a new operator.",
                    "label": 0
                },
                {
                    "sent": "And then we can apply that operator on any vector or combine it with yet others and do whatever we want.",
                    "label": 0
                },
                {
                    "sent": "OK, So what happens here is in the overdetermined systems we solve AX minus B tunam minimize it.",
                    "label": 0
                },
                {
                    "sent": "So that gives a unique solution.",
                    "label": 0
                },
                {
                    "sent": "Underdetermined gives the minimized least two norm solution to ax equals to be.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "So these are linear systems and their solve by LSQR.",
                    "label": 0
                },
                {
                    "sent": "So that's not external.",
                    "label": 0
                }
            ]
        },
        "clip_70": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Edge.",
                    "label": 0
                },
                {
                    "sent": "So often we have a function that implements some operator and its transpose.",
                    "label": 0
                },
                {
                    "sent": "So maybe we just want to wrap that as an operator as well, so we can we.",
                    "label": 0
                },
                {
                    "sent": "Here we have a function and you apply it to X.",
                    "label": 0
                },
                {
                    "sent": "That's the one and here we do the transpose of the operation, apply it to Y and get X.",
                    "label": 0
                },
                {
                    "sent": "So these are two function calls.",
                    "label": 0
                },
                {
                    "sent": "What we can also do is we can wrap it as a operator.",
                    "label": 0
                },
                {
                    "sent": "We say this is N by N. This is the function handle and this indicates whether it's complex or not.",
                    "label": 0
                },
                {
                    "sent": "OK, so here we just apply F on X, which is exactly the same as the first line and this is this is the 2nd way of combining it.",
                    "label": 0
                }
            ]
        },
        "clip_71": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And maybe you already have a class implementation, so it's instead of a function is a class, and you can also wrap those into operators and then combine them, slice them and do whatever you want with it.",
                    "label": 0
                }
            ]
        },
        "clip_72": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Of course, if you want to generate a new class altogether, you can just derive it from the op spot class.",
                    "label": 0
                },
                {
                    "sent": "Write the constructor.",
                    "label": 0
                },
                {
                    "sent": "Implement the multiply an if necessary, you can.",
                    "label": 0
                },
                {
                    "sent": "Overload some more more functions and other operations to make them more efficient.",
                    "label": 0
                }
            ]
        },
        "clip_73": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so let me just give a couple of examples how they are used in compressed sensing and sparse recovery.",
                    "label": 0
                },
                {
                    "sent": "So this this was the example I showed at the very beginning, the sparse X and here we need to evaluate 8 * X.",
                    "label": 0
                },
                {
                    "sent": "And a in this case was a restricted DCT operator.",
                    "label": 0
                },
                {
                    "sent": "So here we first create the DCT operator.",
                    "label": 0
                },
                {
                    "sent": "After we select a number of rows that we want to keep, we just index the operator and get a new operator.",
                    "label": 0
                },
                {
                    "sent": "And then we recover X by calling SVG 01, where we say a is the matrix BSDD observed vector.",
                    "label": 0
                },
                {
                    "sent": "And this this is the misfit.",
                    "label": 0
                },
                {
                    "sent": "This value gives gives out the maximum norm of the one norm.",
                    "label": 0
                },
                {
                    "sent": "This is empty an initial X, which is also empty, so it will just solve minimize the one or minimize the one norm of X subject to AX minus B2 enormous less than Sigma.",
                    "label": 0
                },
                {
                    "sent": "That will give X and.",
                    "label": 0
                },
                {
                    "sent": "Then you can do further processing with that.",
                    "label": 0
                }
            ]
        },
        "clip_74": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Here's another example of compressed sensing.",
                    "label": 0
                },
                {
                    "sent": "I hope your signal is a bit visible, but it's sort of a smooth signal here with some spikes.",
                    "label": 0
                },
                {
                    "sent": "So the problem here that is that this signal is not sparse in the DCT domain.",
                    "label": 0
                },
                {
                    "sent": "But it's not sparse in the identity domain either.",
                    "label": 0
                },
                {
                    "sent": "But if you combine them then then there's a couple of rows you can add together with the proper ways to form this signal.",
                    "label": 0
                },
                {
                    "sent": "Right?",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "If we combine them in dictionary B, then this this signal is B * X, where X is sparse.",
                    "label": 0
                },
                {
                    "sent": "And suppose we want to measure this indirectly with with a Gaussian matrix.",
                    "label": 0
                },
                {
                    "sent": "So here for example, we have a 1000 square DCT operator plus a 1000 square identity matrix.",
                    "label": 0
                },
                {
                    "sent": "Combine it into 1000 by 2000 dictionary.",
                    "label": 0
                },
                {
                    "sent": "An we measure this signal with 480 Gaussians OK. We could also do a matrix of random 480 by 1024 here, but it's equivalent in this case OK?",
                    "label": 0
                },
                {
                    "sent": "So because we measure the dictionary times X, we form a matrix A. HM Times B.",
                    "label": 0
                },
                {
                    "sent": "So in that case B becomes a * X. OK, and based on that we want to recover.",
                    "label": 0
                },
                {
                    "sent": "So we apply this over with.",
                    "label": 0
                },
                {
                    "sent": "With A&B we get a solution that is sparse.",
                    "label": 0
                },
                {
                    "sent": "X hat.",
                    "label": 0
                },
                {
                    "sent": "And if we then apply B on X hat, we get back the original signal, so that's that's an illustration of this magic of compressed sensing where you recover a signal of 1024 from only 480 measurements.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_75": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Here is another example of sparse recovery, which which is easy to implement with the spot framework.",
                    "label": 0
                },
                {
                    "sent": "Here we have a signal that is exactly sparse in the DCT domain, so V is D transpose X.",
                    "label": 0
                },
                {
                    "sent": "And what we then do is we only see a couple of those entries.",
                    "label": 0
                },
                {
                    "sent": "So we see the red dots only.",
                    "label": 0
                },
                {
                    "sent": "So we can either form a restriction operator which select some rows, or it's basically a identity matrix with zeros and one on the diagonal, and then we leave out all the rows that are 0.",
                    "label": 0
                },
                {
                    "sent": "So that's a restriction.",
                    "label": 0
                },
                {
                    "sent": "We can either multiply the DCT by the restriction, or we can just select the appropriate rows of DNN, transpose it.",
                    "label": 0
                },
                {
                    "sent": "Formulation here.",
                    "label": 0
                },
                {
                    "sent": "OK, so with this A and this B we can then solve the one minimization problem again.",
                    "label": 0
                },
                {
                    "sent": "We get back in an X.",
                    "label": 0
                },
                {
                    "sent": "And then we reconstruct the original signal by applying the DCT.",
                    "label": 0
                },
                {
                    "sent": "So again, in this case, even though we just see all the red dots here, we can exactly reconstruct the original signal using L1 minimization.",
                    "label": 0
                },
                {
                    "sent": "So even even though some of these peaks I think.",
                    "label": 0
                },
                {
                    "sent": "In this case, all the peaks are there, but maybe this this because for example not observed, but you still exactly recover that.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "So that's.",
                    "label": 0
                },
                {
                    "sent": "Best.",
                    "label": 0
                }
            ]
        },
        "clip_76": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The example for inpainting.",
                    "label": 0
                },
                {
                    "sent": "And then deblurring.",
                    "label": 0
                },
                {
                    "sent": "We've already seen the formulation where we have a wavelet and a blurring operator.",
                    "label": 0
                },
                {
                    "sent": "Here we construct a wavelet operator for an end by end signal with the higher wavelength.",
                    "label": 0
                },
                {
                    "sent": "So that's a square signal.",
                    "label": 0
                },
                {
                    "sent": "A convolution also of size N by N with a certain mask.",
                    "label": 0
                },
                {
                    "sent": "I think I chose a Gaussian kernel, truncated Gaussian kernel for blurring.",
                    "label": 0
                },
                {
                    "sent": "Anne, it's cyclic.",
                    "label": 0
                },
                {
                    "sent": "So all the points that are above it will wrap back up to defeat which, which is why you can see a little bit of defeat here is just as an example.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "So we can combine these in operator A.",
                    "label": 0
                },
                {
                    "sent": "And then once we have X hat by solving a minimalization problem, we can reconstruct the Penguin by applying the wavelet transpose or the synthesis operator OK.",
                    "label": 0
                }
            ]
        },
        "clip_77": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So that's the linear operator toolbox, so it was developed to go with the sparse solver in particular, but it's useful for prototyping operators, complex operators very quickly.",
                    "label": 0
                },
                {
                    "sent": "Performance is usually OK if you really have very specialized operators.",
                    "label": 0
                },
                {
                    "sent": "Then it's useful to prototype with spot and then implement them once.",
                    "label": 0
                },
                {
                    "sent": "Once you see it works.",
                    "label": 0
                },
                {
                    "sent": "If you want to try a lot of different transformations, you don't want to.",
                    "label": 0
                },
                {
                    "sent": "Implement all of them and then and then roll it out.",
                    "label": 0
                },
                {
                    "sent": "You just want to first try it and then implement the final choice.",
                    "label": 0
                }
            ]
        },
        "clip_78": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so the any any questions on the linear operator toolbox?",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "Use it for PGL.",
                    "label": 0
                },
                {
                    "sent": "Do you do?",
                    "label": 0
                },
                {
                    "sent": "Do you do any preconditioning on these operators?",
                    "label": 0
                },
                {
                    "sent": "Is that something that no no.",
                    "label": 0
                },
                {
                    "sent": "I don't think it would work probably well.",
                    "label": 0
                },
                {
                    "sent": "We want to minimize the misfit write AX minus B2 norm subject to X. I've not seen any preconditioning in this this kind of problem here, so in some sense right, you have these prepare.",
                    "label": 0
                },
                {
                    "sent": "Prepared DST, right?",
                    "label": 0
                },
                {
                    "sent": "Awkward parent thing and then apply, whereas here preparation step could be baked into the construction of the matrix operator, right?",
                    "label": 0
                },
                {
                    "sent": "Yeah, I think I think actually model up should have something like this for complicated operators.",
                    "label": 0
                },
                {
                    "sent": "Of course it's a MATLAB matrix selector.",
                    "label": 0
                },
                {
                    "sent": "Don't have it, but I think for things like wavelets maybe maybe I don't want to know all the details of how to call a wavelet operator where you have to 1st construct some filter and do stuff and so I think that's a more natural way here.",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "Yeah, but of course there's a little overhead because of the implementation.",
                    "label": 0
                },
                {
                    "sent": "The object oriented system in Matlab is not really great idea, but it works.",
                    "label": 0
                },
                {
                    "sent": "Remember folks as similar support for linear operators or distance away, you construct listed sequences, right?",
                    "label": 0
                },
                {
                    "sent": "Yes.",
                    "label": 0
                },
                {
                    "sent": "Operators in street scene yeah.",
                    "label": 0
                },
                {
                    "sent": "I'm not so sure.",
                    "label": 0
                },
                {
                    "sent": "So what are they?",
                    "label": 0
                },
                {
                    "sent": "More advanced features here what?",
                    "label": 0
                },
                {
                    "sent": "There.",
                    "label": 0
                },
                {
                    "sent": "So I think T folks allows a function to be passed.",
                    "label": 0
                },
                {
                    "sent": "I don't think they have all these routines to construct DCT operators and everything.",
                    "label": 0
                },
                {
                    "sent": "Can do certain things, for instance.",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "I told them to implement, make it sport compatible.",
                    "label": 0
                },
                {
                    "sent": "So basically if you just if your code just does 8 * X or a transpose times X.",
                    "label": 0
                },
                {
                    "sent": "And then, then there's no additional changes you need to do to your code to use pot.",
                    "label": 0
                },
                {
                    "sent": "Only if you say is matrix A and then otherwise if it's a function and things get a bit otherwise, it shouldn't matter, because I don't think T Fox uses anything other than matrix vector multiplies.",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "Anne.",
                    "label": 0
                },
                {
                    "sent": "Yeah, but I'm not sure what is implemented right now.",
                    "label": 0
                },
                {
                    "sent": "Right now, yeah.",
                    "label": 0
                },
                {
                    "sent": "Being updated.",
                    "label": 0
                },
                {
                    "sent": "I, I'm not sure I think.",
                    "label": 0
                },
                {
                    "sent": "I think they're trying to make a connection with VX.",
                    "label": 0
                },
                {
                    "sent": "But I'm not sure how far they got or how far they want to push it.",
                    "label": 0
                },
                {
                    "sent": "So, but it should be compatible, otherwise there may be a sort of a wrapper function that you can write, which is a bit pointless in some sense.",
                    "label": 0
                },
                {
                    "sent": "You have to write a function to represent an operator.",
                    "label": 0
                },
                {
                    "sent": "Yeah, but it should be, otherwise it should be compatible.",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "OK, so let's let's move on to the third topic.",
                    "label": 0
                },
                {
                    "sent": "I prototype framework for discipline massive computing, so this is joint work with David Donna Hood Statistics Department at Stanford.",
                    "label": 0
                }
            ]
        },
        "clip_79": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So what is it?",
                    "label": 0
                },
                {
                    "sent": "It's a system for setting up and managing structured batches of jobs, basically.",
                    "label": 0
                },
                {
                    "sent": "It also contains a database which stores the jobs and also stores all the results.",
                    "label": 0
                },
                {
                    "sent": "Plus an easy to use interface that's designed for expressiveness.",
                    "label": 0
                },
                {
                    "sent": "So there's there's a number of different objectives here.",
                    "label": 0
                },
                {
                    "sent": "That we wanted to work on.",
                    "label": 0
                },
                {
                    "sent": "Also, it allows for formatted output based on the structure of the job, so you form a job and based on the structure it can do smarter formatting.",
                    "label": 0
                },
                {
                    "sent": "So importantly, it's a prototype, so it probably raises more design questions than answers, so there's there's several parts of the talk where there's just a lot of work to be done, or various different options to implement it.",
                    "label": 0
                },
                {
                    "sent": "OK, so any any questions, suggestions are welcome and maybe we can even make it into a bit over this.",
                    "label": 0
                }
            ]
        },
        "clip_80": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Discussion, so this is typically how I work in terms of generating results, generating figures out, putting tables and everything.",
                    "label": 0
                },
                {
                    "sent": "I have a function that generate figure with some export flag.",
                    "label": 0
                },
                {
                    "sent": "Do I want to just show it on the screen or do I want to export it to a figure?",
                    "label": 0
                },
                {
                    "sent": "Then I get the location of all the figure directories.",
                    "label": 0
                },
                {
                    "sent": "It could be.",
                    "label": 0
                },
                {
                    "sent": "Maybe the current directory slash figure.",
                    "label": 0
                },
                {
                    "sent": "Then for how many parameters you want to do, you run some experiments.",
                    "label": 0
                },
                {
                    "sent": "You get some data, you do some operations, you plot it.",
                    "label": 0
                },
                {
                    "sent": "And at the end, if you want to export it, you export it to a PDF and you get your output file.",
                    "label": 0
                }
            ]
        },
        "clip_81": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So here there's the run experiments.",
                    "label": 0
                },
                {
                    "sent": "Anne Anne here.",
                    "label": 0
                },
                {
                    "sent": "What it does it gets there.",
                    "label": 0
                },
                {
                    "sent": "The location of the cache directory.",
                    "label": 0
                },
                {
                    "sent": "Where do I store my intermediate results?",
                    "label": 0
                },
                {
                    "sent": "I form a filename based on the cash plus filename.",
                    "label": 0
                },
                {
                    "sent": "40 specific parameters.",
                    "label": 0
                },
                {
                    "sent": "So maybe if I have 123I I add 1, two or three at the end.",
                    "label": 0
                },
                {
                    "sent": "Then I check if the file exists.",
                    "label": 0
                },
                {
                    "sent": "If it does, I load it and extract the data field.",
                    "label": 0
                },
                {
                    "sent": "Otherwise I really run the time consuming experiments and I save the results and in all cases you just return the data.",
                    "label": 0
                }
            ]
        },
        "clip_82": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so.",
                    "label": 0
                },
                {
                    "sent": "The advantage of this is it's reproducible.",
                    "label": 0
                },
                {
                    "sent": "It's an exact way of generating the data, and then you always block the same and also if you want to go back to your plot half year or two years later, you can just easily generate the figure.",
                    "label": 0
                },
                {
                    "sent": "It always uses precomputed results whenever possible, so that saves a lot of time.",
                    "label": 0
                },
                {
                    "sent": "An if you want to recompute it, you just delete all the cache files and recompute it so you can distribute this code as one.",
                    "label": 0
                },
                {
                    "sent": "The code to the cache files.",
                    "label": 0
                },
                {
                    "sent": "If people want to rerun everything and reproduce it, they can.",
                    "label": 0
                },
                {
                    "sent": "If they just say I want to regenerate the figures, they load the data and the files, and you can just regenerate the figures.",
                    "label": 0
                },
                {
                    "sent": "So the disadvantage?",
                    "label": 0
                },
                {
                    "sent": "Well the partial disadvantages, it's a repetitive pattern for all of the figures and tables and experiments, so it's repetitive, which makes it easy.",
                    "label": 0
                },
                {
                    "sent": "But of course it's tedious to rewrite this every single time you do something.",
                    "label": 0
                },
                {
                    "sent": "Then there's also no consistency guarantees with respect to code changes.",
                    "label": 0
                },
                {
                    "sent": "So if I change the run experiment code and I still have some existing cache cache files that were generated with the previous version, then it's no longer consistent.",
                    "label": 0
                },
                {
                    "sent": "If I want to do parallel computing here, I need to manually call the run experiment function on different set of parameters, so that's not very convenient.",
                    "label": 0
                },
                {
                    "sent": "And also the intention or the goal of the experiment is not not very.",
                    "label": 0
                }
            ]
        },
        "clip_83": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Clear so if you look at this you just do something and you don't really know what's going on.",
                    "label": 0
                }
            ]
        },
        "clip_84": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So what would be the ideal system?",
                    "label": 0
                },
                {
                    "sent": "And this is just sort of what we wanted to aim for.",
                    "label": 0
                },
                {
                    "sent": "And of course this is difficult.",
                    "label": 0
                },
                {
                    "sent": "So we we developed a system that some part of this.",
                    "label": 0
                },
                {
                    "sent": "So ideally you have a high level description language that is self documenting.",
                    "label": 0
                },
                {
                    "sent": "So the minimum set of.",
                    "label": 0
                },
                {
                    "sent": "Keywords or commands.",
                    "label": 0
                },
                {
                    "sent": "It explains a experiments and also explains what you want to show.",
                    "label": 0
                },
                {
                    "sent": "So maybe we want to say.",
                    "label": 0
                },
                {
                    "sent": "I would like to see the.",
                    "label": 0
                },
                {
                    "sent": "The residual of the one or misfit as a function of tower, something like this and then it would just solve it so it would automatically generate and execute some workflow with easy access to the results and automate the data in a database.",
                    "label": 0
                },
                {
                    "sent": "And be fully reproducible and also traceable.",
                    "label": 0
                },
                {
                    "sent": "So once you have a result you can exactly see what is the provenance.",
                    "label": 0
                },
                {
                    "sent": "Well, how was this result generated?",
                    "label": 0
                },
                {
                    "sent": "So this would be the ideal system.",
                    "label": 0
                },
                {
                    "sent": "Of course I didn't implement this.",
                    "label": 0
                }
            ]
        },
        "clip_85": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So in terms of the high language language, high level language, there's some challenges of course so.",
                    "label": 0
                },
                {
                    "sent": "First you need to find an appropriate scope.",
                    "label": 0
                },
                {
                    "sent": "You cannot develop a high level language that does everything, I think.",
                    "label": 0
                },
                {
                    "sent": "If you have one, let me know that will be useful, but I don't think it is possible.",
                    "label": 0
                },
                {
                    "sent": "So you want something to be simple but expressive enough to be useful so you don't want some software that can just do one thing in one or two commands to be very easy to use, but cannot solve many problems.",
                    "label": 0
                },
                {
                    "sent": "Of course, you also don't want to develop a completely new language that can also replace C or something, right?",
                    "label": 0
                },
                {
                    "sent": "There's some somewhere in between where you have a very simple.",
                    "label": 0
                },
                {
                    "sent": "Language that is also very powerful and I think one example of this is CVS where.",
                    "label": 0
                },
                {
                    "sent": "You can learn it in 5 minutes, but it's powerful enough to solve a lot of problems.",
                    "label": 0
                }
            ]
        },
        "clip_86": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So for the scope of the of the projects, I went through several decades of different journals and see what kind of results do they show.",
                    "label": 0
                },
                {
                    "sent": "What is the format of them an?",
                    "label": 0
                },
                {
                    "sent": "Often what you see, it's sort of a number of curves for different methods for different, maybe problem sizes.",
                    "label": 0
                },
                {
                    "sent": "In some outcomes, that's that's one type of experiment.",
                    "label": 0
                },
                {
                    "sent": "Maybe you have a 2 dimensional surface plot.",
                    "label": 0
                },
                {
                    "sent": "Of a number of different parameters, maybe Monte Carlo samples.",
                    "label": 0
                },
                {
                    "sent": "Or very often a table that compares method one and two for different settings and show different results.",
                    "label": 0
                },
                {
                    "sent": "So these are the type of problems that often arise in all of these.",
                    "label": 0
                },
                {
                    "sent": "Is OK, I give you an Alpha animator.",
                    "label": 0
                },
                {
                    "sent": "A couple of those an you map it to a function so you can parallelize the computation for each Alpha and beta pair.",
                    "label": 0
                },
                {
                    "sent": "Here you can parallelize, maybe each each side of N at each of the methods in independently.",
                    "label": 0
                },
                {
                    "sent": "Here you can independently compute each trace, and here maybe individually you can.",
                    "label": 0
                },
                {
                    "sent": "Run each method which each different parameter settings.",
                    "label": 0
                },
                {
                    "sent": "So these decompose easily.",
                    "label": 0
                },
                {
                    "sent": "So how can we express this this kind?",
                    "label": 0
                }
            ]
        },
        "clip_87": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Of.",
                    "label": 0
                },
                {
                    "sent": "Problems.",
                    "label": 0
                },
                {
                    "sent": "So for example, if we want to compute the performance of three algorithms on different problems, right?",
                    "label": 0
                },
                {
                    "sent": "So the framework I implemented allows you to specify this follows.",
                    "label": 0
                },
                {
                    "sent": "You say there's some options function 1, two and three.",
                    "label": 0
                },
                {
                    "sent": "An hour will explain what functions are here.",
                    "label": 0
                },
                {
                    "sent": "Those are the function options.",
                    "label": 0
                },
                {
                    "sent": "Then there's problem options.",
                    "label": 0
                },
                {
                    "sent": "You want to three those.",
                    "label": 0
                },
                {
                    "sent": "Those are also options, and that gives another set.",
                    "label": 0
                },
                {
                    "sent": "Now I want to evaluate all of the different combinations.",
                    "label": 0
                },
                {
                    "sent": "So I say all the options are the function options times the problem options.",
                    "label": 0
                },
                {
                    "sent": "And in this case it would compute nine different tuples of parameters.",
                    "label": 0
                },
                {
                    "sent": "OK, then I say within the current project evaluate these these options and give me some job identifiers.",
                    "label": 0
                },
                {
                    "sent": "And once I get the results, you can say demco tabulates from the tickets.",
                    "label": 0
                },
                {
                    "sent": "The output fields have named results, so I say give me the iterations as and plot them as it are and give me the runtime field.",
                    "label": 0
                },
                {
                    "sent": "And tabulate it so the result of that would be.",
                    "label": 0
                }
            ]
        },
        "clip_88": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Be a table.",
                    "label": 0
                },
                {
                    "sent": "It knows that its functions times problem, so it knows the structure of this table.",
                    "label": 0
                },
                {
                    "sent": "It also knows that these are functions, so it just gives some default labels.",
                    "label": 0
                },
                {
                    "sent": "It just outputs everything, so that's sort of the high level.",
                    "label": 0
                },
                {
                    "sent": "Output here, most of most of the framework itself is in the first 4 lines.",
                    "label": 0
                },
                {
                    "sent": "I've only written one output formatting routine, but it knows about the structure and this is sort of.",
                    "label": 0
                },
                {
                    "sent": "What do you want to do and how do I do it right?",
                    "label": 0
                },
                {
                    "sent": "This is sort of 1 to one mapping.",
                    "label": 0
                }
            ]
        },
        "clip_89": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so the system.",
                    "label": 0
                }
            ]
        },
        "clip_90": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Reviews as follows.",
                    "label": 0
                },
                {
                    "sent": "There's a front end which has interfaces.",
                    "label": 0
                },
                {
                    "sent": "I think in my flippin Python right now.",
                    "label": 0
                },
                {
                    "sent": "Can they communicate with an engine and a local database?",
                    "label": 0
                },
                {
                    "sent": "That specifies an external database that contains all the results.",
                    "label": 0
                },
                {
                    "sent": "An all the jobs Ann.",
                    "label": 0
                },
                {
                    "sent": "And then there's a back end which looks at the job.",
                    "label": 0
                },
                {
                    "sent": "So the flow.",
                    "label": 0
                }
            ]
        },
        "clip_91": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "As follows.",
                    "label": 0
                },
                {
                    "sent": "From Matlab, which I generate some jobs.",
                    "label": 0
                },
                {
                    "sent": "And the engine will then communicate with the database of course.",
                    "label": 0
                }
            ]
        },
        "clip_92": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And it just returns some job IDs.",
                    "label": 0
                }
            ]
        },
        "clip_93": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "The dump dispatcher looks at the database.",
                    "label": 0
                },
                {
                    "sent": "Say there's new jobs.",
                    "label": 0
                },
                {
                    "sent": "Let me submit them to some computational platform.",
                    "label": 1
                }
            ]
        },
        "clip_94": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Ann, once they're done, the results are imported back into.",
                    "label": 0
                }
            ]
        },
        "clip_95": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Database and they can be queried by the original system.",
                    "label": 0
                },
                {
                    "sent": "Anne.",
                    "label": 0
                }
            ]
        },
        "clip_96": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Of course, if someone else is also curious to check these results or something else, it can access the same database.",
                    "label": 0
                },
                {
                    "sent": "And get exactly the results that already computed or at more results also.",
                    "label": 0
                }
            ]
        },
        "clip_97": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so let's let's look at the front.",
                    "label": 0
                }
            ]
        },
        "clip_98": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Sent.",
                    "label": 0
                },
                {
                    "sent": "Front end is implemented on the local machine.",
                    "label": 0
                },
                {
                    "sent": "It provides routines for job specification and processing of the results.",
                    "label": 0
                },
                {
                    "sent": "So that was the example code.",
                    "label": 0
                },
                {
                    "sent": "An older job specifications are done in the context of a project, so that's basically a database.",
                    "label": 0
                },
                {
                    "sent": "OK, so here we generate the project demo project and the local name demo.",
                    "label": 0
                },
                {
                    "sent": "This is this is just like drop box drop box has a local directory name.",
                    "label": 0
                },
                {
                    "sent": "This is the local directory name it used to look up there.",
                    "label": 0
                }
            ]
        },
        "clip_99": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Summation information, so once you give a project, engineer will look in a local database and see which external database to use.",
                    "label": 0
                }
            ]
        },
        "clip_100": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So you can add a new project by or joining existing one.",
                    "label": 1
                },
                {
                    "sent": "Here create a new project demo demo and the host name, Database name and user credentials.",
                    "label": 0
                },
                {
                    "sent": "And given an input to that database, obviously this is this is.",
                    "label": 0
                },
                {
                    "sent": "This may not be secure, but it's a prototype, so this is something that would require more thought, such as user manual management, authentication and permissions, who can read through the database from the database, who can write to it and maybe manage it.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_101": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So once we have a project, we need to generate jobs.",
                    "label": 0
                },
                {
                    "sent": "an A job is has three components.",
                    "label": 0
                },
                {
                    "sent": "It has a function.",
                    "label": 0
                },
                {
                    "sent": "What do we want to evaluate then parameters on what do we want to evaluate this function and a computational platform?",
                    "label": 0
                },
                {
                    "sent": "Where do we want to run all the code?",
                    "label": 0
                }
            ]
        },
        "clip_102": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So let's look at a function.",
                    "label": 0
                }
            ]
        },
        "clip_103": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "To create a function you can just say project import function and then function.",
                    "label": 0
                },
                {
                    "sent": "This could be Matlab or Python.",
                    "label": 0
                },
                {
                    "sent": "At the moment an you can for example specify Python function, but essentially call it from Matlab.",
                    "label": 0
                },
                {
                    "sent": "So there's there's there's a lot of issues with functions, and I think these are general and they may not have been solved so.",
                    "label": 0
                },
                {
                    "sent": "For example, there's version control and or.",
                    "label": 0
                },
                {
                    "sent": "How do I exactly identify a particular function?",
                    "label": 0
                },
                {
                    "sent": "OK. How can users know about this function or also identify it?",
                    "label": 0
                },
                {
                    "sent": "And then one of the other difficulties.",
                    "label": 0
                },
                {
                    "sent": "What about dependencies an if there's compiled libraries, you need those kind of things.",
                    "label": 0
                },
                {
                    "sent": "And of course, this is easier when there's established software packages where you just say I want to use this package version 2.",
                    "label": 0
                },
                {
                    "sent": "So that's easier to identify, but if you're quickly writing new functions all the time, you change them.",
                    "label": 0
                },
                {
                    "sent": "Then it becomes difficult to identify.",
                    "label": 0
                }
            ]
        },
        "clip_104": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So let's let's.",
                    "label": 0
                }
            ]
        },
        "clip_105": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Get that version control later.",
                    "label": 1
                },
                {
                    "sent": "So one thing is that the results are associated to one particular function, sort of mathematical, right?",
                    "label": 0
                },
                {
                    "sent": "You apply.",
                    "label": 1
                },
                {
                    "sent": "FX&F doesn't suddenly change, it's it's a function.",
                    "label": 0
                },
                {
                    "sent": "So one way to do that is to identify different version IDs with function names, but that's difficult to know because I keep changing my file.",
                    "label": 1
                },
                {
                    "sent": "And how do I say I want to keep version 3251?",
                    "label": 0
                },
                {
                    "sent": "How do I remember this number that's that's tedious.",
                    "label": 0
                },
                {
                    "sent": "Also, if you change a function, of course you want to evaluate invalidate the results in the database because they don't originate from that function, so you don't know if it's consistent.",
                    "label": 0
                },
                {
                    "sent": "What we do want is we want to keep existing results for each of these functions.",
                    "label": 0
                },
                {
                    "sent": "OK, version control itself.",
                    "label": 0
                },
                {
                    "sent": "Is beyond the scope of the database.",
                    "label": 0
                },
                {
                    "sent": "We don't want to have implement a whole new version control system, just just for the framework so.",
                    "label": 0
                },
                {
                    "sent": "For the implementation, I made a couple of compromises.",
                    "label": 0
                },
                {
                    "sent": "First, functions are identified by their hash code, so you compute one number and that's the function, and if you change their code, it's a new function.",
                    "label": 0
                },
                {
                    "sent": "So once we submit a function, we compute, copy the source code to the database, and that's it.",
                    "label": 0
                },
                {
                    "sent": "That's one code.",
                    "label": 0
                },
                {
                    "sent": "Of course, if you just add some comments to it.",
                    "label": 0
                },
                {
                    "sent": "That's a new function, but the behavior is exactly the same.",
                    "label": 0
                },
                {
                    "sent": "So one way to do that is you could declare one function to be equal to the other function.",
                    "label": 0
                },
                {
                    "sent": "And then users can just choose any repository such as Git or Git or Drop Box to access function so I can share it with everybody and you just say I use this function.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_106": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So there's some more issues.",
                    "label": 0
                },
                {
                    "sent": "Of course the dependencies.",
                    "label": 0
                },
                {
                    "sent": "So a function may just be the top top level and then how do you know which functions it calls in which libraries it uses?",
                    "label": 1
                },
                {
                    "sent": "How do you ensure the correct version of each of these libraries, and how do you compile them on a computational platform?",
                    "label": 0
                },
                {
                    "sent": "And I think that's just in general a software engineering problem that has not been solved yet.",
                    "label": 0
                },
                {
                    "sent": "So one possibility is to use the cloud with machine images that is very reliable.",
                    "label": 0
                },
                {
                    "sent": "You can just say exactly.",
                    "label": 0
                },
                {
                    "sent": "I want to run my experiment on this machine image on some node on the cloud.",
                    "label": 0
                },
                {
                    "sent": "Showdown is highly reproducible, but of course it's not very flexible.",
                    "label": 0
                },
                {
                    "sent": "It's very static.",
                    "label": 0
                },
                {
                    "sent": "You have image and that's it, so it's not very suitable for prototyping.",
                    "label": 0
                },
                {
                    "sent": "And this framework is is more between prototyping and and development.",
                    "label": 0
                },
                {
                    "sent": "So for the implementation I have the not very satisfactory solution of allowing only one standalone function.",
                    "label": 0
                },
                {
                    "sent": "Anne.",
                    "label": 0
                },
                {
                    "sent": "If there's any dependencies they have to be available on the platform.",
                    "label": 0
                },
                {
                    "sent": "There's an existing solution in Python which is called Pie Cloud is good software.",
                    "label": 0
                },
                {
                    "sent": "I have a slide on it towards the end.",
                    "label": 0
                },
                {
                    "sent": "But even then, compiled libraries remain difficult.",
                    "label": 1
                },
                {
                    "sent": "You would have to pre install them on the cloud so it's not a solved problem.",
                    "label": 0
                }
            ]
        },
        "clip_107": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so once we import the function to the database, we still need to call it with some parameters and and.",
                    "label": 0
                }
            ]
        },
        "clip_108": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Where do we want to run them so?",
                    "label": 0
                },
                {
                    "sent": "For parameters, there's three different options.",
                    "label": 0
                },
                {
                    "sent": "You can just call the function with a.",
                    "label": 0
                },
                {
                    "sent": "Name value pairs.",
                    "label": 0
                },
                {
                    "sent": "So meta three method should be 3 and scale should be true.",
                    "label": 0
                },
                {
                    "sent": "OK. You can make a demco parameter structure where same methods, three skills true, and then call the function on the parameters.",
                    "label": 0
                },
                {
                    "sent": "What you can also do is you can specialize the function so fun that set parameters these or or you can set the parameters like this and then you just call the function.",
                    "label": 0
                },
                {
                    "sent": "So this is useful when you have a specialized function, for example some optimization algorithm which specific settings that we function one and you have other settings we function to the same same same code.",
                    "label": 0
                }
            ]
        },
        "clip_109": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK then then of course we need to specify where do we run this code.",
                    "label": 0
                },
                {
                    "sent": "So here we get a platform.",
                    "label": 0
                },
                {
                    "sent": "The cluster for example, some local cluster and then we say run this function on this platform.",
                    "label": 0
                },
                {
                    "sent": "You can also set the default platform and then it always runs it on that platform unless you specify a.",
                    "label": 0
                }
            ]
        },
        "clip_110": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Allies.",
                    "label": 0
                },
                {
                    "sent": "So again, there's there's quite a few unresolved issues.",
                    "label": 0
                },
                {
                    "sent": "Should platforms be project specific?",
                    "label": 0
                },
                {
                    "sent": "Probably not.",
                    "label": 0
                },
                {
                    "sent": "So you want to share the platforms across different projects, right?",
                    "label": 0
                },
                {
                    "sent": "How do you specify a new platform for static machines or just clusters?",
                    "label": 0
                },
                {
                    "sent": "It's fairly easy.",
                    "label": 0
                },
                {
                    "sent": "But for dynamic platform such as a cloud, it becomes a little harder to specify a platform because maybe you have to boot it and so this is still basically an open question.",
                    "label": 0
                },
                {
                    "sent": "And then of course access control and platform maintenance.",
                    "label": 0
                },
                {
                    "sent": "Starting and stopping and nodes on the cloud and how do you account for computational time?",
                    "label": 0
                },
                {
                    "sent": "So if I share the database with someone, someone uses the machine a lot, how do you divide that?",
                    "label": 0
                },
                {
                    "sent": "That's that's difficult.",
                    "label": 0
                },
                {
                    "sent": "And of course ideally have some online server that takes care of all this, starting, stopping and job monitoring, so that's.",
                    "label": 0
                },
                {
                    "sent": "That's this.",
                    "label": 0
                }
            ]
        },
        "clip_111": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so we have the three components over Java function parameters.",
                    "label": 0
                },
                {
                    "sent": "Anna computational platform so.",
                    "label": 0
                },
                {
                    "sent": "Any combination of those defines a single job.",
                    "label": 0
                },
                {
                    "sent": "OK, so how do?",
                    "label": 0
                }
            ]
        },
        "clip_112": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "You put everything together.",
                    "label": 0
                },
                {
                    "sent": "So this submission of a function evaluation so.",
                    "label": 0
                },
                {
                    "sent": "When we call the function on the platform and some parameters we get, we get a ticket with job ID.",
                    "label": 0
                },
                {
                    "sent": "OK, so we can say project that evaluate this function with this parameter on this platform.",
                    "label": 0
                },
                {
                    "sent": "This is basically the same as.",
                    "label": 0
                },
                {
                    "sent": "As the second one, because a function is instantiated from a project so it knows about the parent project.",
                    "label": 0
                },
                {
                    "sent": "So this this is just some syntactic sugaring.",
                    "label": 0
                }
            ]
        },
        "clip_113": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK. Parameters and computational platform are optional in the sense that you can have a default computational platform and maybe no parameters.",
                    "label": 0
                },
                {
                    "sent": "Any combination gives a unique job an, so here we run this one job on a particular platform.",
                    "label": 0
                },
                {
                    "sent": "In terms of jobs, there's two types of jobs.",
                    "label": 0
                },
                {
                    "sent": "I think there's there's.",
                    "label": 0
                },
                {
                    "sent": "Jobs with dynamic results and which static results so dynamic results would be runtime, for example so.",
                    "label": 0
                },
                {
                    "sent": "Then you really want to evaluate the function on a particular platform, but maybe you say, well, I already computed this function on another platform and I just care about the results and they shouldn't really matter.",
                    "label": 0
                },
                {
                    "sent": "That depends on the platform, so you can just evaluate it on any platform if you have it on any platform, you just return those, otherwise you start a new job on the default platform.",
                    "label": 0
                },
                {
                    "sent": "So this is a single function calls, but of course we want to run a whole lot of jobs so.",
                    "label": 0
                },
                {
                    "sent": "The parallel job submissions, as I mentioned in the introduction, slides are often structures and we want to avoid submitting 1000 jobs in a for loop.",
                    "label": 0
                }
            ]
        },
        "clip_114": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So how do we do that?",
                    "label": 0
                },
                {
                    "sent": "We define these options here.",
                    "label": 0
                },
                {
                    "sent": "So we say dimension can be 1020 thirty and can be some other values, and we evaluate that outer product.",
                    "label": 0
                },
                {
                    "sent": "We evaluate it on some platform and we just get the results.",
                    "label": 0
                }
            ]
        },
        "clip_115": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So we can have lists of functions, list of parameters and platforms.",
                    "label": 0
                },
                {
                    "sent": "So we can say options options can be over parameters.",
                    "label": 0
                },
                {
                    "sent": "Options can be over functions or platforms.",
                    "label": 0
                },
                {
                    "sent": "OK, outer product of those and we can also submit.",
                    "label": 0
                },
                {
                    "sent": "So we just add them together.",
                    "label": 0
                },
                {
                    "sent": "Anne.",
                    "label": 0
                },
                {
                    "sent": "Every combination can have be at most one function, obviously because we cannot evaluate two functions somehow.",
                    "label": 0
                },
                {
                    "sent": "It can have at most one platform and each named parameter can also appear only once, so then otherwise, if we would have them twice in different values.",
                    "label": 0
                },
                {
                    "sent": "I don't know which one to choose.",
                    "label": 0
                },
                {
                    "sent": "So once we call this evaluate, we get an array of job IDs.",
                    "label": 0
                },
                {
                    "sent": "Maybe some of them already exist.",
                    "label": 0
                },
                {
                    "sent": "So if I computed some of these combinations, it will return the job ID that corresponded to that evaluated result.",
                    "label": 0
                }
            ]
        },
        "clip_116": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And once we submitted, we can ask for a summary.",
                    "label": 0
                },
                {
                    "sent": "So it says there's two pending submitted so many an several running and others are completed already.",
                    "label": 0
                },
                {
                    "sent": "This is an array, so we can just get the size and we can get a summary.",
                    "label": 0
                },
                {
                    "sent": "Maybe it's submitted.",
                    "label": 0
                },
                {
                    "sent": "So we can check individual jobs if they've completed or not.",
                    "label": 0
                },
                {
                    "sent": "Anne.",
                    "label": 0
                },
                {
                    "sent": "Other things that could be implemented are constellation of jobs, deleting, restarting, etc.",
                    "label": 0
                }
            ]
        },
        "clip_117": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I.",
                    "label": 0
                },
                {
                    "sent": "Here we summarize Job 1 two and we say it was submitted, then it was started, completed, and here's the standard output, just in case you want to see it OK.",
                    "label": 0
                }
            ]
        },
        "clip_118": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Then of course, we're interested in the results, otherwise we wouldn't have to compute it.",
                    "label": 0
                },
                {
                    "sent": "So here we can say, give me the output value name.",
                    "label": 0
                },
                {
                    "sent": "And there's a mosque associated with it, because some of them may not be done yet.",
                    "label": 0
                },
                {
                    "sent": "May not have been computed.",
                    "label": 0
                },
                {
                    "sent": "You can get a default value and this is syntactic sugaring again, forget value name.",
                    "label": 0
                },
                {
                    "sent": "OK. And then at the end there's a formatting where based on these outer product, so maybe some nations you can decide what format format to plug it in, and you can.",
                    "label": 0
                }
            ]
        },
        "clip_119": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Great tables such as the one I just showed earlier.",
                    "label": 0
                },
                {
                    "sent": "Where it takes advantage of the outer product to form this?",
                    "label": 0
                }
            ]
        },
        "clip_120": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so everything can be labeled for formatting, so you can say platform one is this is called cloud or something.",
                    "label": 0
                },
                {
                    "sent": "Again, for formatting, more work is needed and I think.",
                    "label": 0
                }
            ]
        },
        "clip_121": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Stats.",
                    "label": 0
                }
            ]
        },
        "clip_122": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Front end.",
                    "label": 0
                },
                {
                    "sent": "OK, so the front end has three components.",
                    "label": 0
                },
                {
                    "sent": "There's a interface in Matlab in Python.",
                    "label": 0
                },
                {
                    "sent": "The core is in C, and then there's an intermediate layer in Python or or Max.",
                    "label": 0
                },
                {
                    "sent": "So the interface language implements the main classes, demco object, ETC platform.",
                    "label": 0
                },
                {
                    "sent": "An IT interacts with the core through the intermediate layer, so it implements project platform and the function classes and then the parameters options and the manipulation so it overloads the multiplication for example.",
                    "label": 0
                },
                {
                    "sent": "And it generates a ticket.",
                    "label": 0
                }
            ]
        },
        "clip_123": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Every.",
                    "label": 0
                },
                {
                    "sent": "Once you initiate a project or a platform, or you set the default, these are fairly simple operations for the interface.",
                    "label": 0
                },
                {
                    "sent": "It just calls.",
                    "label": 0
                },
                {
                    "sent": "The core routine says give me the platform and it will.",
                    "label": 0
                },
                {
                    "sent": "The core will implement the access to the database, so that's that's a fairly thin layer.",
                    "label": 0
                },
                {
                    "sent": "For the functions, once you specify source file, the engine will compute the DD hash code.",
                    "label": 0
                },
                {
                    "sent": "And imported if needed and.",
                    "label": 0
                },
                {
                    "sent": "Return to function ID.",
                    "label": 0
                },
                {
                    "sent": "Options you just combine them and you check uniqueness of the fields, so see if the products are valid and then you submit that.",
                    "label": 0
                }
            ]
        },
        "clip_124": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So let's let's look at that briefly.",
                    "label": 0
                },
                {
                    "sent": "First of course, to check Server platform in a function or given an, it sets the default if needed.",
                    "label": 0
                },
                {
                    "sent": "And it converts the objects the model of objects.",
                    "label": 0
                },
                {
                    "sent": "For example, two structures for easy access.",
                    "label": 0
                },
                {
                    "sent": "Model up the Max interface doesn't really allow easy access to objects, which is, I think, really badly supported so.",
                    "label": 0
                },
                {
                    "sent": "In the intermediate layer we convert everything to a set of predefined data types, so every language has their own data types.",
                    "label": 1
                },
                {
                    "sent": "Ann, I wanted the framework to work with different programming languages, so I just defined some integer types, maybe double string structures and cells.",
                    "label": 0
                },
                {
                    "sent": "And then we map the model of variables to the engine variables and back in the same for Python.",
                    "label": 0
                },
                {
                    "sent": "So so maybe list tuples and set a road map to cells and their map back to one of them.",
                    "label": 0
                },
                {
                    "sent": "May be an umpire object array.",
                    "label": 0
                },
                {
                    "sent": "OK, so that's.",
                    "label": 0
                },
                {
                    "sent": "That's the conversion of data types.",
                    "label": 0
                }
            ]
        },
        "clip_125": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So the core engine, once it gets a job submission, it generates all the required parameter combinations.",
                    "label": 0
                },
                {
                    "sent": "It serializes them so so you can have a binary comparison in the database.",
                    "label": 0
                },
                {
                    "sent": "It then checks the database and maybe submits a new jobs if it doesn't already exist and return to job IDs.",
                    "label": 0
                }
            ]
        },
        "clip_126": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So part of good part of the code is the serialization over the variables.",
                    "label": 0
                }
            ]
        },
        "clip_127": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Excited to redo that because a lot of the existing ones are text based and I don't think text based.",
                    "label": 0
                },
                {
                    "sent": "Interfaces are very good for large matrices, for example because there's just all bulky.",
                    "label": 0
                },
                {
                    "sent": "And so, for example, if we have this basis pursuit denoise problem and we want to evaluate it for different vectors B and different house.",
                    "label": 0
                },
                {
                    "sent": "So we just say there's an options for touted options for B an an outer product of those.",
                    "label": 0
                },
                {
                    "sent": "So once we evaluate that we may have to give it a, which could be very big matrix.",
                    "label": 0
                },
                {
                    "sent": "OK. An unfortunately it does not have an interface for spot because we cannot serialize random arbitrary classes in Matlab.",
                    "label": 0
                },
                {
                    "sent": "So MATLAB may not be the best programming language for this.",
                    "label": 0
                },
                {
                    "sent": "I think Python has better support for these kinds of things.",
                    "label": 0
                },
                {
                    "sent": "But I wanted to have it work in model up as well, so that's why it's a bit restrictive.",
                    "label": 0
                },
                {
                    "sent": "So every time we have a big matrix, so we generate 50 tuples of a B tile with the same big matrix.",
                    "label": 0
                },
                {
                    "sent": "So that's that's not very efficient of course.",
                    "label": 0
                }
            ]
        },
        "clip_128": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So what we do is for large variables when we serialize it, we serialize it as a chunk and then we just say this variable is a is a chunk and so you can generate very big datasets and have very small keys in the database still.",
                    "label": 0
                },
                {
                    "sent": "So instead of replicating the data, we just refer to a chunk ID.",
                    "label": 0
                },
                {
                    "sent": "It reduces storage and it's also faster.",
                    "label": 0
                },
                {
                    "sent": "What we also do is instead of generating each tuple and then serializing, we pre serialize those and then combine them together so it's a lot faster.",
                    "label": 0
                }
            ]
        },
        "clip_129": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I'm.",
                    "label": 0
                }
            ]
        },
        "clip_130": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Back end implementation is very simple.",
                    "label": 0
                },
                {
                    "sent": "Because we just have a job dispatcher and a computational platform.",
                    "label": 0
                }
            ]
        },
        "clip_131": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "So the job dispatcher just checks the database to see if there's any new jobs.",
                    "label": 0
                },
                {
                    "sent": "It checks the status of existing jobs on the cluster an if there are new results, it will get them from the computational platform and imports them back into the database.",
                    "label": 0
                },
                {
                    "sent": "Idea potentially, you could also say once the computational platform is done with the computation, it sends them to the database.",
                    "label": 0
                },
                {
                    "sent": "But I didn't really want the computational platform to be active in that sense, it shouldn't worry about, oh, I can't access the database right now.",
                    "label": 0
                },
                {
                    "sent": "I'll wait and I'll try again later.",
                    "label": 0
                },
                {
                    "sent": "Platform shouldn't do that, so the job dispatcher queries both the platform and the database, and an arranges the data transfers between it.",
                    "label": 0
                }
            ]
        },
        "clip_132": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So on the computational platform, it's also fairly thin layer.",
                    "label": 1
                },
                {
                    "sent": "It has a set of primitives which are mostly one or two lines.",
                    "label": 0
                },
                {
                    "sent": "Shell scripts maybe generate a platform wide unique job ID which could just be the current time on that platform.",
                    "label": 0
                },
                {
                    "sent": "You could provide a path name for a job, so I give you the job.",
                    "label": 0
                },
                {
                    "sent": "Give me part name.",
                    "label": 0
                },
                {
                    "sent": "And then then the.",
                    "label": 1
                },
                {
                    "sent": "The back end job dispatcher will just use that job name and copy all the files to that directory.",
                    "label": 0
                },
                {
                    "sent": "When you request the computational platform to submit a job to the queue, whatever Q it uses, maybe it has some job submission queue.",
                    "label": 0
                },
                {
                    "sent": "You want to get the job status and clean up the job, so that's fairly very thin layer.",
                    "label": 0
                }
            ]
        },
        "clip_133": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And of course, the computational platform.",
                    "label": 0
                },
                {
                    "sent": "Also requires some of the framework routines, so it needs to be able to load a parameter file.",
                    "label": 0
                },
                {
                    "sent": "In a unified format.",
                    "label": 0
                },
                {
                    "sent": "So there are the same from model up in Python And everything.",
                    "label": 0
                },
                {
                    "sent": "Then there's a very thin wrapper for Python MATLAB scripts to just say low today to call the function, maybe redirect the output if necessary, and then output a data file.",
                    "label": 0
                },
                {
                    "sent": "So that's very small code as well.",
                    "label": 0
                }
            ]
        },
        "clip_134": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And as I mentioned, the job dispatcher just queries the database for pending and submitted jobs.",
                    "label": 1
                },
                {
                    "sent": "It calls all of those the previous primitives on the computational platform and orchestrates everything.",
                    "label": 1
                },
                {
                    "sent": "A copy of the output files.",
                    "label": 0
                },
                {
                    "sent": "ANAN monitors everything, so I think that's basically everything.",
                    "label": 0
                }
            ]
        },
        "clip_135": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Yeah.",
                    "label": 0
                }
            ]
        },
        "clip_136": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Some related work still.",
                    "label": 0
                },
                {
                    "sent": "So I mentioned pie cloud.",
                    "label": 0
                },
                {
                    "sent": "I'm not sure if it's still running, but it was about a year ago and it's a very good platform in Python.",
                    "label": 0
                },
                {
                    "sent": "So you just say import cloud and you define some function you can call that function, But you can also say cloud called this function with parameters one and two.",
                    "label": 0
                },
                {
                    "sent": "That will give you job ID and then you can query the result.",
                    "label": 0
                },
                {
                    "sent": "So this is very powerful an because it's in Python.",
                    "label": 0
                },
                {
                    "sent": "Python has more support for querying dependencies.",
                    "label": 0
                },
                {
                    "sent": "Serializing objects so that's a lot easier.",
                    "label": 0
                },
                {
                    "sent": "So this is this is a very easy to use software.",
                    "label": 0
                },
                {
                    "sent": "Or maybe it was a very it's used.",
                    "label": 0
                },
                {
                    "sent": "I'm not sure if it exists.",
                    "label": 0
                },
                {
                    "sent": "Anne.",
                    "label": 0
                },
                {
                    "sent": "The only disadvantage I think is is it requires a access to a existing Pi cloud dedicated cloud for this.",
                    "label": 0
                },
                {
                    "sent": "So you have to submit the jobs on that cloud.",
                    "label": 0
                },
                {
                    "sent": "So that's the only disadvantage of course, so you cannot say I have my own cluster.",
                    "label": 0
                },
                {
                    "sent": "I want to just do this so that doesn't work.",
                    "label": 0
                },
                {
                    "sent": "There's no result database, but you could also see this as an external add-on, so that's not a real issue, except of course that you would have to write a cache database.",
                    "label": 0
                },
                {
                    "sent": "Anet was acquired by Drop Box in 2013, so I think it's shutting down or has already been shut down.",
                    "label": 0
                }
            ]
        },
        "clip_137": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Some other work is is is workflows workflows have been around for a long time, so there's exist extensive work on it.",
                    "label": 0
                },
                {
                    "sent": "It's more modular approach where you say I specify how some data is transformed through some other output, which is combined with others, and so it's a very high level way of specifying jobs, so it's very suitable for well established process pipelines.",
                    "label": 0
                },
                {
                    "sent": "Once you have some image processing pipeline, you just say here's the new images do the whole thing and I get my output.",
                    "label": 0
                },
                {
                    "sent": "It's perhaps less suitable for rapid prototyping and fine granularity jobs where you have a lot of tiny little jobs that it may be too heavy for that.",
                    "label": 0
                },
                {
                    "sent": "You could use the execution platform.",
                    "label": 0
                },
                {
                    "sent": "Of course, there's infrastructure that says I want to submit this job somewhere, and there's job management and everything so that that could be useful.",
                    "label": 0
                },
                {
                    "sent": "Something that's also done here a lot is eksperiment databases.",
                    "label": 0
                },
                {
                    "sent": "They emphasis is a little different.",
                    "label": 0
                },
                {
                    "sent": "It's basically a repository or database or for example.",
                    "label": 0
                },
                {
                    "sent": "Albums in machine learning?",
                    "label": 0
                },
                {
                    "sent": "So maybe we have an amnist classification problem, an which algorithms run, and what are those results?",
                    "label": 0
                },
                {
                    "sent": "In which parameters wasn't run with.",
                    "label": 0
                },
                {
                    "sent": "So this is a shared database of results and you can submit your results to it.",
                    "label": 0
                },
                {
                    "sent": "An DD.",
                    "label": 0
                },
                {
                    "sent": "The advantage of these experiment databases is that you can do meta learning, or you can just mind the results.",
                    "label": 0
                },
                {
                    "sent": "So you can say what is the general trend in the number of iterations or if certain parameter or different types of methods.",
                    "label": 0
                },
                {
                    "sent": "So you can say I want to have first order methods, maybe you can say I want to 2nd order methods.",
                    "label": 0
                },
                {
                    "sent": "What is the difference?",
                    "label": 0
                },
                {
                    "sent": "Or you could say what is the most defining parameter that performs the effects performance most so.",
                    "label": 0
                },
                {
                    "sent": "That's experiment databases.",
                    "label": 0
                },
                {
                    "sent": "I think the only downside is is because you want to query this kind of high level queries.",
                    "label": 0
                },
                {
                    "sent": "They're structured databases, so they are specific to certain problem classes and it knows about this class is, so that's the only restriction I'd say.",
                    "label": 0
                }
            ]
        },
        "clip_138": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So in summary, I just presented a prototype framework for structured computation.",
                    "label": 0
                },
                {
                    "sent": "I introduced the sparse recovery solver SPO one and discuss the linear operator toolbox spot so.",
                    "label": 0
                }
            ]
        },
        "clip_139": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I'd like to thank you.",
                    "label": 0
                }
            ]
        }
    }
}