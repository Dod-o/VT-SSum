{
    "id": "edkabcmrex5rr6yhab5h7nzkd5rnrmfj",
    "title": "Query-Based Entity Comparison in Knowledge Graphs Revisited",
    "info": {
        "author": [
            "Alina Petrova, University of Oxford"
        ],
        "published": "Dec. 10, 2019",
        "recorded": "October 2019",
        "category": [
            "Top->Computer Science->Semantic Web"
        ]
    },
    "url": "http://videolectures.net/iswc2019_petrova_graphs_revisited/",
    "segmentation": [
        [
            "So yeah, my name is Alina Anne and today I'm going to talk about entity comparison in knowledge graphs.",
            "So comparison is a fundamental information exploration and analysis tasks.",
            "And nowadays there are a lot of webs."
        ],
        [
            "Guides and tools that give you the ability to compare items automatically.",
            "However, practically all of them perform comparison over a fixed set of properties, and following a handcrafted schema, so to say.",
            "So for instance, for when you compare movies, you compare the director and year of Release.",
            "When you compare retail items, you compare the size, price, etc.",
            "Now these handcrafted approach does not feed graph data very well.",
            "There are attempts to perform entity comparison over graph data, couple of them for instance."
        ],
        [
            "On Facebook you can compare yourself or with a profile of another person and then you get sort of a summary of what you have in common.",
            "Common friends, common likes, events, and maybe you share the same University or current city.",
            "Still, this looks like the comparison is done over a predefined set of properties and it doesn't go beyond the information that's immediately available about you in your profile.",
            "If we would like to fully unlock comparison over graph data, we need to go beyond domain independent predefined schemas and we need to go beyond fixed depth of analysis."
        ],
        [
            "So for instance, I would like to compare two companies, Telenor and Vodafone, using the information about them in the."
        ],
        [
            "Yoga knowledge graph that's a fragment of it.",
            "How can I do it so we think of comparison in the following terms?"
        ],
        [
            "Given two entities in an RDF graph, for instance Telenor and Vodafone, we would like to.",
            "Find patterns in data about them that are common for the two entities.",
            "For instance, that both entities are telecom companies and this will call a similarity.",
            "We're also interested in patterns that differentiate the two entities from one another.",
            "For instance, Telenor is located in Norway while Vodafone is UK company and this we will call differences and we would like to do."
        ],
        [
            "Comparison automatically in a domain independent manner an.",
            "Preferably we would like to generate informative comparisons.",
            "Now."
        ],
        [
            "Could've definition so because we are interested in essentially capturing graph patterns, we model comparisons as sparkle queries and we are operating in the framework in the fragment of select basic graph patterns and some filter conditions.",
            "For instance, the second query key prime tells that we're trying to match something that an entity that has more than 30,000 employees.",
            "Now."
        ],
        [
            "We require all all our queries to be unary because we want them to have as answers, individual entities, and we also ask them to be connected 'cause we're essentially interested in patterns.",
            "In the neighborhoods.",
            "Graph neighborhoods of the target entities and we're not interested in catching a pattern somewhere else in the graph.",
            "In this presentation."
        ],
        [
            "I'm going to use this simplified notation instead of sparkle syntax.",
            "I'm just going to go with like a simple secure notation.",
            "For instance, Q Prime becomes just two atoms.",
            "X has people.",
            "Why and why more than 30,000?",
            "And finally by Q?"
        ],
        [
            "OMG we do know the answer set of a query Q over in RDF graph G. Right so."
        ],
        [
            "Normally a similarity query is a query in our language that fits that has both entities in its answer set over the given data.",
            "For instance, in our example, these are the similarity queries.",
            "Both entities are telecom companies.",
            "They are located in Europe.",
            "They own other entities and so on."
        ],
        [
            "Now, as you can see, not.",
            "Every not every similarity query is as informative and as specific as the others.",
            "We are operating under the assumption that the more specific similarity query the better, the more informative it is because essentially it captures more information that's common.",
            "For the two entities and we can.",
            "Formally capture the notion of specificity using the classic notion of queries.",
            "Subsumption just to recapture, so Qi query Q subsumes query Q.",
            "Prime if for any RDF graph the answer set of Q prime over it is contained in the answer set of Q.",
            "And Q prime becomes more specific.",
            "Thank you now."
        ],
        [
            "We can using query assumption, we can organize all our comparison queries into partial order.",
            "Well, a similarity query.",
            "Look at Q4 for instance.",
            "It could become more and more and more specific until it's so specific it doesn't fit both entities any longer.",
            "And if it's only one of them, it becomes a different query or none of them.",
            "And we're in this stock, we're interested in this Gray triangle, so to say over similarity queries.",
            "And specifically in its bottom corner.",
            "So the query that is the most specific.",
            "Among all of the similarity queries."
        ],
        [
            "So we here introduce the notion of the most specific similarity query or MSQ, and that's a similarity query minimal with respect to subsumption.",
            "For our example, for instance the MSQ.",
            "Captures the pattern that most companies that telecom companies they own.",
            "Other entities they located in Europe they were created in that time frame and they have the number of employees between 33,000 and 91,000 now."
        ],
        [
            "Although there could be many similarity queries and actually infinitely many similarity queries, good news is that there always exists a unique MSQ.",
            "Up to query equivalence, of course, if there is any similarity query at all.",
            "So if the two entities share anything in common, then we can compute a unique MSQ.",
            "The bad news is that this will require.",
            "Time quadratic in the size of the input graph, so such computation is not possible over large knowledge graphs like DP Jago.",
            "Instead, what we can do is we try to approximate this computation.",
            "So we need an alga."
        ],
        [
            "Item that we take two entities in the graph.",
            "And compute a query which will be a similarity and which be will be as closely resembling the Fuller misses Q as possible, while the computation is still scalable over large datasets.",
            "The idea of one such algorithm that I'm going to present now is that we take.",
            "Entities and we greedily, in a breath research manner, traverse their neighborhoods in parallel and try to collect as many common patterns as possible and in order for this to be scalable, we restrict ourselves to tree shaped patterns."
        ],
        [
            "Right, so an algorithm constructs something, hold a similarity tree.",
            "That's the one on the right.",
            "So given the small data describing in be here.",
            "The algorithm creates a similar tree, which is a directed labeled tree.",
            "Every node and every edge is labeled with a pair of sets of entities.",
            "For instance, the root is always labeled with two sets, one containing the first target entity, were interested in, and the other one containing the second entity.",
            "Look at the edge on the bottom top right so the edges labeled again with two sets, one containing the entity S and the other one containing NTP.",
            "So in this particular example, all the sets here are singletons, but that's not always the case, as we will see later and for the sake of simplified notation, if both labels in the pair are singletons containing the same entity we just put.",
            "That entity like TR or 5?",
            "Now, um.",
            "The property of such a similarity tree is that it can be directly translated into a query, so we take every edge and it becomes a triple pattern, and we translate every label either into a variable or a constant.",
            "The query corresponding to a similarity tree is guaranteed to be the similarity query.",
            "Now, such trees constructed."
        ],
        [
            "In two parts, part is first we in the forward path.",
            "We start with the input data.",
            "We generate our root label node labeled with A&B and then for every such node internally we're looking at all the outgoing and incoming edges that are common for the entities in the first label and in the second label for instance."
        ],
        [
            "A&B both have outgoing edges with property R and ending in entities 1 two for A and three 4B.",
            "OK, we've covered all edges for NB.",
            "Now we move to the next."
        ],
        [
            "Note so a or two and three both have outgoing edges labeled T that are in commonly just edges for the Entity 5.",
            "So we create an you edge in the tree.",
            "We can also group edges 3P6 and one is 4.",
            "And children."
        ],
        [
            "Old.",
            "In the new edge in the tree, now this process we can repeat the Durative Lee for as long as possible, and we can decide at what point, like at what depth of analysis we stop.",
            "So this looks already like a good approximation of the pattern that's common for A&B, but in order to ensure that it actually corresponds to the similarity query, we need to do a backward path and we start with the leaves of the tree and going to the route.",
            "We uncouple some of the nodes, for instance.",
            "We split the Note 1, two and three into two nodes, 1, three and two 3."
        ],
        [
            "In the final tree like this, for every note, for every entity in every label, if there should be an entity in the edge in the child edge, and there should be an entity in the child.",
            "Note that together give you a triple in the original data, for instance.",
            "For the entity one, there will be an edge in the data labeled with MTS and four.",
            "When this property is fulfilled, the symmetry is guaranteed to correspond to a similarity query.",
            "Um?"
        ],
        [
            "And this is the final query for our example.",
            "Now."
        ],
        [
            "We evaluated the algorithm on three datasets on a subset of Jago of around 1 million triples on the lumen.",
            "One synthetic data set, and on a subset of the Twitter follower graph which was represented as an RDF graph.",
            "I'm going to skip the runtime evaluation here, but we demonstrated that the algorithm is scalable.",
            "For depths of analysis up to 4 four graphs as large as 1 million triples."
        ],
        [
            "In order to evaluate how closely the output query resembles the full MSQ, ideally we would generate full miscues an approximated queries on the same inputs and compare them.",
            "This is not possible because I'm on a real data.",
            "The full algorithm will.",
            "Time out, So what we did instead we generated a lot of small randomized RDF graphs of size up to 10 triples.",
            "We ensured that they have various structures, topologies, cyclic anesi quick an on every such small graph we generated both full MSSQ and the approximated one.",
            "An we evaluated pairs of these queries on the real data and all the three datasets.",
            "So we know that this subset the answer set of the full misses Q, would be the subset of the answers of the other query.",
            "But we were interested in what's what's the Delta?",
            "Also when we evaluate.",
            "Small patterns query patterns on the real datasets.",
            "We can see how often the cyclic and cyclic patterns actually appear in real data.",
            "Anne."
        ],
        [
            "So this table contains percentages of how many entities in the whole graph in every graph where on average were matched by the full MSQ and the approximated queries.",
            "And as you can see, a survey starts for cyclic and C starts for cyclic patterns and cyclic patterns are actually not very common in real data.",
            "So indeed it made sense to generate.",
            "Took create an algorithm that focused on the cyclic.",
            "Queries and also if we as we increase the depth of the analysis and we reach depth 3, the difference between how many entities were matched by the two algorithms is less than 9%, so the approximation ratio is quite decent."
        ],
        [
            "Yep, that's all.",
            "Thank you so much."
        ],
        [
            "Thank you very much for the talk questions, questions.",
            "Yep.",
            "Hi, there is quite a large body of literature on on entity similarities.",
            "You know, I'm thinking about embeddings, but there are many other techniques.",
            "I was wondering whether you consider that as baselines or in general as to compare your method against.",
            "Yeah, that's a good question.",
            "So we are aware of the other approaches of course, but.",
            "Most of them with except of.",
            "Two or three that I know they they perform, for instance, similarity.",
            "Computation in a new in like they give you a numeric score rather than a declarative explanation of how the two entities are similar.",
            "And in this respect, there's not a lot of approaches.",
            "To compare with and there are no benchmarks.",
            "Any other questions?",
            "Q.",
            "Sorry, then you can come complete apologies I I came in late for your presentation but just looking at the actual results that you put through just on the last slide.",
            "Fascinating difference between acyclic and cyclic graph.",
            "Would you just be able to just give us a good conclusion as to as to why the why the difference in the results are so stunning?",
            "So I was surprised myself when I started writing the valuations.",
            "Um, the most surprising thing for me was that I expected the Twitter data to be highly cyclic.",
            "Awhile it turned out not to be the case, so it's explanation for that.",
            "What what?",
            "What's your hunch as to why?",
            "While the results are showing so just such different.",
            "I'm not 100% sure I was expecting the Twitter follower graph to be to contain more cyclic patterns than the rest, and that that's the case, but yeah.",
            "I was surprised myself.",
            "Name other questions.",
            "So I had a question I was trying to figure out while you were presenting the similarity tree.",
            "What the relation is to things like simulation by simulations?",
            "Is there some is it may be similar to these notions?",
            "I hope I'll answer your question with that.",
            "So when you generate the MSQ.",
            "I it is actually the homomorphic image of the two neighborhoods.",
            "It's not isomorphic so OK. OK, and your MSS Q uses conjunctive queries and filters.",
            "It uses conjunctive queries and filters.",
            "What's what sort of language query language are you considering?",
            "Yeah, so when you look at the similarity tree.",
            "So if the both labels or a particular node contain only numeric values inside, so literals, then you can take the mean and the Max among both cells and you can generate the filter conditions.",
            "OK, so let's thank the speaker again."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So yeah, my name is Alina Anne and today I'm going to talk about entity comparison in knowledge graphs.",
                    "label": 1
                },
                {
                    "sent": "So comparison is a fundamental information exploration and analysis tasks.",
                    "label": 0
                },
                {
                    "sent": "And nowadays there are a lot of webs.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Guides and tools that give you the ability to compare items automatically.",
                    "label": 0
                },
                {
                    "sent": "However, practically all of them perform comparison over a fixed set of properties, and following a handcrafted schema, so to say.",
                    "label": 0
                },
                {
                    "sent": "So for instance, for when you compare movies, you compare the director and year of Release.",
                    "label": 0
                },
                {
                    "sent": "When you compare retail items, you compare the size, price, etc.",
                    "label": 0
                },
                {
                    "sent": "Now these handcrafted approach does not feed graph data very well.",
                    "label": 0
                },
                {
                    "sent": "There are attempts to perform entity comparison over graph data, couple of them for instance.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "On Facebook you can compare yourself or with a profile of another person and then you get sort of a summary of what you have in common.",
                    "label": 0
                },
                {
                    "sent": "Common friends, common likes, events, and maybe you share the same University or current city.",
                    "label": 0
                },
                {
                    "sent": "Still, this looks like the comparison is done over a predefined set of properties and it doesn't go beyond the information that's immediately available about you in your profile.",
                    "label": 0
                },
                {
                    "sent": "If we would like to fully unlock comparison over graph data, we need to go beyond domain independent predefined schemas and we need to go beyond fixed depth of analysis.",
                    "label": 1
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So for instance, I would like to compare two companies, Telenor and Vodafone, using the information about them in the.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Yoga knowledge graph that's a fragment of it.",
                    "label": 0
                },
                {
                    "sent": "How can I do it so we think of comparison in the following terms?",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Given two entities in an RDF graph, for instance Telenor and Vodafone, we would like to.",
                    "label": 1
                },
                {
                    "sent": "Find patterns in data about them that are common for the two entities.",
                    "label": 0
                },
                {
                    "sent": "For instance, that both entities are telecom companies and this will call a similarity.",
                    "label": 0
                },
                {
                    "sent": "We're also interested in patterns that differentiate the two entities from one another.",
                    "label": 0
                },
                {
                    "sent": "For instance, Telenor is located in Norway while Vodafone is UK company and this we will call differences and we would like to do.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Comparison automatically in a domain independent manner an.",
                    "label": 0
                },
                {
                    "sent": "Preferably we would like to generate informative comparisons.",
                    "label": 0
                },
                {
                    "sent": "Now.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Could've definition so because we are interested in essentially capturing graph patterns, we model comparisons as sparkle queries and we are operating in the framework in the fragment of select basic graph patterns and some filter conditions.",
                    "label": 0
                },
                {
                    "sent": "For instance, the second query key prime tells that we're trying to match something that an entity that has more than 30,000 employees.",
                    "label": 0
                },
                {
                    "sent": "Now.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We require all all our queries to be unary because we want them to have as answers, individual entities, and we also ask them to be connected 'cause we're essentially interested in patterns.",
                    "label": 1
                },
                {
                    "sent": "In the neighborhoods.",
                    "label": 0
                },
                {
                    "sent": "Graph neighborhoods of the target entities and we're not interested in catching a pattern somewhere else in the graph.",
                    "label": 1
                },
                {
                    "sent": "In this presentation.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I'm going to use this simplified notation instead of sparkle syntax.",
                    "label": 0
                },
                {
                    "sent": "I'm just going to go with like a simple secure notation.",
                    "label": 0
                },
                {
                    "sent": "For instance, Q Prime becomes just two atoms.",
                    "label": 0
                },
                {
                    "sent": "X has people.",
                    "label": 0
                },
                {
                    "sent": "Why and why more than 30,000?",
                    "label": 0
                },
                {
                    "sent": "And finally by Q?",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OMG we do know the answer set of a query Q over in RDF graph G. Right so.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Normally a similarity query is a query in our language that fits that has both entities in its answer set over the given data.",
                    "label": 1
                },
                {
                    "sent": "For instance, in our example, these are the similarity queries.",
                    "label": 0
                },
                {
                    "sent": "Both entities are telecom companies.",
                    "label": 1
                },
                {
                    "sent": "They are located in Europe.",
                    "label": 0
                },
                {
                    "sent": "They own other entities and so on.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Now, as you can see, not.",
                    "label": 0
                },
                {
                    "sent": "Every not every similarity query is as informative and as specific as the others.",
                    "label": 0
                },
                {
                    "sent": "We are operating under the assumption that the more specific similarity query the better, the more informative it is because essentially it captures more information that's common.",
                    "label": 0
                },
                {
                    "sent": "For the two entities and we can.",
                    "label": 0
                },
                {
                    "sent": "Formally capture the notion of specificity using the classic notion of queries.",
                    "label": 0
                },
                {
                    "sent": "Subsumption just to recapture, so Qi query Q subsumes query Q.",
                    "label": 0
                },
                {
                    "sent": "Prime if for any RDF graph the answer set of Q prime over it is contained in the answer set of Q.",
                    "label": 1
                },
                {
                    "sent": "And Q prime becomes more specific.",
                    "label": 0
                },
                {
                    "sent": "Thank you now.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We can using query assumption, we can organize all our comparison queries into partial order.",
                    "label": 0
                },
                {
                    "sent": "Well, a similarity query.",
                    "label": 0
                },
                {
                    "sent": "Look at Q4 for instance.",
                    "label": 0
                },
                {
                    "sent": "It could become more and more and more specific until it's so specific it doesn't fit both entities any longer.",
                    "label": 1
                },
                {
                    "sent": "And if it's only one of them, it becomes a different query or none of them.",
                    "label": 0
                },
                {
                    "sent": "And we're in this stock, we're interested in this Gray triangle, so to say over similarity queries.",
                    "label": 0
                },
                {
                    "sent": "And specifically in its bottom corner.",
                    "label": 0
                },
                {
                    "sent": "So the query that is the most specific.",
                    "label": 0
                },
                {
                    "sent": "Among all of the similarity queries.",
                    "label": 1
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So we here introduce the notion of the most specific similarity query or MSQ, and that's a similarity query minimal with respect to subsumption.",
                    "label": 1
                },
                {
                    "sent": "For our example, for instance the MSQ.",
                    "label": 0
                },
                {
                    "sent": "Captures the pattern that most companies that telecom companies they own.",
                    "label": 1
                },
                {
                    "sent": "Other entities they located in Europe they were created in that time frame and they have the number of employees between 33,000 and 91,000 now.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Although there could be many similarity queries and actually infinitely many similarity queries, good news is that there always exists a unique MSQ.",
                    "label": 1
                },
                {
                    "sent": "Up to query equivalence, of course, if there is any similarity query at all.",
                    "label": 0
                },
                {
                    "sent": "So if the two entities share anything in common, then we can compute a unique MSQ.",
                    "label": 0
                },
                {
                    "sent": "The bad news is that this will require.",
                    "label": 0
                },
                {
                    "sent": "Time quadratic in the size of the input graph, so such computation is not possible over large knowledge graphs like DP Jago.",
                    "label": 0
                },
                {
                    "sent": "Instead, what we can do is we try to approximate this computation.",
                    "label": 0
                },
                {
                    "sent": "So we need an alga.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Item that we take two entities in the graph.",
                    "label": 1
                },
                {
                    "sent": "And compute a query which will be a similarity and which be will be as closely resembling the Fuller misses Q as possible, while the computation is still scalable over large datasets.",
                    "label": 1
                },
                {
                    "sent": "The idea of one such algorithm that I'm going to present now is that we take.",
                    "label": 1
                },
                {
                    "sent": "Entities and we greedily, in a breath research manner, traverse their neighborhoods in parallel and try to collect as many common patterns as possible and in order for this to be scalable, we restrict ourselves to tree shaped patterns.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Right, so an algorithm constructs something, hold a similarity tree.",
                    "label": 0
                },
                {
                    "sent": "That's the one on the right.",
                    "label": 0
                },
                {
                    "sent": "So given the small data describing in be here.",
                    "label": 0
                },
                {
                    "sent": "The algorithm creates a similar tree, which is a directed labeled tree.",
                    "label": 0
                },
                {
                    "sent": "Every node and every edge is labeled with a pair of sets of entities.",
                    "label": 1
                },
                {
                    "sent": "For instance, the root is always labeled with two sets, one containing the first target entity, were interested in, and the other one containing the second entity.",
                    "label": 1
                },
                {
                    "sent": "Look at the edge on the bottom top right so the edges labeled again with two sets, one containing the entity S and the other one containing NTP.",
                    "label": 0
                },
                {
                    "sent": "So in this particular example, all the sets here are singletons, but that's not always the case, as we will see later and for the sake of simplified notation, if both labels in the pair are singletons containing the same entity we just put.",
                    "label": 0
                },
                {
                    "sent": "That entity like TR or 5?",
                    "label": 0
                },
                {
                    "sent": "Now, um.",
                    "label": 1
                },
                {
                    "sent": "The property of such a similarity tree is that it can be directly translated into a query, so we take every edge and it becomes a triple pattern, and we translate every label either into a variable or a constant.",
                    "label": 0
                },
                {
                    "sent": "The query corresponding to a similarity tree is guaranteed to be the similarity query.",
                    "label": 0
                },
                {
                    "sent": "Now, such trees constructed.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "In two parts, part is first we in the forward path.",
                    "label": 0
                },
                {
                    "sent": "We start with the input data.",
                    "label": 0
                },
                {
                    "sent": "We generate our root label node labeled with A&B and then for every such node internally we're looking at all the outgoing and incoming edges that are common for the entities in the first label and in the second label for instance.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "A&B both have outgoing edges with property R and ending in entities 1 two for A and three 4B.",
                    "label": 0
                },
                {
                    "sent": "OK, we've covered all edges for NB.",
                    "label": 0
                },
                {
                    "sent": "Now we move to the next.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Note so a or two and three both have outgoing edges labeled T that are in commonly just edges for the Entity 5.",
                    "label": 0
                },
                {
                    "sent": "So we create an you edge in the tree.",
                    "label": 0
                },
                {
                    "sent": "We can also group edges 3P6 and one is 4.",
                    "label": 0
                },
                {
                    "sent": "And children.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Old.",
                    "label": 0
                },
                {
                    "sent": "In the new edge in the tree, now this process we can repeat the Durative Lee for as long as possible, and we can decide at what point, like at what depth of analysis we stop.",
                    "label": 0
                },
                {
                    "sent": "So this looks already like a good approximation of the pattern that's common for A&B, but in order to ensure that it actually corresponds to the similarity query, we need to do a backward path and we start with the leaves of the tree and going to the route.",
                    "label": 0
                },
                {
                    "sent": "We uncouple some of the nodes, for instance.",
                    "label": 0
                },
                {
                    "sent": "We split the Note 1, two and three into two nodes, 1, three and two 3.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "In the final tree like this, for every note, for every entity in every label, if there should be an entity in the edge in the child edge, and there should be an entity in the child.",
                    "label": 0
                },
                {
                    "sent": "Note that together give you a triple in the original data, for instance.",
                    "label": 0
                },
                {
                    "sent": "For the entity one, there will be an edge in the data labeled with MTS and four.",
                    "label": 0
                },
                {
                    "sent": "When this property is fulfilled, the symmetry is guaranteed to correspond to a similarity query.",
                    "label": 0
                },
                {
                    "sent": "Um?",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And this is the final query for our example.",
                    "label": 0
                },
                {
                    "sent": "Now.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We evaluated the algorithm on three datasets on a subset of Jago of around 1 million triples on the lumen.",
                    "label": 0
                },
                {
                    "sent": "One synthetic data set, and on a subset of the Twitter follower graph which was represented as an RDF graph.",
                    "label": 1
                },
                {
                    "sent": "I'm going to skip the runtime evaluation here, but we demonstrated that the algorithm is scalable.",
                    "label": 0
                },
                {
                    "sent": "For depths of analysis up to 4 four graphs as large as 1 million triples.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "In order to evaluate how closely the output query resembles the full MSQ, ideally we would generate full miscues an approximated queries on the same inputs and compare them.",
                    "label": 0
                },
                {
                    "sent": "This is not possible because I'm on a real data.",
                    "label": 0
                },
                {
                    "sent": "The full algorithm will.",
                    "label": 0
                },
                {
                    "sent": "Time out, So what we did instead we generated a lot of small randomized RDF graphs of size up to 10 triples.",
                    "label": 0
                },
                {
                    "sent": "We ensured that they have various structures, topologies, cyclic anesi quick an on every such small graph we generated both full MSSQ and the approximated one.",
                    "label": 0
                },
                {
                    "sent": "An we evaluated pairs of these queries on the real data and all the three datasets.",
                    "label": 0
                },
                {
                    "sent": "So we know that this subset the answer set of the full misses Q, would be the subset of the answers of the other query.",
                    "label": 1
                },
                {
                    "sent": "But we were interested in what's what's the Delta?",
                    "label": 0
                },
                {
                    "sent": "Also when we evaluate.",
                    "label": 0
                },
                {
                    "sent": "Small patterns query patterns on the real datasets.",
                    "label": 0
                },
                {
                    "sent": "We can see how often the cyclic and cyclic patterns actually appear in real data.",
                    "label": 0
                },
                {
                    "sent": "Anne.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So this table contains percentages of how many entities in the whole graph in every graph where on average were matched by the full MSQ and the approximated queries.",
                    "label": 1
                },
                {
                    "sent": "And as you can see, a survey starts for cyclic and C starts for cyclic patterns and cyclic patterns are actually not very common in real data.",
                    "label": 0
                },
                {
                    "sent": "So indeed it made sense to generate.",
                    "label": 0
                },
                {
                    "sent": "Took create an algorithm that focused on the cyclic.",
                    "label": 0
                },
                {
                    "sent": "Queries and also if we as we increase the depth of the analysis and we reach depth 3, the difference between how many entities were matched by the two algorithms is less than 9%, so the approximation ratio is quite decent.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Yep, that's all.",
                    "label": 0
                },
                {
                    "sent": "Thank you so much.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Thank you very much for the talk questions, questions.",
                    "label": 0
                },
                {
                    "sent": "Yep.",
                    "label": 0
                },
                {
                    "sent": "Hi, there is quite a large body of literature on on entity similarities.",
                    "label": 0
                },
                {
                    "sent": "You know, I'm thinking about embeddings, but there are many other techniques.",
                    "label": 0
                },
                {
                    "sent": "I was wondering whether you consider that as baselines or in general as to compare your method against.",
                    "label": 0
                },
                {
                    "sent": "Yeah, that's a good question.",
                    "label": 0
                },
                {
                    "sent": "So we are aware of the other approaches of course, but.",
                    "label": 0
                },
                {
                    "sent": "Most of them with except of.",
                    "label": 0
                },
                {
                    "sent": "Two or three that I know they they perform, for instance, similarity.",
                    "label": 0
                },
                {
                    "sent": "Computation in a new in like they give you a numeric score rather than a declarative explanation of how the two entities are similar.",
                    "label": 0
                },
                {
                    "sent": "And in this respect, there's not a lot of approaches.",
                    "label": 0
                },
                {
                    "sent": "To compare with and there are no benchmarks.",
                    "label": 0
                },
                {
                    "sent": "Any other questions?",
                    "label": 0
                },
                {
                    "sent": "Q.",
                    "label": 0
                },
                {
                    "sent": "Sorry, then you can come complete apologies I I came in late for your presentation but just looking at the actual results that you put through just on the last slide.",
                    "label": 0
                },
                {
                    "sent": "Fascinating difference between acyclic and cyclic graph.",
                    "label": 0
                },
                {
                    "sent": "Would you just be able to just give us a good conclusion as to as to why the why the difference in the results are so stunning?",
                    "label": 0
                },
                {
                    "sent": "So I was surprised myself when I started writing the valuations.",
                    "label": 0
                },
                {
                    "sent": "Um, the most surprising thing for me was that I expected the Twitter data to be highly cyclic.",
                    "label": 0
                },
                {
                    "sent": "Awhile it turned out not to be the case, so it's explanation for that.",
                    "label": 0
                },
                {
                    "sent": "What what?",
                    "label": 0
                },
                {
                    "sent": "What's your hunch as to why?",
                    "label": 0
                },
                {
                    "sent": "While the results are showing so just such different.",
                    "label": 0
                },
                {
                    "sent": "I'm not 100% sure I was expecting the Twitter follower graph to be to contain more cyclic patterns than the rest, and that that's the case, but yeah.",
                    "label": 0
                },
                {
                    "sent": "I was surprised myself.",
                    "label": 0
                },
                {
                    "sent": "Name other questions.",
                    "label": 0
                },
                {
                    "sent": "So I had a question I was trying to figure out while you were presenting the similarity tree.",
                    "label": 0
                },
                {
                    "sent": "What the relation is to things like simulation by simulations?",
                    "label": 0
                },
                {
                    "sent": "Is there some is it may be similar to these notions?",
                    "label": 0
                },
                {
                    "sent": "I hope I'll answer your question with that.",
                    "label": 0
                },
                {
                    "sent": "So when you generate the MSQ.",
                    "label": 0
                },
                {
                    "sent": "I it is actually the homomorphic image of the two neighborhoods.",
                    "label": 0
                },
                {
                    "sent": "It's not isomorphic so OK. OK, and your MSS Q uses conjunctive queries and filters.",
                    "label": 0
                },
                {
                    "sent": "It uses conjunctive queries and filters.",
                    "label": 0
                },
                {
                    "sent": "What's what sort of language query language are you considering?",
                    "label": 0
                },
                {
                    "sent": "Yeah, so when you look at the similarity tree.",
                    "label": 0
                },
                {
                    "sent": "So if the both labels or a particular node contain only numeric values inside, so literals, then you can take the mean and the Max among both cells and you can generate the filter conditions.",
                    "label": 0
                },
                {
                    "sent": "OK, so let's thank the speaker again.",
                    "label": 0
                }
            ]
        }
    }
}