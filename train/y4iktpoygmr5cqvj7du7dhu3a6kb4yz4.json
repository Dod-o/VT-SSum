{
    "id": "y4iktpoygmr5cqvj7du7dhu3a6kb4yz4",
    "title": "Basics of algorithmics, computation models, formal languages",
    "info": {
        "author": [
            "Colin de la Higuera, University Jean Monnet, St Etienne"
        ],
        "published": "July 2, 2007",
        "recorded": "July 2007",
        "category": [
            "Top->Computers->Programming"
        ]
    },
    "url": "http://videolectures.net/bootcamp07_higuera_bacm/",
    "segmentation": [
        [
            "From University Jean S antigen and the name of the lab is you were curious so sation is somewhere by Leo in the middle of France and I'm going to be talking about something.",
            "Well, TCS theoretical computer science for machine learning scientists now."
        ],
        [
            "So in fact, when I'm saying that it means this, so these are the little parts I hope to go through.",
            "Doesn't mean that each one is NARS work.",
            "I mean, it's just the elements.",
            "I just want to go through in between today and tomorrow.",
            "So let me talk about strings as one alternative model instead of what we saw earlier on, which were vectors.",
            "So strings have got the advantage of being of variable length when we want to talk about strings or about related trees or graphs.",
            "We're going to have to put or we're going to want to put an order relationship over things.",
            "Ordering things mean something come before Evers means that instead of just having a set of objects, we've got an order set which is going to help us for a lot of things.",
            "Once you put orders, another way of looking at topology issues is looking at distances now.",
            "Distances in away is the jewel to what we've been seeing earlier on, we've been talking about similarities about kernels.",
            "Well distances is a little bit the other way around, which is to say the closer two objects, the smaller the distance.",
            "So what sort of distances can we put in?",
            "What can we say about distances?",
            "Right from distances to kernels we saw a point of view about kernels this morning, which is how do we use them or what?",
            "How good they are.",
            "I'm going to be interested much more in algorithmic consideration, meaning that a good kernel is one that we can compute OK, and so what's what's going to make a kernel nice?",
            "As for computation issues, go OK.",
            "So complexity complexity questions are then going to be.",
            "That's clearly tomorrow.",
            "What happens is that we're not just mathematicians doing statistics, we are going to have to deal with algorithms.",
            "And having things that having problems are intractable, somewhere intractable means that we know we can prove that there are no.",
            "Quick normally quick algorithms to solve things, but that's going to be a problem for us, just As for anyone in computer science, so we want to look through this.",
            "I mean, this is in certain places in certain countries, still basic computer science, but since we know that this is not true in many, well, we're going to look at it here.",
            "So the questions about complexity of.",
            "About what you call it complexity in things like yes, P and NP classes and how do you compute the complexity of an algorithm?",
            "So I said around we were talking bout strings.",
            "The two other next steps after strings are trees and then graphs.",
            "So I'm just going to go through those very quickly just to remind you of the vocabulary, or at least to point out the fact that there is a vocabulary for trees and vocabulary for graphs.",
            "They are becoming increasingly important in machine learning.",
            "The what Isabelle was talking about corresponds to an idea where now people are getting a very clear idea of what to do with when you've got vectors, but there are enormous amount of data out there that you do not represent well with vectors.",
            "She gave the example example of strings but well from strings.",
            "You've got web pages, you've got images, you've got enormous amount of things out there that you can't deal with just with vectors, so the next step is strings, the strictness step after you typically treason off trees.",
            "You get to graphs.",
            "OK, so then I said we would be talking about algorithmic complexity in algorithmics, complexity of problems, complexity classes, P and NP, but also perhaps some little different ones.",
            "Stochastic classes now stochastic class is going to bring us to an altogether different topic, that of randomized algorithms.",
            "What's a randomized algorithm?",
            "Basically it's one that is allowed to toss a coin during its run and use the toss of the coin to perhaps derive the result, not with 100% security but with.",
            "Hopefully you know being right more than half the time or something like that.",
            "Why is that important for machine learning will discuss that issue but basically becausw in a way we're running with relative probabilities and statistics all the time, so we can't just say right?",
            "I'm trying to find an algorithm to solve my problem.",
            "Oh, I can't find a library algorithms, so that's done.",
            "In fact, you should be able to because you've got more power.",
            "If you're able to put in probabilities into the algorithms, so it's reasonable to see exactly what more power.",
            "Do these probabilities that you can use during runtime of an algorithm help you do?",
            "So stochastic algorithms, some examples of Monte Carlo and Las Vegas algorithms, and I'll finish with the hardness proof using the two typical classes RP for random probabilistic and NP.",
            "So how this proof for a learning problem?",
            "OK, so that's what we're going to be talking about in."
        ],
        [
            "Today and tomorrow.",
            "So the little bits disclaimer disclaimer means what have I already got to warn you about.",
            "There are other elements in theoretical computer science or in things like that we need to do machine learning that I will not be talking bout, not because I don't think it's important.",
            "I think it's essential, but because they are going to be dealt with elsewhere.",
            "So clearly.",
            "Clearly linear algebra is all over the place, so you're going to have lectures and you're going to have courses specifically on that, but I will not be talking about it, not because I don't believe that but.",
            "Just because we've shared the the Rose second bit, I'm going to try and not be talking bout.",
            "I will be talking about probabilities, but I'm not going to be talking about statistics.",
            "But nevertheless there's clearly to be lots of statistics for anyone working in machine learning today.",
            "OK, so then the second disclaimer is that when you look around theoretical computer science, it is appearing or it is used in many, many fields and they come out the objects that we're going to use, like the strings or the trees or the distances with very different names from 1.",
            "Topic to the other, I'm going to propose one which corresponds to certain number of books, certain number of readings, certain of conclusions averaged, but you may find them elsewhere OK, but it's not as if computer science is a 100 year old topic on which everybody is agreeing on what definitions should be.",
            "Now people are getting a better idea.",
            "Actually, things like Wikipedia are doing a lot of that.",
            "People are agreeing on definitions on Wikipedia more or less, and those are starting to be the sort of standards.",
            "For."
        ],
        [
            "Basic things.",
            "Right, so let's start quickly through definitions.",
            "So when we wanted to deal with strings, the first thing we need are the individual objects the individual objects are letters that come from alphabets, so alphabets, and Luckily they are described by a Sigma, which we've already seen today describing and euro.",
            "So string a string is a finite sequence of letters, and we do note in this way with the bar on each side the length of the string to be able to talk about the length of the string.",
            "Well, I'll be able to say a length of string A12A N is of length and of course then there is a special string which is denoted by Lambda and which is the empty string.",
            "The empty string contains no letters at all, but it is a string.",
            "OK, it is usually used weather for initialization process is orby 'cause you need to describe the set of all the strength.",
            "So you've got one which is the empty string.",
            "Just notice that it's certain books they use notation epsilon instead of Lambda.",
            "They even used sometimes people are very much into algebra, have used the notation one to indicate that was the neutral element epsilon just for the little story.",
            "So if you want to remember, epsilon is in fact English comes from empty and Lambda comes from the German layer, which also means empty.",
            "So it says it's Germany.",
            "There were using the German empty."
        ],
        [
            "Word.",
            "Right, Alternatively, we want to be able to talk individually from each letter in a string will be using it as a mapping and we'll be able to say that the 1st letter of string W. Is A1 the 1st letter over there?",
            "The 2nd letter is a 200 length letter is AN OK.",
            "So if we need to access different letters, we do that.",
            "Next, what do we say if I take a yes?",
            "If I take an individual symbol, I can count the number of occurrences, the number of times each letter appears.",
            "I guess I would use this notation, which is pretty standard to indicate that letter A appears in string WA certain number of times, OK, number of occurrences.",
            "Ah, yes, the notation N in between 2 bars is just the N 1st integers starting to count from 1."
        ],
        [
            "So typically, just to avoid them, we saw how earlier on you had little problems with notations, so the notation that will be using here is when I want to access 2 letters.",
            "I will say this letter AB or C. The beginning of the alphabet, and when I will be talking about the strings and I'll be needing meta characters to indicate this is a string, I will use the strings of the end of the alphabet UVWXYZ beginning of the alphabet, the letters and the."
        ],
        [
            "Forget the strings.",
            "So if I want to talk about all strings, I use Sigma star, which in mathematics is known as a free monoid.",
            "But it's basically the set of all possible strings of finite length, so each string has got one length inside there, and I can talk about all these strings at one moment.",
            "So two important things when we're talking bout strings is to access inside the string the substrings, superstrings and subsequences.",
            "What is a substring substring is a piece of string where you take off something.",
            "At the beginning, you take off something at the end.",
            "OK, so it is.",
            "It is letters in a string that are all one after the other, so you don't take out letters in any city in any silly way, so their mathematical definition is here.",
            "There is a left Betina right bit.",
            "An X is with the left bit in front and the right behind is equal to W, so we'll say that X is a substring of W or the other way around.",
            "It can also say that W is a super string of X.",
            "This is important because sometimes we're going to.",
            "We're going to use these notions and it's important to know the substring.",
            "Is that getting rid of letters at the beginning and at the end of."
        ],
        [
            "Word and whatever is left after.",
            "Same thing is what I did before I was counting.",
            "How many times would an individual letter appear in a string?",
            "I can also count how many times does a substring appear in history, so I'm going to hold string and I denote with W bars, subscript U the number of times you is inside W. So it's really the number of left different left bits.",
            "I can get rid of and still find my W in my my you inside the W. OK.",
            "So I just amplificador my notation to go."
        ],
        [
            "Just one little bit further.",
            "So far the word for substring.",
            "Well, I've got another word which is subsequence.",
            "So subsequence is the same substring.",
            "The only thing is that instead of just getting read it off letters at the beginning and at the end of the word.",
            "I can get rid of them in any position.",
            "OK, so subsequence is also used in math, just to say that I can take the 1st, the 4th or 7th and the 8th letter.",
            "OK, so that makes me have a subsequence instead of a substring, and I've got a little recursive definitions to say that obviously a string is a subsequence of itself, and that if I take off one letter then I obtain a subsequence, so I can repeat that recursively and through the third rule, which is saying that is X is a subsequence of Y&Y is itself a subsequence of said.",
            "Then X is a subsequence of Z."
        ],
        [
            "OK.",
            "So let's have a little bit of combinatorics now, why am I talking about combinatorics?",
            "Becausw they will be involved in the algorithms.",
            "OK, I need to know how to count to be able to.",
            "Then when I am going to want to do things like extracting features which we saw earlier on was important.",
            "I will want to count how many times does an individual substring or individual subsequence appear to be able to do that?",
            "Well, I need to be able to know at least how many there are in in theory.",
            "So if I'm talking bout prefixes, so prefixes or substrings.",
            "Which what comes before is the empty string, so it's really the beginnings of words.",
            "I mean the.",
            "Luckily, the Luckily the semantics.",
            "Luckily, the words we're going to use to define the concepts to define the mathematics of these things are pretty speaking, so they correspond to what we like to do.",
            "So how many prefix is a string have?",
            "Well, a string being of length N can have N + 1 different prefixes YN plus one because you've got to count the empty one and the string itself.",
            "So there's a prefix of length 01 of length 1, one of those two up to the length.",
            "How many substrings can you have?",
            "Well, this time you're combinatoric's correspondence and choosing one individual starting position when individual finishing position in your string.",
            "OK, I think we'll cross each other, so there we know that the mathematics of it is to give you N * N + 1 / 2.",
            "If I'm not wrong, might be N + 1 * N + 2 / 2.",
            "You gotta check that, and now it's it's quadratic OK, the number of substrings is quadratic, so it's not something too big.",
            "Something we can do if we want to actually go through all the different substrings of a string to be able to compare with something else, then that's something we can actually do.",
            "Now the number of sequences of a string that's that's not quadratic.",
            "That's not polynomial, less exponential, because basically to be able to obtain a subsequence from a sequence, what you do is you just take the 1st letter and decide do I want it, or do I not want it.",
            "2 choices.",
            "I look at the 2nd letter, do I want it?",
            "Do I not want this?",
            "Two choices, 3rd letter, two choices and so on till the end?",
            "So two by two by two by two.",
            "This means that any algorithm that would consist in saying oh, we go for each subsequence of W do.",
            "Is doomed to failure.",
            "Not true if W is not very big.",
            "That's all right.",
            "If you're talking about bioinformatics, then that's wrong.",
            "You're clearly not going to be able to do anything like that.",
            "OK, so you're going to have to think about it."
        ],
        [
            "Different way of doing things.",
            "So let's just look at a few of these basic algorithmic problems on strings.",
            "So the first thing is that if I've got two strings looking for the maximum subsequence of the two strings, we know how to do it.",
            "I mean, there are different ways of doing this.",
            "There can be various maximum, so that means the longest subsequence common to two strings.",
            "So there's many reasons to do this.",
            "I mean, when you've got a set of strings, you may be wanting to take two strings and same.",
            "I'm trying to find for machine reasonably machine learning reasons, trying to find some sort of a pattern that suits these strings.",
            "Somebody try and find something that that corresponds OK, so the problem about doing this is that it looks nice.",
            "You can do it, and we're going to see how to do it, but for two it's OK. We know how to do it, but if I'm given a set of strings right and I want to find this sort of pattern, this representative string for a set of strings which could be sort of what is in common with all these strings.",
            "Then I'm going to be facing what we're going to call an NP hard problems.",
            "Oh my, does everybody know what an NP hard problem is?",
            "Yes, does anyone not know?",
            "Now 1 two OK. NP hard means that as far as the state of what people believe in this moment, there is no polynomial algorithm.",
            "To solve this problem.",
            "OK, So what do I mean by assault or as what people believe it means that there's a hypothesis out there which is the P is different then POK which is widely believed in or else well, I mean then you've got a lot of money to to make because this is one of the big open problems in mathematics.",
            "But anyhow, we all believe that P is different then P, which means that.",
            "We all believe that we're not going to find a polynomial algorithm to do that, and even if there are reasons to criticise the polynomial barriers still, it's usually accepted that it means that we're not going to have anything good to do to work with OK, so it means you can't do that.",
            "You can't solve that problem.",
            "So computing the maximum subset of this maximum subsequence event strings is NP hard.",
            "Now, of course finding the maximum substring is easier.",
            "OK, that is not going to be a problem.",
            "If anything we can leave that as an exercise just to find the longest substring common to a set of string."
        ],
        [
            "OK, so up to a set.",
            "Now let's just see one important algorithm.",
            "This is in fact Jose about Cather, who told me who it would be good if you tell them that.",
            "OK, well, tell them that.",
            "So why?",
            "Because?",
            "Because looking for patterns is something that we spend our time doing.",
            "I should say that if he's able, gave us the general questions or the general problem is saying, OK, you know the scene from high up high level.",
            "This is what we're trying to do with trying to learn.",
            "I'm probably going to be talking about what are the little things we've got to do to actually implement the big idea.",
            "OK, and to implement the big idea, we have to be able to manipulate the different examples, which in my context instead of being vectors, are going to be strings and do things simple things with them.",
            "Like for example, finding if given a pattern feature.",
            "Does this feature correspond or not to this string?",
            "So I have got one little string, one big string, and I want to know if the little string is a substring of the big string.",
            "OK, so this is the sort of operation that is not just done once this is sort of operation this is going to be done many, many times.",
            "You're going to get all your examples and one after the other.",
            "You're going to be checking if your patterns fit or don't fit.",
            "So having fast algorithms to do this is going to be an important issue.",
            "So one of the most famous algorithms to do this is a close Morris and Pratt algorithm KMP.",
            "So at least the first time you should all know if you're into computer science.",
            "So we've got a little string S and does it appear as a substring of the big string U.",
            "So it's an algorithm that does the following its contrado.",
            "What you do is follows.",
            "It's going to take the little string and it's going to do a pre pass.",
            "So just look at the little string and see what are the little sequences that repeat themselves in the little string which will help me.",
            "Then afterwards do my passing faster.",
            "OK the idea is if not, what's going to happen?",
            "Is my only way to do things is I've got my very long string here.",
            "Very long string means you can think of bioinformatics and certain of thousands or millions of characters, and I've got my little string here and what I'm trying to do is to fit it here and pass it over this until I say OK, this is alright.",
            "OK, this is exactly this substring or reach their end and say we've missed this little string is not part of the big stream.",
            "So what can happen is that I've got something like a B abab something like this and my little string, which I'm passing starts with a B and continues also with a B.",
            "Sorry and then here I've got to see or and a.",
            "Sorry and here I have got.",
            "And a note here, I'm going to see.",
            "So as I'm passing this over this I I'm going to check up to here.",
            "Uh, wrong, let's do it bigger.",
            "OK, ABA.",
            "Not the example I've got any high Bab.",
            "AB.",
            "Hey BCI ABA see OK as I'm coming here what I would like to do is not have to pass up to then then find out I've missed move this on a little bit and then realize that this perhaps some catching up that I could be doing OK so as not to have to start again just do everything but just sort of remember or one second as soon as I've got another a well I can match towards the beginning so let's see how we do it on this example.",
            "So the first thing I do is I've got my little substring S which is, which I'm going to pre pass and see what are the things that repeat themselves in it.",
            "So for example, I can see that my little string S starts with ABCDABD.",
            "So I start with A&B no problem.",
            "I'm going to just run it until the end and here I can see I've got under the A which means that if at some moment of my pass I find myself that.",
            "I have been able to match up to here, but here I have failed well, instead of starting exactly at the beginning, I can say yes, but I have failed.",
            "But this a could now be the first a we have got here.",
            "OK, so being the first say that we've got here, well, I've got at least one step less.",
            "One comparison less to do.",
            "I continue here.",
            "I've gotta be.",
            "Since I had an A before.",
            "Well, if after this B I've see that what's happened is that I don't find the D that's here, but perhaps something else.",
            "What I should do is at least common.",
            "Consider that the two first positions were right, and then I should perhaps consider looking at this D or whatever letter hasn't failed to match with this D. Try and match it with the 3rd letter here these.",
            "The intention of this algorithm and of all the algorithms of string matching, is to just try and do slightly better than the silly algorithm that would just consider trying starting again every one time.",
            "OK, so we precompute from the little sequence this table here a table indicating just what is the longest correct prefix in the case things go wrong.",
            "So here if by here.",
            "The prefix, sorry if you don't find a B.",
            "Well, at least I know I've got one letter right which is the A that is here.",
            "If I reach here and I don't find a D, well, I do know that the two letters before that were right, which are this A&B and I can do and I just continue from there."
        ],
        [
            "OK.",
            "So let's just give the idea I'm going to."
        ],
        [
            "The algorithm will come back to it, give it on a on a picture.",
            "So I am trying to run to look if ABA C belongs to the long sequence, which is a ABCACAB.",
            "Acac OK, so I precompute my little table here where the only thing I do know is that at one moment if I fail here this little a, I could consider it the 1st letter of the string.",
            "So let's go through it.",
            "I have got my long sequence which is here, which is this one here I've got my short sequence which is here.",
            "At least we're going to look at, which is the current letter.",
            "So I try and compare a with a.",
            "Everything is OK, I just go forward in both strings.",
            "Then I've got to be here in the short sequence and I've got an A in the long sequence.",
            "Algorithm says sorry, you can't match this.",
            "So that moment what I'm going to do is I'm going to look.",
            "Here and say OK, I have failed.",
            "Where do I go back to says sorry I can't help you.",
            "You can't done enough.",
            "You haven't got anything that you can keep for further, so you've got to come back to the same place and you're going to find yourself doing.",
            "I'm sorry here.",
            "There's a column missing which is just saying compare this A with the A you have just seen and you advance one.",
            "You compare the B with the next a same as before.",
            "It says sorry the B and they're different.",
            "You've got to come back to start so you compare the A which is here.",
            "With the first a.",
            "Then the B with BI everything's OK. B&B that's alright, they match, so it's the B which is here and you can notice we've got the big and beginning of the fragmente be.",
            "So the B compares with the B.",
            "Then you advance you've gotten a from the little sequence and a C here.",
            "But what happens there?",
            "Well, it's going to say no, it doesn't work.",
            "But again, I'm sorry, just the fact that I've got to see here doesn't help us.",
            "We can't say exploit this to be able to gain something, so we've got to go back to the start.",
            "So let's get to the interesting case.",
            "So then we compare the A with the.",
            "Sorry, the Ather we've got here with this C, then the sorry the A with the A, the B with the C. Let's get to a nice place a with the AB with the B.",
            "So it's the bee that is here.",
            "A the third A which is here with the A that is here C with the C and we've got our string and I affect my example isn't that useful because I haven't sorry see.",
            "The only place I did was here.",
            "ABC would have been able to just save one position.",
            "OK, I'm sorry it's not.",
            "It's not an easy one to explain the people in strings.",
            "Spender spend about 3/4 now explaining this and I've tried to do it in 10 doesn't."
        ],
        [
            "OK, so just a quick conclusion about about these where business of looking for patterns in strings looking in patterns for strings is an open area of research where people are actually trying still today to gain as much as possible, But basically on the constants you can't gain on much more than on the constants to try an rarely do as fast as possible.",
            "These looking for patterns in strings.",
            "So just a word, the complexity of KMP instead of being as she might have been the mermaid.",
            "Application of the complexity of the sorry, the length of the first string by the length of the second string thanks to this sort of little tricks, we managed to have a complexity which is length of the first ring plus length of the second stream.",
            "OK. Plus, because you're basically only you're never going backwards, which is what's interesting."
        ],
        [
            "OK, so we've got these strings and now what we'd like to do is to be able to put an order over the set of strings or over us Earth set of strings.",
            "So you're given a set of strings.",
            "Are you wanting to be able to go through that set of strings in a particular way?",
            "So what sort of order relations do we have?",
            "So the first thing is we're going to suppose we do have an alphabetical order.",
            "OK, that's basic.",
            "So you've got an alphabetical order over the letters.",
            "OK, so you've got that.",
            "And then what can you build from that?"
        ],
        [
            "So once we got the alphabetical order, the first ordering you can do on strings as a prefix ordering the prefix ordering just is to say that one string is a prefix of the second string.",
            "When string is a prefix of secondary, this is not a total ordering.",
            "I didn't say we were only going to do to chlorine, but this is a nice ordering that can be used in certain cases, right easy?",
            "Second one, which is a well known order, is the lexicographic order.",
            "This is the dictionary order.",
            "The dictionary order is.",
            "You've got an alphabetical order on the symbols, so you can then put whatever set of singles were so set of strings you have, you can put them in a dictionary.",
            "The dictionary might be infinite, so it generally contends to say that either one string is a prefix of the other right, or they share up to a certain place, a common prefix, and then if I look at the next letter with that next letter is going to be the difference one.",
            "Just for the alphabetical order."
        ],
        [
            "OK, there are problems with the lexicographic order.",
            "They rarely big problems.",
            "The problems are that you can't do recursion based on the alphabetical order.",
            "Basically, if you look at certain cases, I can if I decide that a is before B, the real problem is that in between A&B, where we'd like to be able to get there reasonably quickly, there's actually an Infinity of strings.",
            "For the alphabetical order, because I can do a AB, AAB, AAB and so on and all these strings.",
            "Or all.",
            "Smaller than B.",
            "So that makes it not a nice ordering to work when we're working with strings, even if it's the natural one because they were using when we were looking into a dictionary.",
            "But in a dictionary we do not have.",
            "An Infinity of strings, so it's not a problem, but if we do have a possible Infinity of strings, then we've got a problem.",
            "So the next one that is mostly used when people are working, I'm saying grammatical inference because that is my topic, but you use it more generally when you're working on strings.",
            "Is the length legs order?",
            "The idea is to say we want to avoid this, but we do like the dictionary order, so we'll just make sure that we start by ordering with the dictionary all strings of length 0.",
            "There's just one length of the string of length 0, which is Lambda.",
            "Then we take all the strings of length one, so that's just the individual letters.",
            "Then all the strings of length 2.",
            "Then all the strings of length 3.",
            "An so on that makes a nice order in which we do have the strings that arrive more or less like we'd like them.",
            "So with their hierarchical order, if we just got 2 letters in the alphabet, which RA&B, we would find this first strings for this order?",
            "The strings that are there?",
            "OK, so we've got one string of length.",
            "12 strings of length.",
            "Sorry, one string of length.",
            "02 strengths of Lang.",
            "14 strength, length, 28 of."
        ],
        [
            "Three, and so on.",
            "OK, so just for the sake of an example, if we've got a B&C with a smaller than B and smaller than C for the lexicographic order, we'd have AAB, which would be before a bee.",
            "But if you took the length length order, you would have it the opposite way around because one is of length two and the other one is of length three.",
            "OK seems easy and carefully if you're looking at the prefix order, well, maybe is neither prefix of AAB, nor is a beer."
        ],
        [
            "Pics of baby.",
            "OK, so this is one of the ideas of topology is to put order over things.",
            "The second idea, typically into apologies to put distances over things.",
            "Again, so you've got a set of strings or a set of objects and you wanting to put some sort of a distance over this.",
            "We were hearing this morning mentioned the case of the K nearest neighbors.",
            "All these techniques, typically in pattern recognition or based on having distances.",
            "So what do we know?",
            "Who know about distances and how do we?",
            "Build distances on."
        ],
        [
            "Typically strings.",
            "So the first thing is what is the problem?",
            "Well, the problem is to build some sort of a function which, given a class of objects, we're going to talk about strings, but at the same time there are distances on graphs.",
            "There are distances on trees.",
            "You can have distances or not.",
            "Anything you're trying to represent, so you've got these objects and repertoar representations of these objects, and you want to function such that the closer X&Y or one to each other, the smaller smaller is the distance between the two.",
            "That is what a distance.",
            "Is."
        ],
        [
            "OK, I come to it in a second, but then apart from saying that apart from saying that you've got this class of objects and representations, an just something that is the closer, the smaller the distance while you like, have some mathematical properties so the mathematical properties of these things here and they define what is called a metric.",
            "OK, now when you read.",
            "Books and articles.",
            "The confusion about the word and the distances is really very complete, right?",
            "Some people are going to call distance something that does have the properties and some people don't call it like that.",
            "Some people use distance with all sorts of things and not.",
            "So it's very important to know if we do have the properties and which one we do have or not.",
            "Why for algorithmic reasons?",
            "OK, because you will not be able to use the same algorithms if you've got certain properties about this distance you're using or not.",
            "So just let's look at what other?",
            "The properties that are usually imposed, one of them is saying that the distance between X&X is 0.",
            "Fair enough.",
            "The second one is to save the distance between X&Y is the distance between Y&X, so saying this symmetrical you can think about distances if you've done already machine learning, you realize that quite a few of them do not already comply with this.",
            "Being symmetrically is not always that easy.",
            "3rd, typically that is every case is it has that is that D of X&Y is positive, so you want to distance to be positive.",
            "Having negative distances isn't fun, even if there are cases where are people are doing distances where the result is not a number, or it's a complex number, or it's something completely different for because that's what they like.",
            "And then there are two other ones which are reasonable or important.",
            "One of them is to say that whenever we got the distance between X&Y is 0, then it's because and only because X = y.",
            "That was very important, because that means that when we've got that property, it means that every time we are testing the distance, we can actually at the same time try and test for the isomorphism of the structure, or for the quality of the structure, or the equivalence of the structure, so we.",
            "Problems where whatever you're manipulating finding out if the two things are the same.",
            "Take graphs for example.",
            "OK, if you do a distance in graphs to try and see if two graphs are whatever the distances between them.",
            "If you've got this property here, DFX y = 0 implies X = y.",
            "What does it mean?",
            "It means that what you're computing will help you solve the graph isomorphism problem.",
            "Who knows what the graph isomorphism problem is?",
            "Now.",
            "My best, it's basically you take one graph and you just shove everything around.",
            "You move things.",
            "I mean they you rename the labels and you've got another graph there.",
            "There's that and you're trying to see.",
            "Is it the same graph you know just where you move things around or not.",
            "Is it just a question of representing in space the same object?",
            "So if it is the same object then that means that we have got the graph isomorphic whether they're isomorphic.",
            "If you don't, it means that means that they are not isomorphic, so this happens all the time when you are trying to do or represent.",
            "I don't know images by graphs where people are trying to think.",
            "Is this the same images?",
            "This by saying?",
            "Is this the same graph as this?",
            "Now, this is what you call.",
            "This is another untractable problem.",
            "It's not quite NP hard, right?",
            "But it's regarded to be hard in the sense that there is no polynomial algorithm either to solve that problem.",
            "At least people believe that there isn't one.",
            "OK, so this means what it means that if you're thinking of doing nice distances that have all these sorts of features, but at the same time your lovely little distance is solving some problem that is supposed to be difficult, then it means that something is wrong somewhere.",
            "Probably your anger or your algorithm is exponential, or you're thinking you're doing something that you're not doing.",
            "So that's why knowing a little bit what we're doing about this is important.",
            "The last equation is known as the triangular inequality, which is typical, right?",
            "We know that if the distance between XY and added to the distance of Y, zed should be larger than distance between the X and then this is not always the case in a lot of distances that are used in practice, typically in bioinformatics OK, but why is it useful to have it?",
            "I hope we can think OK. You know it's we may want it, or we may not want it.",
            "Is it just because we want to do mathematics?",
            "No falge arhythmic reasons.",
            "When you do have it, you can actually use it.",
            "The triangular equivalence to avoid, for example searching and hold whole chunks of the data space, because you can use it to say, well, you know.",
            "I know that this is already more than whatever threshold I was looking for, so there's no point in looking at these because I will be even further.",
            "OK, so being able to use those properties or related to doing things like that.",
            "OK, so just."
        ],
        [
            "True.",
            "Summarize we've got a distance, which is something which is saying I take some elements and the closer the smaller.",
            "And then we've got a metric, which is when we got, I reduced the five equations into three because they can, and you obtain these three equations there.",
            "OK."
        ],
        [
            "So what can we do with strings that you know just a word of conclusion?",
            "Pros and cons, a distance in the general sense is more flexible when people are working on applications, people are going to try and find things that seem to work the correspond to what they feel the problem is Isabel was mentioning earlier on how you are choosing the features so that the corresponded to what your intuition of the problem was.",
            "So with the same here, choosing the distance so that it corresponds to what you want.",
            "Same with kernels kernels.",
            "You often got to choose because you really think this is the sort of property that the kernel you need for this application should have.",
            "But then at the same time, if you need algorithmics, well, you're probably going to have to have."
        ],
        [
            "Some are symmetric somewhere.",
            "So if we back to a big back to strings were going to say that there are four types of distances.",
            "I'm glad there's only three points.",
            "No, there's four types, and this is the first.",
            "So we're going to go through four different ways of building distance is the 1st way is to say, well, I'm going to try and see how many modifications I need to go from string X to string Y, so I'm going to count how many changes, how many individual changes I need to be able to get to transform string X to string Y.",
            "If you're more interesting trees, you can think trees.",
            "If you see more interesting graphs, you can think graphs on vectors of numbers.",
            "That's clearly not of real numbers.",
            "That's clearly not indicated, but on what we're doing it is.",
            "So you're going to try and do this, and you might think about normalizing, saying yes, but I mean obviously if my string is of length several million, then I mean I'm going to have to do some changes and we'd like this to be normalized, taking into account the length of the string.",
            "That's the sort of idea and the most typical, and the one that I'm going to tell you about all of these distances is called the edit distance."
        ],
        [
            "But before I tell you about that distance, I'm just going to run through the other ones.",
            "The second one is to say, well, we're going to be able to compute some sort of a similarity using another way of time.",
            "It looks word think about a kernel if you prefer, but not necessarily something even looser.",
            "A similarity between two strings.",
            "The idea of a similarity being the more things are in common, then, then the larger the similarity.",
            "And then I'll try and find some way to be able to convert this.",
            "Similarity between two strings into a distance."
        ],
        [
            "And there's at least two methods I know of that can do this.",
            "So the first method is to do.",
            "The following is to just take as distance between A and B2 to the power set minus the similarity, and A and B. Yeah, that's way so.",
            "The more they're similar.",
            "2 minus is going to make it closer.",
            "So we're going to have distances that are really going to be of.",
            "This sort 1 / 2 one over four 1 / 8 one over 16.",
            "So for mathematical mid air and reasons this is OK for practical reasons is not.",
            "It's never used this when I'm just saying it does exist and if we relate with some sort of kernels at some moment.",
            "So typically the people that use the prefix is well will say well what's the length of the longest common prefix we've got between two strings.",
            "We take that in common.",
            "We look at the length of this prefix and we take 2 to the power set minus this length and we obtain the distance.",
            "We've just one silly little case.",
            "If everything is in common then we will say that they've got infinite.",
            "Things uncommon and then we say DFA of B is equal to 0, which allows us to find what we want.",
            "Equal to 0.",
            "Then yeah, if equal if A = B then DA&B would be something like 2 -- X of Infinity.",
            "Open distance between and people with you.",
            "Yeah.",
            "First, why we're doing it that way, but I mean, seeing it's infinite, the similarity being infinite on finite strings doesn't make much.",
            "It's more like a trick to be able to deal with this.",
            "We're just going to decide that it's infinite, because you should be saying OK, where is the length of the string itself, but so is too.",
            "That would make it not not equal to 0.",
            "So that's."
        ],
        [
            "First method, the second method, which is the one that is used more like by kernels.",
            "I will check this.",
            "I actually wanted to check it, but the idea is the following.",
            "You do the distance, so you've got S, which would be some sort of a kernel.",
            "Typically the people that use kernels do this sort of way and what they do is they well they take the similarity between A&A plus.",
            "The similarity between B&B and then you've got to well subtract 2 times the similarity between A&B.",
            "If it's symmetrical and if not, I've just done it this way like this.",
            "OK.",
            "So this is a sort of way that is used if you're writing it down, put a question mark because I had to check it on some slides by somebody who would pass me this.",
            "I didn't check, so the conditions about this, yes is that X is equals Y.",
            "And yes, there's a triangular.",
            "The triangular inequality only holds when certain special conditions over the similarity hold, but people for the people that do kernels will try and transform the if needed.",
            "Their kernel into a distance.",
            "If somebody, yeah, we can look at that also."
        ],
        [
            "So in in exercise session.",
            "So the 3rd way of doing the distances right is to extract some features.",
            "So we saw that this morning and to say, well, we don't want to manipulate strings at all, because what we really know how to manipulate our vectors.",
            "So we're going to take these vectors and we are going to.",
            "Measure some, so we're going to take some measurable features.",
            "We're going to decide on the length of a vector, and we're just going to compute this numerical vector for a another numerical vector for B and then we can use some distance between them.",
            "Any distances them any norms we've got over R to the North and work directly on the vector representation of the strings.",
            "So you could think, well, you know why is he telling the strings?",
            "If we can do this.",
            "The problem is that usually by doing that by choosing this the features we're going to lose something about the.",
            "About about the strings themselves.",
            "OK, so there are cases where you want what you call people that are working on say, natural language processing on translation issues.",
            "They're going to need a long term dependencies and things like that, which are usually going to be lost when we go and extract features."
        ],
        [
            "So the 4th type of distance is in fact related to the first few, which is to find this time an infinite set of measurable features.",
            "If you think what's the point of looking for an infinite where we see a bit later.",
            "But for example, if I look at all the possible subsequences, OK, well the number of possible subsequences is infinite because it's Sigma store itself.",
            "So in a way, if we're trying to count it on this feature space, we're going to have an infinite feature space, even if for each.",
            "Individual string the number of values different from zero is going to be finite.",
            "But still, you're going to have an Infinity of the possible Infinity, but at the same time you can describe things as an infinite space and you just do distances on infinites.",
            "Just do you define the distances on the infinite space?",
            "And that's what you're going to manipulate.",
            "OK."
        ],
        [
            "So I'm going to give their distance and then then pass on to Tamika.",
            "Edit Distance defined by 11 Stein in 1966 and algorithms or typical algorithms are from Vaknin Fisher 1974 and there's been a lot of things that since."
        ],
        [
            "It is very important.",
            "I'm going to describe this Mr Levinstein, sorry.",
            "And there's always the mystery of knowing what he's eating."
        ],
        [
            "So the the so this is really important.",
            "This is when we're talking about strings.",
            "This is the the top distance, the distance that is mostly used because of many reasons, one of which is that it does take into account things like the noise.",
            "OK, when you type a text Ann, you're not very very careful where you're going to get a letter or you're going to type twice the same letter you're going to type one letter instead of another.",
            "OK, so all that sort of noise you want to.",
            "Be able to.",
            "To talk about it, and typically you're going to talk about it through the edit operations.",
            "The edit sort of mistakes you've made between the role text and whatever you've typed in biology is the same.",
            "You may have the role Jinan.",
            "Whatever's happened.",
            "Some transformations.",
            "Things have appeared in certain positions.",
            "There's been some transformations where all this is also described by by this sort of distance.",
            "So the basic operations are three insertion, deletion, substitution, and then sometimes people invented any things like taking two consecutive characters and saying, well, you know, I've typed one before the other instead of the other way around that."
        ],
        [
            "But we're not going to talk about it here.",
            "So it can be described in terms of rewriting rules.",
            "This is just for the mathematics.",
            "We're not going to use it here.",
            "And the idea is to say that we can't see much because strange.",
            "So the idea of the other is just to say that we're taking a string right now.",
            "Everything that happens is the letter A disappears.",
            "In fact, they seems to have disappeared already.",
            "Shouldn't have here.",
            "There's an insertion of a letter A and here letter A has become a letter B.",
            "Even if you can't really see it.",
            "Something strange with the color."
        ],
        [
            "So examples where the three operations can be described as follows, right?"
        ],
        [
            "It's easy.",
            "And typically the idea is to say, OK, we're not going to have just one operation, because in the text there may have been various operations that have.",
            "Mum being made to transform first steps into the second text, so we will consider what is called the reflexive and transitive closure of this derivation.",
            "Saying how many operations have we had to do to go from text 1 to text too?"
        ],
        [
            "Now then, if I take 2 texts, there may be various ways of modifying text 1 to get to text to write.",
            "I can perhaps start by an insertion, then delete and they note all equivalent.",
            "So what the levinstein distance tells us is levinstein distance is the smallest of the paths that allow us to get from text 1 two text too.",
            "Behind that there is the idea that the smallest is the most probable.",
            "There's there or come idea all that is not entirely justified, it is just the way it is defined.",
            "We will suppose that if there are various explanations of how text one became text to the shortest path is the one that really came through this OK.",
            "So in this case, for example from a BAA 2A B, where we can see that we can do it in two operations, one operation consistent, for example in raising the B and the second one.",
            "Then we've got a A and then the AB.",
            "The last a becomes the B.",
            "That's one of the possibilities."
        ],
        [
            "There, but there always is.",
            "Now then, this is the easiest case.",
            "This is the case where every operation has got the same cost and the cost is 1.",
            "It is the curse operation.",
            "While this is what normally people use, at least when they're doing mathematics, or at least when they describe the algorithm, so it is represented by a confusion matrix saying that to go from HA costs 0.",
            "So basically the operation, the emptiness operation code zero doing nothing costs 0.",
            "Going from A to B, meaning substituting the a biobi will cost 1.",
            "And then a two Lambda, the last column, Lambda, means the empty string.",
            "So H Lambda means erasing the a, deleting the a, well that also costs one.",
            "There's a cost one, and you can also see that inserting in a the here inserting the A here and I will also cost 1."
        ],
        [
            "But it's not the only confusion matrix.",
            "We can have a confusion matching per problem."
        ],
        [
            "Is another mathematical one, and this one here is a typical sort of confusion matrix used by the biologists.",
            "Here you find the different proteins and that you're going to find this called.",
            "This is the one they called the Blosum 62 matrix.",
            "Which in fact, if you're looking at it is giving us some negative and some positive weights, and it's even giving us some weights on the diagonal saying that there is a way to go from C to C, so it's not exactly working the way I'm saying for them, it's actually they're going to try and have the biggest cost possible at the end.",
            "This means that it's going to give you plus nine points if that C is not converted, but for example, converting a W into a C is minus two points.",
            "So you can also use this metrics and also use the sort of algorithms we're talking about.",
            "Two compute how much it costs.",
            "How easy is it, or how possible is it that this string of proteins became this Stringer?",
            "Became this everyone these are OK."
        ],
        [
            "Some conditions that typically have to hold is that the confusion matrix itself has to respect the triangle inequality for things to be nice."
        ],
        [
            "That sounds easy.",
            "And before giving the run of the algorithm, the idea is that it is related with the question of alignment.",
            "So alignment for the biologists is very important.",
            "You're going to put your two sequences one under the other, and you're going to try and align the different positions that correspond, so finding a good alignment is finding the shortest possible alignment, and all this corresponds to again, trying to find the edit distance.",
            "So if I look at this alignment here, all I'm saying is that basically have aligned as I could.",
            "I've got some red things here which really say this isn't really proper.",
            "This A has had to become a C and this C has had to become an A.",
            "But this a has been deleted.",
            "This A has been deleted and there's been no insertions.",
            "So there's been two deletions and two substitutions and no insertions, so the distance represented by this alignment would be off for, so I can also measure things in terms of alignment.",
            "So you can also align and people are trying to do this when you're looking at graphs or trees.",
            "It corresponds to saying what corresponds to what.",
            "When you're trying to do.",
            "In a learning operation, you're trying to pair things and say, well, this correspond to this.",
            "You don't want to just have the answer.",
            "Yes, you want to know how, why, what goes with what OK."
        ],
        [
            "So this sort of thing is giving you that.",
            "Another possible alignment is this one, so here I've just aligned a bit.",
            "They would have probably done it with gaps the biologist, but it comes to the same.",
            "I can count how many wrong things I've got and I've this time got no no substitutions where I've got a three deletions and one insertion."
        ],
        [
            "So the general algorithm to do this what wouldn't work is to do it recursively.",
            "You know recursive algorithm saying, well, it's easy.",
            "You know I've got my two sequences and I try and align the last two and if I can't, I recursively trying to line the rest and then get my results.",
            "That won't work out the formula like the one that would be here would really make us reach necessarily an exponential algorithm.",
            "OK, this is algorithmics where you can see that if you start doing these things, you're just going to keep on computing.",
            "All the pairs a number of times, so that's where things like dynamic programming come in, which."
        ],
        [
            "We'll be seeing quite a bit off and the dynamic programming consistent, saying, well, let's do it in such a way that instead of asking, you know top down.",
            "So starting from the long things and going down to the bottom, let's sort of try and do the computation little by little coming up by sequences.",
            "Like each time a little bit longer until we get the whole sequences were looking at the formulas look like the same.",
            "I've just given the formulas here with the case where we've got the cost function when it comes to the same.",
            "It looks like like the same.",
            "Let's just see how we how we do it on an example."
        ],
        [
            "So suppose we're trying to compute the dessert, the edit distance between string ABA, ACA, BA, and string will not read it from top to bottom.",
            "OK, BA si AAB, So what we're going to do is we're going to suppose landfill it from from the bottom here to the top here, so the idea is that I can.",
            "I can fill in this line very easily by just looking at this letter and just increasing this.",
            "And not increase it when I find the same letter.",
            "So here's 11 because I've got a B2345.",
            "Good.",
            "I know we've already counted it.",
            "Sorry one.",
            "Yeah OK.",
            "The difference the distance between B and this sequence is either equal equal to the length of the sequence or the length of the sequence minus one if it contains AV.",
            "So this can be initialized and this can be initialized.",
            "So suppose we've initialized things OK.",
            "It's not very difficult to initialize the first line and the first column.",
            "Now what we're interested in is filling in an individual cell, like this one.",
            "So what we're going to say is.",
            "The first case, let's find an easy one here.",
            "No, no, no no.",
            "Gotta find a nicely nice and easy one.",
            "OK, this one here right here.",
            "How do I fill in this cell?",
            "Well, what I notice is that here I've got C. And here I've got to see.",
            "So the distance between this sequence and this sequence here, well, is exactly the same as the distance between this sequence and this sequence.",
            "OK, this I can align this C with this.",
            "see I can align the two last letters, that's easy.",
            "So I gotta see here and see here.",
            "So this to the comes from here is just this two that has been propagated up towards here now.",
            "Then in the normal case like this one, where here I've got an A in here I've gotta be so I've got two different letters while the there are three possibilities for computing this.",
            "It's basically either the last operation is a substitution, in which case I've got count one for the substitution plus the cost of the edit distance between.",
            "A&B, so as as in the string A and the string be or else the last operation has been an insertion sort of the insertion of a B so in that case what I had is I had a baby with a so it's cost 1 + 1 for the insertion or else what I've done is I've done a deletion, so in this case what I've got to do is the distance between B&AB sorry and then I've got this a here and I'm going to put it up here.",
            "So it's one plus.",
            "Every time I've got something like this for me to hear is 1 plus men of this one, this one and this one?",
            "And this can be computed through any any type of.",
            "Programming language, you can compute it with something like, say, Excel or something similar.",
            "So what we notice yesterday at the end, that means that we've got the minimum that's been propagated up to the right hand top corner, which is 4."
        ],
        [
            "So in this case.",
            "And, uh, we can even use the table for to compute all sorts of other things, like for example how many different possible computations there are.",
            "And in this case where we can follow it through the light Blue Zone, the light Blue Zone is showing us the defease of computing the edit distance.",
            "So you just look at the different things.",
            "This four is due to what what's 1 plus one of these three.",
            "So any one of these three is OK, so the last operation could have either been this one, this one.",
            "This one suppose it was the B with the a OK, so this would have been a substitution.",
            "So these three is due to watch.",
            "So this three is 1 plus the minimum of this this and this where it can't be this or this?",
            "Because if not we should have had a 2 here or he would have 4 here so the loss of the second loss operation was necessarily a substitution of the A by the bee.",
            "Here we've got an A&A so it's easy.",
            "The last operation was just the alignment of this a with this A. CNC exactly the same.",
            "We got a 2 here.",
            "So then here this two is due to 1 plus we work in A and here we've gotten a so it's.",
            "See I don't know so so so so it's this.",
            "This one this come here or this to this come here so that is logically the A here too.",
            "And then you just compute and you can find that through that the different computations or the different possibility."
        ],
        [
            "Is of lining things.",
            "So here's a picture where you can see.",
            "How I've aligned on this one?",
            "OK, so."
        ],
        [
            "Gotta have to stop just a word about the complexity so the complexity of the algorithm is square, which we can see from the fact that we're using a table which is a squared table in the sense of there's length first string multiplied by the length of the second string.",
            "So time and space bus.",
            "Yes, the alternative is that the space is also square also, and that there are tricks people want to.",
            "If you want to normalize, which is also nice alternative and looks nice then usually that doesn't work.",
            "Normalizing tends to give you something that there is no longer a metric.",
            "OK, so some of the triangular inequality ceases to work in that case."
        ],
        [
            "And just say that you can do other operations like then version.",
            "You can have people they're working on circular strings when you're trying to describe a pattern and you want to just see if the patterns matching and how they can match and people can work on languages which are sets of strings and see what's the distance between two sets of strings.",
            "So all these operations have been implemented.",
            "OK, well I'll stop here and take perhaps one or two questions, not more.",
            "We have not Mickey is going to be.",
            "Already a.",
            "Any questions?",
            "Now.",
            "I let me can then perhaps offers are also ask to see what you've understood in what you haven't understood.",
            "OK, that's enough now.",
            "5 minutes, 5 minutes, partially installed."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "From University Jean S antigen and the name of the lab is you were curious so sation is somewhere by Leo in the middle of France and I'm going to be talking about something.",
                    "label": 0
                },
                {
                    "sent": "Well, TCS theoretical computer science for machine learning scientists now.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So in fact, when I'm saying that it means this, so these are the little parts I hope to go through.",
                    "label": 0
                },
                {
                    "sent": "Doesn't mean that each one is NARS work.",
                    "label": 0
                },
                {
                    "sent": "I mean, it's just the elements.",
                    "label": 0
                },
                {
                    "sent": "I just want to go through in between today and tomorrow.",
                    "label": 0
                },
                {
                    "sent": "So let me talk about strings as one alternative model instead of what we saw earlier on, which were vectors.",
                    "label": 0
                },
                {
                    "sent": "So strings have got the advantage of being of variable length when we want to talk about strings or about related trees or graphs.",
                    "label": 0
                },
                {
                    "sent": "We're going to have to put or we're going to want to put an order relationship over things.",
                    "label": 0
                },
                {
                    "sent": "Ordering things mean something come before Evers means that instead of just having a set of objects, we've got an order set which is going to help us for a lot of things.",
                    "label": 0
                },
                {
                    "sent": "Once you put orders, another way of looking at topology issues is looking at distances now.",
                    "label": 0
                },
                {
                    "sent": "Distances in away is the jewel to what we've been seeing earlier on, we've been talking about similarities about kernels.",
                    "label": 0
                },
                {
                    "sent": "Well distances is a little bit the other way around, which is to say the closer two objects, the smaller the distance.",
                    "label": 0
                },
                {
                    "sent": "So what sort of distances can we put in?",
                    "label": 0
                },
                {
                    "sent": "What can we say about distances?",
                    "label": 0
                },
                {
                    "sent": "Right from distances to kernels we saw a point of view about kernels this morning, which is how do we use them or what?",
                    "label": 0
                },
                {
                    "sent": "How good they are.",
                    "label": 0
                },
                {
                    "sent": "I'm going to be interested much more in algorithmic consideration, meaning that a good kernel is one that we can compute OK, and so what's what's going to make a kernel nice?",
                    "label": 0
                },
                {
                    "sent": "As for computation issues, go OK.",
                    "label": 0
                },
                {
                    "sent": "So complexity complexity questions are then going to be.",
                    "label": 0
                },
                {
                    "sent": "That's clearly tomorrow.",
                    "label": 0
                },
                {
                    "sent": "What happens is that we're not just mathematicians doing statistics, we are going to have to deal with algorithms.",
                    "label": 0
                },
                {
                    "sent": "And having things that having problems are intractable, somewhere intractable means that we know we can prove that there are no.",
                    "label": 0
                },
                {
                    "sent": "Quick normally quick algorithms to solve things, but that's going to be a problem for us, just As for anyone in computer science, so we want to look through this.",
                    "label": 0
                },
                {
                    "sent": "I mean, this is in certain places in certain countries, still basic computer science, but since we know that this is not true in many, well, we're going to look at it here.",
                    "label": 0
                },
                {
                    "sent": "So the questions about complexity of.",
                    "label": 1
                },
                {
                    "sent": "About what you call it complexity in things like yes, P and NP classes and how do you compute the complexity of an algorithm?",
                    "label": 0
                },
                {
                    "sent": "So I said around we were talking bout strings.",
                    "label": 0
                },
                {
                    "sent": "The two other next steps after strings are trees and then graphs.",
                    "label": 0
                },
                {
                    "sent": "So I'm just going to go through those very quickly just to remind you of the vocabulary, or at least to point out the fact that there is a vocabulary for trees and vocabulary for graphs.",
                    "label": 1
                },
                {
                    "sent": "They are becoming increasingly important in machine learning.",
                    "label": 0
                },
                {
                    "sent": "The what Isabelle was talking about corresponds to an idea where now people are getting a very clear idea of what to do with when you've got vectors, but there are enormous amount of data out there that you do not represent well with vectors.",
                    "label": 0
                },
                {
                    "sent": "She gave the example example of strings but well from strings.",
                    "label": 0
                },
                {
                    "sent": "You've got web pages, you've got images, you've got enormous amount of things out there that you can't deal with just with vectors, so the next step is strings, the strictness step after you typically treason off trees.",
                    "label": 0
                },
                {
                    "sent": "You get to graphs.",
                    "label": 0
                },
                {
                    "sent": "OK, so then I said we would be talking about algorithmic complexity in algorithmics, complexity of problems, complexity classes, P and NP, but also perhaps some little different ones.",
                    "label": 1
                },
                {
                    "sent": "Stochastic classes now stochastic class is going to bring us to an altogether different topic, that of randomized algorithms.",
                    "label": 0
                },
                {
                    "sent": "What's a randomized algorithm?",
                    "label": 0
                },
                {
                    "sent": "Basically it's one that is allowed to toss a coin during its run and use the toss of the coin to perhaps derive the result, not with 100% security but with.",
                    "label": 0
                },
                {
                    "sent": "Hopefully you know being right more than half the time or something like that.",
                    "label": 0
                },
                {
                    "sent": "Why is that important for machine learning will discuss that issue but basically becausw in a way we're running with relative probabilities and statistics all the time, so we can't just say right?",
                    "label": 0
                },
                {
                    "sent": "I'm trying to find an algorithm to solve my problem.",
                    "label": 0
                },
                {
                    "sent": "Oh, I can't find a library algorithms, so that's done.",
                    "label": 0
                },
                {
                    "sent": "In fact, you should be able to because you've got more power.",
                    "label": 0
                },
                {
                    "sent": "If you're able to put in probabilities into the algorithms, so it's reasonable to see exactly what more power.",
                    "label": 0
                },
                {
                    "sent": "Do these probabilities that you can use during runtime of an algorithm help you do?",
                    "label": 0
                },
                {
                    "sent": "So stochastic algorithms, some examples of Monte Carlo and Las Vegas algorithms, and I'll finish with the hardness proof using the two typical classes RP for random probabilistic and NP.",
                    "label": 1
                },
                {
                    "sent": "So how this proof for a learning problem?",
                    "label": 0
                },
                {
                    "sent": "OK, so that's what we're going to be talking about in.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Today and tomorrow.",
                    "label": 0
                },
                {
                    "sent": "So the little bits disclaimer disclaimer means what have I already got to warn you about.",
                    "label": 1
                },
                {
                    "sent": "There are other elements in theoretical computer science or in things like that we need to do machine learning that I will not be talking bout, not because I don't think it's important.",
                    "label": 0
                },
                {
                    "sent": "I think it's essential, but because they are going to be dealt with elsewhere.",
                    "label": 0
                },
                {
                    "sent": "So clearly.",
                    "label": 0
                },
                {
                    "sent": "Clearly linear algebra is all over the place, so you're going to have lectures and you're going to have courses specifically on that, but I will not be talking about it, not because I don't believe that but.",
                    "label": 0
                },
                {
                    "sent": "Just because we've shared the the Rose second bit, I'm going to try and not be talking bout.",
                    "label": 0
                },
                {
                    "sent": "I will be talking about probabilities, but I'm not going to be talking about statistics.",
                    "label": 0
                },
                {
                    "sent": "But nevertheless there's clearly to be lots of statistics for anyone working in machine learning today.",
                    "label": 0
                },
                {
                    "sent": "OK, so then the second disclaimer is that when you look around theoretical computer science, it is appearing or it is used in many, many fields and they come out the objects that we're going to use, like the strings or the trees or the distances with very different names from 1.",
                    "label": 0
                },
                {
                    "sent": "Topic to the other, I'm going to propose one which corresponds to certain number of books, certain number of readings, certain of conclusions averaged, but you may find them elsewhere OK, but it's not as if computer science is a 100 year old topic on which everybody is agreeing on what definitions should be.",
                    "label": 0
                },
                {
                    "sent": "Now people are getting a better idea.",
                    "label": 0
                },
                {
                    "sent": "Actually, things like Wikipedia are doing a lot of that.",
                    "label": 0
                },
                {
                    "sent": "People are agreeing on definitions on Wikipedia more or less, and those are starting to be the sort of standards.",
                    "label": 0
                },
                {
                    "sent": "For.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Basic things.",
                    "label": 0
                },
                {
                    "sent": "Right, so let's start quickly through definitions.",
                    "label": 0
                },
                {
                    "sent": "So when we wanted to deal with strings, the first thing we need are the individual objects the individual objects are letters that come from alphabets, so alphabets, and Luckily they are described by a Sigma, which we've already seen today describing and euro.",
                    "label": 0
                },
                {
                    "sent": "So string a string is a finite sequence of letters, and we do note in this way with the bar on each side the length of the string to be able to talk about the length of the string.",
                    "label": 1
                },
                {
                    "sent": "Well, I'll be able to say a length of string A12A N is of length and of course then there is a special string which is denoted by Lambda and which is the empty string.",
                    "label": 1
                },
                {
                    "sent": "The empty string contains no letters at all, but it is a string.",
                    "label": 1
                },
                {
                    "sent": "OK, it is usually used weather for initialization process is orby 'cause you need to describe the set of all the strength.",
                    "label": 0
                },
                {
                    "sent": "So you've got one which is the empty string.",
                    "label": 0
                },
                {
                    "sent": "Just notice that it's certain books they use notation epsilon instead of Lambda.",
                    "label": 0
                },
                {
                    "sent": "They even used sometimes people are very much into algebra, have used the notation one to indicate that was the neutral element epsilon just for the little story.",
                    "label": 0
                },
                {
                    "sent": "So if you want to remember, epsilon is in fact English comes from empty and Lambda comes from the German layer, which also means empty.",
                    "label": 0
                },
                {
                    "sent": "So it says it's Germany.",
                    "label": 0
                },
                {
                    "sent": "There were using the German empty.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Word.",
                    "label": 0
                },
                {
                    "sent": "Right, Alternatively, we want to be able to talk individually from each letter in a string will be using it as a mapping and we'll be able to say that the 1st letter of string W. Is A1 the 1st letter over there?",
                    "label": 1
                },
                {
                    "sent": "The 2nd letter is a 200 length letter is AN OK.",
                    "label": 0
                },
                {
                    "sent": "So if we need to access different letters, we do that.",
                    "label": 0
                },
                {
                    "sent": "Next, what do we say if I take a yes?",
                    "label": 1
                },
                {
                    "sent": "If I take an individual symbol, I can count the number of occurrences, the number of times each letter appears.",
                    "label": 0
                },
                {
                    "sent": "I guess I would use this notation, which is pretty standard to indicate that letter A appears in string WA certain number of times, OK, number of occurrences.",
                    "label": 0
                },
                {
                    "sent": "Ah, yes, the notation N in between 2 bars is just the N 1st integers starting to count from 1.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So typically, just to avoid them, we saw how earlier on you had little problems with notations, so the notation that will be using here is when I want to access 2 letters.",
                    "label": 0
                },
                {
                    "sent": "I will say this letter AB or C. The beginning of the alphabet, and when I will be talking about the strings and I'll be needing meta characters to indicate this is a string, I will use the strings of the end of the alphabet UVWXYZ beginning of the alphabet, the letters and the.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Forget the strings.",
                    "label": 0
                },
                {
                    "sent": "So if I want to talk about all strings, I use Sigma star, which in mathematics is known as a free monoid.",
                    "label": 0
                },
                {
                    "sent": "But it's basically the set of all possible strings of finite length, so each string has got one length inside there, and I can talk about all these strings at one moment.",
                    "label": 0
                },
                {
                    "sent": "So two important things when we're talking bout strings is to access inside the string the substrings, superstrings and subsequences.",
                    "label": 0
                },
                {
                    "sent": "What is a substring substring is a piece of string where you take off something.",
                    "label": 0
                },
                {
                    "sent": "At the beginning, you take off something at the end.",
                    "label": 0
                },
                {
                    "sent": "OK, so it is.",
                    "label": 0
                },
                {
                    "sent": "It is letters in a string that are all one after the other, so you don't take out letters in any city in any silly way, so their mathematical definition is here.",
                    "label": 0
                },
                {
                    "sent": "There is a left Betina right bit.",
                    "label": 0
                },
                {
                    "sent": "An X is with the left bit in front and the right behind is equal to W, so we'll say that X is a substring of W or the other way around.",
                    "label": 1
                },
                {
                    "sent": "It can also say that W is a super string of X.",
                    "label": 1
                },
                {
                    "sent": "This is important because sometimes we're going to.",
                    "label": 0
                },
                {
                    "sent": "We're going to use these notions and it's important to know the substring.",
                    "label": 0
                },
                {
                    "sent": "Is that getting rid of letters at the beginning and at the end of.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Word and whatever is left after.",
                    "label": 0
                },
                {
                    "sent": "Same thing is what I did before I was counting.",
                    "label": 0
                },
                {
                    "sent": "How many times would an individual letter appear in a string?",
                    "label": 1
                },
                {
                    "sent": "I can also count how many times does a substring appear in history, so I'm going to hold string and I denote with W bars, subscript U the number of times you is inside W. So it's really the number of left different left bits.",
                    "label": 1
                },
                {
                    "sent": "I can get rid of and still find my W in my my you inside the W. OK.",
                    "label": 0
                },
                {
                    "sent": "So I just amplificador my notation to go.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Just one little bit further.",
                    "label": 0
                },
                {
                    "sent": "So far the word for substring.",
                    "label": 0
                },
                {
                    "sent": "Well, I've got another word which is subsequence.",
                    "label": 0
                },
                {
                    "sent": "So subsequence is the same substring.",
                    "label": 0
                },
                {
                    "sent": "The only thing is that instead of just getting read it off letters at the beginning and at the end of the word.",
                    "label": 0
                },
                {
                    "sent": "I can get rid of them in any position.",
                    "label": 0
                },
                {
                    "sent": "OK, so subsequence is also used in math, just to say that I can take the 1st, the 4th or 7th and the 8th letter.",
                    "label": 0
                },
                {
                    "sent": "OK, so that makes me have a subsequence instead of a substring, and I've got a little recursive definitions to say that obviously a string is a subsequence of itself, and that if I take off one letter then I obtain a subsequence, so I can repeat that recursively and through the third rule, which is saying that is X is a subsequence of Y&Y is itself a subsequence of said.",
                    "label": 1
                },
                {
                    "sent": "Then X is a subsequence of Z.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "So let's have a little bit of combinatorics now, why am I talking about combinatorics?",
                    "label": 1
                },
                {
                    "sent": "Becausw they will be involved in the algorithms.",
                    "label": 0
                },
                {
                    "sent": "OK, I need to know how to count to be able to.",
                    "label": 0
                },
                {
                    "sent": "Then when I am going to want to do things like extracting features which we saw earlier on was important.",
                    "label": 0
                },
                {
                    "sent": "I will want to count how many times does an individual substring or individual subsequence appear to be able to do that?",
                    "label": 1
                },
                {
                    "sent": "Well, I need to be able to know at least how many there are in in theory.",
                    "label": 1
                },
                {
                    "sent": "So if I'm talking bout prefixes, so prefixes or substrings.",
                    "label": 0
                },
                {
                    "sent": "Which what comes before is the empty string, so it's really the beginnings of words.",
                    "label": 0
                },
                {
                    "sent": "I mean the.",
                    "label": 0
                },
                {
                    "sent": "Luckily, the Luckily the semantics.",
                    "label": 0
                },
                {
                    "sent": "Luckily, the words we're going to use to define the concepts to define the mathematics of these things are pretty speaking, so they correspond to what we like to do.",
                    "label": 0
                },
                {
                    "sent": "So how many prefix is a string have?",
                    "label": 0
                },
                {
                    "sent": "Well, a string being of length N can have N + 1 different prefixes YN plus one because you've got to count the empty one and the string itself.",
                    "label": 0
                },
                {
                    "sent": "So there's a prefix of length 01 of length 1, one of those two up to the length.",
                    "label": 0
                },
                {
                    "sent": "How many substrings can you have?",
                    "label": 0
                },
                {
                    "sent": "Well, this time you're combinatoric's correspondence and choosing one individual starting position when individual finishing position in your string.",
                    "label": 0
                },
                {
                    "sent": "OK, I think we'll cross each other, so there we know that the mathematics of it is to give you N * N + 1 / 2.",
                    "label": 1
                },
                {
                    "sent": "If I'm not wrong, might be N + 1 * N + 2 / 2.",
                    "label": 0
                },
                {
                    "sent": "You gotta check that, and now it's it's quadratic OK, the number of substrings is quadratic, so it's not something too big.",
                    "label": 1
                },
                {
                    "sent": "Something we can do if we want to actually go through all the different substrings of a string to be able to compare with something else, then that's something we can actually do.",
                    "label": 0
                },
                {
                    "sent": "Now the number of sequences of a string that's that's not quadratic.",
                    "label": 0
                },
                {
                    "sent": "That's not polynomial, less exponential, because basically to be able to obtain a subsequence from a sequence, what you do is you just take the 1st letter and decide do I want it, or do I not want it.",
                    "label": 0
                },
                {
                    "sent": "2 choices.",
                    "label": 0
                },
                {
                    "sent": "I look at the 2nd letter, do I want it?",
                    "label": 0
                },
                {
                    "sent": "Do I not want this?",
                    "label": 0
                },
                {
                    "sent": "Two choices, 3rd letter, two choices and so on till the end?",
                    "label": 0
                },
                {
                    "sent": "So two by two by two by two.",
                    "label": 0
                },
                {
                    "sent": "This means that any algorithm that would consist in saying oh, we go for each subsequence of W do.",
                    "label": 0
                },
                {
                    "sent": "Is doomed to failure.",
                    "label": 0
                },
                {
                    "sent": "Not true if W is not very big.",
                    "label": 0
                },
                {
                    "sent": "That's all right.",
                    "label": 0
                },
                {
                    "sent": "If you're talking about bioinformatics, then that's wrong.",
                    "label": 0
                },
                {
                    "sent": "You're clearly not going to be able to do anything like that.",
                    "label": 0
                },
                {
                    "sent": "OK, so you're going to have to think about it.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Different way of doing things.",
                    "label": 0
                },
                {
                    "sent": "So let's just look at a few of these basic algorithmic problems on strings.",
                    "label": 0
                },
                {
                    "sent": "So the first thing is that if I've got two strings looking for the maximum subsequence of the two strings, we know how to do it.",
                    "label": 0
                },
                {
                    "sent": "I mean, there are different ways of doing this.",
                    "label": 0
                },
                {
                    "sent": "There can be various maximum, so that means the longest subsequence common to two strings.",
                    "label": 1
                },
                {
                    "sent": "So there's many reasons to do this.",
                    "label": 0
                },
                {
                    "sent": "I mean, when you've got a set of strings, you may be wanting to take two strings and same.",
                    "label": 0
                },
                {
                    "sent": "I'm trying to find for machine reasonably machine learning reasons, trying to find some sort of a pattern that suits these strings.",
                    "label": 0
                },
                {
                    "sent": "Somebody try and find something that that corresponds OK, so the problem about doing this is that it looks nice.",
                    "label": 0
                },
                {
                    "sent": "You can do it, and we're going to see how to do it, but for two it's OK. We know how to do it, but if I'm given a set of strings right and I want to find this sort of pattern, this representative string for a set of strings which could be sort of what is in common with all these strings.",
                    "label": 0
                },
                {
                    "sent": "Then I'm going to be facing what we're going to call an NP hard problems.",
                    "label": 0
                },
                {
                    "sent": "Oh my, does everybody know what an NP hard problem is?",
                    "label": 0
                },
                {
                    "sent": "Yes, does anyone not know?",
                    "label": 0
                },
                {
                    "sent": "Now 1 two OK. NP hard means that as far as the state of what people believe in this moment, there is no polynomial algorithm.",
                    "label": 0
                },
                {
                    "sent": "To solve this problem.",
                    "label": 0
                },
                {
                    "sent": "OK, So what do I mean by assault or as what people believe it means that there's a hypothesis out there which is the P is different then POK which is widely believed in or else well, I mean then you've got a lot of money to to make because this is one of the big open problems in mathematics.",
                    "label": 0
                },
                {
                    "sent": "But anyhow, we all believe that P is different then P, which means that.",
                    "label": 0
                },
                {
                    "sent": "We all believe that we're not going to find a polynomial algorithm to do that, and even if there are reasons to criticise the polynomial barriers still, it's usually accepted that it means that we're not going to have anything good to do to work with OK, so it means you can't do that.",
                    "label": 0
                },
                {
                    "sent": "You can't solve that problem.",
                    "label": 1
                },
                {
                    "sent": "So computing the maximum subset of this maximum subsequence event strings is NP hard.",
                    "label": 1
                },
                {
                    "sent": "Now, of course finding the maximum substring is easier.",
                    "label": 0
                },
                {
                    "sent": "OK, that is not going to be a problem.",
                    "label": 0
                },
                {
                    "sent": "If anything we can leave that as an exercise just to find the longest substring common to a set of string.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, so up to a set.",
                    "label": 0
                },
                {
                    "sent": "Now let's just see one important algorithm.",
                    "label": 0
                },
                {
                    "sent": "This is in fact Jose about Cather, who told me who it would be good if you tell them that.",
                    "label": 0
                },
                {
                    "sent": "OK, well, tell them that.",
                    "label": 0
                },
                {
                    "sent": "So why?",
                    "label": 0
                },
                {
                    "sent": "Because?",
                    "label": 0
                },
                {
                    "sent": "Because looking for patterns is something that we spend our time doing.",
                    "label": 0
                },
                {
                    "sent": "I should say that if he's able, gave us the general questions or the general problem is saying, OK, you know the scene from high up high level.",
                    "label": 0
                },
                {
                    "sent": "This is what we're trying to do with trying to learn.",
                    "label": 0
                },
                {
                    "sent": "I'm probably going to be talking about what are the little things we've got to do to actually implement the big idea.",
                    "label": 0
                },
                {
                    "sent": "OK, and to implement the big idea, we have to be able to manipulate the different examples, which in my context instead of being vectors, are going to be strings and do things simple things with them.",
                    "label": 0
                },
                {
                    "sent": "Like for example, finding if given a pattern feature.",
                    "label": 0
                },
                {
                    "sent": "Does this feature correspond or not to this string?",
                    "label": 0
                },
                {
                    "sent": "So I have got one little string, one big string, and I want to know if the little string is a substring of the big string.",
                    "label": 0
                },
                {
                    "sent": "OK, so this is the sort of operation that is not just done once this is sort of operation this is going to be done many, many times.",
                    "label": 0
                },
                {
                    "sent": "You're going to get all your examples and one after the other.",
                    "label": 0
                },
                {
                    "sent": "You're going to be checking if your patterns fit or don't fit.",
                    "label": 0
                },
                {
                    "sent": "So having fast algorithms to do this is going to be an important issue.",
                    "label": 0
                },
                {
                    "sent": "So one of the most famous algorithms to do this is a close Morris and Pratt algorithm KMP.",
                    "label": 0
                },
                {
                    "sent": "So at least the first time you should all know if you're into computer science.",
                    "label": 0
                },
                {
                    "sent": "So we've got a little string S and does it appear as a substring of the big string U.",
                    "label": 1
                },
                {
                    "sent": "So it's an algorithm that does the following its contrado.",
                    "label": 0
                },
                {
                    "sent": "What you do is follows.",
                    "label": 0
                },
                {
                    "sent": "It's going to take the little string and it's going to do a pre pass.",
                    "label": 0
                },
                {
                    "sent": "So just look at the little string and see what are the little sequences that repeat themselves in the little string which will help me.",
                    "label": 0
                },
                {
                    "sent": "Then afterwards do my passing faster.",
                    "label": 0
                },
                {
                    "sent": "OK the idea is if not, what's going to happen?",
                    "label": 0
                },
                {
                    "sent": "Is my only way to do things is I've got my very long string here.",
                    "label": 0
                },
                {
                    "sent": "Very long string means you can think of bioinformatics and certain of thousands or millions of characters, and I've got my little string here and what I'm trying to do is to fit it here and pass it over this until I say OK, this is alright.",
                    "label": 0
                },
                {
                    "sent": "OK, this is exactly this substring or reach their end and say we've missed this little string is not part of the big stream.",
                    "label": 0
                },
                {
                    "sent": "So what can happen is that I've got something like a B abab something like this and my little string, which I'm passing starts with a B and continues also with a B.",
                    "label": 0
                },
                {
                    "sent": "Sorry and then here I've got to see or and a.",
                    "label": 0
                },
                {
                    "sent": "Sorry and here I have got.",
                    "label": 0
                },
                {
                    "sent": "And a note here, I'm going to see.",
                    "label": 0
                },
                {
                    "sent": "So as I'm passing this over this I I'm going to check up to here.",
                    "label": 0
                },
                {
                    "sent": "Uh, wrong, let's do it bigger.",
                    "label": 0
                },
                {
                    "sent": "OK, ABA.",
                    "label": 0
                },
                {
                    "sent": "Not the example I've got any high Bab.",
                    "label": 0
                },
                {
                    "sent": "AB.",
                    "label": 0
                },
                {
                    "sent": "Hey BCI ABA see OK as I'm coming here what I would like to do is not have to pass up to then then find out I've missed move this on a little bit and then realize that this perhaps some catching up that I could be doing OK so as not to have to start again just do everything but just sort of remember or one second as soon as I've got another a well I can match towards the beginning so let's see how we do it on this example.",
                    "label": 0
                },
                {
                    "sent": "So the first thing I do is I've got my little substring S which is, which I'm going to pre pass and see what are the things that repeat themselves in it.",
                    "label": 0
                },
                {
                    "sent": "So for example, I can see that my little string S starts with ABCDABD.",
                    "label": 0
                },
                {
                    "sent": "So I start with A&B no problem.",
                    "label": 0
                },
                {
                    "sent": "I'm going to just run it until the end and here I can see I've got under the A which means that if at some moment of my pass I find myself that.",
                    "label": 0
                },
                {
                    "sent": "I have been able to match up to here, but here I have failed well, instead of starting exactly at the beginning, I can say yes, but I have failed.",
                    "label": 1
                },
                {
                    "sent": "But this a could now be the first a we have got here.",
                    "label": 0
                },
                {
                    "sent": "OK, so being the first say that we've got here, well, I've got at least one step less.",
                    "label": 0
                },
                {
                    "sent": "One comparison less to do.",
                    "label": 0
                },
                {
                    "sent": "I continue here.",
                    "label": 0
                },
                {
                    "sent": "I've gotta be.",
                    "label": 0
                },
                {
                    "sent": "Since I had an A before.",
                    "label": 0
                },
                {
                    "sent": "Well, if after this B I've see that what's happened is that I don't find the D that's here, but perhaps something else.",
                    "label": 0
                },
                {
                    "sent": "What I should do is at least common.",
                    "label": 0
                },
                {
                    "sent": "Consider that the two first positions were right, and then I should perhaps consider looking at this D or whatever letter hasn't failed to match with this D. Try and match it with the 3rd letter here these.",
                    "label": 0
                },
                {
                    "sent": "The intention of this algorithm and of all the algorithms of string matching, is to just try and do slightly better than the silly algorithm that would just consider trying starting again every one time.",
                    "label": 1
                },
                {
                    "sent": "OK, so we precompute from the little sequence this table here a table indicating just what is the longest correct prefix in the case things go wrong.",
                    "label": 1
                },
                {
                    "sent": "So here if by here.",
                    "label": 0
                },
                {
                    "sent": "The prefix, sorry if you don't find a B.",
                    "label": 0
                },
                {
                    "sent": "Well, at least I know I've got one letter right which is the A that is here.",
                    "label": 0
                },
                {
                    "sent": "If I reach here and I don't find a D, well, I do know that the two letters before that were right, which are this A&B and I can do and I just continue from there.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "So let's just give the idea I'm going to.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The algorithm will come back to it, give it on a on a picture.",
                    "label": 0
                },
                {
                    "sent": "So I am trying to run to look if ABA C belongs to the long sequence, which is a ABCACAB.",
                    "label": 0
                },
                {
                    "sent": "Acac OK, so I precompute my little table here where the only thing I do know is that at one moment if I fail here this little a, I could consider it the 1st letter of the string.",
                    "label": 0
                },
                {
                    "sent": "So let's go through it.",
                    "label": 0
                },
                {
                    "sent": "I have got my long sequence which is here, which is this one here I've got my short sequence which is here.",
                    "label": 0
                },
                {
                    "sent": "At least we're going to look at, which is the current letter.",
                    "label": 0
                },
                {
                    "sent": "So I try and compare a with a.",
                    "label": 0
                },
                {
                    "sent": "Everything is OK, I just go forward in both strings.",
                    "label": 0
                },
                {
                    "sent": "Then I've got to be here in the short sequence and I've got an A in the long sequence.",
                    "label": 0
                },
                {
                    "sent": "Algorithm says sorry, you can't match this.",
                    "label": 0
                },
                {
                    "sent": "So that moment what I'm going to do is I'm going to look.",
                    "label": 0
                },
                {
                    "sent": "Here and say OK, I have failed.",
                    "label": 0
                },
                {
                    "sent": "Where do I go back to says sorry I can't help you.",
                    "label": 0
                },
                {
                    "sent": "You can't done enough.",
                    "label": 0
                },
                {
                    "sent": "You haven't got anything that you can keep for further, so you've got to come back to the same place and you're going to find yourself doing.",
                    "label": 0
                },
                {
                    "sent": "I'm sorry here.",
                    "label": 0
                },
                {
                    "sent": "There's a column missing which is just saying compare this A with the A you have just seen and you advance one.",
                    "label": 0
                },
                {
                    "sent": "You compare the B with the next a same as before.",
                    "label": 0
                },
                {
                    "sent": "It says sorry the B and they're different.",
                    "label": 0
                },
                {
                    "sent": "You've got to come back to start so you compare the A which is here.",
                    "label": 0
                },
                {
                    "sent": "With the first a.",
                    "label": 0
                },
                {
                    "sent": "Then the B with BI everything's OK. B&B that's alright, they match, so it's the B which is here and you can notice we've got the big and beginning of the fragmente be.",
                    "label": 0
                },
                {
                    "sent": "So the B compares with the B.",
                    "label": 0
                },
                {
                    "sent": "Then you advance you've gotten a from the little sequence and a C here.",
                    "label": 0
                },
                {
                    "sent": "But what happens there?",
                    "label": 0
                },
                {
                    "sent": "Well, it's going to say no, it doesn't work.",
                    "label": 0
                },
                {
                    "sent": "But again, I'm sorry, just the fact that I've got to see here doesn't help us.",
                    "label": 0
                },
                {
                    "sent": "We can't say exploit this to be able to gain something, so we've got to go back to the start.",
                    "label": 0
                },
                {
                    "sent": "So let's get to the interesting case.",
                    "label": 0
                },
                {
                    "sent": "So then we compare the A with the.",
                    "label": 0
                },
                {
                    "sent": "Sorry, the Ather we've got here with this C, then the sorry the A with the A, the B with the C. Let's get to a nice place a with the AB with the B.",
                    "label": 0
                },
                {
                    "sent": "So it's the bee that is here.",
                    "label": 0
                },
                {
                    "sent": "A the third A which is here with the A that is here C with the C and we've got our string and I affect my example isn't that useful because I haven't sorry see.",
                    "label": 0
                },
                {
                    "sent": "The only place I did was here.",
                    "label": 0
                },
                {
                    "sent": "ABC would have been able to just save one position.",
                    "label": 0
                },
                {
                    "sent": "OK, I'm sorry it's not.",
                    "label": 0
                },
                {
                    "sent": "It's not an easy one to explain the people in strings.",
                    "label": 0
                },
                {
                    "sent": "Spender spend about 3/4 now explaining this and I've tried to do it in 10 doesn't.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, so just a quick conclusion about about these where business of looking for patterns in strings looking in patterns for strings is an open area of research where people are actually trying still today to gain as much as possible, But basically on the constants you can't gain on much more than on the constants to try an rarely do as fast as possible.",
                    "label": 0
                },
                {
                    "sent": "These looking for patterns in strings.",
                    "label": 0
                },
                {
                    "sent": "So just a word, the complexity of KMP instead of being as she might have been the mermaid.",
                    "label": 1
                },
                {
                    "sent": "Application of the complexity of the sorry, the length of the first string by the length of the second string thanks to this sort of little tricks, we managed to have a complexity which is length of the first ring plus length of the second stream.",
                    "label": 0
                },
                {
                    "sent": "OK. Plus, because you're basically only you're never going backwards, which is what's interesting.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, so we've got these strings and now what we'd like to do is to be able to put an order over the set of strings or over us Earth set of strings.",
                    "label": 0
                },
                {
                    "sent": "So you're given a set of strings.",
                    "label": 0
                },
                {
                    "sent": "Are you wanting to be able to go through that set of strings in a particular way?",
                    "label": 0
                },
                {
                    "sent": "So what sort of order relations do we have?",
                    "label": 1
                },
                {
                    "sent": "So the first thing is we're going to suppose we do have an alphabetical order.",
                    "label": 0
                },
                {
                    "sent": "OK, that's basic.",
                    "label": 0
                },
                {
                    "sent": "So you've got an alphabetical order over the letters.",
                    "label": 1
                },
                {
                    "sent": "OK, so you've got that.",
                    "label": 0
                },
                {
                    "sent": "And then what can you build from that?",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So once we got the alphabetical order, the first ordering you can do on strings as a prefix ordering the prefix ordering just is to say that one string is a prefix of the second string.",
                    "label": 0
                },
                {
                    "sent": "When string is a prefix of secondary, this is not a total ordering.",
                    "label": 0
                },
                {
                    "sent": "I didn't say we were only going to do to chlorine, but this is a nice ordering that can be used in certain cases, right easy?",
                    "label": 0
                },
                {
                    "sent": "Second one, which is a well known order, is the lexicographic order.",
                    "label": 0
                },
                {
                    "sent": "This is the dictionary order.",
                    "label": 0
                },
                {
                    "sent": "The dictionary order is.",
                    "label": 0
                },
                {
                    "sent": "You've got an alphabetical order on the symbols, so you can then put whatever set of singles were so set of strings you have, you can put them in a dictionary.",
                    "label": 0
                },
                {
                    "sent": "The dictionary might be infinite, so it generally contends to say that either one string is a prefix of the other right, or they share up to a certain place, a common prefix, and then if I look at the next letter with that next letter is going to be the difference one.",
                    "label": 0
                },
                {
                    "sent": "Just for the alphabetical order.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, there are problems with the lexicographic order.",
                    "label": 0
                },
                {
                    "sent": "They rarely big problems.",
                    "label": 0
                },
                {
                    "sent": "The problems are that you can't do recursion based on the alphabetical order.",
                    "label": 0
                },
                {
                    "sent": "Basically, if you look at certain cases, I can if I decide that a is before B, the real problem is that in between A&B, where we'd like to be able to get there reasonably quickly, there's actually an Infinity of strings.",
                    "label": 0
                },
                {
                    "sent": "For the alphabetical order, because I can do a AB, AAB, AAB and so on and all these strings.",
                    "label": 0
                },
                {
                    "sent": "Or all.",
                    "label": 0
                },
                {
                    "sent": "Smaller than B.",
                    "label": 0
                },
                {
                    "sent": "So that makes it not a nice ordering to work when we're working with strings, even if it's the natural one because they were using when we were looking into a dictionary.",
                    "label": 0
                },
                {
                    "sent": "But in a dictionary we do not have.",
                    "label": 0
                },
                {
                    "sent": "An Infinity of strings, so it's not a problem, but if we do have a possible Infinity of strings, then we've got a problem.",
                    "label": 0
                },
                {
                    "sent": "So the next one that is mostly used when people are working, I'm saying grammatical inference because that is my topic, but you use it more generally when you're working on strings.",
                    "label": 0
                },
                {
                    "sent": "Is the length legs order?",
                    "label": 0
                },
                {
                    "sent": "The idea is to say we want to avoid this, but we do like the dictionary order, so we'll just make sure that we start by ordering with the dictionary all strings of length 0.",
                    "label": 0
                },
                {
                    "sent": "There's just one length of the string of length 0, which is Lambda.",
                    "label": 0
                },
                {
                    "sent": "Then we take all the strings of length one, so that's just the individual letters.",
                    "label": 0
                },
                {
                    "sent": "Then all the strings of length 2.",
                    "label": 0
                },
                {
                    "sent": "Then all the strings of length 3.",
                    "label": 0
                },
                {
                    "sent": "An so on that makes a nice order in which we do have the strings that arrive more or less like we'd like them.",
                    "label": 0
                },
                {
                    "sent": "So with their hierarchical order, if we just got 2 letters in the alphabet, which RA&B, we would find this first strings for this order?",
                    "label": 0
                },
                {
                    "sent": "The strings that are there?",
                    "label": 0
                },
                {
                    "sent": "OK, so we've got one string of length.",
                    "label": 0
                },
                {
                    "sent": "12 strings of length.",
                    "label": 0
                },
                {
                    "sent": "Sorry, one string of length.",
                    "label": 0
                },
                {
                    "sent": "02 strengths of Lang.",
                    "label": 0
                },
                {
                    "sent": "14 strength, length, 28 of.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Three, and so on.",
                    "label": 0
                },
                {
                    "sent": "OK, so just for the sake of an example, if we've got a B&C with a smaller than B and smaller than C for the lexicographic order, we'd have AAB, which would be before a bee.",
                    "label": 0
                },
                {
                    "sent": "But if you took the length length order, you would have it the opposite way around because one is of length two and the other one is of length three.",
                    "label": 0
                },
                {
                    "sent": "OK seems easy and carefully if you're looking at the prefix order, well, maybe is neither prefix of AAB, nor is a beer.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Pics of baby.",
                    "label": 0
                },
                {
                    "sent": "OK, so this is one of the ideas of topology is to put order over things.",
                    "label": 0
                },
                {
                    "sent": "The second idea, typically into apologies to put distances over things.",
                    "label": 0
                },
                {
                    "sent": "Again, so you've got a set of strings or a set of objects and you wanting to put some sort of a distance over this.",
                    "label": 0
                },
                {
                    "sent": "We were hearing this morning mentioned the case of the K nearest neighbors.",
                    "label": 0
                },
                {
                    "sent": "All these techniques, typically in pattern recognition or based on having distances.",
                    "label": 0
                },
                {
                    "sent": "So what do we know?",
                    "label": 0
                },
                {
                    "sent": "Who know about distances and how do we?",
                    "label": 0
                },
                {
                    "sent": "Build distances on.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Typically strings.",
                    "label": 0
                },
                {
                    "sent": "So the first thing is what is the problem?",
                    "label": 0
                },
                {
                    "sent": "Well, the problem is to build some sort of a function which, given a class of objects, we're going to talk about strings, but at the same time there are distances on graphs.",
                    "label": 1
                },
                {
                    "sent": "There are distances on trees.",
                    "label": 0
                },
                {
                    "sent": "You can have distances or not.",
                    "label": 0
                },
                {
                    "sent": "Anything you're trying to represent, so you've got these objects and repertoar representations of these objects, and you want to function such that the closer X&Y or one to each other, the smaller smaller is the distance between the two.",
                    "label": 1
                },
                {
                    "sent": "That is what a distance.",
                    "label": 0
                },
                {
                    "sent": "Is.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, I come to it in a second, but then apart from saying that apart from saying that you've got this class of objects and representations, an just something that is the closer, the smaller the distance while you like, have some mathematical properties so the mathematical properties of these things here and they define what is called a metric.",
                    "label": 1
                },
                {
                    "sent": "OK, now when you read.",
                    "label": 0
                },
                {
                    "sent": "Books and articles.",
                    "label": 0
                },
                {
                    "sent": "The confusion about the word and the distances is really very complete, right?",
                    "label": 0
                },
                {
                    "sent": "Some people are going to call distance something that does have the properties and some people don't call it like that.",
                    "label": 0
                },
                {
                    "sent": "Some people use distance with all sorts of things and not.",
                    "label": 0
                },
                {
                    "sent": "So it's very important to know if we do have the properties and which one we do have or not.",
                    "label": 0
                },
                {
                    "sent": "Why for algorithmic reasons?",
                    "label": 0
                },
                {
                    "sent": "OK, because you will not be able to use the same algorithms if you've got certain properties about this distance you're using or not.",
                    "label": 0
                },
                {
                    "sent": "So just let's look at what other?",
                    "label": 0
                },
                {
                    "sent": "The properties that are usually imposed, one of them is saying that the distance between X&X is 0.",
                    "label": 0
                },
                {
                    "sent": "Fair enough.",
                    "label": 0
                },
                {
                    "sent": "The second one is to save the distance between X&Y is the distance between Y&X, so saying this symmetrical you can think about distances if you've done already machine learning, you realize that quite a few of them do not already comply with this.",
                    "label": 0
                },
                {
                    "sent": "Being symmetrically is not always that easy.",
                    "label": 0
                },
                {
                    "sent": "3rd, typically that is every case is it has that is that D of X&Y is positive, so you want to distance to be positive.",
                    "label": 0
                },
                {
                    "sent": "Having negative distances isn't fun, even if there are cases where are people are doing distances where the result is not a number, or it's a complex number, or it's something completely different for because that's what they like.",
                    "label": 0
                },
                {
                    "sent": "And then there are two other ones which are reasonable or important.",
                    "label": 0
                },
                {
                    "sent": "One of them is to say that whenever we got the distance between X&Y is 0, then it's because and only because X = y.",
                    "label": 0
                },
                {
                    "sent": "That was very important, because that means that when we've got that property, it means that every time we are testing the distance, we can actually at the same time try and test for the isomorphism of the structure, or for the quality of the structure, or the equivalence of the structure, so we.",
                    "label": 0
                },
                {
                    "sent": "Problems where whatever you're manipulating finding out if the two things are the same.",
                    "label": 0
                },
                {
                    "sent": "Take graphs for example.",
                    "label": 0
                },
                {
                    "sent": "OK, if you do a distance in graphs to try and see if two graphs are whatever the distances between them.",
                    "label": 0
                },
                {
                    "sent": "If you've got this property here, DFX y = 0 implies X = y.",
                    "label": 1
                },
                {
                    "sent": "What does it mean?",
                    "label": 0
                },
                {
                    "sent": "It means that what you're computing will help you solve the graph isomorphism problem.",
                    "label": 0
                },
                {
                    "sent": "Who knows what the graph isomorphism problem is?",
                    "label": 0
                },
                {
                    "sent": "Now.",
                    "label": 0
                },
                {
                    "sent": "My best, it's basically you take one graph and you just shove everything around.",
                    "label": 0
                },
                {
                    "sent": "You move things.",
                    "label": 0
                },
                {
                    "sent": "I mean they you rename the labels and you've got another graph there.",
                    "label": 0
                },
                {
                    "sent": "There's that and you're trying to see.",
                    "label": 0
                },
                {
                    "sent": "Is it the same graph you know just where you move things around or not.",
                    "label": 0
                },
                {
                    "sent": "Is it just a question of representing in space the same object?",
                    "label": 0
                },
                {
                    "sent": "So if it is the same object then that means that we have got the graph isomorphic whether they're isomorphic.",
                    "label": 0
                },
                {
                    "sent": "If you don't, it means that means that they are not isomorphic, so this happens all the time when you are trying to do or represent.",
                    "label": 0
                },
                {
                    "sent": "I don't know images by graphs where people are trying to think.",
                    "label": 0
                },
                {
                    "sent": "Is this the same images?",
                    "label": 0
                },
                {
                    "sent": "This by saying?",
                    "label": 0
                },
                {
                    "sent": "Is this the same graph as this?",
                    "label": 0
                },
                {
                    "sent": "Now, this is what you call.",
                    "label": 0
                },
                {
                    "sent": "This is another untractable problem.",
                    "label": 0
                },
                {
                    "sent": "It's not quite NP hard, right?",
                    "label": 0
                },
                {
                    "sent": "But it's regarded to be hard in the sense that there is no polynomial algorithm either to solve that problem.",
                    "label": 0
                },
                {
                    "sent": "At least people believe that there isn't one.",
                    "label": 0
                },
                {
                    "sent": "OK, so this means what it means that if you're thinking of doing nice distances that have all these sorts of features, but at the same time your lovely little distance is solving some problem that is supposed to be difficult, then it means that something is wrong somewhere.",
                    "label": 0
                },
                {
                    "sent": "Probably your anger or your algorithm is exponential, or you're thinking you're doing something that you're not doing.",
                    "label": 0
                },
                {
                    "sent": "So that's why knowing a little bit what we're doing about this is important.",
                    "label": 0
                },
                {
                    "sent": "The last equation is known as the triangular inequality, which is typical, right?",
                    "label": 0
                },
                {
                    "sent": "We know that if the distance between XY and added to the distance of Y, zed should be larger than distance between the X and then this is not always the case in a lot of distances that are used in practice, typically in bioinformatics OK, but why is it useful to have it?",
                    "label": 0
                },
                {
                    "sent": "I hope we can think OK. You know it's we may want it, or we may not want it.",
                    "label": 0
                },
                {
                    "sent": "Is it just because we want to do mathematics?",
                    "label": 0
                },
                {
                    "sent": "No falge arhythmic reasons.",
                    "label": 0
                },
                {
                    "sent": "When you do have it, you can actually use it.",
                    "label": 0
                },
                {
                    "sent": "The triangular equivalence to avoid, for example searching and hold whole chunks of the data space, because you can use it to say, well, you know.",
                    "label": 0
                },
                {
                    "sent": "I know that this is already more than whatever threshold I was looking for, so there's no point in looking at these because I will be even further.",
                    "label": 0
                },
                {
                    "sent": "OK, so being able to use those properties or related to doing things like that.",
                    "label": 0
                },
                {
                    "sent": "OK, so just.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "True.",
                    "label": 0
                },
                {
                    "sent": "Summarize we've got a distance, which is something which is saying I take some elements and the closer the smaller.",
                    "label": 0
                },
                {
                    "sent": "And then we've got a metric, which is when we got, I reduced the five equations into three because they can, and you obtain these three equations there.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So what can we do with strings that you know just a word of conclusion?",
                    "label": 0
                },
                {
                    "sent": "Pros and cons, a distance in the general sense is more flexible when people are working on applications, people are going to try and find things that seem to work the correspond to what they feel the problem is Isabel was mentioning earlier on how you are choosing the features so that the corresponded to what your intuition of the problem was.",
                    "label": 1
                },
                {
                    "sent": "So with the same here, choosing the distance so that it corresponds to what you want.",
                    "label": 0
                },
                {
                    "sent": "Same with kernels kernels.",
                    "label": 0
                },
                {
                    "sent": "You often got to choose because you really think this is the sort of property that the kernel you need for this application should have.",
                    "label": 0
                },
                {
                    "sent": "But then at the same time, if you need algorithmics, well, you're probably going to have to have.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Some are symmetric somewhere.",
                    "label": 0
                },
                {
                    "sent": "So if we back to a big back to strings were going to say that there are four types of distances.",
                    "label": 1
                },
                {
                    "sent": "I'm glad there's only three points.",
                    "label": 0
                },
                {
                    "sent": "No, there's four types, and this is the first.",
                    "label": 0
                },
                {
                    "sent": "So we're going to go through four different ways of building distance is the 1st way is to say, well, I'm going to try and see how many modifications I need to go from string X to string Y, so I'm going to count how many changes, how many individual changes I need to be able to get to transform string X to string Y.",
                    "label": 0
                },
                {
                    "sent": "If you're more interesting trees, you can think trees.",
                    "label": 0
                },
                {
                    "sent": "If you see more interesting graphs, you can think graphs on vectors of numbers.",
                    "label": 0
                },
                {
                    "sent": "That's clearly not of real numbers.",
                    "label": 0
                },
                {
                    "sent": "That's clearly not indicated, but on what we're doing it is.",
                    "label": 0
                },
                {
                    "sent": "So you're going to try and do this, and you might think about normalizing, saying yes, but I mean obviously if my string is of length several million, then I mean I'm going to have to do some changes and we'd like this to be normalized, taking into account the length of the string.",
                    "label": 1
                },
                {
                    "sent": "That's the sort of idea and the most typical, and the one that I'm going to tell you about all of these distances is called the edit distance.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "But before I tell you about that distance, I'm just going to run through the other ones.",
                    "label": 0
                },
                {
                    "sent": "The second one is to say, well, we're going to be able to compute some sort of a similarity using another way of time.",
                    "label": 0
                },
                {
                    "sent": "It looks word think about a kernel if you prefer, but not necessarily something even looser.",
                    "label": 0
                },
                {
                    "sent": "A similarity between two strings.",
                    "label": 1
                },
                {
                    "sent": "The idea of a similarity being the more things are in common, then, then the larger the similarity.",
                    "label": 0
                },
                {
                    "sent": "And then I'll try and find some way to be able to convert this.",
                    "label": 1
                },
                {
                    "sent": "Similarity between two strings into a distance.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And there's at least two methods I know of that can do this.",
                    "label": 0
                },
                {
                    "sent": "So the first method is to do.",
                    "label": 0
                },
                {
                    "sent": "The following is to just take as distance between A and B2 to the power set minus the similarity, and A and B. Yeah, that's way so.",
                    "label": 0
                },
                {
                    "sent": "The more they're similar.",
                    "label": 0
                },
                {
                    "sent": "2 minus is going to make it closer.",
                    "label": 0
                },
                {
                    "sent": "So we're going to have distances that are really going to be of.",
                    "label": 0
                },
                {
                    "sent": "This sort 1 / 2 one over four 1 / 8 one over 16.",
                    "label": 0
                },
                {
                    "sent": "So for mathematical mid air and reasons this is OK for practical reasons is not.",
                    "label": 0
                },
                {
                    "sent": "It's never used this when I'm just saying it does exist and if we relate with some sort of kernels at some moment.",
                    "label": 0
                },
                {
                    "sent": "So typically the people that use the prefix is well will say well what's the length of the longest common prefix we've got between two strings.",
                    "label": 1
                },
                {
                    "sent": "We take that in common.",
                    "label": 0
                },
                {
                    "sent": "We look at the length of this prefix and we take 2 to the power set minus this length and we obtain the distance.",
                    "label": 0
                },
                {
                    "sent": "We've just one silly little case.",
                    "label": 0
                },
                {
                    "sent": "If everything is in common then we will say that they've got infinite.",
                    "label": 0
                },
                {
                    "sent": "Things uncommon and then we say DFA of B is equal to 0, which allows us to find what we want.",
                    "label": 0
                },
                {
                    "sent": "Equal to 0.",
                    "label": 0
                },
                {
                    "sent": "Then yeah, if equal if A = B then DA&B would be something like 2 -- X of Infinity.",
                    "label": 1
                },
                {
                    "sent": "Open distance between and people with you.",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "First, why we're doing it that way, but I mean, seeing it's infinite, the similarity being infinite on finite strings doesn't make much.",
                    "label": 0
                },
                {
                    "sent": "It's more like a trick to be able to deal with this.",
                    "label": 0
                },
                {
                    "sent": "We're just going to decide that it's infinite, because you should be saying OK, where is the length of the string itself, but so is too.",
                    "label": 0
                },
                {
                    "sent": "That would make it not not equal to 0.",
                    "label": 0
                },
                {
                    "sent": "So that's.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "First method, the second method, which is the one that is used more like by kernels.",
                    "label": 0
                },
                {
                    "sent": "I will check this.",
                    "label": 0
                },
                {
                    "sent": "I actually wanted to check it, but the idea is the following.",
                    "label": 0
                },
                {
                    "sent": "You do the distance, so you've got S, which would be some sort of a kernel.",
                    "label": 0
                },
                {
                    "sent": "Typically the people that use kernels do this sort of way and what they do is they well they take the similarity between A&A plus.",
                    "label": 0
                },
                {
                    "sent": "The similarity between B&B and then you've got to well subtract 2 times the similarity between A&B.",
                    "label": 0
                },
                {
                    "sent": "If it's symmetrical and if not, I've just done it this way like this.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "So this is a sort of way that is used if you're writing it down, put a question mark because I had to check it on some slides by somebody who would pass me this.",
                    "label": 0
                },
                {
                    "sent": "I didn't check, so the conditions about this, yes is that X is equals Y.",
                    "label": 0
                },
                {
                    "sent": "And yes, there's a triangular.",
                    "label": 0
                },
                {
                    "sent": "The triangular inequality only holds when certain special conditions over the similarity hold, but people for the people that do kernels will try and transform the if needed.",
                    "label": 0
                },
                {
                    "sent": "Their kernel into a distance.",
                    "label": 0
                },
                {
                    "sent": "If somebody, yeah, we can look at that also.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So in in exercise session.",
                    "label": 0
                },
                {
                    "sent": "So the 3rd way of doing the distances right is to extract some features.",
                    "label": 0
                },
                {
                    "sent": "So we saw that this morning and to say, well, we don't want to manipulate strings at all, because what we really know how to manipulate our vectors.",
                    "label": 0
                },
                {
                    "sent": "So we're going to take these vectors and we are going to.",
                    "label": 1
                },
                {
                    "sent": "Measure some, so we're going to take some measurable features.",
                    "label": 1
                },
                {
                    "sent": "We're going to decide on the length of a vector, and we're just going to compute this numerical vector for a another numerical vector for B and then we can use some distance between them.",
                    "label": 1
                },
                {
                    "sent": "Any distances them any norms we've got over R to the North and work directly on the vector representation of the strings.",
                    "label": 0
                },
                {
                    "sent": "So you could think, well, you know why is he telling the strings?",
                    "label": 0
                },
                {
                    "sent": "If we can do this.",
                    "label": 0
                },
                {
                    "sent": "The problem is that usually by doing that by choosing this the features we're going to lose something about the.",
                    "label": 0
                },
                {
                    "sent": "About about the strings themselves.",
                    "label": 0
                },
                {
                    "sent": "OK, so there are cases where you want what you call people that are working on say, natural language processing on translation issues.",
                    "label": 0
                },
                {
                    "sent": "They're going to need a long term dependencies and things like that, which are usually going to be lost when we go and extract features.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So the 4th type of distance is in fact related to the first few, which is to find this time an infinite set of measurable features.",
                    "label": 1
                },
                {
                    "sent": "If you think what's the point of looking for an infinite where we see a bit later.",
                    "label": 0
                },
                {
                    "sent": "But for example, if I look at all the possible subsequences, OK, well the number of possible subsequences is infinite because it's Sigma store itself.",
                    "label": 0
                },
                {
                    "sent": "So in a way, if we're trying to count it on this feature space, we're going to have an infinite feature space, even if for each.",
                    "label": 0
                },
                {
                    "sent": "Individual string the number of values different from zero is going to be finite.",
                    "label": 0
                },
                {
                    "sent": "But still, you're going to have an Infinity of the possible Infinity, but at the same time you can describe things as an infinite space and you just do distances on infinites.",
                    "label": 0
                },
                {
                    "sent": "Just do you define the distances on the infinite space?",
                    "label": 0
                },
                {
                    "sent": "And that's what you're going to manipulate.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So I'm going to give their distance and then then pass on to Tamika.",
                    "label": 0
                },
                {
                    "sent": "Edit Distance defined by 11 Stein in 1966 and algorithms or typical algorithms are from Vaknin Fisher 1974 and there's been a lot of things that since.",
                    "label": 0
                }
            ]
        },
        "clip_31": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "It is very important.",
                    "label": 0
                },
                {
                    "sent": "I'm going to describe this Mr Levinstein, sorry.",
                    "label": 0
                },
                {
                    "sent": "And there's always the mystery of knowing what he's eating.",
                    "label": 0
                }
            ]
        },
        "clip_32": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So the the so this is really important.",
                    "label": 0
                },
                {
                    "sent": "This is when we're talking about strings.",
                    "label": 0
                },
                {
                    "sent": "This is the the top distance, the distance that is mostly used because of many reasons, one of which is that it does take into account things like the noise.",
                    "label": 0
                },
                {
                    "sent": "OK, when you type a text Ann, you're not very very careful where you're going to get a letter or you're going to type twice the same letter you're going to type one letter instead of another.",
                    "label": 0
                },
                {
                    "sent": "OK, so all that sort of noise you want to.",
                    "label": 0
                },
                {
                    "sent": "Be able to.",
                    "label": 0
                },
                {
                    "sent": "To talk about it, and typically you're going to talk about it through the edit operations.",
                    "label": 0
                },
                {
                    "sent": "The edit sort of mistakes you've made between the role text and whatever you've typed in biology is the same.",
                    "label": 0
                },
                {
                    "sent": "You may have the role Jinan.",
                    "label": 0
                },
                {
                    "sent": "Whatever's happened.",
                    "label": 0
                },
                {
                    "sent": "Some transformations.",
                    "label": 0
                },
                {
                    "sent": "Things have appeared in certain positions.",
                    "label": 0
                },
                {
                    "sent": "There's been some transformations where all this is also described by by this sort of distance.",
                    "label": 0
                },
                {
                    "sent": "So the basic operations are three insertion, deletion, substitution, and then sometimes people invented any things like taking two consecutive characters and saying, well, you know, I've typed one before the other instead of the other way around that.",
                    "label": 1
                }
            ]
        },
        "clip_33": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "But we're not going to talk about it here.",
                    "label": 0
                },
                {
                    "sent": "So it can be described in terms of rewriting rules.",
                    "label": 0
                },
                {
                    "sent": "This is just for the mathematics.",
                    "label": 0
                },
                {
                    "sent": "We're not going to use it here.",
                    "label": 0
                },
                {
                    "sent": "And the idea is to say that we can't see much because strange.",
                    "label": 0
                },
                {
                    "sent": "So the idea of the other is just to say that we're taking a string right now.",
                    "label": 0
                },
                {
                    "sent": "Everything that happens is the letter A disappears.",
                    "label": 0
                },
                {
                    "sent": "In fact, they seems to have disappeared already.",
                    "label": 0
                },
                {
                    "sent": "Shouldn't have here.",
                    "label": 0
                },
                {
                    "sent": "There's an insertion of a letter A and here letter A has become a letter B.",
                    "label": 0
                },
                {
                    "sent": "Even if you can't really see it.",
                    "label": 0
                },
                {
                    "sent": "Something strange with the color.",
                    "label": 0
                }
            ]
        },
        "clip_34": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So examples where the three operations can be described as follows, right?",
                    "label": 0
                }
            ]
        },
        "clip_35": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "It's easy.",
                    "label": 0
                },
                {
                    "sent": "And typically the idea is to say, OK, we're not going to have just one operation, because in the text there may have been various operations that have.",
                    "label": 0
                },
                {
                    "sent": "Mum being made to transform first steps into the second text, so we will consider what is called the reflexive and transitive closure of this derivation.",
                    "label": 1
                },
                {
                    "sent": "Saying how many operations have we had to do to go from text 1 to text too?",
                    "label": 0
                }
            ]
        },
        "clip_36": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Now then, if I take 2 texts, there may be various ways of modifying text 1 to get to text to write.",
                    "label": 0
                },
                {
                    "sent": "I can perhaps start by an insertion, then delete and they note all equivalent.",
                    "label": 0
                },
                {
                    "sent": "So what the levinstein distance tells us is levinstein distance is the smallest of the paths that allow us to get from text 1 two text too.",
                    "label": 1
                },
                {
                    "sent": "Behind that there is the idea that the smallest is the most probable.",
                    "label": 0
                },
                {
                    "sent": "There's there or come idea all that is not entirely justified, it is just the way it is defined.",
                    "label": 0
                },
                {
                    "sent": "We will suppose that if there are various explanations of how text one became text to the shortest path is the one that really came through this OK.",
                    "label": 0
                },
                {
                    "sent": "So in this case, for example from a BAA 2A B, where we can see that we can do it in two operations, one operation consistent, for example in raising the B and the second one.",
                    "label": 0
                },
                {
                    "sent": "Then we've got a A and then the AB.",
                    "label": 1
                },
                {
                    "sent": "The last a becomes the B.",
                    "label": 1
                },
                {
                    "sent": "That's one of the possibilities.",
                    "label": 0
                }
            ]
        },
        "clip_37": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "There, but there always is.",
                    "label": 0
                },
                {
                    "sent": "Now then, this is the easiest case.",
                    "label": 0
                },
                {
                    "sent": "This is the case where every operation has got the same cost and the cost is 1.",
                    "label": 0
                },
                {
                    "sent": "It is the curse operation.",
                    "label": 0
                },
                {
                    "sent": "While this is what normally people use, at least when they're doing mathematics, or at least when they describe the algorithm, so it is represented by a confusion matrix saying that to go from HA costs 0.",
                    "label": 0
                },
                {
                    "sent": "So basically the operation, the emptiness operation code zero doing nothing costs 0.",
                    "label": 0
                },
                {
                    "sent": "Going from A to B, meaning substituting the a biobi will cost 1.",
                    "label": 0
                },
                {
                    "sent": "And then a two Lambda, the last column, Lambda, means the empty string.",
                    "label": 0
                },
                {
                    "sent": "So H Lambda means erasing the a, deleting the a, well that also costs one.",
                    "label": 0
                },
                {
                    "sent": "There's a cost one, and you can also see that inserting in a the here inserting the A here and I will also cost 1.",
                    "label": 0
                }
            ]
        },
        "clip_38": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "But it's not the only confusion matrix.",
                    "label": 0
                },
                {
                    "sent": "We can have a confusion matching per problem.",
                    "label": 0
                }
            ]
        },
        "clip_39": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Is another mathematical one, and this one here is a typical sort of confusion matrix used by the biologists.",
                    "label": 0
                },
                {
                    "sent": "Here you find the different proteins and that you're going to find this called.",
                    "label": 0
                },
                {
                    "sent": "This is the one they called the Blosum 62 matrix.",
                    "label": 0
                },
                {
                    "sent": "Which in fact, if you're looking at it is giving us some negative and some positive weights, and it's even giving us some weights on the diagonal saying that there is a way to go from C to C, so it's not exactly working the way I'm saying for them, it's actually they're going to try and have the biggest cost possible at the end.",
                    "label": 0
                },
                {
                    "sent": "This means that it's going to give you plus nine points if that C is not converted, but for example, converting a W into a C is minus two points.",
                    "label": 0
                },
                {
                    "sent": "So you can also use this metrics and also use the sort of algorithms we're talking about.",
                    "label": 0
                },
                {
                    "sent": "Two compute how much it costs.",
                    "label": 0
                },
                {
                    "sent": "How easy is it, or how possible is it that this string of proteins became this Stringer?",
                    "label": 0
                },
                {
                    "sent": "Became this everyone these are OK.",
                    "label": 0
                }
            ]
        },
        "clip_40": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Some conditions that typically have to hold is that the confusion matrix itself has to respect the triangle inequality for things to be nice.",
                    "label": 0
                }
            ]
        },
        "clip_41": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "That sounds easy.",
                    "label": 0
                },
                {
                    "sent": "And before giving the run of the algorithm, the idea is that it is related with the question of alignment.",
                    "label": 0
                },
                {
                    "sent": "So alignment for the biologists is very important.",
                    "label": 0
                },
                {
                    "sent": "You're going to put your two sequences one under the other, and you're going to try and align the different positions that correspond, so finding a good alignment is finding the shortest possible alignment, and all this corresponds to again, trying to find the edit distance.",
                    "label": 0
                },
                {
                    "sent": "So if I look at this alignment here, all I'm saying is that basically have aligned as I could.",
                    "label": 0
                },
                {
                    "sent": "I've got some red things here which really say this isn't really proper.",
                    "label": 0
                },
                {
                    "sent": "This A has had to become a C and this C has had to become an A.",
                    "label": 0
                },
                {
                    "sent": "But this a has been deleted.",
                    "label": 0
                },
                {
                    "sent": "This A has been deleted and there's been no insertions.",
                    "label": 0
                },
                {
                    "sent": "So there's been two deletions and two substitutions and no insertions, so the distance represented by this alignment would be off for, so I can also measure things in terms of alignment.",
                    "label": 0
                },
                {
                    "sent": "So you can also align and people are trying to do this when you're looking at graphs or trees.",
                    "label": 0
                },
                {
                    "sent": "It corresponds to saying what corresponds to what.",
                    "label": 0
                },
                {
                    "sent": "When you're trying to do.",
                    "label": 0
                },
                {
                    "sent": "In a learning operation, you're trying to pair things and say, well, this correspond to this.",
                    "label": 0
                },
                {
                    "sent": "You don't want to just have the answer.",
                    "label": 0
                },
                {
                    "sent": "Yes, you want to know how, why, what goes with what OK.",
                    "label": 0
                }
            ]
        },
        "clip_42": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So this sort of thing is giving you that.",
                    "label": 0
                },
                {
                    "sent": "Another possible alignment is this one, so here I've just aligned a bit.",
                    "label": 0
                },
                {
                    "sent": "They would have probably done it with gaps the biologist, but it comes to the same.",
                    "label": 0
                },
                {
                    "sent": "I can count how many wrong things I've got and I've this time got no no substitutions where I've got a three deletions and one insertion.",
                    "label": 0
                }
            ]
        },
        "clip_43": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So the general algorithm to do this what wouldn't work is to do it recursively.",
                    "label": 1
                },
                {
                    "sent": "You know recursive algorithm saying, well, it's easy.",
                    "label": 0
                },
                {
                    "sent": "You know I've got my two sequences and I try and align the last two and if I can't, I recursively trying to line the rest and then get my results.",
                    "label": 0
                },
                {
                    "sent": "That won't work out the formula like the one that would be here would really make us reach necessarily an exponential algorithm.",
                    "label": 0
                },
                {
                    "sent": "OK, this is algorithmics where you can see that if you start doing these things, you're just going to keep on computing.",
                    "label": 0
                },
                {
                    "sent": "All the pairs a number of times, so that's where things like dynamic programming come in, which.",
                    "label": 0
                }
            ]
        },
        "clip_44": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We'll be seeing quite a bit off and the dynamic programming consistent, saying, well, let's do it in such a way that instead of asking, you know top down.",
                    "label": 0
                },
                {
                    "sent": "So starting from the long things and going down to the bottom, let's sort of try and do the computation little by little coming up by sequences.",
                    "label": 0
                },
                {
                    "sent": "Like each time a little bit longer until we get the whole sequences were looking at the formulas look like the same.",
                    "label": 0
                },
                {
                    "sent": "I've just given the formulas here with the case where we've got the cost function when it comes to the same.",
                    "label": 0
                },
                {
                    "sent": "It looks like like the same.",
                    "label": 0
                },
                {
                    "sent": "Let's just see how we how we do it on an example.",
                    "label": 0
                }
            ]
        },
        "clip_45": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So suppose we're trying to compute the dessert, the edit distance between string ABA, ACA, BA, and string will not read it from top to bottom.",
                    "label": 0
                },
                {
                    "sent": "OK, BA si AAB, So what we're going to do is we're going to suppose landfill it from from the bottom here to the top here, so the idea is that I can.",
                    "label": 0
                },
                {
                    "sent": "I can fill in this line very easily by just looking at this letter and just increasing this.",
                    "label": 0
                },
                {
                    "sent": "And not increase it when I find the same letter.",
                    "label": 0
                },
                {
                    "sent": "So here's 11 because I've got a B2345.",
                    "label": 0
                },
                {
                    "sent": "Good.",
                    "label": 0
                },
                {
                    "sent": "I know we've already counted it.",
                    "label": 0
                },
                {
                    "sent": "Sorry one.",
                    "label": 0
                },
                {
                    "sent": "Yeah OK.",
                    "label": 0
                },
                {
                    "sent": "The difference the distance between B and this sequence is either equal equal to the length of the sequence or the length of the sequence minus one if it contains AV.",
                    "label": 0
                },
                {
                    "sent": "So this can be initialized and this can be initialized.",
                    "label": 0
                },
                {
                    "sent": "So suppose we've initialized things OK.",
                    "label": 0
                },
                {
                    "sent": "It's not very difficult to initialize the first line and the first column.",
                    "label": 0
                },
                {
                    "sent": "Now what we're interested in is filling in an individual cell, like this one.",
                    "label": 0
                },
                {
                    "sent": "So what we're going to say is.",
                    "label": 0
                },
                {
                    "sent": "The first case, let's find an easy one here.",
                    "label": 0
                },
                {
                    "sent": "No, no, no no.",
                    "label": 0
                },
                {
                    "sent": "Gotta find a nicely nice and easy one.",
                    "label": 0
                },
                {
                    "sent": "OK, this one here right here.",
                    "label": 0
                },
                {
                    "sent": "How do I fill in this cell?",
                    "label": 0
                },
                {
                    "sent": "Well, what I notice is that here I've got C. And here I've got to see.",
                    "label": 0
                },
                {
                    "sent": "So the distance between this sequence and this sequence here, well, is exactly the same as the distance between this sequence and this sequence.",
                    "label": 0
                },
                {
                    "sent": "OK, this I can align this C with this.",
                    "label": 0
                },
                {
                    "sent": "see I can align the two last letters, that's easy.",
                    "label": 0
                },
                {
                    "sent": "So I gotta see here and see here.",
                    "label": 0
                },
                {
                    "sent": "So this to the comes from here is just this two that has been propagated up towards here now.",
                    "label": 0
                },
                {
                    "sent": "Then in the normal case like this one, where here I've got an A in here I've gotta be so I've got two different letters while the there are three possibilities for computing this.",
                    "label": 0
                },
                {
                    "sent": "It's basically either the last operation is a substitution, in which case I've got count one for the substitution plus the cost of the edit distance between.",
                    "label": 0
                },
                {
                    "sent": "A&B, so as as in the string A and the string be or else the last operation has been an insertion sort of the insertion of a B so in that case what I had is I had a baby with a so it's cost 1 + 1 for the insertion or else what I've done is I've done a deletion, so in this case what I've got to do is the distance between B&AB sorry and then I've got this a here and I'm going to put it up here.",
                    "label": 0
                },
                {
                    "sent": "So it's one plus.",
                    "label": 0
                },
                {
                    "sent": "Every time I've got something like this for me to hear is 1 plus men of this one, this one and this one?",
                    "label": 0
                },
                {
                    "sent": "And this can be computed through any any type of.",
                    "label": 0
                },
                {
                    "sent": "Programming language, you can compute it with something like, say, Excel or something similar.",
                    "label": 0
                },
                {
                    "sent": "So what we notice yesterday at the end, that means that we've got the minimum that's been propagated up to the right hand top corner, which is 4.",
                    "label": 0
                }
            ]
        },
        "clip_46": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So in this case.",
                    "label": 0
                },
                {
                    "sent": "And, uh, we can even use the table for to compute all sorts of other things, like for example how many different possible computations there are.",
                    "label": 0
                },
                {
                    "sent": "And in this case where we can follow it through the light Blue Zone, the light Blue Zone is showing us the defease of computing the edit distance.",
                    "label": 0
                },
                {
                    "sent": "So you just look at the different things.",
                    "label": 0
                },
                {
                    "sent": "This four is due to what what's 1 plus one of these three.",
                    "label": 0
                },
                {
                    "sent": "So any one of these three is OK, so the last operation could have either been this one, this one.",
                    "label": 0
                },
                {
                    "sent": "This one suppose it was the B with the a OK, so this would have been a substitution.",
                    "label": 0
                },
                {
                    "sent": "So these three is due to watch.",
                    "label": 0
                },
                {
                    "sent": "So this three is 1 plus the minimum of this this and this where it can't be this or this?",
                    "label": 0
                },
                {
                    "sent": "Because if not we should have had a 2 here or he would have 4 here so the loss of the second loss operation was necessarily a substitution of the A by the bee.",
                    "label": 0
                },
                {
                    "sent": "Here we've got an A&A so it's easy.",
                    "label": 0
                },
                {
                    "sent": "The last operation was just the alignment of this a with this A. CNC exactly the same.",
                    "label": 0
                },
                {
                    "sent": "We got a 2 here.",
                    "label": 0
                },
                {
                    "sent": "So then here this two is due to 1 plus we work in A and here we've gotten a so it's.",
                    "label": 0
                },
                {
                    "sent": "See I don't know so so so so it's this.",
                    "label": 0
                },
                {
                    "sent": "This one this come here or this to this come here so that is logically the A here too.",
                    "label": 0
                },
                {
                    "sent": "And then you just compute and you can find that through that the different computations or the different possibility.",
                    "label": 0
                }
            ]
        },
        "clip_47": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Is of lining things.",
                    "label": 0
                },
                {
                    "sent": "So here's a picture where you can see.",
                    "label": 0
                },
                {
                    "sent": "How I've aligned on this one?",
                    "label": 0
                },
                {
                    "sent": "OK, so.",
                    "label": 0
                }
            ]
        },
        "clip_48": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Gotta have to stop just a word about the complexity so the complexity of the algorithm is square, which we can see from the fact that we're using a table which is a squared table in the sense of there's length first string multiplied by the length of the second string.",
                    "label": 0
                },
                {
                    "sent": "So time and space bus.",
                    "label": 1
                },
                {
                    "sent": "Yes, the alternative is that the space is also square also, and that there are tricks people want to.",
                    "label": 0
                },
                {
                    "sent": "If you want to normalize, which is also nice alternative and looks nice then usually that doesn't work.",
                    "label": 1
                },
                {
                    "sent": "Normalizing tends to give you something that there is no longer a metric.",
                    "label": 0
                },
                {
                    "sent": "OK, so some of the triangular inequality ceases to work in that case.",
                    "label": 0
                }
            ]
        },
        "clip_49": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And just say that you can do other operations like then version.",
                    "label": 1
                },
                {
                    "sent": "You can have people they're working on circular strings when you're trying to describe a pattern and you want to just see if the patterns matching and how they can match and people can work on languages which are sets of strings and see what's the distance between two sets of strings.",
                    "label": 1
                },
                {
                    "sent": "So all these operations have been implemented.",
                    "label": 0
                },
                {
                    "sent": "OK, well I'll stop here and take perhaps one or two questions, not more.",
                    "label": 0
                },
                {
                    "sent": "We have not Mickey is going to be.",
                    "label": 0
                },
                {
                    "sent": "Already a.",
                    "label": 0
                },
                {
                    "sent": "Any questions?",
                    "label": 0
                },
                {
                    "sent": "Now.",
                    "label": 0
                },
                {
                    "sent": "I let me can then perhaps offers are also ask to see what you've understood in what you haven't understood.",
                    "label": 0
                },
                {
                    "sent": "OK, that's enough now.",
                    "label": 0
                },
                {
                    "sent": "5 minutes, 5 minutes, partially installed.",
                    "label": 0
                }
            ]
        }
    }
}