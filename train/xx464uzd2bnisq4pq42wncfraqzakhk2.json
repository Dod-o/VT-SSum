{
    "id": "xx464uzd2bnisq4pq42wncfraqzakhk2",
    "title": "RDF Schema",
    "info": {
        "author": [
            "Barry Norton, British Museum"
        ],
        "published": "Sept. 19, 2011",
        "recorded": "August 2011",
        "category": [
            "Top->Computer Science->Semantic Web->RDF - Resource Description Framework"
        ]
    },
    "url": "http://videolectures.net/sssc2011_norton_rdf/",
    "segmentation": [
        [
            "Really what I wanted to say about schema and ontology language for which the standards on the semantic web RDF S an owl.",
            "Case, don't be misled as many, many people are about what ontologies mean.",
            "They are not data schemas.",
            "They barely.",
            "There anything in common with XML schema?",
            "OK, there can be expressed using XML via RDF.",
            "They can use the data types of XML, but they're not a structural representation of documents.",
            "Everything is graph like, which is why we were drawing graphs more than that, the schema and the ontology language are not about constraining graphs per say, although they do that in a local way.",
            "They do it locally because you can extend every graph.",
            "You can make new assertions.",
            "GNU Triples, which are new edges in the graph OK, and you can introduce.",
            "You can combine schemas and ontologies arbitrarily, unlike an XML schema, you can say that vocabulary Express is this thing that I want to add even I'm working with a different schema.",
            "OK, so you find that you have a photo that you want to include.",
            "You say oh both depiction.",
            "That's the predicate that I want OK and start using that predicate to make new edges in your graph regardless of what schema you were using before.",
            "OK, that's the first point extensibility.",
            "The second point is inference.",
            "OK, the whole point I would say of schemas and ontologies is you don't represent everything explicitly.",
            "Things are derived things that in Ferd from what you've stated according to the schemas and ontologies that you're using.",
            "OK, so let me say 2 words quickly about RDF schema, which is that it sets two things.",
            "Both the expectation.",
            "Of what he will have in your graph and what you might want to include as you extend that and third parties, make assertions and the capability of inference.",
            "What do I mean by expectation?",
            "Well, RDF schema lets you basically declare classes and properties OK and to relate them to one another.",
            "So classes have sub and superclasses equally properties have super and sub properties.",
            "So if you remember in the exercise last night what we.",
            "Suggested to you is that both ingredient and constituent, something that's added as itself and something that comes to be contained a both subproperties of the general Potami relationship, which means they both become part of the whole, but by different means.",
            "And what this means is, if you assert that something is related to related to resource, is are related under the sub property like Coca Cola.",
            "And coffee.",
            "OK, that it's in 3rd that they're related through the Super property, just as as you expect from programming from AI representations that you make that you may also know if something is an instance of a subclass.",
            "It's also an instance for Superclass.",
            "OK, inference is how you derive these implicit assertions that you're making by using something that has a well defined ski."
        ],
        [
            "More ontology.",
            "RDF schema defines these resources and these properties in order to provide for that inference OK, and I'll give a couple of examples.",
            "It also provides some predicates that aren't the basis of inference, but link data.",
            "Best practice.",
            "OK, solidifies the pre existing best practice around schemas and ontologies in terms of using these to help people OK and to some degree also to help.",
            "Sub reasoning mechanisms like crawling OK, so we've mentioned.",
            "See also might cause your crawler to go and look at another document out there.",
            "Another semantic document out there on the web and add the knowledge OK to that graph on which you're doing inference.",
            "But the actual inference will be on the basis of these predicates about classes and proper."
        ],
        [
            "So a really small example, the form of inference is always always OK at the instance level, and the schema level.",
            "As I was saying when we had the question about querying and how to start with new data set.",
            "Everything is declared as RDF.",
            "Everything is a graph and that graph is described by triples, so the form of inference is always.",
            "You have some cripples, you get some more triples that were implicit.",
            "OK, so your set of triples expands.",
            "Your graph becomes richer through inference, so if I add this using a schema predicate said that a commercial flight is a kind of flight and then declare an instance of commercial flight, I get for free.",
            "From inference OK, this extra triple that says that flight.",
            "The instance that I was talking about is also a flight in the general sense.",
            "OK, so all of your reasoning machinery will be making inferences like this.",
            "Adding triples enriching your graph according to what's declared in your schema and or."
        ],
        [
            "Ontology.",
            "The semantics for this can be difficult to read."
        ],
        [
            "Skip this because we're really trying to fly through.",
            "One thing that you should know about the semantics is there's a set of axiomatic triples.",
            "Triples that always apply.",
            "So for instance, anything that's declared a subclass of another resource is inferred to be a class, because the domain.",
            "Of subclass of as a property is class.",
            "OK. Now you see that classes at the meta level you're constrained when you use semantic web machinery.",
            "That's based on our reasoning, not to make more meta classes such as this.",
            "You have to live with what's there, which is things like class and property.",
            "OK, but you do this one level down when you declare properties and give them ranges when you make.",
            "When you relate instances then you derive the classes of the subject and the object via the domain and the range that you've declared.",
            "OK, so you have these axiomatic triples.",
            "You make more triples using the schema vocabulary and you get you."
        ],
        [
            "Inferences"
        ],
        [
            "Has a full set excluding data types of axiomatic triples, and then you have the rest of the semantics to tell you how those can be applied, how those are applied."
        ],
        [
            "By the reasoning machinery.",
            "I will talk about some properties really quickly just to make sure we've got it.",
            "Once a property might be the spousal one, not very common word, but spouse is English for husband or wife.",
            "OK, so if you have a property to relate are resource as the wife of another resource.",
            "A super property might be the spousal one.",
            "So for ease of reading I've called that married to.",
            "OK, so then we then we if we assert somewhere that Ann is the wife of David, I can infer that she's married to David.",
            "OK, and I also use this word spouse as the class.",
            "In the domain and range.",
            "OK, so by making this assertion using this property, I both infer things about super properties and infer things about the subject with domain and things about the things about the object, the classification of the object with the range."
        ],
        [
            "OK, enough."
        ],
        [
            "Our DFS I know just to say.",
            "In our DFS.",
            "Semantics.",
            "Everything is allowed almost.",
            "OK, if I infer that someone is a man and a woman by miss modeling, there's no problem.",
            "OK, according to the inference mechanism."
        ],
        [
            "If you move."
        ],
        [
            "Onto owl."
        ],
        [
            "Let me do these in reverse order.",
            "When you use owl, first you get more resources and predicates, including predicates to use to make inference.",
            "The inference is stronger.",
            "We're not going to cover Owl in full, but just to mention.",
            "What what's called owl DL has the complete set of these resources and then there are dialects that contain subsets that are more efficient for certain reasoning machinery.",
            "OK. Link data tends to use an even smaller set than those dialects.",
            "OK, so it uses same as that we've talked about.",
            "It tends to use things like functional property and inverse functional property.",
            "You may or may not have heard of who's heard of functional properties.",
            "Yeah, not many, OK?",
            "Property is the name for his property.",
            "Says.",
            "When you use this resource is a predicate.",
            "There's certain extra semantics in general, so DFS already has properties.",
            "Owl goes further and let's say some properties are data type properties, so we expect a literal belonging to a certain data type in the object role.",
            "OK, some other object properties we expect to resource, and we can make more assertions about them using these extra.",
            "Our resource is.",
            "OK, one of them is functional property.",
            "It means for a given subject I expect only one object.",
            "Inverse functional property is the opposite, it says.",
            "For any given thing in the object role, it constrains the subject to be unique.",
            "OK, so for both the vocabulary that we keep talking about for people uses this to identify people who don't necessarily have ur eyes.",
            "Although the best practice people in linked data don't like blank nodes.",
            "Blank nodes allow us to have things that don't have identifiers specified.",
            "OK, but they can still be identified by having an inverse functional property.",
            "Which is the mailbox?",
            "The email address or the hash of the email address, and we'll see this in their hands on later.",
            "OK, but what that allows folks to do is say, I can declare a person who's a blank node who doesn't have a UI that I know.",
            "OK, but I can still attached to that blank node and email address.",
            "And if someone else makes assertions about a person named or unamed identified or unidentified with that same mailbox.",
            "The machinery asserts that all of these resources.",
            "Attached to that mailbox are identified and all of the knowledge about them is brought together.",
            "How fear the same as mechanism?",
            "OK, but that also illustrates the consistency check of Owl.",
            "If I explicitly say that two instructors are different from one another, and this is something that people don't always get about owl and what's called the open world assumption that says we might not have the one unique name for everybody.",
            "The one unique identifier.",
            "That in order to get some inference, I need to say that things are different.",
            "OK, but they side then Miss model and say two different things have the same email address.",
            "OK, we infer that they're the same as one another, but we've inserted that they're different from one another, so we have inconsistency.",
            "OK before any more reasoning is done, the machinery will come back to us and say, just modeled this wrong.",
            "OK, this in this value for an inverse functional property means that they should be identified.",
            "But you said that they were different, so this is inconsistent.",
            "OK, our will allows us many to make many assertions using its resources that can result in inconsistencies so we can do things like cardinality modeling.",
            "Say that this properties you don't have only one value.",
            "OK, although it must have more than one value and we can.",
            "Use the machinery to check that before we start reasoning.",
            "OK, so our knowledge model, our assertions will be checked with check for consistency with respect to the ontology before we start reasoning."
        ],
        [
            "The last word I'll say is.",
            "The use of same as and transitive properties can be very useful to you, and I'd like to see things like this used where you find it in the link datasets.",
            "OK, so for instance we have geonames asserting this parent feature property that goes from Vienna up to Austria.",
            "OK, and we have same as relationships being asserted to DB pedia.",
            "As we've said in the link, data cloud DB Pedia is kind of a hub for identifying resource is OK, so we can infer from this whole graph.",
            "That the airport in Vienna as DB Pedia knows it.",
            "Is within Austria becausw.",
            "The DB pedia notion of Vienna Airport is the same as the one in Geonames OK, and it has a parent feature who has a parent feature which is the same as DB pedia's understanding of Austria and the machine.",
            "We will put those things altogether.",
            "It will say that's transitive, so this is a parent of this.",
            "This one is the same as this one.",
            "This one is the same as this one, so the property also applies between those.",
            "OK, it's that level of reasoning in Owl, which is not uncommon in the linked data sphere.",
            "OK, so you can really by putting these two datasets together you can make that inference using our machinery.",
            "That would be glad to show you for your projects.",
            "At that point, the invited speakers arrived, so I hand over to Gerald.",
            "Yes, OK?",
            "Should I say one more word?",
            "What else did I have?",
            "I skipped one slide."
        ],
        [
            "OK, this was just to explain range.",
            "If I say so now he doesn't.",
            "It doesn't even fit.",
            "If I said that a flight is from from somewhere where I've said that from.",
            "Always is the object according to that property is a city.",
            "Then, by asserting that this flight goes from Vienna, I can infer that Vienna, the city just one word about that which might be worth saying, we're dealing with graphs.",
            "So DB Pedia already says that Vienna is a city according to its ontology.",
            "You often end up inferring things that are already known.",
            "There's no double assertion.",
            "If an assertion says something.",
            "An assertion even says either says it again or say something from which it can be inferred.",
            "It was already there, it's just it's just a graph.",
            "It's just some knowledge that's already known.",
            "There's no doubling of the graph.",
            "OK, there's no doubling of that link.",
            "Should I carry on improving?"
        ],
        [
            "Nothing."
        ],
        [
            "It's fine, we can say."
        ],
        [
            "OK. Let me reiterate this one, so here I infer.",
            "Sorry, I assert first.",
            "The wife of relationship relates a woman to a man.",
            "OK, the wife role is a woman, the spouse, the spouse or role.",
            "According to a wife relationship is a man.",
            "If I miss model here and I say Davidson man and then accidentally use this predicate the wrong way around, I infer that David is both a woman and a man's originally known.",
            "There's no inconsistency in RDF schema.",
            "You have to go to Owl to say man and woman are disjoint classes.",
            "If you added that if you use the disjoint predicate from owl to say these two classes cannot share instances, then if I use.",
            "Owl machinery, I would get inconsistency when I put this knowledge model in.",
            "But if I use an RDF, if I use our DFS.",
            "Reasoning only RDF semantics even if I have these owl predicates, they won't be included and I won't find out about inconsistency.",
            "One can extend our DFS reasoning with some of owl without having all of that, so there are subsets of owl that don't lead to inconsistencies.",
            "Those are often used in linked data, so you say, OK, I'll accept that you have transitive things.",
            "I'll accept that you have identification for owl same as 'cause those are common in the clouds, but I won't do consistency based reasoning.",
            "OK, so there are ways to mix this, which may or may not give you a consistency check."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": []
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Really what I wanted to say about schema and ontology language for which the standards on the semantic web RDF S an owl.",
                    "label": 0
                },
                {
                    "sent": "Case, don't be misled as many, many people are about what ontologies mean.",
                    "label": 0
                },
                {
                    "sent": "They are not data schemas.",
                    "label": 0
                },
                {
                    "sent": "They barely.",
                    "label": 0
                },
                {
                    "sent": "There anything in common with XML schema?",
                    "label": 0
                },
                {
                    "sent": "OK, there can be expressed using XML via RDF.",
                    "label": 0
                },
                {
                    "sent": "They can use the data types of XML, but they're not a structural representation of documents.",
                    "label": 0
                },
                {
                    "sent": "Everything is graph like, which is why we were drawing graphs more than that, the schema and the ontology language are not about constraining graphs per say, although they do that in a local way.",
                    "label": 0
                },
                {
                    "sent": "They do it locally because you can extend every graph.",
                    "label": 0
                },
                {
                    "sent": "You can make new assertions.",
                    "label": 0
                },
                {
                    "sent": "GNU Triples, which are new edges in the graph OK, and you can introduce.",
                    "label": 0
                },
                {
                    "sent": "You can combine schemas and ontologies arbitrarily, unlike an XML schema, you can say that vocabulary Express is this thing that I want to add even I'm working with a different schema.",
                    "label": 0
                },
                {
                    "sent": "OK, so you find that you have a photo that you want to include.",
                    "label": 0
                },
                {
                    "sent": "You say oh both depiction.",
                    "label": 0
                },
                {
                    "sent": "That's the predicate that I want OK and start using that predicate to make new edges in your graph regardless of what schema you were using before.",
                    "label": 0
                },
                {
                    "sent": "OK, that's the first point extensibility.",
                    "label": 0
                },
                {
                    "sent": "The second point is inference.",
                    "label": 0
                },
                {
                    "sent": "OK, the whole point I would say of schemas and ontologies is you don't represent everything explicitly.",
                    "label": 0
                },
                {
                    "sent": "Things are derived things that in Ferd from what you've stated according to the schemas and ontologies that you're using.",
                    "label": 0
                },
                {
                    "sent": "OK, so let me say 2 words quickly about RDF schema, which is that it sets two things.",
                    "label": 1
                },
                {
                    "sent": "Both the expectation.",
                    "label": 0
                },
                {
                    "sent": "Of what he will have in your graph and what you might want to include as you extend that and third parties, make assertions and the capability of inference.",
                    "label": 1
                },
                {
                    "sent": "What do I mean by expectation?",
                    "label": 0
                },
                {
                    "sent": "Well, RDF schema lets you basically declare classes and properties OK and to relate them to one another.",
                    "label": 1
                },
                {
                    "sent": "So classes have sub and superclasses equally properties have super and sub properties.",
                    "label": 0
                },
                {
                    "sent": "So if you remember in the exercise last night what we.",
                    "label": 0
                },
                {
                    "sent": "Suggested to you is that both ingredient and constituent, something that's added as itself and something that comes to be contained a both subproperties of the general Potami relationship, which means they both become part of the whole, but by different means.",
                    "label": 0
                },
                {
                    "sent": "And what this means is, if you assert that something is related to related to resource, is are related under the sub property like Coca Cola.",
                    "label": 0
                },
                {
                    "sent": "And coffee.",
                    "label": 0
                },
                {
                    "sent": "OK, that it's in 3rd that they're related through the Super property, just as as you expect from programming from AI representations that you make that you may also know if something is an instance of a subclass.",
                    "label": 0
                },
                {
                    "sent": "It's also an instance for Superclass.",
                    "label": 0
                },
                {
                    "sent": "OK, inference is how you derive these implicit assertions that you're making by using something that has a well defined ski.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "More ontology.",
                    "label": 0
                },
                {
                    "sent": "RDF schema defines these resources and these properties in order to provide for that inference OK, and I'll give a couple of examples.",
                    "label": 1
                },
                {
                    "sent": "It also provides some predicates that aren't the basis of inference, but link data.",
                    "label": 0
                },
                {
                    "sent": "Best practice.",
                    "label": 0
                },
                {
                    "sent": "OK, solidifies the pre existing best practice around schemas and ontologies in terms of using these to help people OK and to some degree also to help.",
                    "label": 0
                },
                {
                    "sent": "Sub reasoning mechanisms like crawling OK, so we've mentioned.",
                    "label": 0
                },
                {
                    "sent": "See also might cause your crawler to go and look at another document out there.",
                    "label": 0
                },
                {
                    "sent": "Another semantic document out there on the web and add the knowledge OK to that graph on which you're doing inference.",
                    "label": 0
                },
                {
                    "sent": "But the actual inference will be on the basis of these predicates about classes and proper.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So a really small example, the form of inference is always always OK at the instance level, and the schema level.",
                    "label": 0
                },
                {
                    "sent": "As I was saying when we had the question about querying and how to start with new data set.",
                    "label": 0
                },
                {
                    "sent": "Everything is declared as RDF.",
                    "label": 0
                },
                {
                    "sent": "Everything is a graph and that graph is described by triples, so the form of inference is always.",
                    "label": 0
                },
                {
                    "sent": "You have some cripples, you get some more triples that were implicit.",
                    "label": 0
                },
                {
                    "sent": "OK, so your set of triples expands.",
                    "label": 0
                },
                {
                    "sent": "Your graph becomes richer through inference, so if I add this using a schema predicate said that a commercial flight is a kind of flight and then declare an instance of commercial flight, I get for free.",
                    "label": 0
                },
                {
                    "sent": "From inference OK, this extra triple that says that flight.",
                    "label": 0
                },
                {
                    "sent": "The instance that I was talking about is also a flight in the general sense.",
                    "label": 0
                },
                {
                    "sent": "OK, so all of your reasoning machinery will be making inferences like this.",
                    "label": 0
                },
                {
                    "sent": "Adding triples enriching your graph according to what's declared in your schema and or.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Ontology.",
                    "label": 0
                },
                {
                    "sent": "The semantics for this can be difficult to read.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Skip this because we're really trying to fly through.",
                    "label": 0
                },
                {
                    "sent": "One thing that you should know about the semantics is there's a set of axiomatic triples.",
                    "label": 1
                },
                {
                    "sent": "Triples that always apply.",
                    "label": 0
                },
                {
                    "sent": "So for instance, anything that's declared a subclass of another resource is inferred to be a class, because the domain.",
                    "label": 0
                },
                {
                    "sent": "Of subclass of as a property is class.",
                    "label": 0
                },
                {
                    "sent": "OK. Now you see that classes at the meta level you're constrained when you use semantic web machinery.",
                    "label": 0
                },
                {
                    "sent": "That's based on our reasoning, not to make more meta classes such as this.",
                    "label": 0
                },
                {
                    "sent": "You have to live with what's there, which is things like class and property.",
                    "label": 0
                },
                {
                    "sent": "OK, but you do this one level down when you declare properties and give them ranges when you make.",
                    "label": 0
                },
                {
                    "sent": "When you relate instances then you derive the classes of the subject and the object via the domain and the range that you've declared.",
                    "label": 0
                },
                {
                    "sent": "OK, so you have these axiomatic triples.",
                    "label": 1
                },
                {
                    "sent": "You make more triples using the schema vocabulary and you get you.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Inferences",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Has a full set excluding data types of axiomatic triples, and then you have the rest of the semantics to tell you how those can be applied, how those are applied.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "By the reasoning machinery.",
                    "label": 0
                },
                {
                    "sent": "I will talk about some properties really quickly just to make sure we've got it.",
                    "label": 0
                },
                {
                    "sent": "Once a property might be the spousal one, not very common word, but spouse is English for husband or wife.",
                    "label": 0
                },
                {
                    "sent": "OK, so if you have a property to relate are resource as the wife of another resource.",
                    "label": 0
                },
                {
                    "sent": "A super property might be the spousal one.",
                    "label": 0
                },
                {
                    "sent": "So for ease of reading I've called that married to.",
                    "label": 0
                },
                {
                    "sent": "OK, so then we then we if we assert somewhere that Ann is the wife of David, I can infer that she's married to David.",
                    "label": 0
                },
                {
                    "sent": "OK, and I also use this word spouse as the class.",
                    "label": 0
                },
                {
                    "sent": "In the domain and range.",
                    "label": 0
                },
                {
                    "sent": "OK, so by making this assertion using this property, I both infer things about super properties and infer things about the subject with domain and things about the things about the object, the classification of the object with the range.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, enough.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Our DFS I know just to say.",
                    "label": 0
                },
                {
                    "sent": "In our DFS.",
                    "label": 0
                },
                {
                    "sent": "Semantics.",
                    "label": 0
                },
                {
                    "sent": "Everything is allowed almost.",
                    "label": 0
                },
                {
                    "sent": "OK, if I infer that someone is a man and a woman by miss modeling, there's no problem.",
                    "label": 0
                },
                {
                    "sent": "OK, according to the inference mechanism.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "If you move.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Onto owl.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": []
        },
        "clip_14": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Let me do these in reverse order.",
                    "label": 0
                },
                {
                    "sent": "When you use owl, first you get more resources and predicates, including predicates to use to make inference.",
                    "label": 1
                },
                {
                    "sent": "The inference is stronger.",
                    "label": 0
                },
                {
                    "sent": "We're not going to cover Owl in full, but just to mention.",
                    "label": 0
                },
                {
                    "sent": "What what's called owl DL has the complete set of these resources and then there are dialects that contain subsets that are more efficient for certain reasoning machinery.",
                    "label": 0
                },
                {
                    "sent": "OK. Link data tends to use an even smaller set than those dialects.",
                    "label": 0
                },
                {
                    "sent": "OK, so it uses same as that we've talked about.",
                    "label": 0
                },
                {
                    "sent": "It tends to use things like functional property and inverse functional property.",
                    "label": 0
                },
                {
                    "sent": "You may or may not have heard of who's heard of functional properties.",
                    "label": 0
                },
                {
                    "sent": "Yeah, not many, OK?",
                    "label": 0
                },
                {
                    "sent": "Property is the name for his property.",
                    "label": 0
                },
                {
                    "sent": "Says.",
                    "label": 0
                },
                {
                    "sent": "When you use this resource is a predicate.",
                    "label": 0
                },
                {
                    "sent": "There's certain extra semantics in general, so DFS already has properties.",
                    "label": 0
                },
                {
                    "sent": "Owl goes further and let's say some properties are data type properties, so we expect a literal belonging to a certain data type in the object role.",
                    "label": 0
                },
                {
                    "sent": "OK, some other object properties we expect to resource, and we can make more assertions about them using these extra.",
                    "label": 0
                },
                {
                    "sent": "Our resource is.",
                    "label": 0
                },
                {
                    "sent": "OK, one of them is functional property.",
                    "label": 0
                },
                {
                    "sent": "It means for a given subject I expect only one object.",
                    "label": 0
                },
                {
                    "sent": "Inverse functional property is the opposite, it says.",
                    "label": 0
                },
                {
                    "sent": "For any given thing in the object role, it constrains the subject to be unique.",
                    "label": 1
                },
                {
                    "sent": "OK, so for both the vocabulary that we keep talking about for people uses this to identify people who don't necessarily have ur eyes.",
                    "label": 0
                },
                {
                    "sent": "Although the best practice people in linked data don't like blank nodes.",
                    "label": 1
                },
                {
                    "sent": "Blank nodes allow us to have things that don't have identifiers specified.",
                    "label": 0
                },
                {
                    "sent": "OK, but they can still be identified by having an inverse functional property.",
                    "label": 0
                },
                {
                    "sent": "Which is the mailbox?",
                    "label": 0
                },
                {
                    "sent": "The email address or the hash of the email address, and we'll see this in their hands on later.",
                    "label": 0
                },
                {
                    "sent": "OK, but what that allows folks to do is say, I can declare a person who's a blank node who doesn't have a UI that I know.",
                    "label": 0
                },
                {
                    "sent": "OK, but I can still attached to that blank node and email address.",
                    "label": 0
                },
                {
                    "sent": "And if someone else makes assertions about a person named or unamed identified or unidentified with that same mailbox.",
                    "label": 0
                },
                {
                    "sent": "The machinery asserts that all of these resources.",
                    "label": 0
                },
                {
                    "sent": "Attached to that mailbox are identified and all of the knowledge about them is brought together.",
                    "label": 0
                },
                {
                    "sent": "How fear the same as mechanism?",
                    "label": 0
                },
                {
                    "sent": "OK, but that also illustrates the consistency check of Owl.",
                    "label": 0
                },
                {
                    "sent": "If I explicitly say that two instructors are different from one another, and this is something that people don't always get about owl and what's called the open world assumption that says we might not have the one unique name for everybody.",
                    "label": 0
                },
                {
                    "sent": "The one unique identifier.",
                    "label": 0
                },
                {
                    "sent": "That in order to get some inference, I need to say that things are different.",
                    "label": 0
                },
                {
                    "sent": "OK, but they side then Miss model and say two different things have the same email address.",
                    "label": 0
                },
                {
                    "sent": "OK, we infer that they're the same as one another, but we've inserted that they're different from one another, so we have inconsistency.",
                    "label": 0
                },
                {
                    "sent": "OK before any more reasoning is done, the machinery will come back to us and say, just modeled this wrong.",
                    "label": 0
                },
                {
                    "sent": "OK, this in this value for an inverse functional property means that they should be identified.",
                    "label": 0
                },
                {
                    "sent": "But you said that they were different, so this is inconsistent.",
                    "label": 0
                },
                {
                    "sent": "OK, our will allows us many to make many assertions using its resources that can result in inconsistencies so we can do things like cardinality modeling.",
                    "label": 0
                },
                {
                    "sent": "Say that this properties you don't have only one value.",
                    "label": 0
                },
                {
                    "sent": "OK, although it must have more than one value and we can.",
                    "label": 0
                },
                {
                    "sent": "Use the machinery to check that before we start reasoning.",
                    "label": 0
                },
                {
                    "sent": "OK, so our knowledge model, our assertions will be checked with check for consistency with respect to the ontology before we start reasoning.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The last word I'll say is.",
                    "label": 0
                },
                {
                    "sent": "The use of same as and transitive properties can be very useful to you, and I'd like to see things like this used where you find it in the link datasets.",
                    "label": 0
                },
                {
                    "sent": "OK, so for instance we have geonames asserting this parent feature property that goes from Vienna up to Austria.",
                    "label": 0
                },
                {
                    "sent": "OK, and we have same as relationships being asserted to DB pedia.",
                    "label": 0
                },
                {
                    "sent": "As we've said in the link, data cloud DB Pedia is kind of a hub for identifying resource is OK, so we can infer from this whole graph.",
                    "label": 0
                },
                {
                    "sent": "That the airport in Vienna as DB Pedia knows it.",
                    "label": 0
                },
                {
                    "sent": "Is within Austria becausw.",
                    "label": 0
                },
                {
                    "sent": "The DB pedia notion of Vienna Airport is the same as the one in Geonames OK, and it has a parent feature who has a parent feature which is the same as DB pedia's understanding of Austria and the machine.",
                    "label": 0
                },
                {
                    "sent": "We will put those things altogether.",
                    "label": 0
                },
                {
                    "sent": "It will say that's transitive, so this is a parent of this.",
                    "label": 0
                },
                {
                    "sent": "This one is the same as this one.",
                    "label": 0
                },
                {
                    "sent": "This one is the same as this one, so the property also applies between those.",
                    "label": 0
                },
                {
                    "sent": "OK, it's that level of reasoning in Owl, which is not uncommon in the linked data sphere.",
                    "label": 0
                },
                {
                    "sent": "OK, so you can really by putting these two datasets together you can make that inference using our machinery.",
                    "label": 0
                },
                {
                    "sent": "That would be glad to show you for your projects.",
                    "label": 0
                },
                {
                    "sent": "At that point, the invited speakers arrived, so I hand over to Gerald.",
                    "label": 0
                },
                {
                    "sent": "Yes, OK?",
                    "label": 0
                },
                {
                    "sent": "Should I say one more word?",
                    "label": 0
                },
                {
                    "sent": "What else did I have?",
                    "label": 0
                },
                {
                    "sent": "I skipped one slide.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, this was just to explain range.",
                    "label": 0
                },
                {
                    "sent": "If I say so now he doesn't.",
                    "label": 0
                },
                {
                    "sent": "It doesn't even fit.",
                    "label": 0
                },
                {
                    "sent": "If I said that a flight is from from somewhere where I've said that from.",
                    "label": 0
                },
                {
                    "sent": "Always is the object according to that property is a city.",
                    "label": 0
                },
                {
                    "sent": "Then, by asserting that this flight goes from Vienna, I can infer that Vienna, the city just one word about that which might be worth saying, we're dealing with graphs.",
                    "label": 0
                },
                {
                    "sent": "So DB Pedia already says that Vienna is a city according to its ontology.",
                    "label": 0
                },
                {
                    "sent": "You often end up inferring things that are already known.",
                    "label": 0
                },
                {
                    "sent": "There's no double assertion.",
                    "label": 0
                },
                {
                    "sent": "If an assertion says something.",
                    "label": 0
                },
                {
                    "sent": "An assertion even says either says it again or say something from which it can be inferred.",
                    "label": 0
                },
                {
                    "sent": "It was already there, it's just it's just a graph.",
                    "label": 0
                },
                {
                    "sent": "It's just some knowledge that's already known.",
                    "label": 0
                },
                {
                    "sent": "There's no doubling of the graph.",
                    "label": 0
                },
                {
                    "sent": "OK, there's no doubling of that link.",
                    "label": 0
                },
                {
                    "sent": "Should I carry on improving?",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Nothing.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": []
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "It's fine, we can say.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK. Let me reiterate this one, so here I infer.",
                    "label": 0
                },
                {
                    "sent": "Sorry, I assert first.",
                    "label": 0
                },
                {
                    "sent": "The wife of relationship relates a woman to a man.",
                    "label": 0
                },
                {
                    "sent": "OK, the wife role is a woman, the spouse, the spouse or role.",
                    "label": 0
                },
                {
                    "sent": "According to a wife relationship is a man.",
                    "label": 0
                },
                {
                    "sent": "If I miss model here and I say Davidson man and then accidentally use this predicate the wrong way around, I infer that David is both a woman and a man's originally known.",
                    "label": 0
                },
                {
                    "sent": "There's no inconsistency in RDF schema.",
                    "label": 0
                },
                {
                    "sent": "You have to go to Owl to say man and woman are disjoint classes.",
                    "label": 0
                },
                {
                    "sent": "If you added that if you use the disjoint predicate from owl to say these two classes cannot share instances, then if I use.",
                    "label": 0
                },
                {
                    "sent": "Owl machinery, I would get inconsistency when I put this knowledge model in.",
                    "label": 0
                },
                {
                    "sent": "But if I use an RDF, if I use our DFS.",
                    "label": 0
                },
                {
                    "sent": "Reasoning only RDF semantics even if I have these owl predicates, they won't be included and I won't find out about inconsistency.",
                    "label": 0
                },
                {
                    "sent": "One can extend our DFS reasoning with some of owl without having all of that, so there are subsets of owl that don't lead to inconsistencies.",
                    "label": 0
                },
                {
                    "sent": "Those are often used in linked data, so you say, OK, I'll accept that you have transitive things.",
                    "label": 0
                },
                {
                    "sent": "I'll accept that you have identification for owl same as 'cause those are common in the clouds, but I won't do consistency based reasoning.",
                    "label": 0
                },
                {
                    "sent": "OK, so there are ways to mix this, which may or may not give you a consistency check.",
                    "label": 0
                }
            ]
        }
    }
}