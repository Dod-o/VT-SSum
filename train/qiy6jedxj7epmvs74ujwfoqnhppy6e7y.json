{
    "id": "qiy6jedxj7epmvs74ujwfoqnhppy6e7y",
    "title": "Matplotlib",
    "info": {
        "author": [
            "John D. Hunter, TradeLink"
        ],
        "published": "Dec. 20, 2008",
        "recorded": "December 2008",
        "category": [
            "Top->Computer Science->Machine Learning->Software",
            "Top->Computers->Programming->Python"
        ]
    },
    "url": "http://videolectures.net/mloss08_hunter_mat/",
    "segmentation": [
        [
            "OK, thanks for coming and thanks especially to Soren, Mickey Owen Chang for inviting me here.",
            "I have kind of a mixed background.",
            "I actually did my PhD in neural coding.",
            "I have since left the field of neurobiology.",
            "I'm in the financial industry now and this is my first NIPS conference, so I find that there's a certain irony.",
            "You know that I'm no longer in the field of neural systems that I'm actually attending this conference for the first time not to present in any of the work I did on neural coding, but some stuff that I did.",
            "Writing a visualization tool for Python.",
            "So I spend a lot of time with Python conferences and this is one of my first time to come to a more generic conference on open source software, so I'm going to try to be an advocate for Python.",
            "I know there's a lot of tools that people are using here that are very powerful, and all of them have advantages, and I've tried many of them myself and eventually settled happily on Python, so you know if I can persuade any of the people in the room that this is a good mix of tools to use for scientific computing.",
            "I'm going to try to do.",
            "I need the microphone on?",
            "Do I just clip it?",
            "My curious.",
            "Oh, I see.",
            "So I want to start by talking a little bit about what made me become a Python programmer.",
            "As you know, as a biologist by training and worked on computational biology problems for my PhD and have been along time Matlab user and when I graduated started my post Doc, I was working in epilepsy.",
            "Each step in my career I'm getting a little bit closer and closer to the real world.",
            "Before I leave my intro slide, though, I wanted to mention to the developer of MPD, right that I also have a program that designed my own logo.",
            "And I did want to ask you, did your program design your logo or did mine?",
            "But to the Lua and Torch developers, I probably have the most impoverished presentation today, using a poor man's PowerPoint, so I'm definitely motivated to go home and try to write my own Matplotlib presentation software, so that's going to be the next thing I'm working on."
        ],
        [
            "So when I started my postdoc, I was working in epilepsy surgery and.",
            "Basically, in epilepsy surgery you have patients with intractable, intractable epilepsy.",
            "Have tried treatments of drugs that haven't been successful, and.",
            "The goal is to try to find out where seizures are occurring and this is a picture of an application we used as part of the pre surgery work up where we in surgery exposed the cerebral cortex leg grids of electrodes over them.",
            "So we record what the ECOG as opposed to e.g, which is a recording directly on the surface of the brain and then there.",
            "Their school would be closed back up for two weeks of monitoring and we would try to determine where the seizures were occurring and this is a screenshot of a application that we used in the laboratory for it's a commercial application for doing seizure localization and as part of this epilepsy work up.",
            "We weren't a very rich lab and it was a very expensive application.",
            "It was about $50,000 per seat and it had a hardware dongle that you could use.",
            "And so basically people would have to schedule time at the computer to write this applet to work on this application to do our analysis.",
            "And you know that wasn't a very appealing prospect to me and even less appealing was we wanted to plug in some novel statistical algorithms to look for coherence between electrodes.",
            "Wondering if that would give us some information about.",
            "How phase in certain frequencies, which would lead lag relationships in seizure spreading?",
            "And I imagine myself spending two years writing plugins for a piece of commercial software that if I left the lab went to work in a different lab, maybe left epilepsy and went to the financial industry.",
            "Some kind of strange circumstance.",
            "All that work would be lossed and sort of stuck in that proprietary application.",
            "So I set out to rewrite this application in Matlab or at least the pieces that we needed.",
            "And I was a huge MATLAB user and I did it.",
            "I essentially wrote something equivalent to this with an EG viewer and some spectral power mappings and sort of a user interface application in Matlab.",
            "That was working OK, but one of the things when you work in a hospital with patients who have, you know Eegs and Mris and all kinds of other metadata.",
            "If you will, is it gets harder and harder to map the world into a array of floats, right?",
            "So in Matlab, the world is kind of an array of floats and they have other data structures like cell arrays, which are little clunky to use.",
            "But you know, the world is naturally mapped as an array of floats in the MATLAB view and the real world is much, much more complicated and so.",
            "One of the bottlenecks for me in this application was.",
            "Trying to manage complex data structures.",
            "Basically the other bottleneck was we had our data distributed around the web.",
            "We had my SQL databases, we had web forms that we were trying to fill out and trying to talk to all of those things via MATLAB was also difficult.",
            "It's certainly doable.",
            "Matlab has a Java machine built into it and you can do object oriented programming in Matlab, but it's difficult."
        ],
        [
            "So at some point I put the whole thing on the scrap heap and started over in Python.",
            "And.",
            "Basically, there's been no turning back, you know at that point I sort of stopped programming Matlab and it become an ad and art and Python programmer.",
            "And if you look at the previous application, there were sort of two pieces that we needed to be able to deal with.",
            "Sort of the 3D spatial picture of where these electrodes on the brain and their physical relation and sort of the more the classical two DG picture.",
            "So the first piece that I wrote in Python was using the visualization toolkit.",
            "It's very powerful 3D library in Python to do 3 dimensional reconstructions from medical image data and.",
            "Basically, did some algorithms to detect the bright spots in ciety.",
            "The three things that show up are blood bones and bullets, so the electrodes are made out of metal and you can find them with an automated algorithm fairly easily.",
            "So we got a pretty precise mapping of where these electrodes were in three dimensional space, and before this it was done with pictures where neurosurgeons were marking photos that were taken with a handheld camera in the LR to try to mark the location of these electrodes.",
            "And you know, I think in brain surgery when you're trying to localize the seizure focus the three most important things.",
            "Our location, location and location right?",
            "So I think we had a small improvement here just by having an algorithm to detect where exactly in the brain are we measuring the select."
        ],
        [
            "Recipe and then we went on to do.",
            "Sort of, you know, fancy or color mappings of power Spectra across the brain during different States and seizure states how phase in different frequency bands is transmitted and this is a screenshot of a graphical user interface application written in GTK for doing these kind of spectral analysis of epilepsy and this is part of the neural neural imaging Suite in Python.",
            "It's called in Ipy nipi.",
            "So some components that I wrote.",
            "Now ironically the 3D component was pretty easy.",
            "There's a really powerful 3D library in C++ called VTK that does more or less everything you could need to do in 3D.",
            "The situation for 2D graphics was different.",
            "There were probably 30 or 42 D graphics libraries, all of which were good, all of which had features, none of which could do everything that I needed to do.",
            "So you know, the situation was a little bit like it seems to be in machine learning.",
            "Everybody who does machine learning has their own machine learning package.",
            "Everybody who did plotting in Python had their own plotting package, so I figured I would join that."
        ],
        [
            "Bob rolled up my sleeves and wrote my own plotting library, but I had some fairly specific requirements, and one of the most important requirements.",
            "As I was writing a user interface application.",
            "So I need something that can be embedded into a gooey and a lot of the tools.",
            "For example the gnuplot.",
            "I don't hesitate to say can't be, but I don't think they can be embedded into GUI's and a lot of the other plotting solutions had that limitation, so I need something that can be embedded into a GUI.",
            "As well as you know, ideally you would like something that you can use interactively from the shell and savior figures and make publication quality plots so those are the kind of three things I was looking for.",
            "User interface applications, good scripting, good interactive shell use in publication, publication quality, graphics.",
            "Couldn't find anything that had all of those components, and that's basically when Matplotlib was born.",
            "An interesting story at least.",
            "Funny to me.",
            "I'm Fernando Paris, who wrote I Python, which is a Python shell.",
            "I'll be using a lot today.",
            "Had a support for the new plot in there an I sent him a Patch which added some features to the I Python interface to gnuplot to make it look more like Matlab and she wrote me back and said, you know, I'm really busy.",
            "Right now I'm not gonna be able to look at this for six months.",
            "I can't deal with it.",
            "I'm trying to finish my PhD.",
            "So essentially Matplotlib was born as a Patch rejection to Python.",
            "So this is a picture of the epilepsy viewing application that we wrote in Matplotlib showing you know the time series of the EG on this axis and a time dependent spectral histogram spectral density plot on this axis.",
            "So as the seizures you start into a seizure activity you see these high frequency bands start to dominate and harmonics and then they become very regular in this region.",
            "The seizure abruptly terminates.",
            "So Matlab is a.",
            "Class library that was designed to be embedded in a GTK in in a user interface application.",
            "Initially with GTK.",
            "Now as we support other."
        ],
        [
            "Look, it's as well, but for the shell component we know we wanted to scripting in a shell component as well, and I was a heavy Matlab user so I decided to write a sort of an interface to the library.",
            "So basically a procedural interface that will stateful in the way that Matlab is stateful.",
            "When you say subplot, you graph into that subplot.",
            "And essentially, you know there's some magic going on under the hood that's managing the state of your process.",
            "And so Matlab worked for me as as an environment and I just decided to emulate Matlab for the procedural inner interface, so we didn't set out to be a Matlab clone and we don't really strive to be a Matlab clone, but essentially at the coarsest layer we provide a lot of the Matlab functionality.",
            "As you drill deeper and deeper, we depart further and further and we try to do things in a pythonic way, as opposed to a MATLAB way.",
            "Most of our users appreciate that because people who use Matlab.",
            "I mean so people use Python, use it because they like the language they like it's features they like object oriented programming and they don't find the Matlab language terribly rich.",
            "But you can see if you're coming from Matlab.",
            "There's a fairly close correspondence that you know you can learn one or the other fairly quickly, and we produce fairly similar outputs.",
            "So Edward Tufty, who's a vision has worked on the visual display of quantitative information.",
            "Has this phrase copy the great architectures and the other phrase?",
            "He said, that I like a lot, which is intelligence imitates, but genius steals.",
            "So in a sense, we, I think this has been one of the biggest benefits of Matplotlib, is that from the start we had an interface that was fixed.",
            "We didn't try to create a new interface.",
            "We took an interface that worked.",
            "We implemented it, and we've refactored the back end code.",
            "You know, the guts of it numerous times while presenting a pretty stable user interface.",
            "So that's you know.",
            "That's made our users happy.",
            "The code rarely breaks at the user."
        ],
        [
            "Level.",
            "So I would say you know most people who are working with this graphics library working on what we call the pylab interface, and that's basically an environment that's designed to look and feel like Matlab to have the ease of use of.",
            "Of interactive graphics, so we have this mode sitting in Ipython.",
            "Ipython is an interactive Python shell that I'll be using a lot today.",
            "In the demo phase and when you import when you start this thing in I Python, it basically does all the imports that imports your array libraries from Numpy.",
            "It imports everything it needs for Matplotlib, invoke import safety and it starts you off in a scripting environment where you don't have to think too much.",
            "Where am I going to get these symbols from?",
            "So you know, in that kind of environment, I think that the procedural interface is very nice because you don't have to think I have to instantiate an object and then call methods on the object.",
            "It's very good when you want to do something very quickly, but that kind of environment doesn't scale well to a large scale application like a user interface application.",
            "And when you're doing that, you don't want anyone managing state for you.",
            "You don't want anyone automatically importing things from libraries, so you know we support both modes, and I'm going to start off showing you the interactive shell mode, and then as we move forward, I'm going to show you some more of these sort of embedding.",
            "In application tricks that we can use and I want to emphasize in the talk today, things that are probably, you know, you can make nice plots from are.",
            "You can make nice plots from Octave, but both of those use, I believe, a good gnuplot rendering engine and one of the things you lose when you're using a new plot is the real interactivity with your figures.",
            "In terms of you know, mouse clicking, selecting regions with lassos.",
            "So I want to at least to differentiate our graphics from those environments, illustrate some of those features at the end."
        ],
        [
            "A couple more words on what I think is good about Python And then I'm going to go into the demo mode when you work in a laboratory environment.",
            "I assume many of you here are probably very good programmers.",
            "Very good data analysis and you probably work with people in your lab who come to you because you're the expert and I think where Python is really good language.",
            "Is it's very easy for novice programmers to learn.",
            "People have never programmed before.",
            "People who are beginners, probably.",
            "Most of the people in this room could be competency plus plus programmers or any other sort of high level powerful language, whereas a lot of students, particularly those who are new to the task of programming when you get to something like Java or C++, or to do the simplest things, require pretty complex programs.",
            "You lose about 75% of your potential contributors and programmers, because this just doesn't fit the mental model.",
            "Of most people, so I think that Python is sort of the distilled essence of simplicity in.",
            "In the Hello world example, and I'm a little bit disappointed that this is slated for destruction in Python 3.0 because.",
            "Go has always considered this award, so Python is going to look a little bit more than this print is going to become a function call, and I'm going to have to throw this this slide away.",
            "But Python, you know, people say it fits your brain because it's fairly expressive.",
            "It looks like pseudocode in the way that Lua looked like pseudocode this more."
        ],
        [
            "I'm.",
            "We've I've mentioned that it scales from, you know, scripts to applications.",
            "It supports object oriented programming, but you don't have to do object oriented programming supports functional programming not as well as a pure functional programming language, but it allows you to use a functional language.",
            "It allows you to program procedurally.",
            "It allows you to program with generators and generators so it sort of supports all of these modes and probably every language you could find a distilled purified version of a functional programming language that's better than Python, but Python lets you choose between them.",
            "So it's versatile in that way for scientific computing perspective, I think the number one selling point for Python is that I think it interoperates with other languages better than any other language on the planet.",
            "I think there's no other language that can talk as easily to as many other languages, so part of Scipy is a program called F2.",
            "PY you feed into Fortran header.",
            "It feeds you a Python wrapper, swig you feed it to, see header, it feeds you a Python wrapper, boost Python, you feed it to C++, enter it, feeds you a Python wrapper.",
            "There's an octave bridge, there's an R bridge.",
            "There's a Matlab bridge, and that's why Sage chose Python.",
            "When they were riding their all encompassing, you know wrapper of many languages because Python really talks well to all languages.",
            "I know most languages can talk to other languages.",
            "I think Python does it very easily."
        ],
        [
            "The other thing that's that makes Python compelling is that the third party library support, particularly for scientific computing, is very strong.",
            "Numpy is a first class in Dimensional Array library.",
            "Scipy essentially provides wrappers to all the FORTRAN libraries.",
            "Lapack Atlas blasts Linpack, ody pack, so all those Fortran libraries that have been drug tested in our around and essentially that formed the core of Matlab.",
            "Form the core Scipy and Scipy just wraps the FORTRAN provides a Python interface to them.",
            "Matplotlib provides the Matlab like graphical interface toolkit.",
            "I talked a little bit about VTK, the 3D libraries from Kitware in thought as a company in Texas that builds frameworks for scientific computing applications that are very powerful.",
            "Network X is a graph library coming out of Los Alamos.",
            "Twisted is a asynchronous web application Server framework which can underlie distributed computing efforts.",
            "And Sphinx is a documentation generator which I'll show a little bit of later on today, so the choice of 3rd party libraries is a very important one and I think Python."
        ],
        [
            "Excels there as well, so you know this cartoon really made the rounds on all the Python lists after the ex KCD creator wrote it and sort of describes the experience of a person in the first night they learned to program Python And it's so simple I just print Hello World and he starts to fly and he's like how come you're flying and as you just typed important anti gravity and I also drank everything in the medicine cabinet but I think it's the Python.",
            "So this was such a popular little cartoon."
        ],
        [
            "OK, I'm going to jump into the interactive interlude now here that in Python 3, which is the long awaited third generation of Python.",
            "They've added the anti grad gravity module to the core language.",
            "So I'm not running Python 3 because all these third party libraries don't run on Python 3 yet, but I've installed this sort of in a testbed here, so Python has a long history of, for example, this module is kind of fun that Tim Peters wrote.",
            "So it's basically a little.",
            "Point is called as in of Python.",
            "Beautiful is better than ugly.",
            "Explicit is better than implicit.",
            "Simple is better than complex and it sort of gives you the Zen of how you should be programming Python.",
            "So in that vein they also wrote the anti gravity module so everyone hold onto your seats here.",
            "OK, so I'm going to go into the.",
            "Whoever is keeping time, will you flash me every once in awhile so I know, kind of where I am.",
            "I'm going to start off briefly and just show you some of the features of Python that I think are really neat.",
            "I'm going to focus in on the map that live in Pylab features hopefully show you some things you you haven't seen.",
            "If you're an avid Python programmer, so this is the Ipython shell.",
            "It's just an enhanced Python shell, and I started with this pylab mode here, which basically says import matplotlib important empty, and give me a Matlab like environment so straight out of the gates you can start doing things.",
            "Make a histogram of 1000 random numbers normally distributed with 100 bins.",
            "You should get a graph.",
            "That looks like a normal distribution.",
            "So like MATLAB, you can fairly easily do easy things.",
            "But we're not here really to emulate Mat lab, so I want to show you some of the interesting things that Python can do beyond those capabilities to start out with.",
            "So people talk about Python is being battery batteries included, so I'm going to put the URL URL Lib module.",
            "This is a module for fetching data off of websites and.",
            "Again, this is something you can do in Matlab, but a little bit harder, so since I'm in the financial services industry now, do a little financial example from Yahoo Finance.",
            "Does anybody have a favorite stock that is lossed them a lot of money in the last year?",
            "Are y'all academics?",
            "No.",
            "No tickers, no favorite stocks to to analyze.",
            "Alright, this one has lost me a lot of money.",
            "My daughters love these croxon.",
            "That's not been good for My Portfolio, so we can go to Yahoo finance historical prices.",
            "You can download a CSV file to a spreadsheet, so I'm going to just right click and copy the link location.",
            "So this is a link to grab a CSV file from Yahoo Finance and I'm going to save that link here in the shell.",
            "Just paste it in.",
            "So I've got this variable URL and I'm going to grab that off the web using the URL library.",
            "The URL level.",
            "Search it in stored in the trimmer and a temporary file for us.",
            "And so I pass the URL.",
            "And it saved it in this temporary file called there something something the CSV file.",
            "So I'm going to import the CSV file.",
            "We have this this nice CSV importer which is really.",
            "We work with CSV files a lot in the financial industry so this is made my life.",
            "Great.",
            "So let's just see what that file looks like real quick so it looks like a standard CSV file, the Ipython shell.",
            "It's nice, it lets you type Unix commands or arbitrary shell commands, so you can kind of just.",
            "I just typed a less, so you basically have these headers and these different types.",
            "Now this is a date string, there's some price data in some volume data, which is an integer, so already we're not a whole world of floats, is that left or in?",
            "So what I've done with this R. This honor is a record array.",
            "Which is a very nice data structure from Numpy.",
            "It's got 717 rows in it and I'll print the first one.",
            "It has a datetime object is the first row.",
            "It's a 1112.",
            "That's yesterday, some price data and some integer data.",
            "So essentially what we've done here is created an array of cease trucks, so we have different types.",
            "Here we have a Python object types.",
            "We have floating point types and we have integer types, and that's that.",
            "Type information is stored in this D type attribute of Numpy arrays, so you can see that date Maps to a four by Python object.",
            "The opening price is an 8 byte floating point number.",
            "This is the endianness of it, and the volume is a four byte integer, and all of this is being stored in a C structure, so we're going to see like speeds whenever we work with these things.",
            "When we when we operate on then we don't have to ever go up to the Python layer.",
            "Everything will stay in the sea layer.",
            "So if we want to look at how much dollar volume traded in except in Crocs, we can say R dot close.",
            "Closing price times are dot volume.",
            "That's how many shares traded times how many times the price and so dollar volume is this array of dollars traded and we can do statistics on it like we can ask what is the mean.",
            "What is the standard deviation and again never having to pass data back and forth from the Python to see later we're staying in the ceiling or the whole time.",
            "Or we can do a histogram.",
            "Histogram of the log of the dollar volume.",
            "So.",
            "The other thing that's really nice about these Numpy arrays is you can do logical masking.",
            "So for example, I can import the datetime module and I can say the logical mask of when our date is greater than or equal to datetime date 2008 one one.",
            "So just select out this year.",
            "Then I can slice my record my array with that mask.",
            "Now I've got a smaller.",
            "It's a zero copy operation, it's just a view.",
            "I've got a smaller little slice and I can clear my figure.",
            "Pollard update versus R Dot adjusted close.",
            "Now you can see how well my daughters love for Crocs shoes."
        ],
        [
            "Done for me this year.",
            "Not so well.",
            "Something just about Matplotlib.",
            "We actually don't try to be very smart.",
            "We don't try to make the layout work for you.",
            "One thing I really don't like about computers is that they try to help me too much.",
            "I kind of want them to do what I tell them to do and to make it easy for them.",
            "So for example, these date tickers overlap, so instead I'm just going to grab my figure handle and call this method autoformat ex date, which basically says these are date labels.",
            "They're probably big, reformat them in a way that sort of they're not overlapping so much so.",
            "You know these could we basically provide tools to make it easy for you to manipulate things, but we're not going to do it for you.",
            "You know there's pros and cons of both approaches, and we have little GUI tool here.",
            "If you don't like the way that the subplot is quite quite laid out where you can sort of tweak things yourself a little bit.",
            "So let's throw real quick title on here.",
            "I'm going to roll string and I'm going to say mean let's say no, this is.",
            "The mean is.",
            "1.1 F percent this is a string and the standard deviation.",
            "Sigma, some using a text string here.",
            "I'm going to pass in.",
            "I'm going to interpolate into this string DV dot mean and DOT standard deviation.",
            "Because it's a texturing, I have to close, it has to be balanced with dollar signs.",
            "So look like a tech everybody.",
            "I have to close this one more time maybe.",
            "So not very pretty, but we you know we basically you can write latex expressions and one thing that's really nice here is we have our own latech parsing engine.",
            "So we we ship a parser.",
            "We parse latech.",
            "One of our developers actually implemented the new algorithms so.",
            "The box is the glue, it's all implemented.",
            "And so we can.",
            "We can basically parse latex math expressions, but for the real purist and we also ship ship the computer modern fonts in our distribution, so you don't have to manage your fonts and we take the fonts that we build and we embed them in your output.",
            "So we have our own PS writer, own PDF writer, own SVG writer.",
            "We don't use any third party tools for that.",
            "And so if I say save test DPS.",
            "Say fig.",
            "Can test out PDF.",
            "Test dot PNG.",
            "Contest dot SVG.",
            "Where am I?",
            "Something in my home directory.",
            "So if those of you have tried to get your latech integrated with other kinds of output formats, know that you usually don't get what what you see on the screen is not what you get in your output formats.",
            "But here it is because we actually are embedding exactly the same fonts in the documents.",
            "It makes the files a little bit larger in SVG over here.",
            "So what you see on the screen is what you get.",
            "You don't need a latex install and you can do fairly sophisticated mathematical expressions.",
            "Examples."
        ],
        [
            "So you can even write nested under over recursive frac.",
            "The whole kind of thing that you do but.",
            "That's not good enough for most mathematicians, right?",
            "They want latech, so we actually do have a mode where you can say I want latech will send all your text to latech, it'll render it will bring it in and put it directly into your PS or PNG file, so you can actually use configure tech documents will look your figures will look exactly the same as your as the rest of your document so.",
            "That's really one of the killer features that we have.",
            "Is this really rich support for text?",
            "Time, am I doing?",
            "12 and then your friend, are you affecting the actual image?",
            "Yes, printed it, that all got saved, yes.",
            "Um?",
            "OK.",
            "I'm not going to spend a lot of time because I'm low on time.",
            "I'm going to skip a little bit here, but let me take you to.",
            "You can do what I would have done.",
            "We've put a lot of work into our website lately, so I just want to show you some nice.",
            "Nice things there that are particularly useful.",
            "I think the sort of the killer feature on the web page is this Gallery and basically run this in a Cron job at night from subversion and it runs every example in our examples directory.",
            "We probably have 200 examples of working code, so every figure that's on this page is guaranteed to be working code.",
            "That at least runs from subversion because that's how they were generated.",
            "So if you see a figure that you want to make, like this annotation here, for example, if you click on it, it takes you to a higher resolution image of it.",
            "And syntax highlighted source code that you can then just download and run, so that's great.",
            "That's really a great way when you're trying to learn.",
            "It's a great resource.",
            "The documentation is.",
            "You know, I think our PDF at this point is 700 pages and I don't know.",
            "Maybe half of it is documented or something.",
            "There's still a lot of work left to be done, but we're using this tool called Sphinx which is a Python documentation generating tool and you basically write restructuredtext.",
            "And it will either generate output in HTML or in PDF using latech.",
            "So I'm just going to click on part of our users guide working with text.",
            "Since we were just looking at mathematical expressions, we can look at the chapter in writing mathematical expressions.",
            "So this is kind of our guide to writing mathematical expressions, and we actually use our own math rendering engine and creating our users guide to generate the output.",
            "So again, here's what you see is what you get.",
            "And basically all the different kinds of math expressions, different fonts that you can choose.",
            "The symbol tables.",
            "Are here there's also another neat little thing in this.",
            "Rest one of our developers wrote this mode called Plot and you can just say in your rest document your restructured text document.",
            "You just say plot this file.",
            "So for example, that the code that generated what we're looking at here MPL examples.",
            "Dark.",
            "Users guide math text.",
            "At the bottom there's just these two lines of code here, let's say.",
            "This isn't a docstring plot this file, so it points to an external file, calls Matlab on it, brings the file into your documentation, so it's kind of a regression test that you know your code examples that are generating your figures run because they run documentation, build time, and we do the same thing in our API documents.",
            "So for example, if you go to Pyplot, which is sort of the module we've been looking at.",
            "The auto correlation function.",
            "The docstrings are in here and we have these sort of snippets which show you graphs, and so it's a really nice.",
            "I think it's a really nice.",
            "Rest is a very nice tool for making these kinds of these documents, because you can incorporate math and figures in the syntax is fairly simple, it's plain text.",
            "It's not as heavy on markup as a latex document is, it's cross platform etc.",
            "So for those of you who are interested in the Matlab source tree, we actually have a template called Sphinx template that we.",
            "Wrote that has all.",
            "It basically creates a mock document that has all of these things to do documentation in them.",
            "How to make plots, how to use math text, and you know you're supposed to start with a template and then just use it for your own project.",
            "So that's a great tool for doing documentation.",
            "OK, so I told you I was going to talk about interactive use and so I'm going to.",
            "Focus on that now for the rest of my demo time.",
            "And how am I doing certain?",
            "Connect to work quickly.",
            "So can I prepare this little demo here called?",
            "Class starts Leon Glass was a professor at the center of Nonlinear Dynamics and McGill, and he was doing this experiment where he in the 60s when people were interested in iterative systems.",
            "Where he was.",
            "Taking a piece of blank paper, putting it in the Xerox machine, and copying a piece of blank paper took the output from the Xerox machine.",
            "Put it in the copier and copied it again so he was iteratively copying this blank piece of paper over and over again, and he noticed overtime that these some random dots started to form just dust and other things that would accumulate and grow, and he started studying the statistical distributions of these patterns, and that didn't go anywhere.",
            "But he went to give a talk, you know, in the old days, of course it was overheads, right?",
            "Slide transparencies and so he had a couple of transparencies and he set one down on the overhead projector.",
            "And you know he had these other transparencies and one was slightly on top of it but rotated with respect to it.",
            "And he notice that when the when there was a slight transformation that some interesting visual effects started to appear.",
            "So I've kind of simulated that.",
            "What happened in this experiment where it plugs into random dot pattern and as I move my mouse?",
            "I'm changing the scaling of.",
            "So I'm basically doing a matrix multiply operation on the random dot pattern, but I'm doing it with the scaling or contraction on the X or Y axis and a rotation.",
            "So I'm super imposing 2 random dot patterns and one of the things he observed is you can basically get all of the different flow fields that you see from 2D ordinary differential equations just by changing these scalings and rotations, 'cause it's basically a flow field, so this is just a little interactive application here.",
            "For doing these kinds of things and it's kind of fun to play with, so I've just found the.",
            "The mouse events here have this transformer class.",
            "Where I bind, you know I can connect to the button press event and I register some callbacks and it's sort of a standard event handling model.",
            "We have a lot of examples like that, but I'll show you basically the simplest how that would work.",
            "Part 123 so Canonical figure.",
            "I'm going to define a little function in my Python shell called on Press.",
            "And I Python is saved my history, so that's going to speed up speed me up a little bit.",
            "So whenever whenever the mouse is pressed I'm going to print the event, it tells me what axes the event occurred over.",
            "What's the X&Y and display coordinates and what's the X&Y in data coordinates?",
            "And I'm going to connect that event up to the motion notify event so it's called on press.",
            "It's probably not the best name, but basically when the figure detects motion.",
            "These events are going to fire off, so as you go over through here you get your ex and your Y coordinates and data.",
            "You get your X&Y coordinates and display space.",
            "So as I move out of the axes, I don't have a data coordinate system anymore, so I'm only you can see the pixel coordinates are still registering, but there's no data coordinates, so that's fairly easy to do.",
            "And now I'm just going to disconnect that event.",
            "What really is cool though is we're using Matplotlib's event handling mechanism, so we support 56 user interface toolkits.",
            "GTK, TK, FL, TK, TK, TK, WX, Python, cutie, cutie, four cocoa, Mac OSX, native rendering.",
            "So all of these different backends in Matlab support our event model, so they translate GUI events into our event framework so you can take these events, for example here.",
            "At this transformer class, at the very end I call a pyplot script here.",
            "But I can just take these two.",
            "I have another little piece of code here called CD talks.",
            "Examples.",
            "Um?",
            "Glass dots and I have this WX application that we've written.",
            "It's very simple WWX application.",
            "And it just makes some simple lines.",
            "And as you can see it's a WX app because we have these two different figures in a tabbed environment here.",
            "So that there's nothing about Pylab, pyplot in there, that's just a WX application.",
            "What I'm going to do is I'm just going to grab this little piece of code here this transformer bit.",
            "I'm going to go to my WX app.",
            "Template, which is the one I just ran for you.",
            "And I'm going to go to the part where plots that line comment that out.",
            "Import my transformer module that I was just showing you.",
            "Pasting this little snippet of code, it's called X one here, right?",
            "All needs assisted with axes instance and then does everything else itself.",
            "I'm gonna rerun this thing.",
            "And now I've just pasted in this little example and it's fully enabled with user events, button press events, mouse and you can take that same piece of code and plug it into a TK app or Cutie app so you know it gives people the ability to write, you know, kind of useful little widgets that don't depend on the underlying GUI toolkit.",
            "So we have some examples in here for lasso demos and.",
            "And none of the all of these use Matlab events, which mean they automatically run for you.",
            "Come across a variety of user interface toolkits, which is another problem.",
            "There's a proliferation of languages.",
            "There's a proliferation of packages.",
            "There's also a proliferation of user interface toolkits that people want to develop too, so just one more thing to worry about.",
            "So I'm going to just finish off here.",
            "You know Python is achieving pretty rapid."
        ],
        [
            "Adoption in some fairly high powered environment, so Googles application engine where people can write their own applications to the Google engine using Google Calendars, Google Mail, whatever is written in Python.",
            "So if you want to write Google Apps you have to write in Python go who is the inventor of Python is employed by Google.",
            "Alex Martelli, who's sort of the chief author of Python Books, is employed by Google.",
            "Gunner"
        ],
        [
            "Hubble Space Telescope uses Python in their image processing pipeline.",
            "This is some images that they've grabbed off and done.",
            "Some contour Maps in Matlab."
        ],
        [
            "And I'll just wrap up here the Phoenix project in Mars use as a what they call Matlab for space travel environment and they scrapped their own internal plotting library and started using Matplotlib.",
            "And they wrote me in October.",
            "4th, you know one of my lead developers says he's posted a bug and you know you haven't fixed it yet.",
            "Just wanted to let you know that the spacecraft is going to be arriving in Mars.",
            "In March and I was wondering if you could give us a time frame for when this bug will be resolved, so this is like the no pressure bug report basically, so I had kind of a couple of sleepless nights and then."
        ],
        [
            "When the actual event happened, all my kids and I we gathered in front of the television.",
            "We were hoping we weren't going to crash the Phoenix Lander.",
            "Couple of graphs and they showed one of 'em on CNN as most of it were high tech 3D rendering stuff that you know the simulations.",
            "But every once in awhile they would very briefly cut to a little Matlab screenshot and all my kids would cheer and everything.",
            "So it's an exciting moment."
        ],
        [
            "And that's that, concludes my talk.",
            "I hope we have a time for a question or two.",
            "I don't know how we're doing.",
            "So nicely with other women.",
            "So.",
            "To use Matlab from different languages.",
            "Yeah, that's harder because you would have to.",
            "You have to embed the Python interpreter in your language and you know.",
            "So you basically you have to bring in our entire stack.",
            "The way if you didn't want to do that, it would be fairly easy to sort of set up a web gateway.",
            "I mean you would lose all the interactivity stuff, but you could do have a server rendering architecture right, which is just outputting say PDFs or PNG's that would be fairly trivial to do, but then you lose all.",
            "There have been some proof of concept concept, Ajax web server stuff where people do that.",
            "People have tried to do it.",
            "I don't think it would be.",
            "Would be easy and you know most people who are in other languages like C++ give you pay a performance in for putting Python piece into it so.",
            "I don't know what language is it that you're thinking.",
            "Yeah, people have done it.",
            "You know, if you want to check with me, I can try to search through the archives, but.",
            "It seems like it's tough.",
            "Mention the proliferation of languages and infiltration of plotting software application toolkits and someone to come outside.",
            "I'm always really frustrated by this, 'cause I never know, Victoria Lee.",
            "That's right, there's a lot of possibilities across platforms as well.",
            "Cross versions.",
            "It's and I don't know what's the right thing to say.",
            "Is there any hope for some of these things?",
            "Standardizing on stuff?",
            "Or no, I don't think there's any hope.",
            "What we do though is we we we render to a C++ layer, so we try to avoid doing user interface native graphics calls.",
            "So we render everything to see buffer and then do pixel transfer so we don't have to worry too much about native WX versus GTK, you know.",
            "So what we try to do abstract as much away as possible.",
            "You know that's not ideal either.",
            "But yes, maintaining 5 user interface toolkits across three versions across 3 operating systems is as painful.",
            "So the relationship between I5 and math.",
            "Aside from the fact that it rejected me in birth, you mean, yeah?",
            "Matlab it when we when we do what we're doing, it's transparent, but we're actually running a threaded user interface application, right?",
            "So I'm running a TK or GTK app or WX app and GUI's are not friendly to shells because they take over the main loop.",
            "So what I Python does is it knows enough about Matplotlib to say oh, matplotlib in the hidden configuration file is saying he wants to be a GTK app, so I'm going to hijack the GTK main loop and do everything in a thread.",
            "An you know run the GTK thing in a separate thread and so there has to be a kind of an awareness between the shell and the graphing library.",
            "You know if it works well, you don't know that it's happening, but basically there's a lot of very gooey threading stuff going on under the hood, so that's the main piece.",
            "Completely independent, yes, except for the fact that they have a pylab mode which they are aware of us.",
            "Basically so that when they detect that people want to run in this mode, now there's been an awful lot of work in Ipython lately to embed Ipython in user interface shells.",
            "So if you want to write over within a talk earlier, people want that GUI.",
            "To me, the ideal ID is Emacs plus I Python, but people want that Boolean now I Python, which is a very rich shell, tab completion.",
            "Readline history can now be embedded in for maybe 3 user interface toolkits, so."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, thanks for coming and thanks especially to Soren, Mickey Owen Chang for inviting me here.",
                    "label": 0
                },
                {
                    "sent": "I have kind of a mixed background.",
                    "label": 0
                },
                {
                    "sent": "I actually did my PhD in neural coding.",
                    "label": 0
                },
                {
                    "sent": "I have since left the field of neurobiology.",
                    "label": 0
                },
                {
                    "sent": "I'm in the financial industry now and this is my first NIPS conference, so I find that there's a certain irony.",
                    "label": 0
                },
                {
                    "sent": "You know that I'm no longer in the field of neural systems that I'm actually attending this conference for the first time not to present in any of the work I did on neural coding, but some stuff that I did.",
                    "label": 0
                },
                {
                    "sent": "Writing a visualization tool for Python.",
                    "label": 1
                },
                {
                    "sent": "So I spend a lot of time with Python conferences and this is one of my first time to come to a more generic conference on open source software, so I'm going to try to be an advocate for Python.",
                    "label": 0
                },
                {
                    "sent": "I know there's a lot of tools that people are using here that are very powerful, and all of them have advantages, and I've tried many of them myself and eventually settled happily on Python, so you know if I can persuade any of the people in the room that this is a good mix of tools to use for scientific computing.",
                    "label": 0
                },
                {
                    "sent": "I'm going to try to do.",
                    "label": 0
                },
                {
                    "sent": "I need the microphone on?",
                    "label": 0
                },
                {
                    "sent": "Do I just clip it?",
                    "label": 0
                },
                {
                    "sent": "My curious.",
                    "label": 0
                },
                {
                    "sent": "Oh, I see.",
                    "label": 0
                },
                {
                    "sent": "So I want to start by talking a little bit about what made me become a Python programmer.",
                    "label": 0
                },
                {
                    "sent": "As you know, as a biologist by training and worked on computational biology problems for my PhD and have been along time Matlab user and when I graduated started my post Doc, I was working in epilepsy.",
                    "label": 0
                },
                {
                    "sent": "Each step in my career I'm getting a little bit closer and closer to the real world.",
                    "label": 0
                },
                {
                    "sent": "Before I leave my intro slide, though, I wanted to mention to the developer of MPD, right that I also have a program that designed my own logo.",
                    "label": 0
                },
                {
                    "sent": "And I did want to ask you, did your program design your logo or did mine?",
                    "label": 0
                },
                {
                    "sent": "But to the Lua and Torch developers, I probably have the most impoverished presentation today, using a poor man's PowerPoint, so I'm definitely motivated to go home and try to write my own Matplotlib presentation software, so that's going to be the next thing I'm working on.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So when I started my postdoc, I was working in epilepsy surgery and.",
                    "label": 0
                },
                {
                    "sent": "Basically, in epilepsy surgery you have patients with intractable, intractable epilepsy.",
                    "label": 0
                },
                {
                    "sent": "Have tried treatments of drugs that haven't been successful, and.",
                    "label": 0
                },
                {
                    "sent": "The goal is to try to find out where seizures are occurring and this is a picture of an application we used as part of the pre surgery work up where we in surgery exposed the cerebral cortex leg grids of electrodes over them.",
                    "label": 0
                },
                {
                    "sent": "So we record what the ECOG as opposed to e.g, which is a recording directly on the surface of the brain and then there.",
                    "label": 0
                },
                {
                    "sent": "Their school would be closed back up for two weeks of monitoring and we would try to determine where the seizures were occurring and this is a screenshot of a application that we used in the laboratory for it's a commercial application for doing seizure localization and as part of this epilepsy work up.",
                    "label": 0
                },
                {
                    "sent": "We weren't a very rich lab and it was a very expensive application.",
                    "label": 0
                },
                {
                    "sent": "It was about $50,000 per seat and it had a hardware dongle that you could use.",
                    "label": 0
                },
                {
                    "sent": "And so basically people would have to schedule time at the computer to write this applet to work on this application to do our analysis.",
                    "label": 0
                },
                {
                    "sent": "And you know that wasn't a very appealing prospect to me and even less appealing was we wanted to plug in some novel statistical algorithms to look for coherence between electrodes.",
                    "label": 0
                },
                {
                    "sent": "Wondering if that would give us some information about.",
                    "label": 0
                },
                {
                    "sent": "How phase in certain frequencies, which would lead lag relationships in seizure spreading?",
                    "label": 0
                },
                {
                    "sent": "And I imagine myself spending two years writing plugins for a piece of commercial software that if I left the lab went to work in a different lab, maybe left epilepsy and went to the financial industry.",
                    "label": 0
                },
                {
                    "sent": "Some kind of strange circumstance.",
                    "label": 0
                },
                {
                    "sent": "All that work would be lossed and sort of stuck in that proprietary application.",
                    "label": 0
                },
                {
                    "sent": "So I set out to rewrite this application in Matlab or at least the pieces that we needed.",
                    "label": 0
                },
                {
                    "sent": "And I was a huge MATLAB user and I did it.",
                    "label": 0
                },
                {
                    "sent": "I essentially wrote something equivalent to this with an EG viewer and some spectral power mappings and sort of a user interface application in Matlab.",
                    "label": 0
                },
                {
                    "sent": "That was working OK, but one of the things when you work in a hospital with patients who have, you know Eegs and Mris and all kinds of other metadata.",
                    "label": 0
                },
                {
                    "sent": "If you will, is it gets harder and harder to map the world into a array of floats, right?",
                    "label": 0
                },
                {
                    "sent": "So in Matlab, the world is kind of an array of floats and they have other data structures like cell arrays, which are little clunky to use.",
                    "label": 0
                },
                {
                    "sent": "But you know, the world is naturally mapped as an array of floats in the MATLAB view and the real world is much, much more complicated and so.",
                    "label": 0
                },
                {
                    "sent": "One of the bottlenecks for me in this application was.",
                    "label": 0
                },
                {
                    "sent": "Trying to manage complex data structures.",
                    "label": 0
                },
                {
                    "sent": "Basically the other bottleneck was we had our data distributed around the web.",
                    "label": 0
                },
                {
                    "sent": "We had my SQL databases, we had web forms that we were trying to fill out and trying to talk to all of those things via MATLAB was also difficult.",
                    "label": 0
                },
                {
                    "sent": "It's certainly doable.",
                    "label": 0
                },
                {
                    "sent": "Matlab has a Java machine built into it and you can do object oriented programming in Matlab, but it's difficult.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So at some point I put the whole thing on the scrap heap and started over in Python.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "Basically, there's been no turning back, you know at that point I sort of stopped programming Matlab and it become an ad and art and Python programmer.",
                    "label": 0
                },
                {
                    "sent": "And if you look at the previous application, there were sort of two pieces that we needed to be able to deal with.",
                    "label": 0
                },
                {
                    "sent": "Sort of the 3D spatial picture of where these electrodes on the brain and their physical relation and sort of the more the classical two DG picture.",
                    "label": 0
                },
                {
                    "sent": "So the first piece that I wrote in Python was using the visualization toolkit.",
                    "label": 0
                },
                {
                    "sent": "It's very powerful 3D library in Python to do 3 dimensional reconstructions from medical image data and.",
                    "label": 0
                },
                {
                    "sent": "Basically, did some algorithms to detect the bright spots in ciety.",
                    "label": 0
                },
                {
                    "sent": "The three things that show up are blood bones and bullets, so the electrodes are made out of metal and you can find them with an automated algorithm fairly easily.",
                    "label": 0
                },
                {
                    "sent": "So we got a pretty precise mapping of where these electrodes were in three dimensional space, and before this it was done with pictures where neurosurgeons were marking photos that were taken with a handheld camera in the LR to try to mark the location of these electrodes.",
                    "label": 0
                },
                {
                    "sent": "And you know, I think in brain surgery when you're trying to localize the seizure focus the three most important things.",
                    "label": 0
                },
                {
                    "sent": "Our location, location and location right?",
                    "label": 0
                },
                {
                    "sent": "So I think we had a small improvement here just by having an algorithm to detect where exactly in the brain are we measuring the select.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Recipe and then we went on to do.",
                    "label": 0
                },
                {
                    "sent": "Sort of, you know, fancy or color mappings of power Spectra across the brain during different States and seizure states how phase in different frequency bands is transmitted and this is a screenshot of a graphical user interface application written in GTK for doing these kind of spectral analysis of epilepsy and this is part of the neural neural imaging Suite in Python.",
                    "label": 0
                },
                {
                    "sent": "It's called in Ipy nipi.",
                    "label": 0
                },
                {
                    "sent": "So some components that I wrote.",
                    "label": 0
                },
                {
                    "sent": "Now ironically the 3D component was pretty easy.",
                    "label": 0
                },
                {
                    "sent": "There's a really powerful 3D library in C++ called VTK that does more or less everything you could need to do in 3D.",
                    "label": 0
                },
                {
                    "sent": "The situation for 2D graphics was different.",
                    "label": 0
                },
                {
                    "sent": "There were probably 30 or 42 D graphics libraries, all of which were good, all of which had features, none of which could do everything that I needed to do.",
                    "label": 0
                },
                {
                    "sent": "So you know, the situation was a little bit like it seems to be in machine learning.",
                    "label": 0
                },
                {
                    "sent": "Everybody who does machine learning has their own machine learning package.",
                    "label": 0
                },
                {
                    "sent": "Everybody who did plotting in Python had their own plotting package, so I figured I would join that.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Bob rolled up my sleeves and wrote my own plotting library, but I had some fairly specific requirements, and one of the most important requirements.",
                    "label": 0
                },
                {
                    "sent": "As I was writing a user interface application.",
                    "label": 0
                },
                {
                    "sent": "So I need something that can be embedded into a gooey and a lot of the tools.",
                    "label": 0
                },
                {
                    "sent": "For example the gnuplot.",
                    "label": 0
                },
                {
                    "sent": "I don't hesitate to say can't be, but I don't think they can be embedded into GUI's and a lot of the other plotting solutions had that limitation, so I need something that can be embedded into a GUI.",
                    "label": 0
                },
                {
                    "sent": "As well as you know, ideally you would like something that you can use interactively from the shell and savior figures and make publication quality plots so those are the kind of three things I was looking for.",
                    "label": 0
                },
                {
                    "sent": "User interface applications, good scripting, good interactive shell use in publication, publication quality, graphics.",
                    "label": 0
                },
                {
                    "sent": "Couldn't find anything that had all of those components, and that's basically when Matplotlib was born.",
                    "label": 0
                },
                {
                    "sent": "An interesting story at least.",
                    "label": 0
                },
                {
                    "sent": "Funny to me.",
                    "label": 0
                },
                {
                    "sent": "I'm Fernando Paris, who wrote I Python, which is a Python shell.",
                    "label": 0
                },
                {
                    "sent": "I'll be using a lot today.",
                    "label": 0
                },
                {
                    "sent": "Had a support for the new plot in there an I sent him a Patch which added some features to the I Python interface to gnuplot to make it look more like Matlab and she wrote me back and said, you know, I'm really busy.",
                    "label": 0
                },
                {
                    "sent": "Right now I'm not gonna be able to look at this for six months.",
                    "label": 0
                },
                {
                    "sent": "I can't deal with it.",
                    "label": 0
                },
                {
                    "sent": "I'm trying to finish my PhD.",
                    "label": 0
                },
                {
                    "sent": "So essentially Matplotlib was born as a Patch rejection to Python.",
                    "label": 0
                },
                {
                    "sent": "So this is a picture of the epilepsy viewing application that we wrote in Matplotlib showing you know the time series of the EG on this axis and a time dependent spectral histogram spectral density plot on this axis.",
                    "label": 0
                },
                {
                    "sent": "So as the seizures you start into a seizure activity you see these high frequency bands start to dominate and harmonics and then they become very regular in this region.",
                    "label": 0
                },
                {
                    "sent": "The seizure abruptly terminates.",
                    "label": 0
                },
                {
                    "sent": "So Matlab is a.",
                    "label": 0
                },
                {
                    "sent": "Class library that was designed to be embedded in a GTK in in a user interface application.",
                    "label": 0
                },
                {
                    "sent": "Initially with GTK.",
                    "label": 0
                },
                {
                    "sent": "Now as we support other.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Look, it's as well, but for the shell component we know we wanted to scripting in a shell component as well, and I was a heavy Matlab user so I decided to write a sort of an interface to the library.",
                    "label": 0
                },
                {
                    "sent": "So basically a procedural interface that will stateful in the way that Matlab is stateful.",
                    "label": 0
                },
                {
                    "sent": "When you say subplot, you graph into that subplot.",
                    "label": 0
                },
                {
                    "sent": "And essentially, you know there's some magic going on under the hood that's managing the state of your process.",
                    "label": 0
                },
                {
                    "sent": "And so Matlab worked for me as as an environment and I just decided to emulate Matlab for the procedural inner interface, so we didn't set out to be a Matlab clone and we don't really strive to be a Matlab clone, but essentially at the coarsest layer we provide a lot of the Matlab functionality.",
                    "label": 0
                },
                {
                    "sent": "As you drill deeper and deeper, we depart further and further and we try to do things in a pythonic way, as opposed to a MATLAB way.",
                    "label": 0
                },
                {
                    "sent": "Most of our users appreciate that because people who use Matlab.",
                    "label": 0
                },
                {
                    "sent": "I mean so people use Python, use it because they like the language they like it's features they like object oriented programming and they don't find the Matlab language terribly rich.",
                    "label": 0
                },
                {
                    "sent": "But you can see if you're coming from Matlab.",
                    "label": 0
                },
                {
                    "sent": "There's a fairly close correspondence that you know you can learn one or the other fairly quickly, and we produce fairly similar outputs.",
                    "label": 0
                },
                {
                    "sent": "So Edward Tufty, who's a vision has worked on the visual display of quantitative information.",
                    "label": 0
                },
                {
                    "sent": "Has this phrase copy the great architectures and the other phrase?",
                    "label": 1
                },
                {
                    "sent": "He said, that I like a lot, which is intelligence imitates, but genius steals.",
                    "label": 0
                },
                {
                    "sent": "So in a sense, we, I think this has been one of the biggest benefits of Matplotlib, is that from the start we had an interface that was fixed.",
                    "label": 0
                },
                {
                    "sent": "We didn't try to create a new interface.",
                    "label": 0
                },
                {
                    "sent": "We took an interface that worked.",
                    "label": 0
                },
                {
                    "sent": "We implemented it, and we've refactored the back end code.",
                    "label": 0
                },
                {
                    "sent": "You know, the guts of it numerous times while presenting a pretty stable user interface.",
                    "label": 0
                },
                {
                    "sent": "So that's you know.",
                    "label": 0
                },
                {
                    "sent": "That's made our users happy.",
                    "label": 0
                },
                {
                    "sent": "The code rarely breaks at the user.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Level.",
                    "label": 0
                },
                {
                    "sent": "So I would say you know most people who are working with this graphics library working on what we call the pylab interface, and that's basically an environment that's designed to look and feel like Matlab to have the ease of use of.",
                    "label": 0
                },
                {
                    "sent": "Of interactive graphics, so we have this mode sitting in Ipython.",
                    "label": 0
                },
                {
                    "sent": "Ipython is an interactive Python shell that I'll be using a lot today.",
                    "label": 0
                },
                {
                    "sent": "In the demo phase and when you import when you start this thing in I Python, it basically does all the imports that imports your array libraries from Numpy.",
                    "label": 0
                },
                {
                    "sent": "It imports everything it needs for Matplotlib, invoke import safety and it starts you off in a scripting environment where you don't have to think too much.",
                    "label": 0
                },
                {
                    "sent": "Where am I going to get these symbols from?",
                    "label": 0
                },
                {
                    "sent": "So you know, in that kind of environment, I think that the procedural interface is very nice because you don't have to think I have to instantiate an object and then call methods on the object.",
                    "label": 0
                },
                {
                    "sent": "It's very good when you want to do something very quickly, but that kind of environment doesn't scale well to a large scale application like a user interface application.",
                    "label": 0
                },
                {
                    "sent": "And when you're doing that, you don't want anyone managing state for you.",
                    "label": 0
                },
                {
                    "sent": "You don't want anyone automatically importing things from libraries, so you know we support both modes, and I'm going to start off showing you the interactive shell mode, and then as we move forward, I'm going to show you some more of these sort of embedding.",
                    "label": 1
                },
                {
                    "sent": "In application tricks that we can use and I want to emphasize in the talk today, things that are probably, you know, you can make nice plots from are.",
                    "label": 0
                },
                {
                    "sent": "You can make nice plots from Octave, but both of those use, I believe, a good gnuplot rendering engine and one of the things you lose when you're using a new plot is the real interactivity with your figures.",
                    "label": 0
                },
                {
                    "sent": "In terms of you know, mouse clicking, selecting regions with lassos.",
                    "label": 0
                },
                {
                    "sent": "So I want to at least to differentiate our graphics from those environments, illustrate some of those features at the end.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "A couple more words on what I think is good about Python And then I'm going to go into the demo mode when you work in a laboratory environment.",
                    "label": 0
                },
                {
                    "sent": "I assume many of you here are probably very good programmers.",
                    "label": 0
                },
                {
                    "sent": "Very good data analysis and you probably work with people in your lab who come to you because you're the expert and I think where Python is really good language.",
                    "label": 0
                },
                {
                    "sent": "Is it's very easy for novice programmers to learn.",
                    "label": 0
                },
                {
                    "sent": "People have never programmed before.",
                    "label": 0
                },
                {
                    "sent": "People who are beginners, probably.",
                    "label": 0
                },
                {
                    "sent": "Most of the people in this room could be competency plus plus programmers or any other sort of high level powerful language, whereas a lot of students, particularly those who are new to the task of programming when you get to something like Java or C++, or to do the simplest things, require pretty complex programs.",
                    "label": 0
                },
                {
                    "sent": "You lose about 75% of your potential contributors and programmers, because this just doesn't fit the mental model.",
                    "label": 0
                },
                {
                    "sent": "Of most people, so I think that Python is sort of the distilled essence of simplicity in.",
                    "label": 0
                },
                {
                    "sent": "In the Hello world example, and I'm a little bit disappointed that this is slated for destruction in Python 3.0 because.",
                    "label": 0
                },
                {
                    "sent": "Go has always considered this award, so Python is going to look a little bit more than this print is going to become a function call, and I'm going to have to throw this this slide away.",
                    "label": 0
                },
                {
                    "sent": "But Python, you know, people say it fits your brain because it's fairly expressive.",
                    "label": 1
                },
                {
                    "sent": "It looks like pseudocode in the way that Lua looked like pseudocode this more.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "I'm.",
                    "label": 0
                },
                {
                    "sent": "We've I've mentioned that it scales from, you know, scripts to applications.",
                    "label": 1
                },
                {
                    "sent": "It supports object oriented programming, but you don't have to do object oriented programming supports functional programming not as well as a pure functional programming language, but it allows you to use a functional language.",
                    "label": 0
                },
                {
                    "sent": "It allows you to program procedurally.",
                    "label": 0
                },
                {
                    "sent": "It allows you to program with generators and generators so it sort of supports all of these modes and probably every language you could find a distilled purified version of a functional programming language that's better than Python, but Python lets you choose between them.",
                    "label": 0
                },
                {
                    "sent": "So it's versatile in that way for scientific computing perspective, I think the number one selling point for Python is that I think it interoperates with other languages better than any other language on the planet.",
                    "label": 0
                },
                {
                    "sent": "I think there's no other language that can talk as easily to as many other languages, so part of Scipy is a program called F2.",
                    "label": 0
                },
                {
                    "sent": "PY you feed into Fortran header.",
                    "label": 0
                },
                {
                    "sent": "It feeds you a Python wrapper, swig you feed it to, see header, it feeds you a Python wrapper, boost Python, you feed it to C++, enter it, feeds you a Python wrapper.",
                    "label": 0
                },
                {
                    "sent": "There's an octave bridge, there's an R bridge.",
                    "label": 0
                },
                {
                    "sent": "There's a Matlab bridge, and that's why Sage chose Python.",
                    "label": 0
                },
                {
                    "sent": "When they were riding their all encompassing, you know wrapper of many languages because Python really talks well to all languages.",
                    "label": 1
                },
                {
                    "sent": "I know most languages can talk to other languages.",
                    "label": 0
                },
                {
                    "sent": "I think Python does it very easily.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "The other thing that's that makes Python compelling is that the third party library support, particularly for scientific computing, is very strong.",
                    "label": 1
                },
                {
                    "sent": "Numpy is a first class in Dimensional Array library.",
                    "label": 0
                },
                {
                    "sent": "Scipy essentially provides wrappers to all the FORTRAN libraries.",
                    "label": 0
                },
                {
                    "sent": "Lapack Atlas blasts Linpack, ody pack, so all those Fortran libraries that have been drug tested in our around and essentially that formed the core of Matlab.",
                    "label": 0
                },
                {
                    "sent": "Form the core Scipy and Scipy just wraps the FORTRAN provides a Python interface to them.",
                    "label": 0
                },
                {
                    "sent": "Matplotlib provides the Matlab like graphical interface toolkit.",
                    "label": 0
                },
                {
                    "sent": "I talked a little bit about VTK, the 3D libraries from Kitware in thought as a company in Texas that builds frameworks for scientific computing applications that are very powerful.",
                    "label": 0
                },
                {
                    "sent": "Network X is a graph library coming out of Los Alamos.",
                    "label": 0
                },
                {
                    "sent": "Twisted is a asynchronous web application Server framework which can underlie distributed computing efforts.",
                    "label": 0
                },
                {
                    "sent": "And Sphinx is a documentation generator which I'll show a little bit of later on today, so the choice of 3rd party libraries is a very important one and I think Python.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Excels there as well, so you know this cartoon really made the rounds on all the Python lists after the ex KCD creator wrote it and sort of describes the experience of a person in the first night they learned to program Python And it's so simple I just print Hello World and he starts to fly and he's like how come you're flying and as you just typed important anti gravity and I also drank everything in the medicine cabinet but I think it's the Python.",
                    "label": 0
                },
                {
                    "sent": "So this was such a popular little cartoon.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, I'm going to jump into the interactive interlude now here that in Python 3, which is the long awaited third generation of Python.",
                    "label": 1
                },
                {
                    "sent": "They've added the anti grad gravity module to the core language.",
                    "label": 0
                },
                {
                    "sent": "So I'm not running Python 3 because all these third party libraries don't run on Python 3 yet, but I've installed this sort of in a testbed here, so Python has a long history of, for example, this module is kind of fun that Tim Peters wrote.",
                    "label": 0
                },
                {
                    "sent": "So it's basically a little.",
                    "label": 0
                },
                {
                    "sent": "Point is called as in of Python.",
                    "label": 0
                },
                {
                    "sent": "Beautiful is better than ugly.",
                    "label": 0
                },
                {
                    "sent": "Explicit is better than implicit.",
                    "label": 0
                },
                {
                    "sent": "Simple is better than complex and it sort of gives you the Zen of how you should be programming Python.",
                    "label": 0
                },
                {
                    "sent": "So in that vein they also wrote the anti gravity module so everyone hold onto your seats here.",
                    "label": 0
                },
                {
                    "sent": "OK, so I'm going to go into the.",
                    "label": 0
                },
                {
                    "sent": "Whoever is keeping time, will you flash me every once in awhile so I know, kind of where I am.",
                    "label": 0
                },
                {
                    "sent": "I'm going to start off briefly and just show you some of the features of Python that I think are really neat.",
                    "label": 0
                },
                {
                    "sent": "I'm going to focus in on the map that live in Pylab features hopefully show you some things you you haven't seen.",
                    "label": 0
                },
                {
                    "sent": "If you're an avid Python programmer, so this is the Ipython shell.",
                    "label": 0
                },
                {
                    "sent": "It's just an enhanced Python shell, and I started with this pylab mode here, which basically says import matplotlib important empty, and give me a Matlab like environment so straight out of the gates you can start doing things.",
                    "label": 0
                },
                {
                    "sent": "Make a histogram of 1000 random numbers normally distributed with 100 bins.",
                    "label": 0
                },
                {
                    "sent": "You should get a graph.",
                    "label": 0
                },
                {
                    "sent": "That looks like a normal distribution.",
                    "label": 0
                },
                {
                    "sent": "So like MATLAB, you can fairly easily do easy things.",
                    "label": 0
                },
                {
                    "sent": "But we're not here really to emulate Mat lab, so I want to show you some of the interesting things that Python can do beyond those capabilities to start out with.",
                    "label": 0
                },
                {
                    "sent": "So people talk about Python is being battery batteries included, so I'm going to put the URL URL Lib module.",
                    "label": 0
                },
                {
                    "sent": "This is a module for fetching data off of websites and.",
                    "label": 0
                },
                {
                    "sent": "Again, this is something you can do in Matlab, but a little bit harder, so since I'm in the financial services industry now, do a little financial example from Yahoo Finance.",
                    "label": 0
                },
                {
                    "sent": "Does anybody have a favorite stock that is lossed them a lot of money in the last year?",
                    "label": 0
                },
                {
                    "sent": "Are y'all academics?",
                    "label": 0
                },
                {
                    "sent": "No.",
                    "label": 0
                },
                {
                    "sent": "No tickers, no favorite stocks to to analyze.",
                    "label": 0
                },
                {
                    "sent": "Alright, this one has lost me a lot of money.",
                    "label": 0
                },
                {
                    "sent": "My daughters love these croxon.",
                    "label": 0
                },
                {
                    "sent": "That's not been good for My Portfolio, so we can go to Yahoo finance historical prices.",
                    "label": 0
                },
                {
                    "sent": "You can download a CSV file to a spreadsheet, so I'm going to just right click and copy the link location.",
                    "label": 0
                },
                {
                    "sent": "So this is a link to grab a CSV file from Yahoo Finance and I'm going to save that link here in the shell.",
                    "label": 0
                },
                {
                    "sent": "Just paste it in.",
                    "label": 0
                },
                {
                    "sent": "So I've got this variable URL and I'm going to grab that off the web using the URL library.",
                    "label": 0
                },
                {
                    "sent": "The URL level.",
                    "label": 0
                },
                {
                    "sent": "Search it in stored in the trimmer and a temporary file for us.",
                    "label": 0
                },
                {
                    "sent": "And so I pass the URL.",
                    "label": 0
                },
                {
                    "sent": "And it saved it in this temporary file called there something something the CSV file.",
                    "label": 0
                },
                {
                    "sent": "So I'm going to import the CSV file.",
                    "label": 0
                },
                {
                    "sent": "We have this this nice CSV importer which is really.",
                    "label": 0
                },
                {
                    "sent": "We work with CSV files a lot in the financial industry so this is made my life.",
                    "label": 0
                },
                {
                    "sent": "Great.",
                    "label": 0
                },
                {
                    "sent": "So let's just see what that file looks like real quick so it looks like a standard CSV file, the Ipython shell.",
                    "label": 0
                },
                {
                    "sent": "It's nice, it lets you type Unix commands or arbitrary shell commands, so you can kind of just.",
                    "label": 0
                },
                {
                    "sent": "I just typed a less, so you basically have these headers and these different types.",
                    "label": 0
                },
                {
                    "sent": "Now this is a date string, there's some price data in some volume data, which is an integer, so already we're not a whole world of floats, is that left or in?",
                    "label": 0
                },
                {
                    "sent": "So what I've done with this R. This honor is a record array.",
                    "label": 0
                },
                {
                    "sent": "Which is a very nice data structure from Numpy.",
                    "label": 0
                },
                {
                    "sent": "It's got 717 rows in it and I'll print the first one.",
                    "label": 0
                },
                {
                    "sent": "It has a datetime object is the first row.",
                    "label": 0
                },
                {
                    "sent": "It's a 1112.",
                    "label": 0
                },
                {
                    "sent": "That's yesterday, some price data and some integer data.",
                    "label": 0
                },
                {
                    "sent": "So essentially what we've done here is created an array of cease trucks, so we have different types.",
                    "label": 0
                },
                {
                    "sent": "Here we have a Python object types.",
                    "label": 0
                },
                {
                    "sent": "We have floating point types and we have integer types, and that's that.",
                    "label": 0
                },
                {
                    "sent": "Type information is stored in this D type attribute of Numpy arrays, so you can see that date Maps to a four by Python object.",
                    "label": 0
                },
                {
                    "sent": "The opening price is an 8 byte floating point number.",
                    "label": 0
                },
                {
                    "sent": "This is the endianness of it, and the volume is a four byte integer, and all of this is being stored in a C structure, so we're going to see like speeds whenever we work with these things.",
                    "label": 0
                },
                {
                    "sent": "When we when we operate on then we don't have to ever go up to the Python layer.",
                    "label": 0
                },
                {
                    "sent": "Everything will stay in the sea layer.",
                    "label": 0
                },
                {
                    "sent": "So if we want to look at how much dollar volume traded in except in Crocs, we can say R dot close.",
                    "label": 0
                },
                {
                    "sent": "Closing price times are dot volume.",
                    "label": 0
                },
                {
                    "sent": "That's how many shares traded times how many times the price and so dollar volume is this array of dollars traded and we can do statistics on it like we can ask what is the mean.",
                    "label": 0
                },
                {
                    "sent": "What is the standard deviation and again never having to pass data back and forth from the Python to see later we're staying in the ceiling or the whole time.",
                    "label": 0
                },
                {
                    "sent": "Or we can do a histogram.",
                    "label": 0
                },
                {
                    "sent": "Histogram of the log of the dollar volume.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 1
                },
                {
                    "sent": "The other thing that's really nice about these Numpy arrays is you can do logical masking.",
                    "label": 0
                },
                {
                    "sent": "So for example, I can import the datetime module and I can say the logical mask of when our date is greater than or equal to datetime date 2008 one one.",
                    "label": 0
                },
                {
                    "sent": "So just select out this year.",
                    "label": 0
                },
                {
                    "sent": "Then I can slice my record my array with that mask.",
                    "label": 0
                },
                {
                    "sent": "Now I've got a smaller.",
                    "label": 0
                },
                {
                    "sent": "It's a zero copy operation, it's just a view.",
                    "label": 0
                },
                {
                    "sent": "I've got a smaller little slice and I can clear my figure.",
                    "label": 0
                },
                {
                    "sent": "Pollard update versus R Dot adjusted close.",
                    "label": 0
                },
                {
                    "sent": "Now you can see how well my daughters love for Crocs shoes.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Done for me this year.",
                    "label": 0
                },
                {
                    "sent": "Not so well.",
                    "label": 0
                },
                {
                    "sent": "Something just about Matplotlib.",
                    "label": 0
                },
                {
                    "sent": "We actually don't try to be very smart.",
                    "label": 0
                },
                {
                    "sent": "We don't try to make the layout work for you.",
                    "label": 0
                },
                {
                    "sent": "One thing I really don't like about computers is that they try to help me too much.",
                    "label": 0
                },
                {
                    "sent": "I kind of want them to do what I tell them to do and to make it easy for them.",
                    "label": 0
                },
                {
                    "sent": "So for example, these date tickers overlap, so instead I'm just going to grab my figure handle and call this method autoformat ex date, which basically says these are date labels.",
                    "label": 0
                },
                {
                    "sent": "They're probably big, reformat them in a way that sort of they're not overlapping so much so.",
                    "label": 0
                },
                {
                    "sent": "You know these could we basically provide tools to make it easy for you to manipulate things, but we're not going to do it for you.",
                    "label": 0
                },
                {
                    "sent": "You know there's pros and cons of both approaches, and we have little GUI tool here.",
                    "label": 0
                },
                {
                    "sent": "If you don't like the way that the subplot is quite quite laid out where you can sort of tweak things yourself a little bit.",
                    "label": 0
                },
                {
                    "sent": "So let's throw real quick title on here.",
                    "label": 0
                },
                {
                    "sent": "I'm going to roll string and I'm going to say mean let's say no, this is.",
                    "label": 0
                },
                {
                    "sent": "The mean is.",
                    "label": 0
                },
                {
                    "sent": "1.1 F percent this is a string and the standard deviation.",
                    "label": 0
                },
                {
                    "sent": "Sigma, some using a text string here.",
                    "label": 0
                },
                {
                    "sent": "I'm going to pass in.",
                    "label": 0
                },
                {
                    "sent": "I'm going to interpolate into this string DV dot mean and DOT standard deviation.",
                    "label": 0
                },
                {
                    "sent": "Because it's a texturing, I have to close, it has to be balanced with dollar signs.",
                    "label": 0
                },
                {
                    "sent": "So look like a tech everybody.",
                    "label": 0
                },
                {
                    "sent": "I have to close this one more time maybe.",
                    "label": 0
                },
                {
                    "sent": "So not very pretty, but we you know we basically you can write latex expressions and one thing that's really nice here is we have our own latech parsing engine.",
                    "label": 0
                },
                {
                    "sent": "So we we ship a parser.",
                    "label": 0
                },
                {
                    "sent": "We parse latech.",
                    "label": 0
                },
                {
                    "sent": "One of our developers actually implemented the new algorithms so.",
                    "label": 0
                },
                {
                    "sent": "The box is the glue, it's all implemented.",
                    "label": 0
                },
                {
                    "sent": "And so we can.",
                    "label": 0
                },
                {
                    "sent": "We can basically parse latex math expressions, but for the real purist and we also ship ship the computer modern fonts in our distribution, so you don't have to manage your fonts and we take the fonts that we build and we embed them in your output.",
                    "label": 0
                },
                {
                    "sent": "So we have our own PS writer, own PDF writer, own SVG writer.",
                    "label": 0
                },
                {
                    "sent": "We don't use any third party tools for that.",
                    "label": 0
                },
                {
                    "sent": "And so if I say save test DPS.",
                    "label": 0
                },
                {
                    "sent": "Say fig.",
                    "label": 0
                },
                {
                    "sent": "Can test out PDF.",
                    "label": 0
                },
                {
                    "sent": "Test dot PNG.",
                    "label": 0
                },
                {
                    "sent": "Contest dot SVG.",
                    "label": 0
                },
                {
                    "sent": "Where am I?",
                    "label": 0
                },
                {
                    "sent": "Something in my home directory.",
                    "label": 0
                },
                {
                    "sent": "So if those of you have tried to get your latech integrated with other kinds of output formats, know that you usually don't get what what you see on the screen is not what you get in your output formats.",
                    "label": 0
                },
                {
                    "sent": "But here it is because we actually are embedding exactly the same fonts in the documents.",
                    "label": 0
                },
                {
                    "sent": "It makes the files a little bit larger in SVG over here.",
                    "label": 0
                },
                {
                    "sent": "So what you see on the screen is what you get.",
                    "label": 0
                },
                {
                    "sent": "You don't need a latex install and you can do fairly sophisticated mathematical expressions.",
                    "label": 0
                },
                {
                    "sent": "Examples.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So you can even write nested under over recursive frac.",
                    "label": 0
                },
                {
                    "sent": "The whole kind of thing that you do but.",
                    "label": 0
                },
                {
                    "sent": "That's not good enough for most mathematicians, right?",
                    "label": 0
                },
                {
                    "sent": "They want latech, so we actually do have a mode where you can say I want latech will send all your text to latech, it'll render it will bring it in and put it directly into your PS or PNG file, so you can actually use configure tech documents will look your figures will look exactly the same as your as the rest of your document so.",
                    "label": 0
                },
                {
                    "sent": "That's really one of the killer features that we have.",
                    "label": 0
                },
                {
                    "sent": "Is this really rich support for text?",
                    "label": 0
                },
                {
                    "sent": "Time, am I doing?",
                    "label": 0
                },
                {
                    "sent": "12 and then your friend, are you affecting the actual image?",
                    "label": 0
                },
                {
                    "sent": "Yes, printed it, that all got saved, yes.",
                    "label": 0
                },
                {
                    "sent": "Um?",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "I'm not going to spend a lot of time because I'm low on time.",
                    "label": 0
                },
                {
                    "sent": "I'm going to skip a little bit here, but let me take you to.",
                    "label": 0
                },
                {
                    "sent": "You can do what I would have done.",
                    "label": 0
                },
                {
                    "sent": "We've put a lot of work into our website lately, so I just want to show you some nice.",
                    "label": 0
                },
                {
                    "sent": "Nice things there that are particularly useful.",
                    "label": 0
                },
                {
                    "sent": "I think the sort of the killer feature on the web page is this Gallery and basically run this in a Cron job at night from subversion and it runs every example in our examples directory.",
                    "label": 0
                },
                {
                    "sent": "We probably have 200 examples of working code, so every figure that's on this page is guaranteed to be working code.",
                    "label": 0
                },
                {
                    "sent": "That at least runs from subversion because that's how they were generated.",
                    "label": 0
                },
                {
                    "sent": "So if you see a figure that you want to make, like this annotation here, for example, if you click on it, it takes you to a higher resolution image of it.",
                    "label": 0
                },
                {
                    "sent": "And syntax highlighted source code that you can then just download and run, so that's great.",
                    "label": 0
                },
                {
                    "sent": "That's really a great way when you're trying to learn.",
                    "label": 0
                },
                {
                    "sent": "It's a great resource.",
                    "label": 0
                },
                {
                    "sent": "The documentation is.",
                    "label": 0
                },
                {
                    "sent": "You know, I think our PDF at this point is 700 pages and I don't know.",
                    "label": 0
                },
                {
                    "sent": "Maybe half of it is documented or something.",
                    "label": 0
                },
                {
                    "sent": "There's still a lot of work left to be done, but we're using this tool called Sphinx which is a Python documentation generating tool and you basically write restructuredtext.",
                    "label": 0
                },
                {
                    "sent": "And it will either generate output in HTML or in PDF using latech.",
                    "label": 0
                },
                {
                    "sent": "So I'm just going to click on part of our users guide working with text.",
                    "label": 0
                },
                {
                    "sent": "Since we were just looking at mathematical expressions, we can look at the chapter in writing mathematical expressions.",
                    "label": 0
                },
                {
                    "sent": "So this is kind of our guide to writing mathematical expressions, and we actually use our own math rendering engine and creating our users guide to generate the output.",
                    "label": 0
                },
                {
                    "sent": "So again, here's what you see is what you get.",
                    "label": 1
                },
                {
                    "sent": "And basically all the different kinds of math expressions, different fonts that you can choose.",
                    "label": 0
                },
                {
                    "sent": "The symbol tables.",
                    "label": 0
                },
                {
                    "sent": "Are here there's also another neat little thing in this.",
                    "label": 0
                },
                {
                    "sent": "Rest one of our developers wrote this mode called Plot and you can just say in your rest document your restructured text document.",
                    "label": 0
                },
                {
                    "sent": "You just say plot this file.",
                    "label": 0
                },
                {
                    "sent": "So for example, that the code that generated what we're looking at here MPL examples.",
                    "label": 0
                },
                {
                    "sent": "Dark.",
                    "label": 0
                },
                {
                    "sent": "Users guide math text.",
                    "label": 0
                },
                {
                    "sent": "At the bottom there's just these two lines of code here, let's say.",
                    "label": 0
                },
                {
                    "sent": "This isn't a docstring plot this file, so it points to an external file, calls Matlab on it, brings the file into your documentation, so it's kind of a regression test that you know your code examples that are generating your figures run because they run documentation, build time, and we do the same thing in our API documents.",
                    "label": 0
                },
                {
                    "sent": "So for example, if you go to Pyplot, which is sort of the module we've been looking at.",
                    "label": 0
                },
                {
                    "sent": "The auto correlation function.",
                    "label": 0
                },
                {
                    "sent": "The docstrings are in here and we have these sort of snippets which show you graphs, and so it's a really nice.",
                    "label": 0
                },
                {
                    "sent": "I think it's a really nice.",
                    "label": 0
                },
                {
                    "sent": "Rest is a very nice tool for making these kinds of these documents, because you can incorporate math and figures in the syntax is fairly simple, it's plain text.",
                    "label": 0
                },
                {
                    "sent": "It's not as heavy on markup as a latex document is, it's cross platform etc.",
                    "label": 0
                },
                {
                    "sent": "So for those of you who are interested in the Matlab source tree, we actually have a template called Sphinx template that we.",
                    "label": 0
                },
                {
                    "sent": "Wrote that has all.",
                    "label": 0
                },
                {
                    "sent": "It basically creates a mock document that has all of these things to do documentation in them.",
                    "label": 0
                },
                {
                    "sent": "How to make plots, how to use math text, and you know you're supposed to start with a template and then just use it for your own project.",
                    "label": 0
                },
                {
                    "sent": "So that's a great tool for doing documentation.",
                    "label": 0
                },
                {
                    "sent": "OK, so I told you I was going to talk about interactive use and so I'm going to.",
                    "label": 0
                },
                {
                    "sent": "Focus on that now for the rest of my demo time.",
                    "label": 0
                },
                {
                    "sent": "And how am I doing certain?",
                    "label": 0
                },
                {
                    "sent": "Connect to work quickly.",
                    "label": 0
                },
                {
                    "sent": "So can I prepare this little demo here called?",
                    "label": 0
                },
                {
                    "sent": "Class starts Leon Glass was a professor at the center of Nonlinear Dynamics and McGill, and he was doing this experiment where he in the 60s when people were interested in iterative systems.",
                    "label": 0
                },
                {
                    "sent": "Where he was.",
                    "label": 0
                },
                {
                    "sent": "Taking a piece of blank paper, putting it in the Xerox machine, and copying a piece of blank paper took the output from the Xerox machine.",
                    "label": 0
                },
                {
                    "sent": "Put it in the copier and copied it again so he was iteratively copying this blank piece of paper over and over again, and he noticed overtime that these some random dots started to form just dust and other things that would accumulate and grow, and he started studying the statistical distributions of these patterns, and that didn't go anywhere.",
                    "label": 0
                },
                {
                    "sent": "But he went to give a talk, you know, in the old days, of course it was overheads, right?",
                    "label": 0
                },
                {
                    "sent": "Slide transparencies and so he had a couple of transparencies and he set one down on the overhead projector.",
                    "label": 0
                },
                {
                    "sent": "And you know he had these other transparencies and one was slightly on top of it but rotated with respect to it.",
                    "label": 0
                },
                {
                    "sent": "And he notice that when the when there was a slight transformation that some interesting visual effects started to appear.",
                    "label": 0
                },
                {
                    "sent": "So I've kind of simulated that.",
                    "label": 0
                },
                {
                    "sent": "What happened in this experiment where it plugs into random dot pattern and as I move my mouse?",
                    "label": 0
                },
                {
                    "sent": "I'm changing the scaling of.",
                    "label": 0
                },
                {
                    "sent": "So I'm basically doing a matrix multiply operation on the random dot pattern, but I'm doing it with the scaling or contraction on the X or Y axis and a rotation.",
                    "label": 0
                },
                {
                    "sent": "So I'm super imposing 2 random dot patterns and one of the things he observed is you can basically get all of the different flow fields that you see from 2D ordinary differential equations just by changing these scalings and rotations, 'cause it's basically a flow field, so this is just a little interactive application here.",
                    "label": 0
                },
                {
                    "sent": "For doing these kinds of things and it's kind of fun to play with, so I've just found the.",
                    "label": 0
                },
                {
                    "sent": "The mouse events here have this transformer class.",
                    "label": 0
                },
                {
                    "sent": "Where I bind, you know I can connect to the button press event and I register some callbacks and it's sort of a standard event handling model.",
                    "label": 0
                },
                {
                    "sent": "We have a lot of examples like that, but I'll show you basically the simplest how that would work.",
                    "label": 0
                },
                {
                    "sent": "Part 123 so Canonical figure.",
                    "label": 0
                },
                {
                    "sent": "I'm going to define a little function in my Python shell called on Press.",
                    "label": 0
                },
                {
                    "sent": "And I Python is saved my history, so that's going to speed up speed me up a little bit.",
                    "label": 0
                },
                {
                    "sent": "So whenever whenever the mouse is pressed I'm going to print the event, it tells me what axes the event occurred over.",
                    "label": 0
                },
                {
                    "sent": "What's the X&Y and display coordinates and what's the X&Y in data coordinates?",
                    "label": 0
                },
                {
                    "sent": "And I'm going to connect that event up to the motion notify event so it's called on press.",
                    "label": 0
                },
                {
                    "sent": "It's probably not the best name, but basically when the figure detects motion.",
                    "label": 0
                },
                {
                    "sent": "These events are going to fire off, so as you go over through here you get your ex and your Y coordinates and data.",
                    "label": 0
                },
                {
                    "sent": "You get your X&Y coordinates and display space.",
                    "label": 0
                },
                {
                    "sent": "So as I move out of the axes, I don't have a data coordinate system anymore, so I'm only you can see the pixel coordinates are still registering, but there's no data coordinates, so that's fairly easy to do.",
                    "label": 0
                },
                {
                    "sent": "And now I'm just going to disconnect that event.",
                    "label": 0
                },
                {
                    "sent": "What really is cool though is we're using Matplotlib's event handling mechanism, so we support 56 user interface toolkits.",
                    "label": 0
                },
                {
                    "sent": "GTK, TK, FL, TK, TK, TK, WX, Python, cutie, cutie, four cocoa, Mac OSX, native rendering.",
                    "label": 0
                },
                {
                    "sent": "So all of these different backends in Matlab support our event model, so they translate GUI events into our event framework so you can take these events, for example here.",
                    "label": 0
                },
                {
                    "sent": "At this transformer class, at the very end I call a pyplot script here.",
                    "label": 0
                },
                {
                    "sent": "But I can just take these two.",
                    "label": 0
                },
                {
                    "sent": "I have another little piece of code here called CD talks.",
                    "label": 0
                },
                {
                    "sent": "Examples.",
                    "label": 0
                },
                {
                    "sent": "Um?",
                    "label": 0
                },
                {
                    "sent": "Glass dots and I have this WX application that we've written.",
                    "label": 0
                },
                {
                    "sent": "It's very simple WWX application.",
                    "label": 0
                },
                {
                    "sent": "And it just makes some simple lines.",
                    "label": 0
                },
                {
                    "sent": "And as you can see it's a WX app because we have these two different figures in a tabbed environment here.",
                    "label": 0
                },
                {
                    "sent": "So that there's nothing about Pylab, pyplot in there, that's just a WX application.",
                    "label": 0
                },
                {
                    "sent": "What I'm going to do is I'm just going to grab this little piece of code here this transformer bit.",
                    "label": 0
                },
                {
                    "sent": "I'm going to go to my WX app.",
                    "label": 0
                },
                {
                    "sent": "Template, which is the one I just ran for you.",
                    "label": 0
                },
                {
                    "sent": "And I'm going to go to the part where plots that line comment that out.",
                    "label": 0
                },
                {
                    "sent": "Import my transformer module that I was just showing you.",
                    "label": 0
                },
                {
                    "sent": "Pasting this little snippet of code, it's called X one here, right?",
                    "label": 0
                },
                {
                    "sent": "All needs assisted with axes instance and then does everything else itself.",
                    "label": 0
                },
                {
                    "sent": "I'm gonna rerun this thing.",
                    "label": 0
                },
                {
                    "sent": "And now I've just pasted in this little example and it's fully enabled with user events, button press events, mouse and you can take that same piece of code and plug it into a TK app or Cutie app so you know it gives people the ability to write, you know, kind of useful little widgets that don't depend on the underlying GUI toolkit.",
                    "label": 0
                },
                {
                    "sent": "So we have some examples in here for lasso demos and.",
                    "label": 0
                },
                {
                    "sent": "And none of the all of these use Matlab events, which mean they automatically run for you.",
                    "label": 0
                },
                {
                    "sent": "Come across a variety of user interface toolkits, which is another problem.",
                    "label": 0
                },
                {
                    "sent": "There's a proliferation of languages.",
                    "label": 0
                },
                {
                    "sent": "There's a proliferation of packages.",
                    "label": 0
                },
                {
                    "sent": "There's also a proliferation of user interface toolkits that people want to develop too, so just one more thing to worry about.",
                    "label": 0
                },
                {
                    "sent": "So I'm going to just finish off here.",
                    "label": 0
                },
                {
                    "sent": "You know Python is achieving pretty rapid.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Adoption in some fairly high powered environment, so Googles application engine where people can write their own applications to the Google engine using Google Calendars, Google Mail, whatever is written in Python.",
                    "label": 0
                },
                {
                    "sent": "So if you want to write Google Apps you have to write in Python go who is the inventor of Python is employed by Google.",
                    "label": 0
                },
                {
                    "sent": "Alex Martelli, who's sort of the chief author of Python Books, is employed by Google.",
                    "label": 0
                },
                {
                    "sent": "Gunner",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Hubble Space Telescope uses Python in their image processing pipeline.",
                    "label": 1
                },
                {
                    "sent": "This is some images that they've grabbed off and done.",
                    "label": 0
                },
                {
                    "sent": "Some contour Maps in Matlab.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And I'll just wrap up here the Phoenix project in Mars use as a what they call Matlab for space travel environment and they scrapped their own internal plotting library and started using Matplotlib.",
                    "label": 0
                },
                {
                    "sent": "And they wrote me in October.",
                    "label": 0
                },
                {
                    "sent": "4th, you know one of my lead developers says he's posted a bug and you know you haven't fixed it yet.",
                    "label": 0
                },
                {
                    "sent": "Just wanted to let you know that the spacecraft is going to be arriving in Mars.",
                    "label": 0
                },
                {
                    "sent": "In March and I was wondering if you could give us a time frame for when this bug will be resolved, so this is like the no pressure bug report basically, so I had kind of a couple of sleepless nights and then.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "When the actual event happened, all my kids and I we gathered in front of the television.",
                    "label": 0
                },
                {
                    "sent": "We were hoping we weren't going to crash the Phoenix Lander.",
                    "label": 0
                },
                {
                    "sent": "Couple of graphs and they showed one of 'em on CNN as most of it were high tech 3D rendering stuff that you know the simulations.",
                    "label": 0
                },
                {
                    "sent": "But every once in awhile they would very briefly cut to a little Matlab screenshot and all my kids would cheer and everything.",
                    "label": 0
                },
                {
                    "sent": "So it's an exciting moment.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And that's that, concludes my talk.",
                    "label": 0
                },
                {
                    "sent": "I hope we have a time for a question or two.",
                    "label": 0
                },
                {
                    "sent": "I don't know how we're doing.",
                    "label": 0
                },
                {
                    "sent": "So nicely with other women.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "To use Matlab from different languages.",
                    "label": 0
                },
                {
                    "sent": "Yeah, that's harder because you would have to.",
                    "label": 0
                },
                {
                    "sent": "You have to embed the Python interpreter in your language and you know.",
                    "label": 0
                },
                {
                    "sent": "So you basically you have to bring in our entire stack.",
                    "label": 0
                },
                {
                    "sent": "The way if you didn't want to do that, it would be fairly easy to sort of set up a web gateway.",
                    "label": 0
                },
                {
                    "sent": "I mean you would lose all the interactivity stuff, but you could do have a server rendering architecture right, which is just outputting say PDFs or PNG's that would be fairly trivial to do, but then you lose all.",
                    "label": 0
                },
                {
                    "sent": "There have been some proof of concept concept, Ajax web server stuff where people do that.",
                    "label": 0
                },
                {
                    "sent": "People have tried to do it.",
                    "label": 0
                },
                {
                    "sent": "I don't think it would be.",
                    "label": 0
                },
                {
                    "sent": "Would be easy and you know most people who are in other languages like C++ give you pay a performance in for putting Python piece into it so.",
                    "label": 0
                },
                {
                    "sent": "I don't know what language is it that you're thinking.",
                    "label": 0
                },
                {
                    "sent": "Yeah, people have done it.",
                    "label": 0
                },
                {
                    "sent": "You know, if you want to check with me, I can try to search through the archives, but.",
                    "label": 0
                },
                {
                    "sent": "It seems like it's tough.",
                    "label": 0
                },
                {
                    "sent": "Mention the proliferation of languages and infiltration of plotting software application toolkits and someone to come outside.",
                    "label": 0
                },
                {
                    "sent": "I'm always really frustrated by this, 'cause I never know, Victoria Lee.",
                    "label": 0
                },
                {
                    "sent": "That's right, there's a lot of possibilities across platforms as well.",
                    "label": 0
                },
                {
                    "sent": "Cross versions.",
                    "label": 0
                },
                {
                    "sent": "It's and I don't know what's the right thing to say.",
                    "label": 0
                },
                {
                    "sent": "Is there any hope for some of these things?",
                    "label": 0
                },
                {
                    "sent": "Standardizing on stuff?",
                    "label": 0
                },
                {
                    "sent": "Or no, I don't think there's any hope.",
                    "label": 0
                },
                {
                    "sent": "What we do though is we we we render to a C++ layer, so we try to avoid doing user interface native graphics calls.",
                    "label": 0
                },
                {
                    "sent": "So we render everything to see buffer and then do pixel transfer so we don't have to worry too much about native WX versus GTK, you know.",
                    "label": 0
                },
                {
                    "sent": "So what we try to do abstract as much away as possible.",
                    "label": 0
                },
                {
                    "sent": "You know that's not ideal either.",
                    "label": 0
                },
                {
                    "sent": "But yes, maintaining 5 user interface toolkits across three versions across 3 operating systems is as painful.",
                    "label": 0
                },
                {
                    "sent": "So the relationship between I5 and math.",
                    "label": 0
                },
                {
                    "sent": "Aside from the fact that it rejected me in birth, you mean, yeah?",
                    "label": 0
                },
                {
                    "sent": "Matlab it when we when we do what we're doing, it's transparent, but we're actually running a threaded user interface application, right?",
                    "label": 0
                },
                {
                    "sent": "So I'm running a TK or GTK app or WX app and GUI's are not friendly to shells because they take over the main loop.",
                    "label": 0
                },
                {
                    "sent": "So what I Python does is it knows enough about Matplotlib to say oh, matplotlib in the hidden configuration file is saying he wants to be a GTK app, so I'm going to hijack the GTK main loop and do everything in a thread.",
                    "label": 0
                },
                {
                    "sent": "An you know run the GTK thing in a separate thread and so there has to be a kind of an awareness between the shell and the graphing library.",
                    "label": 0
                },
                {
                    "sent": "You know if it works well, you don't know that it's happening, but basically there's a lot of very gooey threading stuff going on under the hood, so that's the main piece.",
                    "label": 0
                },
                {
                    "sent": "Completely independent, yes, except for the fact that they have a pylab mode which they are aware of us.",
                    "label": 0
                },
                {
                    "sent": "Basically so that when they detect that people want to run in this mode, now there's been an awful lot of work in Ipython lately to embed Ipython in user interface shells.",
                    "label": 0
                },
                {
                    "sent": "So if you want to write over within a talk earlier, people want that GUI.",
                    "label": 0
                },
                {
                    "sent": "To me, the ideal ID is Emacs plus I Python, but people want that Boolean now I Python, which is a very rich shell, tab completion.",
                    "label": 0
                },
                {
                    "sent": "Readline history can now be embedded in for maybe 3 user interface toolkits, so.",
                    "label": 0
                }
            ]
        }
    }
}