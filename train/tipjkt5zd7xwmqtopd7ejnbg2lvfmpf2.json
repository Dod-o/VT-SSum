{
    "id": "tipjkt5zd7xwmqtopd7ejnbg2lvfmpf2",
    "title": "Updating RDFS ABoxes and TBoxes in SPARQL",
    "info": {
        "author": [
            "Albin Ahmeti, Faculty of Informatics, Vienna University of Technology"
        ],
        "published": "Dec. 19, 2014",
        "recorded": "October 2014",
        "category": [
            "Top->Computer Science->Semantic Web"
        ]
    },
    "url": "http://videolectures.net/iswc2014_ahmeti_rdfs_aboxes_tboxes/",
    "segmentation": [
        [
            "This is a joint work between me Diego Calvanese and Axle Polaris.",
            "So let's start with the motivate."
        ],
        [
            "So recently we have experienced the standardization of the Sparkle update and the sparkle entailment regimes and the entailment are usually done by via rules with materialization via rules or the query writing techniques in the context of delight, an ontology based data access and this emerging need for a more systematic approach on dealing with updates over the boxes and a boxes.",
            "So throughout the slides we will have an example of a triple store restores a box of the box data about family."
        ],
        [
            "Relationships.",
            "So as you see, the box are denoted in their light or DFS notation, which will show in in turtle syntax and so the question is when we have an update which deletes all individuals of type of child and inserts all individuals of type of model where X is as far and Y, then what should the triple sword do in this situation becausw?",
            "We are going to delete an implicit triple and we are going to re certain already imply triple and also the where might match also implicit ripples as well."
        ],
        [
            "And so, so what's the state of the art?",
            "So what do the upper shell triplestore do today?",
            "So entailment is usually done at either at the query writing at the query time by the query writing or at the loading time by materialization, but not in the context of updates.",
            "And also for all the triple stores who performed this materialization, there is no standard behavior on how they deal with updates and also even sparkle specification there is no interplay of entailments and updates is left out.",
            "So now."
        ],
        [
            "I'm going to talk about how the materialization and this sparkling table regime works in the context of RDF's.",
            "So given the same triple store, so we'll consider just 4 rules from the minimal RDF's inference rules by models that are.",
            "So.",
            "Basically we have subclass our property, domain and class.",
            "So as probably everyone knows when we apply these rules today, box at the books we will get in a materialized a box so that all the implicit triples will be derived.",
            "It will be reinserted back in the Triple Store.",
            "And in the car."
        ],
        [
            "Text of a query answering under DFS entailment, so whenever we have a sparkle query and this query when it will be written in respect of the box, then it is well known that this.",
            "Query here when it is posed against the materialized air box, will will yield the same answer as the rewritten query with respect to the original a box.",
            "And also in this paper we will build also with the reduced.",
            "Triplestores so.",
            "And the reduced resource about doing with reduced a triple store.",
            "So basically we just sort of the core of the a box, so we just remove all the redundant triples which are entailed by other triples already.",
            "And we've shown that this can be achieved.",
            "In schema agnostic way by a paper.",
            "The idea is the same as the paper shown today in a previous session and this can be done in using this Sparkle update which uses.",
            "Pathari writings on the body.",
            "And that can be done in by on board means of.",
            "By all the triple source.",
            "So after this reduced operator, so the equation still holds."
        ],
        [
            "So what are is our contribution, so we will discuss possible update semantics for both materialized and reduce sources in the context of our DFS and whenever we have a box updates that the box will be fixed.",
            "And also will use the minimal RDF S or no black notes.",
            "No axiomatic triples.",
            "As we also will restrict busy piece to only allow inserts and deletes but we.",
            "We saw that even in this restricted RDF setting, it turned out to be very challenging.",
            "Worth noting is that in the predicate position we don't allow variables as well.",
            "So before."
        ],
        [
            "We start with the semantics.",
            "Let's just see how the baseline semantics perform.",
            "So the baseline semantics is very straightforward.",
            "So given an update according according.",
            "According to this semantics, so the update will be post over the graph store and then the materialized will be performed afterwards.",
            "So now we will see why this is the way to go."
        ],
        [
            "Stop or reduce preserving semantics will have the baseline semantics the same as the counterpart dematerialized semantics and the semantics one we just delete all the causes and then it's followed by reduce."
        ],
        [
            "Let's go to each of them and then we give some counter intuitive examples.",
            "So given the previous graph store and an update so.",
            "According to semantics 0, after this update is forced against the materialized air box.",
            "So we will delete.",
            "Joe is a type of child and research in this type of mother.",
            "So we see here that the voice type of child is removed and we're in surgical stuff mother.",
            "But the semantic says that we have to perform a re materialized again.",
            "So afterwards this Joe is topped with child, will be reinserted again and so it has no effect at this probably is not there.",
            "Intention that we had.",
            "So let's go with another semantics may."
        ],
        [
            "This is performs better according to our intuitions, so the semantics one day, as I said, is a technique borrow from the deductive databases.",
            "So what is essentially what this semantics does is that first the where clause is computed.",
            "With respect to the materialized, a box and then we get all the triples which are to be removed and all triples which are to be inserted and then.",
            "According to the semantics, we delete all these triples and all the effects which are done by the by this materialized operator.",
            "So we insert all the triples and since we have deleted an over estimations or more that we were supposed to, then we perform again re materialize.",
            "So let's see an example."
        ],
        [
            "So if we have this example with where we delete Joe's Mother Jane.",
            "So this would delete also all the effects of Joe's Mother Jane.",
            "So we delete Joe Esperon, James Joyce type of child James, type of mother, and so after it will remove all the triples in a box, and also must realize we will have an empty store.",
            "And this might be viewed quite radical.",
            "Let's see another example."
        ],
        [
            "So in this time we just have Joe Esperon Jane.",
            "And the.",
            "So except Joe Esperon, Jane will delete also Joyce type of child and Janice type of parent.",
            "And after removing this from materialized or when we have to perform materialized and this will be re insert it again and probably so this has no effect then.",
            "Probably this is not the.",
            "Way to go, and so we've seen that all these semantics have some.",
            "Intuitive corner cases.",
            "So now let's see semantics which really delete simplicit ripples by deleting all the causes."
        ],
        [
            "But before I go to that, I will just show a variant of this semantics 1A, which just makes a distinction between the explicit and implicit.",
            "Stores because in Datalog there is this extension distinction between the extensional and intensional predicates, and our triple source who make who do this distinction and according to the semantics is the update.",
            "So we have two different triple source which store explicit and implicit, and then the update will be post over.",
            "The Express is 1 and the implicit will just.",
            "Will will be computed.",
            "Materialized over the explicit one with the new updated version and then it will be stored in implicit.",
            "And let's see an example."
        ],
        [
            "So the previous example after we delete Joe has parent Jane.",
            "So we delete this triple.",
            "And then after we perform materialize then we will get this.",
            "New State, which is the same as the previous one, so.",
            "In the paper we have shown an example that actually the semantics 1A and 1B usually do not coincide."
        ],
        [
            "So the semantics to us I said it will delete all the instantiations of PD plus all their causes and will insert the instantiations of \u03c0 plus all their effects.",
            "And the tricky point in this semantics is that we have also in the Web Part to match the new variables that will be introduced here in a delete template.",
            "So we'll need an auxiliary machinery to do that, but this is better explained by an example.",
            "So if we have."
        ],
        [
            "If we have the the previous update and then according to this semantics in the delete part, we will have, so we'll have all other.",
            "Triple patterns, which which derive axis of type of style.",
            "So in this case we have these three and the insert part.",
            "We also insert all the effects of wise type of mother, in this case voice type of parent and the tricky part is that for all these new variables introduced we will declare them as resources which match all the resources in a triple store and how we do that.",
            "We show that in the paper.",
            "But after this is posed against the materialized, a box, so all the triples will be removed and joys type of child cannot be inferred anymore.",
            "So this is gone for sure."
        ],
        [
            "The the the problem with this semantics is that when we have an insert followed by delete, so we have an insert with the same triples and followed by the legal the same triples.",
            "Then as we know this should cancel each other.",
            "But after the rewriting will have a different state.",
            "So we will have a different state and delete following violence."
        ],
        [
            "Kurt, is it important?",
            "So in order to remedy this, we propose another semantics called semantics three, which combines the ideas of the semantics one and two, and this semantics will recursively delete all the effects and all the causes of these effects, and will recursively go.",
            "The problem is that we don't have a definition for yet, because we don't know when where is the fixed point where we should stop."
        ],
        [
            "So given the same update.",
            "We know that after the instantiation with Lee Child and will eat all this causes and also all the effects of this courses and so on and so forth.",
            "And after this update we will remove also these two triples which were in the semantics tool they persisted.",
            "And now let's go."
        ],
        [
            "With the reduced percentage."
        ],
        [
            "Want Excel reduce preserving semantics?",
            "Semantics zero.",
            "It just does it, just the IT poses the object over the graph store and then reduce operator will be performed."
        ],
        [
            "Give an example.",
            "So given an update.",
            "After this update is posed against the reduced, a box will delete those type of child insert chain of title mother.",
            "So we will have a Jane type of mother inserted.",
            "But after we have a reduced operator and this reduce operator with remove this redundant triple because this is entailed by the previous one.",
            "Now."
        ],
        [
            "Let's go with the semantics one.",
            "So the semantics one will delete all the instantiations of PD plus or the causes will insert cases of P and also in the web parts as we've seen in the semantics, two of the material of materialized preserving semantics.",
            "We also have to do this trick in the Web Part.",
            "So given the update as."
        ],
        [
            "You see here then this will be written to this update where in the delete Part B.",
            "Also include all the causes insert part.",
            "We leave the intact as it is and where parts will be joined by this new resources and after this insert new written update the state will be this.",
            "And this after the reduce, it will be this and this is different from the semantic 0.",
            "So this does some something different than semantic 0."
        ],
        [
            "Now we've seen that a box semantics for their box updates where which are unambiguous.",
            "But in the case of the box updates, things are different.",
            "So in the case of the box updates, we need to make the busy piece more general so that we can delete and insert the box facts and the tee box inserts are are trivial.",
            "Where'd elites are ambiguous.",
            "And but what if we just?"
        ],
        [
            "If you just consider a materialized tee box and then for this tee box materialization will have.",
            "Also these two rules which computes the transitive closure of the TEE box.",
            "And why the?",
            "Why deletion in the box is ambiguous?",
            "It is becausw.",
            "Given this T box there.",
            "And if we delete if we want to lead a subclass of F, then there are exponentially many ways to do this.",
            "We can either delete this, this or this or this or this or this, or in combination.",
            "So what?"
        ],
        [
            "So what we did we propose an outbound cut, and the intuition of this.",
            "Semantics is that first we compute all the materialization of the of the graph.",
            "So as you see with the dashed lines, and then what we do, we remove all the edges going from A to F. And the good thing about this is that it can be written in the Sparkle 11 property path query.",
            "After proposing this update, then we will have a state which is this.",
            "So we will delete all the implicit information so that a subclass of F will not be anymore.",
            "Another alternative is to is to."
        ],
        [
            "Delete the incoming edges to F. And this is also can be done with this particle property path query."
        ],
        [
            "So the the prototype is available for this semantics are implemented and are available on this UI and what we did also is the evaluation of all these semantics.",
            "So in the graph you see.",
            "The performance of all these semantics when first an update is posed, and then it is followed by 14 standard lukewarm select queries.",
            "So in this case, as you see, this semantics tool which is based on just in rewritings.",
            "It does much better and the baseline semantics is this one.",
            "And the interesting is the fact that the reduced so semantics is this one, and it works better than the semantics.",
            "1A.",
            "And semantics won't be in the queries.",
            "Violence six, which shows that sometimes keeping reduce or it can make sense.",
            "And the hour."
        ],
        [
            "Version is that.",
            "There is no one size fits all semantics and which might depend on the use cases.",
            "OK, fine now."
        ],
        [
            "Thank you.",
            "So you showed an example there at the end.",
            "Or you could say that you could do an edge cut around F to remove essentially the implication that a is a subclass of F. But wouldn't that also?",
            "Potentially, maybe it was unclear to me, but this suggests that you would also cut, for example, E as a subclass of F. It was drawn so.",
            "Or that would change the semantics of the other classes as well?",
            "Is that really what was implied?",
            "Or were you saying that I think it's the next slide?",
            "Yes yeah.",
            "So in this case, OK, I see you changed it to a variable, never mind.",
            "I think I understand.",
            "If I remember in ask well, you have updatable views where you can do inserts and deletions.",
            "I wonder why don't they had this problem, but what makes the Triple Store or sparkle or something else different so not to cause Visa in SQL two?",
            "Or if it happens in as well?",
            "Also, I will be happy.",
            "Sorry I did not understand your question.",
            "Some databases allow view updates, yeah, but they are.",
            "You know they allow very restricted view updates.",
            "They don't allow a few updates on the join tables.",
            "So the idea here is that we don't have a databases on the mappings.",
            "And that will cause the view update problem.",
            "So we had to cut this in order to make the problem more easier."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This is a joint work between me Diego Calvanese and Axle Polaris.",
                    "label": 0
                },
                {
                    "sent": "So let's start with the motivate.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So recently we have experienced the standardization of the Sparkle update and the sparkle entailment regimes and the entailment are usually done by via rules with materialization via rules or the query writing techniques in the context of delight, an ontology based data access and this emerging need for a more systematic approach on dealing with updates over the boxes and a boxes.",
                    "label": 0
                },
                {
                    "sent": "So throughout the slides we will have an example of a triple store restores a box of the box data about family.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Relationships.",
                    "label": 0
                },
                {
                    "sent": "So as you see, the box are denoted in their light or DFS notation, which will show in in turtle syntax and so the question is when we have an update which deletes all individuals of type of child and inserts all individuals of type of model where X is as far and Y, then what should the triple sword do in this situation becausw?",
                    "label": 1
                },
                {
                    "sent": "We are going to delete an implicit triple and we are going to re certain already imply triple and also the where might match also implicit ripples as well.",
                    "label": 1
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And so, so what's the state of the art?",
                    "label": 1
                },
                {
                    "sent": "So what do the upper shell triplestore do today?",
                    "label": 1
                },
                {
                    "sent": "So entailment is usually done at either at the query writing at the query time by the query writing or at the loading time by materialization, but not in the context of updates.",
                    "label": 1
                },
                {
                    "sent": "And also for all the triple stores who performed this materialization, there is no standard behavior on how they deal with updates and also even sparkle specification there is no interplay of entailments and updates is left out.",
                    "label": 0
                },
                {
                    "sent": "So now.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "I'm going to talk about how the materialization and this sparkling table regime works in the context of RDF's.",
                    "label": 0
                },
                {
                    "sent": "So given the same triple store, so we'll consider just 4 rules from the minimal RDF's inference rules by models that are.",
                    "label": 1
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "Basically we have subclass our property, domain and class.",
                    "label": 0
                },
                {
                    "sent": "So as probably everyone knows when we apply these rules today, box at the books we will get in a materialized a box so that all the implicit triples will be derived.",
                    "label": 0
                },
                {
                    "sent": "It will be reinserted back in the Triple Store.",
                    "label": 0
                },
                {
                    "sent": "And in the car.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Text of a query answering under DFS entailment, so whenever we have a sparkle query and this query when it will be written in respect of the box, then it is well known that this.",
                    "label": 0
                },
                {
                    "sent": "Query here when it is posed against the materialized air box, will will yield the same answer as the rewritten query with respect to the original a box.",
                    "label": 0
                },
                {
                    "sent": "And also in this paper we will build also with the reduced.",
                    "label": 0
                },
                {
                    "sent": "Triplestores so.",
                    "label": 0
                },
                {
                    "sent": "And the reduced resource about doing with reduced a triple store.",
                    "label": 0
                },
                {
                    "sent": "So basically we just sort of the core of the a box, so we just remove all the redundant triples which are entailed by other triples already.",
                    "label": 0
                },
                {
                    "sent": "And we've shown that this can be achieved.",
                    "label": 0
                },
                {
                    "sent": "In schema agnostic way by a paper.",
                    "label": 0
                },
                {
                    "sent": "The idea is the same as the paper shown today in a previous session and this can be done in using this Sparkle update which uses.",
                    "label": 0
                },
                {
                    "sent": "Pathari writings on the body.",
                    "label": 0
                },
                {
                    "sent": "And that can be done in by on board means of.",
                    "label": 0
                },
                {
                    "sent": "By all the triple source.",
                    "label": 0
                },
                {
                    "sent": "So after this reduced operator, so the equation still holds.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So what are is our contribution, so we will discuss possible update semantics for both materialized and reduce sources in the context of our DFS and whenever we have a box updates that the box will be fixed.",
                    "label": 1
                },
                {
                    "sent": "And also will use the minimal RDF S or no black notes.",
                    "label": 0
                },
                {
                    "sent": "No axiomatic triples.",
                    "label": 1
                },
                {
                    "sent": "As we also will restrict busy piece to only allow inserts and deletes but we.",
                    "label": 1
                },
                {
                    "sent": "We saw that even in this restricted RDF setting, it turned out to be very challenging.",
                    "label": 0
                },
                {
                    "sent": "Worth noting is that in the predicate position we don't allow variables as well.",
                    "label": 0
                },
                {
                    "sent": "So before.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We start with the semantics.",
                    "label": 0
                },
                {
                    "sent": "Let's just see how the baseline semantics perform.",
                    "label": 0
                },
                {
                    "sent": "So the baseline semantics is very straightforward.",
                    "label": 1
                },
                {
                    "sent": "So given an update according according.",
                    "label": 0
                },
                {
                    "sent": "According to this semantics, so the update will be post over the graph store and then the materialized will be performed afterwards.",
                    "label": 0
                },
                {
                    "sent": "So now we will see why this is the way to go.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Stop or reduce preserving semantics will have the baseline semantics the same as the counterpart dematerialized semantics and the semantics one we just delete all the causes and then it's followed by reduce.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Let's go to each of them and then we give some counter intuitive examples.",
                    "label": 0
                },
                {
                    "sent": "So given the previous graph store and an update so.",
                    "label": 0
                },
                {
                    "sent": "According to semantics 0, after this update is forced against the materialized air box.",
                    "label": 0
                },
                {
                    "sent": "So we will delete.",
                    "label": 0
                },
                {
                    "sent": "Joe is a type of child and research in this type of mother.",
                    "label": 0
                },
                {
                    "sent": "So we see here that the voice type of child is removed and we're in surgical stuff mother.",
                    "label": 0
                },
                {
                    "sent": "But the semantic says that we have to perform a re materialized again.",
                    "label": 0
                },
                {
                    "sent": "So afterwards this Joe is topped with child, will be reinserted again and so it has no effect at this probably is not there.",
                    "label": 0
                },
                {
                    "sent": "Intention that we had.",
                    "label": 0
                },
                {
                    "sent": "So let's go with another semantics may.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This is performs better according to our intuitions, so the semantics one day, as I said, is a technique borrow from the deductive databases.",
                    "label": 0
                },
                {
                    "sent": "So what is essentially what this semantics does is that first the where clause is computed.",
                    "label": 0
                },
                {
                    "sent": "With respect to the materialized, a box and then we get all the triples which are to be removed and all triples which are to be inserted and then.",
                    "label": 0
                },
                {
                    "sent": "According to the semantics, we delete all these triples and all the effects which are done by the by this materialized operator.",
                    "label": 0
                },
                {
                    "sent": "So we insert all the triples and since we have deleted an over estimations or more that we were supposed to, then we perform again re materialize.",
                    "label": 0
                },
                {
                    "sent": "So let's see an example.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So if we have this example with where we delete Joe's Mother Jane.",
                    "label": 0
                },
                {
                    "sent": "So this would delete also all the effects of Joe's Mother Jane.",
                    "label": 0
                },
                {
                    "sent": "So we delete Joe Esperon, James Joyce type of child James, type of mother, and so after it will remove all the triples in a box, and also must realize we will have an empty store.",
                    "label": 0
                },
                {
                    "sent": "And this might be viewed quite radical.",
                    "label": 0
                },
                {
                    "sent": "Let's see another example.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So in this time we just have Joe Esperon Jane.",
                    "label": 0
                },
                {
                    "sent": "And the.",
                    "label": 0
                },
                {
                    "sent": "So except Joe Esperon, Jane will delete also Joyce type of child and Janice type of parent.",
                    "label": 0
                },
                {
                    "sent": "And after removing this from materialized or when we have to perform materialized and this will be re insert it again and probably so this has no effect then.",
                    "label": 0
                },
                {
                    "sent": "Probably this is not the.",
                    "label": 0
                },
                {
                    "sent": "Way to go, and so we've seen that all these semantics have some.",
                    "label": 0
                },
                {
                    "sent": "Intuitive corner cases.",
                    "label": 0
                },
                {
                    "sent": "So now let's see semantics which really delete simplicit ripples by deleting all the causes.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "But before I go to that, I will just show a variant of this semantics 1A, which just makes a distinction between the explicit and implicit.",
                    "label": 0
                },
                {
                    "sent": "Stores because in Datalog there is this extension distinction between the extensional and intensional predicates, and our triple source who make who do this distinction and according to the semantics is the update.",
                    "label": 0
                },
                {
                    "sent": "So we have two different triple source which store explicit and implicit, and then the update will be post over.",
                    "label": 0
                },
                {
                    "sent": "The Express is 1 and the implicit will just.",
                    "label": 0
                },
                {
                    "sent": "Will will be computed.",
                    "label": 0
                },
                {
                    "sent": "Materialized over the explicit one with the new updated version and then it will be stored in implicit.",
                    "label": 0
                },
                {
                    "sent": "And let's see an example.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So the previous example after we delete Joe has parent Jane.",
                    "label": 0
                },
                {
                    "sent": "So we delete this triple.",
                    "label": 0
                },
                {
                    "sent": "And then after we perform materialize then we will get this.",
                    "label": 0
                },
                {
                    "sent": "New State, which is the same as the previous one, so.",
                    "label": 0
                },
                {
                    "sent": "In the paper we have shown an example that actually the semantics 1A and 1B usually do not coincide.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So the semantics to us I said it will delete all the instantiations of PD plus all their causes and will insert the instantiations of \u03c0 plus all their effects.",
                    "label": 1
                },
                {
                    "sent": "And the tricky point in this semantics is that we have also in the Web Part to match the new variables that will be introduced here in a delete template.",
                    "label": 0
                },
                {
                    "sent": "So we'll need an auxiliary machinery to do that, but this is better explained by an example.",
                    "label": 0
                },
                {
                    "sent": "So if we have.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "If we have the the previous update and then according to this semantics in the delete part, we will have, so we'll have all other.",
                    "label": 0
                },
                {
                    "sent": "Triple patterns, which which derive axis of type of style.",
                    "label": 0
                },
                {
                    "sent": "So in this case we have these three and the insert part.",
                    "label": 0
                },
                {
                    "sent": "We also insert all the effects of wise type of mother, in this case voice type of parent and the tricky part is that for all these new variables introduced we will declare them as resources which match all the resources in a triple store and how we do that.",
                    "label": 0
                },
                {
                    "sent": "We show that in the paper.",
                    "label": 0
                },
                {
                    "sent": "But after this is posed against the materialized, a box, so all the triples will be removed and joys type of child cannot be inferred anymore.",
                    "label": 0
                },
                {
                    "sent": "So this is gone for sure.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The the the problem with this semantics is that when we have an insert followed by delete, so we have an insert with the same triples and followed by the legal the same triples.",
                    "label": 0
                },
                {
                    "sent": "Then as we know this should cancel each other.",
                    "label": 0
                },
                {
                    "sent": "But after the rewriting will have a different state.",
                    "label": 0
                },
                {
                    "sent": "So we will have a different state and delete following violence.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Kurt, is it important?",
                    "label": 0
                },
                {
                    "sent": "So in order to remedy this, we propose another semantics called semantics three, which combines the ideas of the semantics one and two, and this semantics will recursively delete all the effects and all the causes of these effects, and will recursively go.",
                    "label": 0
                },
                {
                    "sent": "The problem is that we don't have a definition for yet, because we don't know when where is the fixed point where we should stop.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So given the same update.",
                    "label": 0
                },
                {
                    "sent": "We know that after the instantiation with Lee Child and will eat all this causes and also all the effects of this courses and so on and so forth.",
                    "label": 0
                },
                {
                    "sent": "And after this update we will remove also these two triples which were in the semantics tool they persisted.",
                    "label": 0
                },
                {
                    "sent": "And now let's go.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "With the reduced percentage.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Want Excel reduce preserving semantics?",
                    "label": 0
                },
                {
                    "sent": "Semantics zero.",
                    "label": 0
                },
                {
                    "sent": "It just does it, just the IT poses the object over the graph store and then reduce operator will be performed.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Give an example.",
                    "label": 0
                },
                {
                    "sent": "So given an update.",
                    "label": 0
                },
                {
                    "sent": "After this update is posed against the reduced, a box will delete those type of child insert chain of title mother.",
                    "label": 0
                },
                {
                    "sent": "So we will have a Jane type of mother inserted.",
                    "label": 0
                },
                {
                    "sent": "But after we have a reduced operator and this reduce operator with remove this redundant triple because this is entailed by the previous one.",
                    "label": 0
                },
                {
                    "sent": "Now.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Let's go with the semantics one.",
                    "label": 0
                },
                {
                    "sent": "So the semantics one will delete all the instantiations of PD plus or the causes will insert cases of P and also in the web parts as we've seen in the semantics, two of the material of materialized preserving semantics.",
                    "label": 1
                },
                {
                    "sent": "We also have to do this trick in the Web Part.",
                    "label": 0
                },
                {
                    "sent": "So given the update as.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "You see here then this will be written to this update where in the delete Part B.",
                    "label": 0
                },
                {
                    "sent": "Also include all the causes insert part.",
                    "label": 0
                },
                {
                    "sent": "We leave the intact as it is and where parts will be joined by this new resources and after this insert new written update the state will be this.",
                    "label": 0
                },
                {
                    "sent": "And this after the reduce, it will be this and this is different from the semantic 0.",
                    "label": 0
                },
                {
                    "sent": "So this does some something different than semantic 0.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Now we've seen that a box semantics for their box updates where which are unambiguous.",
                    "label": 0
                },
                {
                    "sent": "But in the case of the box updates, things are different.",
                    "label": 0
                },
                {
                    "sent": "So in the case of the box updates, we need to make the busy piece more general so that we can delete and insert the box facts and the tee box inserts are are trivial.",
                    "label": 1
                },
                {
                    "sent": "Where'd elites are ambiguous.",
                    "label": 0
                },
                {
                    "sent": "And but what if we just?",
                    "label": 1
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "If you just consider a materialized tee box and then for this tee box materialization will have.",
                    "label": 0
                },
                {
                    "sent": "Also these two rules which computes the transitive closure of the TEE box.",
                    "label": 0
                },
                {
                    "sent": "And why the?",
                    "label": 0
                },
                {
                    "sent": "Why deletion in the box is ambiguous?",
                    "label": 0
                },
                {
                    "sent": "It is becausw.",
                    "label": 0
                },
                {
                    "sent": "Given this T box there.",
                    "label": 0
                },
                {
                    "sent": "And if we delete if we want to lead a subclass of F, then there are exponentially many ways to do this.",
                    "label": 0
                },
                {
                    "sent": "We can either delete this, this or this or this or this or this, or in combination.",
                    "label": 0
                },
                {
                    "sent": "So what?",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So what we did we propose an outbound cut, and the intuition of this.",
                    "label": 1
                },
                {
                    "sent": "Semantics is that first we compute all the materialization of the of the graph.",
                    "label": 0
                },
                {
                    "sent": "So as you see with the dashed lines, and then what we do, we remove all the edges going from A to F. And the good thing about this is that it can be written in the Sparkle 11 property path query.",
                    "label": 1
                },
                {
                    "sent": "After proposing this update, then we will have a state which is this.",
                    "label": 0
                },
                {
                    "sent": "So we will delete all the implicit information so that a subclass of F will not be anymore.",
                    "label": 0
                },
                {
                    "sent": "Another alternative is to is to.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Delete the incoming edges to F. And this is also can be done with this particle property path query.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So the the prototype is available for this semantics are implemented and are available on this UI and what we did also is the evaluation of all these semantics.",
                    "label": 0
                },
                {
                    "sent": "So in the graph you see.",
                    "label": 0
                },
                {
                    "sent": "The performance of all these semantics when first an update is posed, and then it is followed by 14 standard lukewarm select queries.",
                    "label": 0
                },
                {
                    "sent": "So in this case, as you see, this semantics tool which is based on just in rewritings.",
                    "label": 0
                },
                {
                    "sent": "It does much better and the baseline semantics is this one.",
                    "label": 0
                },
                {
                    "sent": "And the interesting is the fact that the reduced so semantics is this one, and it works better than the semantics.",
                    "label": 0
                },
                {
                    "sent": "1A.",
                    "label": 0
                },
                {
                    "sent": "And semantics won't be in the queries.",
                    "label": 0
                },
                {
                    "sent": "Violence six, which shows that sometimes keeping reduce or it can make sense.",
                    "label": 0
                },
                {
                    "sent": "And the hour.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Version is that.",
                    "label": 0
                },
                {
                    "sent": "There is no one size fits all semantics and which might depend on the use cases.",
                    "label": 0
                },
                {
                    "sent": "OK, fine now.",
                    "label": 0
                }
            ]
        },
        "clip_31": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Thank you.",
                    "label": 0
                },
                {
                    "sent": "So you showed an example there at the end.",
                    "label": 0
                },
                {
                    "sent": "Or you could say that you could do an edge cut around F to remove essentially the implication that a is a subclass of F. But wouldn't that also?",
                    "label": 0
                },
                {
                    "sent": "Potentially, maybe it was unclear to me, but this suggests that you would also cut, for example, E as a subclass of F. It was drawn so.",
                    "label": 0
                },
                {
                    "sent": "Or that would change the semantics of the other classes as well?",
                    "label": 0
                },
                {
                    "sent": "Is that really what was implied?",
                    "label": 0
                },
                {
                    "sent": "Or were you saying that I think it's the next slide?",
                    "label": 0
                },
                {
                    "sent": "Yes yeah.",
                    "label": 0
                },
                {
                    "sent": "So in this case, OK, I see you changed it to a variable, never mind.",
                    "label": 0
                },
                {
                    "sent": "I think I understand.",
                    "label": 0
                },
                {
                    "sent": "If I remember in ask well, you have updatable views where you can do inserts and deletions.",
                    "label": 0
                },
                {
                    "sent": "I wonder why don't they had this problem, but what makes the Triple Store or sparkle or something else different so not to cause Visa in SQL two?",
                    "label": 0
                },
                {
                    "sent": "Or if it happens in as well?",
                    "label": 0
                },
                {
                    "sent": "Also, I will be happy.",
                    "label": 0
                },
                {
                    "sent": "Sorry I did not understand your question.",
                    "label": 0
                },
                {
                    "sent": "Some databases allow view updates, yeah, but they are.",
                    "label": 0
                },
                {
                    "sent": "You know they allow very restricted view updates.",
                    "label": 0
                },
                {
                    "sent": "They don't allow a few updates on the join tables.",
                    "label": 0
                },
                {
                    "sent": "So the idea here is that we don't have a databases on the mappings.",
                    "label": 0
                },
                {
                    "sent": "And that will cause the view update problem.",
                    "label": 0
                },
                {
                    "sent": "So we had to cut this in order to make the problem more easier.",
                    "label": 0
                }
            ]
        }
    }
}