{
    "id": "ertosb6v3nv6juqn4rpiijhzxnefil3q",
    "title": "Repairing ontologies for incomplete reasoners",
    "info": {
        "author": [
            "Giorgos Stoilos, Computing Laboratory, Oxford University"
        ],
        "published": "Nov. 25, 2011",
        "recorded": "October 2011",
        "category": [
            "Top->Computer Science->Semantic Web->Ontologies"
        ]
    },
    "url": "http://videolectures.net/iswc2011_stoilos_reasoners/",
    "segmentation": [
        [
            "It's quite well known in this community that alteril systems like our Lemons Anna have been deployed and used successfully in many semantic Web applications, either industrial strength once or research ones, and the reason is that these systems are usually very scalable and they can cope with large amounts of data."
        ],
        [
            "However, one problem is that these systems do not implement the full range of our two constructors, so this means that for some applications like combinations of queries, ontologies and data, we're going to miss answers to user queries, and this can be quite critical in many applications, like for example in biomedicine or health care and.",
            "In general, whether you care about completeness or you don't care about completeness, if it would be very beneficial to improve the completeness of these systems without affecting their performance."
        ],
        [
            "Now, of course, we're not the first ones to do that, and there have been many approaches and systems studied in the past and proposed, like from from the early days of the semantic Web and how these systems usually work.",
            "They take some completely reason.",
            "Are they materialize some entailments of the input ontology and then they feed this materialization to the incomplete reasoner, and the idea is for the reasoner to using materialization and produce more inferences than it would do normally.",
            "However, all these systems have many important limitations, and for example, the first one is that although they improve the completeness of the systems, they are not guaranteed to be complete, so this is usually becausw.",
            "All these approaches materialize only kind of simple inferences, while they miss out some more complex ones.",
            "Another problem is that some systems, in order to be complete, they try to materialize all possible inferences.",
            "They built very huge materializations and this means that they can affect the performance of the improved system.",
            "And third one is that in many of these approaches.",
            "It takes quite a lot of time to compute the materialization."
        ],
        [
            "So what were our goals for this work?",
            "The first one was to study and propose a formal framework for improving improving the completeness of incomplete reasoners, like Whole 2 RL systems, which pays special care to guarantee completeness.",
            "It computes a small materialization's as possible, and it computes them very efficiently.",
            "And finally to evaluate our framework in practical scenarios and see it's."
        ],
        [
            "Practicality.",
            "So to begin with our framework, it's quite intuitive.",
            "First of all, I would like to introduce to functions that I'm going to use.",
            "The first one is the function insert and supposed to denote the certain answers of the query over the input ontology and the data.",
            "So it's the queries.",
            "The answers that have to be computed and dance is a function that denotes the answers that the reason there is going to compute another.",
            "As I said before, ants can be incomplete, so for some query ontology and data it can return less answers than it supposed to.",
            "Return.",
            "So our main notion in our framework is that of a repair sewer repair for some ontology and for some system it's just a set of actions are such that the set of actions in is entailed by the input ontology, which means that our does not introduce new consequence in the ontology and 2nd if you take this R together with your input ontology and you put it, you plug it into your system, then this system is going to change its behavior and it's going to return all the answers well.",
            "At least all the answers that it should return."
        ],
        [
            "And this is an example.",
            "This is some experts from the Lehigh University Ontology.",
            "So the first action says that students are exactly those persons that take some course graduate student take some courses, which is a graduate course and the graduate courses of course, and we have the query to retrieve all students, and as you can easily see if in our database we know that a is a graduate student, then this graduate student is also a student, so it is it belongs to the certain answers.",
            "However.",
            "For systems like cultural reasons like they know, now lemme.",
            "These systems are not going to return this answer and the reason is 'cause you get this answer.",
            "You have to be able to handle this existential quantifier there, which is out of the cultural profile.",
            "But it is very easy to see that if one materializes, this consequences this relation between graduate students and students and then feed both the input ontology as well as this set to the original.",
            "Then both of these reasons are going to return the answer that was previously missed."
        ],
        [
            "Of course.",
            "There are cases where repairs do not exist, so we cannot always guarantee the existence of these sets that are going to improve the completeness of the reasoner.",
            "So the main intuition is that this some set of actions might exist, but the problem might be that this set of actions actions might fall outside of the fragment that these systems are supporting.",
            "So for example, if this is the set of actions that need to be added, this are.",
            "Here is a repair for an ultra reasoner, but it's not a repair for an RDF S reason because there is this conjunction here that in our defense reason is going is not going to handle.",
            "And this is another example.",
            "This axiom can be a repair for any reason are, but it cannot be repaired for an all too real reason, because it has this existential quantifier here."
        ],
        [
            "So how?",
            "When do repairs exist?",
            "Well, the idea is that repairs exists when the input ontology can be rewritten in some other ontology which is expressed in some fragment for which the system is complete.",
            "So our first nursing here is that of rewriting.",
            "So in rewriting of some input tautology into some weaker fragmente, it's just another tip, ontology such that the ontology.",
            "This ontology, although expressed in a weaker fragmente, is going to have.",
            "The same consequences, the same answers as the original ontology, and then it's quite straightforward to see that if for some ontology such rewriting is exists, and if some if your system is complete for the fragment of which this writing express, then this writing is going to be a repair for your system."
        ],
        [
            "So how do we compute this rewritings, actually?",
            "There are already quite a lot of algorithms and techniques, an literature which studies the problem of reliability.",
            "So for example, there are already techniques that computer rewritings for all ontologies into the light and the light A there is work.",
            "So for computing rewritings of the language DLA time today to log and actually even the came two system which is there for quite a long time, can she be seen as the system that computes rewritings, so K on two we compute a Datalog rewriting for Horn, second ologist, while it will is going to compute the data, deducting Datalog, rewriting for Sequent Ologist.",
            "And as you can see here, especially cases two and three are very relevant to all TRL systems, because these systems are effectively implementing their based on some form of data logger ending.",
            "However, there is probably some mismatch here.",
            "One might say, and.",
            "The thing is that this system also really is not precisely Datalog.",
            "But the interesting thing that we discovered is that these writings actually are not.",
            "They're not arbitrary Datalog rewriting.",
            "They're not arbitrary Datalog programs, but the rules that these writings this algorithm produce.",
            "They can be transformed and representative in the form of all too well axioms."
        ],
        [
            "So.",
            "We know how to compute rewritings for all to orl reasoners.",
            "The problem is that we know from related literature that this rewritings, although they can be used as repairs for the system, they can be of exponential size, and the problem is that, OK, they are repairs.",
            "But if you put it to your original, then they're probably going to kill it to kill the reason, and the reason it will not behave anymore.",
            "And this is an example that solves that this calculus here.",
            "This algorithm is going to produce an exponential rewriting of an exponent."
        ],
        [
            "Elsys so a major topic of our paper will also was to find ways to minimize this repairs.",
            "So the first thing we can do is that we can throw away from this, rewriting all actions that are actually orl entailments.",
            "So, since since this actions, SRL, entailments, and we are repairing all TRL systems, then we don't need to materialize these actions.",
            "However, we can do even more.",
            "And The thing is that in many cases this systems that we're trying to repair, they're actually implementing more than our two RL, and ideally what we want to do is to go through all the actions that are left after the first minimization.",
            "And check whether this axioms are indeed necessary for the system, or whether the system doesn't really need them and how we do that is by introducing a test.",
            "So if we have this axiom in our rewriting, then see implies B.",
            "Then we create some dummy abebooks, some dummy data for C, We instantiate concept C and we create a query for concept B and then we check whether the reasoner can return.",
            "A IF there is an account, return a then it means that there is an error.",
            "Can handle this cosico sequence?",
            "I mean internally it can find this consequence, so this action is not necessary for the system.",
            "And actually, you can do even much more.",
            "And what is it that we can do is that we can do the same process, but we can check if some action AI is necessary in the presence of some other action.",
            "Sometimes we found in many cases that there is some interrelationship between some interaction between different axioms, so we can do.",
            "We can divide the same test for AI and then check whether there is only return a for the test but not.",
            "When the reason is given, only the input ontology, but extended with some other action.",
            "If the reason we can return this answer, then this means that AI in the presence of AJ is redundant, so we can even."
        ],
        [
            "Minimize more.",
            "Now this is a summary of.",
            "We have our algorithm.",
            "The inputs is a system and an ontology to be repaired for the system.",
            "First we compute some Datalog rewriting of the input ontology using any of the available systems.",
            "Then we convert this data log rewriting into auto PRL actions, and we have our rewriting in the form of outlook.",
            "Then we minimize by throwing away the outdoor L inferences, and finally we minimize even more using the system."
        ],
        [
            "So we have implemented this algorithm and we have used it in two scenarios to see whether it's effective.",
            "The first one is we tried to repair the Lehigh University ontology for three systems, or Lindena Andy Lena.",
            "And this table summarizes the result.",
            "So the UPN matala G contains about 80 actions, very writing we computed contained 331 actions.",
            "So you can see it's already much larger for compared to the input ontology.",
            "After the minimization, we throw the way quite a lot actions and minimal writing contain 7 actions.",
            "While when we took the reasoner into the picture, we found out that the repair for our limousine are only only this system only needs three actions to be repaired for this ontology.",
            "And finally, the elegy Nawaz complete already for the input at the box on Teologi.",
            "These are the three actions.",
            "That are needed for loudly mozena.",
            "And as you can see, these axioms are quite simple in structure.",
            "The repairs were small.",
            "And we could compute.",
            "We could finish all this process quite efficiently.",
            "The second experiment we did with Lehigh was to check whether plugging this reaction is going to have an effect in the performance of the systems.",
            "So what we did was to use a Lehigh University benchmark and create some large boxes and check how the system comparative systems after and before they repair, and we found out that first of all, all the systems will attend the same, the same number of answers are spell it, so they reactions do.",
            "Something too, they do repair the systems and actually they make them indistinguishable from pallet.",
            "And finally we observed no performance changes in the Lehigh."
        ],
        [
            "Actually, ontology.",
            "The second scenario I was about, Galen.",
            "Actually a smaller module of Galen.",
            "This module contained to 160 actions.",
            "The repair we computed contained about 1500 actions.",
            "The minimal one about 300, and the repair actually the actual repair for the system.",
            "Quite a small number one could say.",
            "Which is 1110 and five actions for these systems.",
            "So yes, one can argue that again, this this the sizes of these repairs are quite small compared to the complexity of the gallon toilet.",
            "However, differently than you BM because the gallon autology is quite complex, the structure of these actions in these repairs were more complex, so in many cases we were getting actions which consists of several nested existence on the left hand side.",
            "And of course again, here you see more that this minimization we do taking the reasoner into account has much bigger effect than Lehigh because there is a different there is a drop between 300 to 11."
        ],
        [
            "And we finally also wanted to do the same performance evaluation on Galen.",
            "The problem initially was that there are no data for gallon.",
            "But what we did is we use the system that we have developed in the past and which can create synthetic boxes synthetic data.",
            "So we created four queries and then datasets of increasing size from 2000 assertions to 30 three 32,000 assertions and.",
            "We checked before and after repairing the number of answers or the system return comparing with pellet, the loading times and the query answering."
        ],
        [
            "Thanks.",
            "Regarding the number of answers, this table shows the number that the certain Nationals returned by resistance before the repair.",
            "So as you can see this column here is pallet.",
            "All systems returned much less answers that pallet.",
            "However after the repair.",
            "All the systems return exactly the same set of answers that spell it."
        ],
        [
            "Regarding loading times here, I only saw a loading start for our LTM.",
            "The outline map to repair and pellet, but the picture is more or less the same with the other systems.",
            "So here in the blue line there is the loading times for our limb before the repair so you can see our link before.",
            "There is obviously the faster system.",
            "After the repair the loading time increases about 20%, but you can see that.",
            "Still it's quite close.",
            "To the unrepaired version and what's interesting is that even after the repair, our limb is still much faster than pellet, which is this yellow line."
        ],
        [
            "This table summarizes the numbers for query answering.",
            "These are the numbers after the repair and we could not observe any difference either before or after the repair of the systems.",
            "And we can also observe that still all these systems are much faster than done pallet."
        ],
        [
            "So, summarizing the results we have proposed and studied a formal approach for improving completeness of incomplete systems like cultural systems.",
            "And the framework based special attention to guarantee completeness.",
            "And it also tried to optimize that as much as possible their computed materialization's.",
            "And we have conducted an experimental evaluation.",
            "Initial one we have repaired three systems for two well ontologies.",
            "And we have found out that we have fully repaired the system and we have shown that this approach is actually quite feasible in practice.",
            "We have seen that the repairs can be small, but they can also be large or they can be of varying complexity.",
            "In the Lehigh case, if there were quite similar, were just atomic inclusions, while in the case of gallon there were more complex.",
            "And finally we have seen that if the repairs are complex, they can affect the performance to some degree, which might be not so significant other repair.",
            "These systems are going to be are going to return the actual they're going to behave like a complete reason.",
            "So thank you very much.",
            "Take questions.",
            "Yes, my name is Christine Scheufler and my question is.",
            "Don't you think that this repair mechanism would be better located in the reasoner itself?",
            "And what I ask myself is?",
            "This is it.",
            "There's a reason as we know are basically.",
            "Based logical on description logics and I think there's a very fine crenelated tradeoff made between expressiveness and complexity, and you can't.",
            "Get one of the one side more without losing something on the other side and you are twice sounds like getting both, and I think that's by principle not possible.",
            "And yes, I agree OK now.",
            "But The thing is that keep in mind that this repairs are pair on teologi.",
            "So pallet for example implement some very heavy Tableau algorithm which is complete regardless of the inputs ontology.",
            "So it can hardly nominal, so it can handle everything.",
            "But there is this repairing is apparent alagie, so it won't work if you repair your system for this ontology, it might be complete for that one, but it might not be complete for the other one, so.",
            "You see I mean, it's kind of more parameterized.",
            "Yes, he said if you change your tee box or your your schema then you have to restart the whole process again and have you planned any work on doing that incrementally so that you don't have to restart the whole thing all over again, but maybe just compute some additional axioms so you add one new axiom to your tee box and maybe you need just one or two more access for your rewriting, but at the moment you can't know that you would just restart everything, right?",
            "Yeah, good point.",
            "But of course I mean it can be future work.",
            "I mean we did not think about it.",
            "OK, what I generally mean that we have to kind of implement an incremental key on 2 system 1st and then so I just have a quick question.",
            "Members along similar lines.",
            "Would you have to do some sort of combinatorial computation if I wanted to say take multiple ontologies?",
            "If I were exploring the web of linked data for example, I get some persons ontology, maybe DB pedia, then I go somewhere else and get second ontology.",
            "That third ontology do I have to compute basically pairwise?",
            "If I want to build repair ontologies, or can I somehow just Union prepare ontologies for each individual?",
            "Yeah, it turns out that you can repair its one separately and then take the Union will work.",
            "Well, unless they kind of have, if you take them together, they kind of have interactions, right?",
            "They're not too like 100% modular, like if you take them together, they have new consequences.",
            "In that case we have to take them altogether and then repair the hole.",
            "Are they if they are completely modular then we can do it in a modular way as well."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "It's quite well known in this community that alteril systems like our Lemons Anna have been deployed and used successfully in many semantic Web applications, either industrial strength once or research ones, and the reason is that these systems are usually very scalable and they can cope with large amounts of data.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "However, one problem is that these systems do not implement the full range of our two constructors, so this means that for some applications like combinations of queries, ontologies and data, we're going to miss answers to user queries, and this can be quite critical in many applications, like for example in biomedicine or health care and.",
                    "label": 0
                },
                {
                    "sent": "In general, whether you care about completeness or you don't care about completeness, if it would be very beneficial to improve the completeness of these systems without affecting their performance.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Now, of course, we're not the first ones to do that, and there have been many approaches and systems studied in the past and proposed, like from from the early days of the semantic Web and how these systems usually work.",
                    "label": 0
                },
                {
                    "sent": "They take some completely reason.",
                    "label": 0
                },
                {
                    "sent": "Are they materialize some entailments of the input ontology and then they feed this materialization to the incomplete reasoner, and the idea is for the reasoner to using materialization and produce more inferences than it would do normally.",
                    "label": 1
                },
                {
                    "sent": "However, all these systems have many important limitations, and for example, the first one is that although they improve the completeness of the systems, they are not guaranteed to be complete, so this is usually becausw.",
                    "label": 0
                },
                {
                    "sent": "All these approaches materialize only kind of simple inferences, while they miss out some more complex ones.",
                    "label": 0
                },
                {
                    "sent": "Another problem is that some systems, in order to be complete, they try to materialize all possible inferences.",
                    "label": 0
                },
                {
                    "sent": "They built very huge materializations and this means that they can affect the performance of the improved system.",
                    "label": 0
                },
                {
                    "sent": "And third one is that in many of these approaches.",
                    "label": 0
                },
                {
                    "sent": "It takes quite a lot of time to compute the materialization.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So what were our goals for this work?",
                    "label": 0
                },
                {
                    "sent": "The first one was to study and propose a formal framework for improving improving the completeness of incomplete reasoners, like Whole 2 RL systems, which pays special care to guarantee completeness.",
                    "label": 1
                },
                {
                    "sent": "It computes a small materialization's as possible, and it computes them very efficiently.",
                    "label": 1
                },
                {
                    "sent": "And finally to evaluate our framework in practical scenarios and see it's.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Practicality.",
                    "label": 0
                },
                {
                    "sent": "So to begin with our framework, it's quite intuitive.",
                    "label": 0
                },
                {
                    "sent": "First of all, I would like to introduce to functions that I'm going to use.",
                    "label": 0
                },
                {
                    "sent": "The first one is the function insert and supposed to denote the certain answers of the query over the input ontology and the data.",
                    "label": 0
                },
                {
                    "sent": "So it's the queries.",
                    "label": 0
                },
                {
                    "sent": "The answers that have to be computed and dance is a function that denotes the answers that the reason there is going to compute another.",
                    "label": 0
                },
                {
                    "sent": "As I said before, ants can be incomplete, so for some query ontology and data it can return less answers than it supposed to.",
                    "label": 1
                },
                {
                    "sent": "Return.",
                    "label": 0
                },
                {
                    "sent": "So our main notion in our framework is that of a repair sewer repair for some ontology and for some system it's just a set of actions are such that the set of actions in is entailed by the input ontology, which means that our does not introduce new consequence in the ontology and 2nd if you take this R together with your input ontology and you put it, you plug it into your system, then this system is going to change its behavior and it's going to return all the answers well.",
                    "label": 1
                },
                {
                    "sent": "At least all the answers that it should return.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And this is an example.",
                    "label": 0
                },
                {
                    "sent": "This is some experts from the Lehigh University Ontology.",
                    "label": 0
                },
                {
                    "sent": "So the first action says that students are exactly those persons that take some course graduate student take some courses, which is a graduate course and the graduate courses of course, and we have the query to retrieve all students, and as you can easily see if in our database we know that a is a graduate student, then this graduate student is also a student, so it is it belongs to the certain answers.",
                    "label": 0
                },
                {
                    "sent": "However.",
                    "label": 0
                },
                {
                    "sent": "For systems like cultural reasons like they know, now lemme.",
                    "label": 0
                },
                {
                    "sent": "These systems are not going to return this answer and the reason is 'cause you get this answer.",
                    "label": 0
                },
                {
                    "sent": "You have to be able to handle this existential quantifier there, which is out of the cultural profile.",
                    "label": 0
                },
                {
                    "sent": "But it is very easy to see that if one materializes, this consequences this relation between graduate students and students and then feed both the input ontology as well as this set to the original.",
                    "label": 0
                },
                {
                    "sent": "Then both of these reasons are going to return the answer that was previously missed.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Of course.",
                    "label": 0
                },
                {
                    "sent": "There are cases where repairs do not exist, so we cannot always guarantee the existence of these sets that are going to improve the completeness of the reasoner.",
                    "label": 0
                },
                {
                    "sent": "So the main intuition is that this some set of actions might exist, but the problem might be that this set of actions actions might fall outside of the fragment that these systems are supporting.",
                    "label": 0
                },
                {
                    "sent": "So for example, if this is the set of actions that need to be added, this are.",
                    "label": 0
                },
                {
                    "sent": "Here is a repair for an ultra reasoner, but it's not a repair for an RDF S reason because there is this conjunction here that in our defense reason is going is not going to handle.",
                    "label": 1
                },
                {
                    "sent": "And this is another example.",
                    "label": 1
                },
                {
                    "sent": "This axiom can be a repair for any reason are, but it cannot be repaired for an all too real reason, because it has this existential quantifier here.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So how?",
                    "label": 0
                },
                {
                    "sent": "When do repairs exist?",
                    "label": 0
                },
                {
                    "sent": "Well, the idea is that repairs exists when the input ontology can be rewritten in some other ontology which is expressed in some fragment for which the system is complete.",
                    "label": 1
                },
                {
                    "sent": "So our first nursing here is that of rewriting.",
                    "label": 0
                },
                {
                    "sent": "So in rewriting of some input tautology into some weaker fragmente, it's just another tip, ontology such that the ontology.",
                    "label": 1
                },
                {
                    "sent": "This ontology, although expressed in a weaker fragmente, is going to have.",
                    "label": 0
                },
                {
                    "sent": "The same consequences, the same answers as the original ontology, and then it's quite straightforward to see that if for some ontology such rewriting is exists, and if some if your system is complete for the fragment of which this writing express, then this writing is going to be a repair for your system.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So how do we compute this rewritings, actually?",
                    "label": 0
                },
                {
                    "sent": "There are already quite a lot of algorithms and techniques, an literature which studies the problem of reliability.",
                    "label": 0
                },
                {
                    "sent": "So for example, there are already techniques that computer rewritings for all ontologies into the light and the light A there is work.",
                    "label": 0
                },
                {
                    "sent": "So for computing rewritings of the language DLA time today to log and actually even the came two system which is there for quite a long time, can she be seen as the system that computes rewritings, so K on two we compute a Datalog rewriting for Horn, second ologist, while it will is going to compute the data, deducting Datalog, rewriting for Sequent Ologist.",
                    "label": 0
                },
                {
                    "sent": "And as you can see here, especially cases two and three are very relevant to all TRL systems, because these systems are effectively implementing their based on some form of data logger ending.",
                    "label": 0
                },
                {
                    "sent": "However, there is probably some mismatch here.",
                    "label": 0
                },
                {
                    "sent": "One might say, and.",
                    "label": 0
                },
                {
                    "sent": "The thing is that this system also really is not precisely Datalog.",
                    "label": 0
                },
                {
                    "sent": "But the interesting thing that we discovered is that these writings actually are not.",
                    "label": 0
                },
                {
                    "sent": "They're not arbitrary Datalog rewriting.",
                    "label": 0
                },
                {
                    "sent": "They're not arbitrary Datalog programs, but the rules that these writings this algorithm produce.",
                    "label": 0
                },
                {
                    "sent": "They can be transformed and representative in the form of all too well axioms.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "We know how to compute rewritings for all to orl reasoners.",
                    "label": 0
                },
                {
                    "sent": "The problem is that we know from related literature that this rewritings, although they can be used as repairs for the system, they can be of exponential size, and the problem is that, OK, they are repairs.",
                    "label": 1
                },
                {
                    "sent": "But if you put it to your original, then they're probably going to kill it to kill the reason, and the reason it will not behave anymore.",
                    "label": 0
                },
                {
                    "sent": "And this is an example that solves that this calculus here.",
                    "label": 0
                },
                {
                    "sent": "This algorithm is going to produce an exponential rewriting of an exponent.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Elsys so a major topic of our paper will also was to find ways to minimize this repairs.",
                    "label": 0
                },
                {
                    "sent": "So the first thing we can do is that we can throw away from this, rewriting all actions that are actually orl entailments.",
                    "label": 0
                },
                {
                    "sent": "So, since since this actions, SRL, entailments, and we are repairing all TRL systems, then we don't need to materialize these actions.",
                    "label": 0
                },
                {
                    "sent": "However, we can do even more.",
                    "label": 1
                },
                {
                    "sent": "And The thing is that in many cases this systems that we're trying to repair, they're actually implementing more than our two RL, and ideally what we want to do is to go through all the actions that are left after the first minimization.",
                    "label": 1
                },
                {
                    "sent": "And check whether this axioms are indeed necessary for the system, or whether the system doesn't really need them and how we do that is by introducing a test.",
                    "label": 0
                },
                {
                    "sent": "So if we have this axiom in our rewriting, then see implies B.",
                    "label": 0
                },
                {
                    "sent": "Then we create some dummy abebooks, some dummy data for C, We instantiate concept C and we create a query for concept B and then we check whether the reasoner can return.",
                    "label": 1
                },
                {
                    "sent": "A IF there is an account, return a then it means that there is an error.",
                    "label": 0
                },
                {
                    "sent": "Can handle this cosico sequence?",
                    "label": 0
                },
                {
                    "sent": "I mean internally it can find this consequence, so this action is not necessary for the system.",
                    "label": 0
                },
                {
                    "sent": "And actually, you can do even much more.",
                    "label": 0
                },
                {
                    "sent": "And what is it that we can do is that we can do the same process, but we can check if some action AI is necessary in the presence of some other action.",
                    "label": 1
                },
                {
                    "sent": "Sometimes we found in many cases that there is some interrelationship between some interaction between different axioms, so we can do.",
                    "label": 0
                },
                {
                    "sent": "We can divide the same test for AI and then check whether there is only return a for the test but not.",
                    "label": 0
                },
                {
                    "sent": "When the reason is given, only the input ontology, but extended with some other action.",
                    "label": 0
                },
                {
                    "sent": "If the reason we can return this answer, then this means that AI in the presence of AJ is redundant, so we can even.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Minimize more.",
                    "label": 0
                },
                {
                    "sent": "Now this is a summary of.",
                    "label": 0
                },
                {
                    "sent": "We have our algorithm.",
                    "label": 0
                },
                {
                    "sent": "The inputs is a system and an ontology to be repaired for the system.",
                    "label": 0
                },
                {
                    "sent": "First we compute some Datalog rewriting of the input ontology using any of the available systems.",
                    "label": 0
                },
                {
                    "sent": "Then we convert this data log rewriting into auto PRL actions, and we have our rewriting in the form of outlook.",
                    "label": 0
                },
                {
                    "sent": "Then we minimize by throwing away the outdoor L inferences, and finally we minimize even more using the system.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So we have implemented this algorithm and we have used it in two scenarios to see whether it's effective.",
                    "label": 0
                },
                {
                    "sent": "The first one is we tried to repair the Lehigh University ontology for three systems, or Lindena Andy Lena.",
                    "label": 0
                },
                {
                    "sent": "And this table summarizes the result.",
                    "label": 0
                },
                {
                    "sent": "So the UPN matala G contains about 80 actions, very writing we computed contained 331 actions.",
                    "label": 0
                },
                {
                    "sent": "So you can see it's already much larger for compared to the input ontology.",
                    "label": 0
                },
                {
                    "sent": "After the minimization, we throw the way quite a lot actions and minimal writing contain 7 actions.",
                    "label": 0
                },
                {
                    "sent": "While when we took the reasoner into the picture, we found out that the repair for our limousine are only only this system only needs three actions to be repaired for this ontology.",
                    "label": 0
                },
                {
                    "sent": "And finally, the elegy Nawaz complete already for the input at the box on Teologi.",
                    "label": 0
                },
                {
                    "sent": "These are the three actions.",
                    "label": 0
                },
                {
                    "sent": "That are needed for loudly mozena.",
                    "label": 0
                },
                {
                    "sent": "And as you can see, these axioms are quite simple in structure.",
                    "label": 0
                },
                {
                    "sent": "The repairs were small.",
                    "label": 0
                },
                {
                    "sent": "And we could compute.",
                    "label": 0
                },
                {
                    "sent": "We could finish all this process quite efficiently.",
                    "label": 0
                },
                {
                    "sent": "The second experiment we did with Lehigh was to check whether plugging this reaction is going to have an effect in the performance of the systems.",
                    "label": 0
                },
                {
                    "sent": "So what we did was to use a Lehigh University benchmark and create some large boxes and check how the system comparative systems after and before they repair, and we found out that first of all, all the systems will attend the same, the same number of answers are spell it, so they reactions do.",
                    "label": 0
                },
                {
                    "sent": "Something too, they do repair the systems and actually they make them indistinguishable from pallet.",
                    "label": 0
                },
                {
                    "sent": "And finally we observed no performance changes in the Lehigh.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Actually, ontology.",
                    "label": 0
                },
                {
                    "sent": "The second scenario I was about, Galen.",
                    "label": 0
                },
                {
                    "sent": "Actually a smaller module of Galen.",
                    "label": 1
                },
                {
                    "sent": "This module contained to 160 actions.",
                    "label": 0
                },
                {
                    "sent": "The repair we computed contained about 1500 actions.",
                    "label": 0
                },
                {
                    "sent": "The minimal one about 300, and the repair actually the actual repair for the system.",
                    "label": 0
                },
                {
                    "sent": "Quite a small number one could say.",
                    "label": 0
                },
                {
                    "sent": "Which is 1110 and five actions for these systems.",
                    "label": 0
                },
                {
                    "sent": "So yes, one can argue that again, this this the sizes of these repairs are quite small compared to the complexity of the gallon toilet.",
                    "label": 0
                },
                {
                    "sent": "However, differently than you BM because the gallon autology is quite complex, the structure of these actions in these repairs were more complex, so in many cases we were getting actions which consists of several nested existence on the left hand side.",
                    "label": 0
                },
                {
                    "sent": "And of course again, here you see more that this minimization we do taking the reasoner into account has much bigger effect than Lehigh because there is a different there is a drop between 300 to 11.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And we finally also wanted to do the same performance evaluation on Galen.",
                    "label": 1
                },
                {
                    "sent": "The problem initially was that there are no data for gallon.",
                    "label": 0
                },
                {
                    "sent": "But what we did is we use the system that we have developed in the past and which can create synthetic boxes synthetic data.",
                    "label": 0
                },
                {
                    "sent": "So we created four queries and then datasets of increasing size from 2000 assertions to 30 three 32,000 assertions and.",
                    "label": 0
                },
                {
                    "sent": "We checked before and after repairing the number of answers or the system return comparing with pellet, the loading times and the query answering.",
                    "label": 1
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Thanks.",
                    "label": 0
                },
                {
                    "sent": "Regarding the number of answers, this table shows the number that the certain Nationals returned by resistance before the repair.",
                    "label": 0
                },
                {
                    "sent": "So as you can see this column here is pallet.",
                    "label": 0
                },
                {
                    "sent": "All systems returned much less answers that pallet.",
                    "label": 1
                },
                {
                    "sent": "However after the repair.",
                    "label": 0
                },
                {
                    "sent": "All the systems return exactly the same set of answers that spell it.",
                    "label": 1
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Regarding loading times here, I only saw a loading start for our LTM.",
                    "label": 1
                },
                {
                    "sent": "The outline map to repair and pellet, but the picture is more or less the same with the other systems.",
                    "label": 0
                },
                {
                    "sent": "So here in the blue line there is the loading times for our limb before the repair so you can see our link before.",
                    "label": 0
                },
                {
                    "sent": "There is obviously the faster system.",
                    "label": 1
                },
                {
                    "sent": "After the repair the loading time increases about 20%, but you can see that.",
                    "label": 0
                },
                {
                    "sent": "Still it's quite close.",
                    "label": 0
                },
                {
                    "sent": "To the unrepaired version and what's interesting is that even after the repair, our limb is still much faster than pellet, which is this yellow line.",
                    "label": 1
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "This table summarizes the numbers for query answering.",
                    "label": 1
                },
                {
                    "sent": "These are the numbers after the repair and we could not observe any difference either before or after the repair of the systems.",
                    "label": 0
                },
                {
                    "sent": "And we can also observe that still all these systems are much faster than done pallet.",
                    "label": 1
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So, summarizing the results we have proposed and studied a formal approach for improving completeness of incomplete systems like cultural systems.",
                    "label": 1
                },
                {
                    "sent": "And the framework based special attention to guarantee completeness.",
                    "label": 1
                },
                {
                    "sent": "And it also tried to optimize that as much as possible their computed materialization's.",
                    "label": 1
                },
                {
                    "sent": "And we have conducted an experimental evaluation.",
                    "label": 0
                },
                {
                    "sent": "Initial one we have repaired three systems for two well ontologies.",
                    "label": 0
                },
                {
                    "sent": "And we have found out that we have fully repaired the system and we have shown that this approach is actually quite feasible in practice.",
                    "label": 1
                },
                {
                    "sent": "We have seen that the repairs can be small, but they can also be large or they can be of varying complexity.",
                    "label": 1
                },
                {
                    "sent": "In the Lehigh case, if there were quite similar, were just atomic inclusions, while in the case of gallon there were more complex.",
                    "label": 0
                },
                {
                    "sent": "And finally we have seen that if the repairs are complex, they can affect the performance to some degree, which might be not so significant other repair.",
                    "label": 0
                },
                {
                    "sent": "These systems are going to be are going to return the actual they're going to behave like a complete reason.",
                    "label": 0
                },
                {
                    "sent": "So thank you very much.",
                    "label": 0
                },
                {
                    "sent": "Take questions.",
                    "label": 0
                },
                {
                    "sent": "Yes, my name is Christine Scheufler and my question is.",
                    "label": 0
                },
                {
                    "sent": "Don't you think that this repair mechanism would be better located in the reasoner itself?",
                    "label": 0
                },
                {
                    "sent": "And what I ask myself is?",
                    "label": 0
                },
                {
                    "sent": "This is it.",
                    "label": 0
                },
                {
                    "sent": "There's a reason as we know are basically.",
                    "label": 0
                },
                {
                    "sent": "Based logical on description logics and I think there's a very fine crenelated tradeoff made between expressiveness and complexity, and you can't.",
                    "label": 0
                },
                {
                    "sent": "Get one of the one side more without losing something on the other side and you are twice sounds like getting both, and I think that's by principle not possible.",
                    "label": 0
                },
                {
                    "sent": "And yes, I agree OK now.",
                    "label": 0
                },
                {
                    "sent": "But The thing is that keep in mind that this repairs are pair on teologi.",
                    "label": 0
                },
                {
                    "sent": "So pallet for example implement some very heavy Tableau algorithm which is complete regardless of the inputs ontology.",
                    "label": 0
                },
                {
                    "sent": "So it can hardly nominal, so it can handle everything.",
                    "label": 0
                },
                {
                    "sent": "But there is this repairing is apparent alagie, so it won't work if you repair your system for this ontology, it might be complete for that one, but it might not be complete for the other one, so.",
                    "label": 0
                },
                {
                    "sent": "You see I mean, it's kind of more parameterized.",
                    "label": 0
                },
                {
                    "sent": "Yes, he said if you change your tee box or your your schema then you have to restart the whole process again and have you planned any work on doing that incrementally so that you don't have to restart the whole thing all over again, but maybe just compute some additional axioms so you add one new axiom to your tee box and maybe you need just one or two more access for your rewriting, but at the moment you can't know that you would just restart everything, right?",
                    "label": 0
                },
                {
                    "sent": "Yeah, good point.",
                    "label": 0
                },
                {
                    "sent": "But of course I mean it can be future work.",
                    "label": 0
                },
                {
                    "sent": "I mean we did not think about it.",
                    "label": 1
                },
                {
                    "sent": "OK, what I generally mean that we have to kind of implement an incremental key on 2 system 1st and then so I just have a quick question.",
                    "label": 0
                },
                {
                    "sent": "Members along similar lines.",
                    "label": 0
                },
                {
                    "sent": "Would you have to do some sort of combinatorial computation if I wanted to say take multiple ontologies?",
                    "label": 1
                },
                {
                    "sent": "If I were exploring the web of linked data for example, I get some persons ontology, maybe DB pedia, then I go somewhere else and get second ontology.",
                    "label": 0
                },
                {
                    "sent": "That third ontology do I have to compute basically pairwise?",
                    "label": 0
                },
                {
                    "sent": "If I want to build repair ontologies, or can I somehow just Union prepare ontologies for each individual?",
                    "label": 0
                },
                {
                    "sent": "Yeah, it turns out that you can repair its one separately and then take the Union will work.",
                    "label": 0
                },
                {
                    "sent": "Well, unless they kind of have, if you take them together, they kind of have interactions, right?",
                    "label": 0
                },
                {
                    "sent": "They're not too like 100% modular, like if you take them together, they have new consequences.",
                    "label": 0
                },
                {
                    "sent": "In that case we have to take them altogether and then repair the hole.",
                    "label": 0
                },
                {
                    "sent": "Are they if they are completely modular then we can do it in a modular way as well.",
                    "label": 0
                }
            ]
        }
    }
}