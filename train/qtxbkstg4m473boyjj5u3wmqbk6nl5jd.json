{
    "id": "qtxbkstg4m473boyjj5u3wmqbk6nl5jd",
    "title": "Overview of Middleware for Embedded Devices",
    "info": {
        "author": [
            "Maria Porcius, Department of Communication Systems, Jo\u017eef Stefan Institute"
        ],
        "published": "Nov. 16, 2010",
        "recorded": "October 2010",
        "category": [
            "Top->Computers->Networking"
        ]
    },
    "url": "http://videolectures.net/wsn2010_porcius_omw/",
    "segmentation": [
        [
            "Hello, my name is Maria portrays I'ma post graduated student at Joseph Steffan International Post, graduated school.",
            "I'm developing my research work within the Communication System Department here at Jozef Stefan Institute.",
            "And now after listening to discussion about the hardware components.",
            "We will have a talk about middleware for it."
        ],
        [
            "Added devices.",
            "The outlet for the presentation is composed of a short introduction, then three types of middleware we consider necessary or read that can bring benefits when they are used within the embedded devices.",
            "And finally some conclusion."
        ],
        [
            "Maybe the simple definition for a middleware is a software component that is supposed to connect the hardware of a network with applications.",
            "The main reason why they are via middleware reduced is in order to support the development of the application.",
            "The maintenance and deployment of the network and finally the execution of application which in case of wireless sensor network are mostly sensing.",
            "Based applications."
        ],
        [
            "The first type of middleware I will talk about is."
        ],
        [
            "Embedded operating system.",
            "This is an operating system running on constant devices with limited resources and capabilities.",
            "The need for an operating system results from the fact that we actually want to manage complex network which are supposed to work without user interaction for months or even years.",
            "Being aware the fact that nodes have limited resources and usually battery.",
            "Supply charges the main component of an operating system is the kernel an its main function is resource management.",
            "That is, management of the processor of the memory and input output devices.",
            "In addition, it has to allow programs to run and then use all these services.",
            "And also it has to provide mechanisms for synchronization and communication between."
        ],
        [
            "This is.",
            "Next I will try to identify which are the main difference differences between a traditional operating system and an embedded one.",
            "For the first category, we usually have large memory requirements or multithreaded architecture.",
            "Put output model separation between the kernel and userspace.",
            "Usually not.",
            "We don't have energy constraints and we have a lot of available resources.",
            "On the other hand, because embedded operating systems are used on small devices with a lot of constraints, we need to have small memory footprint, efficient computation, communication protocols that are power aware, friendly interfaces in order to expose the data.",
            "We want to support the different type of application design and finally to have simple ways to program, update or debug the application that are running on."
        ],
        [
            "Samsung Note regarding this last feature that we mentioned before support that is support for programming.",
            "We usually want over there reconfigurable reconfiguration in order to maintain the network and different mechanisms for code update when we want to reprogram the node.",
            "Consider here the case in which we have a large testbed with a lot of nodes that are diploid on the field.",
            "If we want to reprogram the nodes, it's not very appropriate to.",
            "Take a take each node and reprogram it manually.",
            "For this we have the support of the virtual machines, but I will talk of."
        ],
        [
            "Now this a little bit later.",
            "When we refer to the image type of an operating system, we can identify two classes.",
            "The in the first one we have monolithic operating system.",
            "That means that all the components are compiled together with the kernel in a single image.",
            "In this way, the advantage is that we can obtain an efficient execution environment by providing optimization at compilation time, but disadvantages that we can we usually obtain.",
            "High energy costs when we want to update.",
            "Or not, because every time we modified something, we have to recompile that component together with kernel and then reprogram the sensor node with the new image.",
            "On the other hand, we can have a modular operating system in which every component can be compiled separately and then dynamically load on the sense or not without the need of RE compiling.",
            "Also the kernel for this type of operating system the updates.",
            "Are not so expensive since the.",
            "Daniel Image Daniel module that is compiled and loaded on the node is smaller, so we have less cost for both energy and time.",
            "But on the other hand also the execution efficiency is lower since we cannot provide the global optimization at compilation."
        ],
        [
            "In time.",
            "Another classification of embedded operating system can be made based on the scheduling model.",
            "Therefore we have event driven models and thread even models.",
            "The first group, each task that it's executing is a result of an event that appear.",
            "Each event has associated handler.",
            "At the time, only one new handler can be run, so we don't need the locking mechanism.",
            "And we need only one stack.",
            "All the events are stored on the same stack, so the requirements for the memory are not very high.",
            "In the in the other category in the thread driven model, we have more than one task running in parallel.",
            "Each of these task is a is a thread and each thread has its own stack.",
            "The disadvantage is that the memory for stacks allocated creation time and this means that we can waste some memory in case we are allocating more than we need.",
            "We also need locking mechanisms in order to prevent modifying shared resources.",
            "Event driven models are called non real time.",
            "Operating system, an thread driven models are called real time."
        ],
        [
            "In this paper we have a set of operating system we identified and we are trying to compare them based on the scheduling model, memory management, the presence or absence of a kernel, the image type and the footprint.",
            "Maybe the mostly user kontiki and Tiny OS.",
            "And they have an event driven architecture along with the.",
            "US SOS there or the rest of them are multithreaded.",
            "Based on this we.",
            "We can have multiple stacks for multithreaded architecture or single step for event models.",
            "All of them have a kernel except for Tiny OS in which the kernel function are implemented are implemented in component in separate components that are then wiring.",
            "In some configurations only kontiki and sensor operating systems are modular, they allow.",
            "This is the dynamically loading of component of components.",
            "The rest of them are monolitic, so the image has to be re compiled every time we modified something and the footprint for all of them is variable and is usually dependent on the type of the platform for which an operating system is."
        ],
        [
            "The second type of middleware is."
        ],
        [
            "So Taco stack.",
            "During time alot of standards have been developed, some of them specifically for wireless sensor networks like the first 5 in in the list on the slide, and some of them were designed for other type of networks.",
            "But recently they have been adopted also in wireless sensor networks is the case of Bluetooth and IEEE 800.",
            "2.11 Each standard defines the communication process through a set of protocols.",
            "These protocols are usually organized as a stack.",
            "But the interaction between the between the layers of the stacks are standard specific.",
            "Therefore we can identify three top three type of interaction or design models.",
            "In the first one we have communication only between between protocols that are on adjacent layers.",
            "That means that each protocol can communicate, communicate only with the layer above and below it.",
            "Then we have cross layer design.",
            "Where there is communication between layers also between layers that are not adjacent and the last one vertical vertical calibration.",
            "In which we have a new layer that is used by all the others layer to share the information.",
            "After having the design of a protocol step, we have to provide the implementation and we can do this in software within the operating system directly on microcontroller or as a combination of."
        ],
        [
            "Pistol.",
            "When implementing a protocol stack, there are some challenges that have to be considered.",
            "First, we have a small size for the physical node.",
            "That means that we have limited available memory, so the size of the protocol stack has to be as small as possible for this developer.",
            "Can developers can provide code optimization or they can implement on reduced set of functionality's.",
            "Also, because we have a lot of platform or platforms and a lot of operating systems that are used, we need to have.",
            "Headset or generous networks, so we need interoperability.",
            "We can provide this by using modular protocol stacks.",
            "So even if we don't have, even if in a network we have more than one type of protocol stacks, we can replace some parts of one or two in order to.",
            "Allow communication between the nodes so to make them compared."
        ],
        [
            "When testing the implementation of a protocol stack, there are two steps involved in the first step we have to check if the obtained functionality is actually the expected one, and then in the second in the second step we have to compute the implementation size.",
            "That is the memory usage and code size in order to see if it fits on the sense or not.",
            "When we compute the memory usage, three parameters has to be considered.",
            "The maximum number of processes, the Maxim of size of event queue and the size of the thread stacks.",
            "In case of multithreaded architectures."
        ],
        [
            "In this tables with you you can see that the protocol stack implementation that we found for all the standard that we mentioned before.",
            "Since 50.4 is the base base, is used as a base for all the others or all the other standard, except for the last two we can say that all their implementation can be considered.",
            "Also implementation for 50.4.",
            "So the standard has the highest number, then on the 2nd place we have Zigbee.",
            "As this is the one of the most used today in industry and then six lowpan it has more and more implementation since it's appeared to be the standard choice for the so called Internet of Things."
        ],
        [
            "We mentioned several times the need for a small.",
            "Memory requirements and here we give some concrete values.",
            "For this implementation, as you can see there they need only few kilobytes or few 10s of kilobytes for both code and data, so they.",
            "Usually can fit on a sense or not."
        ],
        [
            "Finally, we classified the implementation of the protocol stack based on the.",
            "Operating systems on which they are supported.",
            "As we said, Tiny OS and Kontiki are the most used, so most of the implementation are for these two operating system.",
            "But we also have for real time operating systems and also for the ones that are not very used on embedded devices such as Linux and Windows.",
            "The operating system influences also the choice for the.",
            "Programming languages language in which protocol stack is implemented.",
            "Therefore the most used is C programming language except for Tiny OS, where all the implementations we found."
        ],
        [
            "And are in SC.",
            "And now the last type of middleware that can be used on a wireless."
        ],
        [
            "Is a network is a virtual machine the reason why we use this is because there are a lot of platforms, hardware platforms and a lot of software that I developed for wireless sensor network and.",
            "We want to provide abstraction of the hardware device from an application in order to allow the programs to run on heterogeneous platform while keeping the physical so the hardware transparent to the user."
        ],
        [
            "Two types of middleware can be identified in the first type we have middle.",
            "The three types of virtual machine can be identified in the first one we have middleware level virtual machine.",
            "This is situated between an operating system and an application and the virtual machine can add some new capabilities to the underlying operating system.",
            "For instance, it can allow multithreading on top of an event based operating system.",
            "And the second category is system level virtual machine that can run without the support of without the support of an operating system.",
            "That means directly on on hardware.",
            "But in this case the virtual machine has to implement some operating system specific function like resource management, thread scheduling.",
            "Interruption, handling, etc.",
            "The advantage for this type of virtual machine is that.",
            "They have more available memory since there is no."
        ],
        [
            "Operating system.",
            "The features that we.",
            "Want to provide with the virtual machine affordability and platform independence since the application can run on that.",
            "Can run on several platforms without the need for without recompilation.",
            "And also maybe one of the most important feature is programming support.",
            "As you know.",
            "Programming a sensor node is not very easy task because developers has to deal with concurrency, modular and distributed software.",
            "Because the networks are supposed to work for a long time, cases in which we have to fix some bug to reprogram or add a new functionalities to another are very likely to appear."
        ],
        [
            "So we need this support provided by the virtual machine.",
            "However, the users has to be aware of the fact that there is a tradeoff between the resources that are needed by a virtual machine and the services it provides.",
            "On the one hand, we can reduce the distribution energy cost because the code provided by virtual machine is smaller than native code and we have a simpler process of reprogramming.",
            "But on the other hand, we can we for sure introduce some additional overhead in time and memory requirements for execution and the.",
            "In energy spent by interpretation of the code."
        ],
        [
            "Here we have a table in which we included some virtual machines.",
            "That we find we found and on the 1st on the second column we have the operating system that supports them.",
            "Then we have.",
            "We mentioned if the.",
            "Virtual machine is application specific.",
            "That means that these designs, specially for a type of application with some predefined properties, then we.",
            "Have execution model for, in this case for this virtual machine all our stack based, but they can be also registered based.",
            "We have listed some platforms on which they were tested and the footprint that was calculated by based on this platform.",
            "Then we can see that all of them support multithreading, so multiple applications running on top of them.",
            "Except for.",
            "Even with style, and on the last column we have supported operating language as we can see mostly are.",
            "As for the programming language, for mostly that this is Java."
        ],
        [
            "Now to sum up with talk about middleware and we presented the state of the art.",
            "The main features of three types of middleware that we consider necessary for wireless sensor network that is protocol stack or that can bring a lot of benefits when they are used that are.",
            "Of embedded operating systems and virtual machines."
        ],
        [
            "Thank you for your attention.",
            "Have any questions?"
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Hello, my name is Maria portrays I'ma post graduated student at Joseph Steffan International Post, graduated school.",
                    "label": 0
                },
                {
                    "sent": "I'm developing my research work within the Communication System Department here at Jozef Stefan Institute.",
                    "label": 0
                },
                {
                    "sent": "And now after listening to discussion about the hardware components.",
                    "label": 0
                },
                {
                    "sent": "We will have a talk about middleware for it.",
                    "label": 1
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Added devices.",
                    "label": 0
                },
                {
                    "sent": "The outlet for the presentation is composed of a short introduction, then three types of middleware we consider necessary or read that can bring benefits when they are used within the embedded devices.",
                    "label": 0
                },
                {
                    "sent": "And finally some conclusion.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Maybe the simple definition for a middleware is a software component that is supposed to connect the hardware of a network with applications.",
                    "label": 0
                },
                {
                    "sent": "The main reason why they are via middleware reduced is in order to support the development of the application.",
                    "label": 1
                },
                {
                    "sent": "The maintenance and deployment of the network and finally the execution of application which in case of wireless sensor network are mostly sensing.",
                    "label": 0
                },
                {
                    "sent": "Based applications.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The first type of middleware I will talk about is.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Embedded operating system.",
                    "label": 0
                },
                {
                    "sent": "This is an operating system running on constant devices with limited resources and capabilities.",
                    "label": 1
                },
                {
                    "sent": "The need for an operating system results from the fact that we actually want to manage complex network which are supposed to work without user interaction for months or even years.",
                    "label": 0
                },
                {
                    "sent": "Being aware the fact that nodes have limited resources and usually battery.",
                    "label": 0
                },
                {
                    "sent": "Supply charges the main component of an operating system is the kernel an its main function is resource management.",
                    "label": 0
                },
                {
                    "sent": "That is, management of the processor of the memory and input output devices.",
                    "label": 1
                },
                {
                    "sent": "In addition, it has to allow programs to run and then use all these services.",
                    "label": 1
                },
                {
                    "sent": "And also it has to provide mechanisms for synchronization and communication between.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "This is.",
                    "label": 0
                },
                {
                    "sent": "Next I will try to identify which are the main difference differences between a traditional operating system and an embedded one.",
                    "label": 0
                },
                {
                    "sent": "For the first category, we usually have large memory requirements or multithreaded architecture.",
                    "label": 1
                },
                {
                    "sent": "Put output model separation between the kernel and userspace.",
                    "label": 0
                },
                {
                    "sent": "Usually not.",
                    "label": 1
                },
                {
                    "sent": "We don't have energy constraints and we have a lot of available resources.",
                    "label": 1
                },
                {
                    "sent": "On the other hand, because embedded operating systems are used on small devices with a lot of constraints, we need to have small memory footprint, efficient computation, communication protocols that are power aware, friendly interfaces in order to expose the data.",
                    "label": 0
                },
                {
                    "sent": "We want to support the different type of application design and finally to have simple ways to program, update or debug the application that are running on.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Samsung Note regarding this last feature that we mentioned before support that is support for programming.",
                    "label": 1
                },
                {
                    "sent": "We usually want over there reconfigurable reconfiguration in order to maintain the network and different mechanisms for code update when we want to reprogram the node.",
                    "label": 1
                },
                {
                    "sent": "Consider here the case in which we have a large testbed with a lot of nodes that are diploid on the field.",
                    "label": 0
                },
                {
                    "sent": "If we want to reprogram the nodes, it's not very appropriate to.",
                    "label": 0
                },
                {
                    "sent": "Take a take each node and reprogram it manually.",
                    "label": 0
                },
                {
                    "sent": "For this we have the support of the virtual machines, but I will talk of.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Now this a little bit later.",
                    "label": 0
                },
                {
                    "sent": "When we refer to the image type of an operating system, we can identify two classes.",
                    "label": 0
                },
                {
                    "sent": "The in the first one we have monolithic operating system.",
                    "label": 1
                },
                {
                    "sent": "That means that all the components are compiled together with the kernel in a single image.",
                    "label": 0
                },
                {
                    "sent": "In this way, the advantage is that we can obtain an efficient execution environment by providing optimization at compilation time, but disadvantages that we can we usually obtain.",
                    "label": 1
                },
                {
                    "sent": "High energy costs when we want to update.",
                    "label": 0
                },
                {
                    "sent": "Or not, because every time we modified something, we have to recompile that component together with kernel and then reprogram the sensor node with the new image.",
                    "label": 0
                },
                {
                    "sent": "On the other hand, we can have a modular operating system in which every component can be compiled separately and then dynamically load on the sense or not without the need of RE compiling.",
                    "label": 0
                },
                {
                    "sent": "Also the kernel for this type of operating system the updates.",
                    "label": 1
                },
                {
                    "sent": "Are not so expensive since the.",
                    "label": 0
                },
                {
                    "sent": "Daniel Image Daniel module that is compiled and loaded on the node is smaller, so we have less cost for both energy and time.",
                    "label": 1
                },
                {
                    "sent": "But on the other hand also the execution efficiency is lower since we cannot provide the global optimization at compilation.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "In time.",
                    "label": 0
                },
                {
                    "sent": "Another classification of embedded operating system can be made based on the scheduling model.",
                    "label": 0
                },
                {
                    "sent": "Therefore we have event driven models and thread even models.",
                    "label": 0
                },
                {
                    "sent": "The first group, each task that it's executing is a result of an event that appear.",
                    "label": 0
                },
                {
                    "sent": "Each event has associated handler.",
                    "label": 0
                },
                {
                    "sent": "At the time, only one new handler can be run, so we don't need the locking mechanism.",
                    "label": 0
                },
                {
                    "sent": "And we need only one stack.",
                    "label": 1
                },
                {
                    "sent": "All the events are stored on the same stack, so the requirements for the memory are not very high.",
                    "label": 1
                },
                {
                    "sent": "In the in the other category in the thread driven model, we have more than one task running in parallel.",
                    "label": 0
                },
                {
                    "sent": "Each of these task is a is a thread and each thread has its own stack.",
                    "label": 1
                },
                {
                    "sent": "The disadvantage is that the memory for stacks allocated creation time and this means that we can waste some memory in case we are allocating more than we need.",
                    "label": 0
                },
                {
                    "sent": "We also need locking mechanisms in order to prevent modifying shared resources.",
                    "label": 1
                },
                {
                    "sent": "Event driven models are called non real time.",
                    "label": 0
                },
                {
                    "sent": "Operating system, an thread driven models are called real time.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "In this paper we have a set of operating system we identified and we are trying to compare them based on the scheduling model, memory management, the presence or absence of a kernel, the image type and the footprint.",
                    "label": 0
                },
                {
                    "sent": "Maybe the mostly user kontiki and Tiny OS.",
                    "label": 0
                },
                {
                    "sent": "And they have an event driven architecture along with the.",
                    "label": 0
                },
                {
                    "sent": "US SOS there or the rest of them are multithreaded.",
                    "label": 0
                },
                {
                    "sent": "Based on this we.",
                    "label": 0
                },
                {
                    "sent": "We can have multiple stacks for multithreaded architecture or single step for event models.",
                    "label": 0
                },
                {
                    "sent": "All of them have a kernel except for Tiny OS in which the kernel function are implemented are implemented in component in separate components that are then wiring.",
                    "label": 0
                },
                {
                    "sent": "In some configurations only kontiki and sensor operating systems are modular, they allow.",
                    "label": 0
                },
                {
                    "sent": "This is the dynamically loading of component of components.",
                    "label": 0
                },
                {
                    "sent": "The rest of them are monolitic, so the image has to be re compiled every time we modified something and the footprint for all of them is variable and is usually dependent on the type of the platform for which an operating system is.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The second type of middleware is.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So Taco stack.",
                    "label": 0
                },
                {
                    "sent": "During time alot of standards have been developed, some of them specifically for wireless sensor networks like the first 5 in in the list on the slide, and some of them were designed for other type of networks.",
                    "label": 0
                },
                {
                    "sent": "But recently they have been adopted also in wireless sensor networks is the case of Bluetooth and IEEE 800.",
                    "label": 0
                },
                {
                    "sent": "2.11 Each standard defines the communication process through a set of protocols.",
                    "label": 0
                },
                {
                    "sent": "These protocols are usually organized as a stack.",
                    "label": 0
                },
                {
                    "sent": "But the interaction between the between the layers of the stacks are standard specific.",
                    "label": 0
                },
                {
                    "sent": "Therefore we can identify three top three type of interaction or design models.",
                    "label": 0
                },
                {
                    "sent": "In the first one we have communication only between between protocols that are on adjacent layers.",
                    "label": 0
                },
                {
                    "sent": "That means that each protocol can communicate, communicate only with the layer above and below it.",
                    "label": 0
                },
                {
                    "sent": "Then we have cross layer design.",
                    "label": 1
                },
                {
                    "sent": "Where there is communication between layers also between layers that are not adjacent and the last one vertical vertical calibration.",
                    "label": 0
                },
                {
                    "sent": "In which we have a new layer that is used by all the others layer to share the information.",
                    "label": 0
                },
                {
                    "sent": "After having the design of a protocol step, we have to provide the implementation and we can do this in software within the operating system directly on microcontroller or as a combination of.",
                    "label": 1
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Pistol.",
                    "label": 0
                },
                {
                    "sent": "When implementing a protocol stack, there are some challenges that have to be considered.",
                    "label": 0
                },
                {
                    "sent": "First, we have a small size for the physical node.",
                    "label": 1
                },
                {
                    "sent": "That means that we have limited available memory, so the size of the protocol stack has to be as small as possible for this developer.",
                    "label": 1
                },
                {
                    "sent": "Can developers can provide code optimization or they can implement on reduced set of functionality's.",
                    "label": 1
                },
                {
                    "sent": "Also, because we have a lot of platform or platforms and a lot of operating systems that are used, we need to have.",
                    "label": 0
                },
                {
                    "sent": "Headset or generous networks, so we need interoperability.",
                    "label": 0
                },
                {
                    "sent": "We can provide this by using modular protocol stacks.",
                    "label": 0
                },
                {
                    "sent": "So even if we don't have, even if in a network we have more than one type of protocol stacks, we can replace some parts of one or two in order to.",
                    "label": 0
                },
                {
                    "sent": "Allow communication between the nodes so to make them compared.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "When testing the implementation of a protocol stack, there are two steps involved in the first step we have to check if the obtained functionality is actually the expected one, and then in the second in the second step we have to compute the implementation size.",
                    "label": 0
                },
                {
                    "sent": "That is the memory usage and code size in order to see if it fits on the sense or not.",
                    "label": 0
                },
                {
                    "sent": "When we compute the memory usage, three parameters has to be considered.",
                    "label": 0
                },
                {
                    "sent": "The maximum number of processes, the Maxim of size of event queue and the size of the thread stacks.",
                    "label": 1
                },
                {
                    "sent": "In case of multithreaded architectures.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "In this tables with you you can see that the protocol stack implementation that we found for all the standard that we mentioned before.",
                    "label": 0
                },
                {
                    "sent": "Since 50.4 is the base base, is used as a base for all the others or all the other standard, except for the last two we can say that all their implementation can be considered.",
                    "label": 0
                },
                {
                    "sent": "Also implementation for 50.4.",
                    "label": 0
                },
                {
                    "sent": "So the standard has the highest number, then on the 2nd place we have Zigbee.",
                    "label": 0
                },
                {
                    "sent": "As this is the one of the most used today in industry and then six lowpan it has more and more implementation since it's appeared to be the standard choice for the so called Internet of Things.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We mentioned several times the need for a small.",
                    "label": 0
                },
                {
                    "sent": "Memory requirements and here we give some concrete values.",
                    "label": 0
                },
                {
                    "sent": "For this implementation, as you can see there they need only few kilobytes or few 10s of kilobytes for both code and data, so they.",
                    "label": 0
                },
                {
                    "sent": "Usually can fit on a sense or not.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Finally, we classified the implementation of the protocol stack based on the.",
                    "label": 1
                },
                {
                    "sent": "Operating systems on which they are supported.",
                    "label": 0
                },
                {
                    "sent": "As we said, Tiny OS and Kontiki are the most used, so most of the implementation are for these two operating system.",
                    "label": 0
                },
                {
                    "sent": "But we also have for real time operating systems and also for the ones that are not very used on embedded devices such as Linux and Windows.",
                    "label": 1
                },
                {
                    "sent": "The operating system influences also the choice for the.",
                    "label": 0
                },
                {
                    "sent": "Programming languages language in which protocol stack is implemented.",
                    "label": 0
                },
                {
                    "sent": "Therefore the most used is C programming language except for Tiny OS, where all the implementations we found.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And are in SC.",
                    "label": 0
                },
                {
                    "sent": "And now the last type of middleware that can be used on a wireless.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Is a network is a virtual machine the reason why we use this is because there are a lot of platforms, hardware platforms and a lot of software that I developed for wireless sensor network and.",
                    "label": 0
                },
                {
                    "sent": "We want to provide abstraction of the hardware device from an application in order to allow the programs to run on heterogeneous platform while keeping the physical so the hardware transparent to the user.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Two types of middleware can be identified in the first type we have middle.",
                    "label": 0
                },
                {
                    "sent": "The three types of virtual machine can be identified in the first one we have middleware level virtual machine.",
                    "label": 1
                },
                {
                    "sent": "This is situated between an operating system and an application and the virtual machine can add some new capabilities to the underlying operating system.",
                    "label": 1
                },
                {
                    "sent": "For instance, it can allow multithreading on top of an event based operating system.",
                    "label": 0
                },
                {
                    "sent": "And the second category is system level virtual machine that can run without the support of without the support of an operating system.",
                    "label": 0
                },
                {
                    "sent": "That means directly on on hardware.",
                    "label": 0
                },
                {
                    "sent": "But in this case the virtual machine has to implement some operating system specific function like resource management, thread scheduling.",
                    "label": 1
                },
                {
                    "sent": "Interruption, handling, etc.",
                    "label": 0
                },
                {
                    "sent": "The advantage for this type of virtual machine is that.",
                    "label": 0
                },
                {
                    "sent": "They have more available memory since there is no.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Operating system.",
                    "label": 0
                },
                {
                    "sent": "The features that we.",
                    "label": 0
                },
                {
                    "sent": "Want to provide with the virtual machine affordability and platform independence since the application can run on that.",
                    "label": 0
                },
                {
                    "sent": "Can run on several platforms without the need for without recompilation.",
                    "label": 0
                },
                {
                    "sent": "And also maybe one of the most important feature is programming support.",
                    "label": 0
                },
                {
                    "sent": "As you know.",
                    "label": 0
                },
                {
                    "sent": "Programming a sensor node is not very easy task because developers has to deal with concurrency, modular and distributed software.",
                    "label": 1
                },
                {
                    "sent": "Because the networks are supposed to work for a long time, cases in which we have to fix some bug to reprogram or add a new functionalities to another are very likely to appear.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So we need this support provided by the virtual machine.",
                    "label": 0
                },
                {
                    "sent": "However, the users has to be aware of the fact that there is a tradeoff between the resources that are needed by a virtual machine and the services it provides.",
                    "label": 1
                },
                {
                    "sent": "On the one hand, we can reduce the distribution energy cost because the code provided by virtual machine is smaller than native code and we have a simpler process of reprogramming.",
                    "label": 1
                },
                {
                    "sent": "But on the other hand, we can we for sure introduce some additional overhead in time and memory requirements for execution and the.",
                    "label": 0
                },
                {
                    "sent": "In energy spent by interpretation of the code.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Here we have a table in which we included some virtual machines.",
                    "label": 0
                },
                {
                    "sent": "That we find we found and on the 1st on the second column we have the operating system that supports them.",
                    "label": 0
                },
                {
                    "sent": "Then we have.",
                    "label": 0
                },
                {
                    "sent": "We mentioned if the.",
                    "label": 0
                },
                {
                    "sent": "Virtual machine is application specific.",
                    "label": 0
                },
                {
                    "sent": "That means that these designs, specially for a type of application with some predefined properties, then we.",
                    "label": 0
                },
                {
                    "sent": "Have execution model for, in this case for this virtual machine all our stack based, but they can be also registered based.",
                    "label": 0
                },
                {
                    "sent": "We have listed some platforms on which they were tested and the footprint that was calculated by based on this platform.",
                    "label": 0
                },
                {
                    "sent": "Then we can see that all of them support multithreading, so multiple applications running on top of them.",
                    "label": 0
                },
                {
                    "sent": "Except for.",
                    "label": 0
                },
                {
                    "sent": "Even with style, and on the last column we have supported operating language as we can see mostly are.",
                    "label": 0
                },
                {
                    "sent": "As for the programming language, for mostly that this is Java.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Now to sum up with talk about middleware and we presented the state of the art.",
                    "label": 1
                },
                {
                    "sent": "The main features of three types of middleware that we consider necessary for wireless sensor network that is protocol stack or that can bring a lot of benefits when they are used that are.",
                    "label": 0
                },
                {
                    "sent": "Of embedded operating systems and virtual machines.",
                    "label": 1
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Thank you for your attention.",
                    "label": 0
                },
                {
                    "sent": "Have any questions?",
                    "label": 0
                }
            ]
        }
    }
}