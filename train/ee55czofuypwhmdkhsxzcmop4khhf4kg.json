{
    "id": "ee55czofuypwhmdkhsxzcmop4khhf4kg",
    "title": "A learning algorithm for multi-dimensional trees, or:learning beyond context-freeness",
    "info": {
        "author": [
            "Anna Kasprzik, University of Trier"
        ],
        "published": "Oct. 9, 2008",
        "recorded": "September 2008",
        "category": [
            "Top->Computer Science->Machine Learning"
        ]
    },
    "url": "http://videolectures.net/icgi08_kasprzik_lamdt/",
    "segmentation": [
        [
            "Trees.",
            "Contacts by.",
            "Yes, thank you.",
            "I'll present a little technical result or notational result and act."
        ],
        [
            "The biggest part of my talk will be taken by the definition of multi dimensional trees, which are trees of arbitrarily many dimensions, and then I'll shortly show that the minimally adequate teacher algorithm that you all know as elstar can be adapted to these structures as well."
        ],
        [
            "So not for the introduction it is.",
            "It is the fact that it's possible to learn context free languages via regular tree languages if you some as structural descriptions.",
            "Since it is a long known fact that the new languages of regulatory languages are precisely the context free string languages, and it has been shown by Sakakibara Sensei rat.",
            "It's possible to learn these languages.",
            "Under the minimally adequate teacher model.",
            "And while this Elstar algorithm had has then been generalized for regular tree languages throughout by Davis in her bag.",
            "And I would like to show that this map learnable class extends even further to the mildly context sensitive languages which we have been seen in the first talk also.",
            "And which are supposed to cover the same languages formed by most of the natural languages?",
            "And how do we do that?",
            "We do that via these multi dimensional trees that I'm going to define.",
            "But well, they were defined by James Rogers originally, but he defines this.",
            "This these multidimensional?",
            "She's over three domains.",
            "Not over this algebraic notion of trees as terms, which is why in order to obtain this result we it would be very handy to introduce a new term like notation for multi dimensional trees which establishes them as a direct generalization of the traditional trees in a very natural way.",
            "And with that notation we get all the known results for regular regular languages in general.",
            "Like the pumping lemma.",
            "Then my Hill Neo theorem and so on for free.",
            "And it follows from this that then we can use all finite state methods that we had before for normal trees.",
            "For these trees as well."
        ],
        [
            "Luminaries, I assume that you're all familiar with trees and the corresponding terminology.",
            "However, very shortly, the set of all trees over ranked Alphabet is defined as a small set of expressions, such as that constants are trees and everything I can build from smaller trees and the symbols of the alphabet also chase.",
            "And then we need the concept of a context which came up yesterday I think.",
            "Also we have this square.",
            "Which is a special symbol of Frank O that is a leaf label.",
            "And.",
            "A tree in which the square occurs exactly once it's called a context and set up for context, is denoted by AC Sigma.",
            "And this.",
            "Denotes tree, where this square has been substituted by a tree as.",
            "So.",
            "Um, what are multi dimensional trees?",
            "Rogers conceives the normal, normal, traditional trees as 2 dimensional structures and strings as one dimensional structures.",
            "And he generalizes from thereon.",
            "Um?",
            "He's in."
        ],
        [
            "Traditionally, the following we start with 0 dimensional trees or points.",
            "And this is a base case.",
            "And then if you want to get one dimensional tree, you allow for another dimension, you add a route in that dimension and you connect the root to all the nodes in the child structure with which in this case is just a point.",
            "And if you want to get more complex 1 dimensional trees you have to identify.",
            "For example, this route with a note in the child structure of another one dimensional tree and you get longer complex 1 dimensional trees like this.",
            "And then if you want to get 2 dimensional trees, you take a complex 1 dimensional tree you allow for now that I mentioned you had a root in that dimension and you connect the root 2 over.",
            "Notes in the child structure in the D -- 1 dimensional child structure.",
            "I'm."
        ],
        [
            "And you can continue like that, and these are supposed to be 3 dimensional trees where you have.",
            "Complex 2 dimensional child structure.",
            "A root in the third dimension and the connection to all the child.",
            "Structure nodes.",
            "Um?",
            "Yeah.",
            "And.",
            "These can also be labeled like here.",
            "Well, they could be labeled here as well, but I've just given the labels here.",
            "For example, this can be conceived as just another representation of the string ABCD.",
            "And I won't give a Rogers formal definition, as it is a bit intricate, but he defines structures over three domains, that is, sets of addresses with certain closure properties.",
            "Um?",
            "And some he also takes labels from some unranked Alphabet, and he has also defined some sort of automata for these.",
            "Trees.",
            "But we would like to express that in a more term like manner.",
            "In order to do that, we first need a new kind of alphabet.",
            "Since the notion of trees as terms is based on the notion of an alphabet in the symbols in it and their rank.",
            "So we will use what I call a."
        ],
        [
            "D Dimensional tree labeling alphabet, where each symbol is now associated with at least one but finitely many unlabeled B -- 1 dimensional trees.",
            "Which specify how the subtrees should be arranged.",
            "So.",
            "Well, this Association takes over the role of rank, so to speak, and now every symbol can be indexed with such a structure.",
            "Of course, later on we we will write T and draw a tree.",
            "If yeah.",
            "Yes, I will show you a picture for your intuition in a minute after the formal definition of D dimensional tree languages and well now you do note the alphabet like this.",
            "You have Sigma, you have D, which is the number of dimensions and T. Well, this is a set of symbols associated with T."
        ],
        [
            "So the definition of multi dimensional trees.",
            "We have a space case we have set of constant symbols and then the set of all D dimensional trees can be defined as follows.",
            "Epsilon is the empty tree and then we know that.",
            "The elements of this alphabet are supposed to be 0 dimensional trees.",
            "And.",
            "Then for specific D. All the constants are D dimensional trees and then all the trees I can built from smaller trees and the symbols in the alphabet in the following manner.",
            "You have a root labeled by the symbol F. And then you have the subtrees.",
            "He wanted TN, which are rooted breakfast at the nodes of T, which is the admissible child structure.",
            "An context can be defined as before, where square is now a symbol is still a leaf labeling symbol associated with the empty tree.",
            "So I'll just show a picture because this is a bit."
        ],
        [
            "Hope located OK we are considering.",
            "Siri 3 dimensional trees.",
            "And if it's associated with T, you can see T here.",
            "You have a root labeled with F and the admissible child structure.",
            "You can see here.",
            "And subtrees this a bit abstract representations of smaller complex 3 dimensional trees rooted like that.",
            "Breakfast I haven't done a T2 and T3 for lack of space.",
            "Attached breakfast at these nodes.",
            "Um?",
            "Why breath first?",
            "It doesn't matter.",
            "Actually, you just have to fix in order to in order to write that down linearly.",
            "So.",
            "Yeah, and a context would be if you ignore the subtrees.",
            "One of these nodes, which are now leaves in the third dimension would be labeled by square, and you could substitute the square by for example, such a tree.",
            "So if you think about it, while for the traditional trees we specify the number of direct sub trees and a linear ordering for them, that is, the subtrees are somehow organized in a string like structure.",
            "For three dimensions the subtrees are organized in a 2 dimensional structure and so on, so it's.",
            "In fact, it's a very simple generalization, actually.",
            "And, um.",
            "We can still talk about the notion of rank, which is just linear number of subtrees and that is why most results for regular languages can be read as applying directly to these structures as well.",
            "For example, the Myhill Nerode theorem and the pumping lemma.",
            "And this new definition also enables us to represent tomata for multi dimensional trees.",
            "As a direct generalization of classical finite state tree automata.",
            "Anne, I assume that you're familiar with the concept of classical treatment also.",
            "I hope so, so I've just marked the differences."
        ],
        [
            "In blue.",
            "Well, we still have a couple and an input Alphabet Sigma, which is now a D dimensional tree.",
            "Labeling alphabet, finite set of states instead of accepting States and a transition function Delta.",
            "Which instead of having just a string.",
            "Specifying which states the subtree should have.",
            "It has now a D -- 1 dimensional structure specifying also which.",
            "States the trees which are attached at these nodes should have.",
            "And we can again extend this Delta.",
            "Two whole trees instead of just.",
            "One symbol and its substructure.",
            "And.",
            "Well, as I said, with these adaptive definitions a lot of results carry over directly to multi dimensional trees as well.",
            "And especially important for us today is the theorem of Myhill nerode.",
            "Since the Elstar algorithm uses that.",
            "The theorem."
        ],
        [
            "And it looks almost like before the equivalence relation in which that theorem is based can be formulated exactly like before.",
            "Also, because we just took over the notion of subtrees.",
            "And the notion of context as well, and consequently it applies to multi dimensional trees as well, just in the form.",
            "It is usually given.",
            "And Fortunately for us, it follows from this that there exists exactly 1 Canonical minimal automaton for every 3 dimensional recognizable tree language.",
            "Hand.",
            "Yeah, one other thing we have to do is to re establish the connection between multi dimensional trees and the string languages associated with and that is the yield language we have to redefine.",
            "The yield definition yield function for this new notation.",
            "And we have to think for more than two dimensions.",
            "We have to think a bit about what taking the yield means for.",
            "For this kind of structure and."
        ],
        [
            "Rogers formulates like this, that the direct yield of D dimensional tree is a projection on the next lower level that if if we have a three dimension tree like that first thing we can do is construct a 2 dimensional trefin it from it.",
            "That is, squeeze it down on plane, so to speak.",
            "And then if you have a 2 dimensional tree, you can read off the string of the leaves that is in order to get.",
            "Build for high dimensional tree.",
            "You have to take several steps taking away one dimension at a time.",
            "And actually there is some ambiguity involved, but if you specify special splitting points in advance, you can get in.",
            "Unambiguous yield for every dimensional tree.",
            "And you can find the formal definition in the proceedings.",
            "And it is well known that the yield language languages of the two dimensional regular tree languages, the context free string languages and the yield languages of.",
            "3 Dimensional Tree languages for the greater than two or lie between the context free in the context sensitive string languages in the class of the mildly context sensitive languages which we have seen before.",
            "Um?",
            "And they form a nested hierarchy.",
            "Proper nested hierarchy.",
            "And after all these formal preparations, we can now start with Part 2 and show that the learning algorithm we already have, namely L star.",
            "Can be applied to multi dimensional tree languages as well, very easily."
        ],
        [
            "So I haven't got time and you probably all know the minimally adequate teacher model.",
            "I'll just go very quickly with the definitions, but.",
            "Which I adapted to multi dimensional trees, but essentially what I did was always just at the default, the number of dimensions and the T for the admissible child structure.",
            "So we have a line and a teacher and the teacher can answer membership and equivalence queries and give counterexamples, and the learner maintains this kind of observation table with certain properties, which are these two properties.",
            "Portrays.",
            "And.",
            "Users not able to keep track of the information it has obtained so far and where the rows are labeled by subtrees.",
            "Representing candidates for the states of the minimal automaton, we're trying to infer, and the columns by context with which you can prove that.",
            "Two candidates do indeed belong to different equivalence classes.",
            "Anne yeah."
        ],
        [
            "Then an observation table is closed if for the moment we cannot find any more candidates for States and consistent if two such candidates belong to the same equivalence class to behave in the same manner if we use them as direct subtrees.",
            "And when these two properties are fulfilled, you can derive a minimal automaton from from the table.",
            "And this also stays exactly the same for multi dimensional trees with these notational modifications which I have marked in blue.",
            "And I don't know, I will know now go quickly through the algorithm by Davison took back and just show that after the formal definitions that I've given, we can.",
            "Will it we don't have to change the algorithm hardly at all for the notation.",
            "To be applicable to multi dimensional trees as well and modifications, you can still see."
        ],
        [
            "So this algorithm versus the overall routine.",
            "Which checks for closeness every time and if it's close it checks for consistency and if it's close and consistent, it shakes.",
            "It asks in an equivalence query and deals with the counterexample it receives.",
            "And well, this is a subroutine checking for closure where the candidates are now D dimensional subtrees instead of normal subtrees.",
            "So."
        ],
        [
            "And this is a routine checking for consistency, where now the context D dimensional context.",
            "But the rest stays just the same.",
            "Anne."
        ],
        [
            "Well, this procedure derives D dimensional trade automaton from the table and ask the teacher for a counterexample.",
            "That is, a tree wrongly classified by that tomaten.",
            "And if the count example is unnecessary larger this is proved by this procedure extract which is an amelioration.",
            "Introduced by Davison took back, which also works for multi dimensional trees.",
            "Because we have taken over the notion of subtree just as before and again we have just added the DS and.",
            "Tease.",
            "And.",
            "Yes."
        ],
        [
            "This learner returns the unique minimal automaton for the D Dimensional tree language.",
            "We are trying to infer after less than a fixed number of loop executions, where I is the index of the language we are trying to infer.",
            "And you can see the proceedings for the proof, but the proof is exactly same proof As for 2 dimensional tree languages.",
            "Ask given by Davison took back, and so I've shown that the algorithm can be used in almost unchanged form with the help of that new notations.",
            "For multi dimensional trees, so the bottom line of my talk is just if soccer Kebara says we can learn context free string languages via regular tree languages as structural descriptions.",
            "I say we can even learn a class beyond that, namely mildly context sensitive string languages.",
            "By using multi dimensional tree trees as structural descriptions.",
            "And why could that be interesting?",
            "That could be interesting, because first of all I find it important for theoretical computer scientists in general to know that if they have formulated a finite state method whatsoever for normal regulatory languages, it can be very easily extended to a class.",
            "Of string languages.",
            "Even beyond context freeness.",
            "Um?",
            "And Secondly, this could also be interesting for linguists, since as I've mentioned, the yields of these multidimensional tree languages are multi context sensitive string languages.",
            "And it has been shown that some linguistic phenomena, also linguistic formalisms such as tree adjoining grammar, which also generalize.",
            "A trees which have multi context sensitive strings as the yield languages.",
            "Can be handled more efficiently by our three or even 4 dimensional trees.",
            "So that perhaps over this channel we could also learn more about the learnability of natural languages, who knows?"
        ],
        [
            "Well.",
            "That's it, thank you.",
            "Any questions?",
            "Or coffee.",
            "Webcams freeze how do you storage everything with the with the immense amount please at least graph grammar.",
            "Not yet, but I'm trying to generalize upwards like from strings to more complex object and I haven't got to.",
            "Destructor.",
            "Replacement I think they died.",
            "Not yet, but.",
            "Yeah please.",
            "I think.",
            "One of the problems is that there's not really a decent notion of.",
            "Tom is in progress.",
            "Only restricted cases.",
            "You can find some.",
            "So these types of methods they don't necessarily carry over to the graphs.",
            "If you have the full power of graphs, there's all kinds of stuff from.",
            "From the classical string language theory, that does not necessarily carry over so much more complex.",
            "Another question in the in the case of Socrates by his work that he employed 3 languages pressurized Conversely grammar.",
            "Oh yeah, normal form I. I need that.",
            "Not every set of trees, but only zero reversible trees in order.",
            "Yes, yeah.",
            "So in order to characterize and subclasses with multi dimensional freeze, I think you don't need that anymore, since since the general case has been shown for regular tree languages by Davison Turk Berg.",
            "And they don't use that condition anymore, so.",
            "Addition, but they they characterize exactly the string class.",
            "Yeah, I think so.",
            "Yes."
        ],
        [
            "Strange too, I knew flexicution's of complexity in theorem 6.",
            "The index means basically you want hoping to be polynomial with.",
            "To be rival to an immigration algorithm, which I index is going to be a better number of the grammar or of the Thomas.",
            "And in the immigration?",
            "Yeah, that's a good point actually.",
            "Davison Hook bad news."
        ],
        [
            "This I as a termination criterion, but in their paper they prove that they don't really need that that it's equivalent to just checking if the equivalence queries answered by yes.",
            "So.",
            "They just found it handier too.",
            "Formulate this condition, but it's really not necessary necessary to know I.",
            "Something that is extremely expensive."
        ],
        [
            "Rindex winn-dixie is as far as I thought, the next is the number of the grammar old position in the numeration.",
            "No, the index is just the number of equivalence classes.",
            "Or coffee."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Trees.",
                    "label": 0
                },
                {
                    "sent": "Contacts by.",
                    "label": 0
                },
                {
                    "sent": "Yes, thank you.",
                    "label": 0
                },
                {
                    "sent": "I'll present a little technical result or notational result and act.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The biggest part of my talk will be taken by the definition of multi dimensional trees, which are trees of arbitrarily many dimensions, and then I'll shortly show that the minimally adequate teacher algorithm that you all know as elstar can be adapted to these structures as well.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So not for the introduction it is.",
                    "label": 1
                },
                {
                    "sent": "It is the fact that it's possible to learn context free languages via regular tree languages if you some as structural descriptions.",
                    "label": 1
                },
                {
                    "sent": "Since it is a long known fact that the new languages of regulatory languages are precisely the context free string languages, and it has been shown by Sakakibara Sensei rat.",
                    "label": 0
                },
                {
                    "sent": "It's possible to learn these languages.",
                    "label": 0
                },
                {
                    "sent": "Under the minimally adequate teacher model.",
                    "label": 0
                },
                {
                    "sent": "And while this Elstar algorithm had has then been generalized for regular tree languages throughout by Davis in her bag.",
                    "label": 1
                },
                {
                    "sent": "And I would like to show that this map learnable class extends even further to the mildly context sensitive languages which we have been seen in the first talk also.",
                    "label": 1
                },
                {
                    "sent": "And which are supposed to cover the same languages formed by most of the natural languages?",
                    "label": 0
                },
                {
                    "sent": "And how do we do that?",
                    "label": 0
                },
                {
                    "sent": "We do that via these multi dimensional trees that I'm going to define.",
                    "label": 0
                },
                {
                    "sent": "But well, they were defined by James Rogers originally, but he defines this.",
                    "label": 0
                },
                {
                    "sent": "This these multidimensional?",
                    "label": 0
                },
                {
                    "sent": "She's over three domains.",
                    "label": 0
                },
                {
                    "sent": "Not over this algebraic notion of trees as terms, which is why in order to obtain this result we it would be very handy to introduce a new term like notation for multi dimensional trees which establishes them as a direct generalization of the traditional trees in a very natural way.",
                    "label": 1
                },
                {
                    "sent": "And with that notation we get all the known results for regular regular languages in general.",
                    "label": 0
                },
                {
                    "sent": "Like the pumping lemma.",
                    "label": 0
                },
                {
                    "sent": "Then my Hill Neo theorem and so on for free.",
                    "label": 0
                },
                {
                    "sent": "And it follows from this that then we can use all finite state methods that we had before for normal trees.",
                    "label": 0
                },
                {
                    "sent": "For these trees as well.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Luminaries, I assume that you're all familiar with trees and the corresponding terminology.",
                    "label": 0
                },
                {
                    "sent": "However, very shortly, the set of all trees over ranked Alphabet is defined as a small set of expressions, such as that constants are trees and everything I can build from smaller trees and the symbols of the alphabet also chase.",
                    "label": 1
                },
                {
                    "sent": "And then we need the concept of a context which came up yesterday I think.",
                    "label": 0
                },
                {
                    "sent": "Also we have this square.",
                    "label": 1
                },
                {
                    "sent": "Which is a special symbol of Frank O that is a leaf label.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 1
                },
                {
                    "sent": "A tree in which the square occurs exactly once it's called a context and set up for context, is denoted by AC Sigma.",
                    "label": 0
                },
                {
                    "sent": "And this.",
                    "label": 0
                },
                {
                    "sent": "Denotes tree, where this square has been substituted by a tree as.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "Um, what are multi dimensional trees?",
                    "label": 0
                },
                {
                    "sent": "Rogers conceives the normal, normal, traditional trees as 2 dimensional structures and strings as one dimensional structures.",
                    "label": 0
                },
                {
                    "sent": "And he generalizes from thereon.",
                    "label": 0
                },
                {
                    "sent": "Um?",
                    "label": 0
                },
                {
                    "sent": "He's in.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Traditionally, the following we start with 0 dimensional trees or points.",
                    "label": 0
                },
                {
                    "sent": "And this is a base case.",
                    "label": 0
                },
                {
                    "sent": "And then if you want to get one dimensional tree, you allow for another dimension, you add a route in that dimension and you connect the root to all the nodes in the child structure with which in this case is just a point.",
                    "label": 0
                },
                {
                    "sent": "And if you want to get more complex 1 dimensional trees you have to identify.",
                    "label": 0
                },
                {
                    "sent": "For example, this route with a note in the child structure of another one dimensional tree and you get longer complex 1 dimensional trees like this.",
                    "label": 0
                },
                {
                    "sent": "And then if you want to get 2 dimensional trees, you take a complex 1 dimensional tree you allow for now that I mentioned you had a root in that dimension and you connect the root 2 over.",
                    "label": 0
                },
                {
                    "sent": "Notes in the child structure in the D -- 1 dimensional child structure.",
                    "label": 0
                },
                {
                    "sent": "I'm.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And you can continue like that, and these are supposed to be 3 dimensional trees where you have.",
                    "label": 0
                },
                {
                    "sent": "Complex 2 dimensional child structure.",
                    "label": 0
                },
                {
                    "sent": "A root in the third dimension and the connection to all the child.",
                    "label": 0
                },
                {
                    "sent": "Structure nodes.",
                    "label": 0
                },
                {
                    "sent": "Um?",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "These can also be labeled like here.",
                    "label": 0
                },
                {
                    "sent": "Well, they could be labeled here as well, but I've just given the labels here.",
                    "label": 0
                },
                {
                    "sent": "For example, this can be conceived as just another representation of the string ABCD.",
                    "label": 0
                },
                {
                    "sent": "And I won't give a Rogers formal definition, as it is a bit intricate, but he defines structures over three domains, that is, sets of addresses with certain closure properties.",
                    "label": 0
                },
                {
                    "sent": "Um?",
                    "label": 0
                },
                {
                    "sent": "And some he also takes labels from some unranked Alphabet, and he has also defined some sort of automata for these.",
                    "label": 0
                },
                {
                    "sent": "Trees.",
                    "label": 0
                },
                {
                    "sent": "But we would like to express that in a more term like manner.",
                    "label": 0
                },
                {
                    "sent": "In order to do that, we first need a new kind of alphabet.",
                    "label": 0
                },
                {
                    "sent": "Since the notion of trees as terms is based on the notion of an alphabet in the symbols in it and their rank.",
                    "label": 0
                },
                {
                    "sent": "So we will use what I call a.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "D Dimensional tree labeling alphabet, where each symbol is now associated with at least one but finitely many unlabeled B -- 1 dimensional trees.",
                    "label": 1
                },
                {
                    "sent": "Which specify how the subtrees should be arranged.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "Well, this Association takes over the role of rank, so to speak, and now every symbol can be indexed with such a structure.",
                    "label": 0
                },
                {
                    "sent": "Of course, later on we we will write T and draw a tree.",
                    "label": 0
                },
                {
                    "sent": "If yeah.",
                    "label": 0
                },
                {
                    "sent": "Yes, I will show you a picture for your intuition in a minute after the formal definition of D dimensional tree languages and well now you do note the alphabet like this.",
                    "label": 1
                },
                {
                    "sent": "You have Sigma, you have D, which is the number of dimensions and T. Well, this is a set of symbols associated with T.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So the definition of multi dimensional trees.",
                    "label": 0
                },
                {
                    "sent": "We have a space case we have set of constant symbols and then the set of all D dimensional trees can be defined as follows.",
                    "label": 1
                },
                {
                    "sent": "Epsilon is the empty tree and then we know that.",
                    "label": 0
                },
                {
                    "sent": "The elements of this alphabet are supposed to be 0 dimensional trees.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "Then for specific D. All the constants are D dimensional trees and then all the trees I can built from smaller trees and the symbols in the alphabet in the following manner.",
                    "label": 0
                },
                {
                    "sent": "You have a root labeled by the symbol F. And then you have the subtrees.",
                    "label": 1
                },
                {
                    "sent": "He wanted TN, which are rooted breakfast at the nodes of T, which is the admissible child structure.",
                    "label": 0
                },
                {
                    "sent": "An context can be defined as before, where square is now a symbol is still a leaf labeling symbol associated with the empty tree.",
                    "label": 0
                },
                {
                    "sent": "So I'll just show a picture because this is a bit.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Hope located OK we are considering.",
                    "label": 0
                },
                {
                    "sent": "Siri 3 dimensional trees.",
                    "label": 0
                },
                {
                    "sent": "And if it's associated with T, you can see T here.",
                    "label": 0
                },
                {
                    "sent": "You have a root labeled with F and the admissible child structure.",
                    "label": 0
                },
                {
                    "sent": "You can see here.",
                    "label": 0
                },
                {
                    "sent": "And subtrees this a bit abstract representations of smaller complex 3 dimensional trees rooted like that.",
                    "label": 0
                },
                {
                    "sent": "Breakfast I haven't done a T2 and T3 for lack of space.",
                    "label": 0
                },
                {
                    "sent": "Attached breakfast at these nodes.",
                    "label": 0
                },
                {
                    "sent": "Um?",
                    "label": 0
                },
                {
                    "sent": "Why breath first?",
                    "label": 0
                },
                {
                    "sent": "It doesn't matter.",
                    "label": 0
                },
                {
                    "sent": "Actually, you just have to fix in order to in order to write that down linearly.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "Yeah, and a context would be if you ignore the subtrees.",
                    "label": 0
                },
                {
                    "sent": "One of these nodes, which are now leaves in the third dimension would be labeled by square, and you could substitute the square by for example, such a tree.",
                    "label": 0
                },
                {
                    "sent": "So if you think about it, while for the traditional trees we specify the number of direct sub trees and a linear ordering for them, that is, the subtrees are somehow organized in a string like structure.",
                    "label": 0
                },
                {
                    "sent": "For three dimensions the subtrees are organized in a 2 dimensional structure and so on, so it's.",
                    "label": 0
                },
                {
                    "sent": "In fact, it's a very simple generalization, actually.",
                    "label": 0
                },
                {
                    "sent": "And, um.",
                    "label": 0
                },
                {
                    "sent": "We can still talk about the notion of rank, which is just linear number of subtrees and that is why most results for regular languages can be read as applying directly to these structures as well.",
                    "label": 0
                },
                {
                    "sent": "For example, the Myhill Nerode theorem and the pumping lemma.",
                    "label": 0
                },
                {
                    "sent": "And this new definition also enables us to represent tomata for multi dimensional trees.",
                    "label": 0
                },
                {
                    "sent": "As a direct generalization of classical finite state tree automata.",
                    "label": 0
                },
                {
                    "sent": "Anne, I assume that you're familiar with the concept of classical treatment also.",
                    "label": 0
                },
                {
                    "sent": "I hope so, so I've just marked the differences.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "In blue.",
                    "label": 0
                },
                {
                    "sent": "Well, we still have a couple and an input Alphabet Sigma, which is now a D dimensional tree.",
                    "label": 0
                },
                {
                    "sent": "Labeling alphabet, finite set of states instead of accepting States and a transition function Delta.",
                    "label": 1
                },
                {
                    "sent": "Which instead of having just a string.",
                    "label": 0
                },
                {
                    "sent": "Specifying which states the subtree should have.",
                    "label": 0
                },
                {
                    "sent": "It has now a D -- 1 dimensional structure specifying also which.",
                    "label": 0
                },
                {
                    "sent": "States the trees which are attached at these nodes should have.",
                    "label": 0
                },
                {
                    "sent": "And we can again extend this Delta.",
                    "label": 0
                },
                {
                    "sent": "Two whole trees instead of just.",
                    "label": 0
                },
                {
                    "sent": "One symbol and its substructure.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "Well, as I said, with these adaptive definitions a lot of results carry over directly to multi dimensional trees as well.",
                    "label": 0
                },
                {
                    "sent": "And especially important for us today is the theorem of Myhill nerode.",
                    "label": 0
                },
                {
                    "sent": "Since the Elstar algorithm uses that.",
                    "label": 0
                },
                {
                    "sent": "The theorem.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And it looks almost like before the equivalence relation in which that theorem is based can be formulated exactly like before.",
                    "label": 0
                },
                {
                    "sent": "Also, because we just took over the notion of subtrees.",
                    "label": 0
                },
                {
                    "sent": "And the notion of context as well, and consequently it applies to multi dimensional trees as well, just in the form.",
                    "label": 0
                },
                {
                    "sent": "It is usually given.",
                    "label": 0
                },
                {
                    "sent": "And Fortunately for us, it follows from this that there exists exactly 1 Canonical minimal automaton for every 3 dimensional recognizable tree language.",
                    "label": 0
                },
                {
                    "sent": "Hand.",
                    "label": 0
                },
                {
                    "sent": "Yeah, one other thing we have to do is to re establish the connection between multi dimensional trees and the string languages associated with and that is the yield language we have to redefine.",
                    "label": 0
                },
                {
                    "sent": "The yield definition yield function for this new notation.",
                    "label": 0
                },
                {
                    "sent": "And we have to think for more than two dimensions.",
                    "label": 0
                },
                {
                    "sent": "We have to think a bit about what taking the yield means for.",
                    "label": 0
                },
                {
                    "sent": "For this kind of structure and.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Rogers formulates like this, that the direct yield of D dimensional tree is a projection on the next lower level that if if we have a three dimension tree like that first thing we can do is construct a 2 dimensional trefin it from it.",
                    "label": 1
                },
                {
                    "sent": "That is, squeeze it down on plane, so to speak.",
                    "label": 0
                },
                {
                    "sent": "And then if you have a 2 dimensional tree, you can read off the string of the leaves that is in order to get.",
                    "label": 0
                },
                {
                    "sent": "Build for high dimensional tree.",
                    "label": 0
                },
                {
                    "sent": "You have to take several steps taking away one dimension at a time.",
                    "label": 0
                },
                {
                    "sent": "And actually there is some ambiguity involved, but if you specify special splitting points in advance, you can get in.",
                    "label": 0
                },
                {
                    "sent": "Unambiguous yield for every dimensional tree.",
                    "label": 0
                },
                {
                    "sent": "And you can find the formal definition in the proceedings.",
                    "label": 0
                },
                {
                    "sent": "And it is well known that the yield language languages of the two dimensional regular tree languages, the context free string languages and the yield languages of.",
                    "label": 0
                },
                {
                    "sent": "3 Dimensional Tree languages for the greater than two or lie between the context free in the context sensitive string languages in the class of the mildly context sensitive languages which we have seen before.",
                    "label": 0
                },
                {
                    "sent": "Um?",
                    "label": 0
                },
                {
                    "sent": "And they form a nested hierarchy.",
                    "label": 0
                },
                {
                    "sent": "Proper nested hierarchy.",
                    "label": 0
                },
                {
                    "sent": "And after all these formal preparations, we can now start with Part 2 and show that the learning algorithm we already have, namely L star.",
                    "label": 0
                },
                {
                    "sent": "Can be applied to multi dimensional tree languages as well, very easily.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So I haven't got time and you probably all know the minimally adequate teacher model.",
                    "label": 0
                },
                {
                    "sent": "I'll just go very quickly with the definitions, but.",
                    "label": 0
                },
                {
                    "sent": "Which I adapted to multi dimensional trees, but essentially what I did was always just at the default, the number of dimensions and the T for the admissible child structure.",
                    "label": 0
                },
                {
                    "sent": "So we have a line and a teacher and the teacher can answer membership and equivalence queries and give counterexamples, and the learner maintains this kind of observation table with certain properties, which are these two properties.",
                    "label": 1
                },
                {
                    "sent": "Portrays.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "Users not able to keep track of the information it has obtained so far and where the rows are labeled by subtrees.",
                    "label": 0
                },
                {
                    "sent": "Representing candidates for the states of the minimal automaton, we're trying to infer, and the columns by context with which you can prove that.",
                    "label": 0
                },
                {
                    "sent": "Two candidates do indeed belong to different equivalence classes.",
                    "label": 0
                },
                {
                    "sent": "Anne yeah.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Then an observation table is closed if for the moment we cannot find any more candidates for States and consistent if two such candidates belong to the same equivalence class to behave in the same manner if we use them as direct subtrees.",
                    "label": 1
                },
                {
                    "sent": "And when these two properties are fulfilled, you can derive a minimal automaton from from the table.",
                    "label": 0
                },
                {
                    "sent": "And this also stays exactly the same for multi dimensional trees with these notational modifications which I have marked in blue.",
                    "label": 0
                },
                {
                    "sent": "And I don't know, I will know now go quickly through the algorithm by Davison took back and just show that after the formal definitions that I've given, we can.",
                    "label": 0
                },
                {
                    "sent": "Will it we don't have to change the algorithm hardly at all for the notation.",
                    "label": 0
                },
                {
                    "sent": "To be applicable to multi dimensional trees as well and modifications, you can still see.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So this algorithm versus the overall routine.",
                    "label": 0
                },
                {
                    "sent": "Which checks for closeness every time and if it's close it checks for consistency and if it's close and consistent, it shakes.",
                    "label": 0
                },
                {
                    "sent": "It asks in an equivalence query and deals with the counterexample it receives.",
                    "label": 0
                },
                {
                    "sent": "And well, this is a subroutine checking for closure where the candidates are now D dimensional subtrees instead of normal subtrees.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And this is a routine checking for consistency, where now the context D dimensional context.",
                    "label": 0
                },
                {
                    "sent": "But the rest stays just the same.",
                    "label": 0
                },
                {
                    "sent": "Anne.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Well, this procedure derives D dimensional trade automaton from the table and ask the teacher for a counterexample.",
                    "label": 0
                },
                {
                    "sent": "That is, a tree wrongly classified by that tomaten.",
                    "label": 0
                },
                {
                    "sent": "And if the count example is unnecessary larger this is proved by this procedure extract which is an amelioration.",
                    "label": 0
                },
                {
                    "sent": "Introduced by Davison took back, which also works for multi dimensional trees.",
                    "label": 0
                },
                {
                    "sent": "Because we have taken over the notion of subtree just as before and again we have just added the DS and.",
                    "label": 0
                },
                {
                    "sent": "Tease.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "Yes.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "This learner returns the unique minimal automaton for the D Dimensional tree language.",
                    "label": 1
                },
                {
                    "sent": "We are trying to infer after less than a fixed number of loop executions, where I is the index of the language we are trying to infer.",
                    "label": 0
                },
                {
                    "sent": "And you can see the proceedings for the proof, but the proof is exactly same proof As for 2 dimensional tree languages.",
                    "label": 0
                },
                {
                    "sent": "Ask given by Davison took back, and so I've shown that the algorithm can be used in almost unchanged form with the help of that new notations.",
                    "label": 1
                },
                {
                    "sent": "For multi dimensional trees, so the bottom line of my talk is just if soccer Kebara says we can learn context free string languages via regular tree languages as structural descriptions.",
                    "label": 0
                },
                {
                    "sent": "I say we can even learn a class beyond that, namely mildly context sensitive string languages.",
                    "label": 0
                },
                {
                    "sent": "By using multi dimensional tree trees as structural descriptions.",
                    "label": 0
                },
                {
                    "sent": "And why could that be interesting?",
                    "label": 0
                },
                {
                    "sent": "That could be interesting, because first of all I find it important for theoretical computer scientists in general to know that if they have formulated a finite state method whatsoever for normal regulatory languages, it can be very easily extended to a class.",
                    "label": 0
                },
                {
                    "sent": "Of string languages.",
                    "label": 0
                },
                {
                    "sent": "Even beyond context freeness.",
                    "label": 0
                },
                {
                    "sent": "Um?",
                    "label": 0
                },
                {
                    "sent": "And Secondly, this could also be interesting for linguists, since as I've mentioned, the yields of these multidimensional tree languages are multi context sensitive string languages.",
                    "label": 0
                },
                {
                    "sent": "And it has been shown that some linguistic phenomena, also linguistic formalisms such as tree adjoining grammar, which also generalize.",
                    "label": 0
                },
                {
                    "sent": "A trees which have multi context sensitive strings as the yield languages.",
                    "label": 0
                },
                {
                    "sent": "Can be handled more efficiently by our three or even 4 dimensional trees.",
                    "label": 0
                },
                {
                    "sent": "So that perhaps over this channel we could also learn more about the learnability of natural languages, who knows?",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Well.",
                    "label": 0
                },
                {
                    "sent": "That's it, thank you.",
                    "label": 0
                },
                {
                    "sent": "Any questions?",
                    "label": 0
                },
                {
                    "sent": "Or coffee.",
                    "label": 0
                },
                {
                    "sent": "Webcams freeze how do you storage everything with the with the immense amount please at least graph grammar.",
                    "label": 0
                },
                {
                    "sent": "Not yet, but I'm trying to generalize upwards like from strings to more complex object and I haven't got to.",
                    "label": 0
                },
                {
                    "sent": "Destructor.",
                    "label": 0
                },
                {
                    "sent": "Replacement I think they died.",
                    "label": 0
                },
                {
                    "sent": "Not yet, but.",
                    "label": 0
                },
                {
                    "sent": "Yeah please.",
                    "label": 0
                },
                {
                    "sent": "I think.",
                    "label": 0
                },
                {
                    "sent": "One of the problems is that there's not really a decent notion of.",
                    "label": 0
                },
                {
                    "sent": "Tom is in progress.",
                    "label": 0
                },
                {
                    "sent": "Only restricted cases.",
                    "label": 0
                },
                {
                    "sent": "You can find some.",
                    "label": 0
                },
                {
                    "sent": "So these types of methods they don't necessarily carry over to the graphs.",
                    "label": 0
                },
                {
                    "sent": "If you have the full power of graphs, there's all kinds of stuff from.",
                    "label": 0
                },
                {
                    "sent": "From the classical string language theory, that does not necessarily carry over so much more complex.",
                    "label": 0
                },
                {
                    "sent": "Another question in the in the case of Socrates by his work that he employed 3 languages pressurized Conversely grammar.",
                    "label": 0
                },
                {
                    "sent": "Oh yeah, normal form I. I need that.",
                    "label": 0
                },
                {
                    "sent": "Not every set of trees, but only zero reversible trees in order.",
                    "label": 0
                },
                {
                    "sent": "Yes, yeah.",
                    "label": 0
                },
                {
                    "sent": "So in order to characterize and subclasses with multi dimensional freeze, I think you don't need that anymore, since since the general case has been shown for regular tree languages by Davison Turk Berg.",
                    "label": 0
                },
                {
                    "sent": "And they don't use that condition anymore, so.",
                    "label": 0
                },
                {
                    "sent": "Addition, but they they characterize exactly the string class.",
                    "label": 0
                },
                {
                    "sent": "Yeah, I think so.",
                    "label": 0
                },
                {
                    "sent": "Yes.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Strange too, I knew flexicution's of complexity in theorem 6.",
                    "label": 0
                },
                {
                    "sent": "The index means basically you want hoping to be polynomial with.",
                    "label": 0
                },
                {
                    "sent": "To be rival to an immigration algorithm, which I index is going to be a better number of the grammar or of the Thomas.",
                    "label": 0
                },
                {
                    "sent": "And in the immigration?",
                    "label": 0
                },
                {
                    "sent": "Yeah, that's a good point actually.",
                    "label": 0
                },
                {
                    "sent": "Davison Hook bad news.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This I as a termination criterion, but in their paper they prove that they don't really need that that it's equivalent to just checking if the equivalence queries answered by yes.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "They just found it handier too.",
                    "label": 0
                },
                {
                    "sent": "Formulate this condition, but it's really not necessary necessary to know I.",
                    "label": 0
                },
                {
                    "sent": "Something that is extremely expensive.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Rindex winn-dixie is as far as I thought, the next is the number of the grammar old position in the numeration.",
                    "label": 0
                },
                {
                    "sent": "No, the index is just the number of equivalence classes.",
                    "label": 0
                },
                {
                    "sent": "Or coffee.",
                    "label": 0
                }
            ]
        }
    }
}