{
    "id": "wydm7rwkn4x6ajmin7jn5zwydlt5dja4",
    "title": "An Experimental Comparison of RDF Data Management Approaches in a SPARQL Benchmark Scenario",
    "info": {
        "author": [
            "Michael Schmidt, University of Freiburg"
        ],
        "published": "Nov. 24, 2008",
        "recorded": "October 2008",
        "category": [
            "Top->Computer Science->Semantic Web->RDF - Resource Description Framework"
        ]
    },
    "url": "http://videolectures.net/iswc08_schmidt_ecrdf/",
    "segmentation": [
        [
            "OK, so.",
            "Today I'm going to talk about next perimental comparison of RDF data management approaches in Sparkle benchmark scenario and this is joint work with Thomas on Norbert Cushioning and Professor Glaucine from Freiburg University and Kristof Pinker.",
            "From MPC infomedia.",
            "So first and would you waiting?",
            "Why did do we want to perform such?"
        ],
        [
            "Experimental comparison so in the past it has been repeatedly observed that the officient evaluation of sparklers and nontrivial task, so from a theoretical point of view, it was a nice receipt paper two years ago would show that the evaluation of sparkless piece based complete.",
            "And we will her talk about this later in the session where they showed that Sparkle has basically the same expressiveness as relational algebras with relationally complete from a more practical POV.",
            "It's Diame genus data format of sparkle that poses of RF that poses a severe bottleneck for performs, so not everything is taught in triples.",
            "There is no clustering on the data by default.",
            "And in the past, several optimization approaches have been made, but they typically use their own, often specific experiments which are laid out to the specific scenario.",
            "So what we wanted to do, we wanted to compare evaluation approaches in a more general framework that covers different operator constellations of sparkle and.",
            "A rich set of constructs."
        ],
        [
            "And in the first part of this talk I present the benchmark framework that we have designed called Sparkle Performance Benchmark SP2 Bench, which consists of data generator that allows us to create arbitrarily large RDF documents and a set of benchmark queries.",
            "On top of these documents.",
            "And these queries have been designed as said before, to post various challenges to sparkle.",
            "Engines will come back to this is you later and the benchmark is also available online and ready to use format if somebody wants to benchmark their their own."
        ],
        [
            "Approaches.",
            "In the second part of the talk I present the RDF data management approaches that we we have.",
            "Test I. Charlie sketched the key ideas of these approaches and then in the third part I present our experimental results and there are several new findings that that we have achieved.",
            "For example, we show limitations of existing evaluation approaches, and in particular we show that there's a see where gap to native relational data processing still in spa."
        ],
        [
            "So first the Sparkle Performance benchmark framework.",
            "So as a domain for this framework, we have chosen the DLP scenario.",
            "DLP is scientific bibliographic database which contains information about articles, journals, proceedings that have appeared in the database, and more general.",
            "Also in the computer science community.",
            "In the last years, and we argue that Develped fits the philosophy behind RDF.",
            "Data formats in several ways, and this was also a reason why we have chosen this as our domain.",
            "So first, RDF has originally been designed for representing meter data and do we have P provide such meter data about publications, for example, that have been made in Community.",
            "A second, maybe even more important aspect is that it has been observed in the past that DLP mirrors many interesting social world relationships.",
            "So develop forms small world on its own where we have, for example, power law distributions for for instance in the citation system there are many papers that are cited only few times, but few papers.",
            "On the other hand, they decided many times, but one can observe such 6 degrees of separation between authors and these are relations that we expect to be present in the in the semantic web also where which is a collection of of social.",
            "Beta."
        ],
        [
            "In some way.",
            "So yes, the sample RDF craft, as it might be generated by our data generator.",
            "So I first have to say we do not translate the existing data because we want to generate arbitrarily large datasets datasets, so our generator basis upon characteristics that we find.",
            "But we have a generator that allows us to create even larger datasets, so from.",
            "A logical point of view, we distinguish between schema layer, which is shown in Gray here and the instance layer.",
            "So in the schema layer we define entities like proceedings, in proceedings, journals, articles which are then used for typing the specific entities.",
            "For instance, we have an entity Article 1 here which is of type bench artikkel.",
            "So this is some typing edge which is titled Sparkle has been issued in 2006, has been authored by Frank.",
            "Ness, which is of type person and has appeared in Journal One here."
        ],
        [
            "And when generating this data, the data generation process relies on his study of the original date DLP database to give just one example.",
            "Here, what we did is we measured the concrete values of number of different entities in DLP overtime.",
            "For instance, here we plot the number of.",
            "Proceedings and.",
            "Of in proceedings and journals, overtime and.",
            "As one can see, this axis lock scared.",
            "This follows an exponential growth, so we used exponential curve approximations to approximate these functions, and these functions are implemented in our data generator and formed the basis for generating our datasets."
        ],
        [
            "So this is only one example.",
            "We consider many more characteristics.",
            "We have studied the citation system of the original JP data.",
            "For example, incoming citations which follow a power law distribution.",
            "So we also have power law distributions implemented in our data generator.",
            "We consider outgoing citations.",
            "The structure of documents.",
            "So for example, in proceedings have to typically described by by other properties, then then web pages that might appear in the data.",
            "We consider relations between authors.",
            "And Co authors, authors and editors, and many more aspects.",
            "So on top of this data we then have to well up the set of 17 benchmark."
        ],
        [
            "Switch posts well meaning for requests on on this data we will see examples later.",
            "And this benchmark queries vary in abroad range of characteristics.",
            "So we have taken care to test different operators sparkle operator constellations.",
            "And not very special cases, but typically cases that might occur often in practice.",
            "So give one example.",
            "Negation can be expressed in sparkle using a combination of optional filter and not bound.",
            "So we have queries that test negation or double negation and and so on.",
            "We test other things like RDF data access patterns.",
            "We vary in result size, number of variables and many more characteristics.",
            "So what we wanted to do?"
        ],
        [
            "Dan was we wanted to test existing RDF stores team so the state of the art and storing RDF on top of our benchmark framework and in this work before focus on two approaches which both rely on storing RDF data in relational database.",
            "So the idea is that one stores to RDF graph in a relational database using tables of a different format, and in order to evaluate sparkle queries, one Maps to spark a query into an SQL query.",
            "With the same semantics and execute this SQL query with a conventional relational database system.",
            "And we have considered two approaches, namely a simple triple table approach and vertical partitioning, which I will shortly sketch in the following."
        ],
        [
            "So triple table approach is basically the the most simple and straightforward storage scheme for RDF data.",
            "An RDF graph is basically a collection or set of RDF triples, and it's quite.",
            "Obvious that that one can store distributes in a single table with three columns, subject, predicate, object, where one entry in this table, of course represents one triple and yard F craft SO11 edge in the graph of yeah."
        ],
        [
            "When one wants to evaluate the SQL query spark query on top of the RDF graph, this Parker query must of course be.",
            "Translated into SQL in order to be processed by conventional database system and there in the past, systematic sparkle to SPR rewriting schemes have been proposed, so I shortly sketched the very basic idea of these schemes.",
            "So we consider this this query here which selects or book authors and what one can do is for each triple in this Web Part of the query we set up one triple table access here.",
            "And now in the where clause of the SQL query, we restrict these triple pattern access according to the restrictions in the original query.",
            "So here we have that a predicate must be type.",
            "The object must be booked.",
            "So we have two restrictions that the predicate of T1 must be typed and the object must be booked.",
            "The same for the second pattern and you also and then for this shared variable book, which occurs in both patterns, we set up an additional restriction that the subject of the first must be equal to the subject of the second one.",
            "And finally we want to select the author which occurs that position at the the object field of the second triple.",
            "So we select the object of the, the second triple table access.",
            "This is only the basic idea.",
            "There exists a broaddus on how other operators like optional Union and an filter can be translated.",
            "And this well where did this?",
            "This works well in practice, and Derek systematic approaches for for realizing."
        ],
        [
            "The very basic problem with this approach is that whenever variable secure and modern one triple, we have a self join over this triple table.",
            "So for example here we have this variable book which occurs twice in subject position.",
            "So what we get is a serve join over the subject column.",
            "Here over this triple stable.",
            "And in practice this triplets table may be very large.",
            "It may contain millions or even billions of triples and generally serve joints are very expensive an for reward queries.",
            "There might be queries with 10 or more self join, so so we also have reason our benchmark where we have about 10 self joins over the triple table and this might slow down query evaluation.",
            "Of course when this table is large."
        ],
        [
            "One thing 111 can do too well optimized the situation a little bit is a technique called dictionary encoding, where each triple in the each entry in the table is encoded as dictionary.",
            "So we have a dictionary table which for example, Maps book 1, Two ID one and instead of storing book 1.",
            "Here we stored the integer ID here and the benefit of this is that this representation might under one hand require less space.",
            "On the other hand, Disjoints can be evaluated on top of integers, so one can use integer comparison, which speeds up query evaluation.",
            "But however, this is not a general solution to the problem, but also makes the situation a little bit better, but it does not reduce the amount of self joints that are needed for evaluating such a query."
        ],
        [
            "Another approach which is better in this respect has been proposed, and this approach is called vertical partitioning.",
            "So the idea here is that instead of storing everything in one large table, one sets up one table for each distinct predicate in the data, and then in each sub predicate table once does only the subject object pairs that are related through this predicate.",
            "So for example, we get one table type where we store subject and objects that are related to type.",
            "For example, this one denotes the triple.",
            "Book one type book.",
            "And so we get one table for each predicate.",
            "We have a type table, also table name, table and so on."
        ],
        [
            "Also here it's quite straightforward to find a systematic sparkle to SPR rewritings.",
            "Of course they differ a little bit from the triple table approach because we now don't have a single triple table, but several predicate tables, and the idea here is did.",
            "We can translate this query by querying direct directly from the predicate table for type here, so we directly use this type table and directly use this author table here and.",
            "Except for this to the query translation is very similar to two degree translation.",
            "In the other case.",
            "So at this position I want to mention that one runs into trouble when the type is not when when the predicate here is a variable, because then one doesn't know from which table to select and one has to compute and practice the Union overall predicate tables that are present and we will also come back to this issue later."
        ],
        [
            "So now one can observe that this join it's not any longer over one large triple table, but over different tables.",
            "In this case we have a join over table.",
            "Type and subject.",
            "But still these tables can be very large and.",
            "And in principle, since data is not clustered in anyway, queries still contain many joints and one technique to to improve this is the idea of when the data is sorted.",
            "For example here we have started data by subject object within each table."
        ],
        [
            "Then we can use merge joints to implement this more efficiently and these merge runs are of course depends on the data, but they are almost linear in in the size of the table while.",
            "And in general they are much cheaper to evaluate and then standard joints like like for example, nested loop joints that one needs to do when data is not sorted.",
            "So this idea of using this mergent was discussed in last years.",
            "We'll be publication scalable, Semantic Web data management using vertical partitioning, and one observer."
        ],
        [
            "Is that that we made here is that when we choose predicate subject object sort order in the triple table approach, we basically have the same arrangement of data on this.",
            "So we have starting by predicate first.",
            "Then we sort by subject and finally by object and then we also have such blocks where all these authors are located.",
            "We have plugs were all these types are located and then also in a triple table approach we can apply this merge joins which might make this distribute able approach.",
            "Much faster, and indeed our experiments confirmed it when when choosing this sort order, we get much better results than with the subject predicate objects or order which was typically used in the past."
        ],
        [
            "So now I come to our experiments.",
            "So our experimental setting we tested these two approaches that I've just described.",
            "The triple table approach and vertical partitioning.",
            "In the triple table approach, we sorted data physically by predicate subject object.",
            "So we use this more efficient representation and in the vertical partitioning we sorted by subject object in orbit.",
            "In both approaches, we applied secondary indices to all other permutations of predicate, subject, object and OK.",
            "Here we only have object subject, so we apply the second index for the.",
            "For the second direction and both approaches were combined with.",
            "Dictionary encoding and to put our results into perspective, we tested."
        ],
        [
            "More scenarios we tested.",
            "Representative Sparkle engine sesame.",
            "Where of course, no translation into SPR was necessary, but queries were executed in sparkle because some it's a native sparkle engine and we tested a purely relational model of the scenario.",
            "So what does purely relational model mean?",
            "So we used entity relationship modeling techniques to design A database model, a standard relational database model for the DLP scenarios.",
            "So we have large tables for storing when use and all their properties we have.",
            "Large tables for storing publications and other properties.",
            "We have a table for persons and so on and so forth.",
            "And the queries are just standard SQL queries that someone might write that are semantically equivalent to the original query, so that extract exactly the same result.",
            "Then the sparkle benchmark queries."
        ],
        [
            "So in summary, we have four scenarios, triple table, vertical partitioning and dispute.",
            "The relational scheme they were executed with the Monitor B as QL server, which is a conventional column store database system that is well known for its performance and we have to set something Sparkle, engine and all experiments were carried out on a desktop PC with two gigahertz CPU, 3 gigabite RAM on top of Ubuntu.",
            "And we tested all 17 benchmark queries on documents starting from 10,000 triples up to 25 million RDF triples.",
            "And we set the timeout of 30 minutes per query and two GB memory."
        ],
        [
            "So the first query is a rather simple one which says return the year of publication of the journalist Title Journal One.",
            "So this query returns exactly 1 result.",
            "This journalists in the data is present in the data.",
            "And here we see the sparkle representation of this query.",
            "We have your variable journals three times in the subject position.",
            "So for example in the triple table version of the query here, this induces two subject subjects at joints on the data and the vertical partitioning.",
            "The situation is a little bit better here we don't have served joints, but we still have two joints, but this time on the type title.",
            "And is your table for for this query."
        ],
        [
            "So what would what would?",
            "What did we observe for this query?",
            "So first we observe that neither so so one craft here represents one scenario.",
            "So this is triple table vertical partitioning.",
            "The purely relational setting added the Sparkle engine.",
            "Sorry, and purely relational setting.",
            "And this is a document size starting from 10,000 triples up to 25 million triples.",
            "So we observed that.",
            "None of these approaches here what neither the triple table approach, no vertical partitioning scales well, but still succeeded for 25 million triples, and the reason that we found for this was that the monetary system did not in all cases find the best query execution plan."
        ],
        [
            "So in principle both joints for this query here can execute it by Merge joins because data is sorted on the subject column."
        ],
        [
            "But monitor, but did not evaluate post joints by merchants.",
            "I guess it was only one join that it was evaluated as a merge joint, and so these systems do not scale well for for large data.",
            "The situation for the Sparkle engine was a little bit better for this query and the relational scheme was much more competitive for this query because it contained only one one shine in this case and.",
            "Yeah, we have evaluation times of less than one second, even for the 25,000,000."
        ],
        [
            "The second query a little bit more complicated.",
            "Select the names of all distinct pairs of article authors that have published in the same Journal.",
            "And.",
            "Yes.",
            "OK. And here we observe that we have several variables that appear in more than one triples.",
            "So for example, we have here variable Article One, Article 2.",
            "Article Two, Article 2, and all these variables, for example, in the triple table approach, induce again Seth joint.",
            "So we have an example where we have more self joints over this triple table and these are in part subject subject serve joins.",
            "We have subject object serve joints and we have object object reference and only the subject subjects have trans can in principle be evaluated by such merge joints.",
            "And we observed that."
        ],
        [
            "Yeah, again, neither the triple table, not a vertical partitioning scenarios care well to tease large amount of of joints or they fail already for 5 million triples, which is arguably not a large size compared to reword databases.",
            "And the Sparkle engine also did not do good job, but also that the relational scheme had to to carry out many joints.",
            "Herent did not get really good results for this.",
            "For the."
        ],
        [
            "Query.",
            "So next again, a little bit more complicated, so this query says Q7 says return the titles of all papers that have been cited at least once, but not by any paper without citations.",
            "So this query can be rewritten as informally rivet net return the titles of all cited papers, for which none of the citing papers is not cited.",
            "So we have a situation where we have double negation, quick to express, double negation, and in this pocket query, and this manifests in such nested optional constructs combined with filter and not bound expression."
        ],
        [
            "The major problems with this query in the vertical partitioning scheme.",
            "Is that we have three unbound values in predicate, so we have three variables in predicate position where we have to compute the Union overall predicate tables in our data set.",
            "So for each of these expressions we have to compute a union over.",
            "It's about 50 predicate tables in the data, so that the amount of predicate table differs depends on data size.",
            "And this of course it's a very complex representation in the vertical partition scheme, whereas in the Triple Tour store scheme it's quite easy to."
        ],
        [
            "Translate this query.",
            "And this also manifested in the results for the vertical partition scheme.",
            "We see that the.",
            "Valuation just does not care where we are about a little bit more than 100 seconds already on one million triples and the ender systems failed for larger data sizes.",
            "So the triple table approach behaves a little bit well.",
            "So we are still less than one second here.",
            "About one second, a little bit more than one second here, but then time for the 25 million documents exploded.",
            "And the Sparkle engine did not get by with this career either way, but the relational encoding here we encoded the query as nested, not exists construct.",
            "Scared very well and was able to to answer this query.",
            "Still with less than one second.",
            "So these were only three."
        ],
        [
            "Examples I will conclude with some friends that that we have observed in our experiments.",
            "So first we observe that optimizes relational database management systems.",
            "In the paper we only tested Monitor Bay.",
            "What we have also made experiments for artists are often not laid out for the specific challenges that arise in the context of processing semantic web data.",
            "So often there are no merge joints used for measurement, which arguably reel yet better results.",
            "The second thing is that vertical partitioning would.",
            "As before being shown in another benchmark scenario to be 10 times faster than the triple table approach is not a general solution.",
            "We have queries that show limitations.",
            "For example when there are unbound predicates into queries.",
            "When there are non subject subject joints and when there are more complex queries.",
            "In general this this scheme fails for large document sizes.",
            "Next, we have observed that a triple star with predicates up, subject object or physical sort orders often more competitive to the vertical partitioning scheme.",
            "Since the data is arranged in exactly the same way on the disk, with the only difference that the predicates are stored in.",
            "In addition, while they are implicitly given in the vertical partitions scheme and finally were observed throughout almost all experiments that there's typically gap of 1 order of magnitude compared to relational data processing.",
            "Yet on the smallest documents.",
            "Which drastically increased with the document size, so of course one can assume that a relational model is in some way optimized for a specific scenario.",
            "And of course this this is true, but this gap was was Ridgecrest again.",
            "We are convinced that new storage, new and better storage schemes for RDF data and better evaluation approaches for sparkle queries can help to bring forward the evaluation of sparkle queries in the future.",
            "And one promising approach.",
            "I want to point to the the paper cited below, which well improves on some ideas of the vertical partitioning scheme by providing or also different physical sort orders through the data which overcomes, for example, the problems when when subject object joints need to be computed and can compute also such joints in basically linear time."
        ],
        [
            "So thank you for the attention.",
            "Any questions?",
            "So in your documents you have blank notes, right?",
            "Yes, we also have blank notes in our data, so I'm curious about the semantics of the blank nodes.",
            "Do use them as constants or 'cause the semantic of long notes, and is particularly is not linked.",
            "Clearly defined rent as we we use, we have blankets encoded in our data, so our data generator generates blackouts.",
            "Typically for persons and we used to standards pocket semantics, so we do not do any RDF inference on top for data, but used to standards.",
            "Market semantics is defined by the VC.",
            "When you use a relational database, you say you only have one index created by and then in this sequence of indexes the predicate and the object, and then the subject.",
            "Is that what you only have one index created on your know?",
            "So in the triple table approach we saw today to physically by predicate subject object.",
            "So we have an index on this sort order and we created in secondary indices for all other permutations.",
            "So we have a secondary in this index for subject predicate, object.",
            "The secondary index for subject, object, predicate and so on.",
            "I see so you're in relational approach, you basically for every.",
            "Every subject you have a one table to map to it.",
            "And in which team do you mean relation?",
            "Are you have you create a relational?",
            "Search case to talk so so this purely relations people radiational know that we have really flat tables.",
            "For example, one fret table for once, once, subject type.",
            "Hot again."
        ],
        [
            "So we have four schemes.",
            "We have this triple table approach where everything is stored in one large triple table.",
            "We have this vertical partitioning where we have one table for each predicate in the data.",
            "Then we have this purely relational scheme.",
            "Where we met a real relational database, so we did not store RDF triples, but we had large flat tables.",
            "For example, we had a table for when use which did store the idea of when you and all properties that are common to our windows.",
            "So we have multiple columns there, so data is in some sense class that.",
            "So this is a cluster scenario and then we have the scenario that the Sparkle engine where we store our F as it is in the native data form.",
            "Another question is why you used to generate data and still use the real data.",
            "Is that because the real data have you had to scrub the data and had a lot of the reason for implementing this data generator was because you wanted to use arbitrary large datasets?",
            "Yes, and the DP from there is already a translation of the BLP into RDF format, but this comprises only about I guess 1015 million triples I'm I'm not sure about this number, but this is of course limited and if one wants to make tests with larger data then you of course need to.",
            "Have some way to to get larger data?",
            "Yes, thank you.",
            "I'm so I have a question.",
            "You said that you think that the DLP data is is a fairly, so it's a good.",
            "It's a good example for to use in an RDF benchmark.",
            "I wonder so the DLP data is very regular so you have a you have a clear schema and all the records are have kind of similar shape.",
            "So I wonder if it's not more interesting to look at data where you have a more Peter Genius scheme away.",
            "Maybe you have lots of different.",
            "Resources that are very different in the kinds of properties that you find on it.",
            "So do you have any thoughts on this?",
            "Yes, is of course an interesting question.",
            "We also saw the long time on this question, and this was also a discussion that we had internally.",
            "And of course you have to do some some compromise.",
            "I agree with you that another benchmark might might.",
            "It might be another reasonable decision to test more unstructured data, but we found that the LP is a good compromise and in particular good choice because it contains all these distributions which are.",
            "Reflected in our data and so another question.",
            "Did you find that the triple table approach and the vertical partitioning approach?",
            "So these two approaches use.",
            "Basically you use a relational database as a triple store, so you model a triple store inside a relational database.",
            "Did you find that these approaches work consistently better in any other queries then the other approaches, like using a native triple store or using a just a plain old relational representation.",
            "So it was in our experiment.",
            "Almost four queries better than the Sparkle engine, yes.",
            "Badger compared to the purely relational scheme.",
            "It was much worse because here we have this destructor data we need typically less joins in the queries, so evaluation is is much faster for the.",
            "Manually designed relational scheme, but it outperformed the Sparkle engine in our experiments.",
            "Yes, so there are some benchmarks that show that.",
            "So if you have used this as I mean this is only native spirits Parker implementation.",
            "So there are other triple stores out there that perform seem to perform quite a bit better than the Sesame Store.",
            "So I just wonder if it's.",
            "So I had kind of given up on the idea of storing triples in a relational database, because it seems like, like native stores are much faster.",
            "More if your schema is highly regular regular then kind of just using a relational database seems to be out seems to outperform seems to outperform these kind of triple triple table or vertical partitioning solutions in almost all cases.",
            "So you would say that this is not necessarily the case, so these approaches still.",
            "Can perform well in certain situations and you think it's it's worth it's worth looking at them.",
            "I'm I'm not sure about this so personally I think that these these storing schemes in relational database are not yet sufficient.",
            "Our justification for using Sesame was that we also in another paper.",
            "We do comparison between a couple of engines and there.",
            "We also tested other engines like like Virtuozzo, RQ and Sesame was among the fastest entrance there and so we decided for processor me.",
            "I think with use of us a little bit faster.",
            "In this other paper, which will appear at and ICD and.",
            "But did fail for for some of the queries because it's not fully standard compliant in some cases with this filter and not bound is this.",
            "Yeah, negation queries, so we decided for using Sesame.",
            "Of course there's something is not representative and there might also still be more efficient implementations that native implementations.",
            "Yes, thank you.",
            "May I ask?",
            "Just a remark, I have to agree with Richard, said data that I use, for example is typically showing Powerset distributions fonzy properties, and on the classes that I used.",
            "So there you have like 10% as many property names as you have instances and so this would be a rather different setup.",
            "And 2nd remark which might be interesting to investigate is that in our two in the upcoming new specifications there are a couple of very lightweight.",
            "Languages which are tailored towards large datasets as well, and when you look at our concept expressions that you want to find the instances of source, send the queries that you get all our exposing joints over the subject and not over the predicate or object typically or object to subject joints.",
            "Because you have this tree shape and I guess again in this scenario you could get different results or more optimized implementations because of the specific shape that you have.",
            "So of course the results are kind of the scenario.",
            "Should we try to do with our benchmark?",
            "We try to set up something that is, to some degree scenario independent.",
            "So we try to to create queries that test difficult operator constellations we have created have very absent predicate position.",
            "We have subject object joints.",
            "We have object.",
            "You have all type of joints and.",
            "We basically wanted to cover as much situations as possible that in some way likely to arise in practice.",
            "Yeah, OK, but we should take so thank you for the reminder."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, so.",
                    "label": 0
                },
                {
                    "sent": "Today I'm going to talk about next perimental comparison of RDF data management approaches in Sparkle benchmark scenario and this is joint work with Thomas on Norbert Cushioning and Professor Glaucine from Freiburg University and Kristof Pinker.",
                    "label": 1
                },
                {
                    "sent": "From MPC infomedia.",
                    "label": 0
                },
                {
                    "sent": "So first and would you waiting?",
                    "label": 0
                },
                {
                    "sent": "Why did do we want to perform such?",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Experimental comparison so in the past it has been repeatedly observed that the officient evaluation of sparklers and nontrivial task, so from a theoretical point of view, it was a nice receipt paper two years ago would show that the evaluation of sparkless piece based complete.",
                    "label": 0
                },
                {
                    "sent": "And we will her talk about this later in the session where they showed that Sparkle has basically the same expressiveness as relational algebras with relationally complete from a more practical POV.",
                    "label": 0
                },
                {
                    "sent": "It's Diame genus data format of sparkle that poses of RF that poses a severe bottleneck for performs, so not everything is taught in triples.",
                    "label": 0
                },
                {
                    "sent": "There is no clustering on the data by default.",
                    "label": 0
                },
                {
                    "sent": "And in the past, several optimization approaches have been made, but they typically use their own, often specific experiments which are laid out to the specific scenario.",
                    "label": 1
                },
                {
                    "sent": "So what we wanted to do, we wanted to compare evaluation approaches in a more general framework that covers different operator constellations of sparkle and.",
                    "label": 0
                },
                {
                    "sent": "A rich set of constructs.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And in the first part of this talk I present the benchmark framework that we have designed called Sparkle Performance Benchmark SP2 Bench, which consists of data generator that allows us to create arbitrarily large RDF documents and a set of benchmark queries.",
                    "label": 1
                },
                {
                    "sent": "On top of these documents.",
                    "label": 0
                },
                {
                    "sent": "And these queries have been designed as said before, to post various challenges to sparkle.",
                    "label": 0
                },
                {
                    "sent": "Engines will come back to this is you later and the benchmark is also available online and ready to use format if somebody wants to benchmark their their own.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Approaches.",
                    "label": 0
                },
                {
                    "sent": "In the second part of the talk I present the RDF data management approaches that we we have.",
                    "label": 0
                },
                {
                    "sent": "Test I. Charlie sketched the key ideas of these approaches and then in the third part I present our experimental results and there are several new findings that that we have achieved.",
                    "label": 0
                },
                {
                    "sent": "For example, we show limitations of existing evaluation approaches, and in particular we show that there's a see where gap to native relational data processing still in spa.",
                    "label": 1
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So first the Sparkle Performance benchmark framework.",
                    "label": 1
                },
                {
                    "sent": "So as a domain for this framework, we have chosen the DLP scenario.",
                    "label": 0
                },
                {
                    "sent": "DLP is scientific bibliographic database which contains information about articles, journals, proceedings that have appeared in the database, and more general.",
                    "label": 1
                },
                {
                    "sent": "Also in the computer science community.",
                    "label": 0
                },
                {
                    "sent": "In the last years, and we argue that Develped fits the philosophy behind RDF.",
                    "label": 0
                },
                {
                    "sent": "Data formats in several ways, and this was also a reason why we have chosen this as our domain.",
                    "label": 1
                },
                {
                    "sent": "So first, RDF has originally been designed for representing meter data and do we have P provide such meter data about publications, for example, that have been made in Community.",
                    "label": 0
                },
                {
                    "sent": "A second, maybe even more important aspect is that it has been observed in the past that DLP mirrors many interesting social world relationships.",
                    "label": 0
                },
                {
                    "sent": "So develop forms small world on its own where we have, for example, power law distributions for for instance in the citation system there are many papers that are cited only few times, but few papers.",
                    "label": 0
                },
                {
                    "sent": "On the other hand, they decided many times, but one can observe such 6 degrees of separation between authors and these are relations that we expect to be present in the in the semantic web also where which is a collection of of social.",
                    "label": 0
                },
                {
                    "sent": "Beta.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "In some way.",
                    "label": 0
                },
                {
                    "sent": "So yes, the sample RDF craft, as it might be generated by our data generator.",
                    "label": 0
                },
                {
                    "sent": "So I first have to say we do not translate the existing data because we want to generate arbitrarily large datasets datasets, so our generator basis upon characteristics that we find.",
                    "label": 0
                },
                {
                    "sent": "But we have a generator that allows us to create even larger datasets, so from.",
                    "label": 0
                },
                {
                    "sent": "A logical point of view, we distinguish between schema layer, which is shown in Gray here and the instance layer.",
                    "label": 0
                },
                {
                    "sent": "So in the schema layer we define entities like proceedings, in proceedings, journals, articles which are then used for typing the specific entities.",
                    "label": 0
                },
                {
                    "sent": "For instance, we have an entity Article 1 here which is of type bench artikkel.",
                    "label": 0
                },
                {
                    "sent": "So this is some typing edge which is titled Sparkle has been issued in 2006, has been authored by Frank.",
                    "label": 0
                },
                {
                    "sent": "Ness, which is of type person and has appeared in Journal One here.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And when generating this data, the data generation process relies on his study of the original date DLP database to give just one example.",
                    "label": 0
                },
                {
                    "sent": "Here, what we did is we measured the concrete values of number of different entities in DLP overtime.",
                    "label": 0
                },
                {
                    "sent": "For instance, here we plot the number of.",
                    "label": 0
                },
                {
                    "sent": "Proceedings and.",
                    "label": 0
                },
                {
                    "sent": "Of in proceedings and journals, overtime and.",
                    "label": 0
                },
                {
                    "sent": "As one can see, this axis lock scared.",
                    "label": 0
                },
                {
                    "sent": "This follows an exponential growth, so we used exponential curve approximations to approximate these functions, and these functions are implemented in our data generator and formed the basis for generating our datasets.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So this is only one example.",
                    "label": 0
                },
                {
                    "sent": "We consider many more characteristics.",
                    "label": 1
                },
                {
                    "sent": "We have studied the citation system of the original JP data.",
                    "label": 0
                },
                {
                    "sent": "For example, incoming citations which follow a power law distribution.",
                    "label": 1
                },
                {
                    "sent": "So we also have power law distributions implemented in our data generator.",
                    "label": 0
                },
                {
                    "sent": "We consider outgoing citations.",
                    "label": 0
                },
                {
                    "sent": "The structure of documents.",
                    "label": 0
                },
                {
                    "sent": "So for example, in proceedings have to typically described by by other properties, then then web pages that might appear in the data.",
                    "label": 0
                },
                {
                    "sent": "We consider relations between authors.",
                    "label": 0
                },
                {
                    "sent": "And Co authors, authors and editors, and many more aspects.",
                    "label": 0
                },
                {
                    "sent": "So on top of this data we then have to well up the set of 17 benchmark.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Switch posts well meaning for requests on on this data we will see examples later.",
                    "label": 0
                },
                {
                    "sent": "And this benchmark queries vary in abroad range of characteristics.",
                    "label": 1
                },
                {
                    "sent": "So we have taken care to test different operators sparkle operator constellations.",
                    "label": 0
                },
                {
                    "sent": "And not very special cases, but typically cases that might occur often in practice.",
                    "label": 0
                },
                {
                    "sent": "So give one example.",
                    "label": 0
                },
                {
                    "sent": "Negation can be expressed in sparkle using a combination of optional filter and not bound.",
                    "label": 0
                },
                {
                    "sent": "So we have queries that test negation or double negation and and so on.",
                    "label": 1
                },
                {
                    "sent": "We test other things like RDF data access patterns.",
                    "label": 0
                },
                {
                    "sent": "We vary in result size, number of variables and many more characteristics.",
                    "label": 1
                },
                {
                    "sent": "So what we wanted to do?",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Dan was we wanted to test existing RDF stores team so the state of the art and storing RDF on top of our benchmark framework and in this work before focus on two approaches which both rely on storing RDF data in relational database.",
                    "label": 0
                },
                {
                    "sent": "So the idea is that one stores to RDF graph in a relational database using tables of a different format, and in order to evaluate sparkle queries, one Maps to spark a query into an SQL query.",
                    "label": 0
                },
                {
                    "sent": "With the same semantics and execute this SQL query with a conventional relational database system.",
                    "label": 0
                },
                {
                    "sent": "And we have considered two approaches, namely a simple triple table approach and vertical partitioning, which I will shortly sketch in the following.",
                    "label": 1
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So triple table approach is basically the the most simple and straightforward storage scheme for RDF data.",
                    "label": 1
                },
                {
                    "sent": "An RDF graph is basically a collection or set of RDF triples, and it's quite.",
                    "label": 0
                },
                {
                    "sent": "Obvious that that one can store distributes in a single table with three columns, subject, predicate, object, where one entry in this table, of course represents one triple and yard F craft SO11 edge in the graph of yeah.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "When one wants to evaluate the SQL query spark query on top of the RDF graph, this Parker query must of course be.",
                    "label": 1
                },
                {
                    "sent": "Translated into SQL in order to be processed by conventional database system and there in the past, systematic sparkle to SPR rewriting schemes have been proposed, so I shortly sketched the very basic idea of these schemes.",
                    "label": 0
                },
                {
                    "sent": "So we consider this this query here which selects or book authors and what one can do is for each triple in this Web Part of the query we set up one triple table access here.",
                    "label": 0
                },
                {
                    "sent": "And now in the where clause of the SQL query, we restrict these triple pattern access according to the restrictions in the original query.",
                    "label": 0
                },
                {
                    "sent": "So here we have that a predicate must be type.",
                    "label": 0
                },
                {
                    "sent": "The object must be booked.",
                    "label": 0
                },
                {
                    "sent": "So we have two restrictions that the predicate of T1 must be typed and the object must be booked.",
                    "label": 0
                },
                {
                    "sent": "The same for the second pattern and you also and then for this shared variable book, which occurs in both patterns, we set up an additional restriction that the subject of the first must be equal to the subject of the second one.",
                    "label": 0
                },
                {
                    "sent": "And finally we want to select the author which occurs that position at the the object field of the second triple.",
                    "label": 1
                },
                {
                    "sent": "So we select the object of the, the second triple table access.",
                    "label": 0
                },
                {
                    "sent": "This is only the basic idea.",
                    "label": 0
                },
                {
                    "sent": "There exists a broaddus on how other operators like optional Union and an filter can be translated.",
                    "label": 0
                },
                {
                    "sent": "And this well where did this?",
                    "label": 0
                },
                {
                    "sent": "This works well in practice, and Derek systematic approaches for for realizing.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The very basic problem with this approach is that whenever variable secure and modern one triple, we have a self join over this triple table.",
                    "label": 0
                },
                {
                    "sent": "So for example here we have this variable book which occurs twice in subject position.",
                    "label": 0
                },
                {
                    "sent": "So what we get is a serve join over the subject column.",
                    "label": 0
                },
                {
                    "sent": "Here over this triple stable.",
                    "label": 0
                },
                {
                    "sent": "And in practice this triplets table may be very large.",
                    "label": 0
                },
                {
                    "sent": "It may contain millions or even billions of triples and generally serve joints are very expensive an for reward queries.",
                    "label": 0
                },
                {
                    "sent": "There might be queries with 10 or more self join, so so we also have reason our benchmark where we have about 10 self joins over the triple table and this might slow down query evaluation.",
                    "label": 0
                },
                {
                    "sent": "Of course when this table is large.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "One thing 111 can do too well optimized the situation a little bit is a technique called dictionary encoding, where each triple in the each entry in the table is encoded as dictionary.",
                    "label": 0
                },
                {
                    "sent": "So we have a dictionary table which for example, Maps book 1, Two ID one and instead of storing book 1.",
                    "label": 0
                },
                {
                    "sent": "Here we stored the integer ID here and the benefit of this is that this representation might under one hand require less space.",
                    "label": 0
                },
                {
                    "sent": "On the other hand, Disjoints can be evaluated on top of integers, so one can use integer comparison, which speeds up query evaluation.",
                    "label": 0
                },
                {
                    "sent": "But however, this is not a general solution to the problem, but also makes the situation a little bit better, but it does not reduce the amount of self joints that are needed for evaluating such a query.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Another approach which is better in this respect has been proposed, and this approach is called vertical partitioning.",
                    "label": 0
                },
                {
                    "sent": "So the idea here is that instead of storing everything in one large table, one sets up one table for each distinct predicate in the data, and then in each sub predicate table once does only the subject object pairs that are related through this predicate.",
                    "label": 1
                },
                {
                    "sent": "So for example, we get one table type where we store subject and objects that are related to type.",
                    "label": 0
                },
                {
                    "sent": "For example, this one denotes the triple.",
                    "label": 0
                },
                {
                    "sent": "Book one type book.",
                    "label": 0
                },
                {
                    "sent": "And so we get one table for each predicate.",
                    "label": 0
                },
                {
                    "sent": "We have a type table, also table name, table and so on.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Also here it's quite straightforward to find a systematic sparkle to SPR rewritings.",
                    "label": 0
                },
                {
                    "sent": "Of course they differ a little bit from the triple table approach because we now don't have a single triple table, but several predicate tables, and the idea here is did.",
                    "label": 1
                },
                {
                    "sent": "We can translate this query by querying direct directly from the predicate table for type here, so we directly use this type table and directly use this author table here and.",
                    "label": 1
                },
                {
                    "sent": "Except for this to the query translation is very similar to two degree translation.",
                    "label": 0
                },
                {
                    "sent": "In the other case.",
                    "label": 0
                },
                {
                    "sent": "So at this position I want to mention that one runs into trouble when the type is not when when the predicate here is a variable, because then one doesn't know from which table to select and one has to compute and practice the Union overall predicate tables that are present and we will also come back to this issue later.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So now one can observe that this join it's not any longer over one large triple table, but over different tables.",
                    "label": 0
                },
                {
                    "sent": "In this case we have a join over table.",
                    "label": 0
                },
                {
                    "sent": "Type and subject.",
                    "label": 0
                },
                {
                    "sent": "But still these tables can be very large and.",
                    "label": 0
                },
                {
                    "sent": "And in principle, since data is not clustered in anyway, queries still contain many joints and one technique to to improve this is the idea of when the data is sorted.",
                    "label": 0
                },
                {
                    "sent": "For example here we have started data by subject object within each table.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Then we can use merge joints to implement this more efficiently and these merge runs are of course depends on the data, but they are almost linear in in the size of the table while.",
                    "label": 0
                },
                {
                    "sent": "And in general they are much cheaper to evaluate and then standard joints like like for example, nested loop joints that one needs to do when data is not sorted.",
                    "label": 0
                },
                {
                    "sent": "So this idea of using this mergent was discussed in last years.",
                    "label": 0
                },
                {
                    "sent": "We'll be publication scalable, Semantic Web data management using vertical partitioning, and one observer.",
                    "label": 1
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Is that that we made here is that when we choose predicate subject object sort order in the triple table approach, we basically have the same arrangement of data on this.",
                    "label": 1
                },
                {
                    "sent": "So we have starting by predicate first.",
                    "label": 0
                },
                {
                    "sent": "Then we sort by subject and finally by object and then we also have such blocks where all these authors are located.",
                    "label": 1
                },
                {
                    "sent": "We have plugs were all these types are located and then also in a triple table approach we can apply this merge joins which might make this distribute able approach.",
                    "label": 1
                },
                {
                    "sent": "Much faster, and indeed our experiments confirmed it when when choosing this sort order, we get much better results than with the subject predicate objects or order which was typically used in the past.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So now I come to our experiments.",
                    "label": 0
                },
                {
                    "sent": "So our experimental setting we tested these two approaches that I've just described.",
                    "label": 0
                },
                {
                    "sent": "The triple table approach and vertical partitioning.",
                    "label": 0
                },
                {
                    "sent": "In the triple table approach, we sorted data physically by predicate subject object.",
                    "label": 1
                },
                {
                    "sent": "So we use this more efficient representation and in the vertical partitioning we sorted by subject object in orbit.",
                    "label": 1
                },
                {
                    "sent": "In both approaches, we applied secondary indices to all other permutations of predicate, subject, object and OK.",
                    "label": 0
                },
                {
                    "sent": "Here we only have object subject, so we apply the second index for the.",
                    "label": 0
                },
                {
                    "sent": "For the second direction and both approaches were combined with.",
                    "label": 0
                },
                {
                    "sent": "Dictionary encoding and to put our results into perspective, we tested.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "More scenarios we tested.",
                    "label": 0
                },
                {
                    "sent": "Representative Sparkle engine sesame.",
                    "label": 0
                },
                {
                    "sent": "Where of course, no translation into SPR was necessary, but queries were executed in sparkle because some it's a native sparkle engine and we tested a purely relational model of the scenario.",
                    "label": 1
                },
                {
                    "sent": "So what does purely relational model mean?",
                    "label": 0
                },
                {
                    "sent": "So we used entity relationship modeling techniques to design A database model, a standard relational database model for the DLP scenarios.",
                    "label": 1
                },
                {
                    "sent": "So we have large tables for storing when use and all their properties we have.",
                    "label": 1
                },
                {
                    "sent": "Large tables for storing publications and other properties.",
                    "label": 0
                },
                {
                    "sent": "We have a table for persons and so on and so forth.",
                    "label": 0
                },
                {
                    "sent": "And the queries are just standard SQL queries that someone might write that are semantically equivalent to the original query, so that extract exactly the same result.",
                    "label": 0
                },
                {
                    "sent": "Then the sparkle benchmark queries.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So in summary, we have four scenarios, triple table, vertical partitioning and dispute.",
                    "label": 1
                },
                {
                    "sent": "The relational scheme they were executed with the Monitor B as QL server, which is a conventional column store database system that is well known for its performance and we have to set something Sparkle, engine and all experiments were carried out on a desktop PC with two gigahertz CPU, 3 gigabite RAM on top of Ubuntu.",
                    "label": 0
                },
                {
                    "sent": "And we tested all 17 benchmark queries on documents starting from 10,000 triples up to 25 million RDF triples.",
                    "label": 0
                },
                {
                    "sent": "And we set the timeout of 30 minutes per query and two GB memory.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So the first query is a rather simple one which says return the year of publication of the journalist Title Journal One.",
                    "label": 1
                },
                {
                    "sent": "So this query returns exactly 1 result.",
                    "label": 0
                },
                {
                    "sent": "This journalists in the data is present in the data.",
                    "label": 0
                },
                {
                    "sent": "And here we see the sparkle representation of this query.",
                    "label": 0
                },
                {
                    "sent": "We have your variable journals three times in the subject position.",
                    "label": 0
                },
                {
                    "sent": "So for example in the triple table version of the query here, this induces two subject subjects at joints on the data and the vertical partitioning.",
                    "label": 0
                },
                {
                    "sent": "The situation is a little bit better here we don't have served joints, but we still have two joints, but this time on the type title.",
                    "label": 0
                },
                {
                    "sent": "And is your table for for this query.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So what would what would?",
                    "label": 0
                },
                {
                    "sent": "What did we observe for this query?",
                    "label": 0
                },
                {
                    "sent": "So first we observe that neither so so one craft here represents one scenario.",
                    "label": 0
                },
                {
                    "sent": "So this is triple table vertical partitioning.",
                    "label": 0
                },
                {
                    "sent": "The purely relational setting added the Sparkle engine.",
                    "label": 0
                },
                {
                    "sent": "Sorry, and purely relational setting.",
                    "label": 0
                },
                {
                    "sent": "And this is a document size starting from 10,000 triples up to 25 million triples.",
                    "label": 0
                },
                {
                    "sent": "So we observed that.",
                    "label": 0
                },
                {
                    "sent": "None of these approaches here what neither the triple table approach, no vertical partitioning scales well, but still succeeded for 25 million triples, and the reason that we found for this was that the monetary system did not in all cases find the best query execution plan.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So in principle both joints for this query here can execute it by Merge joins because data is sorted on the subject column.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "But monitor, but did not evaluate post joints by merchants.",
                    "label": 0
                },
                {
                    "sent": "I guess it was only one join that it was evaluated as a merge joint, and so these systems do not scale well for for large data.",
                    "label": 0
                },
                {
                    "sent": "The situation for the Sparkle engine was a little bit better for this query and the relational scheme was much more competitive for this query because it contained only one one shine in this case and.",
                    "label": 0
                },
                {
                    "sent": "Yeah, we have evaluation times of less than one second, even for the 25,000,000.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "The second query a little bit more complicated.",
                    "label": 0
                },
                {
                    "sent": "Select the names of all distinct pairs of article authors that have published in the same Journal.",
                    "label": 1
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "Yes.",
                    "label": 0
                },
                {
                    "sent": "OK. And here we observe that we have several variables that appear in more than one triples.",
                    "label": 0
                },
                {
                    "sent": "So for example, we have here variable Article One, Article 2.",
                    "label": 0
                },
                {
                    "sent": "Article Two, Article 2, and all these variables, for example, in the triple table approach, induce again Seth joint.",
                    "label": 0
                },
                {
                    "sent": "So we have an example where we have more self joints over this triple table and these are in part subject subject serve joins.",
                    "label": 0
                },
                {
                    "sent": "We have subject object serve joints and we have object object reference and only the subject subjects have trans can in principle be evaluated by such merge joints.",
                    "label": 0
                },
                {
                    "sent": "And we observed that.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Yeah, again, neither the triple table, not a vertical partitioning scenarios care well to tease large amount of of joints or they fail already for 5 million triples, which is arguably not a large size compared to reword databases.",
                    "label": 0
                },
                {
                    "sent": "And the Sparkle engine also did not do good job, but also that the relational scheme had to to carry out many joints.",
                    "label": 0
                },
                {
                    "sent": "Herent did not get really good results for this.",
                    "label": 0
                },
                {
                    "sent": "For the.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Query.",
                    "label": 0
                },
                {
                    "sent": "So next again, a little bit more complicated, so this query says Q7 says return the titles of all papers that have been cited at least once, but not by any paper without citations.",
                    "label": 1
                },
                {
                    "sent": "So this query can be rewritten as informally rivet net return the titles of all cited papers, for which none of the citing papers is not cited.",
                    "label": 0
                },
                {
                    "sent": "So we have a situation where we have double negation, quick to express, double negation, and in this pocket query, and this manifests in such nested optional constructs combined with filter and not bound expression.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The major problems with this query in the vertical partitioning scheme.",
                    "label": 0
                },
                {
                    "sent": "Is that we have three unbound values in predicate, so we have three variables in predicate position where we have to compute the Union overall predicate tables in our data set.",
                    "label": 0
                },
                {
                    "sent": "So for each of these expressions we have to compute a union over.",
                    "label": 0
                },
                {
                    "sent": "It's about 50 predicate tables in the data, so that the amount of predicate table differs depends on data size.",
                    "label": 0
                },
                {
                    "sent": "And this of course it's a very complex representation in the vertical partition scheme, whereas in the Triple Tour store scheme it's quite easy to.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Translate this query.",
                    "label": 0
                },
                {
                    "sent": "And this also manifested in the results for the vertical partition scheme.",
                    "label": 0
                },
                {
                    "sent": "We see that the.",
                    "label": 0
                },
                {
                    "sent": "Valuation just does not care where we are about a little bit more than 100 seconds already on one million triples and the ender systems failed for larger data sizes.",
                    "label": 0
                },
                {
                    "sent": "So the triple table approach behaves a little bit well.",
                    "label": 0
                },
                {
                    "sent": "So we are still less than one second here.",
                    "label": 0
                },
                {
                    "sent": "About one second, a little bit more than one second here, but then time for the 25 million documents exploded.",
                    "label": 0
                },
                {
                    "sent": "And the Sparkle engine did not get by with this career either way, but the relational encoding here we encoded the query as nested, not exists construct.",
                    "label": 0
                },
                {
                    "sent": "Scared very well and was able to to answer this query.",
                    "label": 0
                },
                {
                    "sent": "Still with less than one second.",
                    "label": 0
                },
                {
                    "sent": "So these were only three.",
                    "label": 0
                }
            ]
        },
        "clip_31": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Examples I will conclude with some friends that that we have observed in our experiments.",
                    "label": 0
                },
                {
                    "sent": "So first we observe that optimizes relational database management systems.",
                    "label": 0
                },
                {
                    "sent": "In the paper we only tested Monitor Bay.",
                    "label": 0
                },
                {
                    "sent": "What we have also made experiments for artists are often not laid out for the specific challenges that arise in the context of processing semantic web data.",
                    "label": 1
                },
                {
                    "sent": "So often there are no merge joints used for measurement, which arguably reel yet better results.",
                    "label": 0
                },
                {
                    "sent": "The second thing is that vertical partitioning would.",
                    "label": 0
                },
                {
                    "sent": "As before being shown in another benchmark scenario to be 10 times faster than the triple table approach is not a general solution.",
                    "label": 0
                },
                {
                    "sent": "We have queries that show limitations.",
                    "label": 0
                },
                {
                    "sent": "For example when there are unbound predicates into queries.",
                    "label": 0
                },
                {
                    "sent": "When there are non subject subject joints and when there are more complex queries.",
                    "label": 0
                },
                {
                    "sent": "In general this this scheme fails for large document sizes.",
                    "label": 0
                },
                {
                    "sent": "Next, we have observed that a triple star with predicates up, subject object or physical sort orders often more competitive to the vertical partitioning scheme.",
                    "label": 1
                },
                {
                    "sent": "Since the data is arranged in exactly the same way on the disk, with the only difference that the predicates are stored in.",
                    "label": 1
                },
                {
                    "sent": "In addition, while they are implicitly given in the vertical partitions scheme and finally were observed throughout almost all experiments that there's typically gap of 1 order of magnitude compared to relational data processing.",
                    "label": 0
                },
                {
                    "sent": "Yet on the smallest documents.",
                    "label": 0
                },
                {
                    "sent": "Which drastically increased with the document size, so of course one can assume that a relational model is in some way optimized for a specific scenario.",
                    "label": 1
                },
                {
                    "sent": "And of course this this is true, but this gap was was Ridgecrest again.",
                    "label": 0
                },
                {
                    "sent": "We are convinced that new storage, new and better storage schemes for RDF data and better evaluation approaches for sparkle queries can help to bring forward the evaluation of sparkle queries in the future.",
                    "label": 0
                },
                {
                    "sent": "And one promising approach.",
                    "label": 0
                },
                {
                    "sent": "I want to point to the the paper cited below, which well improves on some ideas of the vertical partitioning scheme by providing or also different physical sort orders through the data which overcomes, for example, the problems when when subject object joints need to be computed and can compute also such joints in basically linear time.",
                    "label": 0
                }
            ]
        },
        "clip_32": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So thank you for the attention.",
                    "label": 0
                },
                {
                    "sent": "Any questions?",
                    "label": 0
                },
                {
                    "sent": "So in your documents you have blank notes, right?",
                    "label": 0
                },
                {
                    "sent": "Yes, we also have blank notes in our data, so I'm curious about the semantics of the blank nodes.",
                    "label": 0
                },
                {
                    "sent": "Do use them as constants or 'cause the semantic of long notes, and is particularly is not linked.",
                    "label": 0
                },
                {
                    "sent": "Clearly defined rent as we we use, we have blankets encoded in our data, so our data generator generates blackouts.",
                    "label": 0
                },
                {
                    "sent": "Typically for persons and we used to standards pocket semantics, so we do not do any RDF inference on top for data, but used to standards.",
                    "label": 0
                },
                {
                    "sent": "Market semantics is defined by the VC.",
                    "label": 0
                },
                {
                    "sent": "When you use a relational database, you say you only have one index created by and then in this sequence of indexes the predicate and the object, and then the subject.",
                    "label": 0
                },
                {
                    "sent": "Is that what you only have one index created on your know?",
                    "label": 0
                },
                {
                    "sent": "So in the triple table approach we saw today to physically by predicate subject object.",
                    "label": 0
                },
                {
                    "sent": "So we have an index on this sort order and we created in secondary indices for all other permutations.",
                    "label": 0
                },
                {
                    "sent": "So we have a secondary in this index for subject predicate, object.",
                    "label": 0
                },
                {
                    "sent": "The secondary index for subject, object, predicate and so on.",
                    "label": 0
                },
                {
                    "sent": "I see so you're in relational approach, you basically for every.",
                    "label": 0
                },
                {
                    "sent": "Every subject you have a one table to map to it.",
                    "label": 0
                },
                {
                    "sent": "And in which team do you mean relation?",
                    "label": 0
                },
                {
                    "sent": "Are you have you create a relational?",
                    "label": 0
                },
                {
                    "sent": "Search case to talk so so this purely relations people radiational know that we have really flat tables.",
                    "label": 0
                },
                {
                    "sent": "For example, one fret table for once, once, subject type.",
                    "label": 0
                },
                {
                    "sent": "Hot again.",
                    "label": 0
                }
            ]
        },
        "clip_33": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So we have four schemes.",
                    "label": 0
                },
                {
                    "sent": "We have this triple table approach where everything is stored in one large triple table.",
                    "label": 0
                },
                {
                    "sent": "We have this vertical partitioning where we have one table for each predicate in the data.",
                    "label": 0
                },
                {
                    "sent": "Then we have this purely relational scheme.",
                    "label": 1
                },
                {
                    "sent": "Where we met a real relational database, so we did not store RDF triples, but we had large flat tables.",
                    "label": 0
                },
                {
                    "sent": "For example, we had a table for when use which did store the idea of when you and all properties that are common to our windows.",
                    "label": 0
                },
                {
                    "sent": "So we have multiple columns there, so data is in some sense class that.",
                    "label": 0
                },
                {
                    "sent": "So this is a cluster scenario and then we have the scenario that the Sparkle engine where we store our F as it is in the native data form.",
                    "label": 0
                },
                {
                    "sent": "Another question is why you used to generate data and still use the real data.",
                    "label": 0
                },
                {
                    "sent": "Is that because the real data have you had to scrub the data and had a lot of the reason for implementing this data generator was because you wanted to use arbitrary large datasets?",
                    "label": 0
                },
                {
                    "sent": "Yes, and the DP from there is already a translation of the BLP into RDF format, but this comprises only about I guess 1015 million triples I'm I'm not sure about this number, but this is of course limited and if one wants to make tests with larger data then you of course need to.",
                    "label": 0
                },
                {
                    "sent": "Have some way to to get larger data?",
                    "label": 0
                },
                {
                    "sent": "Yes, thank you.",
                    "label": 0
                },
                {
                    "sent": "I'm so I have a question.",
                    "label": 0
                },
                {
                    "sent": "You said that you think that the DLP data is is a fairly, so it's a good.",
                    "label": 0
                },
                {
                    "sent": "It's a good example for to use in an RDF benchmark.",
                    "label": 0
                },
                {
                    "sent": "I wonder so the DLP data is very regular so you have a you have a clear schema and all the records are have kind of similar shape.",
                    "label": 0
                },
                {
                    "sent": "So I wonder if it's not more interesting to look at data where you have a more Peter Genius scheme away.",
                    "label": 0
                },
                {
                    "sent": "Maybe you have lots of different.",
                    "label": 0
                },
                {
                    "sent": "Resources that are very different in the kinds of properties that you find on it.",
                    "label": 0
                },
                {
                    "sent": "So do you have any thoughts on this?",
                    "label": 0
                },
                {
                    "sent": "Yes, is of course an interesting question.",
                    "label": 0
                },
                {
                    "sent": "We also saw the long time on this question, and this was also a discussion that we had internally.",
                    "label": 0
                },
                {
                    "sent": "And of course you have to do some some compromise.",
                    "label": 0
                },
                {
                    "sent": "I agree with you that another benchmark might might.",
                    "label": 0
                },
                {
                    "sent": "It might be another reasonable decision to test more unstructured data, but we found that the LP is a good compromise and in particular good choice because it contains all these distributions which are.",
                    "label": 0
                },
                {
                    "sent": "Reflected in our data and so another question.",
                    "label": 0
                },
                {
                    "sent": "Did you find that the triple table approach and the vertical partitioning approach?",
                    "label": 1
                },
                {
                    "sent": "So these two approaches use.",
                    "label": 0
                },
                {
                    "sent": "Basically you use a relational database as a triple store, so you model a triple store inside a relational database.",
                    "label": 0
                },
                {
                    "sent": "Did you find that these approaches work consistently better in any other queries then the other approaches, like using a native triple store or using a just a plain old relational representation.",
                    "label": 0
                },
                {
                    "sent": "So it was in our experiment.",
                    "label": 0
                },
                {
                    "sent": "Almost four queries better than the Sparkle engine, yes.",
                    "label": 0
                },
                {
                    "sent": "Badger compared to the purely relational scheme.",
                    "label": 0
                },
                {
                    "sent": "It was much worse because here we have this destructor data we need typically less joins in the queries, so evaluation is is much faster for the.",
                    "label": 0
                },
                {
                    "sent": "Manually designed relational scheme, but it outperformed the Sparkle engine in our experiments.",
                    "label": 0
                },
                {
                    "sent": "Yes, so there are some benchmarks that show that.",
                    "label": 0
                },
                {
                    "sent": "So if you have used this as I mean this is only native spirits Parker implementation.",
                    "label": 0
                },
                {
                    "sent": "So there are other triple stores out there that perform seem to perform quite a bit better than the Sesame Store.",
                    "label": 0
                },
                {
                    "sent": "So I just wonder if it's.",
                    "label": 0
                },
                {
                    "sent": "So I had kind of given up on the idea of storing triples in a relational database, because it seems like, like native stores are much faster.",
                    "label": 0
                },
                {
                    "sent": "More if your schema is highly regular regular then kind of just using a relational database seems to be out seems to outperform seems to outperform these kind of triple triple table or vertical partitioning solutions in almost all cases.",
                    "label": 0
                },
                {
                    "sent": "So you would say that this is not necessarily the case, so these approaches still.",
                    "label": 0
                },
                {
                    "sent": "Can perform well in certain situations and you think it's it's worth it's worth looking at them.",
                    "label": 0
                },
                {
                    "sent": "I'm I'm not sure about this so personally I think that these these storing schemes in relational database are not yet sufficient.",
                    "label": 0
                },
                {
                    "sent": "Our justification for using Sesame was that we also in another paper.",
                    "label": 0
                },
                {
                    "sent": "We do comparison between a couple of engines and there.",
                    "label": 0
                },
                {
                    "sent": "We also tested other engines like like Virtuozzo, RQ and Sesame was among the fastest entrance there and so we decided for processor me.",
                    "label": 0
                },
                {
                    "sent": "I think with use of us a little bit faster.",
                    "label": 0
                },
                {
                    "sent": "In this other paper, which will appear at and ICD and.",
                    "label": 0
                },
                {
                    "sent": "But did fail for for some of the queries because it's not fully standard compliant in some cases with this filter and not bound is this.",
                    "label": 0
                },
                {
                    "sent": "Yeah, negation queries, so we decided for using Sesame.",
                    "label": 0
                },
                {
                    "sent": "Of course there's something is not representative and there might also still be more efficient implementations that native implementations.",
                    "label": 0
                },
                {
                    "sent": "Yes, thank you.",
                    "label": 0
                },
                {
                    "sent": "May I ask?",
                    "label": 0
                },
                {
                    "sent": "Just a remark, I have to agree with Richard, said data that I use, for example is typically showing Powerset distributions fonzy properties, and on the classes that I used.",
                    "label": 0
                },
                {
                    "sent": "So there you have like 10% as many property names as you have instances and so this would be a rather different setup.",
                    "label": 0
                },
                {
                    "sent": "And 2nd remark which might be interesting to investigate is that in our two in the upcoming new specifications there are a couple of very lightweight.",
                    "label": 0
                },
                {
                    "sent": "Languages which are tailored towards large datasets as well, and when you look at our concept expressions that you want to find the instances of source, send the queries that you get all our exposing joints over the subject and not over the predicate or object typically or object to subject joints.",
                    "label": 0
                },
                {
                    "sent": "Because you have this tree shape and I guess again in this scenario you could get different results or more optimized implementations because of the specific shape that you have.",
                    "label": 0
                },
                {
                    "sent": "So of course the results are kind of the scenario.",
                    "label": 0
                },
                {
                    "sent": "Should we try to do with our benchmark?",
                    "label": 0
                },
                {
                    "sent": "We try to set up something that is, to some degree scenario independent.",
                    "label": 0
                },
                {
                    "sent": "So we try to to create queries that test difficult operator constellations we have created have very absent predicate position.",
                    "label": 0
                },
                {
                    "sent": "We have subject object joints.",
                    "label": 0
                },
                {
                    "sent": "We have object.",
                    "label": 0
                },
                {
                    "sent": "You have all type of joints and.",
                    "label": 0
                },
                {
                    "sent": "We basically wanted to cover as much situations as possible that in some way likely to arise in practice.",
                    "label": 0
                },
                {
                    "sent": "Yeah, OK, but we should take so thank you for the reminder.",
                    "label": 0
                }
            ]
        }
    }
}