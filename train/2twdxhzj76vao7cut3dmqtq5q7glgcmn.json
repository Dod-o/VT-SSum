{
    "id": "2twdxhzj76vao7cut3dmqtq5q7glgcmn",
    "title": "LDScript: a Linked Data Script Language",
    "info": {
        "author": [
            "Olivier Corby, INRIA Sophia Antipolis"
        ],
        "published": "Nov. 28, 2017",
        "recorded": "October 2017",
        "category": [
            "Top->Computer Science->Semantic Web"
        ]
    },
    "url": "http://videolectures.net/iswc2017_corby_LDScript/",
    "segmentation": [
        [
            "So the context of this."
        ],
        [
            "Work is a RDF graph for the semantic web of linked data, and the user of sparker into query RDF graph.",
            "And the focus of their work is on a sparkle extension function for a computing.",
            "So what do we mean by your computing?",
            "For example, we may want to find resources whose income is greater than a factorial N, for example."
        ],
        [
            "So factorial N is not defined or within sparkle, so we need to do it.",
            "We may want to find a function name associated to a resource and colleagues, so we may retrieve the label of a function in a graph.",
            "So something like a phone call phone, so we can't.",
            "We cannot do this directly in a sparkling.",
            "We may want to define our formula, for example in orthology or among queries and we would like to share this formula.",
            "For example, onto the funds that the area is a product of the winds and the lengths, we cannot do either directly in spark, and the sharing cannot do it.",
            "We may we may need to deal with the exotic are data types on the web of data.",
            "For example, we may retrieve numbers, so we may retrieve Roman numbers and we so we cannot deal directly with them within sparkle.",
            "And also we may want to define a specific aggregates.",
            "For example, we would like to have a generic aggregates that computer, the list of values in sparker and then we would like to define an use specific aggregates such as the median for example.",
            "So it's Parker or Ferrell attuned to do."
        ],
        [
            "That it's extension functional.",
            "But the problem is that each each semantic web platform implements or specific protocol and so it is not until appear Auburn.",
            "So for example, in Java in your namespace we we specify the.",
            "For example, the package of the Java class and then.",
            "So we have to leave a sparkle and go into a Java environment.",
            "We have to program Java code and we have to to learn the the Air Dave data Type API, which is not standard owner.",
            "Each platform as its owner API.",
            "So we have to cast another data and then we write the program itself.",
            "For example in Java and to return the result we have to cast it back into their data type.",
            "So it's it's a lot of work and it's not at all within a sparkle in China.",
            "We have to compile it under, maybe to link it into the Sparkle interpreter.",
            "So it's quite complicated.",
            "What we would like to do in a perfect world would be that we would define a function right after the sparkle query and then use it and we would like to offer new compile."
        ],
        [
            "Being unknown or in general.",
            "So this is what this talk is about.",
            "So what we would like?"
        ],
        [
            "I wish we would have a script language.",
            "We would like to be able to define sparkle extension functions.",
            "We would like this function to be as much as possible compliant with Sparkle and we would like to be able to manipulate air DEF.",
            "Entities are def terms.",
            "Are there triple RDF graph and also sparkle entities.",
            "We would like to be able to manipulate sparkle queries and sparkle results.",
            "We would like also to be able to execute.",
            "No sparkle query within a function, so a query will call a function and a function would call a query.",
            "We would like to to facilitate sparkle extensions.",
            "And among all we would like to offer no API, no cast, no compiling and linking.",
            "We would like to stay in the in the sparkle row."
        ],
        [
            "So now some research question.",
            "Or is it possible to define such a link to script language on top of sparkle?",
            "And is it possible to share the same corner sparkle interpreter so as I am here, the answer is yes so."
        ],
        [
            "Solution that we propose is a script language on top of Sparkle filter."
        ],
        [
            "So what time is Sparkle filter made of sparkle filter are made of constants, so we are the RDF literal constant with excess dear data types.",
            "We have a number also Boolean strings, dates, etc.",
            "We have a variables sparkle filter valuables.",
            "We have expression so we can perform a simple computation and a comparison.",
            "We have Boolean connector and or not.",
            "We, however there is a specific graph matching statement within the filter language, so within a filter we can go back to graph matching.",
            "There is the eaves and Elsa statements orange sparkle filter we can compute on if then else statement and we have a function column with a set of predefined sparkle functions and also extension functional.",
            "OK, so we see that we have the basis we have the base for script language and one thing is missing.",
            "So what is missing function definition?",
            "And this is what we propose.",
            "We propose to add a function definition statement on top of Sparkle filter in such a way to define or simple or script functions."
        ],
        [
            "So we introduce a function key were the name of a function is on your eye.",
            "And then we released the parameter of the function as a list of sparkle variables.",
            "Parameter list may be empty.",
            "Then we have brackets for some for some tax and inside the body of a function is sparkle filter expression.",
            "For example, here we have an if then else close.",
            "It computes the factorial function within a sparkle syntax.",
            "OK, so so we introduce function definition using a function keyword and we also introduce new kind of variables.",
            "So the L discrete burger buns the which are managed in a stack in the function call stack where other star sparkle variables are managing the solution mapping.",
            "Provided this, we can reuse Sparkle interpreter.",
            "To execute this kind of function."
        ],
        [
            "So in the first part of the talk I have presented the requirements and the principle of a script language on top of a sparkle filter.",
            "And now I will present several statements that we add to the language in order to in order to be able to define function.",
            "So here I present on 616 statements.",
            "So the first one is a let statement that enables us to do."
        ],
        [
            "Sign local variables.",
            "We do speak with the scope."
        ],
        [
            "The second statement is on a nature writer, or for interrater that enables us to each array torner iterable data structure, such as least graph and sparkle solution mappings."
        ],
        [
            "Then within a function, it's possible to execute a sparkle query.",
            "Hello, more specifically, we can execute a sparkle query within a let statement.",
            "So."
        ],
        [
            "We write within the Let statement.",
            "We write a select where sparkle query and the variable of the select clause here X&Y, are bound in the execution of the body.",
            "So for example, here this function computes the area of a circle.",
            "It retrieves the radius of a circle X.",
            "The reduces are an in the body of the function.",
            "The value R is bound by the select query.",
            "So we have a direct binding from Sparkle valuables and I'll describe."
        ],
        [
            "Then when we call this function, we focus on a specific value of X or specific circles.",
            "Or suppose that X = V. When we call the function, we want to focus the select where query on this specific value, and so the interpreter dynamically inject values close or sparkle values close in order to bind the X variable with value.",
            "So we can also execute."
        ],
        [
            "For a query within a four so we can iterate all the solution of a sparkle query, we can iterate on a construct where query so we can iterate all the triples construct constructed."
        ],
        [
            "We we introduce also a pattern matching in such a way that we can access structural object without API but by pattern matching."
        ],
        [
            "And to manage these objects are triples, grapher, solution mapping.",
            "We introduce later on extension data types and so and so we can check the types of the object."
        ],
        [
            "We also introduce a second order functions.",
            "So far we have the phone call functions that enables us to retrieve the name of a function.",
            "You know sparkle query.",
            "So on RDF graph may associate function names, two classes or instances and we can retrieve the neighborhood function and executed with a phone call.",
            "Apply is the same with the list of arguments.",
            "We have also map and reduce which is a kind of aggregate.",
            "And we also introduce her."
        ],
        [
            "The expression that are under the moose function, so we can define a function on the fly and execute it and on the fly.",
            "This is useful to define our aggregates."
        ],
        [
            "So thanks to this L discrete proposition, we also propose a sparkle natural sparkle extensions."
        ],
        [
            "The first one is or too generic aggregate function that computes the list of values within a sparkle query and once we have the list of value that aggregates all the solution we then we can define a new aggregate function on this list of value.",
            "So for example we can define the median and we can define it using L descript.",
            "So this is the main example for this language.",
            "We can define aggregates form.",
            "Michael queries and just after a sparkle query and execute it, and.",
            "Directly, we also proposed to extend the values and statement with expression in such a way that we can bind the sparkle variables from a list of values and we can emulate a sparkle generate this way.",
            "If we embed your query in function, we can emulate.",
            "We can have sparkle with."
        ],
        [
            "Picture shows or for example.",
            "If you want to count the decendent on the women's side in a family."
        ],
        [
            "We write a query that.",
            "Retrieves the child of type woman and for each weeks we count the number of China.",
            "Then we put this query within a functional pattern X we are X is the focused node and then we're recursively call the pattern function within the query and we saw the pattern function on every child.",
            "So we work recursively through the graph on the woman side and we compute with the recursive and query the number of child on the human side."
        ],
        [
            "So we we we very validated all these ideas.",
            "So all that I said is implemented.",
            "You know semantic web platform.",
            "So the correct semantic Web platform.",
            "We developed several application to shake this idea.",
            "So we developed a shackle validator on the shackle code validator.",
            "So partly in El Descripton party in STL, which is or template language.",
            "And we developed a lot of tools such as the computing the weekday, overdate translator from Roman to decimal number and fibbonaci function, factorial, certain standard deviation, etc.",
            "Tehran we did."
        ],
        [
            "Benchmark it among which so the fee bonechi function so to shake her function corner.",
            "So we program each in El Descript and in Java using those same target or RDF data types, and so it's 18 million function column and L descript is 2.5 times slower than Java, so so the first version is quite.",
            "Performance."
        ],
        [
            "So as a conclusion I presented some ideas through designer script language on top of Sparkle filter.",
            "It enables sparkle extensions.",
            "It introduce 2nd order functions.",
            "It enables query in function and so recursive query.",
            "We introduce pattern matching and custom aggregates.",
            "There is a document technical document online that specify the language in detail with all of the statements.",
            "Not us perspective."
        ],
        [
            "It enables us also to implement linked function that is a function where we can download the definition of a function from its UI OK, and so this is done in fact where we can.",
            "We can also emulate method.",
            "We can also emulate method attachment to classes in an ontology, and we can emulate a method into returns an have object oriented programming on top of her link data.",
            "So this is also done.",
            "And as a real perspective, is a future we would like to add a type checking to checker function.",
            "Before execution.",
            "We would like to have a second implementation to validate it on another platform and we also we would like to work, possibly to leverage our performance in a final version.",
            "Thank you very much."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So the context of this.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Work is a RDF graph for the semantic web of linked data, and the user of sparker into query RDF graph.",
                    "label": 1
                },
                {
                    "sent": "And the focus of their work is on a sparkle extension function for a computing.",
                    "label": 0
                },
                {
                    "sent": "So what do we mean by your computing?",
                    "label": 0
                },
                {
                    "sent": "For example, we may want to find resources whose income is greater than a factorial N, for example.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So factorial N is not defined or within sparkle, so we need to do it.",
                    "label": 0
                },
                {
                    "sent": "We may want to find a function name associated to a resource and colleagues, so we may retrieve the label of a function in a graph.",
                    "label": 1
                },
                {
                    "sent": "So something like a phone call phone, so we can't.",
                    "label": 0
                },
                {
                    "sent": "We cannot do this directly in a sparkling.",
                    "label": 0
                },
                {
                    "sent": "We may want to define our formula, for example in orthology or among queries and we would like to share this formula.",
                    "label": 0
                },
                {
                    "sent": "For example, onto the funds that the area is a product of the winds and the lengths, we cannot do either directly in spark, and the sharing cannot do it.",
                    "label": 0
                },
                {
                    "sent": "We may we may need to deal with the exotic are data types on the web of data.",
                    "label": 0
                },
                {
                    "sent": "For example, we may retrieve numbers, so we may retrieve Roman numbers and we so we cannot deal directly with them within sparkle.",
                    "label": 1
                },
                {
                    "sent": "And also we may want to define a specific aggregates.",
                    "label": 0
                },
                {
                    "sent": "For example, we would like to have a generic aggregates that computer, the list of values in sparker and then we would like to define an use specific aggregates such as the median for example.",
                    "label": 0
                },
                {
                    "sent": "So it's Parker or Ferrell attuned to do.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "That it's extension functional.",
                    "label": 0
                },
                {
                    "sent": "But the problem is that each each semantic web platform implements or specific protocol and so it is not until appear Auburn.",
                    "label": 0
                },
                {
                    "sent": "So for example, in Java in your namespace we we specify the.",
                    "label": 0
                },
                {
                    "sent": "For example, the package of the Java class and then.",
                    "label": 0
                },
                {
                    "sent": "So we have to leave a sparkle and go into a Java environment.",
                    "label": 0
                },
                {
                    "sent": "We have to program Java code and we have to to learn the the Air Dave data Type API, which is not standard owner.",
                    "label": 0
                },
                {
                    "sent": "Each platform as its owner API.",
                    "label": 0
                },
                {
                    "sent": "So we have to cast another data and then we write the program itself.",
                    "label": 0
                },
                {
                    "sent": "For example in Java and to return the result we have to cast it back into their data type.",
                    "label": 0
                },
                {
                    "sent": "So it's it's a lot of work and it's not at all within a sparkle in China.",
                    "label": 0
                },
                {
                    "sent": "We have to compile it under, maybe to link it into the Sparkle interpreter.",
                    "label": 0
                },
                {
                    "sent": "So it's quite complicated.",
                    "label": 0
                },
                {
                    "sent": "What we would like to do in a perfect world would be that we would define a function right after the sparkle query and then use it and we would like to offer new compile.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Being unknown or in general.",
                    "label": 0
                },
                {
                    "sent": "So this is what this talk is about.",
                    "label": 0
                },
                {
                    "sent": "So what we would like?",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "I wish we would have a script language.",
                    "label": 0
                },
                {
                    "sent": "We would like to be able to define sparkle extension functions.",
                    "label": 0
                },
                {
                    "sent": "We would like this function to be as much as possible compliant with Sparkle and we would like to be able to manipulate air DEF.",
                    "label": 0
                },
                {
                    "sent": "Entities are def terms.",
                    "label": 0
                },
                {
                    "sent": "Are there triple RDF graph and also sparkle entities.",
                    "label": 0
                },
                {
                    "sent": "We would like to be able to manipulate sparkle queries and sparkle results.",
                    "label": 0
                },
                {
                    "sent": "We would like also to be able to execute.",
                    "label": 0
                },
                {
                    "sent": "No sparkle query within a function, so a query will call a function and a function would call a query.",
                    "label": 0
                },
                {
                    "sent": "We would like to to facilitate sparkle extensions.",
                    "label": 0
                },
                {
                    "sent": "And among all we would like to offer no API, no cast, no compiling and linking.",
                    "label": 1
                },
                {
                    "sent": "We would like to stay in the in the sparkle row.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So now some research question.",
                    "label": 0
                },
                {
                    "sent": "Or is it possible to define such a link to script language on top of sparkle?",
                    "label": 1
                },
                {
                    "sent": "And is it possible to share the same corner sparkle interpreter so as I am here, the answer is yes so.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Solution that we propose is a script language on top of Sparkle filter.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So what time is Sparkle filter made of sparkle filter are made of constants, so we are the RDF literal constant with excess dear data types.",
                    "label": 0
                },
                {
                    "sent": "We have a number also Boolean strings, dates, etc.",
                    "label": 0
                },
                {
                    "sent": "We have a variables sparkle filter valuables.",
                    "label": 0
                },
                {
                    "sent": "We have expression so we can perform a simple computation and a comparison.",
                    "label": 0
                },
                {
                    "sent": "We have Boolean connector and or not.",
                    "label": 0
                },
                {
                    "sent": "We, however there is a specific graph matching statement within the filter language, so within a filter we can go back to graph matching.",
                    "label": 0
                },
                {
                    "sent": "There is the eaves and Elsa statements orange sparkle filter we can compute on if then else statement and we have a function column with a set of predefined sparkle functions and also extension functional.",
                    "label": 1
                },
                {
                    "sent": "OK, so we see that we have the basis we have the base for script language and one thing is missing.",
                    "label": 0
                },
                {
                    "sent": "So what is missing function definition?",
                    "label": 0
                },
                {
                    "sent": "And this is what we propose.",
                    "label": 0
                },
                {
                    "sent": "We propose to add a function definition statement on top of Sparkle filter in such a way to define or simple or script functions.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So we introduce a function key were the name of a function is on your eye.",
                    "label": 0
                },
                {
                    "sent": "And then we released the parameter of the function as a list of sparkle variables.",
                    "label": 0
                },
                {
                    "sent": "Parameter list may be empty.",
                    "label": 0
                },
                {
                    "sent": "Then we have brackets for some for some tax and inside the body of a function is sparkle filter expression.",
                    "label": 0
                },
                {
                    "sent": "For example, here we have an if then else close.",
                    "label": 0
                },
                {
                    "sent": "It computes the factorial function within a sparkle syntax.",
                    "label": 0
                },
                {
                    "sent": "OK, so so we introduce function definition using a function keyword and we also introduce new kind of variables.",
                    "label": 0
                },
                {
                    "sent": "So the L discrete burger buns the which are managed in a stack in the function call stack where other star sparkle variables are managing the solution mapping.",
                    "label": 1
                },
                {
                    "sent": "Provided this, we can reuse Sparkle interpreter.",
                    "label": 0
                },
                {
                    "sent": "To execute this kind of function.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So in the first part of the talk I have presented the requirements and the principle of a script language on top of a sparkle filter.",
                    "label": 0
                },
                {
                    "sent": "And now I will present several statements that we add to the language in order to in order to be able to define function.",
                    "label": 0
                },
                {
                    "sent": "So here I present on 616 statements.",
                    "label": 0
                },
                {
                    "sent": "So the first one is a let statement that enables us to do.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Sign local variables.",
                    "label": 0
                },
                {
                    "sent": "We do speak with the scope.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The second statement is on a nature writer, or for interrater that enables us to each array torner iterable data structure, such as least graph and sparkle solution mappings.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Then within a function, it's possible to execute a sparkle query.",
                    "label": 0
                },
                {
                    "sent": "Hello, more specifically, we can execute a sparkle query within a let statement.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We write within the Let statement.",
                    "label": 0
                },
                {
                    "sent": "We write a select where sparkle query and the variable of the select clause here X&Y, are bound in the execution of the body.",
                    "label": 0
                },
                {
                    "sent": "So for example, here this function computes the area of a circle.",
                    "label": 0
                },
                {
                    "sent": "It retrieves the radius of a circle X.",
                    "label": 0
                },
                {
                    "sent": "The reduces are an in the body of the function.",
                    "label": 0
                },
                {
                    "sent": "The value R is bound by the select query.",
                    "label": 0
                },
                {
                    "sent": "So we have a direct binding from Sparkle valuables and I'll describe.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Then when we call this function, we focus on a specific value of X or specific circles.",
                    "label": 0
                },
                {
                    "sent": "Or suppose that X = V. When we call the function, we want to focus the select where query on this specific value, and so the interpreter dynamically inject values close or sparkle values close in order to bind the X variable with value.",
                    "label": 0
                },
                {
                    "sent": "So we can also execute.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "For a query within a four so we can iterate all the solution of a sparkle query, we can iterate on a construct where query so we can iterate all the triples construct constructed.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We we introduce also a pattern matching in such a way that we can access structural object without API but by pattern matching.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And to manage these objects are triples, grapher, solution mapping.",
                    "label": 0
                },
                {
                    "sent": "We introduce later on extension data types and so and so we can check the types of the object.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We also introduce a second order functions.",
                    "label": 1
                },
                {
                    "sent": "So far we have the phone call functions that enables us to retrieve the name of a function.",
                    "label": 0
                },
                {
                    "sent": "You know sparkle query.",
                    "label": 0
                },
                {
                    "sent": "So on RDF graph may associate function names, two classes or instances and we can retrieve the neighborhood function and executed with a phone call.",
                    "label": 0
                },
                {
                    "sent": "Apply is the same with the list of arguments.",
                    "label": 0
                },
                {
                    "sent": "We have also map and reduce which is a kind of aggregate.",
                    "label": 0
                },
                {
                    "sent": "And we also introduce her.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The expression that are under the moose function, so we can define a function on the fly and execute it and on the fly.",
                    "label": 0
                },
                {
                    "sent": "This is useful to define our aggregates.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So thanks to this L discrete proposition, we also propose a sparkle natural sparkle extensions.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The first one is or too generic aggregate function that computes the list of values within a sparkle query and once we have the list of value that aggregates all the solution we then we can define a new aggregate function on this list of value.",
                    "label": 0
                },
                {
                    "sent": "So for example we can define the median and we can define it using L descript.",
                    "label": 0
                },
                {
                    "sent": "So this is the main example for this language.",
                    "label": 0
                },
                {
                    "sent": "We can define aggregates form.",
                    "label": 0
                },
                {
                    "sent": "Michael queries and just after a sparkle query and execute it, and.",
                    "label": 0
                },
                {
                    "sent": "Directly, we also proposed to extend the values and statement with expression in such a way that we can bind the sparkle variables from a list of values and we can emulate a sparkle generate this way.",
                    "label": 0
                },
                {
                    "sent": "If we embed your query in function, we can emulate.",
                    "label": 0
                },
                {
                    "sent": "We can have sparkle with.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Picture shows or for example.",
                    "label": 0
                },
                {
                    "sent": "If you want to count the decendent on the women's side in a family.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We write a query that.",
                    "label": 0
                },
                {
                    "sent": "Retrieves the child of type woman and for each weeks we count the number of China.",
                    "label": 0
                },
                {
                    "sent": "Then we put this query within a functional pattern X we are X is the focused node and then we're recursively call the pattern function within the query and we saw the pattern function on every child.",
                    "label": 0
                },
                {
                    "sent": "So we work recursively through the graph on the woman side and we compute with the recursive and query the number of child on the human side.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So we we we very validated all these ideas.",
                    "label": 0
                },
                {
                    "sent": "So all that I said is implemented.",
                    "label": 0
                },
                {
                    "sent": "You know semantic web platform.",
                    "label": 0
                },
                {
                    "sent": "So the correct semantic Web platform.",
                    "label": 0
                },
                {
                    "sent": "We developed several application to shake this idea.",
                    "label": 0
                },
                {
                    "sent": "So we developed a shackle validator on the shackle code validator.",
                    "label": 0
                },
                {
                    "sent": "So partly in El Descripton party in STL, which is or template language.",
                    "label": 0
                },
                {
                    "sent": "And we developed a lot of tools such as the computing the weekday, overdate translator from Roman to decimal number and fibbonaci function, factorial, certain standard deviation, etc.",
                    "label": 0
                },
                {
                    "sent": "Tehran we did.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Benchmark it among which so the fee bonechi function so to shake her function corner.",
                    "label": 0
                },
                {
                    "sent": "So we program each in El Descript and in Java using those same target or RDF data types, and so it's 18 million function column and L descript is 2.5 times slower than Java, so so the first version is quite.",
                    "label": 0
                },
                {
                    "sent": "Performance.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So as a conclusion I presented some ideas through designer script language on top of Sparkle filter.",
                    "label": 0
                },
                {
                    "sent": "It enables sparkle extensions.",
                    "label": 0
                },
                {
                    "sent": "It introduce 2nd order functions.",
                    "label": 0
                },
                {
                    "sent": "It enables query in function and so recursive query.",
                    "label": 0
                },
                {
                    "sent": "We introduce pattern matching and custom aggregates.",
                    "label": 0
                },
                {
                    "sent": "There is a document technical document online that specify the language in detail with all of the statements.",
                    "label": 0
                },
                {
                    "sent": "Not us perspective.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "It enables us also to implement linked function that is a function where we can download the definition of a function from its UI OK, and so this is done in fact where we can.",
                    "label": 0
                },
                {
                    "sent": "We can also emulate method.",
                    "label": 0
                },
                {
                    "sent": "We can also emulate method attachment to classes in an ontology, and we can emulate a method into returns an have object oriented programming on top of her link data.",
                    "label": 1
                },
                {
                    "sent": "So this is also done.",
                    "label": 0
                },
                {
                    "sent": "And as a real perspective, is a future we would like to add a type checking to checker function.",
                    "label": 0
                },
                {
                    "sent": "Before execution.",
                    "label": 0
                },
                {
                    "sent": "We would like to have a second implementation to validate it on another platform and we also we would like to work, possibly to leverage our performance in a final version.",
                    "label": 0
                },
                {
                    "sent": "Thank you very much.",
                    "label": 0
                }
            ]
        }
    }
}