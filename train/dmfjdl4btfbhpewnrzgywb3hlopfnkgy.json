{
    "id": "dmfjdl4btfbhpewnrzgywb3hlopfnkgy",
    "title": "Rapidly Integrating Services into the Linked Data Cloud",
    "info": {
        "author": [
            "Mohsen Taheriyan, University of Southern California"
        ],
        "published": "Dec. 10, 2012",
        "recorded": "November 2012",
        "category": [
            "Top->Computer Science->Semantic Web->Linked Data->Linked Data Cloud",
            "Top->Computer Science->Semantic Web->Semantic Web Services"
        ]
    },
    "url": "http://videolectures.net/semantic_taheriyan_data_cloud/",
    "segmentation": [
        [
            "Hello my name is Monsanto Ariana and I'm a PhD student at University of Southern California.",
            "In this video I'm going to introduce our work on rapidly integrating Web APIs and services into the Link Data Club.",
            "So let me start with an example.",
            "Suppose that we have some RDF data about a geographical point on the map.",
            "We know the latitude and longitude of the point and you're interested to get the neighborhood in formation.",
            "The nearby city and the country in which the point is located.",
            "So the first challenge is how to find the proper API.",
            "And this is not easy because for most of the API's we only have a textual description.",
            "Suppose that we find out which API should be invoked.",
            "The next problem is that most of the API's.",
            "Cannot accept RDF as their as their input, and they also don't produce RDF, so they cannot contribute to the link data.",
            "Here is the semantic service.",
            "Descriptions come into play, but you know, writing these semantic descriptions is a painful task.",
            "It takes much time and you also need to have expertise in semantic web technologies like RDF Sparkle.",
            "Other languages, like XLT transformations.",
            "So we introduce a new approach in which the user interactively create semantics.",
            "Description of services, and then system automatically builds a link API that can directly consume and produce the link data.",
            "So the main contribution of our work is buildinglink APIs are really fast and the user doesn't get involved in any kind of the formalisms, so we already had a data integration tool and what we did was extended extended this tool to be able to model the API's first user provide some examples of the use the.",
            "API invocation URLs from this URLs.",
            "The system uses a machine learning technique and also a graph based algorithm to propose a semantic model that can be refined by the user interactively.",
            "Once we created this semantic model, we use a simple RDF vocabulary to create an RDF representation of the API.",
            "An published this descriptions into the link data Cloud, so if you remember the first challenge is finding the proper API.",
            "So using the semantic description, we publish into the cloud, the user can write the sparkle queries to get the services they want.",
            "The next problem was community communicating the API with the RDF data.",
            "So immediately after publishing the descriptions.",
            "We diploid this link API on a web server.",
            "We have a web server and the users can send their RDF data through HTTP post requests and get back the linked it.",
            "So we evaluated our approach with modeling some geonames services and we got impressive results.",
            "On average, it took only four minutes for the user to build a link API, and this shows that even non expert users can use our tool to rapidly model the existing web API's and convert them to a link API that can accept RDF and produce audio.",
            "So that's it for the morning.",
            "For more information about the software, the viewing, more demos, and the details of the approach, you can go to our website isi.edu/integrationis/karma.",
            "Thank you."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Hello my name is Monsanto Ariana and I'm a PhD student at University of Southern California.",
                    "label": 0
                },
                {
                    "sent": "In this video I'm going to introduce our work on rapidly integrating Web APIs and services into the Link Data Club.",
                    "label": 1
                },
                {
                    "sent": "So let me start with an example.",
                    "label": 0
                },
                {
                    "sent": "Suppose that we have some RDF data about a geographical point on the map.",
                    "label": 0
                },
                {
                    "sent": "We know the latitude and longitude of the point and you're interested to get the neighborhood in formation.",
                    "label": 0
                },
                {
                    "sent": "The nearby city and the country in which the point is located.",
                    "label": 0
                },
                {
                    "sent": "So the first challenge is how to find the proper API.",
                    "label": 0
                },
                {
                    "sent": "And this is not easy because for most of the API's we only have a textual description.",
                    "label": 0
                },
                {
                    "sent": "Suppose that we find out which API should be invoked.",
                    "label": 0
                },
                {
                    "sent": "The next problem is that most of the API's.",
                    "label": 0
                },
                {
                    "sent": "Cannot accept RDF as their as their input, and they also don't produce RDF, so they cannot contribute to the link data.",
                    "label": 0
                },
                {
                    "sent": "Here is the semantic service.",
                    "label": 0
                },
                {
                    "sent": "Descriptions come into play, but you know, writing these semantic descriptions is a painful task.",
                    "label": 0
                },
                {
                    "sent": "It takes much time and you also need to have expertise in semantic web technologies like RDF Sparkle.",
                    "label": 0
                },
                {
                    "sent": "Other languages, like XLT transformations.",
                    "label": 0
                },
                {
                    "sent": "So we introduce a new approach in which the user interactively create semantics.",
                    "label": 0
                },
                {
                    "sent": "Description of services, and then system automatically builds a link API that can directly consume and produce the link data.",
                    "label": 0
                },
                {
                    "sent": "So the main contribution of our work is buildinglink APIs are really fast and the user doesn't get involved in any kind of the formalisms, so we already had a data integration tool and what we did was extended extended this tool to be able to model the API's first user provide some examples of the use the.",
                    "label": 0
                },
                {
                    "sent": "API invocation URLs from this URLs.",
                    "label": 0
                },
                {
                    "sent": "The system uses a machine learning technique and also a graph based algorithm to propose a semantic model that can be refined by the user interactively.",
                    "label": 0
                },
                {
                    "sent": "Once we created this semantic model, we use a simple RDF vocabulary to create an RDF representation of the API.",
                    "label": 0
                },
                {
                    "sent": "An published this descriptions into the link data Cloud, so if you remember the first challenge is finding the proper API.",
                    "label": 0
                },
                {
                    "sent": "So using the semantic description, we publish into the cloud, the user can write the sparkle queries to get the services they want.",
                    "label": 0
                },
                {
                    "sent": "The next problem was community communicating the API with the RDF data.",
                    "label": 0
                },
                {
                    "sent": "So immediately after publishing the descriptions.",
                    "label": 0
                },
                {
                    "sent": "We diploid this link API on a web server.",
                    "label": 0
                },
                {
                    "sent": "We have a web server and the users can send their RDF data through HTTP post requests and get back the linked it.",
                    "label": 0
                },
                {
                    "sent": "So we evaluated our approach with modeling some geonames services and we got impressive results.",
                    "label": 0
                },
                {
                    "sent": "On average, it took only four minutes for the user to build a link API, and this shows that even non expert users can use our tool to rapidly model the existing web API's and convert them to a link API that can accept RDF and produce audio.",
                    "label": 0
                },
                {
                    "sent": "So that's it for the morning.",
                    "label": 0
                },
                {
                    "sent": "For more information about the software, the viewing, more demos, and the details of the approach, you can go to our website isi.edu/integrationis/karma.",
                    "label": 0
                },
                {
                    "sent": "Thank you.",
                    "label": 0
                }
            ]
        }
    }
}