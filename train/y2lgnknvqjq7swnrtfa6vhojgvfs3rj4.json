{
    "id": "y2lgnknvqjq7swnrtfa6vhojgvfs3rj4",
    "title": "Test-Driven Development of Ontologies",
    "info": {
        "author": [
            "C. Maria Keet, Department of Computer Science, University of Cape Town"
        ],
        "published": "July 28, 2016",
        "recorded": "May 2016",
        "category": [
            "Top->Computer Science->Big Data",
            "Top->Computer Science->Semantic Web"
        ]
    },
    "url": "http://videolectures.net/eswc2016_keet_driven_development/",
    "segmentation": [
        [
            "But I'm letting you gave my kids an and this is joint work with and yes Colombian which was sitting over there.",
            "One plus non University of Technology in myself from University of Cape Town, so we'll be talking about test driven development of ontologies.",
            "For."
        ],
        [
            "Sting just some introduction and why we would we want to looking at it then tested driven development in itself and the implementation performance wise looking at it as two discussion and then we."
        ],
        [
            "Include."
        ],
        [
            "So first of all, if it respects to ontology development, I would assume that some most of you have already seen Prodigy Interface.",
            "Here's a typical example, nice graphical interface, or ever what on the one hand is at the back end is our logic.",
            "Description, logics in particular."
        ],
        [
            "On the other hand, to have our serialization, here's an example of the function style syntax.",
            "Uh, so those ontologies are being used and I would say most of the presentations in this conference is looking at actually using them, but they come from someplace somebody's got to develop them and somebody's got to develop good ontologies."
        ],
        [
            "Then"
        ],
        [
            "Looking at spruce."
        ],
        [
            "Given how are you going to develop those good ontologies, then we're looking at specifically the ontology authoring component of.",
            "It is basically adding the actual Axiom Studio Ontology.",
            "If you look at how current ontology developers are doing that is basically looking at in one of those interfaces like with Prodigy, does my ontology already have this axiom or a question is typically if OK?",
            "If I'm going to add this, will my ontology still be consistent?",
            "Or if you press the button with the reasoner and it comes out in consistency, I have to revise anyway, so that is basically like you consider as a trial and error approach, just add it and see what happens.",
            "Others, and in that sense with respect to software engineering methodology, she can consider that test last what is missing of that is basically conceptually one level up is having a systematic test button up front.",
            "Thinking about what are you going to do and what stuff you have in your ontologies?",
            "Or basically what we're going to do here is reusing this notion of software engineering that will test driven development based on test first.",
            "First you analyze your ontology.",
            "If it's not there and obviously it doesn't lead to an inconsistency.",
            "Then you're going to add the knowledge, do it, there were said."
        ],
        [
            "Scenarios on how you could be using that in a very large setting here be focusing on one specific setting.",
            "Wendy Axiom is already given and trying to specify the test driven development for those axioms, so he could have, for instance, an end user specified competency question.",
            "There is some part that translates that natural language competency questions to one or more axioms and that just under one that gets fed into the test driven development system.",
            "Or you have your knowledge engineer provides the axiom already.",
            "Or you can have domain experts uses a template or something is also called a logical macro in ontology design patterns that you have here in this specific axiom really viewable.",
            "Like here, Professor teaches a course that a user would want to add underlying that is a specific pattern or specific type of axiom.",
            "But you have to see subclass there exists Rd for that, So what then behind usability interface is that type of axiom that is fed into a TDD system."
        ],
        [
            "Is that is the general idea of that?"
        ],
        [
            "However, if you really want to board this notion of test driven development to ontology, several questions that you actually have to be answered.",
            "So given that TDD procedure, what does it really mean for ontology development?",
            "DDD itself requires so-called mock objects, but there's more objective, typically for empty methods and functions you don't have methods and functions for ontologies.",
            "But do we need still something like more objects?",
            "And finally, in what way and where, if at all, would it actually affect current and existing methodology for ontology development that are typically based on a waterfall, iterative or lifecycle approaches?"
        ],
        [
            "So you gonna answer all of those questions in due course.",
            "First of all, let me just recap in one slide this notion of TDD from software engineering, in case there are people who didn't do the software engineering module and they're undergrads.",
            "So basically methodology we were right, knew coach only if the automated test has failed.",
            "RTD itself permeates the whole development process, and as mentioned it test first approach rather than a test light last.",
            "Results on comparison with other methodology's and software engineering shows that it improve the understanding, reduces design complexity, it get better software quality, so all of those positive things and it would be nice if we do TDD for ontology engineering.",
            "It would be able to get the same advantages out of it."
        ],
        [
            "It has been applied to your class diagrams and test whisper specifications were specified in OCL for each specific feature in in your math class diagram language evaluation.",
            "There also was that in more spent time with spent on modeling and improving the quality of the moral rather than wasting time writing all sorts of tests.",
            "If you."
        ],
        [
            "It tests in ontology engineering the notion of test is not knew so that it does first proposed in 2006 by Foundation can Jamie.",
            "However, they were exploring ideas, but it didn't have a framework on how that actually the test would workout.",
            "Similar case with the competency questions that tells you what has to be satisfied in the ontology, it doesn't tell you how to actually do it.",
            "There have been do tests for particular types of axioms.",
            "For instance only the disjointness.",
            "But ideally you would want to have that for all the different features you have in your ontology language."
        ],
        [
            "Finally, there is the Tony all has.",
            "It does have a desert.",
            "However, it only looks at subsumption test and not covering all of the features of all itself and the methodology's."
        ],
        [
            "And included either.",
            "So what we set out to do here then is actually working out in detail.",
            "How does TDD works for ontology engineering specifically?"
        ],
        [
            "For all 2.",
            "So a general overview of how test would work is first you have your domain axioms.",
            "They like our professor teaching records or Lion eats at least one Impala has a specific test pattern, for instance here.",
            "Stanley dear over there, the CSUB subsumes there exists RG or its AC has at least one already.",
            "All Jack Bender vocabulary my elements of X that they are in the ontology, which in itself can be construed as a TDD test.",
            "Then we around the actual entity details that we are interested in.",
            "The first execution should fail, either that it is not there or it is not until you update the ontology, run the test again to check to check that it indeed has been added correctly, and then you do some regression testing for running all the previous test.",
            "If there's a conflict, obviously you'll have to resolve it, as this is the usual case for that."
        ],
        [
            "So we have a specification of 42 DES types for freak, and I was basically all of all to DL minus the data properties and ahoskie feature.",
            "Difference however, here with our specification, not just edit for shuriken, not for instance something like UML is that we have more features and we respected it tests instead of doing only tests at instance level that will that checking that an instance must be able to exist.",
            "If you have that axiom there we also can do it at a tee box level and by just querying the ontology so that isn't there like 2 pronged approach or the 42 test is both for the combined tee box test.",
            "And the ebooks test notation that we're using for the TEE box test is another overall an algorithm style notation and the queries themselves in what is called sparkle, all which is basically a merger of Sparkle notation with functional style syntax of all itself.",
            "So we're giving just few examples.",
            "I'm not going to go to roll the 42.",
            "You can see that in an extent in in a paper, and nicely format in an extended technical technical report and make it better readable.",
            "But just to give a flavor of the kind of test that we have and how that actually would workout.",
            "So this is one of the same."
        ],
        [
            "Once we have again the same kind of axiom, Cedar exists Rd what you have.",
            "Up here in a line one is sparkle annotation, so we basically checking for all the subclasses of objects and values are D. If C is in the answer set, that means that that Axiom was already present in the ontology.",
            "If not, then it's not any ontology, so our TDD test returns false, so it is a fairly straightforward one.",
            "As an example of a tee box TDD test with Sparkle Al."
        ],
        [
            "You also can formulated as in E books, tests, meaning that we're going to explicitly introduce the objects.",
            "So in this case what it does is that we create a mock object A.",
            "So yes, indeed we do, you smoke objects, but in a different way than in tedious software engineering.",
            "We have our original axiom.",
            "We create a negation.",
            "We say that replicated instance of that negation another.",
            "This one isn't supposed to be, it should lead to a contradiction if the original axiom is there.",
            "Even if there is no contradiction, so our reason or state is consistent that it means that your original axiom is not there, because then you don't.",
            "Then we don't have any inconsistencies."
        ],
        [
            "Until finally you delete the objects and mark axioms being introduced as a."
        ],
        [
            "Final example off the TDD tests using basically the semantics of all, but you have your subsumption, so if you have an object property are that is subsumed by S, that means that all objects that are related to are also related to S and basically recreate them.",
            "An assertion Rab we check if that also holds for us using the semantics of all itself specified here."
        ],
        [
            "More detail you can see in the paper for all the different tests, so we have implemented all of those ones."
        ],
        [
            "And the thing with that one was basically looking at certain design considerations because there are so many semantic web technologies available and which one would be the best?",
            "What God would give us the best performance?",
            "Basically so one thing is that partially you can do it through the deal query tap and you can use a sparkle all Sparkle deal.",
            "All of those ones have the problem that you actually cannot do properly the our books tests or test with respect to the object properties so they all have that limitation.",
            "You also can you straight away that all API and whichever deal.",
            "Regional you fancy?"
        ],
        [
            "What we have done is implemented it into.",
            "A tool is basically wraps around to.",
            "The actual tests are the actual created as being sent.",
            "It takes care of introducing the objects at the new axioms and deleting those ones and returning the results of it.",
            "So."
        ],
        [
            "Here are brief screenshots of that.",
            "For instance, here again, our African Wildlife Ontology, and in this case you look here.",
            "Up here did you create a new test, Flowers, a subclass of plant parts?",
            "You add your test you have here a set of your test that you may want to execute.",
            "You select which one you want to execute, executed tastic and either delete them, or you can add them straight to the ontology.",
            "Through"
        ],
        [
            "Have you another example where in this case it test fields?",
            "Have you ever insist Impala type of antelope we have in South Africa as a subclass of her before?",
            "In this case it failed.",
            "Then you can save a look we added to the ontology.",
            "You see it here, straightaway updated and you get feedback.",
            "But yes, the axiom has been added to the ontology without actually having the need to go through browsing or the whole ontology.",
            "You can do that with this one simple interface and like 2 clicks once for test and once for adding the ontology."
        ],
        [
            "So I think that we should have those details, but you still would want to attend an order never gave which one has the better performance.",
            "We have all of those technologies sparkle queries, all BGP Dimock object in a box.",
            "Or perhaps just a plain reason are we wanted to 1st know before we send it to the users and do user evaluation seem OK?",
            "Which one is faster?",
            "Because if it's going to be horribly slow no user is going to use it or no little as you develop and basically so.",
            "Therefore this part first before the user testing.",
            "There are two hypothesis to create.",
            "A BCD would be faster than meddling around with all those able objects and that classification time would be have the biggest contribution to the overall time that it takes to execute STD test."
        ],
        [
            "We evaluated at overall with 82 Ontology 67 ontologies from atones like Oil Ontology Library and they're album ontologies.",
            "Another 20 of it, only 15 worked over the L2 ontologies to see which one, if that would make a difference whether out of our own curiosity.",
            "Regroup, deontologist into four buckets with respective size to see if size would matter as well.",
            "News al BGP.",
            "For the sparkle our queries has a built in her mid version 1.3 so to compare with all API in the reason every used her madaras all otherwise it would be an unfair comparison.",
            "Tests were repeated 3 times and we used to your eyes of the ontologies to created the new axioms for the specific domain.",
            "For that they have a whole bunch of box plots and analysis.",
            "I only show a few of them.",
            "If you want to see more you have the online material that further analysis of that but this way."
        ],
        [
            "One is a pretty nice one.",
            "I would say we have on the light blue ones for each of the pairs of tests, so we have here for instance of subclass testing the light blue is with the a box object in the mock objects and this one is the one with sparkle out querying the dark blue.",
            "So we have that here with Disjointness."
        ],
        [
            "Well, and this joint is in this case is the only time where does sparkle queries takes up more times than doing the ebooks test you all the other ones look so a little bit less, although there are quite a few outliers here.",
            "So for that."
        ],
        [
            "You had to do is sadistics test to see if it is indeed statistically significantly faster with the TEE box test.",
            "For the whole set of ontologies Owl an all too.",
            "Taking that as one it didn't.",
            "There was not statistically significant.",
            "However, for the album ontologies and was statistically significant.",
            "Data query based tests as a faster than the a book based tests.",
            "Then more even more interesting, I would say purely for minority engineering perspective is."
        ],
        [
            "Looking at the ontology classification an computation times for the TDD test, the Orange one is a classification, the light blue one is in this case, for the Abebooks test, with a mock objects and as you see here, that the average is there with the blue ones.",
            "They are always lower than the classification, and actually the difference becomes larger with the larger ontology that you have.",
            "If."
        ],
        [
            "Seated here, for instance, with older two DL again the Orange playing classification.",
            "Alai Blue was rated the plane reasoner and the dark blue, which the Sparkle Sparkle an LBP.",
            "So that look actually good at our TDD tests go faster then playing class."
        ],
        [
            "Fication reasoning uh, which you may not have expected.",
            "If you look also at the averages and median for the ebooks based initi books based every compared the classification which the TDD tests at TD is generally faster then the playing classification other a reason for that is that we have some outliers, an another nice benefit is that for the repeated querying you do not have to keep a classifying the ontology.",
            "They classify the ontology once and you can keep on asking about your stuff.",
            "What you have in your ontology.",
            "So that you will save time compared to just you know to try and see that I mentioned at the start you put in one axiom your undereyes or see what happens and hope for the best wishes with your TDD.",
            "Actually you can first query, see is this going to work?",
            "If not then you don't modify your ontology to keep on querying so you actually can save a lot of time.",
            "We did because you don't have to run the reason or that as far as often as it applying classify."
        ],
        [
            "Nation.",
            "And then go cheese."
        ],
        [
            "Discussion issues there is obviously more work to do.",
            "One thing would already mentioned it is not all ontologies we could use.",
            "There was largely due to data type errors at our various reasons.",
            "For the data type errors.",
            "If you want to know we can discuss it afterwards, but otherwise I'm going to run out of time.",
            "How old it issues indeed, is that we only implemented the tee box.",
            "Sorry the the TDD tests for the tee box at the box in a box versions and not dose TDD tests for the our books or basically the subproperties checking for property chains and those things because none of the existing tools were actually supporting that.",
            "So any of those tools that are there would have to be extended to implement.",
            "Those are books tests.",
            "Further on we used only hermit reasoner for the testing, which looks good for our TDD test by a large margin.",
            "Performance, however, is likely to vary by reasoner.",
            "Hiram, it is not the fastest reasoner around the last ontology.",
            "Reason evaluation actually had conclude winning, so we actually may even be able to speed it up further.",
            "Or if you have ontologies that are not using all Al TDL features to be able to send it to a specialized reasoner to further optimize that.",
            "Or"
        ],
        [
            "The issues are that for we did the only for the base axioms that you can add to the ontology.",
            "We didn't do it for larger axioms, so they can be further extended.",
            "Other thing is the user evaluation as mentioned earlier and then there is such thing as the methodology evaluation.",
            "Which brings me to the last point.",
            "The original query, one of the three original questions that we had was OK, how would all of these fit in existing methodology?",
            "Can you did this plug in somewhere and use the overall thing like methodology, oranyan methodology?"
        ],
        [
            "To some extent you could, but actually what you have is basically your ontology lifecycle.",
            "You still have your feasibility, study, architecture, language, decisions that you have to do.",
            "However, if you look at the TD cycle instead of having just one block which.",
            "Ontology development or ontology authoring.",
            "We actually can keep on repeating to do that with respect to selecting a scenario, so you can modify that one as well each its little cycle, you go around, you have your domain axioms.",
            "Utd test is expected to fail.",
            "They update your ontology classifiers.",
            "Utility test is expected to pass.",
            "You have to do your refactoring which may hark back to the original.",
            "Potentially question specification you had at the start.",
            "So anyway, you don't have your waterfall or iterative, but it isn't that sense.",
            "Highly iterative that you have your little cycles going on, so even your TDD ontology development will affect the overall process just anyway as it does with the software engineering when you have your TDD for that.",
            "And."
        ],
        [
            "And then finally."
        ],
        [
            "We're going to the conclusions.",
            "What we have done here is the first comprehensive specification of TDD for ontology authoring.",
            "And we have implemented.",
            "Those tests are very crude and in the tool is called TD.",
            "Auto is a protege plugin for the test driven development tests summarizing the performance evaluation to DTD tests outperformed classification reasoning.",
            "So we actually gonna win time on that one.",
            "If you're using a TDD approach at AT box based test strategy was faster in general than a box based an all API.",
            "Plus the regional was again a little bit faster but we.",
            "Could you some further investigation into that?",
            "I then finally added more."
        ],
        [
            "In the paper on Extended Technical Report an you can play."
        ],
        [
            "Around with the tool yourself."
        ],
        [
            "Downloading from that website over there accident."
        ],
        [
            "Thank you."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "But I'm letting you gave my kids an and this is joint work with and yes Colombian which was sitting over there.",
                    "label": 0
                },
                {
                    "sent": "One plus non University of Technology in myself from University of Cape Town, so we'll be talking about test driven development of ontologies.",
                    "label": 1
                },
                {
                    "sent": "For.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Sting just some introduction and why we would we want to looking at it then tested driven development in itself and the implementation performance wise looking at it as two discussion and then we.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Include.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So first of all, if it respects to ontology development, I would assume that some most of you have already seen Prodigy Interface.",
                    "label": 1
                },
                {
                    "sent": "Here's a typical example, nice graphical interface, or ever what on the one hand is at the back end is our logic.",
                    "label": 0
                },
                {
                    "sent": "Description, logics in particular.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "On the other hand, to have our serialization, here's an example of the function style syntax.",
                    "label": 0
                },
                {
                    "sent": "Uh, so those ontologies are being used and I would say most of the presentations in this conference is looking at actually using them, but they come from someplace somebody's got to develop them and somebody's got to develop good ontologies.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Then",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Looking at spruce.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Given how are you going to develop those good ontologies, then we're looking at specifically the ontology authoring component of.",
                    "label": 0
                },
                {
                    "sent": "It is basically adding the actual Axiom Studio Ontology.",
                    "label": 0
                },
                {
                    "sent": "If you look at how current ontology developers are doing that is basically looking at in one of those interfaces like with Prodigy, does my ontology already have this axiom or a question is typically if OK?",
                    "label": 0
                },
                {
                    "sent": "If I'm going to add this, will my ontology still be consistent?",
                    "label": 1
                },
                {
                    "sent": "Or if you press the button with the reasoner and it comes out in consistency, I have to revise anyway, so that is basically like you consider as a trial and error approach, just add it and see what happens.",
                    "label": 0
                },
                {
                    "sent": "Others, and in that sense with respect to software engineering methodology, she can consider that test last what is missing of that is basically conceptually one level up is having a systematic test button up front.",
                    "label": 0
                },
                {
                    "sent": "Thinking about what are you going to do and what stuff you have in your ontologies?",
                    "label": 0
                },
                {
                    "sent": "Or basically what we're going to do here is reusing this notion of software engineering that will test driven development based on test first.",
                    "label": 1
                },
                {
                    "sent": "First you analyze your ontology.",
                    "label": 0
                },
                {
                    "sent": "If it's not there and obviously it doesn't lead to an inconsistency.",
                    "label": 0
                },
                {
                    "sent": "Then you're going to add the knowledge, do it, there were said.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Scenarios on how you could be using that in a very large setting here be focusing on one specific setting.",
                    "label": 0
                },
                {
                    "sent": "Wendy Axiom is already given and trying to specify the test driven development for those axioms, so he could have, for instance, an end user specified competency question.",
                    "label": 0
                },
                {
                    "sent": "There is some part that translates that natural language competency questions to one or more axioms and that just under one that gets fed into the test driven development system.",
                    "label": 0
                },
                {
                    "sent": "Or you have your knowledge engineer provides the axiom already.",
                    "label": 0
                },
                {
                    "sent": "Or you can have domain experts uses a template or something is also called a logical macro in ontology design patterns that you have here in this specific axiom really viewable.",
                    "label": 0
                },
                {
                    "sent": "Like here, Professor teaches a course that a user would want to add underlying that is a specific pattern or specific type of axiom.",
                    "label": 0
                },
                {
                    "sent": "But you have to see subclass there exists Rd for that, So what then behind usability interface is that type of axiom that is fed into a TDD system.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Is that is the general idea of that?",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "However, if you really want to board this notion of test driven development to ontology, several questions that you actually have to be answered.",
                    "label": 0
                },
                {
                    "sent": "So given that TDD procedure, what does it really mean for ontology development?",
                    "label": 1
                },
                {
                    "sent": "DDD itself requires so-called mock objects, but there's more objective, typically for empty methods and functions you don't have methods and functions for ontologies.",
                    "label": 0
                },
                {
                    "sent": "But do we need still something like more objects?",
                    "label": 0
                },
                {
                    "sent": "And finally, in what way and where, if at all, would it actually affect current and existing methodology for ontology development that are typically based on a waterfall, iterative or lifecycle approaches?",
                    "label": 1
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So you gonna answer all of those questions in due course.",
                    "label": 0
                },
                {
                    "sent": "First of all, let me just recap in one slide this notion of TDD from software engineering, in case there are people who didn't do the software engineering module and they're undergrads.",
                    "label": 0
                },
                {
                    "sent": "So basically methodology we were right, knew coach only if the automated test has failed.",
                    "label": 0
                },
                {
                    "sent": "RTD itself permeates the whole development process, and as mentioned it test first approach rather than a test light last.",
                    "label": 0
                },
                {
                    "sent": "Results on comparison with other methodology's and software engineering shows that it improve the understanding, reduces design complexity, it get better software quality, so all of those positive things and it would be nice if we do TDD for ontology engineering.",
                    "label": 1
                },
                {
                    "sent": "It would be able to get the same advantages out of it.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "It has been applied to your class diagrams and test whisper specifications were specified in OCL for each specific feature in in your math class diagram language evaluation.",
                    "label": 0
                },
                {
                    "sent": "There also was that in more spent time with spent on modeling and improving the quality of the moral rather than wasting time writing all sorts of tests.",
                    "label": 0
                },
                {
                    "sent": "If you.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "It tests in ontology engineering the notion of test is not knew so that it does first proposed in 2006 by Foundation can Jamie.",
                    "label": 0
                },
                {
                    "sent": "However, they were exploring ideas, but it didn't have a framework on how that actually the test would workout.",
                    "label": 0
                },
                {
                    "sent": "Similar case with the competency questions that tells you what has to be satisfied in the ontology, it doesn't tell you how to actually do it.",
                    "label": 0
                },
                {
                    "sent": "There have been do tests for particular types of axioms.",
                    "label": 0
                },
                {
                    "sent": "For instance only the disjointness.",
                    "label": 0
                },
                {
                    "sent": "But ideally you would want to have that for all the different features you have in your ontology language.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Finally, there is the Tony all has.",
                    "label": 0
                },
                {
                    "sent": "It does have a desert.",
                    "label": 0
                },
                {
                    "sent": "However, it only looks at subsumption test and not covering all of the features of all itself and the methodology's.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And included either.",
                    "label": 0
                },
                {
                    "sent": "So what we set out to do here then is actually working out in detail.",
                    "label": 0
                },
                {
                    "sent": "How does TDD works for ontology engineering specifically?",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "For all 2.",
                    "label": 0
                },
                {
                    "sent": "So a general overview of how test would work is first you have your domain axioms.",
                    "label": 0
                },
                {
                    "sent": "They like our professor teaching records or Lion eats at least one Impala has a specific test pattern, for instance here.",
                    "label": 0
                },
                {
                    "sent": "Stanley dear over there, the CSUB subsumes there exists RG or its AC has at least one already.",
                    "label": 0
                },
                {
                    "sent": "All Jack Bender vocabulary my elements of X that they are in the ontology, which in itself can be construed as a TDD test.",
                    "label": 0
                },
                {
                    "sent": "Then we around the actual entity details that we are interested in.",
                    "label": 0
                },
                {
                    "sent": "The first execution should fail, either that it is not there or it is not until you update the ontology, run the test again to check to check that it indeed has been added correctly, and then you do some regression testing for running all the previous test.",
                    "label": 0
                },
                {
                    "sent": "If there's a conflict, obviously you'll have to resolve it, as this is the usual case for that.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So we have a specification of 42 DES types for freak, and I was basically all of all to DL minus the data properties and ahoskie feature.",
                    "label": 0
                },
                {
                    "sent": "Difference however, here with our specification, not just edit for shuriken, not for instance something like UML is that we have more features and we respected it tests instead of doing only tests at instance level that will that checking that an instance must be able to exist.",
                    "label": 0
                },
                {
                    "sent": "If you have that axiom there we also can do it at a tee box level and by just querying the ontology so that isn't there like 2 pronged approach or the 42 test is both for the combined tee box test.",
                    "label": 0
                },
                {
                    "sent": "And the ebooks test notation that we're using for the TEE box test is another overall an algorithm style notation and the queries themselves in what is called sparkle, all which is basically a merger of Sparkle notation with functional style syntax of all itself.",
                    "label": 0
                },
                {
                    "sent": "So we're giving just few examples.",
                    "label": 0
                },
                {
                    "sent": "I'm not going to go to roll the 42.",
                    "label": 0
                },
                {
                    "sent": "You can see that in an extent in in a paper, and nicely format in an extended technical technical report and make it better readable.",
                    "label": 0
                },
                {
                    "sent": "But just to give a flavor of the kind of test that we have and how that actually would workout.",
                    "label": 0
                },
                {
                    "sent": "So this is one of the same.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Once we have again the same kind of axiom, Cedar exists Rd what you have.",
                    "label": 0
                },
                {
                    "sent": "Up here in a line one is sparkle annotation, so we basically checking for all the subclasses of objects and values are D. If C is in the answer set, that means that that Axiom was already present in the ontology.",
                    "label": 0
                },
                {
                    "sent": "If not, then it's not any ontology, so our TDD test returns false, so it is a fairly straightforward one.",
                    "label": 0
                },
                {
                    "sent": "As an example of a tee box TDD test with Sparkle Al.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "You also can formulated as in E books, tests, meaning that we're going to explicitly introduce the objects.",
                    "label": 0
                },
                {
                    "sent": "So in this case what it does is that we create a mock object A.",
                    "label": 0
                },
                {
                    "sent": "So yes, indeed we do, you smoke objects, but in a different way than in tedious software engineering.",
                    "label": 0
                },
                {
                    "sent": "We have our original axiom.",
                    "label": 0
                },
                {
                    "sent": "We create a negation.",
                    "label": 0
                },
                {
                    "sent": "We say that replicated instance of that negation another.",
                    "label": 0
                },
                {
                    "sent": "This one isn't supposed to be, it should lead to a contradiction if the original axiom is there.",
                    "label": 0
                },
                {
                    "sent": "Even if there is no contradiction, so our reason or state is consistent that it means that your original axiom is not there, because then you don't.",
                    "label": 0
                },
                {
                    "sent": "Then we don't have any inconsistencies.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Until finally you delete the objects and mark axioms being introduced as a.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Final example off the TDD tests using basically the semantics of all, but you have your subsumption, so if you have an object property are that is subsumed by S, that means that all objects that are related to are also related to S and basically recreate them.",
                    "label": 0
                },
                {
                    "sent": "An assertion Rab we check if that also holds for us using the semantics of all itself specified here.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "More detail you can see in the paper for all the different tests, so we have implemented all of those ones.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And the thing with that one was basically looking at certain design considerations because there are so many semantic web technologies available and which one would be the best?",
                    "label": 0
                },
                {
                    "sent": "What God would give us the best performance?",
                    "label": 0
                },
                {
                    "sent": "Basically so one thing is that partially you can do it through the deal query tap and you can use a sparkle all Sparkle deal.",
                    "label": 0
                },
                {
                    "sent": "All of those ones have the problem that you actually cannot do properly the our books tests or test with respect to the object properties so they all have that limitation.",
                    "label": 0
                },
                {
                    "sent": "You also can you straight away that all API and whichever deal.",
                    "label": 0
                },
                {
                    "sent": "Regional you fancy?",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "What we have done is implemented it into.",
                    "label": 0
                },
                {
                    "sent": "A tool is basically wraps around to.",
                    "label": 0
                },
                {
                    "sent": "The actual tests are the actual created as being sent.",
                    "label": 0
                },
                {
                    "sent": "It takes care of introducing the objects at the new axioms and deleting those ones and returning the results of it.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Here are brief screenshots of that.",
                    "label": 0
                },
                {
                    "sent": "For instance, here again, our African Wildlife Ontology, and in this case you look here.",
                    "label": 0
                },
                {
                    "sent": "Up here did you create a new test, Flowers, a subclass of plant parts?",
                    "label": 0
                },
                {
                    "sent": "You add your test you have here a set of your test that you may want to execute.",
                    "label": 0
                },
                {
                    "sent": "You select which one you want to execute, executed tastic and either delete them, or you can add them straight to the ontology.",
                    "label": 0
                },
                {
                    "sent": "Through",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Have you another example where in this case it test fields?",
                    "label": 0
                },
                {
                    "sent": "Have you ever insist Impala type of antelope we have in South Africa as a subclass of her before?",
                    "label": 0
                },
                {
                    "sent": "In this case it failed.",
                    "label": 0
                },
                {
                    "sent": "Then you can save a look we added to the ontology.",
                    "label": 0
                },
                {
                    "sent": "You see it here, straightaway updated and you get feedback.",
                    "label": 0
                },
                {
                    "sent": "But yes, the axiom has been added to the ontology without actually having the need to go through browsing or the whole ontology.",
                    "label": 0
                },
                {
                    "sent": "You can do that with this one simple interface and like 2 clicks once for test and once for adding the ontology.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So I think that we should have those details, but you still would want to attend an order never gave which one has the better performance.",
                    "label": 0
                },
                {
                    "sent": "We have all of those technologies sparkle queries, all BGP Dimock object in a box.",
                    "label": 0
                },
                {
                    "sent": "Or perhaps just a plain reason are we wanted to 1st know before we send it to the users and do user evaluation seem OK?",
                    "label": 0
                },
                {
                    "sent": "Which one is faster?",
                    "label": 0
                },
                {
                    "sent": "Because if it's going to be horribly slow no user is going to use it or no little as you develop and basically so.",
                    "label": 0
                },
                {
                    "sent": "Therefore this part first before the user testing.",
                    "label": 0
                },
                {
                    "sent": "There are two hypothesis to create.",
                    "label": 0
                },
                {
                    "sent": "A BCD would be faster than meddling around with all those able objects and that classification time would be have the biggest contribution to the overall time that it takes to execute STD test.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We evaluated at overall with 82 Ontology 67 ontologies from atones like Oil Ontology Library and they're album ontologies.",
                    "label": 0
                },
                {
                    "sent": "Another 20 of it, only 15 worked over the L2 ontologies to see which one, if that would make a difference whether out of our own curiosity.",
                    "label": 0
                },
                {
                    "sent": "Regroup, deontologist into four buckets with respective size to see if size would matter as well.",
                    "label": 0
                },
                {
                    "sent": "News al BGP.",
                    "label": 0
                },
                {
                    "sent": "For the sparkle our queries has a built in her mid version 1.3 so to compare with all API in the reason every used her madaras all otherwise it would be an unfair comparison.",
                    "label": 0
                },
                {
                    "sent": "Tests were repeated 3 times and we used to your eyes of the ontologies to created the new axioms for the specific domain.",
                    "label": 0
                },
                {
                    "sent": "For that they have a whole bunch of box plots and analysis.",
                    "label": 0
                },
                {
                    "sent": "I only show a few of them.",
                    "label": 0
                },
                {
                    "sent": "If you want to see more you have the online material that further analysis of that but this way.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "One is a pretty nice one.",
                    "label": 0
                },
                {
                    "sent": "I would say we have on the light blue ones for each of the pairs of tests, so we have here for instance of subclass testing the light blue is with the a box object in the mock objects and this one is the one with sparkle out querying the dark blue.",
                    "label": 0
                },
                {
                    "sent": "So we have that here with Disjointness.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Well, and this joint is in this case is the only time where does sparkle queries takes up more times than doing the ebooks test you all the other ones look so a little bit less, although there are quite a few outliers here.",
                    "label": 0
                },
                {
                    "sent": "So for that.",
                    "label": 0
                }
            ]
        },
        "clip_31": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "You had to do is sadistics test to see if it is indeed statistically significantly faster with the TEE box test.",
                    "label": 0
                },
                {
                    "sent": "For the whole set of ontologies Owl an all too.",
                    "label": 0
                },
                {
                    "sent": "Taking that as one it didn't.",
                    "label": 0
                },
                {
                    "sent": "There was not statistically significant.",
                    "label": 0
                },
                {
                    "sent": "However, for the album ontologies and was statistically significant.",
                    "label": 0
                },
                {
                    "sent": "Data query based tests as a faster than the a book based tests.",
                    "label": 0
                },
                {
                    "sent": "Then more even more interesting, I would say purely for minority engineering perspective is.",
                    "label": 0
                }
            ]
        },
        "clip_32": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Looking at the ontology classification an computation times for the TDD test, the Orange one is a classification, the light blue one is in this case, for the Abebooks test, with a mock objects and as you see here, that the average is there with the blue ones.",
                    "label": 1
                },
                {
                    "sent": "They are always lower than the classification, and actually the difference becomes larger with the larger ontology that you have.",
                    "label": 0
                },
                {
                    "sent": "If.",
                    "label": 0
                }
            ]
        },
        "clip_33": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Seated here, for instance, with older two DL again the Orange playing classification.",
                    "label": 0
                },
                {
                    "sent": "Alai Blue was rated the plane reasoner and the dark blue, which the Sparkle Sparkle an LBP.",
                    "label": 0
                },
                {
                    "sent": "So that look actually good at our TDD tests go faster then playing class.",
                    "label": 0
                }
            ]
        },
        "clip_34": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Fication reasoning uh, which you may not have expected.",
                    "label": 0
                },
                {
                    "sent": "If you look also at the averages and median for the ebooks based initi books based every compared the classification which the TDD tests at TD is generally faster then the playing classification other a reason for that is that we have some outliers, an another nice benefit is that for the repeated querying you do not have to keep a classifying the ontology.",
                    "label": 0
                },
                {
                    "sent": "They classify the ontology once and you can keep on asking about your stuff.",
                    "label": 0
                },
                {
                    "sent": "What you have in your ontology.",
                    "label": 0
                },
                {
                    "sent": "So that you will save time compared to just you know to try and see that I mentioned at the start you put in one axiom your undereyes or see what happens and hope for the best wishes with your TDD.",
                    "label": 0
                },
                {
                    "sent": "Actually you can first query, see is this going to work?",
                    "label": 0
                },
                {
                    "sent": "If not then you don't modify your ontology to keep on querying so you actually can save a lot of time.",
                    "label": 0
                },
                {
                    "sent": "We did because you don't have to run the reason or that as far as often as it applying classify.",
                    "label": 0
                }
            ]
        },
        "clip_35": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Nation.",
                    "label": 0
                },
                {
                    "sent": "And then go cheese.",
                    "label": 0
                }
            ]
        },
        "clip_36": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Discussion issues there is obviously more work to do.",
                    "label": 0
                },
                {
                    "sent": "One thing would already mentioned it is not all ontologies we could use.",
                    "label": 0
                },
                {
                    "sent": "There was largely due to data type errors at our various reasons.",
                    "label": 0
                },
                {
                    "sent": "For the data type errors.",
                    "label": 0
                },
                {
                    "sent": "If you want to know we can discuss it afterwards, but otherwise I'm going to run out of time.",
                    "label": 0
                },
                {
                    "sent": "How old it issues indeed, is that we only implemented the tee box.",
                    "label": 0
                },
                {
                    "sent": "Sorry the the TDD tests for the tee box at the box in a box versions and not dose TDD tests for the our books or basically the subproperties checking for property chains and those things because none of the existing tools were actually supporting that.",
                    "label": 0
                },
                {
                    "sent": "So any of those tools that are there would have to be extended to implement.",
                    "label": 0
                },
                {
                    "sent": "Those are books tests.",
                    "label": 0
                },
                {
                    "sent": "Further on we used only hermit reasoner for the testing, which looks good for our TDD test by a large margin.",
                    "label": 0
                },
                {
                    "sent": "Performance, however, is likely to vary by reasoner.",
                    "label": 0
                },
                {
                    "sent": "Hiram, it is not the fastest reasoner around the last ontology.",
                    "label": 0
                },
                {
                    "sent": "Reason evaluation actually had conclude winning, so we actually may even be able to speed it up further.",
                    "label": 0
                },
                {
                    "sent": "Or if you have ontologies that are not using all Al TDL features to be able to send it to a specialized reasoner to further optimize that.",
                    "label": 0
                },
                {
                    "sent": "Or",
                    "label": 0
                }
            ]
        },
        "clip_37": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The issues are that for we did the only for the base axioms that you can add to the ontology.",
                    "label": 0
                },
                {
                    "sent": "We didn't do it for larger axioms, so they can be further extended.",
                    "label": 0
                },
                {
                    "sent": "Other thing is the user evaluation as mentioned earlier and then there is such thing as the methodology evaluation.",
                    "label": 0
                },
                {
                    "sent": "Which brings me to the last point.",
                    "label": 0
                },
                {
                    "sent": "The original query, one of the three original questions that we had was OK, how would all of these fit in existing methodology?",
                    "label": 0
                },
                {
                    "sent": "Can you did this plug in somewhere and use the overall thing like methodology, oranyan methodology?",
                    "label": 0
                }
            ]
        },
        "clip_38": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "To some extent you could, but actually what you have is basically your ontology lifecycle.",
                    "label": 0
                },
                {
                    "sent": "You still have your feasibility, study, architecture, language, decisions that you have to do.",
                    "label": 0
                },
                {
                    "sent": "However, if you look at the TD cycle instead of having just one block which.",
                    "label": 0
                },
                {
                    "sent": "Ontology development or ontology authoring.",
                    "label": 0
                },
                {
                    "sent": "We actually can keep on repeating to do that with respect to selecting a scenario, so you can modify that one as well each its little cycle, you go around, you have your domain axioms.",
                    "label": 0
                },
                {
                    "sent": "Utd test is expected to fail.",
                    "label": 0
                },
                {
                    "sent": "They update your ontology classifiers.",
                    "label": 0
                },
                {
                    "sent": "Utility test is expected to pass.",
                    "label": 0
                },
                {
                    "sent": "You have to do your refactoring which may hark back to the original.",
                    "label": 0
                },
                {
                    "sent": "Potentially question specification you had at the start.",
                    "label": 0
                },
                {
                    "sent": "So anyway, you don't have your waterfall or iterative, but it isn't that sense.",
                    "label": 0
                },
                {
                    "sent": "Highly iterative that you have your little cycles going on, so even your TDD ontology development will affect the overall process just anyway as it does with the software engineering when you have your TDD for that.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                }
            ]
        },
        "clip_39": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And then finally.",
                    "label": 0
                }
            ]
        },
        "clip_40": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We're going to the conclusions.",
                    "label": 0
                },
                {
                    "sent": "What we have done here is the first comprehensive specification of TDD for ontology authoring.",
                    "label": 0
                },
                {
                    "sent": "And we have implemented.",
                    "label": 0
                },
                {
                    "sent": "Those tests are very crude and in the tool is called TD.",
                    "label": 0
                },
                {
                    "sent": "Auto is a protege plugin for the test driven development tests summarizing the performance evaluation to DTD tests outperformed classification reasoning.",
                    "label": 0
                },
                {
                    "sent": "So we actually gonna win time on that one.",
                    "label": 0
                },
                {
                    "sent": "If you're using a TDD approach at AT box based test strategy was faster in general than a box based an all API.",
                    "label": 0
                },
                {
                    "sent": "Plus the regional was again a little bit faster but we.",
                    "label": 0
                },
                {
                    "sent": "Could you some further investigation into that?",
                    "label": 0
                },
                {
                    "sent": "I then finally added more.",
                    "label": 0
                }
            ]
        },
        "clip_41": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "In the paper on Extended Technical Report an you can play.",
                    "label": 0
                }
            ]
        },
        "clip_42": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Around with the tool yourself.",
                    "label": 0
                }
            ]
        },
        "clip_43": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Downloading from that website over there accident.",
                    "label": 0
                }
            ]
        },
        "clip_44": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Thank you.",
                    "label": 0
                }
            ]
        }
    }
}