{
    "id": "k3gnuqexw5634suutebtagxjbwboaoys",
    "title": "A QCQP Approach to Triangulation",
    "info": {
        "author": [
            "Chris Aholt, University of Washington"
        ],
        "chairman": [
            "Jean Ponce, INRIA",
            "Tomas Pajdla, Czech Technical University in Prague"
        ],
        "published": "Nov. 12, 2012",
        "recorded": "October 2012",
        "category": [
            "Top->Computer Science->Computer Vision"
        ]
    },
    "url": "http://videolectures.net/eccv2012_aholt_triangulation/",
    "segmentation": [
        [
            "I get to talk to you today about an approach for solving the triangulation problem based on recognizing it as a quadratically constrained quadratic program."
        ],
        [
            "The first step is just to actually explain the problems that we're on the same page.",
            "The triangulation problem given N 3 by 4 camera matrices P1 through PN and I'm given N noisy 2 dimensional observations X1 hat through XN hat here XI hat is 2 dimensional projection of a world point which has been perturbed by some amount of noise and our goal is to reconstruct the world point which most likely gave us these noisy projections.",
            "Under the assumption of Gaussian noise, it translates to the familiar yellow optimization problem, which is just minimizing the sum of squares of XI minus X hat, where XI is a true projection of a world point X.",
            "By replacing each little XI with its rational formulation shown here, we see that really this is just an unconstrained rational optimization problem over our three.",
            "And there are many."
        ],
        [
            "That you can use to try and solve this problem.",
            "One is kind of linear initialization based on some nonlinear refinement with."
        ],
        [
            "Is there are no guarantees on the optimality of the points you get though Hartley and Tio do have a way to verify optimality of certain local solutions.",
            "Hartley and Sturm, 15 years ago solved the two view triangulation problem by reducing it to finding all the roots of some degree 6 polynomial and then there were some extensions of this.",
            "Two N = 3 by Stephanie's and others where they use groebner basis techniques to reduce the problem to finding all the roots of a degree 47 polynomial.",
            "Unfortunately the."
        ],
        [
            "Techniques are not really usefully extendable to higher N. You could perform relaxations of the problem based on branch and bound in fractional programming, or their semidefinite relaxations which were introduced to the community in 2007.",
            "My culinarian"
        ],
        [
            "But these if you want any kind of.",
            "Guarantee on your global optimality.",
            "You're going to take time, which is exponential in the number of cameras.",
            "So our attempt is to."
        ],
        [
            "Solve the triangulation problem by getting a polynomial time algorithm in N. We use semidefinite relaxations, but we're going to pay close attention to the algebraic structure that comes up in these and the geometric structure that comes up in these relaxations."
        ],
        [
            "Alright, to start off, get right into explaining our relaxation.",
            "We're going to take our unconstrained optimization problem and turn it into a constrained optimization problem simply by introducing the little exercise as variables."
        ],
        [
            "For which we're optimizing.",
            "OK, subject to the constraint that they look like this for some world Point X.",
            "Now for some notational help I'm going to collect all those."
        ],
        [
            "Size into 12 N dimensional tuple.",
            "Call it little X.",
            "So then my objective has just become the norm of X -- X hat squared, where X hat is this two in dimensional tuple of noisy images.",
            "I'm also going to collect all my constraints into one set called V, so V is the set of all X1 through XN.",
            "Which each XI is the image of some world Point X.",
            "Now this is just a notational change in their problem, but it has a radical effect of how I view the triangulation problem.",
            "Now I view it as someone."
        ],
        [
            "Gives me a noisy tuple of images X hat and my goal is to find the closest point on this constraint set V. Let's look at the can."
        ],
        [
            "Except for a second, as you take X and you move it around in curves in three dimensional space, that gives you curves in each of the images, and V is the set of all the stuff that gets cut out in these images.",
            "If you have any point X one through XN which lies on this constraint set V, it's very easy to reconstruct the world Point X just by back projecting the raise.",
            "So this begs the question of do we?"
        ],
        [
            "We need to talk about the world Point X at all.",
            "Maybe we can do this all in terms of the images.",
            "This would be especially useful because this optimization.",
            "The objective here doesn't involve the world Point X either, so we were kind of hoping to remove this world point from the whole optimization problem.",
            "Indeed, you can."
        ],
        [
            "For N = 2.",
            "We know that the constraints it is just the the tuples, the pairs X One X2 that satisfy the familiar epipolar equation.",
            "Here, F-12 is the three by three fundamental matrix between cameras one and two, and this equation is some quadratic constraint on the coordinates of X1 and X2.",
            "So the constraints that is described just by a single quadratic.",
            "For N greater than two."
        ],
        [
            "You have epipolar equations between any pairs of cameras, but you also have cubic constraints which come from trifocal tensors between triples of cameras.",
            "I Hayden Ashram tell us that these are enough to describe the entire constraints at V, but I don't like cubix, so I'm going to inst."
        ],
        [
            "Head drop them and now my optimization problem triangulation becomes not finding the closest point in X hat to V, but rather finding the closest point in X hat to W. Now this seems like so W here I should mention is defined just by the quadratics I dropped, the cubic constraints.",
            "It seems that W is a relaxation of ER, priore, it's bigger the stuff and we have to satisfy more constraints than the stuff in W does, but Hayden asked him are nice enough to tell us."
        ],
        [
            "V&W are really the same set, as long as you're not dealing with coplanar cameras.",
            "So in moving from optimization from BW, we've only lost something.",
            "In the case of coplanar cameras.",
            "In our experiment section will see exactly what we've lost."
        ],
        [
            "Alright, so in moving from VW, we've changed triangulation and now finally recognized it as a quadratically constrained quadratic program because W was defined by design by quadratics, so I'm looking for this closest point to X hat on W. I'm going to call that closest point X star little X star.",
            "Here is just a tuple of denoised images, image projections.",
            "Finding this X star is a hard problem.",
            "Luckily.",
            "There exists a way, a standard way of realizing any quadratically constrained quadratic program as a rank constrained semidefinite program.",
            "I'll spare you the algebraic manipulations that go into this, but the geometric idea is that you're taking your constraints at W, and here it depicted as some 2 dimensional curve.",
            "We're going to lift it to a higher dimensional matrix space here."
        ],
        [
            "Now depicted as a curve in three dimensions.",
            "Your objective has become minimizing some kind of linear function, so you're taking a hyperplane and moving it until it hits this higher dimensional constraint set.",
            "These are equivalent problems, so the bottom one is still hard, but all the hardnesses contained exactly in that rank constraint.",
            "So you do the only obvious thing you could think of, drop the rank constraint."
        ],
        [
            "And you get a bona fide semidefinite program.",
            "What this is is a convex relaxation of the triangulation problem.",
            "It's solvable in polynomial time in the number of cameras.",
            "Now I should mention that this is all very standard.",
            "I've done nothing novel here.",
            "The manipulations on this page.",
            "This is this is a semidefinite relaxation.",
            "It's called the first semidefinite relaxation.",
            "First, in a general hierarchy of relaxations that I could have applied to the problem.",
            "There's a vast literature on these on these relaxations, so again, this is nothing new, but what's new is that I want to tell you in the case of triangulation, this first semidefinite relaxation really works well.",
            "It's kind of all we need.",
            "What I mean by."
        ],
        [
            "That is the output of this semidefinite program is some positive semidefinite matrix, will call it Y star, and you can look into its structure and extract from that what you think should be a candidate solution for your quadratically constrained quadratic program.",
            "For general KPIs, this won't be the optimal solution for the cucp, but for triangulation it often is, so I'm going to call this my candidate denoised image.",
            "I could go onto experiments right now and just show you that often the candidate denoised image looks like the true denoised image, but we want to do a little bit more than that.",
            "I want conditions under which I can guarantee that the candidate denoised image is actually equal to the optimal denoised image from arcpy.",
            "We do have such conditions in order to talk about them, I need to get a little bit deeper into the geometry of the QCQP."
        ],
        [
            "So here's the problem.",
            "We had X hat we had W. We're looking for X star.",
            "I don't know what X star is, but I do know that there exists some affine space containing extra nexhat."
        ],
        [
            "Which is perpendicular to my constraint set W. Once I have that afine space, you can."
        ],
        [
            "Find a map from its domain into N dimensional space to some new affine space in the space of two N by two and symmetric matrices where you're taking this xtar and mapping it to the identity.",
            "An X hat that noisy observation just comes along for the ride to some white hat.",
            "In the space of symmetric matrices, there's a beautiful cone.",
            "The positive definite cone of POS."
        ],
        [
            "Definite matrices the identity lives right in the interior of that cone, and when X hat came along, it may or may not land inside of that cone.",
            "But that may or may not land inside is exactly the condition under which we can guarantee optimality of our of our candidate solution in."
        ],
        [
            "In form it says that the true denoised image from the QCQP is equal to the candidate denoised image from the semidefinite program if and only if when you construct this map X hat Maps to inside of the positive definite code.",
            "This can be formulated for general QC cubes with quality constraints.",
            "The nice thing about it is that it lends itself to a polynomial time test for optimality, so I could take my candidate solution and test in polynomial time if it is indeed optimal for triangulation.",
            "This test does have false negatives, so even if it comes out and says no, I can't guarantee optimality.",
            "It still could be optimal, we just can't guarantee it.",
            "OK, so that's our triangulation algorithm.",
            "We recognize it as a QCQP.",
            "We relax it to a semidefinite program, extract the candidate solution in polynomial time, and then verify ITS global optimality in polynomial time."
        ],
        [
            "The big selling point of our algorithm is that we can guarantee that it will always work in the case of small noise.",
            "More than that."
        ],
        [
            "Under any noise assumption, this is kind of a bonus.",
            "It always works for two view triangulation.",
            "This is why our algorithm works in theory."
        ],
        [
            "See it work in practice.",
            "So for practice we set up some synthetic experiments where we randomly generated points in the unit cube and then randomly generated cameras on a 2 sphere within image.",
            "These 3 dimensional points in the cameras and perturb the images by some amount of noise and ran our triangulation algorithm on these noised up images.",
            "On the Y axis, here is the fraction of times our algorithm guarantees global optimality.",
            "For our candidate solutions versus the X axis is the standard deviation of the noise.",
            "I should be clear that the maximum standard deviation of the noise we applied corresponds to about 10% of the images.",
            "So the first thing to notice is that the algorithm seems to perform very, very well in the case of small noise.",
            "Definitely about 100% of the time we can guarantee optimality for the reconstructions, but even oddly, in the case of ridiculous amounts of noise for two views it is 100% of the time no matter what noise level.",
            "This was guaranteed by the theory.",
            "But this we're just showing that it does indeed work in practice.",
            "The next thing to notice is that we move from 3 to 5 to 7 views.",
            "We actually seem to get more robustness to noise.",
            "That's a phenomenon we don't quite yet understand, but three views you definitely have the worst performance with respect to noise.",
            "This is entirely because three cameras are always coplanar, so in the next set of experiments we really see that and what we mean by that."
        ],
        [
            "We force all our cameras, generate randomly generated cameras to be coplanar, and we see no matter 35 or 7 views, you get the same drop off that you saw with the reviews.",
            "So remember, we switched from VW in the optimization.",
            "We dropped the cubic constraints.",
            "Those I said are necessary for coplanar cameras, and that's exactly the reason that you get this drop off.",
            "In the coplanar case, although it still works.",
            "Approximately 95% of the time with.",
            "You know reasonable amounts of noise for coplanar cameras.",
            "We also tested a extremely degenerate case."
        ],
        [
            "We have all our cameras in a line of viewing.",
            "Viewing this point set along an axis and here we see rapid degradation with amounts with large amounts of noise.",
            "But all these synthetic experiments were designed to torture test the algorithm.",
            "We also ran it on some real world experiments.",
            "Real world."
        ],
        [
            "Datasets I'll draw your attention to the optimal column here.",
            "It measures the fraction of the times we're able to guarantee global optimality of our reconstructions.",
            "Using our algorithm for the Model House in Dinosaur datasets, were able to guarantee 100% of the time that our reconstructions are optimal, even though these kind of correspond to the coplanar ISH camera setup.",
            "Even in the core data set which corresponds to the highly degenerate kind of cameras and align, we still guarantee optimality of our reconstructions.",
            "All but one of them.",
            "So this works really well on real datasets.",
            "The reason the intuition behind that is because this does work well.",
            "We can guarantee it works well for small noise and in real datasets large noise doesn't happen unless you've got outliers."
        ],
        [
            "So finally I'll end with a summary of our contributions.",
            "We have given a polynomial time algorithm in which you can extract a candidate solution for triangulation and verify global optimality of that candidate solution.",
            "We gain a geometric understanding of the triangulation problem by viewing it kind of unintuitive liasa constrained optimization problem, and then we were able to find theorems through this problem for general SDP relaxations of general quadratically constrained quadratic programs.",
            "Thank you.",
            "Did you ever try to see what happens if you just iterate them home?",
            "Start to view, just iterate them home.",
            "Do you also get 100% on these real world datasets then?",
            "So you mean?",
            "Say it again.",
            "You have two views at a time and you just kind of know know you take one of the two views solutions or you ransack a little bit over the two view solutions.",
            "You take a nap, iterative.",
            "Just follow the gradient or something.",
            "Do you still always hit the minima or not?",
            "I think we played with the Dinosaur and I think our conclusion after doing all this work for three view.",
            "Grabner bays work work work work was that if you iterate, you still win so kind of one of the things I like to look at.",
            "This problem is what we were trying to do is really gaining intuition about why such things work.",
            "So it seems like iterative process that's really do kind of work well for triangulation and so we're trying to get a reason why that is, thanks.",
            "What happens if the base of the cameras is very small compared to the distance?",
            "Let's say one 2000 or one to 10,000 so that you have points at the horizon.",
            "So.",
            "Probably you'll get more rapid degradation.",
            "Kind of like in the Co linear case.",
            "I'm not really sure.",
            "Try anything like that.",
            "I'm little confused how you say if you got 3 views or coplanar cameras that you get 100% or close to know.",
            "So like 90% guaranteed.",
            "I don't understand what you're saying is I would have thought you would never actually get the optimal if you only taking into account fundamental matrix constraints rather than trifocal constraints or whatever.",
            "So we in order to to test this for the coplanar cameras.",
            "We reconstruct, we actually do reconstruct the three dimensional point, and you can use that that reconstruction to then kind of back project.",
            "And there's an optimality test based on that, so we don't just use the fundamental matrices to check that, but we do use a little bit more techniques to check for.",
            "For in the case of coplanar cameras, to guarantee that you have optimality.",
            "You do, I mean you get it.",
            "There is an optimal solution right to the optimization problem.",
            "As we've stated it now, whether that is kind of the thing you want to look at as your 3 dimensional points, I guess that's a different question.",
            "Can you just talk with me afterwards about that?",
            "I'd be interested, yeah, sure.",
            "OK, I think we need to move on.",
            "Thank you."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I get to talk to you today about an approach for solving the triangulation problem based on recognizing it as a quadratically constrained quadratic program.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "The first step is just to actually explain the problems that we're on the same page.",
                    "label": 0
                },
                {
                    "sent": "The triangulation problem given N 3 by 4 camera matrices P1 through PN and I'm given N noisy 2 dimensional observations X1 hat through XN hat here XI hat is 2 dimensional projection of a world point which has been perturbed by some amount of noise and our goal is to reconstruct the world point which most likely gave us these noisy projections.",
                    "label": 1
                },
                {
                    "sent": "Under the assumption of Gaussian noise, it translates to the familiar yellow optimization problem, which is just minimizing the sum of squares of XI minus X hat, where XI is a true projection of a world point X.",
                    "label": 0
                },
                {
                    "sent": "By replacing each little XI with its rational formulation shown here, we see that really this is just an unconstrained rational optimization problem over our three.",
                    "label": 0
                },
                {
                    "sent": "And there are many.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "That you can use to try and solve this problem.",
                    "label": 0
                },
                {
                    "sent": "One is kind of linear initialization based on some nonlinear refinement with.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Is there are no guarantees on the optimality of the points you get though Hartley and Tio do have a way to verify optimality of certain local solutions.",
                    "label": 1
                },
                {
                    "sent": "Hartley and Sturm, 15 years ago solved the two view triangulation problem by reducing it to finding all the roots of some degree 6 polynomial and then there were some extensions of this.",
                    "label": 0
                },
                {
                    "sent": "Two N = 3 by Stephanie's and others where they use groebner basis techniques to reduce the problem to finding all the roots of a degree 47 polynomial.",
                    "label": 0
                },
                {
                    "sent": "Unfortunately the.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Techniques are not really usefully extendable to higher N. You could perform relaxations of the problem based on branch and bound in fractional programming, or their semidefinite relaxations which were introduced to the community in 2007.",
                    "label": 0
                },
                {
                    "sent": "My culinarian",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "But these if you want any kind of.",
                    "label": 0
                },
                {
                    "sent": "Guarantee on your global optimality.",
                    "label": 1
                },
                {
                    "sent": "You're going to take time, which is exponential in the number of cameras.",
                    "label": 0
                },
                {
                    "sent": "So our attempt is to.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Solve the triangulation problem by getting a polynomial time algorithm in N. We use semidefinite relaxations, but we're going to pay close attention to the algebraic structure that comes up in these and the geometric structure that comes up in these relaxations.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Alright, to start off, get right into explaining our relaxation.",
                    "label": 0
                },
                {
                    "sent": "We're going to take our unconstrained optimization problem and turn it into a constrained optimization problem simply by introducing the little exercise as variables.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "For which we're optimizing.",
                    "label": 0
                },
                {
                    "sent": "OK, subject to the constraint that they look like this for some world Point X.",
                    "label": 0
                },
                {
                    "sent": "Now for some notational help I'm going to collect all those.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Size into 12 N dimensional tuple.",
                    "label": 0
                },
                {
                    "sent": "Call it little X.",
                    "label": 0
                },
                {
                    "sent": "So then my objective has just become the norm of X -- X hat squared, where X hat is this two in dimensional tuple of noisy images.",
                    "label": 0
                },
                {
                    "sent": "I'm also going to collect all my constraints into one set called V, so V is the set of all X1 through XN.",
                    "label": 0
                },
                {
                    "sent": "Which each XI is the image of some world Point X.",
                    "label": 0
                },
                {
                    "sent": "Now this is just a notational change in their problem, but it has a radical effect of how I view the triangulation problem.",
                    "label": 0
                },
                {
                    "sent": "Now I view it as someone.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Gives me a noisy tuple of images X hat and my goal is to find the closest point on this constraint set V. Let's look at the can.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Except for a second, as you take X and you move it around in curves in three dimensional space, that gives you curves in each of the images, and V is the set of all the stuff that gets cut out in these images.",
                    "label": 0
                },
                {
                    "sent": "If you have any point X one through XN which lies on this constraint set V, it's very easy to reconstruct the world Point X just by back projecting the raise.",
                    "label": 0
                },
                {
                    "sent": "So this begs the question of do we?",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We need to talk about the world Point X at all.",
                    "label": 0
                },
                {
                    "sent": "Maybe we can do this all in terms of the images.",
                    "label": 0
                },
                {
                    "sent": "This would be especially useful because this optimization.",
                    "label": 0
                },
                {
                    "sent": "The objective here doesn't involve the world Point X either, so we were kind of hoping to remove this world point from the whole optimization problem.",
                    "label": 0
                },
                {
                    "sent": "Indeed, you can.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "For N = 2.",
                    "label": 0
                },
                {
                    "sent": "We know that the constraints it is just the the tuples, the pairs X One X2 that satisfy the familiar epipolar equation.",
                    "label": 0
                },
                {
                    "sent": "Here, F-12 is the three by three fundamental matrix between cameras one and two, and this equation is some quadratic constraint on the coordinates of X1 and X2.",
                    "label": 0
                },
                {
                    "sent": "So the constraints that is described just by a single quadratic.",
                    "label": 0
                },
                {
                    "sent": "For N greater than two.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "You have epipolar equations between any pairs of cameras, but you also have cubic constraints which come from trifocal tensors between triples of cameras.",
                    "label": 0
                },
                {
                    "sent": "I Hayden Ashram tell us that these are enough to describe the entire constraints at V, but I don't like cubix, so I'm going to inst.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Head drop them and now my optimization problem triangulation becomes not finding the closest point in X hat to V, but rather finding the closest point in X hat to W. Now this seems like so W here I should mention is defined just by the quadratics I dropped, the cubic constraints.",
                    "label": 0
                },
                {
                    "sent": "It seems that W is a relaxation of ER, priore, it's bigger the stuff and we have to satisfy more constraints than the stuff in W does, but Hayden asked him are nice enough to tell us.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "V&W are really the same set, as long as you're not dealing with coplanar cameras.",
                    "label": 0
                },
                {
                    "sent": "So in moving from optimization from BW, we've only lost something.",
                    "label": 0
                },
                {
                    "sent": "In the case of coplanar cameras.",
                    "label": 0
                },
                {
                    "sent": "In our experiment section will see exactly what we've lost.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Alright, so in moving from VW, we've changed triangulation and now finally recognized it as a quadratically constrained quadratic program because W was defined by design by quadratics, so I'm looking for this closest point to X hat on W. I'm going to call that closest point X star little X star.",
                    "label": 0
                },
                {
                    "sent": "Here is just a tuple of denoised images, image projections.",
                    "label": 0
                },
                {
                    "sent": "Finding this X star is a hard problem.",
                    "label": 0
                },
                {
                    "sent": "Luckily.",
                    "label": 0
                },
                {
                    "sent": "There exists a way, a standard way of realizing any quadratically constrained quadratic program as a rank constrained semidefinite program.",
                    "label": 0
                },
                {
                    "sent": "I'll spare you the algebraic manipulations that go into this, but the geometric idea is that you're taking your constraints at W, and here it depicted as some 2 dimensional curve.",
                    "label": 0
                },
                {
                    "sent": "We're going to lift it to a higher dimensional matrix space here.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Now depicted as a curve in three dimensions.",
                    "label": 0
                },
                {
                    "sent": "Your objective has become minimizing some kind of linear function, so you're taking a hyperplane and moving it until it hits this higher dimensional constraint set.",
                    "label": 0
                },
                {
                    "sent": "These are equivalent problems, so the bottom one is still hard, but all the hardnesses contained exactly in that rank constraint.",
                    "label": 0
                },
                {
                    "sent": "So you do the only obvious thing you could think of, drop the rank constraint.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And you get a bona fide semidefinite program.",
                    "label": 0
                },
                {
                    "sent": "What this is is a convex relaxation of the triangulation problem.",
                    "label": 0
                },
                {
                    "sent": "It's solvable in polynomial time in the number of cameras.",
                    "label": 0
                },
                {
                    "sent": "Now I should mention that this is all very standard.",
                    "label": 0
                },
                {
                    "sent": "I've done nothing novel here.",
                    "label": 0
                },
                {
                    "sent": "The manipulations on this page.",
                    "label": 0
                },
                {
                    "sent": "This is this is a semidefinite relaxation.",
                    "label": 0
                },
                {
                    "sent": "It's called the first semidefinite relaxation.",
                    "label": 0
                },
                {
                    "sent": "First, in a general hierarchy of relaxations that I could have applied to the problem.",
                    "label": 0
                },
                {
                    "sent": "There's a vast literature on these on these relaxations, so again, this is nothing new, but what's new is that I want to tell you in the case of triangulation, this first semidefinite relaxation really works well.",
                    "label": 0
                },
                {
                    "sent": "It's kind of all we need.",
                    "label": 0
                },
                {
                    "sent": "What I mean by.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "That is the output of this semidefinite program is some positive semidefinite matrix, will call it Y star, and you can look into its structure and extract from that what you think should be a candidate solution for your quadratically constrained quadratic program.",
                    "label": 0
                },
                {
                    "sent": "For general KPIs, this won't be the optimal solution for the cucp, but for triangulation it often is, so I'm going to call this my candidate denoised image.",
                    "label": 0
                },
                {
                    "sent": "I could go onto experiments right now and just show you that often the candidate denoised image looks like the true denoised image, but we want to do a little bit more than that.",
                    "label": 0
                },
                {
                    "sent": "I want conditions under which I can guarantee that the candidate denoised image is actually equal to the optimal denoised image from arcpy.",
                    "label": 0
                },
                {
                    "sent": "We do have such conditions in order to talk about them, I need to get a little bit deeper into the geometry of the QCQP.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So here's the problem.",
                    "label": 0
                },
                {
                    "sent": "We had X hat we had W. We're looking for X star.",
                    "label": 0
                },
                {
                    "sent": "I don't know what X star is, but I do know that there exists some affine space containing extra nexhat.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Which is perpendicular to my constraint set W. Once I have that afine space, you can.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Find a map from its domain into N dimensional space to some new affine space in the space of two N by two and symmetric matrices where you're taking this xtar and mapping it to the identity.",
                    "label": 0
                },
                {
                    "sent": "An X hat that noisy observation just comes along for the ride to some white hat.",
                    "label": 0
                },
                {
                    "sent": "In the space of symmetric matrices, there's a beautiful cone.",
                    "label": 0
                },
                {
                    "sent": "The positive definite cone of POS.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Definite matrices the identity lives right in the interior of that cone, and when X hat came along, it may or may not land inside of that cone.",
                    "label": 0
                },
                {
                    "sent": "But that may or may not land inside is exactly the condition under which we can guarantee optimality of our of our candidate solution in.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "In form it says that the true denoised image from the QCQP is equal to the candidate denoised image from the semidefinite program if and only if when you construct this map X hat Maps to inside of the positive definite code.",
                    "label": 0
                },
                {
                    "sent": "This can be formulated for general QC cubes with quality constraints.",
                    "label": 1
                },
                {
                    "sent": "The nice thing about it is that it lends itself to a polynomial time test for optimality, so I could take my candidate solution and test in polynomial time if it is indeed optimal for triangulation.",
                    "label": 0
                },
                {
                    "sent": "This test does have false negatives, so even if it comes out and says no, I can't guarantee optimality.",
                    "label": 0
                },
                {
                    "sent": "It still could be optimal, we just can't guarantee it.",
                    "label": 0
                },
                {
                    "sent": "OK, so that's our triangulation algorithm.",
                    "label": 0
                },
                {
                    "sent": "We recognize it as a QCQP.",
                    "label": 0
                },
                {
                    "sent": "We relax it to a semidefinite program, extract the candidate solution in polynomial time, and then verify ITS global optimality in polynomial time.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The big selling point of our algorithm is that we can guarantee that it will always work in the case of small noise.",
                    "label": 0
                },
                {
                    "sent": "More than that.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Under any noise assumption, this is kind of a bonus.",
                    "label": 0
                },
                {
                    "sent": "It always works for two view triangulation.",
                    "label": 1
                },
                {
                    "sent": "This is why our algorithm works in theory.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "See it work in practice.",
                    "label": 0
                },
                {
                    "sent": "So for practice we set up some synthetic experiments where we randomly generated points in the unit cube and then randomly generated cameras on a 2 sphere within image.",
                    "label": 1
                },
                {
                    "sent": "These 3 dimensional points in the cameras and perturb the images by some amount of noise and ran our triangulation algorithm on these noised up images.",
                    "label": 0
                },
                {
                    "sent": "On the Y axis, here is the fraction of times our algorithm guarantees global optimality.",
                    "label": 0
                },
                {
                    "sent": "For our candidate solutions versus the X axis is the standard deviation of the noise.",
                    "label": 1
                },
                {
                    "sent": "I should be clear that the maximum standard deviation of the noise we applied corresponds to about 10% of the images.",
                    "label": 0
                },
                {
                    "sent": "So the first thing to notice is that the algorithm seems to perform very, very well in the case of small noise.",
                    "label": 0
                },
                {
                    "sent": "Definitely about 100% of the time we can guarantee optimality for the reconstructions, but even oddly, in the case of ridiculous amounts of noise for two views it is 100% of the time no matter what noise level.",
                    "label": 0
                },
                {
                    "sent": "This was guaranteed by the theory.",
                    "label": 0
                },
                {
                    "sent": "But this we're just showing that it does indeed work in practice.",
                    "label": 1
                },
                {
                    "sent": "The next thing to notice is that we move from 3 to 5 to 7 views.",
                    "label": 0
                },
                {
                    "sent": "We actually seem to get more robustness to noise.",
                    "label": 0
                },
                {
                    "sent": "That's a phenomenon we don't quite yet understand, but three views you definitely have the worst performance with respect to noise.",
                    "label": 0
                },
                {
                    "sent": "This is entirely because three cameras are always coplanar, so in the next set of experiments we really see that and what we mean by that.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We force all our cameras, generate randomly generated cameras to be coplanar, and we see no matter 35 or 7 views, you get the same drop off that you saw with the reviews.",
                    "label": 1
                },
                {
                    "sent": "So remember, we switched from VW in the optimization.",
                    "label": 0
                },
                {
                    "sent": "We dropped the cubic constraints.",
                    "label": 0
                },
                {
                    "sent": "Those I said are necessary for coplanar cameras, and that's exactly the reason that you get this drop off.",
                    "label": 0
                },
                {
                    "sent": "In the coplanar case, although it still works.",
                    "label": 0
                },
                {
                    "sent": "Approximately 95% of the time with.",
                    "label": 0
                },
                {
                    "sent": "You know reasonable amounts of noise for coplanar cameras.",
                    "label": 1
                },
                {
                    "sent": "We also tested a extremely degenerate case.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We have all our cameras in a line of viewing.",
                    "label": 0
                },
                {
                    "sent": "Viewing this point set along an axis and here we see rapid degradation with amounts with large amounts of noise.",
                    "label": 0
                },
                {
                    "sent": "But all these synthetic experiments were designed to torture test the algorithm.",
                    "label": 0
                },
                {
                    "sent": "We also ran it on some real world experiments.",
                    "label": 0
                },
                {
                    "sent": "Real world.",
                    "label": 0
                }
            ]
        },
        "clip_31": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Datasets I'll draw your attention to the optimal column here.",
                    "label": 0
                },
                {
                    "sent": "It measures the fraction of the times we're able to guarantee global optimality of our reconstructions.",
                    "label": 0
                },
                {
                    "sent": "Using our algorithm for the Model House in Dinosaur datasets, were able to guarantee 100% of the time that our reconstructions are optimal, even though these kind of correspond to the coplanar ISH camera setup.",
                    "label": 0
                },
                {
                    "sent": "Even in the core data set which corresponds to the highly degenerate kind of cameras and align, we still guarantee optimality of our reconstructions.",
                    "label": 0
                },
                {
                    "sent": "All but one of them.",
                    "label": 0
                },
                {
                    "sent": "So this works really well on real datasets.",
                    "label": 0
                },
                {
                    "sent": "The reason the intuition behind that is because this does work well.",
                    "label": 0
                },
                {
                    "sent": "We can guarantee it works well for small noise and in real datasets large noise doesn't happen unless you've got outliers.",
                    "label": 0
                }
            ]
        },
        "clip_32": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So finally I'll end with a summary of our contributions.",
                    "label": 1
                },
                {
                    "sent": "We have given a polynomial time algorithm in which you can extract a candidate solution for triangulation and verify global optimality of that candidate solution.",
                    "label": 0
                },
                {
                    "sent": "We gain a geometric understanding of the triangulation problem by viewing it kind of unintuitive liasa constrained optimization problem, and then we were able to find theorems through this problem for general SDP relaxations of general quadratically constrained quadratic programs.",
                    "label": 0
                },
                {
                    "sent": "Thank you.",
                    "label": 0
                },
                {
                    "sent": "Did you ever try to see what happens if you just iterate them home?",
                    "label": 0
                },
                {
                    "sent": "Start to view, just iterate them home.",
                    "label": 0
                },
                {
                    "sent": "Do you also get 100% on these real world datasets then?",
                    "label": 0
                },
                {
                    "sent": "So you mean?",
                    "label": 0
                },
                {
                    "sent": "Say it again.",
                    "label": 0
                },
                {
                    "sent": "You have two views at a time and you just kind of know know you take one of the two views solutions or you ransack a little bit over the two view solutions.",
                    "label": 0
                },
                {
                    "sent": "You take a nap, iterative.",
                    "label": 0
                },
                {
                    "sent": "Just follow the gradient or something.",
                    "label": 0
                },
                {
                    "sent": "Do you still always hit the minima or not?",
                    "label": 0
                },
                {
                    "sent": "I think we played with the Dinosaur and I think our conclusion after doing all this work for three view.",
                    "label": 0
                },
                {
                    "sent": "Grabner bays work work work work was that if you iterate, you still win so kind of one of the things I like to look at.",
                    "label": 0
                },
                {
                    "sent": "This problem is what we were trying to do is really gaining intuition about why such things work.",
                    "label": 0
                },
                {
                    "sent": "So it seems like iterative process that's really do kind of work well for triangulation and so we're trying to get a reason why that is, thanks.",
                    "label": 0
                },
                {
                    "sent": "What happens if the base of the cameras is very small compared to the distance?",
                    "label": 0
                },
                {
                    "sent": "Let's say one 2000 or one to 10,000 so that you have points at the horizon.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "Probably you'll get more rapid degradation.",
                    "label": 0
                },
                {
                    "sent": "Kind of like in the Co linear case.",
                    "label": 0
                },
                {
                    "sent": "I'm not really sure.",
                    "label": 0
                },
                {
                    "sent": "Try anything like that.",
                    "label": 0
                },
                {
                    "sent": "I'm little confused how you say if you got 3 views or coplanar cameras that you get 100% or close to know.",
                    "label": 0
                },
                {
                    "sent": "So like 90% guaranteed.",
                    "label": 0
                },
                {
                    "sent": "I don't understand what you're saying is I would have thought you would never actually get the optimal if you only taking into account fundamental matrix constraints rather than trifocal constraints or whatever.",
                    "label": 0
                },
                {
                    "sent": "So we in order to to test this for the coplanar cameras.",
                    "label": 0
                },
                {
                    "sent": "We reconstruct, we actually do reconstruct the three dimensional point, and you can use that that reconstruction to then kind of back project.",
                    "label": 0
                },
                {
                    "sent": "And there's an optimality test based on that, so we don't just use the fundamental matrices to check that, but we do use a little bit more techniques to check for.",
                    "label": 0
                },
                {
                    "sent": "For in the case of coplanar cameras, to guarantee that you have optimality.",
                    "label": 0
                },
                {
                    "sent": "You do, I mean you get it.",
                    "label": 0
                },
                {
                    "sent": "There is an optimal solution right to the optimization problem.",
                    "label": 0
                },
                {
                    "sent": "As we've stated it now, whether that is kind of the thing you want to look at as your 3 dimensional points, I guess that's a different question.",
                    "label": 0
                },
                {
                    "sent": "Can you just talk with me afterwards about that?",
                    "label": 0
                },
                {
                    "sent": "I'd be interested, yeah, sure.",
                    "label": 0
                },
                {
                    "sent": "OK, I think we need to move on.",
                    "label": 0
                },
                {
                    "sent": "Thank you.",
                    "label": 0
                }
            ]
        }
    }
}