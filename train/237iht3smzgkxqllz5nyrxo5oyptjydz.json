{
    "id": "237iht3smzgkxqllz5nyrxo5oyptjydz",
    "title": "Semantic Processing of Sensor Event Stream by Using External Knowledge Bases",
    "info": {
        "author": [
            "Kia Teymourian, Department of Computer Science, Freie Universit\u00e4t Berlin"
        ],
        "published": "Dec. 3, 2012",
        "recorded": "November 2012",
        "category": [
            "Top->Computers->Networking->Wireless Sensor Network (WSN)",
            "Top->Computer Science->Semantic Web"
        ]
    },
    "url": "http://videolectures.net/iswc2012_teymourian_knowledge_bases/",
    "segmentation": [
        [
            "I will talk today about how can we use background knowledge to detect complex events from a stream of events and how these patterns for the detection of complex events might look like.",
            "An I will motivate my work."
        ],
        [
            "With a huge amount of existing background knowledge that you might have about your sensor data, you will get lots of observation from the yard sensor data and you might have huge amount of background knowledge about this.",
            "And if you can merge these two source of information together and integrate them together, we might be.",
            "We might have an X more expressive and more agile and more flexible event processing system.",
            "I will start with a very simple exam."
        ],
        [
            "People consider that you have a.",
            "And stream of observations of products which come through a store.",
            "You get some kind of RFID tags of these products, which is observation of your stream system of your sensor system and you might have such kind of very abstract queries on this stream.",
            "We want to select foods which include substances capable of causing cancer and they are product in Europe.",
            "You might also define some kind of event processing and then relationship between these events.",
            "Such kind of if they happens in inside a time window or if they happen simultaneously and so on.",
            "As you can see you cannot process this query without having this not background knowledge about events.",
            "You need a background knowledge which includes all of these information about your products and when you be.",
            "When you can do reasoning on this background knowledge then you should be able to answer the query above.",
            "As you can also see, you might be able to map all of these background knowledge to this stream and produce an RDF stream, or you can keep the stream as normal.",
            "An attribute value stream and keep your background knowledge in an external database or external triplestore."
        ],
        [
            "My scenario is that you if you look at the state of the art event processing systems you see these kind of systems you have stream of events.",
            "You have a central or a network of event processing agents which process these events and detect complex events and we want to include an external knowledge base which also include in description logic.",
            "Reason there on top of that, it's not only a database but it's good also.",
            "Reasoning to somehow some level of expressiveness and we might have some updates of this knowledge base, but the rate of frequency of these updating is not the same as the above on the event stream.",
            "Anne.",
            "If we look at this event queries, we might see OK, we have here some event operation algebras and we have here some kind of an description logic queries."
        ],
        [
            "It means that our query includes three parts, one of them is event algebra operation.",
            "The second part might be a sparkle query which include in some part of your pattern and returned part is streaming window operation.",
            "If you might want to have defined the sliding window or tumbling window on your stream to select some kind.",
            "Some part of this window and your.",
            "Sparkle your event detection pattern might look like this that you have a sparkle query to get the background knowledge from the external knowledge base.",
            "Then you have an event operation Algebra on that or several of them and again the same pattern and you might include sliding window or you might combine this also in some other parts."
        ],
        [
            "And one other example is that we cannot always include the background knowledge from the external knowledge base first, then query the event processing.",
            "Consider that we have three events happening in three different times and we have different attributes after these events.",
            "And we have some connections from the event stream to our background knowledge to different sources.",
            "And a pattern that we want to have if is if they have any relation to each other, we want to see not an exact pattern, but see if they have any relationship to each other.",
            "If you look at the query query might look like this.",
            "You have an event E with a connection to background knowledge.",
            "Then you have a predicate with star any after predicate predicate pad and then you have some other event.",
            "Algebra operation like sequence because they come in a sequence after each other and you define your query.",
            "The state of the systems and.",
            "Even processing patterns can define this, but they define very complicated.",
            "You should you have to write an very complicated continuous queries on your stream an do this what we are doing is to write this in the rule language and combine the sparkle query in a rule language.",
            "OB categorize this kind of event queries based on the number of sparkle queries which are included in a rule.",
            "For example, he see the 15th."
        ],
        [
            "In the four different categories, first is the number of different sparkle query.",
            "The second is if these sparkle queries are are depending on the event stream or if they are not, depending if they should be generated as the event happens or they can be sent to the external background.",
            "Knowledge in advanced and the other one is the number of event query attributes that you include in them.",
            "Even pattern and the 4th one is if the if they are selected in a time window or if they are selected in a single as single event.",
            "Will you category?"
        ],
        [
            "Eyes them in two categories.",
            "Category A and category B.",
            "Category A is if they all include only one single sparkle query.",
            "For example, if you want to get background knowledge about product you have this spank macro knowledge stored somewhere and you will get and query them and cash them in the main memory.",
            "Or they if you have several sparkle query which are combined to each other.",
            "I will describe this with several example of these rules.",
            "If you are family or Prolog language."
        ],
        [
            "Are not so complicated for you.",
            "This is the one example of Category A.",
            "An it sends Sparkle query to the external knowledge base.",
            "The KB ID is the idea of this car sparkle.",
            "After endpoint after Triple Store and S query is your sponsor query, we get the result.",
            "Process them together with your stream and you can detect the complex event.",
            "This is the simplest form of your query log."
        ],
        [
            "The category A 2 is that your query is depending on the event.",
            "You should wait, that even happens.",
            "Then you can generate a new sparkle query on for each event and send them to the background.",
            "Knowledge.",
            "In this example you select one single event, select some of the attribute of that generates sparkle, query for that event and then send them to their background knowledge.",
            "This should be recalled.",
            "Did Sparkle select.",
            "This should be better called sparkle send or sends Marco and get the background process them together.",
            "Very simple, this is."
        ],
        [
            "The category A two I come to, Category B won the case that we sent two Sparkle query to the.",
            "To the external knowledge base similar to category A23, Select E topples.",
            "Set off the top of events.",
            "Generate two sparkle queries, send them to the background knowledge, get the result, process them together.",
            "And."
        ],
        [
            "Category B2 is the case that we have to wait to detect the complex event based on the result of another query, then generate another query and process them together.",
            "It means that we have two smarter queries but one after each other.",
            "If the first one is successful, we generate the second one, otherwise the pattern is not matched."
        ],
        [
            "OK, we implemented this in Provo language.",
            "Provide is a combination of Prolog and Java object oriented language and you see that you can write both of them in a rule language.",
            "We can write your sparkle query like this and write a rule, predicated sense this sparkle query to the background knowledge.",
            "This is our Sparkle select query.",
            "This sense for example today.",
            "DB Pedia and get the result back.",
            "If this guards tests through is successful, your pattern is detected with the receive, moved and sent.",
            "Moved with receive mode we get to event stream.",
            "We send message.",
            "We can react and trigger another event which is the complex event.",
            "And here.",
            "And the query is about.",
            "We get URLs of companies and we are interested in if there are companies in software and retail and they have more than five and 5000 company employees."
        ],
        [
            "We set up two machines for these different kind of to queries.",
            "Two machines each afternoon with 16 gig RAM.",
            "On one of them we installed the complete mirror of DB pedia on another one and probably rule engine an sending queries.",
            "As you can see with the category A1 with the catching of results, the main memory.",
            "We are so fast we can process 280,000 events per second, but if we have to produce events on each produced this market query on each event we are so slow and if the if you go for the other categories which are more complicated, let's say there are more.",
            "More ineffective."
        ],
        [
            "OK.",
            "They come, my conclusion is that we introduced here the different categories, but these categories are not complete.",
            "Categorization at all kind of patterns which might come and we are working on efficient algorithms for event processing.",
            "For example, enrichment of events, which is some kind of map reducing of stream of events, mapping them to a more enriched event stream.",
            "And then process them.",
            "Preprocessing is some kind of.",
            "How can we chunk this query to more simple queries and planning means that we how can we have execution plans and optimize plans for the addition of this kind of queries?"
        ],
        [
            "Thank you."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I will talk today about how can we use background knowledge to detect complex events from a stream of events and how these patterns for the detection of complex events might look like.",
                    "label": 0
                },
                {
                    "sent": "An I will motivate my work.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "With a huge amount of existing background knowledge that you might have about your sensor data, you will get lots of observation from the yard sensor data and you might have huge amount of background knowledge about this.",
                    "label": 1
                },
                {
                    "sent": "And if you can merge these two source of information together and integrate them together, we might be.",
                    "label": 0
                },
                {
                    "sent": "We might have an X more expressive and more agile and more flexible event processing system.",
                    "label": 0
                },
                {
                    "sent": "I will start with a very simple exam.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "People consider that you have a.",
                    "label": 0
                },
                {
                    "sent": "And stream of observations of products which come through a store.",
                    "label": 1
                },
                {
                    "sent": "You get some kind of RFID tags of these products, which is observation of your stream system of your sensor system and you might have such kind of very abstract queries on this stream.",
                    "label": 0
                },
                {
                    "sent": "We want to select foods which include substances capable of causing cancer and they are product in Europe.",
                    "label": 1
                },
                {
                    "sent": "You might also define some kind of event processing and then relationship between these events.",
                    "label": 0
                },
                {
                    "sent": "Such kind of if they happens in inside a time window or if they happen simultaneously and so on.",
                    "label": 0
                },
                {
                    "sent": "As you can see you cannot process this query without having this not background knowledge about events.",
                    "label": 0
                },
                {
                    "sent": "You need a background knowledge which includes all of these information about your products and when you be.",
                    "label": 0
                },
                {
                    "sent": "When you can do reasoning on this background knowledge then you should be able to answer the query above.",
                    "label": 0
                },
                {
                    "sent": "As you can also see, you might be able to map all of these background knowledge to this stream and produce an RDF stream, or you can keep the stream as normal.",
                    "label": 0
                },
                {
                    "sent": "An attribute value stream and keep your background knowledge in an external database or external triplestore.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "My scenario is that you if you look at the state of the art event processing systems you see these kind of systems you have stream of events.",
                    "label": 0
                },
                {
                    "sent": "You have a central or a network of event processing agents which process these events and detect complex events and we want to include an external knowledge base which also include in description logic.",
                    "label": 1
                },
                {
                    "sent": "Reason there on top of that, it's not only a database but it's good also.",
                    "label": 1
                },
                {
                    "sent": "Reasoning to somehow some level of expressiveness and we might have some updates of this knowledge base, but the rate of frequency of these updating is not the same as the above on the event stream.",
                    "label": 0
                },
                {
                    "sent": "Anne.",
                    "label": 0
                },
                {
                    "sent": "If we look at this event queries, we might see OK, we have here some event operation algebras and we have here some kind of an description logic queries.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "It means that our query includes three parts, one of them is event algebra operation.",
                    "label": 1
                },
                {
                    "sent": "The second part might be a sparkle query which include in some part of your pattern and returned part is streaming window operation.",
                    "label": 0
                },
                {
                    "sent": "If you might want to have defined the sliding window or tumbling window on your stream to select some kind.",
                    "label": 0
                },
                {
                    "sent": "Some part of this window and your.",
                    "label": 0
                },
                {
                    "sent": "Sparkle your event detection pattern might look like this that you have a sparkle query to get the background knowledge from the external knowledge base.",
                    "label": 1
                },
                {
                    "sent": "Then you have an event operation Algebra on that or several of them and again the same pattern and you might include sliding window or you might combine this also in some other parts.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And one other example is that we cannot always include the background knowledge from the external knowledge base first, then query the event processing.",
                    "label": 0
                },
                {
                    "sent": "Consider that we have three events happening in three different times and we have different attributes after these events.",
                    "label": 0
                },
                {
                    "sent": "And we have some connections from the event stream to our background knowledge to different sources.",
                    "label": 0
                },
                {
                    "sent": "And a pattern that we want to have if is if they have any relation to each other, we want to see not an exact pattern, but see if they have any relationship to each other.",
                    "label": 0
                },
                {
                    "sent": "If you look at the query query might look like this.",
                    "label": 0
                },
                {
                    "sent": "You have an event E with a connection to background knowledge.",
                    "label": 0
                },
                {
                    "sent": "Then you have a predicate with star any after predicate predicate pad and then you have some other event.",
                    "label": 0
                },
                {
                    "sent": "Algebra operation like sequence because they come in a sequence after each other and you define your query.",
                    "label": 0
                },
                {
                    "sent": "The state of the systems and.",
                    "label": 0
                },
                {
                    "sent": "Even processing patterns can define this, but they define very complicated.",
                    "label": 0
                },
                {
                    "sent": "You should you have to write an very complicated continuous queries on your stream an do this what we are doing is to write this in the rule language and combine the sparkle query in a rule language.",
                    "label": 0
                },
                {
                    "sent": "OB categorize this kind of event queries based on the number of sparkle queries which are included in a rule.",
                    "label": 0
                },
                {
                    "sent": "For example, he see the 15th.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "In the four different categories, first is the number of different sparkle query.",
                    "label": 0
                },
                {
                    "sent": "The second is if these sparkle queries are are depending on the event stream or if they are not, depending if they should be generated as the event happens or they can be sent to the external background.",
                    "label": 0
                },
                {
                    "sent": "Knowledge in advanced and the other one is the number of event query attributes that you include in them.",
                    "label": 0
                },
                {
                    "sent": "Even pattern and the 4th one is if the if they are selected in a time window or if they are selected in a single as single event.",
                    "label": 0
                },
                {
                    "sent": "Will you category?",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Eyes them in two categories.",
                    "label": 0
                },
                {
                    "sent": "Category A and category B.",
                    "label": 1
                },
                {
                    "sent": "Category A is if they all include only one single sparkle query.",
                    "label": 0
                },
                {
                    "sent": "For example, if you want to get background knowledge about product you have this spank macro knowledge stored somewhere and you will get and query them and cash them in the main memory.",
                    "label": 0
                },
                {
                    "sent": "Or they if you have several sparkle query which are combined to each other.",
                    "label": 0
                },
                {
                    "sent": "I will describe this with several example of these rules.",
                    "label": 0
                },
                {
                    "sent": "If you are family or Prolog language.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Are not so complicated for you.",
                    "label": 0
                },
                {
                    "sent": "This is the one example of Category A.",
                    "label": 1
                },
                {
                    "sent": "An it sends Sparkle query to the external knowledge base.",
                    "label": 0
                },
                {
                    "sent": "The KB ID is the idea of this car sparkle.",
                    "label": 0
                },
                {
                    "sent": "After endpoint after Triple Store and S query is your sponsor query, we get the result.",
                    "label": 0
                },
                {
                    "sent": "Process them together with your stream and you can detect the complex event.",
                    "label": 0
                },
                {
                    "sent": "This is the simplest form of your query log.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The category A 2 is that your query is depending on the event.",
                    "label": 0
                },
                {
                    "sent": "You should wait, that even happens.",
                    "label": 0
                },
                {
                    "sent": "Then you can generate a new sparkle query on for each event and send them to the background.",
                    "label": 0
                },
                {
                    "sent": "Knowledge.",
                    "label": 0
                },
                {
                    "sent": "In this example you select one single event, select some of the attribute of that generates sparkle, query for that event and then send them to their background knowledge.",
                    "label": 0
                },
                {
                    "sent": "This should be recalled.",
                    "label": 0
                },
                {
                    "sent": "Did Sparkle select.",
                    "label": 0
                },
                {
                    "sent": "This should be better called sparkle send or sends Marco and get the background process them together.",
                    "label": 0
                },
                {
                    "sent": "Very simple, this is.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The category A two I come to, Category B won the case that we sent two Sparkle query to the.",
                    "label": 0
                },
                {
                    "sent": "To the external knowledge base similar to category A23, Select E topples.",
                    "label": 0
                },
                {
                    "sent": "Set off the top of events.",
                    "label": 0
                },
                {
                    "sent": "Generate two sparkle queries, send them to the background knowledge, get the result, process them together.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Category B2 is the case that we have to wait to detect the complex event based on the result of another query, then generate another query and process them together.",
                    "label": 0
                },
                {
                    "sent": "It means that we have two smarter queries but one after each other.",
                    "label": 0
                },
                {
                    "sent": "If the first one is successful, we generate the second one, otherwise the pattern is not matched.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, we implemented this in Provo language.",
                    "label": 0
                },
                {
                    "sent": "Provide is a combination of Prolog and Java object oriented language and you see that you can write both of them in a rule language.",
                    "label": 0
                },
                {
                    "sent": "We can write your sparkle query like this and write a rule, predicated sense this sparkle query to the background knowledge.",
                    "label": 0
                },
                {
                    "sent": "This is our Sparkle select query.",
                    "label": 0
                },
                {
                    "sent": "This sense for example today.",
                    "label": 0
                },
                {
                    "sent": "DB Pedia and get the result back.",
                    "label": 0
                },
                {
                    "sent": "If this guards tests through is successful, your pattern is detected with the receive, moved and sent.",
                    "label": 0
                },
                {
                    "sent": "Moved with receive mode we get to event stream.",
                    "label": 0
                },
                {
                    "sent": "We send message.",
                    "label": 0
                },
                {
                    "sent": "We can react and trigger another event which is the complex event.",
                    "label": 0
                },
                {
                    "sent": "And here.",
                    "label": 0
                },
                {
                    "sent": "And the query is about.",
                    "label": 0
                },
                {
                    "sent": "We get URLs of companies and we are interested in if there are companies in software and retail and they have more than five and 5000 company employees.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We set up two machines for these different kind of to queries.",
                    "label": 0
                },
                {
                    "sent": "Two machines each afternoon with 16 gig RAM.",
                    "label": 1
                },
                {
                    "sent": "On one of them we installed the complete mirror of DB pedia on another one and probably rule engine an sending queries.",
                    "label": 0
                },
                {
                    "sent": "As you can see with the category A1 with the catching of results, the main memory.",
                    "label": 0
                },
                {
                    "sent": "We are so fast we can process 280,000 events per second, but if we have to produce events on each produced this market query on each event we are so slow and if the if you go for the other categories which are more complicated, let's say there are more.",
                    "label": 0
                },
                {
                    "sent": "More ineffective.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "They come, my conclusion is that we introduced here the different categories, but these categories are not complete.",
                    "label": 1
                },
                {
                    "sent": "Categorization at all kind of patterns which might come and we are working on efficient algorithms for event processing.",
                    "label": 0
                },
                {
                    "sent": "For example, enrichment of events, which is some kind of map reducing of stream of events, mapping them to a more enriched event stream.",
                    "label": 1
                },
                {
                    "sent": "And then process them.",
                    "label": 0
                },
                {
                    "sent": "Preprocessing is some kind of.",
                    "label": 0
                },
                {
                    "sent": "How can we chunk this query to more simple queries and planning means that we how can we have execution plans and optimize plans for the addition of this kind of queries?",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Thank you.",
                    "label": 0
                }
            ]
        }
    }
}