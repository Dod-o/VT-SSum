{
    "id": "gsllr5hntfftgxcyofrhjeuqgwbchxsu",
    "title": "A Formal Framework for Comparing Linked Data Fragments",
    "info": {
        "author": [
            "Jorge P\u00e9rez, Pontificia Universidad Cat\u00f3lica de Chile"
        ],
        "published": "Nov. 28, 2017",
        "recorded": "October 2017",
        "category": [
            "Top->Computer Science->Semantic Web"
        ]
    },
    "url": "http://videolectures.net/iswc2017_perez_data_fragments/",
    "segmentation": [
        [
            "OK, so the idea of the link data Fragment world is that you have a different interfaces for different servers, so the servers provide different interfaces so the clients can decide which interface they can use.",
            "2 examples of these interfaces are data dumps and sparkle endpoints, but they're just extreme points in this line and you can have several other interfaces, for example, triple pattern fragments, which is the interface in in which you just send a triple pattern to the server, and the server answered you with the results.",
            "You can also have linked data documents, which is the interface in which you just give a UI to the server, and the server gives you a document with data about this UI.",
            "You can also have.",
            "Binding restricted triple patterns, which is proposed have been proposed recently, in which you just send a triple pattern plus some bindings, and the server gives you the triples that match the triple pattern and are compatible with these bindings.",
            "Basic graph patterns and so on, and the idea is that whenever you go to the left of this line, you have more generic requests, which implies more high client effort, and whenever you go to the right of this line.",
            "You have more specific requests which imply high server effort.",
            "But"
        ],
        [
            "Is this really a line?",
            "So consider for example this three points here.",
            "And consider this query which says that give me all the subjects and objects of triples whose predicate is RDF type.",
            "So it's really clear that we with a damp and with sparkle endpoint.",
            "You can answer this query.",
            "But if you have linked data documents with this interface that I told you when you go to your eye and then you differentiate data, you cannot answer this query.",
            "So in terms of expressiveness link data document is not in between.",
            "Data dumps on sparkle endpoints."
        ],
        [
            "Consider this other case.",
            "You have triple patterns now and this query give me all the persons reachable from Peter following two 4th notes links.",
            "So you go for Peter to the people that Peter knows.",
            "And then from these people to the people that they know.",
            "So with data dumps and sparkle endpoint an with triple pattern frame and you can answer this query.",
            "But if you go to Sparkle endpoint you can just send one query and obtain the answer with data dumps.",
            "Also you can just send one request.",
            "All the dump and then computer answer but with triple pattern.",
            "Basically you need to go twice to the server.",
            "So in terms of the number of times that you go to the server, number of requests, triple patterns is no longer in between data dumps and sparkle input."
        ],
        [
            "So what we need is more fundamental understanding of this link.",
            "Data Fragment interface is why it is important from a server point of view from a developer which is in the server side.",
            "It would be really nice to analyze the interfaces before actually implementing it.",
            "So we would like to have any specification of an interface and to 1st know if this interface is somehow covered by some other interfaces in this server plus the client capabilities.",
            "So we do not need to implement another one.",
            "Come from a client point of view, it will be really important to know, for example, what is the best way to use an interface given a specific budget or even more drastically given a task, can we actually complete this task with my capabilities as a client and the interface that I can have access to?"
        ],
        [
            "So that is our work about.",
            "We present a formal framework to compare link data fragments.",
            "This is a joint work with Ola Party with Ian later I am her happiness."
        ],
        [
            "So what are the main contributions of our work?",
            "We provide a formal machine model for linked data fragment settings.",
            "We draw a complete expressiveness lattice considering several combination between interfaces, link data, fragment interfaces and client capabilities, and we also were able to.",
            "To make an analysis and more fine grained analysis complexity analysis not only considering classical complexity but also metrics such as number of requests, the amount of data transfer.",
            "So."
        ],
        [
            "Let me show you first our machine model that we call Link data Fragment machine.",
            "So the main part of a link data flag machine is just a regular Turing machine with regular tips.",
            "But it also has access to two oracles.",
            "In theory, the theory of Turing machines and Oracle is just another Turing machine.",
            "But you essentially do not count the number of steps that the machine does, yes.",
            "So you just put some input in the tape and the Oracle machine in one step gives you the output.",
            "So that is how we model the server and the client.",
            "And also the machine has an unbounded number of what we call response containers that are read only tapes.",
            "And how does this machine works?",
            "It receives as input a query.",
            "And a graph.",
            "And if you can see the graph, the graph is accessible only via the server Oracle, but these are the inputs for the machine before it start working.",
            "So when it start working, the machine can first do some server request and the way in which the server request is done is just the machine just write something in the tape of the server.",
            "Oracle on the server.",
            "Oracle answered with a response that it put in the first response container and then the machine can go to another another request and then.",
            "Another response, and as so on another request, another response, and at some point the matching can decide to stop.",
            "So it decides that it has enough information to answer the query that was posed initially, so it writes an output expression in the tape of the client Oracle and the client Oracle used response containers as read only tapes to produce the answer.",
            "So.",
            "Two important parameters here."
        ],
        [
            "Are the server request language and the output expression language, so these are the parameters of the machine whether the server request language is the type of expressions that the machine is allowed to put in the tape of the server Oracle, and similarly for the output expression.",
            "So with the server request language we are somehow modeling the linked data fragment interface and with the output expression language we are trying to model different capabilities for clients.",
            "So to give you a sorry and we call this machine with LC and LS language and LC LS link data flag magic.",
            "So in that way we have several settings for machines.",
            "So let me go."
        ],
        [
            "Do an example very simple one.",
            "The server language is triple butter fragments.",
            "The client language can only be used.",
            "The client can only use joins and we can use.",
            "We can try to answer this very simple query, which is just the conjunction of two triple pattern.",
            "So as you may guess, the Turing machine, the machine can first put this request there on the server can answer this request.",
            "Then you can put the second request, the second triple pattern, the Oracle answered the second request.",
            "And finally the matching can put this expression in the client Oracle, which is which is just saying take the joints of the two first response containers and you obtain theirs."
        ],
        [
            "So another example.",
            "So consider now binding restricted triple pattern fragments in the server and no operation in the client.",
            "And we will try to answer the same query and we can actually do it.",
            "Yes, we put the first triple pattern and we obtain the result and now the second request is the 2nd table pattern plus the bindings that Europe that we obtained initially.",
            "So this is actually a query that can be asked in the binding restricted triple pattern fragment.",
            "So the server answered with this in the second container and the output expression is just the second container because we do not have operations.",
            "So whenever we have an empty set of operators in the client, we are meaning that the only way that we can answer the query is just copying some of their response to group team.",
            "And this is the answer."
        ],
        [
            "So the main question that we wanted to answer initially, what?",
            "What are the queries computed by this settings?",
            "I'll see LC LS Link data flag machine for that, we define a notion of equivalence.",
            "So here we have two settings, possibly different setting with different languages, and we say that these are equivalent if all the queries that can be.",
            "Answer In one setting can be answered in the other setting and the other way around.",
            "But we can also define.",
            "Order a pre order for these settings and in this case we say that LC LS is strictly less expressive that RCRS if all queries that can be answered in the drive in the left, your left can also be answering the right.",
            "But there is at least one query that you can answer in the right that is not answering in the list in the left.",
            "So with this we can draw."
        ],
        [
            "An expressive expressiveness lattice for this link data fragment settings.",
            "So in the paper we consider as client languages all the subsets of this relational algebra operators for the server languages we consider triple butter fragments by industry to triple pattern fragments.",
            "Basic graph patterns and sparkle endpoints as Linda Fragmente interfaces."
        ],
        [
            "So the first part of the lattice, no, no, not really.",
            "Something very impressive is what would you expect there?",
            "What does this lattice says?",
            "That it says that this configuration is strictly more expressive than this configuration, and this configuration and these bolts are strictly more expressive than the one in the bottom.",
            "But for the more theoretically oriented guys here.",
            "Results does not follow directly from known results in databases because you have a Turing machine in the middle and it can do all sorts of nasty things.",
            "So you can.",
            "You can need to to do some other tricks to prove that.",
            "Relationships and for the OK, and it's also very easy to prove that beeps with no operators in the client is equivalent to TPF plus joins."
        ],
        [
            "And in the case of beer TPF, we have a similar lattice, but which is more interesting in this case is that in the in the other part we can prove that for beer TPF, you only need unions and joints to obtain all the expressive power of the client of all these other operators in the client.",
            "And actually, it's equally expressive as having an sparkle endpoint in the server, so you have all the same expressive power in all these combinations an."
        ],
        [
            "Obviously we can combine these for this complete lattice of the combinations of client and server."
        ],
        [
            "Without my team we can also do more fine grained complexity analysis."
        ],
        [
            "If you look at our diagram of how the machine works, we can now focus on the response containers, and if you remember how this machine works, every server, every response from the server goes to one different response container.",
            "So if after the machine stopped working, we count the number of response container that has something, it is exactly the number of times that we receive.",
            "But we go to the server and receive something, so we can we can.",
            "Count exactly the number of times that we did our request, and Moreover if we sum all the size of this result container then we will have exactly the amount of data that was transferred from the from the server to the client.",
            "So we have two metrics that are very specific for this machine, so we can count the number of requests and we can also count the communication bandwidth.",
            "And with the."
        ],
        [
            "We can again define two or new pre orders.",
            "In this case is a little bit more complicated.",
            "This is defined in terms of the complete.",
            "Some of the size of the responses, which is the total amount of data that was transferred from the server to the client.",
            "And essentially says that in the left.",
            "OK, so it says that for every query the best possible strategy in the left.",
            "Transferred less data than the best possible strategy in the setting in the right, so it's essentially says that the left setting is more efficient in terms of the data that is transferred, and we can do the same with the number of requests."
        ],
        [
            "And we can also start drawing some lattices with this.",
            "So for example, remember that beeps with no.",
            "Operator in the client is equally expressive as TPS with joints, but we can have a more fine grained analysis between these two, although they are equally expressive.",
            "Then you can prove that the best strategy for beeps always require require less requests than the best strategy for TPF with joins.",
            "But in the terms of the total amount of data, they are incomparable so you can have different strategies for both.",
            "And we might be more interesting is that if you remember these two points, here they are equally expressive also.",
            "But in terms of the number of requests that you need to answer the query, then when you have all these operators in the client, you can prove that you can be strictly more efficient in the number of requests that you need, and also strictly more efficient in the number of the in the total size of the data that you have to transfer."
        ],
        [
            "So what I have shown you is a first step towards a theory for comparing different access protocols for semantic web data.",
            "So what we needed?",
            "All we want is a more fundamental understanding of combinations of linked data, fragment interfaces and client capabilities.",
            "We presented our machine model and some 1st results on expressiveness and complexity.",
            "And our future work."
        ],
        [
            "Obviously include GNU Link data fragment interfaces.",
            "For example, I didn't show you here the data dump interface nor the link data documents, which are two of the interfaces that we want to cover in the future work, and also some other capabilities for the client.",
            "We would also like to improve the machine model and consider new metrics for example.",
            "The the amount of data that you have to send to the server or how capable is a is a query.",
            "And definitely we would like to use this machine to start a formal study of semantic web query planning."
        ],
        [
            "So thank you.",
            "While you didn't do the analysis of the linked data document.",
            "That was what I was hoping to see.",
            "Oh, why we didn't use the link data documents.",
            "Yeah, to be able to write another paper.",
            "I'm not OK. Fair enough, The thing is that we have started doing this with Olaf and we thought OK, it's going to be really easy.",
            "Yes, we're going everything is going to follow smoothly.",
            "It turned out that it was not that easy.",
            "We checked several types of machine and there are a lot of tricks and so.",
            "So finally we just stick with the the thing that we can actually prove something strong with them and we would actually like to go to the link data document.",
            "Yes, if all of my want to add something.",
            "So if you want to share or I'm curious to see what what made it complicated will makes it complicated to do the link data document formalization part.",
            "So.",
            "First of all, the issue with the link data document once is that it's not well defined and you kind of have to give the definition, which is not.",
            "You will never capture what is in the real world, so all these other interfaces.",
            "They're well defined for the link data documents, you just you go to one server, you look up, you are.",
            "You get a bunch of triples and for another server which actually exposes the same data set and you do the same.",
            "Look up, you might get other other other triples.",
            "So this is essentially already one of the issues.",
            "But this is something that we really want to do.",
            "Diffuser, hey, so I'm very interesting work.",
            "I just wonder in general so you've been able to prove a couple of things theoretically in the past several people, including myself have to try to couple of things, but experiments where do you see the role of both that, like?",
            "What are the limits of theory?",
            "Is there still room for experimental validation?",
            "Can these things be used in a hybrid way?",
            "So how we're going to make progress?",
            "Like what do we need for?",
            "For that you mean make progress in practice?",
            "Yeah, make progress in finding what interesting interfaces are to publish like data.",
            "Should you measure this or should we do it in theory?",
            "OK, this is a good question, yes.",
            "Actually, we wanted to prove to provide some formal ground to be able to do that, yes, but actually to be able to just compare because the worst scenario is that people start just proposing and proposing and proposing fragments.",
            "You will end up with a soup of fragments and you will need something to actually compare them formally.",
            "So that would be.",
            "I think it's not a complete answer.",
            "I don't know if you want to add something.",
            "But, but this is definitely what we want to do.",
            "We will definitely consider this a first step, yes, and we were motivated from practical experiments.",
            "Yes, we wanted to do it, trying to formalize it as much as we can.",
            "So in my opinion, it is both.",
            "It is the theory and practical like empirical evaluation and the theory.",
            "What it gives you is you can basically like already skip some of the possible proposals of interfaces simply because they are covered on the in these different lettuces and therefore you know, OK, they are never going to be.",
            "Better than another one, definitely."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, so the idea of the link data Fragment world is that you have a different interfaces for different servers, so the servers provide different interfaces so the clients can decide which interface they can use.",
                    "label": 0
                },
                {
                    "sent": "2 examples of these interfaces are data dumps and sparkle endpoints, but they're just extreme points in this line and you can have several other interfaces, for example, triple pattern fragments, which is the interface in in which you just send a triple pattern to the server, and the server answered you with the results.",
                    "label": 0
                },
                {
                    "sent": "You can also have linked data documents, which is the interface in which you just give a UI to the server, and the server gives you a document with data about this UI.",
                    "label": 0
                },
                {
                    "sent": "You can also have.",
                    "label": 0
                },
                {
                    "sent": "Binding restricted triple patterns, which is proposed have been proposed recently, in which you just send a triple pattern plus some bindings, and the server gives you the triples that match the triple pattern and are compatible with these bindings.",
                    "label": 0
                },
                {
                    "sent": "Basic graph patterns and so on, and the idea is that whenever you go to the left of this line, you have more generic requests, which implies more high client effort, and whenever you go to the right of this line.",
                    "label": 1
                },
                {
                    "sent": "You have more specific requests which imply high server effort.",
                    "label": 1
                },
                {
                    "sent": "But",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Is this really a line?",
                    "label": 1
                },
                {
                    "sent": "So consider for example this three points here.",
                    "label": 0
                },
                {
                    "sent": "And consider this query which says that give me all the subjects and objects of triples whose predicate is RDF type.",
                    "label": 1
                },
                {
                    "sent": "So it's really clear that we with a damp and with sparkle endpoint.",
                    "label": 0
                },
                {
                    "sent": "You can answer this query.",
                    "label": 0
                },
                {
                    "sent": "But if you have linked data documents with this interface that I told you when you go to your eye and then you differentiate data, you cannot answer this query.",
                    "label": 0
                },
                {
                    "sent": "So in terms of expressiveness link data document is not in between.",
                    "label": 0
                },
                {
                    "sent": "Data dumps on sparkle endpoints.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Consider this other case.",
                    "label": 0
                },
                {
                    "sent": "You have triple patterns now and this query give me all the persons reachable from Peter following two 4th notes links.",
                    "label": 1
                },
                {
                    "sent": "So you go for Peter to the people that Peter knows.",
                    "label": 0
                },
                {
                    "sent": "And then from these people to the people that they know.",
                    "label": 0
                },
                {
                    "sent": "So with data dumps and sparkle endpoint an with triple pattern frame and you can answer this query.",
                    "label": 0
                },
                {
                    "sent": "But if you go to Sparkle endpoint you can just send one query and obtain the answer with data dumps.",
                    "label": 0
                },
                {
                    "sent": "Also you can just send one request.",
                    "label": 0
                },
                {
                    "sent": "All the dump and then computer answer but with triple pattern.",
                    "label": 0
                },
                {
                    "sent": "Basically you need to go twice to the server.",
                    "label": 0
                },
                {
                    "sent": "So in terms of the number of times that you go to the server, number of requests, triple patterns is no longer in between data dumps and sparkle input.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So what we need is more fundamental understanding of this link.",
                    "label": 1
                },
                {
                    "sent": "Data Fragment interface is why it is important from a server point of view from a developer which is in the server side.",
                    "label": 1
                },
                {
                    "sent": "It would be really nice to analyze the interfaces before actually implementing it.",
                    "label": 0
                },
                {
                    "sent": "So we would like to have any specification of an interface and to 1st know if this interface is somehow covered by some other interfaces in this server plus the client capabilities.",
                    "label": 0
                },
                {
                    "sent": "So we do not need to implement another one.",
                    "label": 0
                },
                {
                    "sent": "Come from a client point of view, it will be really important to know, for example, what is the best way to use an interface given a specific budget or even more drastically given a task, can we actually complete this task with my capabilities as a client and the interface that I can have access to?",
                    "label": 1
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So that is our work about.",
                    "label": 0
                },
                {
                    "sent": "We present a formal framework to compare link data fragments.",
                    "label": 1
                },
                {
                    "sent": "This is a joint work with Ola Party with Ian later I am her happiness.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So what are the main contributions of our work?",
                    "label": 0
                },
                {
                    "sent": "We provide a formal machine model for linked data fragment settings.",
                    "label": 1
                },
                {
                    "sent": "We draw a complete expressiveness lattice considering several combination between interfaces, link data, fragment interfaces and client capabilities, and we also were able to.",
                    "label": 0
                },
                {
                    "sent": "To make an analysis and more fine grained analysis complexity analysis not only considering classical complexity but also metrics such as number of requests, the amount of data transfer.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Let me show you first our machine model that we call Link data Fragment machine.",
                    "label": 1
                },
                {
                    "sent": "So the main part of a link data flag machine is just a regular Turing machine with regular tips.",
                    "label": 0
                },
                {
                    "sent": "But it also has access to two oracles.",
                    "label": 0
                },
                {
                    "sent": "In theory, the theory of Turing machines and Oracle is just another Turing machine.",
                    "label": 0
                },
                {
                    "sent": "But you essentially do not count the number of steps that the machine does, yes.",
                    "label": 0
                },
                {
                    "sent": "So you just put some input in the tape and the Oracle machine in one step gives you the output.",
                    "label": 0
                },
                {
                    "sent": "So that is how we model the server and the client.",
                    "label": 0
                },
                {
                    "sent": "And also the machine has an unbounded number of what we call response containers that are read only tapes.",
                    "label": 0
                },
                {
                    "sent": "And how does this machine works?",
                    "label": 0
                },
                {
                    "sent": "It receives as input a query.",
                    "label": 0
                },
                {
                    "sent": "And a graph.",
                    "label": 0
                },
                {
                    "sent": "And if you can see the graph, the graph is accessible only via the server Oracle, but these are the inputs for the machine before it start working.",
                    "label": 0
                },
                {
                    "sent": "So when it start working, the machine can first do some server request and the way in which the server request is done is just the machine just write something in the tape of the server.",
                    "label": 0
                },
                {
                    "sent": "Oracle on the server.",
                    "label": 0
                },
                {
                    "sent": "Oracle answered with a response that it put in the first response container and then the machine can go to another another request and then.",
                    "label": 0
                },
                {
                    "sent": "Another response, and as so on another request, another response, and at some point the matching can decide to stop.",
                    "label": 0
                },
                {
                    "sent": "So it decides that it has enough information to answer the query that was posed initially, so it writes an output expression in the tape of the client Oracle and the client Oracle used response containers as read only tapes to produce the answer.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "Two important parameters here.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Are the server request language and the output expression language, so these are the parameters of the machine whether the server request language is the type of expressions that the machine is allowed to put in the tape of the server Oracle, and similarly for the output expression.",
                    "label": 1
                },
                {
                    "sent": "So with the server request language we are somehow modeling the linked data fragment interface and with the output expression language we are trying to model different capabilities for clients.",
                    "label": 0
                },
                {
                    "sent": "So to give you a sorry and we call this machine with LC and LS language and LC LS link data flag magic.",
                    "label": 0
                },
                {
                    "sent": "So in that way we have several settings for machines.",
                    "label": 0
                },
                {
                    "sent": "So let me go.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Do an example very simple one.",
                    "label": 0
                },
                {
                    "sent": "The server language is triple butter fragments.",
                    "label": 0
                },
                {
                    "sent": "The client language can only be used.",
                    "label": 0
                },
                {
                    "sent": "The client can only use joins and we can use.",
                    "label": 0
                },
                {
                    "sent": "We can try to answer this very simple query, which is just the conjunction of two triple pattern.",
                    "label": 0
                },
                {
                    "sent": "So as you may guess, the Turing machine, the machine can first put this request there on the server can answer this request.",
                    "label": 0
                },
                {
                    "sent": "Then you can put the second request, the second triple pattern, the Oracle answered the second request.",
                    "label": 0
                },
                {
                    "sent": "And finally the matching can put this expression in the client Oracle, which is which is just saying take the joints of the two first response containers and you obtain theirs.",
                    "label": 1
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": false,
            "summarization_data": []
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So another example.",
                    "label": 0
                },
                {
                    "sent": "So consider now binding restricted triple pattern fragments in the server and no operation in the client.",
                    "label": 0
                },
                {
                    "sent": "And we will try to answer the same query and we can actually do it.",
                    "label": 0
                },
                {
                    "sent": "Yes, we put the first triple pattern and we obtain the result and now the second request is the 2nd table pattern plus the bindings that Europe that we obtained initially.",
                    "label": 0
                },
                {
                    "sent": "So this is actually a query that can be asked in the binding restricted triple pattern fragment.",
                    "label": 0
                },
                {
                    "sent": "So the server answered with this in the second container and the output expression is just the second container because we do not have operations.",
                    "label": 0
                },
                {
                    "sent": "So whenever we have an empty set of operators in the client, we are meaning that the only way that we can answer the query is just copying some of their response to group team.",
                    "label": 0
                },
                {
                    "sent": "And this is the answer.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So the main question that we wanted to answer initially, what?",
                    "label": 0
                },
                {
                    "sent": "What are the queries computed by this settings?",
                    "label": 0
                },
                {
                    "sent": "I'll see LC LS Link data flag machine for that, we define a notion of equivalence.",
                    "label": 0
                },
                {
                    "sent": "So here we have two settings, possibly different setting with different languages, and we say that these are equivalent if all the queries that can be.",
                    "label": 0
                },
                {
                    "sent": "Answer In one setting can be answered in the other setting and the other way around.",
                    "label": 0
                },
                {
                    "sent": "But we can also define.",
                    "label": 0
                },
                {
                    "sent": "Order a pre order for these settings and in this case we say that LC LS is strictly less expressive that RCRS if all queries that can be answered in the drive in the left, your left can also be answering the right.",
                    "label": 0
                },
                {
                    "sent": "But there is at least one query that you can answer in the right that is not answering in the list in the left.",
                    "label": 0
                },
                {
                    "sent": "So with this we can draw.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "An expressive expressiveness lattice for this link data fragment settings.",
                    "label": 0
                },
                {
                    "sent": "So in the paper we consider as client languages all the subsets of this relational algebra operators for the server languages we consider triple butter fragments by industry to triple pattern fragments.",
                    "label": 0
                },
                {
                    "sent": "Basic graph patterns and sparkle endpoints as Linda Fragmente interfaces.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So the first part of the lattice, no, no, not really.",
                    "label": 0
                },
                {
                    "sent": "Something very impressive is what would you expect there?",
                    "label": 0
                },
                {
                    "sent": "What does this lattice says?",
                    "label": 0
                },
                {
                    "sent": "That it says that this configuration is strictly more expressive than this configuration, and this configuration and these bolts are strictly more expressive than the one in the bottom.",
                    "label": 0
                },
                {
                    "sent": "But for the more theoretically oriented guys here.",
                    "label": 0
                },
                {
                    "sent": "Results does not follow directly from known results in databases because you have a Turing machine in the middle and it can do all sorts of nasty things.",
                    "label": 0
                },
                {
                    "sent": "So you can.",
                    "label": 0
                },
                {
                    "sent": "You can need to to do some other tricks to prove that.",
                    "label": 0
                },
                {
                    "sent": "Relationships and for the OK, and it's also very easy to prove that beeps with no operators in the client is equivalent to TPF plus joins.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And in the case of beer TPF, we have a similar lattice, but which is more interesting in this case is that in the in the other part we can prove that for beer TPF, you only need unions and joints to obtain all the expressive power of the client of all these other operators in the client.",
                    "label": 0
                },
                {
                    "sent": "And actually, it's equally expressive as having an sparkle endpoint in the server, so you have all the same expressive power in all these combinations an.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Obviously we can combine these for this complete lattice of the combinations of client and server.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Without my team we can also do more fine grained complexity analysis.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "If you look at our diagram of how the machine works, we can now focus on the response containers, and if you remember how this machine works, every server, every response from the server goes to one different response container.",
                    "label": 0
                },
                {
                    "sent": "So if after the machine stopped working, we count the number of response container that has something, it is exactly the number of times that we receive.",
                    "label": 0
                },
                {
                    "sent": "But we go to the server and receive something, so we can we can.",
                    "label": 0
                },
                {
                    "sent": "Count exactly the number of times that we did our request, and Moreover if we sum all the size of this result container then we will have exactly the amount of data that was transferred from the from the server to the client.",
                    "label": 0
                },
                {
                    "sent": "So we have two metrics that are very specific for this machine, so we can count the number of requests and we can also count the communication bandwidth.",
                    "label": 0
                },
                {
                    "sent": "And with the.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We can again define two or new pre orders.",
                    "label": 0
                },
                {
                    "sent": "In this case is a little bit more complicated.",
                    "label": 0
                },
                {
                    "sent": "This is defined in terms of the complete.",
                    "label": 0
                },
                {
                    "sent": "Some of the size of the responses, which is the total amount of data that was transferred from the server to the client.",
                    "label": 0
                },
                {
                    "sent": "And essentially says that in the left.",
                    "label": 0
                },
                {
                    "sent": "OK, so it says that for every query the best possible strategy in the left.",
                    "label": 0
                },
                {
                    "sent": "Transferred less data than the best possible strategy in the setting in the right, so it's essentially says that the left setting is more efficient in terms of the data that is transferred, and we can do the same with the number of requests.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And we can also start drawing some lattices with this.",
                    "label": 0
                },
                {
                    "sent": "So for example, remember that beeps with no.",
                    "label": 0
                },
                {
                    "sent": "Operator in the client is equally expressive as TPS with joints, but we can have a more fine grained analysis between these two, although they are equally expressive.",
                    "label": 0
                },
                {
                    "sent": "Then you can prove that the best strategy for beeps always require require less requests than the best strategy for TPF with joins.",
                    "label": 0
                },
                {
                    "sent": "But in the terms of the total amount of data, they are incomparable so you can have different strategies for both.",
                    "label": 0
                },
                {
                    "sent": "And we might be more interesting is that if you remember these two points, here they are equally expressive also.",
                    "label": 0
                },
                {
                    "sent": "But in terms of the number of requests that you need to answer the query, then when you have all these operators in the client, you can prove that you can be strictly more efficient in the number of requests that you need, and also strictly more efficient in the number of the in the total size of the data that you have to transfer.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So what I have shown you is a first step towards a theory for comparing different access protocols for semantic web data.",
                    "label": 0
                },
                {
                    "sent": "So what we needed?",
                    "label": 0
                },
                {
                    "sent": "All we want is a more fundamental understanding of combinations of linked data, fragment interfaces and client capabilities.",
                    "label": 0
                },
                {
                    "sent": "We presented our machine model and some 1st results on expressiveness and complexity.",
                    "label": 0
                },
                {
                    "sent": "And our future work.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Obviously include GNU Link data fragment interfaces.",
                    "label": 0
                },
                {
                    "sent": "For example, I didn't show you here the data dump interface nor the link data documents, which are two of the interfaces that we want to cover in the future work, and also some other capabilities for the client.",
                    "label": 0
                },
                {
                    "sent": "We would also like to improve the machine model and consider new metrics for example.",
                    "label": 0
                },
                {
                    "sent": "The the amount of data that you have to send to the server or how capable is a is a query.",
                    "label": 0
                },
                {
                    "sent": "And definitely we would like to use this machine to start a formal study of semantic web query planning.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So thank you.",
                    "label": 0
                },
                {
                    "sent": "While you didn't do the analysis of the linked data document.",
                    "label": 1
                },
                {
                    "sent": "That was what I was hoping to see.",
                    "label": 0
                },
                {
                    "sent": "Oh, why we didn't use the link data documents.",
                    "label": 0
                },
                {
                    "sent": "Yeah, to be able to write another paper.",
                    "label": 0
                },
                {
                    "sent": "I'm not OK. Fair enough, The thing is that we have started doing this with Olaf and we thought OK, it's going to be really easy.",
                    "label": 0
                },
                {
                    "sent": "Yes, we're going everything is going to follow smoothly.",
                    "label": 0
                },
                {
                    "sent": "It turned out that it was not that easy.",
                    "label": 0
                },
                {
                    "sent": "We checked several types of machine and there are a lot of tricks and so.",
                    "label": 0
                },
                {
                    "sent": "So finally we just stick with the the thing that we can actually prove something strong with them and we would actually like to go to the link data document.",
                    "label": 0
                },
                {
                    "sent": "Yes, if all of my want to add something.",
                    "label": 0
                },
                {
                    "sent": "So if you want to share or I'm curious to see what what made it complicated will makes it complicated to do the link data document formalization part.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "First of all, the issue with the link data document once is that it's not well defined and you kind of have to give the definition, which is not.",
                    "label": 0
                },
                {
                    "sent": "You will never capture what is in the real world, so all these other interfaces.",
                    "label": 0
                },
                {
                    "sent": "They're well defined for the link data documents, you just you go to one server, you look up, you are.",
                    "label": 0
                },
                {
                    "sent": "You get a bunch of triples and for another server which actually exposes the same data set and you do the same.",
                    "label": 0
                },
                {
                    "sent": "Look up, you might get other other other triples.",
                    "label": 0
                },
                {
                    "sent": "So this is essentially already one of the issues.",
                    "label": 0
                },
                {
                    "sent": "But this is something that we really want to do.",
                    "label": 0
                },
                {
                    "sent": "Diffuser, hey, so I'm very interesting work.",
                    "label": 0
                },
                {
                    "sent": "I just wonder in general so you've been able to prove a couple of things theoretically in the past several people, including myself have to try to couple of things, but experiments where do you see the role of both that, like?",
                    "label": 0
                },
                {
                    "sent": "What are the limits of theory?",
                    "label": 0
                },
                {
                    "sent": "Is there still room for experimental validation?",
                    "label": 0
                },
                {
                    "sent": "Can these things be used in a hybrid way?",
                    "label": 0
                },
                {
                    "sent": "So how we're going to make progress?",
                    "label": 0
                },
                {
                    "sent": "Like what do we need for?",
                    "label": 0
                },
                {
                    "sent": "For that you mean make progress in practice?",
                    "label": 0
                },
                {
                    "sent": "Yeah, make progress in finding what interesting interfaces are to publish like data.",
                    "label": 0
                },
                {
                    "sent": "Should you measure this or should we do it in theory?",
                    "label": 0
                },
                {
                    "sent": "OK, this is a good question, yes.",
                    "label": 0
                },
                {
                    "sent": "Actually, we wanted to prove to provide some formal ground to be able to do that, yes, but actually to be able to just compare because the worst scenario is that people start just proposing and proposing and proposing fragments.",
                    "label": 0
                },
                {
                    "sent": "You will end up with a soup of fragments and you will need something to actually compare them formally.",
                    "label": 0
                },
                {
                    "sent": "So that would be.",
                    "label": 0
                },
                {
                    "sent": "I think it's not a complete answer.",
                    "label": 0
                },
                {
                    "sent": "I don't know if you want to add something.",
                    "label": 0
                },
                {
                    "sent": "But, but this is definitely what we want to do.",
                    "label": 0
                },
                {
                    "sent": "We will definitely consider this a first step, yes, and we were motivated from practical experiments.",
                    "label": 0
                },
                {
                    "sent": "Yes, we wanted to do it, trying to formalize it as much as we can.",
                    "label": 0
                },
                {
                    "sent": "So in my opinion, it is both.",
                    "label": 0
                },
                {
                    "sent": "It is the theory and practical like empirical evaluation and the theory.",
                    "label": 0
                },
                {
                    "sent": "What it gives you is you can basically like already skip some of the possible proposals of interfaces simply because they are covered on the in these different lettuces and therefore you know, OK, they are never going to be.",
                    "label": 0
                },
                {
                    "sent": "Better than another one, definitely.",
                    "label": 0
                }
            ]
        }
    }
}