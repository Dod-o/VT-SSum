{
    "id": "mu5rbhkkusuekh26qvfkflqo5ukaot7z",
    "title": "Clustering Trees with Instance Level Constraints",
    "info": {
        "author": [
            "Jan Struyf, Department of Computer Science, KU Leuven"
        ],
        "published": "Jan. 29, 2008",
        "recorded": "September 2007",
        "category": [
            "Top->Computer Science->Machine Learning"
        ]
    },
    "url": "http://videolectures.net/ecml07_struyf_cti/",
    "segmentation": [
        [
            "So that is clustering with instance level constraints such as must link and cannot link and this is joint work with Sasha Travelsky."
        ],
        [
            "So let me start with some background in clustering.",
            "The task is to partition a given set of instances into clusters such that the instances in a given cluster are similar.",
            "And traditional clustering methods are unsupervised, meaning that they only have access to the attributes describing the instances.",
            "No explicit information about the actual assignment of instances to clusters is given and."
        ],
        [
            "This distinguishes clustering from supervised classification, where the class of each instance is given in the data."
        ],
        [
            "In constraint clustering, one investigates how domain knowledge can improve clustering performance and is domain knowledge takes the form of constraints that must hold on the clustering.",
            "And we have considered constraints at the level of instances such as must link and cannot link, so a must link between two instances specifies that the instances must appear in the same cluster and they cannot link specifies that they must not be placed in the same cluster, so these constraints at the level of instances provide partial knowledge about the assignment of instances to clusters, and therefore this clustering with instance level constraint is considered to be.",
            "A form of semi supervised learning.",
            "So suppose."
        ],
        [
            "So we have this small data set here.",
            "A simple clustering algo."
        ],
        [
            "Some might come up with these two clusters and not be able to find the L shape.",
            "Clustering the data and this can be remedied by at."
        ],
        [
            "Eating constraints to the data by adding these constraints with the help of these constraints are simple.",
            "Clustering algorithm might be able to find this out shape cluster.",
            "And currently there is actually a lot of research in this area and many traditional clustering techniques have been modified to support constraints, either modified directly or they rely on a parameterized distance metric and then the parameters of this distance metric are learned from the constraints.",
            "And in this work we."
        ],
        [
            "Actually extend clustering trees to support constraint clustering.",
            "A clustering tree is a decision tree representing a clustering.",
            "So the leaves of the tree correspond to the clusters, as is shown with the colors on the slide, and each leaf is labeled with the mean of the instances in the cluster.",
            "An the internal nodes contain attribute value tests similar to regular decision trees.",
            "Now the main advantage of using this clustering trees over some other clustering methods is that they perform conceptual clustering, meaning that they provide a symbolic description for each of the clusters.",
            "So, for instance, our cluster C tree here, as is exactly the set of instances for which this condition here holds.",
            "And clustering trees are constructed with an algorithm that is similar to C. 4.5, But the You Ristic of this algorithm is different, so realistic maximizes the variance reduction introduced by the split.",
            "And to find the best split .4."
        ],
        [
            "Given note, the algorithm actually makes a Passover the instances."
        ],
        [
            "Considers all split point."
        ],
        [
            "And for each bullet point, it computes this heuristic value here and."
        ],
        [
            "And in the end."
        ],
        [
            "It will select the split."
        ],
        [
            "Maximizes this value and this is easier.",
            "This Y smaller than 120."
        ],
        [
            "Now the problem with these clustering trees is that they only allow conjunctive cluster descriptions.",
            "And in the two dimensional case, this corresponds to rectangularly shaped clusters, and this is a problem here because we cannot represent our AL shaped cluster.",
            "2D."
        ],
        [
            "And we extend clustering trees by adding cluster labels to the leaves of the tree and the semantic of this is that all the leaves of the tree that share the same cluster label makeup represent one cluster.",
            "And we call these clustering trees with the cluster labels disjunctive clustering trees, because they can represent clusters with a disjunctive description.",
            "For instance, our cluster C2 here is exactly the set of instances for which this this young disjunctive description holds, right?",
            "So note that this is very similar to how classification trees represent this chunk of concepts, but an important difference is that here.",
            "The labels are not given in the data and they must be inferred from the constraints."
        ],
        [
            "30s brings me to our problem definition.",
            "We have given a set of instances, a set of instance level constraints, an an upper bound on the number of clusters.",
            "Our goal is then to find such a disjunctive clustering tree, which defines a partition on the instances, and this partition must be such that it violates as few as possible of the given constraints.",
            "The number of clusters is smaller than the given upper bounds.",
            "And Lastly, the average variance computed over the leaves of the clustering tree must be as small as possible, and this comes from traditional clustering trees.",
            "This last condition and this brings me now to the key contribution of my work, which is class I'll see, and this is an efficient algorithm for computing such a tree."
        ],
        [
            "Let us start by looking at the heuristic that class I'll see minimizes.",
            "It has two components.",
            "The green component is the variance averaged over the leaves of the clustering tree, and this comes from traditional clustering trees.",
            "Direct components is actually the proportion of constraints that is violated by the tree.",
            "Now, when is the constraint violated by a tree?",
            "Well, cannot link is violated if it appears between instances in leaves representing the same cluster.",
            "So this is leaves with the same cluster label.",
            "While a must link is violated if it appears between instances in leaves with different cluster labels.",
            "Now, an important point here is that the juristic that we propose is a global one.",
            "The component of this heuristic for a given leaf actually also depends on instances in order leaves because the instances in the given leaf may be connected with constraints to the instances in order leaves, and this is an important difference from algorithms such as C 4.5 which use a local heuristic and this.",
            "Local means that the heuristic value only depends on the instances local to the note that is being split and with such a local U vistic.",
            "Actually the order in which you add tests to the tree doesn't really matter.",
            "You will always end up with the same tree in the end.",
            "And therefore C. 4.5 Actually uses depth first construction of the tree, which is most efficient and most convenient.",
            "But we here have this global juristic and therefore the order in which we add tests to the tree does matter, and our algorithm will therefore choose kind of best way to construct the 1st way to construct a tree, because this will generally give you the best tree in the end."
        ],
        [
            "Now this.",
            "Is actually the main loop of our algorithm.",
            "We start with a tree that consists of just one leaf.",
            "Then in each iteration of the main loop, we refine the current tree and refining the current."
        ],
        [
            "Tree consists of replacing a leaf.",
            "We don't know new internal note and two new leaves.",
            "And then we continue to be in each iteration we refine one of the leaves until no suitable refinement can be found anymore.",
            "And then the algorithm terminates and the best tree.",
            "Well, the current trees returned.",
            "So any?"
        ],
        [
            "Patient here on the right."
        ],
        [
            "Illustrate."
        ],
        [
            "It's how this best first search works, so notice that finding a refinement here corresponds to one finding a leaf to refine to finding a test for the new node, and discover responds to finding an attribute and a corresponding split point, and also to finding cluster labels for the two new leaves and all these decisions are made based on the you Ristic so.",
            "They have all made such that you Ristic is minimized."
        ],
        [
            "So class I'll see finds the best split point for an attribute in one path over the local instances over the instances of the node at.",
            "We are considering and it uses for this, an algorithm that is similar to the corresponding algorithm.",
            "In traditional clustering trees and also in C 4.5.",
            "But the heuristic in this case depends on the number of violated constraints.",
            "So the algorithm must keep track of this number, and also it must select labels for the two new leaves such that the number of these violated constraints is minimal.",
            "So suppose that we want to find the best split point for attribute X.",
            "Here in this node of the tree, and that we already have that part over the."
        ],
        [
            "Yeah.",
            "So we start with the largest possible split point here.",
            "This means that all the local instances here will be in the left Newleaf L1 and no instances will be in the right Newleaf out too.",
            "And now we want to find cluster labels for these two new leaves, and these labels are decided on base."
        ],
        [
            "On the constraints in which the instances participate, so we have two kinds of constraints.",
            "Really, we have constraints that are entirely local to the two new leaves, and this is the Alpha constraints and then better constraints are constraints connecting to leaves that already appear in the tree.",
            "Now the cluster label.",
            "Of the leaf only depends on the better constraints.",
            "An is chosen such that the number of violated better constraints is minimal, and in this case this occurs if we choose label."
        ],
        [
            "See one for this leaf, because then this better constraint here is satisfied for the order.",
            "If we choose a label different from this leaf, for instance C2."
        ],
        [
            "In general plus I'll see keeps track of these counters to keep track of the time better constraints.",
            "Each counter here counts the number of better constraints connecting two instances in a leaf representing a given cluster.",
            "And based on these counts class, I'll see decides on the cluster label using this formula, which actually gives you the number of violated tab type data constraints.",
            "This is essentially the number of cannot links.",
            "Through the given label through the given cluster plus the number of must links to other clusters and class.",
            "I'll see then computes this formula for each possible cluster label and an Indian picks the one that minimizes the number of violated constraints.",
            "And this is here C1 as we saw before.",
            "Now, in this example there is actually one only one violated constraint.",
            "This is this one.",
            "The two orders are satisfied.",
            "Anne.",
            "This number is then used to compute juristic value of this split.",
            "Now, if we decrease the split point here, then instances will move from the left new leaf to the right new leaf and this may change the number of violated constraints.",
            "So for instance, if this instance here moves."
        ],
        [
            "Then these must link here will become violated.",
            "And also the counters theme for the better constraints can change from Split point to split points and therefore different splits may correspond to different optimal cluster labels.",
            "So plus I'll see after considering all possible split points, plus, I'll see will have found the best split point for attribute X and also the corresponding optimal cluster labels.",
            "This is then repeated for each attribute and for each leaf of the current tree to find the best refinement of these three."
        ],
        [
            "So let me now summarize this, given a set of instances, a set of constraints, an upper bound on the number of clusters, plus I'll see finds a disjunctive clustering tree.",
            "It's puristic consists of two components, average variance which inherits from traditional clustering trees and refraction of violated constraints, now guided by this heuristic plus, I'll see ads that asks to the tree.",
            "In a kind of best first manner and it is able to find the best split points and corresponding cluster labels in one path over the nodes instances."
        ],
        [
            "And we have tested class.",
            "I'll see by comparing it to cop Cam which is a version of K means that performs constrained clustering and we use the typical benchmark setup which has become common in the constraint clustering community.",
            "And is this works as follows.",
            "So we have taken 12 UCI datasets.",
            "The clustering algorithms only see the class.",
            "So the descriptive attributes of these datasets, and then we use the class attribute to generate random constraint sets.",
            "To generate a random constraint, we pick two instances.",
            "We look at a class labels if the labels are.",
            "The same, then we generate a must link and otherwise we generate a cannot link.",
            "We measure the performance of the algorithms in terms of the random index and this compares the clustering found by the algorithm to the actual classes in the data and the higher descend index, the better the algorithm.",
            "We have first trend index on all data and also the cross validate a trend index and the latter measures how well the algorithm generalizes beyond the given set of constraints."
        ],
        [
            "So we F detailed results for all 12 datasets in the paper.",
            "And here I will try to zoom in on just one data set and then summarize the results on the other datasets."
        ],
        [
            "For you.",
            "So only vertical axis.",
            "We have the Rand index and higher is better on the horizontal axis.",
            "We have the number of randomly generated constraints.",
            "The squares are the results on all data, and here we see that for a small number of constraints class I'll see outperforms kopke means, but for a large number of constraints, cop Cam Sir process class, I'll see.",
            "And this was to be expected, because copy and performs hard constrained clustering.",
            "This means that it's answer will always satisfy all the given constraints and given sufficient constraints, Rand index will converge to one.",
            "So the triangles are the cross validated results and these show that class.",
            "I'll see overall generalizes better than cop Cam."
        ],
        [
            "This summarize this on all data are and index of COP Cam surpasses that of class.",
            "I'll see given sufficient constraints, but.",
            "The cross validated results show that plus I'll see generalizes better than cop Cam, and there is 2 reasons for this.",
            "The first one is that plus I'll see can represent more complex.",
            "I'm sorry cluster shapes, so this cop Cam is essentially a restricted to spherical clusters, and so it might not be able to represent all the clusters that actually appear in the data sets.",
            "And the second reason is.",
            "That cost, I'll see perform soft constraint clustering and this means that it can choose to ignore some of the given constraints and it has been shown before that this actually can be beneficial and also direct green in the session on ensemble methods.",
            "This morning also talked about this issue."
        ],
        [
            "So this brings me to the conclusions.",
            "Clustering trees are decision trees used for clustering.",
            "We show how clustering 3 scan support instance level constraints.",
            "Our key contribution is class, I'll see.",
            "An efficient algorithm with good generalization performance that gives you symbolic cluster descriptions, and this is important if you have a domain expert that wants to look at the result of your clustering algorithm.",
            "In future work we need to test class.",
            "I'll see in real world applications we are currently busy comparing it to other constraint clustering systems.",
            "Most importantly, systems that also perform soft constraint clustering and metric learning.",
            "We want to look into integrating other constraint types and we also want to consider alternative search strategies for the decision tree induction.",
            "So with these points I'd like to conclude thanks a lot for listening.",
            "Question.",
            "Well, this is general.",
            "Does it came up this morning but he's planted so these are useful constraints on there should be useful constraints on the final solution, and yet the inclusion of them doesn't think hard.",
            "Is it just 'cause of the greediness of the algorithm?",
            "So one of the problems is that in these artificial datasets, the constraints are randomly generated, and this means they are they are consistent with the classes, but they are not always the most informative ones, an.",
            "Seems to confuse the algorithms, I think.",
            "Well, this is at least my understanding of this, because if you look at this this work where they're actively select useful constraints, then you see that the performance improves a lot by doing this.",
            "Sabrina said the algorithm is trying to get through the constraints, block it from finding it gets caught is that you're saying or?",
            "Understand it in which intuitively it seems if they could constraints, they should do you good.",
            "But yeah, sure, yeah, yeah, some constraints are better than others, it seems and.",
            "But yeah, greediness.",
            "Also there is also some components, so we had this sometimes.",
            "Our algorithm also overfit.",
            "Submit the constraints and we could look at methods for avoiding this overfitting.",
            "Can you compare the clustering approach to spectral clustering?",
            "I'm afraid not.",
            "No, so we did this closure map method.",
            "Then we also generated.",
            "This cannot links that follow from this.",
            "So so the numbers on the graph are the number of generated constraints.",
            "And then in addition we also use the constraints in the closure of the must links and the derived cannot links.",
            "Space.",
            "I'm sorry, what is this?",
            "Try running the sunrise with his friends.",
            "For example, putting nothing into nothing was saying.",
            "No, no we haven't tried this yet.",
            "This is something to try.",
            "Other questions.",
            "One question then, would it make sense to compare to see porn .5?",
            "I mean if you speak UCI datasets and you could use the class labels.",
            "Yes definitely.",
            "So also if you have some kind of trend transactive setting where you have more data or something then you could with this algorithm use all the data and use the labeled subset to generate the constraints.",
            "But then still learn from our data value could not do this with C 4.5.",
            "But yeah you should.",
            "We should also compare to C 4.5, obviously.",
            "Movie one last question, how is regularization accomplished in this method?",
            "In the heuristic I opposite determine the number of clusters.",
            "Yeah, so so in this data sets the number of clusters is actually given.",
            "So because we are used classification problems and we set this number of clusters fixed.",
            "But there is some kind of regularization needed because we have we have overfitting problems with trees so.",
            "So post pruning methods is something that we want to look in, so currently generates a tree until no more constants are available to determine a split.",
            "So to determine cluster labels for the new lease.",
            "Surface.",
            "Tried.",
            "Knowledge shows being stores more things.",
            "No, so currently it's only on this artificial datasets, but we plan to work on real work applications in biology or in ecology.",
            "Ecological Sciences and there if you have a domain expert then he could look at these constraints and provide the most useful constraints.",
            "We hope of course.",
            "Alright, I think we should move on."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So that is clustering with instance level constraints such as must link and cannot link and this is joint work with Sasha Travelsky.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So let me start with some background in clustering.",
                    "label": 0
                },
                {
                    "sent": "The task is to partition a given set of instances into clusters such that the instances in a given cluster are similar.",
                    "label": 0
                },
                {
                    "sent": "And traditional clustering methods are unsupervised, meaning that they only have access to the attributes describing the instances.",
                    "label": 0
                },
                {
                    "sent": "No explicit information about the actual assignment of instances to clusters is given and.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This distinguishes clustering from supervised classification, where the class of each instance is given in the data.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "In constraint clustering, one investigates how domain knowledge can improve clustering performance and is domain knowledge takes the form of constraints that must hold on the clustering.",
                    "label": 0
                },
                {
                    "sent": "And we have considered constraints at the level of instances such as must link and cannot link, so a must link between two instances specifies that the instances must appear in the same cluster and they cannot link specifies that they must not be placed in the same cluster, so these constraints at the level of instances provide partial knowledge about the assignment of instances to clusters, and therefore this clustering with instance level constraint is considered to be.",
                    "label": 0
                },
                {
                    "sent": "A form of semi supervised learning.",
                    "label": 0
                },
                {
                    "sent": "So suppose.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So we have this small data set here.",
                    "label": 0
                },
                {
                    "sent": "A simple clustering algo.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Some might come up with these two clusters and not be able to find the L shape.",
                    "label": 0
                },
                {
                    "sent": "Clustering the data and this can be remedied by at.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Eating constraints to the data by adding these constraints with the help of these constraints are simple.",
                    "label": 0
                },
                {
                    "sent": "Clustering algorithm might be able to find this out shape cluster.",
                    "label": 0
                },
                {
                    "sent": "And currently there is actually a lot of research in this area and many traditional clustering techniques have been modified to support constraints, either modified directly or they rely on a parameterized distance metric and then the parameters of this distance metric are learned from the constraints.",
                    "label": 0
                },
                {
                    "sent": "And in this work we.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Actually extend clustering trees to support constraint clustering.",
                    "label": 0
                },
                {
                    "sent": "A clustering tree is a decision tree representing a clustering.",
                    "label": 1
                },
                {
                    "sent": "So the leaves of the tree correspond to the clusters, as is shown with the colors on the slide, and each leaf is labeled with the mean of the instances in the cluster.",
                    "label": 0
                },
                {
                    "sent": "An the internal nodes contain attribute value tests similar to regular decision trees.",
                    "label": 1
                },
                {
                    "sent": "Now the main advantage of using this clustering trees over some other clustering methods is that they perform conceptual clustering, meaning that they provide a symbolic description for each of the clusters.",
                    "label": 0
                },
                {
                    "sent": "So, for instance, our cluster C tree here, as is exactly the set of instances for which this condition here holds.",
                    "label": 0
                },
                {
                    "sent": "And clustering trees are constructed with an algorithm that is similar to C. 4.5, But the You Ristic of this algorithm is different, so realistic maximizes the variance reduction introduced by the split.",
                    "label": 0
                },
                {
                    "sent": "And to find the best split .4.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Given note, the algorithm actually makes a Passover the instances.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Considers all split point.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And for each bullet point, it computes this heuristic value here and.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And in the end.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "It will select the split.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Maximizes this value and this is easier.",
                    "label": 0
                },
                {
                    "sent": "This Y smaller than 120.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Now the problem with these clustering trees is that they only allow conjunctive cluster descriptions.",
                    "label": 1
                },
                {
                    "sent": "And in the two dimensional case, this corresponds to rectangularly shaped clusters, and this is a problem here because we cannot represent our AL shaped cluster.",
                    "label": 0
                },
                {
                    "sent": "2D.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And we extend clustering trees by adding cluster labels to the leaves of the tree and the semantic of this is that all the leaves of the tree that share the same cluster label makeup represent one cluster.",
                    "label": 0
                },
                {
                    "sent": "And we call these clustering trees with the cluster labels disjunctive clustering trees, because they can represent clusters with a disjunctive description.",
                    "label": 1
                },
                {
                    "sent": "For instance, our cluster C2 here is exactly the set of instances for which this this young disjunctive description holds, right?",
                    "label": 0
                },
                {
                    "sent": "So note that this is very similar to how classification trees represent this chunk of concepts, but an important difference is that here.",
                    "label": 1
                },
                {
                    "sent": "The labels are not given in the data and they must be inferred from the constraints.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "30s brings me to our problem definition.",
                    "label": 0
                },
                {
                    "sent": "We have given a set of instances, a set of instance level constraints, an an upper bound on the number of clusters.",
                    "label": 1
                },
                {
                    "sent": "Our goal is then to find such a disjunctive clustering tree, which defines a partition on the instances, and this partition must be such that it violates as few as possible of the given constraints.",
                    "label": 0
                },
                {
                    "sent": "The number of clusters is smaller than the given upper bounds.",
                    "label": 0
                },
                {
                    "sent": "And Lastly, the average variance computed over the leaves of the clustering tree must be as small as possible, and this comes from traditional clustering trees.",
                    "label": 0
                },
                {
                    "sent": "This last condition and this brings me now to the key contribution of my work, which is class I'll see, and this is an efficient algorithm for computing such a tree.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Let us start by looking at the heuristic that class I'll see minimizes.",
                    "label": 0
                },
                {
                    "sent": "It has two components.",
                    "label": 0
                },
                {
                    "sent": "The green component is the variance averaged over the leaves of the clustering tree, and this comes from traditional clustering trees.",
                    "label": 0
                },
                {
                    "sent": "Direct components is actually the proportion of constraints that is violated by the tree.",
                    "label": 0
                },
                {
                    "sent": "Now, when is the constraint violated by a tree?",
                    "label": 0
                },
                {
                    "sent": "Well, cannot link is violated if it appears between instances in leaves representing the same cluster.",
                    "label": 0
                },
                {
                    "sent": "So this is leaves with the same cluster label.",
                    "label": 0
                },
                {
                    "sent": "While a must link is violated if it appears between instances in leaves with different cluster labels.",
                    "label": 0
                },
                {
                    "sent": "Now, an important point here is that the juristic that we propose is a global one.",
                    "label": 0
                },
                {
                    "sent": "The component of this heuristic for a given leaf actually also depends on instances in order leaves because the instances in the given leaf may be connected with constraints to the instances in order leaves, and this is an important difference from algorithms such as C 4.5 which use a local heuristic and this.",
                    "label": 0
                },
                {
                    "sent": "Local means that the heuristic value only depends on the instances local to the note that is being split and with such a local U vistic.",
                    "label": 0
                },
                {
                    "sent": "Actually the order in which you add tests to the tree doesn't really matter.",
                    "label": 0
                },
                {
                    "sent": "You will always end up with the same tree in the end.",
                    "label": 0
                },
                {
                    "sent": "And therefore C. 4.5 Actually uses depth first construction of the tree, which is most efficient and most convenient.",
                    "label": 0
                },
                {
                    "sent": "But we here have this global juristic and therefore the order in which we add tests to the tree does matter, and our algorithm will therefore choose kind of best way to construct the 1st way to construct a tree, because this will generally give you the best tree in the end.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Now this.",
                    "label": 0
                },
                {
                    "sent": "Is actually the main loop of our algorithm.",
                    "label": 0
                },
                {
                    "sent": "We start with a tree that consists of just one leaf.",
                    "label": 0
                },
                {
                    "sent": "Then in each iteration of the main loop, we refine the current tree and refining the current.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Tree consists of replacing a leaf.",
                    "label": 0
                },
                {
                    "sent": "We don't know new internal note and two new leaves.",
                    "label": 1
                },
                {
                    "sent": "And then we continue to be in each iteration we refine one of the leaves until no suitable refinement can be found anymore.",
                    "label": 0
                },
                {
                    "sent": "And then the algorithm terminates and the best tree.",
                    "label": 0
                },
                {
                    "sent": "Well, the current trees returned.",
                    "label": 0
                },
                {
                    "sent": "So any?",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Patient here on the right.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Illustrate.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "It's how this best first search works, so notice that finding a refinement here corresponds to one finding a leaf to refine to finding a test for the new node, and discover responds to finding an attribute and a corresponding split point, and also to finding cluster labels for the two new leaves and all these decisions are made based on the you Ristic so.",
                    "label": 0
                },
                {
                    "sent": "They have all made such that you Ristic is minimized.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So class I'll see finds the best split point for an attribute in one path over the local instances over the instances of the node at.",
                    "label": 1
                },
                {
                    "sent": "We are considering and it uses for this, an algorithm that is similar to the corresponding algorithm.",
                    "label": 0
                },
                {
                    "sent": "In traditional clustering trees and also in C 4.5.",
                    "label": 1
                },
                {
                    "sent": "But the heuristic in this case depends on the number of violated constraints.",
                    "label": 1
                },
                {
                    "sent": "So the algorithm must keep track of this number, and also it must select labels for the two new leaves such that the number of these violated constraints is minimal.",
                    "label": 0
                },
                {
                    "sent": "So suppose that we want to find the best split point for attribute X.",
                    "label": 0
                },
                {
                    "sent": "Here in this node of the tree, and that we already have that part over the.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "So we start with the largest possible split point here.",
                    "label": 0
                },
                {
                    "sent": "This means that all the local instances here will be in the left Newleaf L1 and no instances will be in the right Newleaf out too.",
                    "label": 0
                },
                {
                    "sent": "And now we want to find cluster labels for these two new leaves, and these labels are decided on base.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "On the constraints in which the instances participate, so we have two kinds of constraints.",
                    "label": 0
                },
                {
                    "sent": "Really, we have constraints that are entirely local to the two new leaves, and this is the Alpha constraints and then better constraints are constraints connecting to leaves that already appear in the tree.",
                    "label": 0
                },
                {
                    "sent": "Now the cluster label.",
                    "label": 0
                },
                {
                    "sent": "Of the leaf only depends on the better constraints.",
                    "label": 1
                },
                {
                    "sent": "An is chosen such that the number of violated better constraints is minimal, and in this case this occurs if we choose label.",
                    "label": 1
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "See one for this leaf, because then this better constraint here is satisfied for the order.",
                    "label": 0
                },
                {
                    "sent": "If we choose a label different from this leaf, for instance C2.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "In general plus I'll see keeps track of these counters to keep track of the time better constraints.",
                    "label": 0
                },
                {
                    "sent": "Each counter here counts the number of better constraints connecting two instances in a leaf representing a given cluster.",
                    "label": 0
                },
                {
                    "sent": "And based on these counts class, I'll see decides on the cluster label using this formula, which actually gives you the number of violated tab type data constraints.",
                    "label": 0
                },
                {
                    "sent": "This is essentially the number of cannot links.",
                    "label": 0
                },
                {
                    "sent": "Through the given label through the given cluster plus the number of must links to other clusters and class.",
                    "label": 0
                },
                {
                    "sent": "I'll see then computes this formula for each possible cluster label and an Indian picks the one that minimizes the number of violated constraints.",
                    "label": 0
                },
                {
                    "sent": "And this is here C1 as we saw before.",
                    "label": 0
                },
                {
                    "sent": "Now, in this example there is actually one only one violated constraint.",
                    "label": 0
                },
                {
                    "sent": "This is this one.",
                    "label": 0
                },
                {
                    "sent": "The two orders are satisfied.",
                    "label": 0
                },
                {
                    "sent": "Anne.",
                    "label": 0
                },
                {
                    "sent": "This number is then used to compute juristic value of this split.",
                    "label": 0
                },
                {
                    "sent": "Now, if we decrease the split point here, then instances will move from the left new leaf to the right new leaf and this may change the number of violated constraints.",
                    "label": 1
                },
                {
                    "sent": "So for instance, if this instance here moves.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Then these must link here will become violated.",
                    "label": 0
                },
                {
                    "sent": "And also the counters theme for the better constraints can change from Split point to split points and therefore different splits may correspond to different optimal cluster labels.",
                    "label": 0
                },
                {
                    "sent": "So plus I'll see after considering all possible split points, plus, I'll see will have found the best split point for attribute X and also the corresponding optimal cluster labels.",
                    "label": 1
                },
                {
                    "sent": "This is then repeated for each attribute and for each leaf of the current tree to find the best refinement of these three.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So let me now summarize this, given a set of instances, a set of constraints, an upper bound on the number of clusters, plus I'll see finds a disjunctive clustering tree.",
                    "label": 1
                },
                {
                    "sent": "It's puristic consists of two components, average variance which inherits from traditional clustering trees and refraction of violated constraints, now guided by this heuristic plus, I'll see ads that asks to the tree.",
                    "label": 0
                },
                {
                    "sent": "In a kind of best first manner and it is able to find the best split points and corresponding cluster labels in one path over the nodes instances.",
                    "label": 1
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And we have tested class.",
                    "label": 0
                },
                {
                    "sent": "I'll see by comparing it to cop Cam which is a version of K means that performs constrained clustering and we use the typical benchmark setup which has become common in the constraint clustering community.",
                    "label": 1
                },
                {
                    "sent": "And is this works as follows.",
                    "label": 1
                },
                {
                    "sent": "So we have taken 12 UCI datasets.",
                    "label": 0
                },
                {
                    "sent": "The clustering algorithms only see the class.",
                    "label": 1
                },
                {
                    "sent": "So the descriptive attributes of these datasets, and then we use the class attribute to generate random constraint sets.",
                    "label": 1
                },
                {
                    "sent": "To generate a random constraint, we pick two instances.",
                    "label": 0
                },
                {
                    "sent": "We look at a class labels if the labels are.",
                    "label": 0
                },
                {
                    "sent": "The same, then we generate a must link and otherwise we generate a cannot link.",
                    "label": 1
                },
                {
                    "sent": "We measure the performance of the algorithms in terms of the random index and this compares the clustering found by the algorithm to the actual classes in the data and the higher descend index, the better the algorithm.",
                    "label": 0
                },
                {
                    "sent": "We have first trend index on all data and also the cross validate a trend index and the latter measures how well the algorithm generalizes beyond the given set of constraints.",
                    "label": 0
                }
            ]
        },
        "clip_31": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So we F detailed results for all 12 datasets in the paper.",
                    "label": 0
                },
                {
                    "sent": "And here I will try to zoom in on just one data set and then summarize the results on the other datasets.",
                    "label": 0
                }
            ]
        },
        "clip_32": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "For you.",
                    "label": 0
                },
                {
                    "sent": "So only vertical axis.",
                    "label": 0
                },
                {
                    "sent": "We have the Rand index and higher is better on the horizontal axis.",
                    "label": 0
                },
                {
                    "sent": "We have the number of randomly generated constraints.",
                    "label": 0
                },
                {
                    "sent": "The squares are the results on all data, and here we see that for a small number of constraints class I'll see outperforms kopke means, but for a large number of constraints, cop Cam Sir process class, I'll see.",
                    "label": 0
                },
                {
                    "sent": "And this was to be expected, because copy and performs hard constrained clustering.",
                    "label": 0
                },
                {
                    "sent": "This means that it's answer will always satisfy all the given constraints and given sufficient constraints, Rand index will converge to one.",
                    "label": 0
                },
                {
                    "sent": "So the triangles are the cross validated results and these show that class.",
                    "label": 0
                },
                {
                    "sent": "I'll see overall generalizes better than cop Cam.",
                    "label": 0
                }
            ]
        },
        "clip_33": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "This summarize this on all data are and index of COP Cam surpasses that of class.",
                    "label": 1
                },
                {
                    "sent": "I'll see given sufficient constraints, but.",
                    "label": 0
                },
                {
                    "sent": "The cross validated results show that plus I'll see generalizes better than cop Cam, and there is 2 reasons for this.",
                    "label": 0
                },
                {
                    "sent": "The first one is that plus I'll see can represent more complex.",
                    "label": 1
                },
                {
                    "sent": "I'm sorry cluster shapes, so this cop Cam is essentially a restricted to spherical clusters, and so it might not be able to represent all the clusters that actually appear in the data sets.",
                    "label": 0
                },
                {
                    "sent": "And the second reason is.",
                    "label": 0
                },
                {
                    "sent": "That cost, I'll see perform soft constraint clustering and this means that it can choose to ignore some of the given constraints and it has been shown before that this actually can be beneficial and also direct green in the session on ensemble methods.",
                    "label": 0
                },
                {
                    "sent": "This morning also talked about this issue.",
                    "label": 0
                }
            ]
        },
        "clip_34": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So this brings me to the conclusions.",
                    "label": 0
                },
                {
                    "sent": "Clustering trees are decision trees used for clustering.",
                    "label": 1
                },
                {
                    "sent": "We show how clustering 3 scan support instance level constraints.",
                    "label": 0
                },
                {
                    "sent": "Our key contribution is class, I'll see.",
                    "label": 0
                },
                {
                    "sent": "An efficient algorithm with good generalization performance that gives you symbolic cluster descriptions, and this is important if you have a domain expert that wants to look at the result of your clustering algorithm.",
                    "label": 0
                },
                {
                    "sent": "In future work we need to test class.",
                    "label": 0
                },
                {
                    "sent": "I'll see in real world applications we are currently busy comparing it to other constraint clustering systems.",
                    "label": 1
                },
                {
                    "sent": "Most importantly, systems that also perform soft constraint clustering and metric learning.",
                    "label": 0
                },
                {
                    "sent": "We want to look into integrating other constraint types and we also want to consider alternative search strategies for the decision tree induction.",
                    "label": 0
                },
                {
                    "sent": "So with these points I'd like to conclude thanks a lot for listening.",
                    "label": 0
                },
                {
                    "sent": "Question.",
                    "label": 0
                },
                {
                    "sent": "Well, this is general.",
                    "label": 0
                },
                {
                    "sent": "Does it came up this morning but he's planted so these are useful constraints on there should be useful constraints on the final solution, and yet the inclusion of them doesn't think hard.",
                    "label": 0
                },
                {
                    "sent": "Is it just 'cause of the greediness of the algorithm?",
                    "label": 0
                },
                {
                    "sent": "So one of the problems is that in these artificial datasets, the constraints are randomly generated, and this means they are they are consistent with the classes, but they are not always the most informative ones, an.",
                    "label": 0
                },
                {
                    "sent": "Seems to confuse the algorithms, I think.",
                    "label": 0
                },
                {
                    "sent": "Well, this is at least my understanding of this, because if you look at this this work where they're actively select useful constraints, then you see that the performance improves a lot by doing this.",
                    "label": 0
                },
                {
                    "sent": "Sabrina said the algorithm is trying to get through the constraints, block it from finding it gets caught is that you're saying or?",
                    "label": 0
                },
                {
                    "sent": "Understand it in which intuitively it seems if they could constraints, they should do you good.",
                    "label": 0
                },
                {
                    "sent": "But yeah, sure, yeah, yeah, some constraints are better than others, it seems and.",
                    "label": 0
                },
                {
                    "sent": "But yeah, greediness.",
                    "label": 0
                },
                {
                    "sent": "Also there is also some components, so we had this sometimes.",
                    "label": 0
                },
                {
                    "sent": "Our algorithm also overfit.",
                    "label": 0
                },
                {
                    "sent": "Submit the constraints and we could look at methods for avoiding this overfitting.",
                    "label": 0
                },
                {
                    "sent": "Can you compare the clustering approach to spectral clustering?",
                    "label": 0
                },
                {
                    "sent": "I'm afraid not.",
                    "label": 0
                },
                {
                    "sent": "No, so we did this closure map method.",
                    "label": 0
                },
                {
                    "sent": "Then we also generated.",
                    "label": 0
                },
                {
                    "sent": "This cannot links that follow from this.",
                    "label": 0
                },
                {
                    "sent": "So so the numbers on the graph are the number of generated constraints.",
                    "label": 0
                },
                {
                    "sent": "And then in addition we also use the constraints in the closure of the must links and the derived cannot links.",
                    "label": 0
                },
                {
                    "sent": "Space.",
                    "label": 0
                },
                {
                    "sent": "I'm sorry, what is this?",
                    "label": 0
                },
                {
                    "sent": "Try running the sunrise with his friends.",
                    "label": 0
                },
                {
                    "sent": "For example, putting nothing into nothing was saying.",
                    "label": 0
                },
                {
                    "sent": "No, no we haven't tried this yet.",
                    "label": 0
                },
                {
                    "sent": "This is something to try.",
                    "label": 0
                },
                {
                    "sent": "Other questions.",
                    "label": 0
                },
                {
                    "sent": "One question then, would it make sense to compare to see porn .5?",
                    "label": 0
                },
                {
                    "sent": "I mean if you speak UCI datasets and you could use the class labels.",
                    "label": 0
                },
                {
                    "sent": "Yes definitely.",
                    "label": 0
                },
                {
                    "sent": "So also if you have some kind of trend transactive setting where you have more data or something then you could with this algorithm use all the data and use the labeled subset to generate the constraints.",
                    "label": 0
                },
                {
                    "sent": "But then still learn from our data value could not do this with C 4.5.",
                    "label": 0
                },
                {
                    "sent": "But yeah you should.",
                    "label": 0
                },
                {
                    "sent": "We should also compare to C 4.5, obviously.",
                    "label": 0
                },
                {
                    "sent": "Movie one last question, how is regularization accomplished in this method?",
                    "label": 0
                },
                {
                    "sent": "In the heuristic I opposite determine the number of clusters.",
                    "label": 0
                },
                {
                    "sent": "Yeah, so so in this data sets the number of clusters is actually given.",
                    "label": 0
                },
                {
                    "sent": "So because we are used classification problems and we set this number of clusters fixed.",
                    "label": 0
                },
                {
                    "sent": "But there is some kind of regularization needed because we have we have overfitting problems with trees so.",
                    "label": 0
                },
                {
                    "sent": "So post pruning methods is something that we want to look in, so currently generates a tree until no more constants are available to determine a split.",
                    "label": 0
                },
                {
                    "sent": "So to determine cluster labels for the new lease.",
                    "label": 0
                },
                {
                    "sent": "Surface.",
                    "label": 0
                },
                {
                    "sent": "Tried.",
                    "label": 0
                },
                {
                    "sent": "Knowledge shows being stores more things.",
                    "label": 0
                },
                {
                    "sent": "No, so currently it's only on this artificial datasets, but we plan to work on real work applications in biology or in ecology.",
                    "label": 0
                },
                {
                    "sent": "Ecological Sciences and there if you have a domain expert then he could look at these constraints and provide the most useful constraints.",
                    "label": 0
                },
                {
                    "sent": "We hope of course.",
                    "label": 0
                },
                {
                    "sent": "Alright, I think we should move on.",
                    "label": 0
                }
            ]
        }
    }
}