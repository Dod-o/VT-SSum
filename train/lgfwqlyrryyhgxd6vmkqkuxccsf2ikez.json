{
    "id": "lgfwqlyrryyhgxd6vmkqkuxccsf2ikez",
    "title": "The architecture of LarKC",
    "info": {
        "author": [
            "Barry Bishop, IRIS Research Unit, University of Innsbruck"
        ],
        "published": "July 15, 2009",
        "recorded": "June 2009",
        "category": [
            "Top->Computer Science->Semantic Web",
            "Top->Science->Scientific Projects"
        ]
    },
    "url": "http://videolectures.net/larkceaw09_bishop_arch/",
    "segmentation": [
        [
            "So the purpose of this presentation, then, is just to give you a little bit of a feel for the architecture as it's evolving at the moment."
        ],
        [
            "I think you seen this picture already.",
            "Still reinforce this.",
            "It's we're trying to develop.",
            "A collection of modular components that can be used together in a platform to do different kinds of things.",
            "We're combining experiments if you like or technologies to put them together in unusual ways so that we have more flexibility and we can conduct more."
        ],
        [
            "Interesting experiments.",
            "Frank has gone through this.",
            "This is how we've conceptually started to breakdown the problem, and we've identified these key areas, and this was our starting point.",
            "For where we started to go with the technology."
        ],
        [
            "More so we started to break it down more.",
            "More granular way.",
            "We started with the plug-in idea and we built an API for plugins, so an API that plug-in developers could use to implement new plugins, brand new things or could use to wrap existing technology existing plugins.",
            "Now, the way this fits together is that we have.",
            "In a particular plugin, and here we show just the linear one, which has been the example.",
            "We've used it all the way through in this linear plug-in we have linear pipeline.",
            "We have each plug-in runs inside its own manager, who and the manager takes care of the threading issues between the plugin managers.",
            "They have all the thread safe queues which are responsible for keeping the data.",
            "The integrity of the data between plugins, data structures which are passed between plugins.",
            "From the data layer and the data they can also be used to pass data.",
            "So if you know the name of the graph in the data store, for example, you don't need to load the entire graph and to pass it to the next plugin, you can just give the name of the graph to the next guy along in the chain.",
            "The data layer is intelligent enough that it can work with a number of different formats, so.",
            "One of these formats are the contexts out IAM data layer and even will be telling you more about this stuff that goes on down here or we can just work with RDF documents in whichever format.",
            "To help the deciding what it does, the platform provides is essentially a bundle of utility's.",
            "Like Frank said, it's a quite a lightweight thing and provides lots of functions that really decided, or the plugins can call upon to make things happen.",
            "Some of the things that go on here we have.",
            "Registry, so we have.",
            "We can semantically describe our plugins and what they do and then a decider can make decisions about which plugins it would actually like to use for a particular problem.",
            "Then we have a support system which is really responsible for instantiating plugins or in the remote execution scenario it would be responsible for finding and attaching and connecting and that kind of thing and then all of this will run in either as modular components or as a platform and applications can interface to this to to make use of the functionality."
        ],
        [
            "OK, so I'm going to quickly go through each of the plug-in types that we have just in slightly more detail.",
            "First one was identified, the really the point of this thing is that when the whole reasoning procedure starts with trying to work out what data we're working with.",
            "And the identify component will be.",
            "Responsible for actually deciding what is going to be the input for reasoning.",
            "So this information sets as we call them the sort of generic term for any data that goes into the lock system.",
            "Could be pretty much anything, so it's a sparkle endpoints.",
            "RDF documents, of course, are there, but the RDF could be in a file somewhere.",
            "It could be a document on the web, it could be a name graph in a triple store, and so on.",
            "Or indeed it could be a natural language document, so part of the transformation phase may be taking some textual document, running it through a clever processing and from that developing or generating triples.",
            "Which describes some of the data in there.",
            "So they essentially.",
            "You certainly listing semantic search, but this is relevant right because?",
            "You would do semantic search over natural language documents and these documents could be input to the floor.",
            "Yeah.",
            "OK, so they identify is given a query and then from that query it will workout what resource is it needs and that will return you a collection of information sets and these information sets could be a name graph or draw graph in memory or could be a name graph in a triple store and so on.",
            "Or indeed a collection of natural language documents.",
            "Some of the examples of things that we have at the moment.",
            "We have this Tinder J plug in and that uses the syndicated web service which basically indexes RDF graphs that it finds on the web and so this is a very useful thing and you'll see later would do a little web.",
            "Web sparkle Swingle of course is very similar to to send a J.",
            "Something we haven't done yet, but it's entirely possible we could use Google, but we could use Google to find natural language documents and then run them through the trend of the clever transform, which which can extract RDF triples.",
            "Or it could just be that the identifier was knows about a single triple store, and that's the one it uses an it will use the query to workout, which graphs it needs to answer."
        ],
        [
            "Query.",
            "Transformation there are two shortly after starting this you realize we have two kinds of Transformers.",
            "Quite often the identify stage could be like senior change, for example may not really understand what a sparkle query is.",
            "It may have nothing to do with sparkle, so we realized that we need to transform the original Sparkle query, which is kind of guiding the way the pipeline is constructed and runs.",
            "Transform that query into some other form to give to some other service or plug in so that we could find the necessary resource is and send it as a good example where synergy has a number of different search forms, one of which is based on keywords.",
            "So for example we would take the outside user, query would extract some keywords and then we would give those to the synergy web service and that would return URLs to RDF documents, which probably contain those terms.",
            "Back into the real raw data processing though, once we've actually got those documents, I've got those triples, then we may need to transform for various reasons.",
            "That could be that 'cause we've got natural language in an RDF out, or it could be that we have.",
            "RDF triples for some formalism, let's say, so we have photology.",
            "We need it in the Facebook vocabulary, and the transformer would do that transformation."
        ],
        [
            "Afterwards, we have a lot of triples that need processing, and in order to take sensible subsets of that, the result of a size that the reason that can handle.",
            "We have this selector stage and the selector stage will take a set of statements, which is our most abstract collection of RDF statements.",
            "An return you another set of statements and usually a smaller one, although not always as we're seeing one of our hands-on scenarios.",
            "Inside this box could be anything and we know some of the guys are working on these ideas from cognitive science, so using heuristics and smart ways to actually identify subsets of this.",
            "And again, this is kind of we already introducing some kind of approximation in what we do here, because those subsets won't necessarily contain all the triples that would be required for the query.",
            "We're already accepting some level of approximation.",
            "The approximation doesn't only come because the reason is incomplete, so you could run a complete reasoner like Razor, but running on part of the data set.",
            "So then the whole pipeline.",
            "Is displays incomplete behavior even though the reason there is just a classical goldfish inside the complete reasoner in the incompleteness is between about incompleteness arises from the interaction between the selector and the reason.",
            "Yeah, in an extreme case, we could just always do clever selection and just use some tiny reasoner to do the final part of the reasoning to final inference.",
            "Question yes.",
            "RDF, then is your lingua franca inside, yes.",
            "At the beginning is identified.",
            "Could still produce.",
            "Natural language.",
            "Documents we need to language from Demonics RDF with whatever you can encode in idea.",
            "But it's a very deliberate design decision.",
            "It's good to point out."
        ],
        [
            "OK, so moving along.",
            "Typically after selection you would have a reason to plug in and this is where the inference is done an we decided that the reason that would be the one that would combine the input data, the user query and do the query answering with the necessary inference.",
            "So what you get out of the reasoning stage depends what kind of query or asking.",
            "So we have variable binding for select query sets of statements for describen construct and so on.",
            "And the Boolean result for an ASK query.",
            "We have we have quite a few of them at the moment.",
            "This is just some of the ones that sort of just pure sparkle we can use just the Sparkle engine on triples with no reasoning at all.",
            "That's the kind of almost the null case, or we can do inference with different kinds of rulesets, or kind of unusual one in the urban use case will actually the inference that we do is something that's not really to do with any sort of normal or well known inference stack.",
            "Here we're using the generating shortest paths between points in a city.",
            "Using other well established algorithms so this is.",
            "This is a very special purpose, reasoner.",
            "So it computes some shortest path algorithm and it doesn't do it by writing a description logic reason there over at how statins.",
            "Or you could, but we painful, right?",
            "But it's a very optimized reasoner inside the black box, which is this reasoner plug in.",
            "And it still behaves to the outside world as if it does reasoning.",
            "Because this part of query goes in about what's the shortest path between these two points and outcomes the result.",
            "So this is another example of what you were asking about.",
            "Why'd you choose such a open at Virginia?",
            "Because it allows us to take even very specialized, very special purpose software and.",
            "Plug it into this display.",
            "OK, and the last example is psych reasoning systems, well established and very powerful reasoning system which is also wrapped up behind this interface.",
            "Then in charge of all these things is the decider itself.",
            "When the decider is almost like the first point of entry from the outside world and the decider.",
            "That says Desai Dark ages potential.",
            "There was no copying and pasting in this presentation I promise.",
            "OK so from the deciders POV.",
            "It sees a query and it also sees this quality of service parameters.",
            "This is something else where investigating at the moment the user can give some parameters to guide how the query should be answered and what kind of results and quality results it can expect.",
            "The decider will take this input, it will.",
            "Interact with the platform.",
            "It will create plugins, create pipelines, pass all the work onto the plugins.",
            "Potentially do some meta reasoning about what's going on, or some some control of what's going on, and then ultimately the result from the reasonable come out as the results from the whole decider and these come back to the outside world.",
            "The wild box had the wrong name.",
            "The interface is correct.",
            "Yes, yes, yes.",
            "Yeah.",
            "OK, and we have a few examples.",
            "We have a meta reasoning, decide and we have.",
            "Actually we're using Psych in this case to do meta reasoning about plugins so very powerful way of dynamically building pipelines and controlling them.",
            "Or in the simple case we have a few examples of just scripted decider.",
            "It's the thing that you say, oh, here are your plugins.",
            "Just use those and that's it.",
            "Yes, exactly in a purely linear way, so not not intelligent.",
            "Web service.",
            "Yeah, so yeah in the ultimate case you would take this work about web service composition and that would be that could be inside.",
            "You could use that technology will decide.",
            "Yeah, and the language I know if you talk about the annotation language.",
            "Yeah I have a slide here so we're using web service, web service technology for describing our plugging your observations."
        ],
        [
            "OK. OK, so we wanted to have a way of.",
            "Semantically, describing our plugins for this very reason and the what we decided to do, was use this format called Wizmo Light, and this is an extension of source tool SA Wisdom, semantically annotated wisdom and semantically annotated whistle is essentially wisdom, but with a few extra tags in there.",
            "The most important one being this model reference tag and what that allows you to do that.",
            "While the wisdom describes the purely syntax of your web service.",
            "Then these model reference links can actually link items in the description, which could be the service itself, an operation or the messages that are passed for each operation and they can attach them to a name from an ontology.",
            "OK, and then the so these these wizmo.",
            "And sorry there's and there's a very lightweight ontology that goes with these with my light ontology which has this on the model of the services and also the foundations for the functional non functional parameters and so on.",
            "And So what that allows decided to do is to ask for descriptions, or if it knows about a particular problem we need to solve, it can get the relevant descriptions and then use those to instantiate plugging components and build a pipeline.",
            "So more or less the absolute minimum annotation that you would have to give her plugins to mention this type.",
            "I don't think I'm identifying and that will be about it and then you can go all the way to describing nonfunctional properties.",
            "But if you give me so many CPUs, I can do so much better job and whatever you want to describe.",
            "But the minimum thing is you have to mention the type because it would need to be registered.",
            "Input output types help as well.",
            "We are looking into decided that potentially do exactly what this magical service system with doing service discovery, login, discovery, clothing composition, selection, but again, the platform is not conditional on getting so many web services to work right because it just goes on insider and you can just write the pipeline Java do XY set and then you also get a side which is the kind of thing we've done quite a lot."
        ],
        [
            "OK, so an example of how this might be used to decide knows the problems to solve.",
            "It would ask the plugin registry what kinds of things it needs.",
            "The plug-in registry can then say yeah.",
            "Well, here's some descriptions of plugins I know about which are relevant for what you want to do.",
            "And then they decide it can ask the part of the platform to create the plugins that it needs and so.",
            "In turn, the pipeline support system would create the query transformer identifier and all the rest of the plugins in the chain provide them in this nice plugin manager, which looks after threading and."
        ],
        [
            "Communication issues.",
            "For an example of how this pipeline might run and this again is just the simple linear example, let's assume that the decider has constructed a pipeline.",
            "The plugin managers are wrapping them nicely.",
            "This is all running on one machine.",
            "This is all local.",
            "The the support system will arrange everything so that we have all these queues in place, so the data will flow nicely between the plugins.",
            "And what we have with control messages tend to flow backwards and the data itself flows forwards.",
            "So we."
        ],
        [
            "Happens when, so this is the local example.",
            "The remote example.",
            "We can do the same kind of thing, But in this case.",
            "The we have a stub so the plugin managers on the local machine are stubs into plugins or executing remotely.",
            "And so these can be joined together in more exotic ways.",
            "So if possible with two plugins are running on the same machine far away, you don't want to come back to where the platform is running.",
            "The data can simply pass between plugins and the data will move through the pipeline as shown.",
            "Oops, Yep.",
            "This picture is that the real work happens in the small boxes at the bottom right.",
            "Is it sort of the plugins are.",
            "That's where the analysis is done.",
            "On, your reasoning is gone, or the face is spreading or whatever it is that you want to do and all this other stuff is infrastructure that is done for you by the platform.",
            "So that's what it was.",
            "One of these clauses, infrastructure heavy lifting has already been done, so making sure this communication is being set up, making sure that the communication between your local machine and the remote machine is being done, making sure that their their queues and buffers between these components and so on.",
            "All these engineering that you would have to do.",
            "Making sure that all of these extra genius components can interface with each other.",
            "All of that is the infrastructure heavy lifting that bar does for you, and then the actual work happens in the books.",
            "OK so yeah.",
            "This is so for me.",
            "It's more like good plugging is a function.",
            "There's no state that it can be correct.",
            "Yes, that is exactly right.",
            "When you start getting random code is that plugins have slightly more complex interface that we showed you and every plugin when it's invoked its context, so everything is stable and you can pass context around.",
            "So the workflow you can do the first iteration of the job and then you can find them in.",
            "That's overloaded and go somewhere else tell us another instantiation of the same building through the 2nd iteration.",
            "But a little bit more something that you said, but essentially your summary was correct.",
            "Yes.",
            "So far we're speaking about small and tiny plugins.",
            "What's the upper bound of the complexity?",
            "For example, player register or stubbing my platform?",
            "Yes, so there.",
            "There's not really an upper bound on how complex a plugin should bridge in this post.",
            "Yeah, yes, yeah, OK. All is going to talk a little bit about that later on, I think.",
            "OK, at least in terms of distributed processing and that kind of thing.",
            "And then you would have to make sure that plug in either response quickly enough or that it produces 3 results.",
            "Or if you're able to wait for a long time.",
            "If it takes a long time.",
            "But in principle applauding can be arbitrary, just in just trying to think or complex collaboration scenario right most complex.",
            "Huge.",
            "Yeah, it's completely valid.",
            "Need the truck for example.",
            "So we took the whole page pipelines and then wrapped it as a single transform.",
            "So that's it.",
            "That's the right this answer to your question.",
            "Thank you, OK."
        ],
        [
            "So I'm going to show you some pictorially.",
            "Now sort of simple pipeline just to show the sequence of events.",
            "Have you have a bit more understanding about how things move around the messages get passed around within a pipeline and the example is what we've been calling web sparkle where we just give it a query and then the platform goes off.",
            "Looks for resource is find some on the web downloads among, combines them and then starts executing the query against the.",
            "Yeah, the data it has.",
            "The purpose of this really was just we wanted to flush out the API, which I think we've done, and we also wanted to explore anytime model.",
            "So even in this simple case we wanted to start getting data through the pipeline as quickly as possible.",
            "So if we have some documents downloaded, they would go through the pipeline and we got more stuff later on as the identifier worked, it would send more stuff through the pipeline and we get more and more results.",
            "OK so here."
        ],
        [
            "For example, we have simple anytime decider in this case.",
            "Given a sparkle query.",
            "From this and in conjunction with these utilities from the platform, we construct the pipeline.",
            "And the pipeline is linked together with the appropriate cues.",
            "Each plugin has access to the original query and you can use this kind of meta information for what it does.",
            "It can actually there's useful information in the outside user query if you like, which can guide each plugin as to how it will operate.",
            "So this query here is in red.",
            "And the query we start off by pushing the query.",
            "There's the first element into the pipeline.",
            "What happens now is that once you feel constructed and ready to go at the moment the data flows, so.",
            "The next step is that they decided will ask the last element in the chain.",
            "The last plug in, say, right?",
            "I'm ready, give me some data please.",
            "Answers yeah, sorry.",
            "Better word so of course this won't have anything yet.",
            "'cause the nothing is actually signed to flow through the pipeline, so these control messages start to go backwards.",
            "The reason it will ask the selector, right?",
            "I'm ready for data now.",
            "The selector won't have any, so it lost the plug-in beforehand and in this case we have no Transformers.",
            "This goes to the identifier.",
            "Anne and this identify goes to the query.",
            "Transformers say right give me a query with which I can use to do my identification.",
            "So if we start from this and if you can read this, this is the input query.",
            "This red dot here and this.",
            "From here we can extract a number of triple patterns, which are the kind of things that the Cinder J web service likes so we can give it these triple patterns in it.",
            "From those it can look up these indexes and find RDF documents which are appropriate for what we're trying to do here.",
            "There's there's Clever's potential collaborators in here, right?",
            "So, on the left you see his original query, which is sparkle for give me all people who focus noting Burns Lee.",
            "And then you must transfer somehow.",
            "Find a relevant pages in signature that contain that information and you could be as smart as long as you want in producing the right inside.",
            "Because then you exploit or I don't exploit this margins of of symmetry, so there's knowledge involved in in doing this first query transformation.",
            "This case is very simple.",
            "You could be arbitrarily small.",
            "OK, So what happens then is that the query transformer has some triple packing queries and it passes them on to the next.",
            "Plug it in in the line and that is the identifier synergy, so it has.",
            "It has a query and it uses this to query the website and get some results and what they gets back is it's a restful service.",
            "You get a page of results which are embedded within our the URLs to RDF documents that it knows about on the web, some of which don't exist, some of which are not in the right format, and so on, but many of which are useful for this query.",
            "So it takes the URLs, these documents, and from that we have basically a collection of our collections of RDF triples or graphs, and the graphs get passed on to the next plugin in the line, which is the case of growing data set selectors.",
            "So this is actually a selector which.",
            "Increases in size because of this example.",
            "If we just take individual documents one at a time and do inference on them quite often, then we lose some inferences with the next iteration.",
            "So where this selector is actually remembering what goes through it.",
            "OK, so it starts off with no triples and we give it some and the entire bunch of triples is passed on to the reasoner and the reason that some inference calculates some results and we have some variable bindings come back to the decider which are then returned to the outside world.",
            "This is 1 iteration of an anytime loop and if the decider then says right?",
            "Well, this is not enough.",
            "I need more data then ask again or say to the reasoner, please.",
            "I need some more data.",
            "This message will go back to the answers here.",
            "I must stop saying that.",
            "OK, so it needs more answers.",
            "We don't have either good enough or enough answers so the message goes back.",
            "More input requires an.",
            "This goes back to the sender check, but in this case into Chase still working through its pages the way this interchange service works is it will give you results 10 at a time and you can iterate through the pages.",
            "Of results, so the next time around this industry identify will have its second page and it will pass on the URLs that it finds in this page to the next plugin in line.",
            "This will go to this data set selector.",
            "The growing data set selector.",
            "It will merge the results.",
            "We have more triples.",
            "We have more graphs and it will pass more information onto.",
            "The reason are the reason why they execute.",
            "Calculate some more infant inferences and more answers will then return back to the decider which are returned to the user.",
            "Yeah."
        ],
        [
            "Yes.",
            "Yes, moving approximately approximation by maybe taking a subset and then using the classical reasoner which produces some sort of approximation because it's not complete.",
            "This is a great way of messages proving any fun behavior, because what we do is, rather than sitting around saying CJ OK, let's get all these big documents are getting 1000 triples occasion RDF graph using over the reducing one variable binding and say great, there's your answer.",
            "Now.",
            "What we do is we reason over 10 below 20 degrees North 30 that would be #40.",
            "Of course.",
            "Take the hint that we replicate a lot of reasoning.",
            "You get an answer after 30 milliseconds.",
            "Make another after 60 milliseconds and this means that problem waiting the full take 2 minutes.",
            "It takes to reason over at graphs.",
            "You get answers early and get us often.",
            "And quite often, the delay in this case can very often be the remote web servers, so some of these documents take a minute to download, so.",
            "We can compute and compute inferences on the documents that we get first and then add the slow ones on later.",
            "OK, well I think.",
            "That was the end of my architecture overview.",
            "Do you have any other questions?"
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So the purpose of this presentation, then, is just to give you a little bit of a feel for the architecture as it's evolving at the moment.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I think you seen this picture already.",
                    "label": 0
                },
                {
                    "sent": "Still reinforce this.",
                    "label": 0
                },
                {
                    "sent": "It's we're trying to develop.",
                    "label": 0
                },
                {
                    "sent": "A collection of modular components that can be used together in a platform to do different kinds of things.",
                    "label": 0
                },
                {
                    "sent": "We're combining experiments if you like or technologies to put them together in unusual ways so that we have more flexibility and we can conduct more.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Interesting experiments.",
                    "label": 0
                },
                {
                    "sent": "Frank has gone through this.",
                    "label": 0
                },
                {
                    "sent": "This is how we've conceptually started to breakdown the problem, and we've identified these key areas, and this was our starting point.",
                    "label": 0
                },
                {
                    "sent": "For where we started to go with the technology.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "More so we started to break it down more.",
                    "label": 0
                },
                {
                    "sent": "More granular way.",
                    "label": 0
                },
                {
                    "sent": "We started with the plug-in idea and we built an API for plugins, so an API that plug-in developers could use to implement new plugins, brand new things or could use to wrap existing technology existing plugins.",
                    "label": 0
                },
                {
                    "sent": "Now, the way this fits together is that we have.",
                    "label": 0
                },
                {
                    "sent": "In a particular plugin, and here we show just the linear one, which has been the example.",
                    "label": 0
                },
                {
                    "sent": "We've used it all the way through in this linear plug-in we have linear pipeline.",
                    "label": 0
                },
                {
                    "sent": "We have each plug-in runs inside its own manager, who and the manager takes care of the threading issues between the plugin managers.",
                    "label": 0
                },
                {
                    "sent": "They have all the thread safe queues which are responsible for keeping the data.",
                    "label": 0
                },
                {
                    "sent": "The integrity of the data between plugins, data structures which are passed between plugins.",
                    "label": 0
                },
                {
                    "sent": "From the data layer and the data they can also be used to pass data.",
                    "label": 0
                },
                {
                    "sent": "So if you know the name of the graph in the data store, for example, you don't need to load the entire graph and to pass it to the next plugin, you can just give the name of the graph to the next guy along in the chain.",
                    "label": 0
                },
                {
                    "sent": "The data layer is intelligent enough that it can work with a number of different formats, so.",
                    "label": 0
                },
                {
                    "sent": "One of these formats are the contexts out IAM data layer and even will be telling you more about this stuff that goes on down here or we can just work with RDF documents in whichever format.",
                    "label": 0
                },
                {
                    "sent": "To help the deciding what it does, the platform provides is essentially a bundle of utility's.",
                    "label": 0
                },
                {
                    "sent": "Like Frank said, it's a quite a lightweight thing and provides lots of functions that really decided, or the plugins can call upon to make things happen.",
                    "label": 0
                },
                {
                    "sent": "Some of the things that go on here we have.",
                    "label": 0
                },
                {
                    "sent": "Registry, so we have.",
                    "label": 0
                },
                {
                    "sent": "We can semantically describe our plugins and what they do and then a decider can make decisions about which plugins it would actually like to use for a particular problem.",
                    "label": 0
                },
                {
                    "sent": "Then we have a support system which is really responsible for instantiating plugins or in the remote execution scenario it would be responsible for finding and attaching and connecting and that kind of thing and then all of this will run in either as modular components or as a platform and applications can interface to this to to make use of the functionality.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, so I'm going to quickly go through each of the plug-in types that we have just in slightly more detail.",
                    "label": 0
                },
                {
                    "sent": "First one was identified, the really the point of this thing is that when the whole reasoning procedure starts with trying to work out what data we're working with.",
                    "label": 0
                },
                {
                    "sent": "And the identify component will be.",
                    "label": 0
                },
                {
                    "sent": "Responsible for actually deciding what is going to be the input for reasoning.",
                    "label": 1
                },
                {
                    "sent": "So this information sets as we call them the sort of generic term for any data that goes into the lock system.",
                    "label": 0
                },
                {
                    "sent": "Could be pretty much anything, so it's a sparkle endpoints.",
                    "label": 0
                },
                {
                    "sent": "RDF documents, of course, are there, but the RDF could be in a file somewhere.",
                    "label": 0
                },
                {
                    "sent": "It could be a document on the web, it could be a name graph in a triple store, and so on.",
                    "label": 1
                },
                {
                    "sent": "Or indeed it could be a natural language document, so part of the transformation phase may be taking some textual document, running it through a clever processing and from that developing or generating triples.",
                    "label": 0
                },
                {
                    "sent": "Which describes some of the data in there.",
                    "label": 0
                },
                {
                    "sent": "So they essentially.",
                    "label": 0
                },
                {
                    "sent": "You certainly listing semantic search, but this is relevant right because?",
                    "label": 0
                },
                {
                    "sent": "You would do semantic search over natural language documents and these documents could be input to the floor.",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "OK, so they identify is given a query and then from that query it will workout what resource is it needs and that will return you a collection of information sets and these information sets could be a name graph or draw graph in memory or could be a name graph in a triple store and so on.",
                    "label": 1
                },
                {
                    "sent": "Or indeed a collection of natural language documents.",
                    "label": 0
                },
                {
                    "sent": "Some of the examples of things that we have at the moment.",
                    "label": 0
                },
                {
                    "sent": "We have this Tinder J plug in and that uses the syndicated web service which basically indexes RDF graphs that it finds on the web and so this is a very useful thing and you'll see later would do a little web.",
                    "label": 0
                },
                {
                    "sent": "Web sparkle Swingle of course is very similar to to send a J.",
                    "label": 0
                },
                {
                    "sent": "Something we haven't done yet, but it's entirely possible we could use Google, but we could use Google to find natural language documents and then run them through the trend of the clever transform, which which can extract RDF triples.",
                    "label": 0
                },
                {
                    "sent": "Or it could just be that the identifier was knows about a single triple store, and that's the one it uses an it will use the query to workout, which graphs it needs to answer.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Query.",
                    "label": 0
                },
                {
                    "sent": "Transformation there are two shortly after starting this you realize we have two kinds of Transformers.",
                    "label": 0
                },
                {
                    "sent": "Quite often the identify stage could be like senior change, for example may not really understand what a sparkle query is.",
                    "label": 0
                },
                {
                    "sent": "It may have nothing to do with sparkle, so we realized that we need to transform the original Sparkle query, which is kind of guiding the way the pipeline is constructed and runs.",
                    "label": 0
                },
                {
                    "sent": "Transform that query into some other form to give to some other service or plug in so that we could find the necessary resource is and send it as a good example where synergy has a number of different search forms, one of which is based on keywords.",
                    "label": 0
                },
                {
                    "sent": "So for example we would take the outside user, query would extract some keywords and then we would give those to the synergy web service and that would return URLs to RDF documents, which probably contain those terms.",
                    "label": 0
                },
                {
                    "sent": "Back into the real raw data processing though, once we've actually got those documents, I've got those triples, then we may need to transform for various reasons.",
                    "label": 0
                },
                {
                    "sent": "That could be that 'cause we've got natural language in an RDF out, or it could be that we have.",
                    "label": 0
                },
                {
                    "sent": "RDF triples for some formalism, let's say, so we have photology.",
                    "label": 0
                },
                {
                    "sent": "We need it in the Facebook vocabulary, and the transformer would do that transformation.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Afterwards, we have a lot of triples that need processing, and in order to take sensible subsets of that, the result of a size that the reason that can handle.",
                    "label": 0
                },
                {
                    "sent": "We have this selector stage and the selector stage will take a set of statements, which is our most abstract collection of RDF statements.",
                    "label": 1
                },
                {
                    "sent": "An return you another set of statements and usually a smaller one, although not always as we're seeing one of our hands-on scenarios.",
                    "label": 0
                },
                {
                    "sent": "Inside this box could be anything and we know some of the guys are working on these ideas from cognitive science, so using heuristics and smart ways to actually identify subsets of this.",
                    "label": 0
                },
                {
                    "sent": "And again, this is kind of we already introducing some kind of approximation in what we do here, because those subsets won't necessarily contain all the triples that would be required for the query.",
                    "label": 0
                },
                {
                    "sent": "We're already accepting some level of approximation.",
                    "label": 0
                },
                {
                    "sent": "The approximation doesn't only come because the reason is incomplete, so you could run a complete reasoner like Razor, but running on part of the data set.",
                    "label": 0
                },
                {
                    "sent": "So then the whole pipeline.",
                    "label": 0
                },
                {
                    "sent": "Is displays incomplete behavior even though the reason there is just a classical goldfish inside the complete reasoner in the incompleteness is between about incompleteness arises from the interaction between the selector and the reason.",
                    "label": 0
                },
                {
                    "sent": "Yeah, in an extreme case, we could just always do clever selection and just use some tiny reasoner to do the final part of the reasoning to final inference.",
                    "label": 0
                },
                {
                    "sent": "Question yes.",
                    "label": 0
                },
                {
                    "sent": "RDF, then is your lingua franca inside, yes.",
                    "label": 0
                },
                {
                    "sent": "At the beginning is identified.",
                    "label": 0
                },
                {
                    "sent": "Could still produce.",
                    "label": 0
                },
                {
                    "sent": "Natural language.",
                    "label": 0
                },
                {
                    "sent": "Documents we need to language from Demonics RDF with whatever you can encode in idea.",
                    "label": 0
                },
                {
                    "sent": "But it's a very deliberate design decision.",
                    "label": 0
                },
                {
                    "sent": "It's good to point out.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so moving along.",
                    "label": 0
                },
                {
                    "sent": "Typically after selection you would have a reason to plug in and this is where the inference is done an we decided that the reason that would be the one that would combine the input data, the user query and do the query answering with the necessary inference.",
                    "label": 0
                },
                {
                    "sent": "So what you get out of the reasoning stage depends what kind of query or asking.",
                    "label": 0
                },
                {
                    "sent": "So we have variable binding for select query sets of statements for describen construct and so on.",
                    "label": 0
                },
                {
                    "sent": "And the Boolean result for an ASK query.",
                    "label": 0
                },
                {
                    "sent": "We have we have quite a few of them at the moment.",
                    "label": 0
                },
                {
                    "sent": "This is just some of the ones that sort of just pure sparkle we can use just the Sparkle engine on triples with no reasoning at all.",
                    "label": 0
                },
                {
                    "sent": "That's the kind of almost the null case, or we can do inference with different kinds of rulesets, or kind of unusual one in the urban use case will actually the inference that we do is something that's not really to do with any sort of normal or well known inference stack.",
                    "label": 0
                },
                {
                    "sent": "Here we're using the generating shortest paths between points in a city.",
                    "label": 0
                },
                {
                    "sent": "Using other well established algorithms so this is.",
                    "label": 0
                },
                {
                    "sent": "This is a very special purpose, reasoner.",
                    "label": 0
                },
                {
                    "sent": "So it computes some shortest path algorithm and it doesn't do it by writing a description logic reason there over at how statins.",
                    "label": 0
                },
                {
                    "sent": "Or you could, but we painful, right?",
                    "label": 0
                },
                {
                    "sent": "But it's a very optimized reasoner inside the black box, which is this reasoner plug in.",
                    "label": 0
                },
                {
                    "sent": "And it still behaves to the outside world as if it does reasoning.",
                    "label": 0
                },
                {
                    "sent": "Because this part of query goes in about what's the shortest path between these two points and outcomes the result.",
                    "label": 0
                },
                {
                    "sent": "So this is another example of what you were asking about.",
                    "label": 0
                },
                {
                    "sent": "Why'd you choose such a open at Virginia?",
                    "label": 0
                },
                {
                    "sent": "Because it allows us to take even very specialized, very special purpose software and.",
                    "label": 0
                },
                {
                    "sent": "Plug it into this display.",
                    "label": 0
                },
                {
                    "sent": "OK, and the last example is psych reasoning systems, well established and very powerful reasoning system which is also wrapped up behind this interface.",
                    "label": 0
                },
                {
                    "sent": "Then in charge of all these things is the decider itself.",
                    "label": 0
                },
                {
                    "sent": "When the decider is almost like the first point of entry from the outside world and the decider.",
                    "label": 0
                },
                {
                    "sent": "That says Desai Dark ages potential.",
                    "label": 0
                },
                {
                    "sent": "There was no copying and pasting in this presentation I promise.",
                    "label": 0
                },
                {
                    "sent": "OK so from the deciders POV.",
                    "label": 0
                },
                {
                    "sent": "It sees a query and it also sees this quality of service parameters.",
                    "label": 0
                },
                {
                    "sent": "This is something else where investigating at the moment the user can give some parameters to guide how the query should be answered and what kind of results and quality results it can expect.",
                    "label": 0
                },
                {
                    "sent": "The decider will take this input, it will.",
                    "label": 0
                },
                {
                    "sent": "Interact with the platform.",
                    "label": 0
                },
                {
                    "sent": "It will create plugins, create pipelines, pass all the work onto the plugins.",
                    "label": 0
                },
                {
                    "sent": "Potentially do some meta reasoning about what's going on, or some some control of what's going on, and then ultimately the result from the reasonable come out as the results from the whole decider and these come back to the outside world.",
                    "label": 0
                },
                {
                    "sent": "The wild box had the wrong name.",
                    "label": 0
                },
                {
                    "sent": "The interface is correct.",
                    "label": 0
                },
                {
                    "sent": "Yes, yes, yes.",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "OK, and we have a few examples.",
                    "label": 0
                },
                {
                    "sent": "We have a meta reasoning, decide and we have.",
                    "label": 0
                },
                {
                    "sent": "Actually we're using Psych in this case to do meta reasoning about plugins so very powerful way of dynamically building pipelines and controlling them.",
                    "label": 0
                },
                {
                    "sent": "Or in the simple case we have a few examples of just scripted decider.",
                    "label": 0
                },
                {
                    "sent": "It's the thing that you say, oh, here are your plugins.",
                    "label": 0
                },
                {
                    "sent": "Just use those and that's it.",
                    "label": 0
                },
                {
                    "sent": "Yes, exactly in a purely linear way, so not not intelligent.",
                    "label": 0
                },
                {
                    "sent": "Web service.",
                    "label": 0
                },
                {
                    "sent": "Yeah, so yeah in the ultimate case you would take this work about web service composition and that would be that could be inside.",
                    "label": 0
                },
                {
                    "sent": "You could use that technology will decide.",
                    "label": 0
                },
                {
                    "sent": "Yeah, and the language I know if you talk about the annotation language.",
                    "label": 0
                },
                {
                    "sent": "Yeah I have a slide here so we're using web service, web service technology for describing our plugging your observations.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK. OK, so we wanted to have a way of.",
                    "label": 0
                },
                {
                    "sent": "Semantically, describing our plugins for this very reason and the what we decided to do, was use this format called Wizmo Light, and this is an extension of source tool SA Wisdom, semantically annotated wisdom and semantically annotated whistle is essentially wisdom, but with a few extra tags in there.",
                    "label": 0
                },
                {
                    "sent": "The most important one being this model reference tag and what that allows you to do that.",
                    "label": 0
                },
                {
                    "sent": "While the wisdom describes the purely syntax of your web service.",
                    "label": 0
                },
                {
                    "sent": "Then these model reference links can actually link items in the description, which could be the service itself, an operation or the messages that are passed for each operation and they can attach them to a name from an ontology.",
                    "label": 0
                },
                {
                    "sent": "OK, and then the so these these wizmo.",
                    "label": 0
                },
                {
                    "sent": "And sorry there's and there's a very lightweight ontology that goes with these with my light ontology which has this on the model of the services and also the foundations for the functional non functional parameters and so on.",
                    "label": 1
                },
                {
                    "sent": "And So what that allows decided to do is to ask for descriptions, or if it knows about a particular problem we need to solve, it can get the relevant descriptions and then use those to instantiate plugging components and build a pipeline.",
                    "label": 0
                },
                {
                    "sent": "So more or less the absolute minimum annotation that you would have to give her plugins to mention this type.",
                    "label": 0
                },
                {
                    "sent": "I don't think I'm identifying and that will be about it and then you can go all the way to describing nonfunctional properties.",
                    "label": 0
                },
                {
                    "sent": "But if you give me so many CPUs, I can do so much better job and whatever you want to describe.",
                    "label": 0
                },
                {
                    "sent": "But the minimum thing is you have to mention the type because it would need to be registered.",
                    "label": 0
                },
                {
                    "sent": "Input output types help as well.",
                    "label": 0
                },
                {
                    "sent": "We are looking into decided that potentially do exactly what this magical service system with doing service discovery, login, discovery, clothing composition, selection, but again, the platform is not conditional on getting so many web services to work right because it just goes on insider and you can just write the pipeline Java do XY set and then you also get a side which is the kind of thing we've done quite a lot.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, so an example of how this might be used to decide knows the problems to solve.",
                    "label": 0
                },
                {
                    "sent": "It would ask the plugin registry what kinds of things it needs.",
                    "label": 0
                },
                {
                    "sent": "The plug-in registry can then say yeah.",
                    "label": 1
                },
                {
                    "sent": "Well, here's some descriptions of plugins I know about which are relevant for what you want to do.",
                    "label": 0
                },
                {
                    "sent": "And then they decide it can ask the part of the platform to create the plugins that it needs and so.",
                    "label": 0
                },
                {
                    "sent": "In turn, the pipeline support system would create the query transformer identifier and all the rest of the plugins in the chain provide them in this nice plugin manager, which looks after threading and.",
                    "label": 1
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Communication issues.",
                    "label": 0
                },
                {
                    "sent": "For an example of how this pipeline might run and this again is just the simple linear example, let's assume that the decider has constructed a pipeline.",
                    "label": 0
                },
                {
                    "sent": "The plugin managers are wrapping them nicely.",
                    "label": 0
                },
                {
                    "sent": "This is all running on one machine.",
                    "label": 0
                },
                {
                    "sent": "This is all local.",
                    "label": 0
                },
                {
                    "sent": "The the support system will arrange everything so that we have all these queues in place, so the data will flow nicely between the plugins.",
                    "label": 0
                },
                {
                    "sent": "And what we have with control messages tend to flow backwards and the data itself flows forwards.",
                    "label": 0
                },
                {
                    "sent": "So we.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Happens when, so this is the local example.",
                    "label": 0
                },
                {
                    "sent": "The remote example.",
                    "label": 0
                },
                {
                    "sent": "We can do the same kind of thing, But in this case.",
                    "label": 0
                },
                {
                    "sent": "The we have a stub so the plugin managers on the local machine are stubs into plugins or executing remotely.",
                    "label": 0
                },
                {
                    "sent": "And so these can be joined together in more exotic ways.",
                    "label": 0
                },
                {
                    "sent": "So if possible with two plugins are running on the same machine far away, you don't want to come back to where the platform is running.",
                    "label": 0
                },
                {
                    "sent": "The data can simply pass between plugins and the data will move through the pipeline as shown.",
                    "label": 0
                },
                {
                    "sent": "Oops, Yep.",
                    "label": 0
                },
                {
                    "sent": "This picture is that the real work happens in the small boxes at the bottom right.",
                    "label": 0
                },
                {
                    "sent": "Is it sort of the plugins are.",
                    "label": 0
                },
                {
                    "sent": "That's where the analysis is done.",
                    "label": 0
                },
                {
                    "sent": "On, your reasoning is gone, or the face is spreading or whatever it is that you want to do and all this other stuff is infrastructure that is done for you by the platform.",
                    "label": 0
                },
                {
                    "sent": "So that's what it was.",
                    "label": 0
                },
                {
                    "sent": "One of these clauses, infrastructure heavy lifting has already been done, so making sure this communication is being set up, making sure that the communication between your local machine and the remote machine is being done, making sure that their their queues and buffers between these components and so on.",
                    "label": 0
                },
                {
                    "sent": "All these engineering that you would have to do.",
                    "label": 0
                },
                {
                    "sent": "Making sure that all of these extra genius components can interface with each other.",
                    "label": 0
                },
                {
                    "sent": "All of that is the infrastructure heavy lifting that bar does for you, and then the actual work happens in the books.",
                    "label": 0
                },
                {
                    "sent": "OK so yeah.",
                    "label": 0
                },
                {
                    "sent": "This is so for me.",
                    "label": 0
                },
                {
                    "sent": "It's more like good plugging is a function.",
                    "label": 0
                },
                {
                    "sent": "There's no state that it can be correct.",
                    "label": 0
                },
                {
                    "sent": "Yes, that is exactly right.",
                    "label": 0
                },
                {
                    "sent": "When you start getting random code is that plugins have slightly more complex interface that we showed you and every plugin when it's invoked its context, so everything is stable and you can pass context around.",
                    "label": 0
                },
                {
                    "sent": "So the workflow you can do the first iteration of the job and then you can find them in.",
                    "label": 0
                },
                {
                    "sent": "That's overloaded and go somewhere else tell us another instantiation of the same building through the 2nd iteration.",
                    "label": 0
                },
                {
                    "sent": "But a little bit more something that you said, but essentially your summary was correct.",
                    "label": 0
                },
                {
                    "sent": "Yes.",
                    "label": 0
                },
                {
                    "sent": "So far we're speaking about small and tiny plugins.",
                    "label": 0
                },
                {
                    "sent": "What's the upper bound of the complexity?",
                    "label": 0
                },
                {
                    "sent": "For example, player register or stubbing my platform?",
                    "label": 0
                },
                {
                    "sent": "Yes, so there.",
                    "label": 0
                },
                {
                    "sent": "There's not really an upper bound on how complex a plugin should bridge in this post.",
                    "label": 0
                },
                {
                    "sent": "Yeah, yes, yeah, OK. All is going to talk a little bit about that later on, I think.",
                    "label": 0
                },
                {
                    "sent": "OK, at least in terms of distributed processing and that kind of thing.",
                    "label": 0
                },
                {
                    "sent": "And then you would have to make sure that plug in either response quickly enough or that it produces 3 results.",
                    "label": 0
                },
                {
                    "sent": "Or if you're able to wait for a long time.",
                    "label": 0
                },
                {
                    "sent": "If it takes a long time.",
                    "label": 0
                },
                {
                    "sent": "But in principle applauding can be arbitrary, just in just trying to think or complex collaboration scenario right most complex.",
                    "label": 0
                },
                {
                    "sent": "Huge.",
                    "label": 0
                },
                {
                    "sent": "Yeah, it's completely valid.",
                    "label": 0
                },
                {
                    "sent": "Need the truck for example.",
                    "label": 0
                },
                {
                    "sent": "So we took the whole page pipelines and then wrapped it as a single transform.",
                    "label": 0
                },
                {
                    "sent": "So that's it.",
                    "label": 0
                },
                {
                    "sent": "That's the right this answer to your question.",
                    "label": 0
                },
                {
                    "sent": "Thank you, OK.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So I'm going to show you some pictorially.",
                    "label": 0
                },
                {
                    "sent": "Now sort of simple pipeline just to show the sequence of events.",
                    "label": 0
                },
                {
                    "sent": "Have you have a bit more understanding about how things move around the messages get passed around within a pipeline and the example is what we've been calling web sparkle where we just give it a query and then the platform goes off.",
                    "label": 0
                },
                {
                    "sent": "Looks for resource is find some on the web downloads among, combines them and then starts executing the query against the.",
                    "label": 0
                },
                {
                    "sent": "Yeah, the data it has.",
                    "label": 0
                },
                {
                    "sent": "The purpose of this really was just we wanted to flush out the API, which I think we've done, and we also wanted to explore anytime model.",
                    "label": 1
                },
                {
                    "sent": "So even in this simple case we wanted to start getting data through the pipeline as quickly as possible.",
                    "label": 0
                },
                {
                    "sent": "So if we have some documents downloaded, they would go through the pipeline and we got more stuff later on as the identifier worked, it would send more stuff through the pipeline and we get more and more results.",
                    "label": 0
                },
                {
                    "sent": "OK so here.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "For example, we have simple anytime decider in this case.",
                    "label": 1
                },
                {
                    "sent": "Given a sparkle query.",
                    "label": 0
                },
                {
                    "sent": "From this and in conjunction with these utilities from the platform, we construct the pipeline.",
                    "label": 0
                },
                {
                    "sent": "And the pipeline is linked together with the appropriate cues.",
                    "label": 0
                },
                {
                    "sent": "Each plugin has access to the original query and you can use this kind of meta information for what it does.",
                    "label": 0
                },
                {
                    "sent": "It can actually there's useful information in the outside user query if you like, which can guide each plugin as to how it will operate.",
                    "label": 0
                },
                {
                    "sent": "So this query here is in red.",
                    "label": 0
                },
                {
                    "sent": "And the query we start off by pushing the query.",
                    "label": 0
                },
                {
                    "sent": "There's the first element into the pipeline.",
                    "label": 0
                },
                {
                    "sent": "What happens now is that once you feel constructed and ready to go at the moment the data flows, so.",
                    "label": 0
                },
                {
                    "sent": "The next step is that they decided will ask the last element in the chain.",
                    "label": 0
                },
                {
                    "sent": "The last plug in, say, right?",
                    "label": 0
                },
                {
                    "sent": "I'm ready, give me some data please.",
                    "label": 0
                },
                {
                    "sent": "Answers yeah, sorry.",
                    "label": 0
                },
                {
                    "sent": "Better word so of course this won't have anything yet.",
                    "label": 0
                },
                {
                    "sent": "'cause the nothing is actually signed to flow through the pipeline, so these control messages start to go backwards.",
                    "label": 0
                },
                {
                    "sent": "The reason it will ask the selector, right?",
                    "label": 0
                },
                {
                    "sent": "I'm ready for data now.",
                    "label": 0
                },
                {
                    "sent": "The selector won't have any, so it lost the plug-in beforehand and in this case we have no Transformers.",
                    "label": 0
                },
                {
                    "sent": "This goes to the identifier.",
                    "label": 0
                },
                {
                    "sent": "Anne and this identify goes to the query.",
                    "label": 0
                },
                {
                    "sent": "Transformers say right give me a query with which I can use to do my identification.",
                    "label": 0
                },
                {
                    "sent": "So if we start from this and if you can read this, this is the input query.",
                    "label": 0
                },
                {
                    "sent": "This red dot here and this.",
                    "label": 0
                },
                {
                    "sent": "From here we can extract a number of triple patterns, which are the kind of things that the Cinder J web service likes so we can give it these triple patterns in it.",
                    "label": 0
                },
                {
                    "sent": "From those it can look up these indexes and find RDF documents which are appropriate for what we're trying to do here.",
                    "label": 0
                },
                {
                    "sent": "There's there's Clever's potential collaborators in here, right?",
                    "label": 0
                },
                {
                    "sent": "So, on the left you see his original query, which is sparkle for give me all people who focus noting Burns Lee.",
                    "label": 0
                },
                {
                    "sent": "And then you must transfer somehow.",
                    "label": 0
                },
                {
                    "sent": "Find a relevant pages in signature that contain that information and you could be as smart as long as you want in producing the right inside.",
                    "label": 0
                },
                {
                    "sent": "Because then you exploit or I don't exploit this margins of of symmetry, so there's knowledge involved in in doing this first query transformation.",
                    "label": 0
                },
                {
                    "sent": "This case is very simple.",
                    "label": 0
                },
                {
                    "sent": "You could be arbitrarily small.",
                    "label": 1
                },
                {
                    "sent": "OK, So what happens then is that the query transformer has some triple packing queries and it passes them on to the next.",
                    "label": 0
                },
                {
                    "sent": "Plug it in in the line and that is the identifier synergy, so it has.",
                    "label": 0
                },
                {
                    "sent": "It has a query and it uses this to query the website and get some results and what they gets back is it's a restful service.",
                    "label": 0
                },
                {
                    "sent": "You get a page of results which are embedded within our the URLs to RDF documents that it knows about on the web, some of which don't exist, some of which are not in the right format, and so on, but many of which are useful for this query.",
                    "label": 0
                },
                {
                    "sent": "So it takes the URLs, these documents, and from that we have basically a collection of our collections of RDF triples or graphs, and the graphs get passed on to the next plugin in the line, which is the case of growing data set selectors.",
                    "label": 0
                },
                {
                    "sent": "So this is actually a selector which.",
                    "label": 0
                },
                {
                    "sent": "Increases in size because of this example.",
                    "label": 0
                },
                {
                    "sent": "If we just take individual documents one at a time and do inference on them quite often, then we lose some inferences with the next iteration.",
                    "label": 0
                },
                {
                    "sent": "So where this selector is actually remembering what goes through it.",
                    "label": 0
                },
                {
                    "sent": "OK, so it starts off with no triples and we give it some and the entire bunch of triples is passed on to the reasoner and the reason that some inference calculates some results and we have some variable bindings come back to the decider which are then returned to the outside world.",
                    "label": 0
                },
                {
                    "sent": "This is 1 iteration of an anytime loop and if the decider then says right?",
                    "label": 0
                },
                {
                    "sent": "Well, this is not enough.",
                    "label": 0
                },
                {
                    "sent": "I need more data then ask again or say to the reasoner, please.",
                    "label": 0
                },
                {
                    "sent": "I need some more data.",
                    "label": 0
                },
                {
                    "sent": "This message will go back to the answers here.",
                    "label": 0
                },
                {
                    "sent": "I must stop saying that.",
                    "label": 0
                },
                {
                    "sent": "OK, so it needs more answers.",
                    "label": 0
                },
                {
                    "sent": "We don't have either good enough or enough answers so the message goes back.",
                    "label": 0
                },
                {
                    "sent": "More input requires an.",
                    "label": 0
                },
                {
                    "sent": "This goes back to the sender check, but in this case into Chase still working through its pages the way this interchange service works is it will give you results 10 at a time and you can iterate through the pages.",
                    "label": 0
                },
                {
                    "sent": "Of results, so the next time around this industry identify will have its second page and it will pass on the URLs that it finds in this page to the next plugin in line.",
                    "label": 0
                },
                {
                    "sent": "This will go to this data set selector.",
                    "label": 0
                },
                {
                    "sent": "The growing data set selector.",
                    "label": 1
                },
                {
                    "sent": "It will merge the results.",
                    "label": 0
                },
                {
                    "sent": "We have more triples.",
                    "label": 0
                },
                {
                    "sent": "We have more graphs and it will pass more information onto.",
                    "label": 0
                },
                {
                    "sent": "The reason are the reason why they execute.",
                    "label": 0
                },
                {
                    "sent": "Calculate some more infant inferences and more answers will then return back to the decider which are returned to the user.",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Yes.",
                    "label": 0
                },
                {
                    "sent": "Yes, moving approximately approximation by maybe taking a subset and then using the classical reasoner which produces some sort of approximation because it's not complete.",
                    "label": 0
                },
                {
                    "sent": "This is a great way of messages proving any fun behavior, because what we do is, rather than sitting around saying CJ OK, let's get all these big documents are getting 1000 triples occasion RDF graph using over the reducing one variable binding and say great, there's your answer.",
                    "label": 0
                },
                {
                    "sent": "Now.",
                    "label": 0
                },
                {
                    "sent": "What we do is we reason over 10 below 20 degrees North 30 that would be #40.",
                    "label": 0
                },
                {
                    "sent": "Of course.",
                    "label": 0
                },
                {
                    "sent": "Take the hint that we replicate a lot of reasoning.",
                    "label": 0
                },
                {
                    "sent": "You get an answer after 30 milliseconds.",
                    "label": 0
                },
                {
                    "sent": "Make another after 60 milliseconds and this means that problem waiting the full take 2 minutes.",
                    "label": 0
                },
                {
                    "sent": "It takes to reason over at graphs.",
                    "label": 0
                },
                {
                    "sent": "You get answers early and get us often.",
                    "label": 0
                },
                {
                    "sent": "And quite often, the delay in this case can very often be the remote web servers, so some of these documents take a minute to download, so.",
                    "label": 0
                },
                {
                    "sent": "We can compute and compute inferences on the documents that we get first and then add the slow ones on later.",
                    "label": 0
                },
                {
                    "sent": "OK, well I think.",
                    "label": 0
                },
                {
                    "sent": "That was the end of my architecture overview.",
                    "label": 0
                },
                {
                    "sent": "Do you have any other questions?",
                    "label": 0
                }
            ]
        }
    }
}