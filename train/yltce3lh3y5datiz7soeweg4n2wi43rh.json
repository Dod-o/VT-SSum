{
    "id": "yltce3lh3y5datiz7soeweg4n2wi43rh",
    "title": "Inverting the Viterbi Algorithm: an Abstract Framework for Structure Design",
    "info": {
        "author": [
            "Michael Schnall-Levin, Department of Mathematics and Computer Science and Artificial Intelligence Laboratory, Massachusetts Institute of Technology, MIT"
        ],
        "published": "Aug. 29, 2008",
        "recorded": "July 2008",
        "category": [
            "Top->Computer Science->Machine Learning"
        ]
    },
    "url": "http://videolectures.net/icml08_schnall_levin_iva/",
    "segmentation": [
        [
            "OK, so.",
            "Take I'm going to talk about some algorithmic work on a novel problem on hidden Markov models and stochastic context free grammars.",
            "Which my Co authors and I have titled Inverting the Turbo or algorithm and this is joint work with my advisor, Bonnie Berger at MIT and another one of her students begin to jendela."
        ],
        [
            "So it's a very simple review of what I'm sure everyone here knows, but to make sure the notation is clear.",
            "A hidden Markov model.",
            "You're going to have some finite number of states with emissions on the transitions of states between States and the model being specified by the probabilities of these emission transition pairs.",
            "And if you know stochastic context free grammar, similarly, you're going to have a set of non terminal symbols with rewriting rules.",
            "2 strings of terminals and nonterminals.",
            "Again, the model being specified by the probabilities of these rewriting rules.",
            "Our in generating an emission string from hidden Markov model, you're going to step through a path of this states.",
            "Annina stochastic context free grammar you're going to generate a derivation tree through the nonterminal symbols.",
            "And so when I refer to as the state path in this generation in the hidden Markov model, is the states that you pass through and the emission sequence the emission letters that you emitted, and analogously for the stochastic context free grammar, the derivation tree is going to consist of both the shape of the tree and the non terminal labels at the internal nodes.",
            "And again you're going to have the mission sequence."
        ],
        [
            "So.",
            "Um, frequently when people talk about 8, Ramzan CFG is they say that there are three sort of fundamental problems on these models.",
            "The first is the decoding problem, which is given a model and an observed emission sequence.",
            "Find the most likely explanation.",
            "Find the most likely state path or derivation tree, and this would be solved, for example by the Viterbi algorithm in Hmm's or the CKY algorithm in CFG.",
            "The second problem is evaluation problem, which is given a model in a sequence.",
            "Find the probability of that sequence having being having been admitted by the model and this could be solved by the forward backward algorithm or the inside outside algorithm.",
            "And the third problem is the learning problem which is given some set of sequence.",
            "Learn the parameters of a model to describe this sequence."
        ],
        [
            "So here we introduce a novel problem which is comes up naturally from a biological motivation, and which doesn't fall into any of these categories.",
            "So we just call this problem the design problem.",
            "Come across you.",
            "So this is given a model in a state path.",
            "Find a sequence that that state path would be optimal for this sequence.",
            "And this problem is an inverse to the decoding problem."
        ],
        [
            "So before I talk about the motivation for this problem, I'll give a concrete example just to make sure that the definition is clear.",
            "So if you consider the hmm shown, which consists of two states, capitals, AMB and a two letter admission alphabet, lowercase, AM V. An example of the decoding problem would be you observed, observed the sequence of lower case symbols and you're trying to find the most likely state path given those symbols which would be shown here.",
            "And in our problem, the design problem.",
            "You're given some path through the States and you're trying to find a sequence that that path is the optimal path for those for that emission.",
            "Now, in general, there's not going to be a unique answer of a sequence.",
            "In fact, it can be shown that only polynomially many state pass have some sequence for which that state path is optimal, and so for most day pass the answer will be there is no sequence that is an answer to the design problem, or that there will be exponentially many."
        ],
        [
            "So again, using this really simple hmm, you can make two observations about the problem.",
            "So now let's say that you want to design the path of consisting of staying in state Capital B and times.",
            "Then the turns out if you try and solve the design problem, the unique answer is the mission sequence of lower case B N -- 1 times.",
            "And this sequence is both the least likely sequence to be admitted, given that state path and has probability exponentially smaller being admitted.",
            "So you can make the observation that either picking likely admissions given this day path, or picking random missions given the state path in general are not going to be able to solve your problem."
        ],
        [
            "So Hmm's and SCF shoes have been used widely throughout biology and they've been used in labeling DNA sequences for demarketing gene regions for within these regions marking exons and introns, and for predicting where proteins will bind.",
            "They've been used for protein family classification.",
            "But most importantly for this, they've been used for a prediction of structure, and in particular prediction most relevant for our problem is the prediction of RNA secondary structure."
        ],
        [
            "OK, so here are two examples of RNA secondary structure.",
            "On the left is a very simple structure that hairpin loop, which is a component of many other structures and on the right is a real biological structure from a protozoan.",
            "Which is part of an RNA protein complex.",
            "And the secondary structure here is just the pattern of hydrogen bonds, or basepairs formed when the sequence folds on itself.",
            "And there are the Canonical pairs which everyone learns in highschool."
        ],
        [
            "Biology.",
            "So from this this sort of biological area, you can define 2 problems.",
            "To biological problems, the first is the secondary structure prediction problem, which is I give you some sequence and RNA sequence and you tell me how it's going to fold on itself.",
            "So if we take the sequence from the previous page as input, we should output that the structure it's going to take is a hairpin loop."
        ],
        [
            "So the current best methods for solving this problem is Zuckers algorithm, which uses an energy that is based on thermodynamic tables.",
            "For small components, such as the components shown here, like hairpin loops, multiple loops, etc.",
            "And it runs in order and to the third time runs the length of the sequence.",
            "Now, if you actually look at the independence, if you actually look at the form of zuckers energy model, it has the same structure as an SEFG and the minimum energy structure in zuckers energy model is equivalent to finding is equivalent to a high probability structure under and CFG model.",
            "So Zucker's algorithm is basically an equivalent to running CKY with them to solve the decoding problem."
        ],
        [
            "So in addition to the secondary structure prediction problem, you can define the inverse of this biological problem, which is the secondary structure design problem.",
            "So now you input some structure you want some base pairing you want, and you want to output a sequence so that that structure is taken by this sequence.",
            "So for example, if we input the hairpin loop one possible sequence.",
            "Would be the sequence from the previous page is taking this structure?"
        ],
        [
            "So why might you want to do this?",
            "Well, it's increasingly seen that RNA plays a functional role in the cell, and their examples of RNA, either alone or together, with proteins acting as enzymes in the cell and the function relies largely on the structure, so you could see, as you might be interested in designing molecules with specified functions.",
            "One the first step to that would be trying to design molecules to take on specific structures, perhaps along with additional constraints like sequence constraints."
        ],
        [
            "So again, just to kind of hammer this point home, the biological problem of secondary structure prediction under an energy model that looks like an SEFG is equivalent to the coding problem and the biological problem of designing a structure is equivalent to what we've called the design problem.",
            "So."
        ],
        [
            "Um?",
            "There have been some attempts to to solve the biological problem of design under the zuckers energy model, and they've been heuristics, although with pretty good success.",
            "Um?"
        ],
        [
            "But the reason are kind of motivation for stepping into a more.",
            "General approach looking at CFG is was to answer kind of a number of questions.",
            "The first was how hard is the design problem.",
            "So were these heuristics that were developed for this specific case the best that could be done, or are there exact polynomial time algorithms?",
            "Home.",
            "Along with that, you can look at energy models of different levels of complexity.",
            "So Zuckers model falls into a CFG like model, but perhaps you could look simply or simply to models that are more like Hmm's or more general models, and then even if heuristics are the best that can be done.",
            "Perhaps putting it into this general framework would allow for.",
            "Heuristics that are more easy to see based on just the general grammar model and not on the specifics of the energy model he's looking at."
        ],
        [
            "So the results are present today.",
            "I've described the problem I'm going to show a proof in general this problem is NP hard even on Hmm's and therefore an FGS which is kind of disappointing.",
            "But then I'm going to show a branch and bound algorithm which is a search strategy through this space to avoid searching through the entire space.",
            "And give some theoretical bounds if you make certain assumptions about the model for that algorithm, and I won't show it, but we also have an ILP formulation which could be the basis for trying to develop future algorithms."
        ],
        [
            "So at a very high level overview, the NP hardness proof.",
            "Is the following, so we have the design problem.",
            "We're going to introduce the corresponding decision problem, which is easier to solve in this design problem and then show that this decision problem is algorithmically harder than three set.",
            "And since three set is NP hard, then it will follow that the design problem is NP hard."
        ],
        [
            "So the original design problem is, given a state path, find a sequence that that state path is optimal.",
            "The corresponding decision problem, which is clearly easier, is given a state path.",
            "Is there a sequence that that state path is optimal for it?",
            "An so recall that three sets going to be a conjunction of EM clauses over and binary variables, with each clause having three literals either."
        ],
        [
            "Twitter indicated.",
            "So here is kind of a high level view of the reduction.",
            "You're going to have a hidden Markov model with a big in state, which can either go into your starts into a state S. And this state S is going to emit all binary strings of length.",
            "Of length N with probability 1/2 to the end, and then you're going to have a second component, which I'll show in more detail over the next couple of slides, which is going to emit non satisfying assignments to three set problem, and it's going to make these with probability 1/2 to the N -- 3.",
            "Where here N is the length of the end is the number of literals in your.",
            "Three set problem.",
            "And So what you can see is that the path B followed by staying in the state S N + 1 times is going to be desirable if and only if the three set problem is satisfiable, because if the three set problem is satisfiable, then there's some Boolean string which can't be emitted by the 2nd component and therefore that string will be an answer to the design problem.",
            "But on the other hand, if the three set problem is not satisfiable, then every string, every binary string, will be admitted by the 2nd component, and since it will be admitted with higher probability than it was.",
            "By staying in the state S, it's impossible to design the sequence for that status."
        ],
        [
            "So now the second component is going to admit all non satisfying assignments and you can form that by having chains each of which admits non satisfying assignments to one of the clauses in the three set problem."
        ],
        [
            "And then to set it to emit all non satisfying assignments to the clause in the three set problem you have a chain which is formed in the following way.",
            "If the Jason literal is in clause K, it emits a zero at that position.",
            "So it's something that won't satisfy that.",
            "The correct form for that variable.",
            "Similarly, if if DJ's literal is negated in that clause, it's going to emit A1, and if the JS literal is not in that cause, it's going to admit either zero or one, both with probability 1/2.",
            "And from this you see that this will only admit.",
            "Emission sequences that don't satisfy this cause, and because there are three literals in the clause, there were three times when it emitted something with probability one and gives the probability as I described it."
        ],
        [
            "So now I'm kind of just going to describe at a very high level of some of the algorithmic work we've done, so we have this branch and bound algorithm which could also be known as dead end elimination, which is a strategy through stepping through the search tree for sequences and cutting off entire branches of that search trees that you don't have to look at the subspace below that branch.",
            "And what we're going to do is step through sequences iteratively and build longer and longer prefixes till."
        ],
        [
            "Finally got the answer.",
            "So.",
            "At stage I, you're going to have a list of possible prefixes to answers to the design problem of length I.",
            "And you're going to form prefixes of length by plus one by appending possible symbols on to this, and then you're going to try and eliminate that prefix that you don't have to explore any string that begins with that prefix, and they're going to be 2 elimination rules.",
            "The first is does that Omega fail to satisfy the Viterbi constraints for the initial part of the path you want to design, and if it does, then you can get rid of it.",
            "And 2nd we were able to formulate a rule that specifies when is 1 prefix better than another.",
            "And here better means.",
            "Let's say that anytime Omega can be extended to an answer to the design problem, Omega Prime can be extended to an answer to the design problem.",
            "That means Omega Prime is always a better prefix and there's no reason to keep around a mega."
        ],
        [
            "So.",
            "Here's a kind of toy example of how this would work.",
            "Just illustrate the.",
            "Not exploring the whole search space.",
            "So at the first stage you might look at prefixes of length one, which would be zero and one.",
            "And let's say you don't make any eliminations.",
            "Now at the second stage, you would form all prefixes of length 2 from this and you might look and say, OK, let's say the prefix 01 doesn't satisfy the Viterbi constraints, so you remove that branch and the prefix 00 is better than 1 zero as we've formulated before.",
            "So you remove 10 branch.",
            "And then when you get to the third stage, you won't even explore those branches of the tree and you won't get the exponential blowup."
        ],
        [
            "So the algorithm as I've described it runs on all possible inputs, but under further assumptions of the hidden Markov model, you can also get a worst case running time bound.",
            "So if you assume in particular that all the log probabilities in the model are greater than minus B, so all the probabilities are greater than either the minus B and also that the log probabilities are only known to precision Delta, so you know your model is only specified to some number of decimal places.",
            "And then you get a running time which is shown here which is exponential in the number of states but linear in the length of the sequence.",
            "And so in in particular, if you have two state, HMM, this is an exact algorithm, they exponential part disappears.",
            "Yeah."
        ],
        [
            "So we also did some simulations of this algorithm on some synthetic data, so basically.",
            "What we did was we took Hmm's with some number of states here from between 3 and 100.",
            "And we generated random emission transition pairs from the uniform distribution.",
            "And then we randomly designed Passan, ran the algorithm too.",
            "We randomly picked state pass and ran the algorithm to try and design A sequence for that state path and recorded the running time averaging it over a number of runs and what you see here is that the running time in fact follows the linearity in the length of this state path.",
            "And you actually are not, at least for this class of atriums you're not getting the exponential blowup in the number of states that the worst case running time bound might predict, so it seems like that worst case running time bound is overly pessimistic in these cases."
        ],
        [
            "So.",
            "Just to conclude, we've introduced this novel problem on Hmm's in SC FGS, which I think is interesting.",
            "I'm sort of hoping people are going to maybe show better algorithms that we've come up with.",
            "We have some theoretical results to prove that the problem is NP hard.",
            "Some initial algorithmic results and the hardness proof actually has the implication that the biological problem of RNA secondary structure design is hard.",
            "Which was sort of an open question in a lot of these papers that developed this heuristic."
        ],
        [
            "So.",
            "So just want to acknowledge the people who fund us particularly Hurts Foundation an Michael Collins for reading the paper and.",
            "Lots of helpful advice and also Matthew Blanchette, Michael Bay, and Rome.",
            "While this rule, and Andrea Schultz for help.",
            "Thank you.",
            "Question.",
            "Yep.",
            "You Brayden, unsatisfying streaming presumably transition to choose a random pause, and then.",
            "Right?",
            "Don't you have a legal?",
            "So I mean, yeah, I didn't.",
            "I guess I didn't show that the in the kind of 'cause I was trying to keep it high level, but the big in state B is going to go either to S or teacher the clauses.",
            "Let's say there are M clauses going to all of them with probability 1 / N + 1, and so that's going to be kind of constant factor in any of those things.",
            "But you're holding back that.",
            "When there isn't a satisfying cause, the state S is a constant factor 8 spirit superior than.",
            "The.",
            "Pension to random closet domination game so."
        ],
        [
            "So what you're gonna do is you're going to have.",
            "Let's say there are M clauses you're going to go from B to S with probability 1, / N + 1, and to each of these clauses with probability 1, / N + 1 S. That way you avoid you have a constant, but it's in front of every possible chain that you could enter, so you're not going to have any different factors in front of them.",
            "You said you had another question too.",
            "Unsatisfied or?",
            "Right rule the rule that you tried.",
            "I thought flip flip all three.",
            "So if you look at three set that clauses are orders of the three literals.",
            "So to satisfy something to admit something which doesn't satisfy that closet has to not satisfy any any of the three.",
            "Anything else?"
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, so.",
                    "label": 0
                },
                {
                    "sent": "Take I'm going to talk about some algorithmic work on a novel problem on hidden Markov models and stochastic context free grammars.",
                    "label": 0
                },
                {
                    "sent": "Which my Co authors and I have titled Inverting the Turbo or algorithm and this is joint work with my advisor, Bonnie Berger at MIT and another one of her students begin to jendela.",
                    "label": 1
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So it's a very simple review of what I'm sure everyone here knows, but to make sure the notation is clear.",
                    "label": 0
                },
                {
                    "sent": "A hidden Markov model.",
                    "label": 0
                },
                {
                    "sent": "You're going to have some finite number of states with emissions on the transitions of states between States and the model being specified by the probabilities of these emission transition pairs.",
                    "label": 0
                },
                {
                    "sent": "And if you know stochastic context free grammar, similarly, you're going to have a set of non terminal symbols with rewriting rules.",
                    "label": 0
                },
                {
                    "sent": "2 strings of terminals and nonterminals.",
                    "label": 0
                },
                {
                    "sent": "Again, the model being specified by the probabilities of these rewriting rules.",
                    "label": 0
                },
                {
                    "sent": "Our in generating an emission string from hidden Markov model, you're going to step through a path of this states.",
                    "label": 0
                },
                {
                    "sent": "Annina stochastic context free grammar you're going to generate a derivation tree through the nonterminal symbols.",
                    "label": 0
                },
                {
                    "sent": "And so when I refer to as the state path in this generation in the hidden Markov model, is the states that you pass through and the emission sequence the emission letters that you emitted, and analogously for the stochastic context free grammar, the derivation tree is going to consist of both the shape of the tree and the non terminal labels at the internal nodes.",
                    "label": 1
                },
                {
                    "sent": "And again you're going to have the mission sequence.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "Um, frequently when people talk about 8, Ramzan CFG is they say that there are three sort of fundamental problems on these models.",
                    "label": 0
                },
                {
                    "sent": "The first is the decoding problem, which is given a model and an observed emission sequence.",
                    "label": 1
                },
                {
                    "sent": "Find the most likely explanation.",
                    "label": 1
                },
                {
                    "sent": "Find the most likely state path or derivation tree, and this would be solved, for example by the Viterbi algorithm in Hmm's or the CKY algorithm in CFG.",
                    "label": 0
                },
                {
                    "sent": "The second problem is evaluation problem, which is given a model in a sequence.",
                    "label": 0
                },
                {
                    "sent": "Find the probability of that sequence having being having been admitted by the model and this could be solved by the forward backward algorithm or the inside outside algorithm.",
                    "label": 1
                },
                {
                    "sent": "And the third problem is the learning problem which is given some set of sequence.",
                    "label": 0
                },
                {
                    "sent": "Learn the parameters of a model to describe this sequence.",
                    "label": 1
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So here we introduce a novel problem which is comes up naturally from a biological motivation, and which doesn't fall into any of these categories.",
                    "label": 0
                },
                {
                    "sent": "So we just call this problem the design problem.",
                    "label": 1
                },
                {
                    "sent": "Come across you.",
                    "label": 0
                },
                {
                    "sent": "So this is given a model in a state path.",
                    "label": 1
                },
                {
                    "sent": "Find a sequence that that state path would be optimal for this sequence.",
                    "label": 0
                },
                {
                    "sent": "And this problem is an inverse to the decoding problem.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So before I talk about the motivation for this problem, I'll give a concrete example just to make sure that the definition is clear.",
                    "label": 0
                },
                {
                    "sent": "So if you consider the hmm shown, which consists of two states, capitals, AMB and a two letter admission alphabet, lowercase, AM V. An example of the decoding problem would be you observed, observed the sequence of lower case symbols and you're trying to find the most likely state path given those symbols which would be shown here.",
                    "label": 0
                },
                {
                    "sent": "And in our problem, the design problem.",
                    "label": 1
                },
                {
                    "sent": "You're given some path through the States and you're trying to find a sequence that that path is the optimal path for those for that emission.",
                    "label": 0
                },
                {
                    "sent": "Now, in general, there's not going to be a unique answer of a sequence.",
                    "label": 0
                },
                {
                    "sent": "In fact, it can be shown that only polynomially many state pass have some sequence for which that state path is optimal, and so for most day pass the answer will be there is no sequence that is an answer to the design problem, or that there will be exponentially many.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So again, using this really simple hmm, you can make two observations about the problem.",
                    "label": 0
                },
                {
                    "sent": "So now let's say that you want to design the path of consisting of staying in state Capital B and times.",
                    "label": 0
                },
                {
                    "sent": "Then the turns out if you try and solve the design problem, the unique answer is the mission sequence of lower case B N -- 1 times.",
                    "label": 1
                },
                {
                    "sent": "And this sequence is both the least likely sequence to be admitted, given that state path and has probability exponentially smaller being admitted.",
                    "label": 1
                },
                {
                    "sent": "So you can make the observation that either picking likely admissions given this day path, or picking random missions given the state path in general are not going to be able to solve your problem.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So Hmm's and SCF shoes have been used widely throughout biology and they've been used in labeling DNA sequences for demarketing gene regions for within these regions marking exons and introns, and for predicting where proteins will bind.",
                    "label": 1
                },
                {
                    "sent": "They've been used for protein family classification.",
                    "label": 1
                },
                {
                    "sent": "But most importantly for this, they've been used for a prediction of structure, and in particular prediction most relevant for our problem is the prediction of RNA secondary structure.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, so here are two examples of RNA secondary structure.",
                    "label": 1
                },
                {
                    "sent": "On the left is a very simple structure that hairpin loop, which is a component of many other structures and on the right is a real biological structure from a protozoan.",
                    "label": 0
                },
                {
                    "sent": "Which is part of an RNA protein complex.",
                    "label": 0
                },
                {
                    "sent": "And the secondary structure here is just the pattern of hydrogen bonds, or basepairs formed when the sequence folds on itself.",
                    "label": 1
                },
                {
                    "sent": "And there are the Canonical pairs which everyone learns in highschool.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Biology.",
                    "label": 0
                },
                {
                    "sent": "So from this this sort of biological area, you can define 2 problems.",
                    "label": 0
                },
                {
                    "sent": "To biological problems, the first is the secondary structure prediction problem, which is I give you some sequence and RNA sequence and you tell me how it's going to fold on itself.",
                    "label": 1
                },
                {
                    "sent": "So if we take the sequence from the previous page as input, we should output that the structure it's going to take is a hairpin loop.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So the current best methods for solving this problem is Zuckers algorithm, which uses an energy that is based on thermodynamic tables.",
                    "label": 0
                },
                {
                    "sent": "For small components, such as the components shown here, like hairpin loops, multiple loops, etc.",
                    "label": 1
                },
                {
                    "sent": "And it runs in order and to the third time runs the length of the sequence.",
                    "label": 0
                },
                {
                    "sent": "Now, if you actually look at the independence, if you actually look at the form of zuckers energy model, it has the same structure as an SEFG and the minimum energy structure in zuckers energy model is equivalent to finding is equivalent to a high probability structure under and CFG model.",
                    "label": 1
                },
                {
                    "sent": "So Zucker's algorithm is basically an equivalent to running CKY with them to solve the decoding problem.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So in addition to the secondary structure prediction problem, you can define the inverse of this biological problem, which is the secondary structure design problem.",
                    "label": 1
                },
                {
                    "sent": "So now you input some structure you want some base pairing you want, and you want to output a sequence so that that structure is taken by this sequence.",
                    "label": 0
                },
                {
                    "sent": "So for example, if we input the hairpin loop one possible sequence.",
                    "label": 0
                },
                {
                    "sent": "Would be the sequence from the previous page is taking this structure?",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So why might you want to do this?",
                    "label": 0
                },
                {
                    "sent": "Well, it's increasingly seen that RNA plays a functional role in the cell, and their examples of RNA, either alone or together, with proteins acting as enzymes in the cell and the function relies largely on the structure, so you could see, as you might be interested in designing molecules with specified functions.",
                    "label": 1
                },
                {
                    "sent": "One the first step to that would be trying to design molecules to take on specific structures, perhaps along with additional constraints like sequence constraints.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So again, just to kind of hammer this point home, the biological problem of secondary structure prediction under an energy model that looks like an SEFG is equivalent to the coding problem and the biological problem of designing a structure is equivalent to what we've called the design problem.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Um?",
                    "label": 0
                },
                {
                    "sent": "There have been some attempts to to solve the biological problem of design under the zuckers energy model, and they've been heuristics, although with pretty good success.",
                    "label": 0
                },
                {
                    "sent": "Um?",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "But the reason are kind of motivation for stepping into a more.",
                    "label": 0
                },
                {
                    "sent": "General approach looking at CFG is was to answer kind of a number of questions.",
                    "label": 0
                },
                {
                    "sent": "The first was how hard is the design problem.",
                    "label": 1
                },
                {
                    "sent": "So were these heuristics that were developed for this specific case the best that could be done, or are there exact polynomial time algorithms?",
                    "label": 0
                },
                {
                    "sent": "Home.",
                    "label": 0
                },
                {
                    "sent": "Along with that, you can look at energy models of different levels of complexity.",
                    "label": 1
                },
                {
                    "sent": "So Zuckers model falls into a CFG like model, but perhaps you could look simply or simply to models that are more like Hmm's or more general models, and then even if heuristics are the best that can be done.",
                    "label": 1
                },
                {
                    "sent": "Perhaps putting it into this general framework would allow for.",
                    "label": 0
                },
                {
                    "sent": "Heuristics that are more easy to see based on just the general grammar model and not on the specifics of the energy model he's looking at.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So the results are present today.",
                    "label": 0
                },
                {
                    "sent": "I've described the problem I'm going to show a proof in general this problem is NP hard even on Hmm's and therefore an FGS which is kind of disappointing.",
                    "label": 1
                },
                {
                    "sent": "But then I'm going to show a branch and bound algorithm which is a search strategy through this space to avoid searching through the entire space.",
                    "label": 0
                },
                {
                    "sent": "And give some theoretical bounds if you make certain assumptions about the model for that algorithm, and I won't show it, but we also have an ILP formulation which could be the basis for trying to develop future algorithms.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So at a very high level overview, the NP hardness proof.",
                    "label": 0
                },
                {
                    "sent": "Is the following, so we have the design problem.",
                    "label": 1
                },
                {
                    "sent": "We're going to introduce the corresponding decision problem, which is easier to solve in this design problem and then show that this decision problem is algorithmically harder than three set.",
                    "label": 1
                },
                {
                    "sent": "And since three set is NP hard, then it will follow that the design problem is NP hard.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So the original design problem is, given a state path, find a sequence that that state path is optimal.",
                    "label": 0
                },
                {
                    "sent": "The corresponding decision problem, which is clearly easier, is given a state path.",
                    "label": 0
                },
                {
                    "sent": "Is there a sequence that that state path is optimal for it?",
                    "label": 1
                },
                {
                    "sent": "An so recall that three sets going to be a conjunction of EM clauses over and binary variables, with each clause having three literals either.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Twitter indicated.",
                    "label": 0
                },
                {
                    "sent": "So here is kind of a high level view of the reduction.",
                    "label": 0
                },
                {
                    "sent": "You're going to have a hidden Markov model with a big in state, which can either go into your starts into a state S. And this state S is going to emit all binary strings of length.",
                    "label": 0
                },
                {
                    "sent": "Of length N with probability 1/2 to the end, and then you're going to have a second component, which I'll show in more detail over the next couple of slides, which is going to emit non satisfying assignments to three set problem, and it's going to make these with probability 1/2 to the N -- 3.",
                    "label": 0
                },
                {
                    "sent": "Where here N is the length of the end is the number of literals in your.",
                    "label": 0
                },
                {
                    "sent": "Three set problem.",
                    "label": 0
                },
                {
                    "sent": "And So what you can see is that the path B followed by staying in the state S N + 1 times is going to be desirable if and only if the three set problem is satisfiable, because if the three set problem is satisfiable, then there's some Boolean string which can't be emitted by the 2nd component and therefore that string will be an answer to the design problem.",
                    "label": 0
                },
                {
                    "sent": "But on the other hand, if the three set problem is not satisfiable, then every string, every binary string, will be admitted by the 2nd component, and since it will be admitted with higher probability than it was.",
                    "label": 0
                },
                {
                    "sent": "By staying in the state S, it's impossible to design the sequence for that status.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So now the second component is going to admit all non satisfying assignments and you can form that by having chains each of which admits non satisfying assignments to one of the clauses in the three set problem.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And then to set it to emit all non satisfying assignments to the clause in the three set problem you have a chain which is formed in the following way.",
                    "label": 0
                },
                {
                    "sent": "If the Jason literal is in clause K, it emits a zero at that position.",
                    "label": 1
                },
                {
                    "sent": "So it's something that won't satisfy that.",
                    "label": 0
                },
                {
                    "sent": "The correct form for that variable.",
                    "label": 0
                },
                {
                    "sent": "Similarly, if if DJ's literal is negated in that clause, it's going to emit A1, and if the JS literal is not in that cause, it's going to admit either zero or one, both with probability 1/2.",
                    "label": 0
                },
                {
                    "sent": "And from this you see that this will only admit.",
                    "label": 0
                },
                {
                    "sent": "Emission sequences that don't satisfy this cause, and because there are three literals in the clause, there were three times when it emitted something with probability one and gives the probability as I described it.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So now I'm kind of just going to describe at a very high level of some of the algorithmic work we've done, so we have this branch and bound algorithm which could also be known as dead end elimination, which is a strategy through stepping through the search tree for sequences and cutting off entire branches of that search trees that you don't have to look at the subspace below that branch.",
                    "label": 0
                },
                {
                    "sent": "And what we're going to do is step through sequences iteratively and build longer and longer prefixes till.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Finally got the answer.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "At stage I, you're going to have a list of possible prefixes to answers to the design problem of length I.",
                    "label": 1
                },
                {
                    "sent": "And you're going to form prefixes of length by plus one by appending possible symbols on to this, and then you're going to try and eliminate that prefix that you don't have to explore any string that begins with that prefix, and they're going to be 2 elimination rules.",
                    "label": 0
                },
                {
                    "sent": "The first is does that Omega fail to satisfy the Viterbi constraints for the initial part of the path you want to design, and if it does, then you can get rid of it.",
                    "label": 0
                },
                {
                    "sent": "And 2nd we were able to formulate a rule that specifies when is 1 prefix better than another.",
                    "label": 0
                },
                {
                    "sent": "And here better means.",
                    "label": 0
                },
                {
                    "sent": "Let's say that anytime Omega can be extended to an answer to the design problem, Omega Prime can be extended to an answer to the design problem.",
                    "label": 0
                },
                {
                    "sent": "That means Omega Prime is always a better prefix and there's no reason to keep around a mega.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "Here's a kind of toy example of how this would work.",
                    "label": 0
                },
                {
                    "sent": "Just illustrate the.",
                    "label": 0
                },
                {
                    "sent": "Not exploring the whole search space.",
                    "label": 0
                },
                {
                    "sent": "So at the first stage you might look at prefixes of length one, which would be zero and one.",
                    "label": 0
                },
                {
                    "sent": "And let's say you don't make any eliminations.",
                    "label": 0
                },
                {
                    "sent": "Now at the second stage, you would form all prefixes of length 2 from this and you might look and say, OK, let's say the prefix 01 doesn't satisfy the Viterbi constraints, so you remove that branch and the prefix 00 is better than 1 zero as we've formulated before.",
                    "label": 1
                },
                {
                    "sent": "So you remove 10 branch.",
                    "label": 0
                },
                {
                    "sent": "And then when you get to the third stage, you won't even explore those branches of the tree and you won't get the exponential blowup.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So the algorithm as I've described it runs on all possible inputs, but under further assumptions of the hidden Markov model, you can also get a worst case running time bound.",
                    "label": 1
                },
                {
                    "sent": "So if you assume in particular that all the log probabilities in the model are greater than minus B, so all the probabilities are greater than either the minus B and also that the log probabilities are only known to precision Delta, so you know your model is only specified to some number of decimal places.",
                    "label": 0
                },
                {
                    "sent": "And then you get a running time which is shown here which is exponential in the number of states but linear in the length of the sequence.",
                    "label": 1
                },
                {
                    "sent": "And so in in particular, if you have two state, HMM, this is an exact algorithm, they exponential part disappears.",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So we also did some simulations of this algorithm on some synthetic data, so basically.",
                    "label": 0
                },
                {
                    "sent": "What we did was we took Hmm's with some number of states here from between 3 and 100.",
                    "label": 1
                },
                {
                    "sent": "And we generated random emission transition pairs from the uniform distribution.",
                    "label": 0
                },
                {
                    "sent": "And then we randomly designed Passan, ran the algorithm too.",
                    "label": 0
                },
                {
                    "sent": "We randomly picked state pass and ran the algorithm to try and design A sequence for that state path and recorded the running time averaging it over a number of runs and what you see here is that the running time in fact follows the linearity in the length of this state path.",
                    "label": 0
                },
                {
                    "sent": "And you actually are not, at least for this class of atriums you're not getting the exponential blowup in the number of states that the worst case running time bound might predict, so it seems like that worst case running time bound is overly pessimistic in these cases.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "Just to conclude, we've introduced this novel problem on Hmm's in SC FGS, which I think is interesting.",
                    "label": 1
                },
                {
                    "sent": "I'm sort of hoping people are going to maybe show better algorithms that we've come up with.",
                    "label": 0
                },
                {
                    "sent": "We have some theoretical results to prove that the problem is NP hard.",
                    "label": 0
                },
                {
                    "sent": "Some initial algorithmic results and the hardness proof actually has the implication that the biological problem of RNA secondary structure design is hard.",
                    "label": 1
                },
                {
                    "sent": "Which was sort of an open question in a lot of these papers that developed this heuristic.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "So just want to acknowledge the people who fund us particularly Hurts Foundation an Michael Collins for reading the paper and.",
                    "label": 1
                },
                {
                    "sent": "Lots of helpful advice and also Matthew Blanchette, Michael Bay, and Rome.",
                    "label": 0
                },
                {
                    "sent": "While this rule, and Andrea Schultz for help.",
                    "label": 0
                },
                {
                    "sent": "Thank you.",
                    "label": 0
                },
                {
                    "sent": "Question.",
                    "label": 0
                },
                {
                    "sent": "Yep.",
                    "label": 0
                },
                {
                    "sent": "You Brayden, unsatisfying streaming presumably transition to choose a random pause, and then.",
                    "label": 0
                },
                {
                    "sent": "Right?",
                    "label": 0
                },
                {
                    "sent": "Don't you have a legal?",
                    "label": 0
                },
                {
                    "sent": "So I mean, yeah, I didn't.",
                    "label": 0
                },
                {
                    "sent": "I guess I didn't show that the in the kind of 'cause I was trying to keep it high level, but the big in state B is going to go either to S or teacher the clauses.",
                    "label": 0
                },
                {
                    "sent": "Let's say there are M clauses going to all of them with probability 1 / N + 1, and so that's going to be kind of constant factor in any of those things.",
                    "label": 0
                },
                {
                    "sent": "But you're holding back that.",
                    "label": 0
                },
                {
                    "sent": "When there isn't a satisfying cause, the state S is a constant factor 8 spirit superior than.",
                    "label": 0
                },
                {
                    "sent": "The.",
                    "label": 0
                },
                {
                    "sent": "Pension to random closet domination game so.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So what you're gonna do is you're going to have.",
                    "label": 0
                },
                {
                    "sent": "Let's say there are M clauses you're going to go from B to S with probability 1, / N + 1, and to each of these clauses with probability 1, / N + 1 S. That way you avoid you have a constant, but it's in front of every possible chain that you could enter, so you're not going to have any different factors in front of them.",
                    "label": 0
                },
                {
                    "sent": "You said you had another question too.",
                    "label": 0
                },
                {
                    "sent": "Unsatisfied or?",
                    "label": 0
                },
                {
                    "sent": "Right rule the rule that you tried.",
                    "label": 0
                },
                {
                    "sent": "I thought flip flip all three.",
                    "label": 0
                },
                {
                    "sent": "So if you look at three set that clauses are orders of the three literals.",
                    "label": 0
                },
                {
                    "sent": "So to satisfy something to admit something which doesn't satisfy that closet has to not satisfy any any of the three.",
                    "label": 0
                },
                {
                    "sent": "Anything else?",
                    "label": 0
                }
            ]
        }
    }
}