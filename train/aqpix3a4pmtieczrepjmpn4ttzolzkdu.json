{
    "id": "aqpix3a4pmtieczrepjmpn4ttzolzkdu",
    "title": "Anytime Query Answering in RDF through Evolutionary Algorithms",
    "info": {
        "author": [
            "Eyal Oren, Department of Computer Science, Faculty of Sciences, Vrije Universiteit Amsterdam (VU)"
        ],
        "published": "Nov. 24, 2008",
        "recorded": "October 2008",
        "category": [
            "Top->Computer Science->Semantic Web->RDF - Resource Description Framework"
        ]
    },
    "url": "http://videolectures.net/iswc08_oren_aqa/",
    "segmentation": [
        [
            "OK.",
            "I'm using all kinds of other peoples equipment, so this thanks for boring everything.",
            "My name is yellow and an I will present work done in Amsterdam with Kristoff and Steven on an evolutionary technique for doing query answering in RDF.",
            "I have to say in advance that this paper is a little bit strange.",
            "Because if you think about it, I will explain in a second what we actually do and what does it mean to do evolutionary.",
            "Computing over query answering.",
            "It's a bit strange.",
            "It's a strange setting compared to the database setting that we have seen before, but I will explain why we think this is an interesting."
        ],
        [
            "Idea to investigate.",
            "So what we want to do is what we have seen.",
            "For example in the previous paper query answering over RDF graphs.",
            "Which means finding assignments to the variables such that the graph.",
            "And tells the query.",
            "Graph when you substitute these assignments.",
            "OK, I'm we're focusing just about in.",
            "We're talking about sparkle queries and I'm just talking about the where clauses.",
            "So these are not really sparkle queries in the sense that it's just a conjunctive.",
            "Clauses and the things we want to achieve is, first of all we are interested in getting approximate answers to the queries.",
            "An approximate meaning ranked.",
            "Ranked according to their approximation of the correct result.",
            "And why do we think this is interesting?",
            "Because if you look at very large datasets, for example web scale data or web search.",
            "Ranking is very often considered much more important in completeness, so if your data if your answer is, let's say, 3 million.",
            "Assignments.",
            "In many scenarios, getting the first 10 or the 1st 20.",
            "Right is much more important than getting the full 3 million answers, because if the answer set is too large to comprehend, it's not that interesting to get the full answer.",
            "So the problem becomes a problem of ranking.",
            "And so you're doing approximate answers where you rank how good your approximation is.",
            "Also, in the light that data might be inconsistent internally and the query may actually not be satisfiable.",
            "Becausw for example, the data is too large, so when you're writing the query you don't see that the query is unsatisfiable.",
            "OK, so this is first.",
            "Secondly, we want to have any time answers and anytime, meaning that the answers improve overtime and I can stop the algorithm at any point in time and get an answer.",
            "And if I wait a bit longer I get a better answer.",
            "Why is this interesting?",
            "Because I can tune the effort I want to spend waiting versus the benefit I get from the answer.",
            "So if you want very good answers, you have to wait.",
            "If you want bad answers.",
            "If you can afford bad answers, you can afford a very short query time.",
            "Again, this is a way to deal with very large datasets.",
            "So for doing these, anytime answers you need to have a notion of quality of course, because your answer should improve overtime.",
            "It doesn't help to wait if the later answers are worse than the previous answers.",
            "And finally we want to be able to parallelize computation because in many settings people start to realize that is RDF graphs are getting larger and larger and larger.",
            "For example, in a billion triple challenge we will see this afternoon and tomorrow that people one way to deal with this very large scale is parallelization is a very obvious way if you look for example at search engines again.",
            "So you want to be able to scale your computation by adding nodes.",
            "So this means your algorithm needs to be parallelizable.",
            "OK, So what we do here is an evolutionary approach and very simply said we do it the following way.",
            "So we take the query.",
            "The query contains a number of variables and these variables need to be bound.",
            "To some value that actually satisfies the query.",
            "So we will just guess an assignment to this query.",
            "We take each variable and we just guess an assignment to this variable.",
            "Then we verified this assignment on the graph on the original data graph.",
            "So we see how good was our guess does it actually satisfy the query?",
            "And if not?",
            "We guess again.",
            "But we improve the guessing.",
            "So we make a better assignment and we go back.",
            "This is the basic loop.",
            "We guess we try we improve.",
            "We guess we try we improve.",
            "OK, so this relies on a couple of things.",
            "First of all we need to have a way of guessing.",
            "Secondly we need to have a way of verifying.",
            "And Thirdly we need to have a way of improving."
        ],
        [
            "So a very basic example which I will use in the rest of the presentation.",
            "We have a some DLP data.",
            "OK, this is a made up data, but you can.",
            "It's a old man book with some label and it was written by women and we have a home page for example.",
            "OK, then we have a sparkle query.",
            "Selecting or finding on books basically and their titles.",
            "As I expected, answer his.",
            "One binding for title, namely Principles of Database system.",
            "So this projection to only select the title.",
            "This we ignore for a second, we basically have to find here to variable assignment, publication and title.",
            "OK."
        ],
        [
            "So the traditional approach as we have seen in previous talk clearly in a database style.",
            "OK, so abstracting for a second from all the indices you can put on the data.",
            "You basically you solve the one clause.",
            "So you find all publications that are of type book.",
            "In this case we have two on 188 and 189.",
            "Secondly, we solve.",
            "The second clause, finding all publications and their titles.",
            "In this case we have only one publication in there which actually has a title, so we get one result and we join.",
            "And these two results and we project out the variables that we're interested in.",
            "OK, and as we have seen these joints you can do in various ways, but you could for example use this nested loop nested loops.",
            "So for solving a clause, you need to iterate over all the records.",
            "To find those that satisfy the constraints, you don't have to iterate over all of them, of course, but.",
            "Generally and then to do the join you can, for example do a nested loop, or if you're lucky you can do an optimization.",
            "So this is traditionally."
        ],
        [
            "So what we do?",
            "Is quite different.",
            "We take as I said, the variables from the query.",
            "Publication and title and we assign some value to them from the domain.",
            "OK so I will get back to the question of what is the domain but we assign some value to them.",
            "So in this case we guess publication we're looking for woman 88 and the title we are looking for something Oprah's book.",
            "OK, so you can of course clearly see that this is the wrong assignment because the title cannot be a book.",
            "If you think about it because titles are usually literal properties, but this is something we don't know, we just guess, so we verified the solution.",
            "So we feel we substitute the assignments into the original clause and we check whether then this triple is in the graph.",
            "So woman is indeed a book.",
            "So this clause is correct.",
            "And book is not a label for women, so the second clause is wrong.",
            "So this solution is somewhat OK and somewhat wrong.",
            "And now we can discuss about how we determine this level of correctness.",
            "How good is this answer?",
            "But in this case, we try again because the answer is not.",
            "It's not completely correct yet.",
            "So as you see, and we look, so we will keep.",
            "We will keep the first assignment, for example and change the second assignment and then try again.",
            "So I see this loop we're looping in.",
            "This loop can stop at anytime.",
            "A result can satisfy your part of the query.",
            "So as you see here, we satisfy the first clause but not the second clause.",
            "So the query is partially satisfied.",
            "OK, the question is, is this a?",
            "Is this a partial satisfaction that you're happy with, or are you more interested in solving the second clause?",
            "So this is a question of how do we determine the quality of the result?",
            "But the loop can be stopped.",
            "A result may satisfy part of the query.",
            "And very importantly, we do membership testing.",
            "So we know we have results here.",
            "The only question is whether they are in the graph.",
            "So for each of these verification, we just do a membership test to see if this in the graph or not.",
            "And OK, in reality we use the dictionary encoding.",
            "So in the rest of the talk I just again like in the previous talk give you the full you right and so on.",
            "But of course in reality we use a dictionary encoding.",
            "OK."
        ],
        [
            "We need two things.",
            "As I said in the beginning.",
            "On the one we need a good way to evolve these solutions along the way, so the answers need to get better.",
            "The results need to get better with each iteration iteration.",
            "So what we use is an evolutionary algorithm and I will show in the second what it means.",
            "Secondly, we need a fast way to verify whether.",
            "A particular clause is in the graph or not.",
            "And because we will do many iterations, we will try a lot of these clauses.",
            "So these verifications should be very fast and should not of course require to iterate over the whole graph.",
            "This would, I mean, this would nullify the whole approach if I've to check a clause would have to go to the graph again.",
            "This would be counter to the whole setup.",
            "So what we use there are Bloom filters which allow us to very quickly see whether something is in the graph or not.",
            "And I will also show them in a second."
        ],
        [
            "So what is an evolutionary algorithm?",
            "These are families of algorithms and we pick a particular setting and you can read more about the setting in the paper which are inspired by natural evolution.",
            "So basically you initialize a population of individuals.",
            "Individuals are some.",
            "Encoding of information.",
            "So I will show you our individuals.",
            "In a second you have a population.",
            "From this population you select some parents.",
            "For example, those in the population that are best, so they have the highest fitness.",
            "And these parents you let them re come recombination and mutation to generate offspring.",
            "So mutation means you take part of the parent.",
            "So apparent is each individual is encoded as a as a chromosome of genes.",
            "So each gene conferred, for example, be a variable assignment in our situation and mutation just means you take 1 gene.",
            "On margins and you mutate this gene locally, so you change it for a different value.",
            "Recombination means you take 2 parents and you combine them, for example by taking half of the chromosome from the one and half of the chromosome from the other and plugging them together.",
            "This is one way of doing recommendation, and so by recombination and mutation you generate new individuals.",
            "So you have offspring.",
            "And from this offspring and the original parents, you somehow select the survivors.",
            "For example, again on the fitness of the survivors.",
            "So you keep those children that are fitter than their parents, for example.",
            "And if you look and you look until you reach some termination condition.",
            "And you have to be careful that you don't optimize too quickly into those individuals with a high fitness, because you will get stuck in a local optimum.",
            "So you need to keep let's say also the bad performing individuals in to keep the variation high.",
            "Otherwise you will get stuck.",
            "But this is the basic idea.",
            "And so the details of what we actually."
        ],
        [
            "Data will show a bit in the rest, but you can read in the paper.",
            "OK, so now about Bloom filters.",
            "Bloom filters are a compact way to represent the set and to allow you to verify membership of this set.",
            "So there are an array of bits.",
            "In this example, 8 bits.",
            "And you can do two things on on the Bloom filter.",
            "You can insert a key and you can check for containment on freaky.",
            "So if you insert the key, you use a number of hash functions.",
            "And this number is variable.",
            "So say again 3 hash functions in this example.",
            "And we hash the item we want to insert.",
            "We hash with these different hash functions an from each hash function we get 1 hash value, and this hash value we use as an index into the bit array.",
            "So in this example we want to insert Hello World.",
            "So I do the first hash, I get 8, so the integer 8.",
            "So I set the 8 bit to true.",
            "I take the second hash function in the third hash function, I set the corresponding bits to true.",
            "So now those bits have been set and I've inserted the helloworld item.",
            "So you can increase the number of bits in the array.",
            "Obviously you can increase the numbers hash functions that you used to encode each item, so."
        ],
        [
            "If you insert Hello World on an existing filter, you do a bitwise or.",
            "So if I have a current filter with two bit set as you see in this top and then I insert Hello World.",
            "I want to set these other 3 bits so I do a bitwise or and I have this new Bloom filter.",
            "Which has now 3 bit set in total.",
            "And.",
            "Then if I want to change to check containment, I do exactly the same operation, except I use an end.",
            "So I see if those bits have been set already.",
            "So I take for example my filter which now contains 3.",
            "Bits which are set and I check a new item called Bonjour.",
            "So Bonjour again I do 3 hash.",
            "Values of Bonjour I index the bit and I see if all those bits have been set.",
            "In this case, not all these bits have been set, so obviously Bonjour has not been inserted before, so control is not in the set.",
            "So as you can see, you can get collisions here.",
            "Be cause if all the hash values of my new item collide with some hash values of another item or just some bits have been set before I get a collision.",
            "So I will think that this item is inserted while it is not because it's just somebody elses bits that have been set here and this collision rate you can calculate exactly what it is given the number of bits you have, the number of hash.",
            "Functions you use Anna number of items you actually inserted.",
            "So you know your error rate and the error rate is only on the positive errors.",
            "So if the item is not in, you know for sure it's not in because these bits have not been set, so this item cannot have been inserted, because otherwise the bits would have been set, but a positive false positive as possible because somebody else could have set those bits.",
            "OK, nothing to see here is that this is a a very compact way to represent your data, because you will need a bit array of some size and Bitzer varies.",
            "Smaller thing and it's very fast because you're just doing bitwise computations, so bitwise or and bitwise and and.",
            "These are very fast."
        ],
        [
            "OK, so now how do we?",
            "What do we do with our graph and our query?",
            "So basically we we parse the graph when we index the graph.",
            "We parse the graph and we fill the Bloom filter so we have in the basic setting I will show you some optimization.",
            "In basic setting we have one big filter called triple and this filter has indexed Ultra posted we have seen.",
            "And a triple you can say for a hash, we just concatenate the whole triple and a computer hash.",
            "Next to constructing the Bloom filter, we also constructed domain of candidates that we have seen.",
            "So the domain contains all possible values that we have encountered in this graph.",
            "So all your eyes or literals.",
            "OK, we I won't speak about blank notes for a second.",
            "So these are the two things we construct in the basic setting, so we have the Bloom filter and we have a list of domain candidates and then the population we do.",
            "We just for each variable in our in our query in our where clauses we select some value randomly from the domain.",
            "And individual is just a list of assignments for each variable.",
            "And then to verify the solution, we take the candidate.",
            "And we take each of the values we have assigned to him.",
            "We substitute them into the clauses of the query and we verify them on the Bloom filter.",
            "The fitness we just count the number of clauses that have been satisfied.",
            "So for each clause that you satisfy, you get bonus, and if you reach the mass bonus we have found the perfect solution.",
            "And for evolution we do in this basic setting.",
            "At one point crossover.",
            "So when we have two parents, we just pick some point and take a left of the one parent in the right half of the other parent and mix them to form and child and we do random mutation of 1 gene in the chromosome.",
            "With some probability, so the details are in the paper.",
            "And all these evolutionary settings you can.",
            "You can of course change, and this is yet another branch of art on how to get the right parameters for all these evolutionary settings."
        ],
        [
            "OK, then we can make some simple optimizations and this is a sliding scale.",
            "So from zero indexing to full indexing you can we chose a point in the middle.",
            "So first of all we look.",
            "We don't have one domain, but we have three domains of candidate depending on where terms appeared in the graph.",
            "So if we have a domain of subjects domain of predicates and amount of objects and if a.",
            "Some value only appeared in object position.",
            "You don't have to try it for a variable.",
            "It appears in the subject position because this.",
            "And then we make the intersections of these domains.",
            "So we reduce the number of useless assignments.",
            "And this pre indexing, so you're trading here space for time and you can do this to a larger extent.",
            "You can for example also index on predicates or something.",
            "And Secondly, we improve the granularity of the fitness function.",
            "So instead of checking whether the full.",
            "Clause is in the graph or not.",
            "We also check whether you got at least part of the assignment right.",
            "And this is important because the more granular you can make your fitness function.",
            "So between saying this is a correct assignment and this is a wrong assignment, if you could say this is at least a little bit of good assignment because you got the predicate right.",
            "The more granular you make your fitness function, the better you can improve the evolution because it's clear to see whether the one individual or the other individual is better.",
            "So they both got it wrong.",
            "But one of them got at least a little bit less wrong than the other.",
            "So the more granular you make it, the better you get your evolution.",
            "OK, so now this is."
        ],
        [
            "So this is how we process the graph.",
            "Each triplet we encounter we insert into this 4 bloom filters.",
            "So one is just a Bloom filter that concatenates."
        ],
        [
            "Called triple.",
            "This is a simple one and then we make a partial."
        ],
        [
            "Filters on."
        ],
        [
            "NP on P&O and on."
        ],
        [
            "Signal.",
            "OK, and again you can.",
            "You could change this, but this is so these are the bloom filters that will help us determine not just whether the clause is completely right, but also whether you had at least part of the clause right."
        ],
        [
            "And then we construct the domain of candidates depending on which term we have seen in which position in the graph.",
            "And then we make also the intersections of these.",
            "So when you guess when you need to guess a new assignment for a variable, you pick from one of these three domains or from their intersections depending on where you see the variable appearing in the clause.",
            "OK, so now we parse this.",
            "So this is the graph parsing and we do this once for a given graph and so the result of this is for Bloom filters.",
            "And a set of domain.",
            "Candidates and again as I said, this is a dictionary encoding.",
            "So these domain candidates.",
            "We don't store the actual terms.",
            "Of course, we just store an integer pointing to some dictionary, which we constructed as well during parsing.",
            "So memory wise, this is quite a compact representation, so these bloom filters are quite compact and the list of candidates is also quite calm."
        ],
        [
            "Act Anne.",
            "So when we parse the query.",
            "We take each clause in the query an we construct a constraint.",
            "The corresponding constraint for it.",
            "And as I said, we tried to have this fine granularity.",
            "So the for example, the first closes publication must be of type book.",
            "So we put this constraint on the corresponding Bloom filter.",
            "But we also put the partial constraints, so we also just looking for a publication that has a type and we also are looking for publication.",
            "That hasn't as object book, even with a different predicate, so this will help you to see that you found at least something that has a type.",
            "Or you found at least something that has an object book, and so we make these constraints with their corresponding filters.",
            "So later when you check you know you check this constraint in this filter.",
            "So this is how we we process each of the where clauses into four constraints, and we remove of course the constraints that are satisfied because there are ground and then that is the individual that you get.",
            "You basically have to solve these two variables, publication and title.",
            "And you have some ground terms in there so you don't have to do much about them, so we actually leave them out, but I just put them in here for when we do the substitution.",
            "So this is each individual is just a set or list of variables.",
            "And there is."
        ],
        [
            "So now we are going to evaluate the fitness of some candidate, so I have here an individual that guest in figure #8 this individual guest."
        ],
        [
            "The woman.",
            "For the publication you see, this is the chromosome of the individual, so the individual guest for his first assignment."
        ],
        [
            "Publication he gets old man and for the last assignment.",
            "The title he gets principles of database systems.",
            "And the other ones you didn't have to do anything because there were given already.",
            "So now you can see we've verify all these assignments against all these various filters and he gets almost everything wrong, except he found something that is at least a label.",
            "So he gets for constraint #7, which was that this object that you guess should be labeled.",
            "He gets one.",
            "Correct positive for that, so he got you can say at one point fitness out of the maximum of eight point fitnesses.",
            "So if there is another individual that did a bit better, we can rank those two OK. And then we also look at which of the variables was involved in how many of the violations.",
            "I see below the variable publication was involved in six violations.",
            "So he guessed wrong.",
            "Assignment for publication and this was, let's say, this punished individual on six different counts.",
            "Where is for the for title.",
            "He actually got guessed it right, but it still involved in two violations, namely the full triple.",
            "So this can help you to do a local optimum, because if you want to mutate now, you should change publication, probably because this one is performing worse.",
            "But be careful that you don't optimize too soon.",
            "OK."
        ],
        [
            "So now some evaluation results.",
            "As I said in the beginning, this is a rather strange exercise because this is a very strange way to handle this problem.",
            "Except for those properties that I mentioned in the beginning, which we want to achieve, anytime approximate and being able to paralyze it.",
            "Because it's evolution, you can paralyze very easily because they are independent of each other.",
            "You just need to have a bunch of individuals and you give them into one note and a bunch of individuals to another node.",
            "And each of these nodes have has to get the Bloom filter.",
            "And they can come back when they found something after, let's say, 100 iterations or 200 iterations.",
            "OK, so apart from the fact that this method in principle would satisfy the conditions in reality, we have a trouble achieving.",
            "Competitive results for the form.",
            "So as you see here, we tested on a couple of datasets which are mentioned in the paper and also on the website which are WBM and some folk data.",
            "And this is the average of the fitness function in the overall population.",
            "Sorry, the average.",
            "So we made a couple of runs.",
            "An in each run we plot the best fitness that we find in this iteration.",
            "And lower is better.",
            "So for example in the first figure in the first iteration, we started with a very high best fitness, so everybody is doing bad.",
            "Then somebody is getting better.",
            "Somebody is getting better and so on.",
            "And then we do these runs several times and we average over them.",
            "And as you can see, lower is better and 0 means a perfect solution, so we don't find perfect solutions in this run and.",
            "The good news is that we converge.",
            "The question is whether we converge fast enough and what is conversion continues.",
            "And typically, in evolutionary algorithms you have three phases which you can see quite clearly in #3.",
            "Sorry in figure B.",
            "The first phase goes down very quickly.",
            "Because you're solving all the quick and easy constraints.",
            "The second phase you see a change in the graph and you're trying to exploit what you have found and to improve on it.",
            "And the third phase is where it goes flat and you get.",
            "Basically it's very hard to solve the final bits of the of the of the query."
        ],
        [
            "OK, so then we made some improvements which is published in the same conference.",
            "So we changed evolutionary operators.",
            "And we changed implementation a lot because the implementation was also.",
            "Have some improvement and as you can see we improve a lot in terms of reaching fitness quickly.",
            "Now higher is better, by the way.",
            "We also yeah, sorry.",
            "And on the 4th data you can now very clearly see these three phases.",
            "Of devolution but still this.",
            "These results are not competitive with let's say a sparkle engine like Sesame.",
            "The point I want to make is that this is an interesting essay."
        ],
        [
            "Sides to try to do it in this way.",
            "So for the future.",
            "I will look we are looking at how to actually deal with this unordered domains because this is a major problem.",
            "The domains, they're just terms.",
            "They have no relation to each other.",
            "And we're looking at different evolutionary techniques.",
            "So here we are using genetic algorithms and we're looking maybe at something like Swarm optimizations.",
            "And how do you actually evaluate the quality of your result?",
            "So how do you know that a higher fitness means the result is more useful and this is a very hard hard problem.",
            "Anne.",
            "So Many thanks.",
            "I will stop here.",
            "I will just leave the conclusion here so you can read them and you can ask me any questions.",
            "So I'm a bit confused about how easy it is to paralyse evolutionary algorithms.",
            "So if you put different parts of the population on different nodes, how do you do crossover and mutation?",
            "And yeah, this is a good point.",
            "So what the standard technique is you you group them into what you called teams which are sets of individuals.",
            "So let's say I have 500 individuals, so I make 50 in each team and is 50 or run across different nodes.",
            "And in each team they do their evolution for some iterations.",
            "After that they go out and they do.",
            "For example, crossover with somebody in another.",
            "So you of course you still have to have communication.",
            "But you have less communication, so you can do a lot locally and once in a while you go outside.",
            "OK, thank you, but I have to say we did not do this distributed yet on the nodes.",
            "So this is the theoretical benefit.",
            "Hey, how you say still with this much slower than Sesame or a bit slower or something like this.",
            "But it also depends on the scale, because this approach that you show is actually.",
            "Should benefit more if you go in the web scale direction, where Sesame probably won't answer factoria.",
            "Yeah, this is I mean on the one hand, yes.",
            "On the other hand, no.",
            "On the one hand, we have a problem that if the if the data gets very large.",
            "And if the number of individuals in it, it's on a number of terms gets very large.",
            "Then it the problem for us also gets more and more and more complicated because you have to make these guesses again.",
            "The other thing is that if the query gets very large, this does not necessarily introduce many problems for us because our individuals are linear in a number of variables and we don't have this this nested loops, so we do.",
            "We do a full guest of a full assignment and if the query is very large.",
            "But let's say with the same number of variables, this doesn't hinder us as much as you would have in a traditional setting.",
            "Yeah, but in the in the in the paper do you wear when you made the evaluation?",
            "I mean, did you really make it for different?",
            "Let's say scales?",
            "Yeah yeah, and the best to read it into some paper because the evaluation results in some paper clear and we put more details there.",
            "I have a couple of questions first.",
            "Have you thought about preprocessing data or or do you have some plans to do that in order to improve?",
            "In some ways the fitness function, I mean, for me it's like OK, it's it's reasonable to expect the fitness function as the one you're showing, but maybe you can extract some information based on the at the moment.",
            "When you're inserting data into the database or or something, and my second question is.",
            "I know this is a very preliminary work, but.",
            "It would be interesting to see how much time does it take for even even not a very complex query, but but it would be interesting that.",
            "OK, so the second question first, it was an omission in this paper, and so in some paper we actually have runtime, so timing results.",
            "But I can tell you for simple queries it takes something like a couple of seconds.",
            "For simple queries on small datasets or these are datasets, let's say of 500,000 to a couple of million into graph, the size of the graph triples the first question we are looking at different ways of computing the fitness function and this is what I said to you to sewing the weights, which means you are adopting the fitness function.",
            "While you're running, so while you're running, you see that some constraints are harder to satisfy, so you give more points to these constraints, so you waiting the constraints, they don't all.",
            "Give you equal bonus.",
            "Some are harder to solve apparently, so you give them more weights and this is a way to dynamically change the weights depending on how good your evolution is running.",
            "Another way is what you're saying is to do.",
            "For example, the statistical analysis on the data and then set the weights before hand.",
            "We thought about that as well, but we want to try this sewing dynamically first.",
            "OK thank you, thanks.",
            "OK, maybe one last question.",
            "So you said basically this guessing of the value seems to be a random process complete, wouldn't it?",
            "On the per triple basis?",
            "Be better to use vlookups.",
            "Yeah yeah yes, I know so.",
            "I said there is like a Gray area going for a completely only membership testing to something completely pre indexed and we already index a little bit.",
            "Namely we look at where these elements occur in the graph and we could also index more.",
            "And the more you index, the better your guessing becomes, but the more space and time it has also before hand.",
            "So this is something we have to find out as to what makes sense.",
            "But the guessing is not.",
            "The guessing typically should not be random.",
            "The guessing is random because the domain is unordered.",
            "So and this is a problem because of course you can order them for example lexicographically, but this order doesn't mean anything.",
            "So if we can find a way to order the terms in the graph in some way.",
            "Then the evolution improves alot.",
            "So if you just guessed 4th nose and now you can get something else in the form of namespace, know if that would make any sense then the evolution could improve.",
            "OK thanks."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "I'm using all kinds of other peoples equipment, so this thanks for boring everything.",
                    "label": 0
                },
                {
                    "sent": "My name is yellow and an I will present work done in Amsterdam with Kristoff and Steven on an evolutionary technique for doing query answering in RDF.",
                    "label": 1
                },
                {
                    "sent": "I have to say in advance that this paper is a little bit strange.",
                    "label": 0
                },
                {
                    "sent": "Because if you think about it, I will explain in a second what we actually do and what does it mean to do evolutionary.",
                    "label": 0
                },
                {
                    "sent": "Computing over query answering.",
                    "label": 0
                },
                {
                    "sent": "It's a bit strange.",
                    "label": 0
                },
                {
                    "sent": "It's a strange setting compared to the database setting that we have seen before, but I will explain why we think this is an interesting.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Idea to investigate.",
                    "label": 0
                },
                {
                    "sent": "So what we want to do is what we have seen.",
                    "label": 0
                },
                {
                    "sent": "For example in the previous paper query answering over RDF graphs.",
                    "label": 1
                },
                {
                    "sent": "Which means finding assignments to the variables such that the graph.",
                    "label": 0
                },
                {
                    "sent": "And tells the query.",
                    "label": 0
                },
                {
                    "sent": "Graph when you substitute these assignments.",
                    "label": 0
                },
                {
                    "sent": "OK, I'm we're focusing just about in.",
                    "label": 0
                },
                {
                    "sent": "We're talking about sparkle queries and I'm just talking about the where clauses.",
                    "label": 0
                },
                {
                    "sent": "So these are not really sparkle queries in the sense that it's just a conjunctive.",
                    "label": 0
                },
                {
                    "sent": "Clauses and the things we want to achieve is, first of all we are interested in getting approximate answers to the queries.",
                    "label": 0
                },
                {
                    "sent": "An approximate meaning ranked.",
                    "label": 0
                },
                {
                    "sent": "Ranked according to their approximation of the correct result.",
                    "label": 0
                },
                {
                    "sent": "And why do we think this is interesting?",
                    "label": 0
                },
                {
                    "sent": "Because if you look at very large datasets, for example web scale data or web search.",
                    "label": 0
                },
                {
                    "sent": "Ranking is very often considered much more important in completeness, so if your data if your answer is, let's say, 3 million.",
                    "label": 0
                },
                {
                    "sent": "Assignments.",
                    "label": 0
                },
                {
                    "sent": "In many scenarios, getting the first 10 or the 1st 20.",
                    "label": 0
                },
                {
                    "sent": "Right is much more important than getting the full 3 million answers, because if the answer set is too large to comprehend, it's not that interesting to get the full answer.",
                    "label": 0
                },
                {
                    "sent": "So the problem becomes a problem of ranking.",
                    "label": 0
                },
                {
                    "sent": "And so you're doing approximate answers where you rank how good your approximation is.",
                    "label": 0
                },
                {
                    "sent": "Also, in the light that data might be inconsistent internally and the query may actually not be satisfiable.",
                    "label": 0
                },
                {
                    "sent": "Becausw for example, the data is too large, so when you're writing the query you don't see that the query is unsatisfiable.",
                    "label": 0
                },
                {
                    "sent": "OK, so this is first.",
                    "label": 0
                },
                {
                    "sent": "Secondly, we want to have any time answers and anytime, meaning that the answers improve overtime and I can stop the algorithm at any point in time and get an answer.",
                    "label": 0
                },
                {
                    "sent": "And if I wait a bit longer I get a better answer.",
                    "label": 0
                },
                {
                    "sent": "Why is this interesting?",
                    "label": 0
                },
                {
                    "sent": "Because I can tune the effort I want to spend waiting versus the benefit I get from the answer.",
                    "label": 0
                },
                {
                    "sent": "So if you want very good answers, you have to wait.",
                    "label": 0
                },
                {
                    "sent": "If you want bad answers.",
                    "label": 0
                },
                {
                    "sent": "If you can afford bad answers, you can afford a very short query time.",
                    "label": 0
                },
                {
                    "sent": "Again, this is a way to deal with very large datasets.",
                    "label": 0
                },
                {
                    "sent": "So for doing these, anytime answers you need to have a notion of quality of course, because your answer should improve overtime.",
                    "label": 0
                },
                {
                    "sent": "It doesn't help to wait if the later answers are worse than the previous answers.",
                    "label": 0
                },
                {
                    "sent": "And finally we want to be able to parallelize computation because in many settings people start to realize that is RDF graphs are getting larger and larger and larger.",
                    "label": 0
                },
                {
                    "sent": "For example, in a billion triple challenge we will see this afternoon and tomorrow that people one way to deal with this very large scale is parallelization is a very obvious way if you look for example at search engines again.",
                    "label": 0
                },
                {
                    "sent": "So you want to be able to scale your computation by adding nodes.",
                    "label": 0
                },
                {
                    "sent": "So this means your algorithm needs to be parallelizable.",
                    "label": 0
                },
                {
                    "sent": "OK, So what we do here is an evolutionary approach and very simply said we do it the following way.",
                    "label": 0
                },
                {
                    "sent": "So we take the query.",
                    "label": 0
                },
                {
                    "sent": "The query contains a number of variables and these variables need to be bound.",
                    "label": 0
                },
                {
                    "sent": "To some value that actually satisfies the query.",
                    "label": 0
                },
                {
                    "sent": "So we will just guess an assignment to this query.",
                    "label": 1
                },
                {
                    "sent": "We take each variable and we just guess an assignment to this variable.",
                    "label": 0
                },
                {
                    "sent": "Then we verified this assignment on the graph on the original data graph.",
                    "label": 0
                },
                {
                    "sent": "So we see how good was our guess does it actually satisfy the query?",
                    "label": 0
                },
                {
                    "sent": "And if not?",
                    "label": 1
                },
                {
                    "sent": "We guess again.",
                    "label": 0
                },
                {
                    "sent": "But we improve the guessing.",
                    "label": 0
                },
                {
                    "sent": "So we make a better assignment and we go back.",
                    "label": 0
                },
                {
                    "sent": "This is the basic loop.",
                    "label": 0
                },
                {
                    "sent": "We guess we try we improve.",
                    "label": 0
                },
                {
                    "sent": "We guess we try we improve.",
                    "label": 0
                },
                {
                    "sent": "OK, so this relies on a couple of things.",
                    "label": 0
                },
                {
                    "sent": "First of all we need to have a way of guessing.",
                    "label": 0
                },
                {
                    "sent": "Secondly we need to have a way of verifying.",
                    "label": 0
                },
                {
                    "sent": "And Thirdly we need to have a way of improving.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So a very basic example which I will use in the rest of the presentation.",
                    "label": 0
                },
                {
                    "sent": "We have a some DLP data.",
                    "label": 0
                },
                {
                    "sent": "OK, this is a made up data, but you can.",
                    "label": 0
                },
                {
                    "sent": "It's a old man book with some label and it was written by women and we have a home page for example.",
                    "label": 0
                },
                {
                    "sent": "OK, then we have a sparkle query.",
                    "label": 0
                },
                {
                    "sent": "Selecting or finding on books basically and their titles.",
                    "label": 0
                },
                {
                    "sent": "As I expected, answer his.",
                    "label": 0
                },
                {
                    "sent": "One binding for title, namely Principles of Database system.",
                    "label": 1
                },
                {
                    "sent": "So this projection to only select the title.",
                    "label": 0
                },
                {
                    "sent": "This we ignore for a second, we basically have to find here to variable assignment, publication and title.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So the traditional approach as we have seen in previous talk clearly in a database style.",
                    "label": 1
                },
                {
                    "sent": "OK, so abstracting for a second from all the indices you can put on the data.",
                    "label": 0
                },
                {
                    "sent": "You basically you solve the one clause.",
                    "label": 0
                },
                {
                    "sent": "So you find all publications that are of type book.",
                    "label": 0
                },
                {
                    "sent": "In this case we have two on 188 and 189.",
                    "label": 0
                },
                {
                    "sent": "Secondly, we solve.",
                    "label": 0
                },
                {
                    "sent": "The second clause, finding all publications and their titles.",
                    "label": 0
                },
                {
                    "sent": "In this case we have only one publication in there which actually has a title, so we get one result and we join.",
                    "label": 0
                },
                {
                    "sent": "And these two results and we project out the variables that we're interested in.",
                    "label": 0
                },
                {
                    "sent": "OK, and as we have seen these joints you can do in various ways, but you could for example use this nested loop nested loops.",
                    "label": 0
                },
                {
                    "sent": "So for solving a clause, you need to iterate over all the records.",
                    "label": 1
                },
                {
                    "sent": "To find those that satisfy the constraints, you don't have to iterate over all of them, of course, but.",
                    "label": 0
                },
                {
                    "sent": "Generally and then to do the join you can, for example do a nested loop, or if you're lucky you can do an optimization.",
                    "label": 0
                },
                {
                    "sent": "So this is traditionally.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So what we do?",
                    "label": 0
                },
                {
                    "sent": "Is quite different.",
                    "label": 0
                },
                {
                    "sent": "We take as I said, the variables from the query.",
                    "label": 0
                },
                {
                    "sent": "Publication and title and we assign some value to them from the domain.",
                    "label": 1
                },
                {
                    "sent": "OK so I will get back to the question of what is the domain but we assign some value to them.",
                    "label": 0
                },
                {
                    "sent": "So in this case we guess publication we're looking for woman 88 and the title we are looking for something Oprah's book.",
                    "label": 0
                },
                {
                    "sent": "OK, so you can of course clearly see that this is the wrong assignment because the title cannot be a book.",
                    "label": 0
                },
                {
                    "sent": "If you think about it because titles are usually literal properties, but this is something we don't know, we just guess, so we verified the solution.",
                    "label": 0
                },
                {
                    "sent": "So we feel we substitute the assignments into the original clause and we check whether then this triple is in the graph.",
                    "label": 0
                },
                {
                    "sent": "So woman is indeed a book.",
                    "label": 0
                },
                {
                    "sent": "So this clause is correct.",
                    "label": 0
                },
                {
                    "sent": "And book is not a label for women, so the second clause is wrong.",
                    "label": 1
                },
                {
                    "sent": "So this solution is somewhat OK and somewhat wrong.",
                    "label": 0
                },
                {
                    "sent": "And now we can discuss about how we determine this level of correctness.",
                    "label": 0
                },
                {
                    "sent": "How good is this answer?",
                    "label": 0
                },
                {
                    "sent": "But in this case, we try again because the answer is not.",
                    "label": 0
                },
                {
                    "sent": "It's not completely correct yet.",
                    "label": 0
                },
                {
                    "sent": "So as you see, and we look, so we will keep.",
                    "label": 0
                },
                {
                    "sent": "We will keep the first assignment, for example and change the second assignment and then try again.",
                    "label": 0
                },
                {
                    "sent": "So I see this loop we're looping in.",
                    "label": 1
                },
                {
                    "sent": "This loop can stop at anytime.",
                    "label": 0
                },
                {
                    "sent": "A result can satisfy your part of the query.",
                    "label": 0
                },
                {
                    "sent": "So as you see here, we satisfy the first clause but not the second clause.",
                    "label": 0
                },
                {
                    "sent": "So the query is partially satisfied.",
                    "label": 0
                },
                {
                    "sent": "OK, the question is, is this a?",
                    "label": 0
                },
                {
                    "sent": "Is this a partial satisfaction that you're happy with, or are you more interested in solving the second clause?",
                    "label": 0
                },
                {
                    "sent": "So this is a question of how do we determine the quality of the result?",
                    "label": 1
                },
                {
                    "sent": "But the loop can be stopped.",
                    "label": 0
                },
                {
                    "sent": "A result may satisfy part of the query.",
                    "label": 1
                },
                {
                    "sent": "And very importantly, we do membership testing.",
                    "label": 0
                },
                {
                    "sent": "So we know we have results here.",
                    "label": 0
                },
                {
                    "sent": "The only question is whether they are in the graph.",
                    "label": 0
                },
                {
                    "sent": "So for each of these verification, we just do a membership test to see if this in the graph or not.",
                    "label": 0
                },
                {
                    "sent": "And OK, in reality we use the dictionary encoding.",
                    "label": 0
                },
                {
                    "sent": "So in the rest of the talk I just again like in the previous talk give you the full you right and so on.",
                    "label": 0
                },
                {
                    "sent": "But of course in reality we use a dictionary encoding.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We need two things.",
                    "label": 0
                },
                {
                    "sent": "As I said in the beginning.",
                    "label": 0
                },
                {
                    "sent": "On the one we need a good way to evolve these solutions along the way, so the answers need to get better.",
                    "label": 1
                },
                {
                    "sent": "The results need to get better with each iteration iteration.",
                    "label": 0
                },
                {
                    "sent": "So what we use is an evolutionary algorithm and I will show in the second what it means.",
                    "label": 1
                },
                {
                    "sent": "Secondly, we need a fast way to verify whether.",
                    "label": 0
                },
                {
                    "sent": "A particular clause is in the graph or not.",
                    "label": 0
                },
                {
                    "sent": "And because we will do many iterations, we will try a lot of these clauses.",
                    "label": 0
                },
                {
                    "sent": "So these verifications should be very fast and should not of course require to iterate over the whole graph.",
                    "label": 0
                },
                {
                    "sent": "This would, I mean, this would nullify the whole approach if I've to check a clause would have to go to the graph again.",
                    "label": 0
                },
                {
                    "sent": "This would be counter to the whole setup.",
                    "label": 0
                },
                {
                    "sent": "So what we use there are Bloom filters which allow us to very quickly see whether something is in the graph or not.",
                    "label": 0
                },
                {
                    "sent": "And I will also show them in a second.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So what is an evolutionary algorithm?",
                    "label": 0
                },
                {
                    "sent": "These are families of algorithms and we pick a particular setting and you can read more about the setting in the paper which are inspired by natural evolution.",
                    "label": 0
                },
                {
                    "sent": "So basically you initialize a population of individuals.",
                    "label": 0
                },
                {
                    "sent": "Individuals are some.",
                    "label": 0
                },
                {
                    "sent": "Encoding of information.",
                    "label": 0
                },
                {
                    "sent": "So I will show you our individuals.",
                    "label": 0
                },
                {
                    "sent": "In a second you have a population.",
                    "label": 0
                },
                {
                    "sent": "From this population you select some parents.",
                    "label": 0
                },
                {
                    "sent": "For example, those in the population that are best, so they have the highest fitness.",
                    "label": 0
                },
                {
                    "sent": "And these parents you let them re come recombination and mutation to generate offspring.",
                    "label": 0
                },
                {
                    "sent": "So mutation means you take part of the parent.",
                    "label": 0
                },
                {
                    "sent": "So apparent is each individual is encoded as a as a chromosome of genes.",
                    "label": 0
                },
                {
                    "sent": "So each gene conferred, for example, be a variable assignment in our situation and mutation just means you take 1 gene.",
                    "label": 0
                },
                {
                    "sent": "On margins and you mutate this gene locally, so you change it for a different value.",
                    "label": 0
                },
                {
                    "sent": "Recombination means you take 2 parents and you combine them, for example by taking half of the chromosome from the one and half of the chromosome from the other and plugging them together.",
                    "label": 0
                },
                {
                    "sent": "This is one way of doing recommendation, and so by recombination and mutation you generate new individuals.",
                    "label": 0
                },
                {
                    "sent": "So you have offspring.",
                    "label": 0
                },
                {
                    "sent": "And from this offspring and the original parents, you somehow select the survivors.",
                    "label": 0
                },
                {
                    "sent": "For example, again on the fitness of the survivors.",
                    "label": 0
                },
                {
                    "sent": "So you keep those children that are fitter than their parents, for example.",
                    "label": 0
                },
                {
                    "sent": "And if you look and you look until you reach some termination condition.",
                    "label": 0
                },
                {
                    "sent": "And you have to be careful that you don't optimize too quickly into those individuals with a high fitness, because you will get stuck in a local optimum.",
                    "label": 0
                },
                {
                    "sent": "So you need to keep let's say also the bad performing individuals in to keep the variation high.",
                    "label": 0
                },
                {
                    "sent": "Otherwise you will get stuck.",
                    "label": 0
                },
                {
                    "sent": "But this is the basic idea.",
                    "label": 0
                },
                {
                    "sent": "And so the details of what we actually.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Data will show a bit in the rest, but you can read in the paper.",
                    "label": 0
                },
                {
                    "sent": "OK, so now about Bloom filters.",
                    "label": 1
                },
                {
                    "sent": "Bloom filters are a compact way to represent the set and to allow you to verify membership of this set.",
                    "label": 0
                },
                {
                    "sent": "So there are an array of bits.",
                    "label": 0
                },
                {
                    "sent": "In this example, 8 bits.",
                    "label": 1
                },
                {
                    "sent": "And you can do two things on on the Bloom filter.",
                    "label": 0
                },
                {
                    "sent": "You can insert a key and you can check for containment on freaky.",
                    "label": 1
                },
                {
                    "sent": "So if you insert the key, you use a number of hash functions.",
                    "label": 0
                },
                {
                    "sent": "And this number is variable.",
                    "label": 0
                },
                {
                    "sent": "So say again 3 hash functions in this example.",
                    "label": 1
                },
                {
                    "sent": "And we hash the item we want to insert.",
                    "label": 0
                },
                {
                    "sent": "We hash with these different hash functions an from each hash function we get 1 hash value, and this hash value we use as an index into the bit array.",
                    "label": 0
                },
                {
                    "sent": "So in this example we want to insert Hello World.",
                    "label": 0
                },
                {
                    "sent": "So I do the first hash, I get 8, so the integer 8.",
                    "label": 0
                },
                {
                    "sent": "So I set the 8 bit to true.",
                    "label": 0
                },
                {
                    "sent": "I take the second hash function in the third hash function, I set the corresponding bits to true.",
                    "label": 0
                },
                {
                    "sent": "So now those bits have been set and I've inserted the helloworld item.",
                    "label": 0
                },
                {
                    "sent": "So you can increase the number of bits in the array.",
                    "label": 0
                },
                {
                    "sent": "Obviously you can increase the numbers hash functions that you used to encode each item, so.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "If you insert Hello World on an existing filter, you do a bitwise or.",
                    "label": 1
                },
                {
                    "sent": "So if I have a current filter with two bit set as you see in this top and then I insert Hello World.",
                    "label": 0
                },
                {
                    "sent": "I want to set these other 3 bits so I do a bitwise or and I have this new Bloom filter.",
                    "label": 0
                },
                {
                    "sent": "Which has now 3 bit set in total.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "Then if I want to change to check containment, I do exactly the same operation, except I use an end.",
                    "label": 0
                },
                {
                    "sent": "So I see if those bits have been set already.",
                    "label": 0
                },
                {
                    "sent": "So I take for example my filter which now contains 3.",
                    "label": 0
                },
                {
                    "sent": "Bits which are set and I check a new item called Bonjour.",
                    "label": 0
                },
                {
                    "sent": "So Bonjour again I do 3 hash.",
                    "label": 0
                },
                {
                    "sent": "Values of Bonjour I index the bit and I see if all those bits have been set.",
                    "label": 0
                },
                {
                    "sent": "In this case, not all these bits have been set, so obviously Bonjour has not been inserted before, so control is not in the set.",
                    "label": 0
                },
                {
                    "sent": "So as you can see, you can get collisions here.",
                    "label": 0
                },
                {
                    "sent": "Be cause if all the hash values of my new item collide with some hash values of another item or just some bits have been set before I get a collision.",
                    "label": 0
                },
                {
                    "sent": "So I will think that this item is inserted while it is not because it's just somebody elses bits that have been set here and this collision rate you can calculate exactly what it is given the number of bits you have, the number of hash.",
                    "label": 0
                },
                {
                    "sent": "Functions you use Anna number of items you actually inserted.",
                    "label": 0
                },
                {
                    "sent": "So you know your error rate and the error rate is only on the positive errors.",
                    "label": 0
                },
                {
                    "sent": "So if the item is not in, you know for sure it's not in because these bits have not been set, so this item cannot have been inserted, because otherwise the bits would have been set, but a positive false positive as possible because somebody else could have set those bits.",
                    "label": 0
                },
                {
                    "sent": "OK, nothing to see here is that this is a a very compact way to represent your data, because you will need a bit array of some size and Bitzer varies.",
                    "label": 0
                },
                {
                    "sent": "Smaller thing and it's very fast because you're just doing bitwise computations, so bitwise or and bitwise and and.",
                    "label": 1
                },
                {
                    "sent": "These are very fast.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, so now how do we?",
                    "label": 0
                },
                {
                    "sent": "What do we do with our graph and our query?",
                    "label": 0
                },
                {
                    "sent": "So basically we we parse the graph when we index the graph.",
                    "label": 0
                },
                {
                    "sent": "We parse the graph and we fill the Bloom filter so we have in the basic setting I will show you some optimization.",
                    "label": 0
                },
                {
                    "sent": "In basic setting we have one big filter called triple and this filter has indexed Ultra posted we have seen.",
                    "label": 0
                },
                {
                    "sent": "And a triple you can say for a hash, we just concatenate the whole triple and a computer hash.",
                    "label": 0
                },
                {
                    "sent": "Next to constructing the Bloom filter, we also constructed domain of candidates that we have seen.",
                    "label": 1
                },
                {
                    "sent": "So the domain contains all possible values that we have encountered in this graph.",
                    "label": 0
                },
                {
                    "sent": "So all your eyes or literals.",
                    "label": 0
                },
                {
                    "sent": "OK, we I won't speak about blank notes for a second.",
                    "label": 0
                },
                {
                    "sent": "So these are the two things we construct in the basic setting, so we have the Bloom filter and we have a list of domain candidates and then the population we do.",
                    "label": 0
                },
                {
                    "sent": "We just for each variable in our in our query in our where clauses we select some value randomly from the domain.",
                    "label": 1
                },
                {
                    "sent": "And individual is just a list of assignments for each variable.",
                    "label": 0
                },
                {
                    "sent": "And then to verify the solution, we take the candidate.",
                    "label": 0
                },
                {
                    "sent": "And we take each of the values we have assigned to him.",
                    "label": 0
                },
                {
                    "sent": "We substitute them into the clauses of the query and we verify them on the Bloom filter.",
                    "label": 0
                },
                {
                    "sent": "The fitness we just count the number of clauses that have been satisfied.",
                    "label": 0
                },
                {
                    "sent": "So for each clause that you satisfy, you get bonus, and if you reach the mass bonus we have found the perfect solution.",
                    "label": 0
                },
                {
                    "sent": "And for evolution we do in this basic setting.",
                    "label": 0
                },
                {
                    "sent": "At one point crossover.",
                    "label": 0
                },
                {
                    "sent": "So when we have two parents, we just pick some point and take a left of the one parent in the right half of the other parent and mix them to form and child and we do random mutation of 1 gene in the chromosome.",
                    "label": 0
                },
                {
                    "sent": "With some probability, so the details are in the paper.",
                    "label": 0
                },
                {
                    "sent": "And all these evolutionary settings you can.",
                    "label": 0
                },
                {
                    "sent": "You can of course change, and this is yet another branch of art on how to get the right parameters for all these evolutionary settings.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, then we can make some simple optimizations and this is a sliding scale.",
                    "label": 0
                },
                {
                    "sent": "So from zero indexing to full indexing you can we chose a point in the middle.",
                    "label": 0
                },
                {
                    "sent": "So first of all we look.",
                    "label": 0
                },
                {
                    "sent": "We don't have one domain, but we have three domains of candidate depending on where terms appeared in the graph.",
                    "label": 1
                },
                {
                    "sent": "So if we have a domain of subjects domain of predicates and amount of objects and if a.",
                    "label": 0
                },
                {
                    "sent": "Some value only appeared in object position.",
                    "label": 0
                },
                {
                    "sent": "You don't have to try it for a variable.",
                    "label": 0
                },
                {
                    "sent": "It appears in the subject position because this.",
                    "label": 0
                },
                {
                    "sent": "And then we make the intersections of these domains.",
                    "label": 1
                },
                {
                    "sent": "So we reduce the number of useless assignments.",
                    "label": 0
                },
                {
                    "sent": "And this pre indexing, so you're trading here space for time and you can do this to a larger extent.",
                    "label": 0
                },
                {
                    "sent": "You can for example also index on predicates or something.",
                    "label": 0
                },
                {
                    "sent": "And Secondly, we improve the granularity of the fitness function.",
                    "label": 1
                },
                {
                    "sent": "So instead of checking whether the full.",
                    "label": 0
                },
                {
                    "sent": "Clause is in the graph or not.",
                    "label": 0
                },
                {
                    "sent": "We also check whether you got at least part of the assignment right.",
                    "label": 0
                },
                {
                    "sent": "And this is important because the more granular you can make your fitness function.",
                    "label": 0
                },
                {
                    "sent": "So between saying this is a correct assignment and this is a wrong assignment, if you could say this is at least a little bit of good assignment because you got the predicate right.",
                    "label": 0
                },
                {
                    "sent": "The more granular you make your fitness function, the better you can improve the evolution because it's clear to see whether the one individual or the other individual is better.",
                    "label": 0
                },
                {
                    "sent": "So they both got it wrong.",
                    "label": 0
                },
                {
                    "sent": "But one of them got at least a little bit less wrong than the other.",
                    "label": 0
                },
                {
                    "sent": "So the more granular you make it, the better you get your evolution.",
                    "label": 0
                },
                {
                    "sent": "OK, so now this is.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So this is how we process the graph.",
                    "label": 0
                },
                {
                    "sent": "Each triplet we encounter we insert into this 4 bloom filters.",
                    "label": 1
                },
                {
                    "sent": "So one is just a Bloom filter that concatenates.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Called triple.",
                    "label": 0
                },
                {
                    "sent": "This is a simple one and then we make a partial.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Filters on.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "NP on P&O and on.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Signal.",
                    "label": 0
                },
                {
                    "sent": "OK, and again you can.",
                    "label": 0
                },
                {
                    "sent": "You could change this, but this is so these are the bloom filters that will help us determine not just whether the clause is completely right, but also whether you had at least part of the clause right.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And then we construct the domain of candidates depending on which term we have seen in which position in the graph.",
                    "label": 0
                },
                {
                    "sent": "And then we make also the intersections of these.",
                    "label": 0
                },
                {
                    "sent": "So when you guess when you need to guess a new assignment for a variable, you pick from one of these three domains or from their intersections depending on where you see the variable appearing in the clause.",
                    "label": 0
                },
                {
                    "sent": "OK, so now we parse this.",
                    "label": 0
                },
                {
                    "sent": "So this is the graph parsing and we do this once for a given graph and so the result of this is for Bloom filters.",
                    "label": 1
                },
                {
                    "sent": "And a set of domain.",
                    "label": 0
                },
                {
                    "sent": "Candidates and again as I said, this is a dictionary encoding.",
                    "label": 0
                },
                {
                    "sent": "So these domain candidates.",
                    "label": 0
                },
                {
                    "sent": "We don't store the actual terms.",
                    "label": 0
                },
                {
                    "sent": "Of course, we just store an integer pointing to some dictionary, which we constructed as well during parsing.",
                    "label": 1
                },
                {
                    "sent": "So memory wise, this is quite a compact representation, so these bloom filters are quite compact and the list of candidates is also quite calm.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Act Anne.",
                    "label": 0
                },
                {
                    "sent": "So when we parse the query.",
                    "label": 0
                },
                {
                    "sent": "We take each clause in the query an we construct a constraint.",
                    "label": 0
                },
                {
                    "sent": "The corresponding constraint for it.",
                    "label": 0
                },
                {
                    "sent": "And as I said, we tried to have this fine granularity.",
                    "label": 0
                },
                {
                    "sent": "So the for example, the first closes publication must be of type book.",
                    "label": 0
                },
                {
                    "sent": "So we put this constraint on the corresponding Bloom filter.",
                    "label": 0
                },
                {
                    "sent": "But we also put the partial constraints, so we also just looking for a publication that has a type and we also are looking for publication.",
                    "label": 0
                },
                {
                    "sent": "That hasn't as object book, even with a different predicate, so this will help you to see that you found at least something that has a type.",
                    "label": 0
                },
                {
                    "sent": "Or you found at least something that has an object book, and so we make these constraints with their corresponding filters.",
                    "label": 0
                },
                {
                    "sent": "So later when you check you know you check this constraint in this filter.",
                    "label": 0
                },
                {
                    "sent": "So this is how we we process each of the where clauses into four constraints, and we remove of course the constraints that are satisfied because there are ground and then that is the individual that you get.",
                    "label": 0
                },
                {
                    "sent": "You basically have to solve these two variables, publication and title.",
                    "label": 0
                },
                {
                    "sent": "And you have some ground terms in there so you don't have to do much about them, so we actually leave them out, but I just put them in here for when we do the substitution.",
                    "label": 0
                },
                {
                    "sent": "So this is each individual is just a set or list of variables.",
                    "label": 0
                },
                {
                    "sent": "And there is.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So now we are going to evaluate the fitness of some candidate, so I have here an individual that guest in figure #8 this individual guest.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The woman.",
                    "label": 0
                },
                {
                    "sent": "For the publication you see, this is the chromosome of the individual, so the individual guest for his first assignment.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Publication he gets old man and for the last assignment.",
                    "label": 0
                },
                {
                    "sent": "The title he gets principles of database systems.",
                    "label": 0
                },
                {
                    "sent": "And the other ones you didn't have to do anything because there were given already.",
                    "label": 0
                },
                {
                    "sent": "So now you can see we've verify all these assignments against all these various filters and he gets almost everything wrong, except he found something that is at least a label.",
                    "label": 0
                },
                {
                    "sent": "So he gets for constraint #7, which was that this object that you guess should be labeled.",
                    "label": 0
                },
                {
                    "sent": "He gets one.",
                    "label": 0
                },
                {
                    "sent": "Correct positive for that, so he got you can say at one point fitness out of the maximum of eight point fitnesses.",
                    "label": 0
                },
                {
                    "sent": "So if there is another individual that did a bit better, we can rank those two OK. And then we also look at which of the variables was involved in how many of the violations.",
                    "label": 0
                },
                {
                    "sent": "I see below the variable publication was involved in six violations.",
                    "label": 0
                },
                {
                    "sent": "So he guessed wrong.",
                    "label": 0
                },
                {
                    "sent": "Assignment for publication and this was, let's say, this punished individual on six different counts.",
                    "label": 0
                },
                {
                    "sent": "Where is for the for title.",
                    "label": 0
                },
                {
                    "sent": "He actually got guessed it right, but it still involved in two violations, namely the full triple.",
                    "label": 0
                },
                {
                    "sent": "So this can help you to do a local optimum, because if you want to mutate now, you should change publication, probably because this one is performing worse.",
                    "label": 0
                },
                {
                    "sent": "But be careful that you don't optimize too soon.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So now some evaluation results.",
                    "label": 1
                },
                {
                    "sent": "As I said in the beginning, this is a rather strange exercise because this is a very strange way to handle this problem.",
                    "label": 0
                },
                {
                    "sent": "Except for those properties that I mentioned in the beginning, which we want to achieve, anytime approximate and being able to paralyze it.",
                    "label": 0
                },
                {
                    "sent": "Because it's evolution, you can paralyze very easily because they are independent of each other.",
                    "label": 0
                },
                {
                    "sent": "You just need to have a bunch of individuals and you give them into one note and a bunch of individuals to another node.",
                    "label": 0
                },
                {
                    "sent": "And each of these nodes have has to get the Bloom filter.",
                    "label": 0
                },
                {
                    "sent": "And they can come back when they found something after, let's say, 100 iterations or 200 iterations.",
                    "label": 0
                },
                {
                    "sent": "OK, so apart from the fact that this method in principle would satisfy the conditions in reality, we have a trouble achieving.",
                    "label": 0
                },
                {
                    "sent": "Competitive results for the form.",
                    "label": 0
                },
                {
                    "sent": "So as you see here, we tested on a couple of datasets which are mentioned in the paper and also on the website which are WBM and some folk data.",
                    "label": 0
                },
                {
                    "sent": "And this is the average of the fitness function in the overall population.",
                    "label": 0
                },
                {
                    "sent": "Sorry, the average.",
                    "label": 0
                },
                {
                    "sent": "So we made a couple of runs.",
                    "label": 1
                },
                {
                    "sent": "An in each run we plot the best fitness that we find in this iteration.",
                    "label": 0
                },
                {
                    "sent": "And lower is better.",
                    "label": 0
                },
                {
                    "sent": "So for example in the first figure in the first iteration, we started with a very high best fitness, so everybody is doing bad.",
                    "label": 0
                },
                {
                    "sent": "Then somebody is getting better.",
                    "label": 0
                },
                {
                    "sent": "Somebody is getting better and so on.",
                    "label": 0
                },
                {
                    "sent": "And then we do these runs several times and we average over them.",
                    "label": 0
                },
                {
                    "sent": "And as you can see, lower is better and 0 means a perfect solution, so we don't find perfect solutions in this run and.",
                    "label": 0
                },
                {
                    "sent": "The good news is that we converge.",
                    "label": 0
                },
                {
                    "sent": "The question is whether we converge fast enough and what is conversion continues.",
                    "label": 0
                },
                {
                    "sent": "And typically, in evolutionary algorithms you have three phases which you can see quite clearly in #3.",
                    "label": 0
                },
                {
                    "sent": "Sorry in figure B.",
                    "label": 0
                },
                {
                    "sent": "The first phase goes down very quickly.",
                    "label": 0
                },
                {
                    "sent": "Because you're solving all the quick and easy constraints.",
                    "label": 0
                },
                {
                    "sent": "The second phase you see a change in the graph and you're trying to exploit what you have found and to improve on it.",
                    "label": 0
                },
                {
                    "sent": "And the third phase is where it goes flat and you get.",
                    "label": 0
                },
                {
                    "sent": "Basically it's very hard to solve the final bits of the of the of the query.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so then we made some improvements which is published in the same conference.",
                    "label": 0
                },
                {
                    "sent": "So we changed evolutionary operators.",
                    "label": 0
                },
                {
                    "sent": "And we changed implementation a lot because the implementation was also.",
                    "label": 0
                },
                {
                    "sent": "Have some improvement and as you can see we improve a lot in terms of reaching fitness quickly.",
                    "label": 0
                },
                {
                    "sent": "Now higher is better, by the way.",
                    "label": 0
                },
                {
                    "sent": "We also yeah, sorry.",
                    "label": 0
                },
                {
                    "sent": "And on the 4th data you can now very clearly see these three phases.",
                    "label": 0
                },
                {
                    "sent": "Of devolution but still this.",
                    "label": 0
                },
                {
                    "sent": "These results are not competitive with let's say a sparkle engine like Sesame.",
                    "label": 0
                },
                {
                    "sent": "The point I want to make is that this is an interesting essay.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Sides to try to do it in this way.",
                    "label": 0
                },
                {
                    "sent": "So for the future.",
                    "label": 0
                },
                {
                    "sent": "I will look we are looking at how to actually deal with this unordered domains because this is a major problem.",
                    "label": 0
                },
                {
                    "sent": "The domains, they're just terms.",
                    "label": 0
                },
                {
                    "sent": "They have no relation to each other.",
                    "label": 0
                },
                {
                    "sent": "And we're looking at different evolutionary techniques.",
                    "label": 0
                },
                {
                    "sent": "So here we are using genetic algorithms and we're looking maybe at something like Swarm optimizations.",
                    "label": 0
                },
                {
                    "sent": "And how do you actually evaluate the quality of your result?",
                    "label": 0
                },
                {
                    "sent": "So how do you know that a higher fitness means the result is more useful and this is a very hard hard problem.",
                    "label": 0
                },
                {
                    "sent": "Anne.",
                    "label": 0
                },
                {
                    "sent": "So Many thanks.",
                    "label": 0
                },
                {
                    "sent": "I will stop here.",
                    "label": 0
                },
                {
                    "sent": "I will just leave the conclusion here so you can read them and you can ask me any questions.",
                    "label": 0
                },
                {
                    "sent": "So I'm a bit confused about how easy it is to paralyse evolutionary algorithms.",
                    "label": 0
                },
                {
                    "sent": "So if you put different parts of the population on different nodes, how do you do crossover and mutation?",
                    "label": 0
                },
                {
                    "sent": "And yeah, this is a good point.",
                    "label": 0
                },
                {
                    "sent": "So what the standard technique is you you group them into what you called teams which are sets of individuals.",
                    "label": 0
                },
                {
                    "sent": "So let's say I have 500 individuals, so I make 50 in each team and is 50 or run across different nodes.",
                    "label": 0
                },
                {
                    "sent": "And in each team they do their evolution for some iterations.",
                    "label": 0
                },
                {
                    "sent": "After that they go out and they do.",
                    "label": 0
                },
                {
                    "sent": "For example, crossover with somebody in another.",
                    "label": 0
                },
                {
                    "sent": "So you of course you still have to have communication.",
                    "label": 0
                },
                {
                    "sent": "But you have less communication, so you can do a lot locally and once in a while you go outside.",
                    "label": 0
                },
                {
                    "sent": "OK, thank you, but I have to say we did not do this distributed yet on the nodes.",
                    "label": 0
                },
                {
                    "sent": "So this is the theoretical benefit.",
                    "label": 0
                },
                {
                    "sent": "Hey, how you say still with this much slower than Sesame or a bit slower or something like this.",
                    "label": 0
                },
                {
                    "sent": "But it also depends on the scale, because this approach that you show is actually.",
                    "label": 0
                },
                {
                    "sent": "Should benefit more if you go in the web scale direction, where Sesame probably won't answer factoria.",
                    "label": 0
                },
                {
                    "sent": "Yeah, this is I mean on the one hand, yes.",
                    "label": 0
                },
                {
                    "sent": "On the other hand, no.",
                    "label": 0
                },
                {
                    "sent": "On the one hand, we have a problem that if the if the data gets very large.",
                    "label": 0
                },
                {
                    "sent": "And if the number of individuals in it, it's on a number of terms gets very large.",
                    "label": 0
                },
                {
                    "sent": "Then it the problem for us also gets more and more and more complicated because you have to make these guesses again.",
                    "label": 0
                },
                {
                    "sent": "The other thing is that if the query gets very large, this does not necessarily introduce many problems for us because our individuals are linear in a number of variables and we don't have this this nested loops, so we do.",
                    "label": 0
                },
                {
                    "sent": "We do a full guest of a full assignment and if the query is very large.",
                    "label": 0
                },
                {
                    "sent": "But let's say with the same number of variables, this doesn't hinder us as much as you would have in a traditional setting.",
                    "label": 0
                },
                {
                    "sent": "Yeah, but in the in the in the paper do you wear when you made the evaluation?",
                    "label": 0
                },
                {
                    "sent": "I mean, did you really make it for different?",
                    "label": 0
                },
                {
                    "sent": "Let's say scales?",
                    "label": 0
                },
                {
                    "sent": "Yeah yeah, and the best to read it into some paper because the evaluation results in some paper clear and we put more details there.",
                    "label": 0
                },
                {
                    "sent": "I have a couple of questions first.",
                    "label": 0
                },
                {
                    "sent": "Have you thought about preprocessing data or or do you have some plans to do that in order to improve?",
                    "label": 0
                },
                {
                    "sent": "In some ways the fitness function, I mean, for me it's like OK, it's it's reasonable to expect the fitness function as the one you're showing, but maybe you can extract some information based on the at the moment.",
                    "label": 0
                },
                {
                    "sent": "When you're inserting data into the database or or something, and my second question is.",
                    "label": 0
                },
                {
                    "sent": "I know this is a very preliminary work, but.",
                    "label": 0
                },
                {
                    "sent": "It would be interesting to see how much time does it take for even even not a very complex query, but but it would be interesting that.",
                    "label": 0
                },
                {
                    "sent": "OK, so the second question first, it was an omission in this paper, and so in some paper we actually have runtime, so timing results.",
                    "label": 0
                },
                {
                    "sent": "But I can tell you for simple queries it takes something like a couple of seconds.",
                    "label": 0
                },
                {
                    "sent": "For simple queries on small datasets or these are datasets, let's say of 500,000 to a couple of million into graph, the size of the graph triples the first question we are looking at different ways of computing the fitness function and this is what I said to you to sewing the weights, which means you are adopting the fitness function.",
                    "label": 0
                },
                {
                    "sent": "While you're running, so while you're running, you see that some constraints are harder to satisfy, so you give more points to these constraints, so you waiting the constraints, they don't all.",
                    "label": 0
                },
                {
                    "sent": "Give you equal bonus.",
                    "label": 0
                },
                {
                    "sent": "Some are harder to solve apparently, so you give them more weights and this is a way to dynamically change the weights depending on how good your evolution is running.",
                    "label": 0
                },
                {
                    "sent": "Another way is what you're saying is to do.",
                    "label": 0
                },
                {
                    "sent": "For example, the statistical analysis on the data and then set the weights before hand.",
                    "label": 0
                },
                {
                    "sent": "We thought about that as well, but we want to try this sewing dynamically first.",
                    "label": 0
                },
                {
                    "sent": "OK thank you, thanks.",
                    "label": 0
                },
                {
                    "sent": "OK, maybe one last question.",
                    "label": 0
                },
                {
                    "sent": "So you said basically this guessing of the value seems to be a random process complete, wouldn't it?",
                    "label": 0
                },
                {
                    "sent": "On the per triple basis?",
                    "label": 0
                },
                {
                    "sent": "Be better to use vlookups.",
                    "label": 0
                },
                {
                    "sent": "Yeah yeah yes, I know so.",
                    "label": 0
                },
                {
                    "sent": "I said there is like a Gray area going for a completely only membership testing to something completely pre indexed and we already index a little bit.",
                    "label": 0
                },
                {
                    "sent": "Namely we look at where these elements occur in the graph and we could also index more.",
                    "label": 0
                },
                {
                    "sent": "And the more you index, the better your guessing becomes, but the more space and time it has also before hand.",
                    "label": 0
                },
                {
                    "sent": "So this is something we have to find out as to what makes sense.",
                    "label": 0
                },
                {
                    "sent": "But the guessing is not.",
                    "label": 0
                },
                {
                    "sent": "The guessing typically should not be random.",
                    "label": 0
                },
                {
                    "sent": "The guessing is random because the domain is unordered.",
                    "label": 0
                },
                {
                    "sent": "So and this is a problem because of course you can order them for example lexicographically, but this order doesn't mean anything.",
                    "label": 0
                },
                {
                    "sent": "So if we can find a way to order the terms in the graph in some way.",
                    "label": 0
                },
                {
                    "sent": "Then the evolution improves alot.",
                    "label": 0
                },
                {
                    "sent": "So if you just guessed 4th nose and now you can get something else in the form of namespace, know if that would make any sense then the evolution could improve.",
                    "label": 0
                },
                {
                    "sent": "OK thanks.",
                    "label": 0
                }
            ]
        }
    }
}