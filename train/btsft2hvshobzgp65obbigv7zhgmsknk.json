{
    "id": "btsft2hvshobzgp65obbigv7zhgmsknk",
    "title": "Semantic Scraping: How to beat Sindice in 2 days for $20",
    "info": {
        "author": [
            "Joshua Wulf, Red Hat"
        ],
        "published": "July 4, 2012",
        "recorded": "May 2012",
        "category": [
            "Top->Computer Science->Semantic Web"
        ]
    },
    "url": "http://videolectures.net/eswc2012_wulf_scraping/",
    "segmentation": [
        [
            "So our presentation is called semantic scraping or how to beat Cindy J."
        ],
        [
            "This is gonna work in two days.",
            "And for $20, which is the approximate cost of the coffee that we had to drink while we were doing this.",
            "So basically the idea is that can we find a kind of low cost easy way to get high volume or comparable volume of semantic search results to sindici?"
        ],
        [
            "By piggybacking off Google, which is the direction that Danny sent us down, Denny was our tutor.",
            "We originally had a completely different idea about some grandiose social integration thing, but we tried to hit something a little bit more obtainable within this period of time.",
            "So the idea is that basically we use Google search results.",
            "We scrape the results that they give us an, then we mind those for semantic facts and see if we can get something comparable to what we would get from sindici.",
            "So it seemed pretty straightforward.",
            "We were going to use the Google."
        ],
        [
            "Rest API, say."
        ],
        [
            "Mass.org for your eye disambiguation, or maybe that's not the technical term, but getting the same as you are."
        ],
        [
            "And a service called any 23 which can convert any kind of HTML page.",
            "It'll scrape out any semantic facts that are in there in either IDF form microdata or microformats.",
            "And then we're going to put into the album store an use the inferencing there and the sparkle endpoint to do the querying.",
            "So that was the original architectural design."
        ],
        [
            "The first thing that went wrong was that Google don't allow you to get access to the search results unless you look at the advertising."
        ],
        [
            "And then sameas.org has a lot of kind of rubbish noise."
        ],
        [
            "In there from.",
            "This, for example, of the ur eyes that are supposedly the same as Lady Gaga and you can see that a lot of them are albums or yeah.",
            "All kinds of things, different entities that have been made the same as her in there, so that wasn't so useful to us.",
            "We managed to get around that."
        ],
        [
            "Because I Gustavo went through an manually selected DRI so we were hoping to do it programmatically, we would just pull them down and it would be a reproducible.",
            "Procedure that we could use, but it requires the action of a human to actually figure out which of your eyes should be the same as Google.",
            "We managed to get around.",
            "It's kind of.",
            "It was kind of difficult.",
            "the Google search results.",
            "The URLs are obfuscated on the page, so you can't just grab them off the actual page itself.",
            "The search results are not HTML.",
            "There are Jason object inside JavaScript on the page, so you can't save the page or anything like that.",
            "But we did manage to get around it by writing something that manipulates the job."
        ],
        [
            "The script an then cutting and pasting, so we ended up with this kind of architectural design.",
            "And we we ran 5K."
        ],
        [
            "So we query create we do."
        ],
        [
            "The Olympic Games we did."
        ],
        [
            "Lady Gaga"
        ],
        [
            "We search for Barry Norton."
        ],
        [
            "Which there are two famous ones?",
            "There's the Barry Norton that we all know and love.",
            "And then there's another Barry Naughton, who you can't see very well here who is an Argentinian actor from the early 1900s."
        ],
        [
            "Yeah, well, according to same as actually they are.",
            "And then we search for Dan Brickley."
        ],
        [
            "So we have our five searches create Olympic Games.",
            "Lady Gaga, Barry Norton and Dan Brickley and what we did is we.",
            "We did search depth so we search them to the Google search results.",
            "102 hundred 304 hundred 500.",
            "We wanted to find out what the total number of semantic facts we could get, where an what the distribution over the Google search results were."
        ],
        [
            "So in essence, we wanted to see how many semantic facts can we find in a Google search."
        ],
        [
            "So we scraped the Google search results.",
            "We extract the triples using any 23, any to three.",
            "We upload them to the store."
        ],
        [
            "We get a Uri from somewhere.",
            "Either we start.",
            "How do we get the ur eyes?",
            "We started with DB pedia.",
            "Yeah, when there was a Uri available on DB pedia, we use that.",
            "Otherwise we just Google Dan grab the first URL that we could find for them.",
            "So find your eyes that are the same at sameas.org and then we asserted same as on the store to get the inferencing to happen."
        ],
        [
            "So there's a little looks like in a nice flow chart there could have had a lamppost.",
            "So we got 2500 web pages.",
            "That's five searches times, 500 search results, and in that there were about 90 namespaces.",
            "It's kind of hard for us to figure out exactly how many there were, because the any 2 three service generates some metadata for the page when you send it there.",
            "If you send a page with no metadata, it sends you back some RDF triples that describe the page, so it'll give you a DC title and have the title of the page in there.",
            "The other thing is that some people are using different URLs for the same.",
            "Namespace so it'll be an FB namespace and someone will have a URL with a slash on the end.",
            "Someone doesn't have a slash on the and so we could have cleaned that up a little bit more with some more coding, but we didn't have time."
        ],
        [
            "For that so we got onto fact extraction."
        ],
        [
            "We are.",
            "We look for the Uri is the subject and we also look for your eyes.",
            "The object that was our definition of affect about about our entity, so every simple sparkle queries.",
            "So."
        ],
        [
            "To create we, we ran the query we got back 10 as the subject and 10 is the object which is the number of same as your eyes that we put in.",
            "So in other words we got nothing so nothing for great at any depth and comparing that to send each a leg."
        ],
        [
            "What?",
            "Four and a half thousand, so we didn't do too good on that first one."
        ],
        [
            "For the Olympics, we got a similar kind of result.",
            "We got back the same as triples that we put in an nothing else.",
            "And."
        ],
        [
            "DJ got 11,000."
        ],
        [
            "So we did a little bit better for Lady Gaga.",
            "We got back our 15 same as triples that we put in there and actually Lady Gaga is an interesting one because in examining the raw data for that we found that Wikipedia for example had a business card for Lady Gaga on their page, but it was linked to a blank node so there was no way that we could.",
            "You know programmatically link that data to our entity.",
            "So we discussed the idea of for a future you know heuristically examining the semantic facts that are present and doing like a confidence matching to our entity based on the properties, the kind of thing that Matthew did in his tutorial.",
            "And so we did better here than Cindy."
        ],
        [
            "Because they were only able to find 3 facts about her.",
            "And there's no need for us to go into the details of exactly the methodology we used to derive that number.",
            "But that was the result we got.",
            "We beat them there.",
            "I think we plugged in one of the our eyes from same as rather than searching for all of them for their."
        ],
        [
            "Barry Norton Here's where we started to actually get some semantic facts from Google on the front page of Google.",
            "The first 100 results we got 160 with barriers, the subject, and about 100 with him as the object, and then that was across the board.",
            "The same result to find depth of 500, we found another fact about Barry at about a depth of 300 and that was it.",
            "It was pretty much all on the front page.",
            "Yeah, what you see is what you get.",
            "Um?"
        ],
        [
            "When we did the Dan Brickley when we did the Dan Brickley search we got an interesting result.",
            "We got a number, a bunch of facts on the front page just as we."
        ],
        [
            "For Barry, then, at a depth of 200 we got a few more facts."
        ],
        [
            "300 looked like it had leveled out, but then Sud?"
        ],
        [
            "Only at a depth of 400.",
            "We found a lot of facts about Dan where he is the object and then had a debt."
        ],
        [
            "Of 500 a lot of facts where Dan is actually the subject.",
            "So I'm not sure exactly what kind of conclusions we can draw from that.",
            "Perhaps Dan is a mysterious person.",
            "Very reserved but full of hidden depths.",
            "And it's not.",
            "It didn't make it into the slides, but late breaking news is that Cindy J can only find 37, so this isn't a place where we actually managed to outperform Google and I don't even.",
            "I don't know how to interpret that, but that's.",
            "An interesting result so."
        ],
        [
            "Thanks to Danny or tutor for putting us on that path and also to Barry and Aiden, who helped us out a lot along the way with the practical mechanics of the thing.",
            "Thank you."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So our presentation is called semantic scraping or how to beat Cindy J.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This is gonna work in two days.",
                    "label": 0
                },
                {
                    "sent": "And for $20, which is the approximate cost of the coffee that we had to drink while we were doing this.",
                    "label": 0
                },
                {
                    "sent": "So basically the idea is that can we find a kind of low cost easy way to get high volume or comparable volume of semantic search results to sindici?",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "By piggybacking off Google, which is the direction that Danny sent us down, Denny was our tutor.",
                    "label": 0
                },
                {
                    "sent": "We originally had a completely different idea about some grandiose social integration thing, but we tried to hit something a little bit more obtainable within this period of time.",
                    "label": 0
                },
                {
                    "sent": "So the idea is that basically we use Google search results.",
                    "label": 0
                },
                {
                    "sent": "We scrape the results that they give us an, then we mind those for semantic facts and see if we can get something comparable to what we would get from sindici.",
                    "label": 0
                },
                {
                    "sent": "So it seemed pretty straightforward.",
                    "label": 0
                },
                {
                    "sent": "We were going to use the Google.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Rest API, say.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Mass.org for your eye disambiguation, or maybe that's not the technical term, but getting the same as you are.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And a service called any 23 which can convert any kind of HTML page.",
                    "label": 0
                },
                {
                    "sent": "It'll scrape out any semantic facts that are in there in either IDF form microdata or microformats.",
                    "label": 0
                },
                {
                    "sent": "And then we're going to put into the album store an use the inferencing there and the sparkle endpoint to do the querying.",
                    "label": 0
                },
                {
                    "sent": "So that was the original architectural design.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The first thing that went wrong was that Google don't allow you to get access to the search results unless you look at the advertising.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And then sameas.org has a lot of kind of rubbish noise.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "In there from.",
                    "label": 0
                },
                {
                    "sent": "This, for example, of the ur eyes that are supposedly the same as Lady Gaga and you can see that a lot of them are albums or yeah.",
                    "label": 0
                },
                {
                    "sent": "All kinds of things, different entities that have been made the same as her in there, so that wasn't so useful to us.",
                    "label": 0
                },
                {
                    "sent": "We managed to get around that.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Because I Gustavo went through an manually selected DRI so we were hoping to do it programmatically, we would just pull them down and it would be a reproducible.",
                    "label": 0
                },
                {
                    "sent": "Procedure that we could use, but it requires the action of a human to actually figure out which of your eyes should be the same as Google.",
                    "label": 0
                },
                {
                    "sent": "We managed to get around.",
                    "label": 0
                },
                {
                    "sent": "It's kind of.",
                    "label": 0
                },
                {
                    "sent": "It was kind of difficult.",
                    "label": 0
                },
                {
                    "sent": "the Google search results.",
                    "label": 0
                },
                {
                    "sent": "The URLs are obfuscated on the page, so you can't just grab them off the actual page itself.",
                    "label": 0
                },
                {
                    "sent": "The search results are not HTML.",
                    "label": 0
                },
                {
                    "sent": "There are Jason object inside JavaScript on the page, so you can't save the page or anything like that.",
                    "label": 0
                },
                {
                    "sent": "But we did manage to get around it by writing something that manipulates the job.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The script an then cutting and pasting, so we ended up with this kind of architectural design.",
                    "label": 0
                },
                {
                    "sent": "And we we ran 5K.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So we query create we do.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The Olympic Games we did.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Lady Gaga",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We search for Barry Norton.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Which there are two famous ones?",
                    "label": 0
                },
                {
                    "sent": "There's the Barry Norton that we all know and love.",
                    "label": 0
                },
                {
                    "sent": "And then there's another Barry Naughton, who you can't see very well here who is an Argentinian actor from the early 1900s.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Yeah, well, according to same as actually they are.",
                    "label": 0
                },
                {
                    "sent": "And then we search for Dan Brickley.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So we have our five searches create Olympic Games.",
                    "label": 0
                },
                {
                    "sent": "Lady Gaga, Barry Norton and Dan Brickley and what we did is we.",
                    "label": 1
                },
                {
                    "sent": "We did search depth so we search them to the Google search results.",
                    "label": 0
                },
                {
                    "sent": "102 hundred 304 hundred 500.",
                    "label": 0
                },
                {
                    "sent": "We wanted to find out what the total number of semantic facts we could get, where an what the distribution over the Google search results were.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So in essence, we wanted to see how many semantic facts can we find in a Google search.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So we scraped the Google search results.",
                    "label": 1
                },
                {
                    "sent": "We extract the triples using any 23, any to three.",
                    "label": 0
                },
                {
                    "sent": "We upload them to the store.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We get a Uri from somewhere.",
                    "label": 0
                },
                {
                    "sent": "Either we start.",
                    "label": 0
                },
                {
                    "sent": "How do we get the ur eyes?",
                    "label": 0
                },
                {
                    "sent": "We started with DB pedia.",
                    "label": 0
                },
                {
                    "sent": "Yeah, when there was a Uri available on DB pedia, we use that.",
                    "label": 0
                },
                {
                    "sent": "Otherwise we just Google Dan grab the first URL that we could find for them.",
                    "label": 0
                },
                {
                    "sent": "So find your eyes that are the same at sameas.org and then we asserted same as on the store to get the inferencing to happen.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So there's a little looks like in a nice flow chart there could have had a lamppost.",
                    "label": 0
                },
                {
                    "sent": "So we got 2500 web pages.",
                    "label": 0
                },
                {
                    "sent": "That's five searches times, 500 search results, and in that there were about 90 namespaces.",
                    "label": 0
                },
                {
                    "sent": "It's kind of hard for us to figure out exactly how many there were, because the any 2 three service generates some metadata for the page when you send it there.",
                    "label": 0
                },
                {
                    "sent": "If you send a page with no metadata, it sends you back some RDF triples that describe the page, so it'll give you a DC title and have the title of the page in there.",
                    "label": 0
                },
                {
                    "sent": "The other thing is that some people are using different URLs for the same.",
                    "label": 0
                },
                {
                    "sent": "Namespace so it'll be an FB namespace and someone will have a URL with a slash on the end.",
                    "label": 0
                },
                {
                    "sent": "Someone doesn't have a slash on the and so we could have cleaned that up a little bit more with some more coding, but we didn't have time.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "For that so we got onto fact extraction.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We are.",
                    "label": 0
                },
                {
                    "sent": "We look for the Uri is the subject and we also look for your eyes.",
                    "label": 0
                },
                {
                    "sent": "The object that was our definition of affect about about our entity, so every simple sparkle queries.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "To create we, we ran the query we got back 10 as the subject and 10 is the object which is the number of same as your eyes that we put in.",
                    "label": 0
                },
                {
                    "sent": "So in other words we got nothing so nothing for great at any depth and comparing that to send each a leg.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "What?",
                    "label": 0
                },
                {
                    "sent": "Four and a half thousand, so we didn't do too good on that first one.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "For the Olympics, we got a similar kind of result.",
                    "label": 0
                },
                {
                    "sent": "We got back the same as triples that we put in an nothing else.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "DJ got 11,000.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So we did a little bit better for Lady Gaga.",
                    "label": 1
                },
                {
                    "sent": "We got back our 15 same as triples that we put in there and actually Lady Gaga is an interesting one because in examining the raw data for that we found that Wikipedia for example had a business card for Lady Gaga on their page, but it was linked to a blank node so there was no way that we could.",
                    "label": 0
                },
                {
                    "sent": "You know programmatically link that data to our entity.",
                    "label": 0
                },
                {
                    "sent": "So we discussed the idea of for a future you know heuristically examining the semantic facts that are present and doing like a confidence matching to our entity based on the properties, the kind of thing that Matthew did in his tutorial.",
                    "label": 0
                },
                {
                    "sent": "And so we did better here than Cindy.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Because they were only able to find 3 facts about her.",
                    "label": 0
                },
                {
                    "sent": "And there's no need for us to go into the details of exactly the methodology we used to derive that number.",
                    "label": 0
                },
                {
                    "sent": "But that was the result we got.",
                    "label": 0
                },
                {
                    "sent": "We beat them there.",
                    "label": 0
                },
                {
                    "sent": "I think we plugged in one of the our eyes from same as rather than searching for all of them for their.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Barry Norton Here's where we started to actually get some semantic facts from Google on the front page of Google.",
                    "label": 1
                },
                {
                    "sent": "The first 100 results we got 160 with barriers, the subject, and about 100 with him as the object, and then that was across the board.",
                    "label": 0
                },
                {
                    "sent": "The same result to find depth of 500, we found another fact about Barry at about a depth of 300 and that was it.",
                    "label": 0
                },
                {
                    "sent": "It was pretty much all on the front page.",
                    "label": 0
                },
                {
                    "sent": "Yeah, what you see is what you get.",
                    "label": 0
                },
                {
                    "sent": "Um?",
                    "label": 0
                }
            ]
        },
        "clip_31": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "When we did the Dan Brickley when we did the Dan Brickley search we got an interesting result.",
                    "label": 0
                },
                {
                    "sent": "We got a number, a bunch of facts on the front page just as we.",
                    "label": 0
                }
            ]
        },
        "clip_32": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "For Barry, then, at a depth of 200 we got a few more facts.",
                    "label": 0
                }
            ]
        },
        "clip_33": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "300 looked like it had leveled out, but then Sud?",
                    "label": 0
                }
            ]
        },
        "clip_34": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Only at a depth of 400.",
                    "label": 0
                },
                {
                    "sent": "We found a lot of facts about Dan where he is the object and then had a debt.",
                    "label": 0
                }
            ]
        },
        "clip_35": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Of 500 a lot of facts where Dan is actually the subject.",
                    "label": 0
                },
                {
                    "sent": "So I'm not sure exactly what kind of conclusions we can draw from that.",
                    "label": 0
                },
                {
                    "sent": "Perhaps Dan is a mysterious person.",
                    "label": 0
                },
                {
                    "sent": "Very reserved but full of hidden depths.",
                    "label": 0
                },
                {
                    "sent": "And it's not.",
                    "label": 0
                },
                {
                    "sent": "It didn't make it into the slides, but late breaking news is that Cindy J can only find 37, so this isn't a place where we actually managed to outperform Google and I don't even.",
                    "label": 0
                },
                {
                    "sent": "I don't know how to interpret that, but that's.",
                    "label": 0
                },
                {
                    "sent": "An interesting result so.",
                    "label": 0
                }
            ]
        },
        "clip_36": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Thanks to Danny or tutor for putting us on that path and also to Barry and Aiden, who helped us out a lot along the way with the practical mechanics of the thing.",
                    "label": 0
                },
                {
                    "sent": "Thank you.",
                    "label": 0
                }
            ]
        }
    }
}