{
    "id": "rln2whvsyghcy6z5bydmm554v7emoreq",
    "title": "HELIOS - Execution Optimization for Link Discovery",
    "info": {
        "author": [
            "Axel-Cyrille Ngonga Ngomo, University of Leipzig"
        ],
        "published": "Dec. 19, 2014",
        "recorded": "October 2014",
        "category": [
            "Top->Computer Science->Semantic Web"
        ]
    },
    "url": "http://videolectures.net/iswc2014_ngonga_ngomo_helios/",
    "segmentation": [
        [
            "Thank you all for being here for having me for those who do not know me, you can simply call me Axl I'm from the investor of Leipzig in Germany and I'm going to talk about execution optimization for link Discovery, and I want to take the previous speaker for making clear how difficult it actually is.",
            "The findings across knowledge bases."
        ],
        [
            "So why do we actually need link discovery?",
            "As pointed out before, it is not only the 4th link, it our principle is also central.",
            "You went really want to use data for complex tasks such as cross ontology, question answering, data integration, reasoning, Federated queries across different knowledge bases and so on and so forth.",
            "You basically need to need those links to run complex applications and if you look at the current topology of their linked open data cloud, you'll basically see that we have tons and tons of triples, but quite a small amount.",
            "Of links, so we basically need time efficient link discover approaches to address this prob."
        ],
        [
            "Now West when I see Link discovery, what do I mean exactly?",
            "Technically we say we assume that we are giving two sets a set S of source resources that T of target resources and a certain relation are and what we're looking for is to set M. That is such that is a set of pairs from S * T. That is such that R holds between S&T.",
            "Now this is."
        ],
        [
            "Obviously a quadratic problem a priori and it is definitely too tedious to have people doing manually, so you don't want to take turns humans into coding monkeys that click on buttons to evaluate links you don't want that, so you want to have approaches that basically work well and efficiently."
        ],
        [
            "And and what most people then do to approximate this set M is the computer set in prime and this M prime is basically a set of Paris St. Again, that is such that the similarity between the S&T in that set are larger than a certain threshold Tetteh.",
            "Now when I say similarity, that might sound like just a function, but in."
        ],
        [
            "Are all these similarities are complex similarities that we can represent us bipartite trees?",
            "Example similarity shows how we compute with high accuracy the links between movies say from DB, pedia and link MDB.",
            "What we do is we compare the title.",
            "So the way you read this is that you see OK if the cosine of the title is larger or equal to 0.55 and the sit there names of the directors.",
            "So basically the Jakarta marimba directors.",
            "Is larger equal to 0.62, or the trigram similarity of your titles is larger or equal to 0.95 and then you filter out the results.",
            "Here you basically say OK, then I will accept this thing as a link between the two movies.",
            "This is this is central.",
            "So basically we use these complex graphs to actually encode these similarity functions and our refer to this blue nodes as filters because they do nothing's done taking.",
            "A subset of S * T or the whole of S * T and return a subset of that, and the operators basically allow us to combine the outputs of filters and will call the output of filters mappings, just to make that."
        ],
        [
            "Their names are clear, So what are the difficult tasks here?",
            "We have actually two that are difficult.",
            "We're only going to look at one.",
            "The first one is actually finding such trees.",
            "Such huge tree structures that actually return links with a high accuracy, which means with a high precision and high recall.",
            "Now there are several solutions based on machine learning that do that.",
            "You can look at literature approaches that rely on unsupervised machine learning on active learning, unsupervised machine learning and so on.",
            "But that's not what we're going to be concern."
        ],
        [
            "With The thing is what we have as a problem is even when we have this new specifications that work well, we still have to run them and we have to run them on large datasets.",
            "So what we want to do is actually to be able to run them fast.",
            "It is clear that the problem is quadratic appearing in complexity and in the body of literature that we already have.",
            "Most approaches are focused on being able to run single filters efficiently.",
            "So basically we have time efficient approaches out there.",
            "Such as people join plus for example, that can run a single Jack.",
            "Our comparison for use datasets really fast.",
            "Now the question at hand and the question that retiring this paper is how do we actually run whole specifications efficiently?",
            "And that's what we need Helius as a planner."
        ],
        [
            "4.",
            "So the goal of failures.",
            "The goal of our planner is to optimize the runtime of whole specifications.",
            "And we do so by two steps we have every writing algorithm that can take a huge specification and basically transform it into an equivalent specification.",
            "That is, we hope smaller and more efficient to run.",
            "And when I say a specification is equivalent to another one, what I mean is that for any given S&T, the two specifications return exactly the same results.",
            "Then we call these two.",
            "Excellent.",
            "Once we have the specification, so once we've rewritten it, what we want to do in the second step is actually optimized or runtime, and I'll tell you how we do that.",
            "So basically, if you look at these two specifications and you think about it, you realize that the two actually equivalent behalf quite different shapes.",
            "No question is obviously which of these two shapes is actually the one that runs fast."
        ],
        [
            "So how do we write specifications?",
            "That's the first question.",
            "We develop it three step approach for this purpose.",
            "The first step being elite generation step, the second step being dependency detection and propagation and the third step being gender reduction step and I will explain how this works and I'll use these specifications as a running example to show you how we can get from this big thing to do small thing."
        ],
        [
            "Over here.",
            "OK, what is leaf generation?",
            "As I've said before, we already have algorithms that are able to run atomic similarities really fast.",
            "So what we want to do is when given the specification to actually transform into specification that is such as the leaves of the specifications actually contain only atomic measures.",
            "The main advantage being that we can reuse the body of literature to run fast on the leaves and then have linear time operators that can then combine these results and then return results more efficiently.",
            "So we've defined a set of rules that do that.",
            "If you look at this particular Rd is my favorite, 'cause it's kind of counter intuitive.",
            "If you look at this rule, it only has one filter or this specification.",
            "You only have one filter and it basically says what you need to do is take the linear combination of M1 and M2 and compare that to a certain threshold.",
            "And what we do is we transform that into this specification, which has actually more nodes.",
            "But if you look at the leaves you will see that they contain all the M1 and M2, which basically means we can run time efficient algorithms.",
            "On M1 and UM 2 then combine the results using a linear intersection filter and then filter out the results.",
            "Then using these complex combination for which we do not have time efficient algorithms.",
            "And if you actually compare the runtimes of these two here, you would basically be forced to use a quadratic runtime approach and here you can basically use their approaches to run faster.",
            "In general this runs faster than this thing alone, so this is one of the rules obviously there."
        ],
        [
            "Other rules, for example, if you have the minimum of two measures that must be larger equal to terror, you could use an intersection to model that."
        ],
        [
            "And for the maximum, you can use a union.",
            "So plenty of rules of these type.",
            "Based on that we can actually basically take the complex measures that were given and transformed into trees that are such that the leaves contain only atomic measures now."
        ],
        [
            "Now that we have such leaves, what we want to do is actually ask ourselves which of the mappings that are generated by the links actually subsets of each other.",
            "Because if we know that we have subset relations, we can actually get rid of some of the computations.",
            "That's kind of the idea.",
            "Here we call 2 specifications or basically 2 sub specifications dependent if and we don't know."
        ],
        [
            "That depends on one or two.",
            "Before SNL Ortiz.",
            "The result of L1 will always be a subset of the result of our two.",
            "It is quite obvious that this holds for M31 and M. Tele 2 went into one is larger or equal to two.",
            "That's pretty straightforward, but what we know is that we also have relations between the different similarity measures that have been used in literature.",
            "For example, the Jackass similarity and overlap similarity, although they may not look like that related actually related via this particular equation that's been shown.",
            "Any people backside all in 2008.",
            "So what we can actually do is if you are given the specification Jack are tide to a larger equal to 0.9 and overlap title larger equal to 0.9 and do you know of that?",
            "We can actually ready.",
            "See actually we have independence between these two results now."
        ],
        [
            "How do we exploit that?",
            "We exploit that by propagating the dependencies across the tree.",
            "So if you give."
        ],
        [
            "In this example, maybe have M4 entry, an intersection, and we know that imported foreign M3 to three depend on M2 Tele two.",
            "What we can actually do is transfer the specification via operator an actual."
        ],
        [
            "We see that out of this we can actually infer that M. 110 or one depends on M2 Tele 2.",
            "So basically we propagate these dependencies across the tree and we do so until we reach a fixed point.",
            "That is until we cannot propagate any further."
        ],
        [
            "Now comes the third step.",
            "We actually make use of the information that we know that some of the mappings are subset of other mappings.",
            "To actually get rid of some computations so."
        ],
        [
            "We go back to our example.",
            "We basically see that we have M2 Dollar 2 and M12 one connected via dependency and we're supposed to compute the Union of that and filtered out and feel better result using M 0 to 0.",
            "Now if we know that one is a subset of the other, so that M1.",
            "Terra one.",
            "The output of that is a subset of empty Tele 2.",
            "Then actually we can say we don't need to compute M1 Tele one or we need to do is computer computer to the result of M1 Terra One is going to be in there anyway.",
            "We are sure that that is the case."
        ],
        [
            "So we can throw out actually quite a bit of computation over here and only compute empty trailer 2 and send that to the filter M 0 to 0 and Red Dawn, so we can reduce the runtimes that way.",
            "So that's the first thing we do.",
            "We rewrite the specifications.",
            "The second thing that we do once we have the region specifications is we want to learn or relearn.",
            "We want to figure out how to run them efficiently."
        ],
        [
            "And that is the whole idea behind the planner.",
            "So what the planner does is it tries to derive equivalent and compete riveting specifications.",
            "Now what we call complete specifications are simplification or plans to be more precise.",
            "Our plans are that would return exactly the same results as the Canonical plan, which is the plan that you get when you simply traverse the specification in the order left root, right?",
            "So we."
        ],
        [
            "Have a plan evolution.",
            "That's what we need to detect good plans and we need a heuristic to reduce the number of plans to evaluate simply because this problem is exponential in complexity and the important thing is that I'm sure you can see that this is quite.",
            "This is kind of similar to what you were doing.",
            "Databases for career planning, but they usually have statistics about the data in the database here.",
            "You don't have statistics, so you basically have to use a priore guesses or a priori computations, and once the data comes in you have to run on that as efficiently as you can.",
            "OK, so we have two evaluation functions.",
            "One is the runtime, the second one is the selectivity and I'm just going."
        ],
        [
            "Give you an idea of how we compute.",
            "Try to evaluate the runtime of a specification.",
            "What we've done is we've basically looked at strings of different lengths that come from human language.",
            "That is from DB pedia.",
            "To be more specific than that for different languages.",
            "So when the data comes in, we try to guess in which language is this data.",
            "That kind of strings that we have to compare, and we basically look up simply in the output of a linear regression model to basically say this computation is most probably going to last this long."
        ],
        [
            "And we do something similar for selectivity.",
            "So once, if once because we had sample data, we actually know these are the sizes of the datasets that we had as input.",
            "This how much came out of it.",
            "Out of that, we computed selectivity and we can approximate the selectivity of plants again using a linear regression algorithm just to give you an idea."
        ],
        [
            "And the way we then optimize the plans is actually quite straightforward.",
            "If the specification is atomic, we simply return the equivalent atomic plan, and if we have operators, the computer plan for the left specification for the right specification, and then we have different possibilities for combining two plants.",
            "In general, we have five.",
            "I'm just going to show you."
        ],
        [
            "23.com about when we look at intersections.",
            "For example, here you have physical choice between running L1, then running L2 and then computing intersection of the mappings on filtering.",
            "Or you run L2 and then you filter the results using at one and then you feel a lot of results using antera or you run L1 using an efficient algorithm.",
            "Then you filter results using L2 and then you filter results using Intellij.",
            "So basically with the two functions that I've given before, we can approximate run times of these different combinations and then return the plant that redeem.",
            "It would be most time efficient."
        ],
        [
            "I'm just going to rush to devolution, 'cause that's what's up.",
            "3 minutes later, something we looked at two different datasets.",
            "Datasets are manually generated.",
            "An off specifications obviously, and specifications that were automatically generated."
        ],
        [
            "What we were able to show is that number one when the specifications are atomic, that is, they contain only one specification, one measure 1 filter.",
            "We actually don't get worse runtimes.",
            "That's something that was good.",
            "We didn't want to have a huge overhead because of the planning."
        ],
        [
            "Now when the specification scanned complex, we actually get way better runtimes and my part.",
            "My favorite is obviously this one where we can reduce the runtime from 52 seconds to one second.",
            "That is quite a nice result."
        ],
        [
            "You also looked at the results when we run on data that we generated automatically.",
            "So basically we had the Eagle algorithm generate specifications, send it to the Hills planner and we basically compare the different runtimes and what we saw is that we had quite a nice gain in runtime, which means that our user did not have to wait as long and the thing that has the most effect is obviously the planner, but the writer can actually push the planner to get even more efficient plants.",
            "You can get all the statistics and so on in the paper.",
            "The one thing that's important to see is that the results.",
            "Artistically significant for the experiments with automatically generated."
        ],
        [
            "Guns, and that's already the end of my talk.",
            "I presented Helius that does basically query planning on rewriting showed how are rubies rewriter, looks like presented are pushed to planning and in future work we think about exploring search user process approaches for the space in which we are the space of our plans.",
            "Looking at backtracking whether that would help and as well do dynamic planning."
        ],
        [
            "Thank you very much and if you have any questions please bring them on.",
            "OK, so just to confirm so the distance functions that are considered they have to be metric?",
            "Or can they be arbitrary?",
            "They have that do not necessarily have to be metrics at all, no?",
            "Under the rules, like for example, you showed a ruler where Jacquard Maps to overlap, yes, so like these rules like who formulates them, these rules are actually known for Mr.",
            "So it's been shown and proved that certain measures are basically depend on other measures for respective thresholds.",
            "So if you have that information, you can actually deduce these kind of dependencies.",
            "Obviously if you don't have them, then you cannot deduce the dependencies between rules, or you can simply figure it out, figure them out yourself, which will also do.",
            "It's good fun.",
            "Then we have to act like new rules.",
            "If yes, yes you have to add new rules then, because what we want to do is we want to ensure that our results are complete.",
            "Obviously you could try to run some kind of correlation analysis, But then you wouldn't have this complete guarantee anymore and we definitely want completeness.",
            "And I was also wondering finally here for yeah, so I know you want completeness, but is it possible to use the system to to get, say, top key results?",
            "So so maybe I have I have a tree like usually I don't know.",
            "The exact function that is going to give me the best results, so I have some function that maybe I learned or or I came up with as a domain expert, but I don't want everything because because there's just so can I get like the top K or is that something you've considered?",
            "It is possible to use these kind of approaches also to get Top Gear results in a sense of because you actually have a selectivity score and you have the thresholds you can actually define or derive which threshold will leave.",
            "Would lead to how many results.",
            "So based basically on the selectivity of the operators as well as the select feature of the functions, you can actually try to compute can actually compute when you will most probably get key results and set those thresholds as high as possible.",
            "And then you also get the corresponding runtimes.",
            "So that is indeed possible with the selectivity functions that we have.",
            "Thank you for this presentation.",
            "I think you said earlier presentation or I think it's your approach.",
            "Main idea that you're given a complex.",
            "Specification you try to divide it into sub sophistication, simple or atomic specifications and you try to run them and to get some better results.",
            "So my question is how can you be so sure that dividing your initial specification into sample sub specification could get you the same result as running on computing your initial specification?",
            "OK, because we basically know that from set theory.",
            "So if you look at the different combinations and operators that we support, we know that if the minimum operator is used and basically the intersection will be mathematically equivalent, so you can easily prove that that must be the case, and yes, so you can prove it.",
            "Yes, we can very convinced during your reduction function is very clear for me, but just at the beginning I was a little bit not.",
            "Proofs are in the paper that we wrote 2012, so the general of data semantics you can look them up there or there.",
            "Thank you my pleasure.",
            "So in your query planning.",
            "I knew it.",
            "Yeah, preplanning slide.",
            "I just so there's a lot of stuff that reminds me of so that the one that had three diagrams, L compute L1 and filter with L2.",
            "And then yeah, yeah, so right now do you?",
            "Do you have a way of choosing between these two?",
            "Yes, based on what?",
            "So this looks like a joint kind of algorithm where you say you know left operator should be this and based on the runtime approximation.",
            "So basically what we can do is we can compute approximate runtime for L2 and L1 as well off and based on the selectivity we know how many results will pop out.",
            "And we then approximately one time for the filters.",
            "We merge these results.",
            "We add them up so for these filters as well, and based on that we can basically say this is the plan or most probably return the results in the right time.",
            "Thank you for easy questions, so thanks y'all."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Thank you all for being here for having me for those who do not know me, you can simply call me Axl I'm from the investor of Leipzig in Germany and I'm going to talk about execution optimization for link Discovery, and I want to take the previous speaker for making clear how difficult it actually is.",
                    "label": 0
                },
                {
                    "sent": "The findings across knowledge bases.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So why do we actually need link discovery?",
                    "label": 0
                },
                {
                    "sent": "As pointed out before, it is not only the 4th link, it our principle is also central.",
                    "label": 0
                },
                {
                    "sent": "You went really want to use data for complex tasks such as cross ontology, question answering, data integration, reasoning, Federated queries across different knowledge bases and so on and so forth.",
                    "label": 1
                },
                {
                    "sent": "You basically need to need those links to run complex applications and if you look at the current topology of their linked open data cloud, you'll basically see that we have tons and tons of triples, but quite a small amount.",
                    "label": 0
                },
                {
                    "sent": "Of links, so we basically need time efficient link discover approaches to address this prob.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Now West when I see Link discovery, what do I mean exactly?",
                    "label": 0
                },
                {
                    "sent": "Technically we say we assume that we are giving two sets a set S of source resources that T of target resources and a certain relation are and what we're looking for is to set M. That is such that is a set of pairs from S * T. That is such that R holds between S&T.",
                    "label": 1
                },
                {
                    "sent": "Now this is.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Obviously a quadratic problem a priori and it is definitely too tedious to have people doing manually, so you don't want to take turns humans into coding monkeys that click on buttons to evaluate links you don't want that, so you want to have approaches that basically work well and efficiently.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And and what most people then do to approximate this set M is the computer set in prime and this M prime is basically a set of Paris St. Again, that is such that the similarity between the S&T in that set are larger than a certain threshold Tetteh.",
                    "label": 0
                },
                {
                    "sent": "Now when I say similarity, that might sound like just a function, but in.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Are all these similarities are complex similarities that we can represent us bipartite trees?",
                    "label": 0
                },
                {
                    "sent": "Example similarity shows how we compute with high accuracy the links between movies say from DB, pedia and link MDB.",
                    "label": 0
                },
                {
                    "sent": "What we do is we compare the title.",
                    "label": 0
                },
                {
                    "sent": "So the way you read this is that you see OK if the cosine of the title is larger or equal to 0.55 and the sit there names of the directors.",
                    "label": 0
                },
                {
                    "sent": "So basically the Jakarta marimba directors.",
                    "label": 0
                },
                {
                    "sent": "Is larger equal to 0.62, or the trigram similarity of your titles is larger or equal to 0.95 and then you filter out the results.",
                    "label": 0
                },
                {
                    "sent": "Here you basically say OK, then I will accept this thing as a link between the two movies.",
                    "label": 0
                },
                {
                    "sent": "This is this is central.",
                    "label": 0
                },
                {
                    "sent": "So basically we use these complex graphs to actually encode these similarity functions and our refer to this blue nodes as filters because they do nothing's done taking.",
                    "label": 0
                },
                {
                    "sent": "A subset of S * T or the whole of S * T and return a subset of that, and the operators basically allow us to combine the outputs of filters and will call the output of filters mappings, just to make that.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Their names are clear, So what are the difficult tasks here?",
                    "label": 0
                },
                {
                    "sent": "We have actually two that are difficult.",
                    "label": 0
                },
                {
                    "sent": "We're only going to look at one.",
                    "label": 0
                },
                {
                    "sent": "The first one is actually finding such trees.",
                    "label": 0
                },
                {
                    "sent": "Such huge tree structures that actually return links with a high accuracy, which means with a high precision and high recall.",
                    "label": 0
                },
                {
                    "sent": "Now there are several solutions based on machine learning that do that.",
                    "label": 0
                },
                {
                    "sent": "You can look at literature approaches that rely on unsupervised machine learning on active learning, unsupervised machine learning and so on.",
                    "label": 0
                },
                {
                    "sent": "But that's not what we're going to be concern.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "With The thing is what we have as a problem is even when we have this new specifications that work well, we still have to run them and we have to run them on large datasets.",
                    "label": 0
                },
                {
                    "sent": "So what we want to do is actually to be able to run them fast.",
                    "label": 0
                },
                {
                    "sent": "It is clear that the problem is quadratic appearing in complexity and in the body of literature that we already have.",
                    "label": 0
                },
                {
                    "sent": "Most approaches are focused on being able to run single filters efficiently.",
                    "label": 0
                },
                {
                    "sent": "So basically we have time efficient approaches out there.",
                    "label": 0
                },
                {
                    "sent": "Such as people join plus for example, that can run a single Jack.",
                    "label": 0
                },
                {
                    "sent": "Our comparison for use datasets really fast.",
                    "label": 0
                },
                {
                    "sent": "Now the question at hand and the question that retiring this paper is how do we actually run whole specifications efficiently?",
                    "label": 0
                },
                {
                    "sent": "And that's what we need Helius as a planner.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "4.",
                    "label": 0
                },
                {
                    "sent": "So the goal of failures.",
                    "label": 0
                },
                {
                    "sent": "The goal of our planner is to optimize the runtime of whole specifications.",
                    "label": 0
                },
                {
                    "sent": "And we do so by two steps we have every writing algorithm that can take a huge specification and basically transform it into an equivalent specification.",
                    "label": 0
                },
                {
                    "sent": "That is, we hope smaller and more efficient to run.",
                    "label": 0
                },
                {
                    "sent": "And when I say a specification is equivalent to another one, what I mean is that for any given S&T, the two specifications return exactly the same results.",
                    "label": 0
                },
                {
                    "sent": "Then we call these two.",
                    "label": 0
                },
                {
                    "sent": "Excellent.",
                    "label": 0
                },
                {
                    "sent": "Once we have the specification, so once we've rewritten it, what we want to do in the second step is actually optimized or runtime, and I'll tell you how we do that.",
                    "label": 0
                },
                {
                    "sent": "So basically, if you look at these two specifications and you think about it, you realize that the two actually equivalent behalf quite different shapes.",
                    "label": 0
                },
                {
                    "sent": "No question is obviously which of these two shapes is actually the one that runs fast.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So how do we write specifications?",
                    "label": 0
                },
                {
                    "sent": "That's the first question.",
                    "label": 0
                },
                {
                    "sent": "We develop it three step approach for this purpose.",
                    "label": 0
                },
                {
                    "sent": "The first step being elite generation step, the second step being dependency detection and propagation and the third step being gender reduction step and I will explain how this works and I'll use these specifications as a running example to show you how we can get from this big thing to do small thing.",
                    "label": 1
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Over here.",
                    "label": 0
                },
                {
                    "sent": "OK, what is leaf generation?",
                    "label": 1
                },
                {
                    "sent": "As I've said before, we already have algorithms that are able to run atomic similarities really fast.",
                    "label": 1
                },
                {
                    "sent": "So what we want to do is when given the specification to actually transform into specification that is such as the leaves of the specifications actually contain only atomic measures.",
                    "label": 0
                },
                {
                    "sent": "The main advantage being that we can reuse the body of literature to run fast on the leaves and then have linear time operators that can then combine these results and then return results more efficiently.",
                    "label": 0
                },
                {
                    "sent": "So we've defined a set of rules that do that.",
                    "label": 0
                },
                {
                    "sent": "If you look at this particular Rd is my favorite, 'cause it's kind of counter intuitive.",
                    "label": 0
                },
                {
                    "sent": "If you look at this rule, it only has one filter or this specification.",
                    "label": 0
                },
                {
                    "sent": "You only have one filter and it basically says what you need to do is take the linear combination of M1 and M2 and compare that to a certain threshold.",
                    "label": 0
                },
                {
                    "sent": "And what we do is we transform that into this specification, which has actually more nodes.",
                    "label": 0
                },
                {
                    "sent": "But if you look at the leaves you will see that they contain all the M1 and M2, which basically means we can run time efficient algorithms.",
                    "label": 0
                },
                {
                    "sent": "On M1 and UM 2 then combine the results using a linear intersection filter and then filter out the results.",
                    "label": 0
                },
                {
                    "sent": "Then using these complex combination for which we do not have time efficient algorithms.",
                    "label": 0
                },
                {
                    "sent": "And if you actually compare the runtimes of these two here, you would basically be forced to use a quadratic runtime approach and here you can basically use their approaches to run faster.",
                    "label": 0
                },
                {
                    "sent": "In general this runs faster than this thing alone, so this is one of the rules obviously there.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Other rules, for example, if you have the minimum of two measures that must be larger equal to terror, you could use an intersection to model that.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And for the maximum, you can use a union.",
                    "label": 0
                },
                {
                    "sent": "So plenty of rules of these type.",
                    "label": 0
                },
                {
                    "sent": "Based on that we can actually basically take the complex measures that were given and transformed into trees that are such that the leaves contain only atomic measures now.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Now that we have such leaves, what we want to do is actually ask ourselves which of the mappings that are generated by the links actually subsets of each other.",
                    "label": 0
                },
                {
                    "sent": "Because if we know that we have subset relations, we can actually get rid of some of the computations.",
                    "label": 0
                },
                {
                    "sent": "That's kind of the idea.",
                    "label": 0
                },
                {
                    "sent": "Here we call 2 specifications or basically 2 sub specifications dependent if and we don't know.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "That depends on one or two.",
                    "label": 0
                },
                {
                    "sent": "Before SNL Ortiz.",
                    "label": 0
                },
                {
                    "sent": "The result of L1 will always be a subset of the result of our two.",
                    "label": 0
                },
                {
                    "sent": "It is quite obvious that this holds for M31 and M. Tele 2 went into one is larger or equal to two.",
                    "label": 0
                },
                {
                    "sent": "That's pretty straightforward, but what we know is that we also have relations between the different similarity measures that have been used in literature.",
                    "label": 0
                },
                {
                    "sent": "For example, the Jackass similarity and overlap similarity, although they may not look like that related actually related via this particular equation that's been shown.",
                    "label": 0
                },
                {
                    "sent": "Any people backside all in 2008.",
                    "label": 0
                },
                {
                    "sent": "So what we can actually do is if you are given the specification Jack are tide to a larger equal to 0.9 and overlap title larger equal to 0.9 and do you know of that?",
                    "label": 0
                },
                {
                    "sent": "We can actually ready.",
                    "label": 0
                },
                {
                    "sent": "See actually we have independence between these two results now.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "How do we exploit that?",
                    "label": 0
                },
                {
                    "sent": "We exploit that by propagating the dependencies across the tree.",
                    "label": 0
                },
                {
                    "sent": "So if you give.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "In this example, maybe have M4 entry, an intersection, and we know that imported foreign M3 to three depend on M2 Tele two.",
                    "label": 0
                },
                {
                    "sent": "What we can actually do is transfer the specification via operator an actual.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We see that out of this we can actually infer that M. 110 or one depends on M2 Tele 2.",
                    "label": 0
                },
                {
                    "sent": "So basically we propagate these dependencies across the tree and we do so until we reach a fixed point.",
                    "label": 0
                },
                {
                    "sent": "That is until we cannot propagate any further.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Now comes the third step.",
                    "label": 0
                },
                {
                    "sent": "We actually make use of the information that we know that some of the mappings are subset of other mappings.",
                    "label": 0
                },
                {
                    "sent": "To actually get rid of some computations so.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We go back to our example.",
                    "label": 0
                },
                {
                    "sent": "We basically see that we have M2 Dollar 2 and M12 one connected via dependency and we're supposed to compute the Union of that and filtered out and feel better result using M 0 to 0.",
                    "label": 0
                },
                {
                    "sent": "Now if we know that one is a subset of the other, so that M1.",
                    "label": 0
                },
                {
                    "sent": "Terra one.",
                    "label": 0
                },
                {
                    "sent": "The output of that is a subset of empty Tele 2.",
                    "label": 0
                },
                {
                    "sent": "Then actually we can say we don't need to compute M1 Tele one or we need to do is computer computer to the result of M1 Terra One is going to be in there anyway.",
                    "label": 0
                },
                {
                    "sent": "We are sure that that is the case.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So we can throw out actually quite a bit of computation over here and only compute empty trailer 2 and send that to the filter M 0 to 0 and Red Dawn, so we can reduce the runtimes that way.",
                    "label": 0
                },
                {
                    "sent": "So that's the first thing we do.",
                    "label": 0
                },
                {
                    "sent": "We rewrite the specifications.",
                    "label": 0
                },
                {
                    "sent": "The second thing that we do once we have the region specifications is we want to learn or relearn.",
                    "label": 0
                },
                {
                    "sent": "We want to figure out how to run them efficiently.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And that is the whole idea behind the planner.",
                    "label": 0
                },
                {
                    "sent": "So what the planner does is it tries to derive equivalent and compete riveting specifications.",
                    "label": 1
                },
                {
                    "sent": "Now what we call complete specifications are simplification or plans to be more precise.",
                    "label": 0
                },
                {
                    "sent": "Our plans are that would return exactly the same results as the Canonical plan, which is the plan that you get when you simply traverse the specification in the order left root, right?",
                    "label": 0
                },
                {
                    "sent": "So we.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Have a plan evolution.",
                    "label": 0
                },
                {
                    "sent": "That's what we need to detect good plans and we need a heuristic to reduce the number of plans to evaluate simply because this problem is exponential in complexity and the important thing is that I'm sure you can see that this is quite.",
                    "label": 0
                },
                {
                    "sent": "This is kind of similar to what you were doing.",
                    "label": 0
                },
                {
                    "sent": "Databases for career planning, but they usually have statistics about the data in the database here.",
                    "label": 0
                },
                {
                    "sent": "You don't have statistics, so you basically have to use a priore guesses or a priori computations, and once the data comes in you have to run on that as efficiently as you can.",
                    "label": 0
                },
                {
                    "sent": "OK, so we have two evaluation functions.",
                    "label": 1
                },
                {
                    "sent": "One is the runtime, the second one is the selectivity and I'm just going.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Give you an idea of how we compute.",
                    "label": 0
                },
                {
                    "sent": "Try to evaluate the runtime of a specification.",
                    "label": 0
                },
                {
                    "sent": "What we've done is we've basically looked at strings of different lengths that come from human language.",
                    "label": 0
                },
                {
                    "sent": "That is from DB pedia.",
                    "label": 0
                },
                {
                    "sent": "To be more specific than that for different languages.",
                    "label": 0
                },
                {
                    "sent": "So when the data comes in, we try to guess in which language is this data.",
                    "label": 0
                },
                {
                    "sent": "That kind of strings that we have to compare, and we basically look up simply in the output of a linear regression model to basically say this computation is most probably going to last this long.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And we do something similar for selectivity.",
                    "label": 0
                },
                {
                    "sent": "So once, if once because we had sample data, we actually know these are the sizes of the datasets that we had as input.",
                    "label": 0
                },
                {
                    "sent": "This how much came out of it.",
                    "label": 0
                },
                {
                    "sent": "Out of that, we computed selectivity and we can approximate the selectivity of plants again using a linear regression algorithm just to give you an idea.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And the way we then optimize the plans is actually quite straightforward.",
                    "label": 0
                },
                {
                    "sent": "If the specification is atomic, we simply return the equivalent atomic plan, and if we have operators, the computer plan for the left specification for the right specification, and then we have different possibilities for combining two plants.",
                    "label": 0
                },
                {
                    "sent": "In general, we have five.",
                    "label": 0
                },
                {
                    "sent": "I'm just going to show you.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "23.com about when we look at intersections.",
                    "label": 0
                },
                {
                    "sent": "For example, here you have physical choice between running L1, then running L2 and then computing intersection of the mappings on filtering.",
                    "label": 0
                },
                {
                    "sent": "Or you run L2 and then you filter the results using at one and then you feel a lot of results using antera or you run L1 using an efficient algorithm.",
                    "label": 0
                },
                {
                    "sent": "Then you filter results using L2 and then you filter results using Intellij.",
                    "label": 0
                },
                {
                    "sent": "So basically with the two functions that I've given before, we can approximate run times of these different combinations and then return the plant that redeem.",
                    "label": 0
                },
                {
                    "sent": "It would be most time efficient.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I'm just going to rush to devolution, 'cause that's what's up.",
                    "label": 0
                },
                {
                    "sent": "3 minutes later, something we looked at two different datasets.",
                    "label": 0
                },
                {
                    "sent": "Datasets are manually generated.",
                    "label": 0
                },
                {
                    "sent": "An off specifications obviously, and specifications that were automatically generated.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "What we were able to show is that number one when the specifications are atomic, that is, they contain only one specification, one measure 1 filter.",
                    "label": 0
                },
                {
                    "sent": "We actually don't get worse runtimes.",
                    "label": 0
                },
                {
                    "sent": "That's something that was good.",
                    "label": 0
                },
                {
                    "sent": "We didn't want to have a huge overhead because of the planning.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Now when the specification scanned complex, we actually get way better runtimes and my part.",
                    "label": 0
                },
                {
                    "sent": "My favorite is obviously this one where we can reduce the runtime from 52 seconds to one second.",
                    "label": 0
                },
                {
                    "sent": "That is quite a nice result.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "You also looked at the results when we run on data that we generated automatically.",
                    "label": 0
                },
                {
                    "sent": "So basically we had the Eagle algorithm generate specifications, send it to the Hills planner and we basically compare the different runtimes and what we saw is that we had quite a nice gain in runtime, which means that our user did not have to wait as long and the thing that has the most effect is obviously the planner, but the writer can actually push the planner to get even more efficient plants.",
                    "label": 0
                },
                {
                    "sent": "You can get all the statistics and so on in the paper.",
                    "label": 0
                },
                {
                    "sent": "The one thing that's important to see is that the results.",
                    "label": 0
                },
                {
                    "sent": "Artistically significant for the experiments with automatically generated.",
                    "label": 0
                }
            ]
        },
        "clip_31": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Guns, and that's already the end of my talk.",
                    "label": 0
                },
                {
                    "sent": "I presented Helius that does basically query planning on rewriting showed how are rubies rewriter, looks like presented are pushed to planning and in future work we think about exploring search user process approaches for the space in which we are the space of our plans.",
                    "label": 0
                },
                {
                    "sent": "Looking at backtracking whether that would help and as well do dynamic planning.",
                    "label": 0
                }
            ]
        },
        "clip_32": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Thank you very much and if you have any questions please bring them on.",
                    "label": 0
                },
                {
                    "sent": "OK, so just to confirm so the distance functions that are considered they have to be metric?",
                    "label": 0
                },
                {
                    "sent": "Or can they be arbitrary?",
                    "label": 0
                },
                {
                    "sent": "They have that do not necessarily have to be metrics at all, no?",
                    "label": 0
                },
                {
                    "sent": "Under the rules, like for example, you showed a ruler where Jacquard Maps to overlap, yes, so like these rules like who formulates them, these rules are actually known for Mr.",
                    "label": 0
                },
                {
                    "sent": "So it's been shown and proved that certain measures are basically depend on other measures for respective thresholds.",
                    "label": 0
                },
                {
                    "sent": "So if you have that information, you can actually deduce these kind of dependencies.",
                    "label": 0
                },
                {
                    "sent": "Obviously if you don't have them, then you cannot deduce the dependencies between rules, or you can simply figure it out, figure them out yourself, which will also do.",
                    "label": 0
                },
                {
                    "sent": "It's good fun.",
                    "label": 0
                },
                {
                    "sent": "Then we have to act like new rules.",
                    "label": 0
                },
                {
                    "sent": "If yes, yes you have to add new rules then, because what we want to do is we want to ensure that our results are complete.",
                    "label": 0
                },
                {
                    "sent": "Obviously you could try to run some kind of correlation analysis, But then you wouldn't have this complete guarantee anymore and we definitely want completeness.",
                    "label": 0
                },
                {
                    "sent": "And I was also wondering finally here for yeah, so I know you want completeness, but is it possible to use the system to to get, say, top key results?",
                    "label": 0
                },
                {
                    "sent": "So so maybe I have I have a tree like usually I don't know.",
                    "label": 0
                },
                {
                    "sent": "The exact function that is going to give me the best results, so I have some function that maybe I learned or or I came up with as a domain expert, but I don't want everything because because there's just so can I get like the top K or is that something you've considered?",
                    "label": 0
                },
                {
                    "sent": "It is possible to use these kind of approaches also to get Top Gear results in a sense of because you actually have a selectivity score and you have the thresholds you can actually define or derive which threshold will leave.",
                    "label": 0
                },
                {
                    "sent": "Would lead to how many results.",
                    "label": 0
                },
                {
                    "sent": "So based basically on the selectivity of the operators as well as the select feature of the functions, you can actually try to compute can actually compute when you will most probably get key results and set those thresholds as high as possible.",
                    "label": 0
                },
                {
                    "sent": "And then you also get the corresponding runtimes.",
                    "label": 0
                },
                {
                    "sent": "So that is indeed possible with the selectivity functions that we have.",
                    "label": 0
                },
                {
                    "sent": "Thank you for this presentation.",
                    "label": 0
                },
                {
                    "sent": "I think you said earlier presentation or I think it's your approach.",
                    "label": 0
                },
                {
                    "sent": "Main idea that you're given a complex.",
                    "label": 0
                },
                {
                    "sent": "Specification you try to divide it into sub sophistication, simple or atomic specifications and you try to run them and to get some better results.",
                    "label": 0
                },
                {
                    "sent": "So my question is how can you be so sure that dividing your initial specification into sample sub specification could get you the same result as running on computing your initial specification?",
                    "label": 0
                },
                {
                    "sent": "OK, because we basically know that from set theory.",
                    "label": 0
                },
                {
                    "sent": "So if you look at the different combinations and operators that we support, we know that if the minimum operator is used and basically the intersection will be mathematically equivalent, so you can easily prove that that must be the case, and yes, so you can prove it.",
                    "label": 0
                },
                {
                    "sent": "Yes, we can very convinced during your reduction function is very clear for me, but just at the beginning I was a little bit not.",
                    "label": 0
                },
                {
                    "sent": "Proofs are in the paper that we wrote 2012, so the general of data semantics you can look them up there or there.",
                    "label": 0
                },
                {
                    "sent": "Thank you my pleasure.",
                    "label": 0
                },
                {
                    "sent": "So in your query planning.",
                    "label": 0
                },
                {
                    "sent": "I knew it.",
                    "label": 0
                },
                {
                    "sent": "Yeah, preplanning slide.",
                    "label": 0
                },
                {
                    "sent": "I just so there's a lot of stuff that reminds me of so that the one that had three diagrams, L compute L1 and filter with L2.",
                    "label": 0
                },
                {
                    "sent": "And then yeah, yeah, so right now do you?",
                    "label": 0
                },
                {
                    "sent": "Do you have a way of choosing between these two?",
                    "label": 0
                },
                {
                    "sent": "Yes, based on what?",
                    "label": 0
                },
                {
                    "sent": "So this looks like a joint kind of algorithm where you say you know left operator should be this and based on the runtime approximation.",
                    "label": 0
                },
                {
                    "sent": "So basically what we can do is we can compute approximate runtime for L2 and L1 as well off and based on the selectivity we know how many results will pop out.",
                    "label": 0
                },
                {
                    "sent": "And we then approximately one time for the filters.",
                    "label": 0
                },
                {
                    "sent": "We merge these results.",
                    "label": 0
                },
                {
                    "sent": "We add them up so for these filters as well, and based on that we can basically say this is the plan or most probably return the results in the right time.",
                    "label": 0
                },
                {
                    "sent": "Thank you for easy questions, so thanks y'all.",
                    "label": 0
                }
            ]
        }
    }
}