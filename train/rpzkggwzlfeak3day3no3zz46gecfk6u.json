{
    "id": "rpzkggwzlfeak3day3no3zz46gecfk6u",
    "title": "An Efficient Graph Based Active Learning Algorithm with Application to Nonparametric Classification",
    "info": {
        "author": [
            "Gautam Dasarathy, Computer Science Department, Carnegie Mellon University"
        ],
        "published": "Aug. 20, 2015",
        "recorded": "July 2015",
        "category": [
            "Top->Computer Science->Machine Learning->Active Learning",
            "Top->Computer Science->Machine Learning->Computational Learning Theory",
            "Top->Computer Science->Machine Learning->On-line Learning",
            "Top->Computer Science->Machine Learning->Reinforcement Learning",
            "Top->Computer Science->Machine Learning->Semi-supervised Learning"
        ]
    },
    "url": "http://videolectures.net/colt2015_dasarathy_nonparametric_classification/",
    "segmentation": [
        [
            "This is joint work with Rob, Newark and Jeju both both at UW Madison.",
            "This came out of some work that I did during my PhD there."
        ],
        [
            "So I'm going to like I got prioritized showing you one example, and for the rest I'll meet you guys gladly at the poster.",
            "So the problem is the following.",
            "Like let's say that you have a graph that is on end vertices and so here is like a example."
        ],
        [
            "And let's say that there is a unknown labeling function that we want to learn.",
            "So there is like a sort of like just put one class here.",
            "So it's like these blue dots denote, say plus once and you have this unknown labeling function on this graph and you want to learn this function and you know the graph so."
        ],
        [
            "Although the label prediction problem on the graph is usually post us like you are given a subset of the labels and you want to understand what the labels are of the rest of the graph.",
            "So this is like this comes up in like semi supervised learning.",
            "It comes up and like social network analysis and so on.",
            "So naturally there are some questions that we would like to understand.",
            "These are like how do you choose L efficiently and how big does L have to be like?",
            "Trivially, if you ask for everything, you don't have a problem to solve anymore.",
            "And what is the interaction between F&G and how does this affect how we do this?",
            "OK, So what I'm going to do is I'm going to show you guys an example or an instantiation of a very simple algorithm that we have."
        ],
        [
            "And I'll tell you a little bit about what you can say about it.",
            "So here's the algorithm.",
            "You start randomly sampling on this graph.",
            "So I just start randomly querying points and I do this."
        ],
        [
            "Till I find 2 vertices that are oppositely labeled.",
            "OK, so now I know that there's something interesting going on.",
            "So before I proceed, note that learning this labeling is equal into, like a localising all the cut edges of this graph like.",
            "Once you do this, labeling on edge that connects A plus one or minus one vertex, you can call it a cut edge, and if you find all the cut edges, you're done right.",
            "So here you know that there's something interesting."
        ],
        [
            "So what the algorithm Esquerre says is I'll tell you why it's called.",
            "Ask where it says look."
        ],
        [
            "For the shortest shortest path that connects oppositely labeled vertices.",
            "So here there are two shortest paths that connect oppositely labeled vertices.",
            "I'll pick the shortest one."
        ],
        [
            "And then I bisected so."
        ],
        [
            "Is like you can think of it as a generalization of binary search on a graph, so."
        ],
        [
            "So you have this you you bisect it and you keep doing this."
        ],
        [
            "So now the next shortest path was that guy.",
            "You bisected and once you."
        ],
        [
            "Find an obvious cottage that is a two things that have observed that are opposite label that are connected by an edge.",
            "You remove that from the graph."
        ],
        [
            "So you keep doing this, So what you'll notice is that proceeding.",
            "This way the algorithm very nicely stitches through the boundary this way, so it very efficiently localizes the cut edges of this graph.",
            "So the cut boundary of this graph and."
        ],
        [
            "Once you once you don't have anymore vertices to sample, you just keep doing this again till you so you do random sampling and you find the other cut boundary also.",
            "So this is a very simple algorithm we call this."
        ],
        [
            "Square because we picked the shortest, shortest path and bisector.",
            "So now the question is, what can you say about this right so?"
        ],
        [
            "I'm going to like leave this to the poster, but very, very briefly."
        ],
        [
            "Seeking the one thing that we do is we we quantify the notion of complexity of the of the function of respect the graph, so that's important.",
            "Like till now I haven't told you how this function relates to the graph.",
            "I just said that in social networks you want like friends who maybe share opinions and things like that so you can parameterized this in terms of 1, which is like the cut boundaries like the boundary.",
            "The number of cut edges that are there and you can also say parameterized this in terms of like how hard it is to find oppositely oppositely labeled vertices which we call balance Ness.",
            "And the other important thing that we say is that it's important how close cottages are.",
            "So it's like if you find 1 cottage, how easy it is to find another cottage.",
            "So we make this more formal and please come to the poster to talk more about this.",
            "So using this weekend, like sort of.",
            "You can.",
            "Using this you can get the query complexity and that looks like.",
            "That quantity there.",
            "So the other thing is that we show how this applies to nonparametric active learning and nonparametric active learning is like you, have you have you want to do a binary classification or nonparametric setting and what we say is like you just do square on a lattice graph and we show how this achieves near minimax optimality.",
            "So it looks like order log N / N to the 1 / D -- 1 for a particular class of functions.",
            "And this without the log.",
            "And then that's the minimax optimal.",
            "Sample complexity.",
            "So the archive paper shuran.",
            "Yeah, I'll talk to you more at the poster.",
            "Thank you."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This is joint work with Rob, Newark and Jeju both both at UW Madison.",
                    "label": 0
                },
                {
                    "sent": "This came out of some work that I did during my PhD there.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So I'm going to like I got prioritized showing you one example, and for the rest I'll meet you guys gladly at the poster.",
                    "label": 0
                },
                {
                    "sent": "So the problem is the following.",
                    "label": 0
                },
                {
                    "sent": "Like let's say that you have a graph that is on end vertices and so here is like a example.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And let's say that there is a unknown labeling function that we want to learn.",
                    "label": 1
                },
                {
                    "sent": "So there is like a sort of like just put one class here.",
                    "label": 0
                },
                {
                    "sent": "So it's like these blue dots denote, say plus once and you have this unknown labeling function on this graph and you want to learn this function and you know the graph so.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Although the label prediction problem on the graph is usually post us like you are given a subset of the labels and you want to understand what the labels are of the rest of the graph.",
                    "label": 0
                },
                {
                    "sent": "So this is like this comes up in like semi supervised learning.",
                    "label": 0
                },
                {
                    "sent": "It comes up and like social network analysis and so on.",
                    "label": 0
                },
                {
                    "sent": "So naturally there are some questions that we would like to understand.",
                    "label": 0
                },
                {
                    "sent": "These are like how do you choose L efficiently and how big does L have to be like?",
                    "label": 1
                },
                {
                    "sent": "Trivially, if you ask for everything, you don't have a problem to solve anymore.",
                    "label": 0
                },
                {
                    "sent": "And what is the interaction between F&G and how does this affect how we do this?",
                    "label": 0
                },
                {
                    "sent": "OK, So what I'm going to do is I'm going to show you guys an example or an instantiation of a very simple algorithm that we have.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And I'll tell you a little bit about what you can say about it.",
                    "label": 0
                },
                {
                    "sent": "So here's the algorithm.",
                    "label": 0
                },
                {
                    "sent": "You start randomly sampling on this graph.",
                    "label": 0
                },
                {
                    "sent": "So I just start randomly querying points and I do this.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Till I find 2 vertices that are oppositely labeled.",
                    "label": 1
                },
                {
                    "sent": "OK, so now I know that there's something interesting going on.",
                    "label": 0
                },
                {
                    "sent": "So before I proceed, note that learning this labeling is equal into, like a localising all the cut edges of this graph like.",
                    "label": 0
                },
                {
                    "sent": "Once you do this, labeling on edge that connects A plus one or minus one vertex, you can call it a cut edge, and if you find all the cut edges, you're done right.",
                    "label": 1
                },
                {
                    "sent": "So here you know that there's something interesting.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So what the algorithm Esquerre says is I'll tell you why it's called.",
                    "label": 0
                },
                {
                    "sent": "Ask where it says look.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "For the shortest shortest path that connects oppositely labeled vertices.",
                    "label": 1
                },
                {
                    "sent": "So here there are two shortest paths that connect oppositely labeled vertices.",
                    "label": 1
                },
                {
                    "sent": "I'll pick the shortest one.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And then I bisected so.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Is like you can think of it as a generalization of binary search on a graph, so.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So you have this you you bisect it and you keep doing this.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So now the next shortest path was that guy.",
                    "label": 0
                },
                {
                    "sent": "You bisected and once you.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Find an obvious cottage that is a two things that have observed that are opposite label that are connected by an edge.",
                    "label": 0
                },
                {
                    "sent": "You remove that from the graph.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So you keep doing this, So what you'll notice is that proceeding.",
                    "label": 0
                },
                {
                    "sent": "This way the algorithm very nicely stitches through the boundary this way, so it very efficiently localizes the cut edges of this graph.",
                    "label": 0
                },
                {
                    "sent": "So the cut boundary of this graph and.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Once you once you don't have anymore vertices to sample, you just keep doing this again till you so you do random sampling and you find the other cut boundary also.",
                    "label": 0
                },
                {
                    "sent": "So this is a very simple algorithm we call this.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Square because we picked the shortest, shortest path and bisector.",
                    "label": 0
                },
                {
                    "sent": "So now the question is, what can you say about this right so?",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I'm going to like leave this to the poster, but very, very briefly.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Seeking the one thing that we do is we we quantify the notion of complexity of the of the function of respect the graph, so that's important.",
                    "label": 1
                },
                {
                    "sent": "Like till now I haven't told you how this function relates to the graph.",
                    "label": 0
                },
                {
                    "sent": "I just said that in social networks you want like friends who maybe share opinions and things like that so you can parameterized this in terms of 1, which is like the cut boundaries like the boundary.",
                    "label": 1
                },
                {
                    "sent": "The number of cut edges that are there and you can also say parameterized this in terms of like how hard it is to find oppositely oppositely labeled vertices which we call balance Ness.",
                    "label": 0
                },
                {
                    "sent": "And the other important thing that we say is that it's important how close cottages are.",
                    "label": 0
                },
                {
                    "sent": "So it's like if you find 1 cottage, how easy it is to find another cottage.",
                    "label": 1
                },
                {
                    "sent": "So we make this more formal and please come to the poster to talk more about this.",
                    "label": 1
                },
                {
                    "sent": "So using this weekend, like sort of.",
                    "label": 0
                },
                {
                    "sent": "You can.",
                    "label": 0
                },
                {
                    "sent": "Using this you can get the query complexity and that looks like.",
                    "label": 1
                },
                {
                    "sent": "That quantity there.",
                    "label": 0
                },
                {
                    "sent": "So the other thing is that we show how this applies to nonparametric active learning and nonparametric active learning is like you, have you have you want to do a binary classification or nonparametric setting and what we say is like you just do square on a lattice graph and we show how this achieves near minimax optimality.",
                    "label": 1
                },
                {
                    "sent": "So it looks like order log N / N to the 1 / D -- 1 for a particular class of functions.",
                    "label": 1
                },
                {
                    "sent": "And this without the log.",
                    "label": 0
                },
                {
                    "sent": "And then that's the minimax optimal.",
                    "label": 0
                },
                {
                    "sent": "Sample complexity.",
                    "label": 0
                },
                {
                    "sent": "So the archive paper shuran.",
                    "label": 0
                },
                {
                    "sent": "Yeah, I'll talk to you more at the poster.",
                    "label": 0
                },
                {
                    "sent": "Thank you.",
                    "label": 0
                }
            ]
        }
    }
}