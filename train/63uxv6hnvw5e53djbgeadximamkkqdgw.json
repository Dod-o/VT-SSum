{
    "id": "63uxv6hnvw5e53djbgeadximamkkqdgw",
    "title": "Open Problems in Throughput Scheduling",
    "info": {
        "author": [
            "Ji\u0159\u00ed Sgall, Computer Science Institute (CSI), Charles University Prague"
        ],
        "published": "Oct. 2, 2012",
        "recorded": "September 2012",
        "category": [
            "Top->Computer Science"
        ]
    },
    "url": "http://videolectures.net/algo2012_sgall_throughput_scheduling/",
    "segmentation": [
        [
            "Well, I I would like to thank you all for not getting lost in The Cave, but I would also like to thank organizers for aging everything including the excursion which was.",
            "Really kind of an extra exceptional place.",
            "So let me start the talk.",
            "Buy a puzzle."
        ],
        [
            "Like problem?",
            "So, so assume that we have some some boxes that can move.",
            "Within some ranges, and I'm asking you.",
            "I feel full down here."
        ],
        [
            "I'm asking you too.",
            "Change them so that they are not one on top of the other.",
            "By that I mean I asked her in German so that if."
        ],
        [
            "They drop down, they just fit in a single line.",
            "So."
        ],
        [
            "Is this easy or hard?",
            "Sometimes it's easy, sometimes it's hard.",
            "And I will get to get back to that later.",
            "And I'm in particular interested in in the case when there are finitely many."
        ],
        [
            "Print sizes of boxes.",
            "So when I was thinking about this talk, I was thinking what what makes me interested in a new area.",
            "And most often what attracts me are.",
            "Problems that are easily stated that are look totally accessible.",
            "I don't need to read a book before I start working on them.",
            "I can start working on them immediately and it looks like.",
            "It could be a result tomorrow, and I think this is.",
            "This is perfect example of that, so I decided to center my talk.",
            "Around 3 problems like that and I will show some little results to give you some taste of the area.",
            "And something to think about if you like it.",
            "So."
        ],
        [
            "Let me know.",
            "Maybe back to the picture."
        ],
        [
            "So, so how does this get formulated as scheduling?",
            "That's fairly obvious to people in the area.",
            "I will just call the boxes jobs and I will call the line Bill's schedule.",
            "So."
        ],
        [
            "So in some more usual terminology, the environment is that we have one or more machines.",
            "And we get as an input jobs which have some lengths.",
            "They have some release time, which is the earliest time they have to be scheduled, and they have some deadline, which is the latest time when they can be scheduled and they have some weight.",
            "And the output is a schedule which was just the picture before we need to arrange the jobs so that they do not overlap.",
            "If we cannot cannot fit some job that it gets rejected, and for this talk our objective will always be to maximize the number of jobs that we fit in the schedule of the order of their weight, possibly.",
            "And in this."
        ],
        [
            "It all kind of mostly talk about online algorithm, which is the area I worked in most and the basic problems that I will talk about will concern only a single machine.",
            "And it will be even simpler than."
        ],
        [
            "Then what I have to run above idle, we will be interested in jobs that have all equal ranks.",
            "And and even have no weights or we will have jobs that have unit lengths.",
            "And they have some.",
            "Then they have some weight.",
            "So how?"
        ],
        [
            "The.",
            "I need to say, but what I mean by online scheduling and that's the natural thing that you would imagine.",
            "You generate the schedule as time goes by, and when a job arrives you you get Informa full information about what kind of job it is, when it has to be done, how much money it pays and so on.",
            "And then you choose either to schedule it or wait.",
            "And if you wait then in the next time step you can decide to schedule it or wait wait longer.",
            "And we measured the online algorithms as by comp."
        ],
        [
            "Differential, which is nothing else than approximation ratio as it is used in approximation algorithms.",
            "Since we are trying to maximize benefits, higher result is better for the algorithm.",
            "So we say that an algorithm is our competitive if.",
            "No algorithm in particular.",
            "The optimum can get more than our times what our algorithm does.",
            "And this has to be hold for every instance.",
            "The algorithms that I will."
        ],
        [
            "Show will be randomized, which means that I will show I will require that for each instance on the other reach over the coin ptosis of the algorithm.",
            "The average gain, the average profit gained by the algorithm satisfies the previous property.",
            "So it's it's at least 1 / R of the optimum.",
            "So these are the preliminaries.",
            "And."
        ],
        [
            "This is of course not the whole world of scheduling.",
            "Scheduling comes in many variants, and you have seen maybe some papers and problem settings gets overtime more complicated.",
            "People introduce various parameters of jobs.",
            "So they they can require some other resources.",
            "There may be some restrictions like dependencies between the jobs and machines that can have speeds.",
            "A job may require more operations on more machines.",
            "So, so that's something that I would like to stress that the problems that I'm saying that's not not like a research program of the most important program problems in scheduling.",
            "These are not practical problems.",
            "Those complex scenarios often are more practical or more motivated by practice.",
            "But on purpose I'm choosing some simple problems that are elegant that we can talk about immediately without results further introduction.",
            "Also the scheduling."
        ],
        [
            "It measures the quality of schedules by different things and throughput is not the most popular, so the most popular and the oldest and studied long time ago.",
            "Measures like the length of the schedule or other measure that measures.",
            "How do you balance the work between different servers so?",
            "So different machines, so it's sort of.",
            "Taking the perspective of somebody who who has to pay the cost of running things or the other popular area is mean some objectives, which means that we look at each job and somehow measure how well it is served and we look at the users and and on average we want them to be served well.",
            "And so, but this yet something different.",
            "So in a way, I think it reflects also the changing.",
            "Perception of computers.",
            "So when I was.",
            "I still remember the times where computers were taken very seriously, so if they were given a job they were supposed to finish everything and the result was taken as a law.",
            "It was something that you wouldn't dispute.",
            "So so computers were used for doing serious things like sending people in space, or maybe computing your salary.",
            "And you wouldn't like to have the result random.",
            "It would, it wouldn't be imaginable that you run the same computer program twice and get a different result.",
            "Although further salary, it could be nice, but.",
            "But it just wasn't wasn't acceptable so.",
            "Some pseudorandom generators were not a serious programming tool, but something for game programmers.",
            "And now we are somehow the computers are so much more powerful, but they are not taken as reliable.",
            "We are all used to the fact that things happen differently on different days and so on.",
            "So, so we are.",
            "It's more acceptable in practical scenarios that the computers don't really do what we ask them to do.",
            "So now I will get to the first."
        ],
        [
            "Problem and 1st area.",
            "The talk will have three relatively disjoint disjoint parts, so if you want to ask questions, maybe don't postpone them till the end.",
            "So the first scenario will that we have all jobs are the same, they have the same length and there are no weights.",
            "They only differ in timing in when they are released and when they have deadlines.",
            "And we have a single machine.",
            "So this is this is simple simple scenario, yet it's not completely understood, so it's."
        ],
        [
            "If we are not in the online setting, but we get everything in advance, it's easy to compute the optimal solution.",
            "Easier in the sense it's polynomial.",
            "It's not something that you should see in 5 minutes.",
            "It was actually proven in the 90s and it involves some work.",
            "As often in the online algorithms, the first thing that we do to understand the problem is that we take some greedy algorithm and analyze it.",
            "And here and in the other scenario as well, it turns out that the greedy algorithm is too competitive, that it does at least half of the work of the optimal solution.",
            "And here actually, this turns out to be optimal.",
            "So to improve upon this we we have tried to design randomized algorithms.",
            "We know one which which is probably better.",
            "And and we would be interested in knowing more.",
            "So the greedy algorithm, what it does it?"
        ],
        [
            "Whenever the machine is idle, as time goes on.",
            "If the machine is available to process jobs and there is some jobs to be processed, we just started.",
            "So here at the beginning of the schedule, we schedule the first jobs.",
            "The numbers are just labels to distinguish the jobs.",
            "They are all the same.",
            "But when we start the job, the first job then then the second job comes and.",
            "We cannot schedule it.",
            "We realize that it would have been better to postpone the first job because it has.",
            "It can be moved.",
            "The second job cannot, but but we are out of luck.",
            "And we continue like this."
        ],
        [
            "And the result is that the greedy schedule schedules the.",
            "Green jobs and we lose the red jobs.",
            "And so.",
            "I said that this is too competitive and it looks intuitively that.",
            "That for each job that we lose, there is one job that we actually schedule, but we have to prove it.",
            "And that's that's approved that you can do in two minutes or so.",
            "How do we do it so so we map?"
        ],
        [
            "Each job in the optimal schedule to some job integrated schedule.",
            "Well, if the optimal schedules are job that we did."
        ],
        [
            "Then then we map it to itself.",
            "That's that's easy.",
            "And for the other jobs, we map them to the job that is running at the same time in the creative schedule.",
            "So to be precise, when you look at the time when the optimal schedule starts the job, we look what is running there.",
            "And map the job to this one and this mapping.",
            "The red mapping is also one to one because all the jobs have the same length, so the optimal schedule cannot start two jobs.",
            "While the same job is running.",
            "And that's also so we have.",
            "We have classified the optimal jobs into two categories.",
            "Each character is smaller than the number of jobs that we have scheduled, so it's at most twice as much.",
            "OK, so so we cannot do better if we imagine that we get a single job and."
        ],
        [
            "Its range is slightly bigger than than twice its length.",
            "We can do two things we can."
        ],
        [
            "Behave like the greedy algorithm and schedule the job and then another job comes and.",
            "It's arranged so that the optimum can schedule both red and blue job, but the red job cannot dislodged by the gradient, so that's the example that we have seen before.",
            "And the other option for the algorithm is that the."
        ],
        [
            "It will wait for some time and then we.",
            "Put the red job so that if the algorithm didn't wait, it would get two jobs.",
            "So no matter what the algorithm does, we create an instance where it schedules only one out of the two jobs.",
            "So we can say that no deterministic algorithm is better than two competitive.",
            "But"
        ],
        [
            "Actually, from the same example.",
            "From the same example, we can, we can say that no randomized algorithm is better than 4 / 3 competitive.",
            "Becausw if we took these two instances, no matter what the randomized algorithm does it choose waiting on non waiting one of these two possibilities, which probability at least 1/2 and in the corresponding instance it loses one jobs.",
            "So out of these two jobs it loses one job with probability at least 1/2.",
            "So it gets on average 1.5 jobs.",
            "Out of two, which is 4 / 3 competitive.",
            "So what we can do about this it it would.",
            "We do the obvious thing in a non obvious way, so the obvious thing is that we have to flip a coin."
        ],
        [
            "For this job, whether we will wait or not, but the question is, how do we arrange it for for a general schedule?",
            "And in fact, we do something that's called barely random algorithms, and that appears only in online algorithms.",
            "We generated two schedules.",
            "We have an online algorithm that will generate two schedules and before it started starts outputting it, flips a coin and it will follow one of these two schedules.",
            "So of course it doesn't make sense to do such as thinking regular algorithms if we have two algorithms.",
            "We just run both and choose choose the better option.",
            "But that's not possible for online algorithms.",
            "Here we have to follow.",
            "Produce output from the beginning.",
            "And actually, I think it would be that that we somehow try to generate these schedules so that one is greedy and one is more waiting, but that's not what we do.",
            "We generate both both schedules by the same algorithm.",
            "So we imagine it as two processes, but they will lose you some lock mechanism."
        ],
        [
            "So that when there is a choice, they don't do the same thing."
        ],
        [
            "Dual dual for the algorithm that generates one of the schedule.",
            "8 and below.",
            "It's somehow simpler than it looks like, so at every time when we can schedule a job, we look at the set of jobs that we have.",
            "And we ask ourselves whether it makes sense, makes possibly sense to wait.",
            "Well.",
            "How do we formalize this?",
            "So we ask what would happen if we wait for the time P, which is the length of the jobs?",
            "And then try to schedule the same set of jobs.",
            "If we would lose some job, or if the result would be that we schedule fewer jobs, then it doesn't make sense to wait then, then we are forced to.",
            "We have to run the job, so that's the first case.",
            "If it doesn't make sense to wait because we would lose some job, then we don't need.",
            "And if we can wait, we just coordinate the two schedules and we coordinate.",
            "It is through the log.",
            "So that.",
            "If it makes sense to wait, we try to see if the lock is available and if it is, we get the lock start, start the, start a job and release the lock after the job is completed and if the lock is not available, we just stay idle.",
            "And I didn't say how do we choose a job to run if we choose to run a job, we choose the one which has early as deadline.",
            "Nothing else makes sense.",
            "So some examples."
        ],
        [
            "This runs.",
            "At the beginning it does exactly what I said.",
            "One of the computers acquires the lock that's decided arbitrary or one of the processes.",
            "And and it schedules schedules.",
            "The first job that that comes.",
            "Then maybe."
        ],
        [
            "Another job comes, but we don't schedule it becausw by postponing it among the jobs that we have seen so far.",
            "We wouldn't lose anything.",
            "And we don't have the log, so the only process that could schedule is B and it doesn't, it cannot because it doesn't have a log.",
            "So we wait."
        ],
        [
            "And at this time both the lock is released by by the 1st process and this job becomes urgent.",
            "It doesn't make sense to postpone it any longer, because if you postpone it until this time, it wouldn't fit.",
            "So now this job becomes urgent, so both.",
            "Both processes schedule it.",
            "And."
        ],
        [
            "When it's finished well.",
            "Meanwhile, maybe we lose some job.",
            "And.",
            "And at this time again, only the first job is available.",
            "The first algorithm has already scheduled it, so it cannot do anything, and the second algorithm gets the lock and schedules it."
        ],
        [
            "Then maybe another job comes.",
            "The same situation repeats both."
        ],
        [
            "Algorithms scheduled here and."
        ],
        [
            "Lose another job and that's that's the result on this particular instance.",
            "So we can see that that we both schedules.",
            "Get three jobs actually the same three jobs so.",
            "So no matter how the conflict comes out, we get three jobs, but the optimum gets 5."
        ],
        [
            "So this is, this algorithm is no better than than 5 /, 3 competitive and this is the best result which we have for this simple problem."
        ],
        [
            "How do we analyze it so I will not show a full proof but just just give an idea?",
            "Again, we try to map the jobs in the optimal schedule in the into the.",
            "Online schedule, which now are two schedules in fact.",
            "So we cannot like do one to one mapping and and one to one mapping.",
            "Couldn't get us a result with non integral competitive ratio.",
            "So so we.",
            "We sync of each job in opt having value one and we distribute it in some pieces to the jobs in the online schedule.",
            "How we distributed it's that's somewhat complicated and tricky, but we do it in such a way that each job in these schedules, A&B, is charged at most 5 / 6 and because we schedule only half of these jobs that leads to the competitive ratio of 5 / 3."
        ],
        [
            "So that's that's the best result which is now almost 10 years old, and there have been no progress on this problem yet."
        ],
        [
            "I think it's it's such a simple problem that we should expect to be able to solve it optimally.",
            "I have I have actually no guests.",
            "I will not not.",
            "Put up a conjecture whether what the competitive optimal competitive ratio is, but this is.",
            "This is probably one of the problems that.",
            "That I'm proposing."
        ],
        [
            "So if we talk through two, if we tend to more complex scenarios, the throughput problems in general have strange property that parallel machines using more machines than one seems to make them easier.",
            "Make them easier in the sense of being able to get better performance, better competitive ratio.",
            "This may not seem natural, but the inner way save is 2 machines.",
            "We can try to do what we have done with two processes.",
            "Here we could.",
            "We could try to schedule on one of the machines aggressively and on the other machine have time for the.",
            "For the jobs have spaced further jobs that will come.",
            "And.",
            "The results here are."
        ],
        [
            "Also.",
            "Well, not too many of them, so we can show we can analyze the situation for two machines.",
            "For the Terministic algorithm and.",
            "And the optimal competitive ratio there is 3 / 2 and we have some algorithm for more machines that is better than two competitive.",
            "But we have no, no really nontrivial lower bound, so so the lower bound is 6 / 5.",
            "Which is lower than for one machine.",
            "And that's another."
        ],
        [
            "The open problem that I would see as interesting to see something.",
            "About about the problem for many machines.",
            "Um?"
        ],
        [
            "Another variant which which is really goes to the to the early history of online throughput scheduling.",
            "Which is work by Gerhard begging, which is almost 20 years old now.",
            "Is the situation when when we cannot delay the job, so each job has its length and it's really stand either it's scheduled or.",
            "Or it's it's lost forever?",
            "And he studied the situation where we have general length of jobs and general weights.",
            "One immediate observation is that in this generality you cannot do anything, so so a job comes, you have to accept the first job and then another job with much higher weight or much smaller processing time comes and you would lose it and you cannot do anything.",
            "So what is done is that we allow the running job to be to be preempted, which means that we stop it and lose it.",
            "And for these scenarios he proved that there are four competitive algorithms for."
        ],
        [
            "Various cases.",
            "All the simple cases that you could think, think of and we can.",
            "And and he actually.",
            "Studied the situation when the weights somehow depends on the processing time is a function of processing time and he pretty much characterized for which functions.",
            "You can get on competitive online algorithm and the ratio in those cases appears to be happens before and there is a matching lower bound.",
            "So this is this is historical.",
            "Think now something new.",
            "Allow meat remarks about about miswriting her so I should side here this is this is."
        ],
        [
            "I would join to work from from this year's Uproxx IAM IAM omitting many other names because.",
            "I don't, I would forget somebody and then there are many papers.",
            "So that you can find in the proceedings.",
            "So this is our joint work with this look.",
            "Ashy, ash and rock monster from Uproxx.",
            "We do we try to do the same as Gerhard dragging a date, but we do date from machines with speeds.",
            "That means if we get a job, we can.",
            "We can either schedule it immediately or reject it.",
            "But we have machines with different speeds and faster machines process the jobs proportionally faster.",
            "You can imagine it as if you are running some some shopper service where you have different machines and if a customer comes in, if you don't serve him immediately.",
            "He will leave, but once you start serving him, he will stay with you even if it takes forever.",
            "So what happens here?",
            "OK, so so we have some results, basically generalizing the four competitive algorithm too."
        ],
        [
            "This scenario.",
            "And we are interested in.",
            "Also, in the case where all the jobs are the same, they have the same processing time, same, same same weight.",
            "And we.",
            "We just set them as as they come.",
            "Well, obviously, what what you might think is is a good strategy is if a job comes and somebody is available to surface and then take the best machine and surface.",
            "Amazing, good enough."
        ],
        [
            "Uh, here we cannot analyze the greedy algorithm we have.",
            "We have no idea about how good it is.",
            "Well, no idea is not not exact.",
            "We can show that it is too competitive by exactly the same proof as I have shown before by mapping the jobs one to one and we can show that for two machines it's optimal.",
            "But for more machines we only know that if there are many machines, its competitive ratio is bigger than than three halfs and lower than two.",
            "It's.",
            "Well, one thing is that it's a pity that we cannot even analyze the simplest algorithm, but there is still an option that the other algorithm would be better, even though it's not easy to imagine what else you could do.",
            "But maybe, maybe if you have two fast machines and two slow machines and two jobs come, maybe you can serve one fast and one slow to keep you more flexible, but it's not at all clear how this would help or how we could analyze it.",
            "So that's that's the last problem of this part, and I will move to the second part of the talk.",
            "Unless you have some questions.",
            "He really."
        ],
        [
            "Will be interested in unit lines of jobs and general ways.",
            "So unit lankes of jobs make.",
            "Make all problems easier.",
            "I forgot to say at the beginning that we assume that all the parameters like deadlines and release times are integral.",
            "So having unit length of jobs makes all the problems that we have been dealing before before disappear, so the problems that we have been.",
            "Attacking before is how to deal with jobs that overlap whose processing can overlap in various ways.",
            "If you have unit unit jobs.",
            "Well then at each time we decide to run a job and the next time unit we have the machine available and we start the deciding again.",
            "So so this seems to be easier.",
            "Um?"
        ],
        [
            "Again, the outline of this part is pretty much as similar as the previous one we.",
            "The same proof will show that.",
            "The greedy algorithm is too competitive.",
            "Offline problem is easy, it's just a matching problem.",
            "We are matching jobs with some weights to the time slots and even the graph is not only bipartite, but very special and the weights are very special.",
            "Just an easy exercise.",
            "And here we know some better randomized algorithms, better deterministic algorithms.",
            "We know much more about this.",
            "This case.",
            "And.",
            "Although I I said that."
        ],
        [
            "Yeah, that.",
            "I'm dealing mostly with sort of toy problems or theoretical problems.",
            "Theoretical interest problem.",
            "This particular problem got some motivation from from practice.",
            "Because we can think about of the jobs which equal ranks as as pockets and the scheduling algorithm is some network switch which has to forward the packets.",
            "And if the packet gets gets delayed too much, it's lossed.",
            "Somehow the weights correspond to the importance of the packets and the deadlines.",
            "21 how long that bucket can possibly wait?",
            "And because of this motivation, people study.",
            "It also started studying many."
        ],
        [
            "Selected scenarios.",
            "I am listing some that will be important later in the talk.",
            "So we can assume that the packets are.",
            "We know that all the packets are relatively urgent.",
            "We don't want to hold, there are no jobs or no packets that can be held forever and it make make sense to send them tomorrow.",
            "So so true bound data restrictions.",
            "Says that each packet I don't need to be sent immediately or in the next time step.",
            "And there also might be package that must be sent immediately.",
            "There is some some case which is called agreeable deadlines, which says that the deadlines are consistent with the release time.",
            "So it's it's impossible that the packet that comes strictly later.",
            "Has a strictly earlier deadline than some other packet.",
            "So you can.",
            "You can.",
            "Order all the packets that will ever come and so that so that they arrive in this order and also their deadlines expire in the same order.",
            "Similar model, no, not email, it's it's it's not compatible.",
            "Another model is a model of weighted queues, which is really the same model, except that the packets don't tell you the deadlines.",
            "They they they only can compare themselves.",
            "They say I'm more urgent than than the other pocket but but they don't.",
            "Don't tell you whether they.",
            "And they will wait till the next time step or not.",
            "So it appears like you have a Q and in each time step you schedule some packet and then then just the beginning of the queue some some set of packets will just decide and take off disappear.",
            "Then maybe some new packets will arrive, maybe at the end of the queue, maybe in the middle you schedule another one and somebody disappears.",
            "You never know who will be available next time.",
            "And also from the practical viewpoint, it's it's not.",
            "Reasonable to assume that the weights are arbitrary, so people studied studied cases when the number of different weights is limited, like you have VIP packets and non VIP and.",
            "And you see, if you try to do better.",
            "So as I say."
        ],
        [
            "The greedy algorithm behaves the same way, esentially, so here the numbers denote the weights of packets.",
            "And the greedy algorithm whenever, whenever the machine is idle again, we deal only with one machine for the moment.",
            "We start the job that will bring us more money.",
            "So here we will start the.",
            "21 job and we will lose the job of wait 20 because it expires at the end of this time step.",
            "The result."
        ],
        [
            "It's pretty much the same.",
            "We schedule one packet, we lose the packet that the optimum would use with the schedule at the same time."
        ],
        [
            "And again, the proof of the two competitiveness is is the same picture except that.",
            "That I need to say something more.",
            "If, if optimum schedules a bucket that we don't, then we surely schedule a packet which which brings us more money because that's the rule of the algorithm, and that's the end of the proof.",
            "So what else we can do well?",
            "Maybe maybe I'll go back here here it."
        ],
        [
            "The first step if you if you look at the this thing.",
            "As a human, you would immediately schedule the urgent packet packet, which brings you as much money as almost as much money as the packet that will wait.",
            "Um?",
            "It's it's a more reasonable option, but how do you formalize it?",
            "So when when are the weights almost?"
        ],
        [
            "The same.",
            "So."
        ],
        [
            "But we have Fisher randomized algorithm which which works so that at each step it it picks some threshold.",
            "And among the jobs with this threshold, it schedules the job.",
            "This is the earliest deadline.",
            "So here we are not dealing with overlapping job, but the game is that that we have some some job that brings a lot of money but can wait a lot.",
            "We may have another job that brings less money but but it's more urgent and we can have an arbitrary long sequence like that and we need to make a rule how to choose from these important pockets.",
            "Of.",
            "There is some particular way how to how to choose the threshold for which we can prove that the algorithm is 1.58 competitive, which is.",
            "A number that appears in many contexts.",
            "This is a random number that takes values between 1 / E and one with some bias to the lower values.",
            "So we choose uniformly uniformly real number.",
            "Oh, there is a mistake.",
            "This should be between minus one and zero, or there should be minus X here, so it should be corrected.",
            "So we and we we use the exponential to see how much lower the.",
            "And the social days, so we never.",
            "If H is the weight of the the highest, the biggest amount of money that we can get.",
            "We never schedule anything.",
            "Switch gets less than H / 2.7 money, but more likely that the threshold will be somewhere around.",
            "I don't know 1.5 or two.",
            "So how do we?",
            "How do we analyze this?",
            "Well.",
            "It's impossible to do similar thing as we did before some charging because now we have.",
            "Continuous distribution it's not really continuous because there are discrete finitely many packets of which we are choosing, but it's getting messy.",
            "So instead we use potential potential function, which is something that's taken from our Titan analysis.",
            "And it's heavy."
        ],
        [
            "Really used in online algorithms?",
            "Anne.",
            "And the common understanding is that first using a potential function is a universal method, and 2nd that the potential function is something that comes from nowhere.",
            "You can verify the proofs and, but you cannot invent them.",
            "So both of these things are false.",
            "Which I which I will try to extend through to explain to some extent.",
            "So, so how?",
            "What's the meaning of the potential?",
            "So we think about the potential as used in online algorithms as a money that the online algorithm has.",
            "So whenever the online algorithm gets a job, we pay the online algorithm, not only the weight.",
            "But our times the weight where are is the competitive ratio that we are trying to get, and whenever the optimum schedules a job we.",
            "V so so here.",
            "Here the algorithm earns money, and here he needs to pay the optimum debate.",
            "And the potential at the given time is the amount of money that the algorithm needs to have at that point.",
            "So in this way we can easily translate the previous proof in a potential function argument.",
            "So we just think how much money the algorithm would have at this point, and it's the amount of money is exactly.",
            "And the weighted sum of the edges that go across this red line.",
            "So this job 21, the algorithm already has scheduled and and got paid for and the optimum will only schedule it in the future.",
            "So we have to keep some reserve money for that.",
            "And this is, this is often the case.",
            "How the potential looks like.",
            "It somehow measures the discrepancy between the state of the algorithm and the optimum.",
            "Becausw the.",
            "It is good for the algorithm.",
            "Is it as if it is in the same state as the optimum?",
            "Because then.",
            "Then it's safe, and then the future cannot hurt it.",
            "So in our case it's very simple.",
            "We take the potential as."
        ],
        [
            "The as a sum of weights of the jobs.",
            "That the optimum will schedule later, but we have already scheduled.",
            "Uh."
        ],
        [
            "And now to prove that the online algorithm is competitive, we need to show that in each step, the money that we have after this step is bigger than the potential that we are required required to have and the money is the old potential plus what we gain minus what we pay.",
            "And of course for a randomized algorithm."
        ],
        [
            "What we schedule and what will be the new configuration and its potential is random variable, so we take expectation.",
            "And once we some dish over all the steps and at the beginning the potential is zero at the Entity zero, we just have to resolve.",
            "So in what sense this is not not universal?",
            "It's a universal method for deterministic algorithms, but not for randomized.",
            "To make it universal for randomized, you would need to make the potential depends not only on the current state.",
            "But say on the whole distribution, which is exactly what you don't want to do.",
            "Oh, OK, So what happens for this algorithm?",
            "We use basically the same."
        ],
        [
            "Argument.",
            "As before.",
            "So, so there there needs to be.",
            "Taken care of some cases, so if the optimal schedules some job then then we need to distinguish whether we take whether our threshold chosen in the algorithm will be bigger than this weight or smaller.",
            "If our threshold is smaller, it can be arranged so that that this job at the same time doesn't get these two charges, and that's that's where we win with some probability and after some calculation you decide, you realize that this distribution this commercial distribution is the Optima.",
            "Distribution you can take.",
            "And in a sense, the result this result is optimal.",
            "It's optimal among all the algorithms that you can analyze using the potential function.",
            "That it's just the fact that but I don't have time to go into details.",
            "So.",
            "How do we design deterministic algorithm?"
        ],
        [
            "At some point I saw that that this randomized algorithm.",
            "Well, it's it's easy, just chooses among the packets with some random distribution and it should be derandomized in a fairly easy way.",
            "It wasn't easy in the end and but we have found a way how to how to alternate some between these heavy and urgent packets and it gets an algorithm which is better than two competitive.",
            "Currently the best result is little."
        ],
        [
            "A bit better and it uses a fairly complex potential function."
        ],
        [
            "What is an interesting method which which I think was really new in the area method of analysis is that we analyze the algorithm step by step.",
            "But instead of using potential in each step, we make sure that the algorithm is in the same configuration as the optimal schedule, and we achieve that by giving some advantage to the optimum, like related schedule.",
            "Two jobs instead of one, or we'll let it schedule a job and keep it for the future.",
            "And this turned out to be fairly powerful and led to.",
            "Golden ratio competitive algorithm for those instances with consistent deadlines and release times.",
            "Yet another result is that even in this case, where the deadline."
        ],
        [
            "Are not known.",
            "You can do some deterministic algorithm.",
            "So the randomized algorithm has this property, doesn't need to know the deadlines, it only needs to know their ordering.",
            "But the deterministic algorithms always seem to need at least to know which jobs will not be available in the next time step, and it was a big surprise that.",
            "That this is not needed.",
            "Relatively big surprise for people working on this."
        ],
        [
            "I need to get to an open problem.",
            "So.",
            "I introduced the concept of two bounded instances where all the jobs are either very impatient and need to be scheduled immediately, or just impatient and they need to be scheduled in the next time step, so that's that's a case that we can analyze.",
            "Completely.",
            "But even for the general problem, we have no other lower bounds.",
            "So that's strange becausw becausw if we have general jobs that the structure is much richer and we should be able to come up with some hard instances, and that's my.",
            "Next problem whether whether really the general problem could be as easy as that abounded case.",
            "So now it's time to get get back to the puzzle from the beginning.",
            "So what do we know?",
            "What is easy?"
        ],
        [
            "If you don't restrict the job blanks, the problem is strongly NP hard.",
            "Even in the example, if you have one red job that just has to go in some place.",
            "It's it's a partitioning problem.",
            "You have to decide which jobs go left and which job jobs go to the right.",
            "And as I mentioned, if.",
            "If the processing times are one and which arbitrary.",
            "Just matching.",
            "It's almost everything that we know about it."
        ],
        [
            "Also, if if all the jobs have the same Lancs then then the problem is polynomial.",
            "Even maximizing the weight of the jobs that will fit that, that's not so easy.",
            "Polynomial result that I mentioned at the beginning.",
            "But beyond this, the only thing that we know about this puzzle is that if you have two jobs, Lang's and one of them is one we can test if all the jobs will can be scheduled.",
            "So on on one slide I will give the proof which is, which is nice because it's totally different and it's it.",
            "It uses an idea.",
            "That that was used by."
        ],
        [
            "I have dear and material rant for another problem we just set up a linear program.",
            "Where the variables will be the number of the long jobs that have started up to some time.",
            "And the constraints are natural.",
            "The first one says that.",
            "The jobs don't disappear from the schedule that the variables are not on that then that in each piece steps you schedule at most one job.",
            "That between between S&T you start as many jobs as.",
            "This is the number of jobs of along jobs that have released time after us and deadline before up to T. So you schedule all the all the big jobs that have to go in that part and the last constraint is somewhat difficult.",
            "So if you take.",
            "And.",
            "Take all time, all slots between T minus and S. And look how many of them have to be occupied by small jobs.",
            "Then you then if you divide this by P, you must be able to.",
            "Faded.",
            "This many jobs so so so this minus this is the number of big jobs that are scheduled started after S and finished between T. So, and this is how many slots you have available for them, so this better hole.",
            "So why this?",
            "Why is this linear program good it's?"
        ],
        [
            "So the Union module so so it's optimal solution is integral and we can find it.",
            "We can in fact find it faster becausw.",
            "It's it's a.",
            "And incidence the matrix is incidence matrix of directed graph.",
            "So we can do a shortest path computation.",
            "And if we have a scheduled and then we just set the variables as I say."
        ],
        [
            "That and.",
            "And we get a feasible solution.",
            "If."
        ],
        [
            "We have a feasible so integral solution.",
            "Then we can make a schedule by by scheduling fast the big jobs according to where the variables say they should start.",
            "And and then scheduling the small jobs.",
            "This is a bit subtle and for example similar things wouldn't wouldn't hold for four more machines if you try to set up the program.",
            "But"
        ],
        [
            "I will finish with the open problem."
        ],
        [
            "Is coming from."
        ],
        [
            "Chase so really.",
            "If we have these two jobs Lang so we can just test whether all the jobs fades.",
            "Fate we cannot even maximize the number of the jobs that will fit.",
            "Becauses in the linear program, as we have shown at the number of jobs that will be fit, that will be in some interval, comes in the right hand side constraint.",
            "So this is this is pretty amazing that we cannot do that.",
            "And also if say running times are two and three, we cannot even say that all the jobs will fit.",
            "On the other hand, we don't know any other NP hardness result than coming from the partition.",
            "So.",
            "I I hope.",
            "I hope you got some.",
            "Something out of the talk, maybe you will think about some of the problem.",
            "Maybe you will solve it tomorrow, then let me know.",
            "And.",
            "Sometimes I think scheduling is perceived as a very closed area which is old and developed and you cannot get into it.",
            "But I think this is just not true.",
            "There are many simple problems that are.",
            "Still open and somehow somehow the way we work is sometimes very strange.",
            "Sometimes we are trying to solve hard problems.",
            "Because we cannot solve the easy ones.",
            "Or the easiest?"
        ],
        [
            "Later on, so they are still there and waiting for you.",
            "Thank you."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Well, I I would like to thank you all for not getting lost in The Cave, but I would also like to thank organizers for aging everything including the excursion which was.",
                    "label": 0
                },
                {
                    "sent": "Really kind of an extra exceptional place.",
                    "label": 0
                },
                {
                    "sent": "So let me start the talk.",
                    "label": 0
                },
                {
                    "sent": "Buy a puzzle.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Like problem?",
                    "label": 0
                },
                {
                    "sent": "So, so assume that we have some some boxes that can move.",
                    "label": 0
                },
                {
                    "sent": "Within some ranges, and I'm asking you.",
                    "label": 0
                },
                {
                    "sent": "I feel full down here.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I'm asking you too.",
                    "label": 0
                },
                {
                    "sent": "Change them so that they are not one on top of the other.",
                    "label": 0
                },
                {
                    "sent": "By that I mean I asked her in German so that if.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "They drop down, they just fit in a single line.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Is this easy or hard?",
                    "label": 1
                },
                {
                    "sent": "Sometimes it's easy, sometimes it's hard.",
                    "label": 0
                },
                {
                    "sent": "And I will get to get back to that later.",
                    "label": 0
                },
                {
                    "sent": "And I'm in particular interested in in the case when there are finitely many.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Print sizes of boxes.",
                    "label": 0
                },
                {
                    "sent": "So when I was thinking about this talk, I was thinking what what makes me interested in a new area.",
                    "label": 0
                },
                {
                    "sent": "And most often what attracts me are.",
                    "label": 0
                },
                {
                    "sent": "Problems that are easily stated that are look totally accessible.",
                    "label": 0
                },
                {
                    "sent": "I don't need to read a book before I start working on them.",
                    "label": 0
                },
                {
                    "sent": "I can start working on them immediately and it looks like.",
                    "label": 0
                },
                {
                    "sent": "It could be a result tomorrow, and I think this is.",
                    "label": 0
                },
                {
                    "sent": "This is perfect example of that, so I decided to center my talk.",
                    "label": 0
                },
                {
                    "sent": "Around 3 problems like that and I will show some little results to give you some taste of the area.",
                    "label": 0
                },
                {
                    "sent": "And something to think about if you like it.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Let me know.",
                    "label": 0
                },
                {
                    "sent": "Maybe back to the picture.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So, so how does this get formulated as scheduling?",
                    "label": 0
                },
                {
                    "sent": "That's fairly obvious to people in the area.",
                    "label": 0
                },
                {
                    "sent": "I will just call the boxes jobs and I will call the line Bill's schedule.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So in some more usual terminology, the environment is that we have one or more machines.",
                    "label": 1
                },
                {
                    "sent": "And we get as an input jobs which have some lengths.",
                    "label": 0
                },
                {
                    "sent": "They have some release time, which is the earliest time they have to be scheduled, and they have some deadline, which is the latest time when they can be scheduled and they have some weight.",
                    "label": 0
                },
                {
                    "sent": "And the output is a schedule which was just the picture before we need to arrange the jobs so that they do not overlap.",
                    "label": 1
                },
                {
                    "sent": "If we cannot cannot fit some job that it gets rejected, and for this talk our objective will always be to maximize the number of jobs that we fit in the schedule of the order of their weight, possibly.",
                    "label": 0
                },
                {
                    "sent": "And in this.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "It all kind of mostly talk about online algorithm, which is the area I worked in most and the basic problems that I will talk about will concern only a single machine.",
                    "label": 0
                },
                {
                    "sent": "And it will be even simpler than.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Then what I have to run above idle, we will be interested in jobs that have all equal ranks.",
                    "label": 0
                },
                {
                    "sent": "And and even have no weights or we will have jobs that have unit lengths.",
                    "label": 0
                },
                {
                    "sent": "And they have some.",
                    "label": 0
                },
                {
                    "sent": "Then they have some weight.",
                    "label": 0
                },
                {
                    "sent": "So how?",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The.",
                    "label": 0
                },
                {
                    "sent": "I need to say, but what I mean by online scheduling and that's the natural thing that you would imagine.",
                    "label": 0
                },
                {
                    "sent": "You generate the schedule as time goes by, and when a job arrives you you get Informa full information about what kind of job it is, when it has to be done, how much money it pays and so on.",
                    "label": 0
                },
                {
                    "sent": "And then you choose either to schedule it or wait.",
                    "label": 0
                },
                {
                    "sent": "And if you wait then in the next time step you can decide to schedule it or wait wait longer.",
                    "label": 0
                },
                {
                    "sent": "And we measured the online algorithms as by comp.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Differential, which is nothing else than approximation ratio as it is used in approximation algorithms.",
                    "label": 0
                },
                {
                    "sent": "Since we are trying to maximize benefits, higher result is better for the algorithm.",
                    "label": 1
                },
                {
                    "sent": "So we say that an algorithm is our competitive if.",
                    "label": 1
                },
                {
                    "sent": "No algorithm in particular.",
                    "label": 0
                },
                {
                    "sent": "The optimum can get more than our times what our algorithm does.",
                    "label": 0
                },
                {
                    "sent": "And this has to be hold for every instance.",
                    "label": 1
                },
                {
                    "sent": "The algorithms that I will.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Show will be randomized, which means that I will show I will require that for each instance on the other reach over the coin ptosis of the algorithm.",
                    "label": 1
                },
                {
                    "sent": "The average gain, the average profit gained by the algorithm satisfies the previous property.",
                    "label": 0
                },
                {
                    "sent": "So it's it's at least 1 / R of the optimum.",
                    "label": 0
                },
                {
                    "sent": "So these are the preliminaries.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "This is of course not the whole world of scheduling.",
                    "label": 0
                },
                {
                    "sent": "Scheduling comes in many variants, and you have seen maybe some papers and problem settings gets overtime more complicated.",
                    "label": 0
                },
                {
                    "sent": "People introduce various parameters of jobs.",
                    "label": 0
                },
                {
                    "sent": "So they they can require some other resources.",
                    "label": 0
                },
                {
                    "sent": "There may be some restrictions like dependencies between the jobs and machines that can have speeds.",
                    "label": 0
                },
                {
                    "sent": "A job may require more operations on more machines.",
                    "label": 1
                },
                {
                    "sent": "So, so that's something that I would like to stress that the problems that I'm saying that's not not like a research program of the most important program problems in scheduling.",
                    "label": 0
                },
                {
                    "sent": "These are not practical problems.",
                    "label": 0
                },
                {
                    "sent": "Those complex scenarios often are more practical or more motivated by practice.",
                    "label": 0
                },
                {
                    "sent": "But on purpose I'm choosing some simple problems that are elegant that we can talk about immediately without results further introduction.",
                    "label": 0
                },
                {
                    "sent": "Also the scheduling.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "It measures the quality of schedules by different things and throughput is not the most popular, so the most popular and the oldest and studied long time ago.",
                    "label": 0
                },
                {
                    "sent": "Measures like the length of the schedule or other measure that measures.",
                    "label": 1
                },
                {
                    "sent": "How do you balance the work between different servers so?",
                    "label": 0
                },
                {
                    "sent": "So different machines, so it's sort of.",
                    "label": 0
                },
                {
                    "sent": "Taking the perspective of somebody who who has to pay the cost of running things or the other popular area is mean some objectives, which means that we look at each job and somehow measure how well it is served and we look at the users and and on average we want them to be served well.",
                    "label": 0
                },
                {
                    "sent": "And so, but this yet something different.",
                    "label": 0
                },
                {
                    "sent": "So in a way, I think it reflects also the changing.",
                    "label": 0
                },
                {
                    "sent": "Perception of computers.",
                    "label": 0
                },
                {
                    "sent": "So when I was.",
                    "label": 0
                },
                {
                    "sent": "I still remember the times where computers were taken very seriously, so if they were given a job they were supposed to finish everything and the result was taken as a law.",
                    "label": 0
                },
                {
                    "sent": "It was something that you wouldn't dispute.",
                    "label": 0
                },
                {
                    "sent": "So so computers were used for doing serious things like sending people in space, or maybe computing your salary.",
                    "label": 0
                },
                {
                    "sent": "And you wouldn't like to have the result random.",
                    "label": 0
                },
                {
                    "sent": "It would, it wouldn't be imaginable that you run the same computer program twice and get a different result.",
                    "label": 0
                },
                {
                    "sent": "Although further salary, it could be nice, but.",
                    "label": 0
                },
                {
                    "sent": "But it just wasn't wasn't acceptable so.",
                    "label": 0
                },
                {
                    "sent": "Some pseudorandom generators were not a serious programming tool, but something for game programmers.",
                    "label": 0
                },
                {
                    "sent": "And now we are somehow the computers are so much more powerful, but they are not taken as reliable.",
                    "label": 0
                },
                {
                    "sent": "We are all used to the fact that things happen differently on different days and so on.",
                    "label": 0
                },
                {
                    "sent": "So, so we are.",
                    "label": 0
                },
                {
                    "sent": "It's more acceptable in practical scenarios that the computers don't really do what we ask them to do.",
                    "label": 0
                },
                {
                    "sent": "So now I will get to the first.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Problem and 1st area.",
                    "label": 0
                },
                {
                    "sent": "The talk will have three relatively disjoint disjoint parts, so if you want to ask questions, maybe don't postpone them till the end.",
                    "label": 0
                },
                {
                    "sent": "So the first scenario will that we have all jobs are the same, they have the same length and there are no weights.",
                    "label": 1
                },
                {
                    "sent": "They only differ in timing in when they are released and when they have deadlines.",
                    "label": 0
                },
                {
                    "sent": "And we have a single machine.",
                    "label": 1
                },
                {
                    "sent": "So this is this is simple simple scenario, yet it's not completely understood, so it's.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "If we are not in the online setting, but we get everything in advance, it's easy to compute the optimal solution.",
                    "label": 0
                },
                {
                    "sent": "Easier in the sense it's polynomial.",
                    "label": 0
                },
                {
                    "sent": "It's not something that you should see in 5 minutes.",
                    "label": 0
                },
                {
                    "sent": "It was actually proven in the 90s and it involves some work.",
                    "label": 0
                },
                {
                    "sent": "As often in the online algorithms, the first thing that we do to understand the problem is that we take some greedy algorithm and analyze it.",
                    "label": 0
                },
                {
                    "sent": "And here and in the other scenario as well, it turns out that the greedy algorithm is too competitive, that it does at least half of the work of the optimal solution.",
                    "label": 0
                },
                {
                    "sent": "And here actually, this turns out to be optimal.",
                    "label": 0
                },
                {
                    "sent": "So to improve upon this we we have tried to design randomized algorithms.",
                    "label": 0
                },
                {
                    "sent": "We know one which which is probably better.",
                    "label": 0
                },
                {
                    "sent": "And and we would be interested in knowing more.",
                    "label": 0
                },
                {
                    "sent": "So the greedy algorithm, what it does it?",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Whenever the machine is idle, as time goes on.",
                    "label": 0
                },
                {
                    "sent": "If the machine is available to process jobs and there is some jobs to be processed, we just started.",
                    "label": 0
                },
                {
                    "sent": "So here at the beginning of the schedule, we schedule the first jobs.",
                    "label": 0
                },
                {
                    "sent": "The numbers are just labels to distinguish the jobs.",
                    "label": 0
                },
                {
                    "sent": "They are all the same.",
                    "label": 0
                },
                {
                    "sent": "But when we start the job, the first job then then the second job comes and.",
                    "label": 0
                },
                {
                    "sent": "We cannot schedule it.",
                    "label": 0
                },
                {
                    "sent": "We realize that it would have been better to postpone the first job because it has.",
                    "label": 0
                },
                {
                    "sent": "It can be moved.",
                    "label": 0
                },
                {
                    "sent": "The second job cannot, but but we are out of luck.",
                    "label": 0
                },
                {
                    "sent": "And we continue like this.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And the result is that the greedy schedule schedules the.",
                    "label": 0
                },
                {
                    "sent": "Green jobs and we lose the red jobs.",
                    "label": 0
                },
                {
                    "sent": "And so.",
                    "label": 0
                },
                {
                    "sent": "I said that this is too competitive and it looks intuitively that.",
                    "label": 0
                },
                {
                    "sent": "That for each job that we lose, there is one job that we actually schedule, but we have to prove it.",
                    "label": 0
                },
                {
                    "sent": "And that's that's approved that you can do in two minutes or so.",
                    "label": 0
                },
                {
                    "sent": "How do we do it so so we map?",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Each job in the optimal schedule to some job integrated schedule.",
                    "label": 0
                },
                {
                    "sent": "Well, if the optimal schedules are job that we did.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Then then we map it to itself.",
                    "label": 1
                },
                {
                    "sent": "That's that's easy.",
                    "label": 0
                },
                {
                    "sent": "And for the other jobs, we map them to the job that is running at the same time in the creative schedule.",
                    "label": 1
                },
                {
                    "sent": "So to be precise, when you look at the time when the optimal schedule starts the job, we look what is running there.",
                    "label": 0
                },
                {
                    "sent": "And map the job to this one and this mapping.",
                    "label": 0
                },
                {
                    "sent": "The red mapping is also one to one because all the jobs have the same length, so the optimal schedule cannot start two jobs.",
                    "label": 0
                },
                {
                    "sent": "While the same job is running.",
                    "label": 0
                },
                {
                    "sent": "And that's also so we have.",
                    "label": 0
                },
                {
                    "sent": "We have classified the optimal jobs into two categories.",
                    "label": 0
                },
                {
                    "sent": "Each character is smaller than the number of jobs that we have scheduled, so it's at most twice as much.",
                    "label": 0
                },
                {
                    "sent": "OK, so so we cannot do better if we imagine that we get a single job and.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Its range is slightly bigger than than twice its length.",
                    "label": 0
                },
                {
                    "sent": "We can do two things we can.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Behave like the greedy algorithm and schedule the job and then another job comes and.",
                    "label": 1
                },
                {
                    "sent": "It's arranged so that the optimum can schedule both red and blue job, but the red job cannot dislodged by the gradient, so that's the example that we have seen before.",
                    "label": 0
                },
                {
                    "sent": "And the other option for the algorithm is that the.",
                    "label": 1
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "It will wait for some time and then we.",
                    "label": 0
                },
                {
                    "sent": "Put the red job so that if the algorithm didn't wait, it would get two jobs.",
                    "label": 0
                },
                {
                    "sent": "So no matter what the algorithm does, we create an instance where it schedules only one out of the two jobs.",
                    "label": 0
                },
                {
                    "sent": "So we can say that no deterministic algorithm is better than two competitive.",
                    "label": 1
                },
                {
                    "sent": "But",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Actually, from the same example.",
                    "label": 0
                },
                {
                    "sent": "From the same example, we can, we can say that no randomized algorithm is better than 4 / 3 competitive.",
                    "label": 1
                },
                {
                    "sent": "Becausw if we took these two instances, no matter what the randomized algorithm does it choose waiting on non waiting one of these two possibilities, which probability at least 1/2 and in the corresponding instance it loses one jobs.",
                    "label": 0
                },
                {
                    "sent": "So out of these two jobs it loses one job with probability at least 1/2.",
                    "label": 1
                },
                {
                    "sent": "So it gets on average 1.5 jobs.",
                    "label": 0
                },
                {
                    "sent": "Out of two, which is 4 / 3 competitive.",
                    "label": 0
                },
                {
                    "sent": "So what we can do about this it it would.",
                    "label": 0
                },
                {
                    "sent": "We do the obvious thing in a non obvious way, so the obvious thing is that we have to flip a coin.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "For this job, whether we will wait or not, but the question is, how do we arrange it for for a general schedule?",
                    "label": 0
                },
                {
                    "sent": "And in fact, we do something that's called barely random algorithms, and that appears only in online algorithms.",
                    "label": 0
                },
                {
                    "sent": "We generated two schedules.",
                    "label": 0
                },
                {
                    "sent": "We have an online algorithm that will generate two schedules and before it started starts outputting it, flips a coin and it will follow one of these two schedules.",
                    "label": 1
                },
                {
                    "sent": "So of course it doesn't make sense to do such as thinking regular algorithms if we have two algorithms.",
                    "label": 0
                },
                {
                    "sent": "We just run both and choose choose the better option.",
                    "label": 0
                },
                {
                    "sent": "But that's not possible for online algorithms.",
                    "label": 0
                },
                {
                    "sent": "Here we have to follow.",
                    "label": 0
                },
                {
                    "sent": "Produce output from the beginning.",
                    "label": 0
                },
                {
                    "sent": "And actually, I think it would be that that we somehow try to generate these schedules so that one is greedy and one is more waiting, but that's not what we do.",
                    "label": 0
                },
                {
                    "sent": "We generate both both schedules by the same algorithm.",
                    "label": 0
                },
                {
                    "sent": "So we imagine it as two processes, but they will lose you some lock mechanism.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So that when there is a choice, they don't do the same thing.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Dual dual for the algorithm that generates one of the schedule.",
                    "label": 0
                },
                {
                    "sent": "8 and below.",
                    "label": 0
                },
                {
                    "sent": "It's somehow simpler than it looks like, so at every time when we can schedule a job, we look at the set of jobs that we have.",
                    "label": 0
                },
                {
                    "sent": "And we ask ourselves whether it makes sense, makes possibly sense to wait.",
                    "label": 0
                },
                {
                    "sent": "Well.",
                    "label": 0
                },
                {
                    "sent": "How do we formalize this?",
                    "label": 0
                },
                {
                    "sent": "So we ask what would happen if we wait for the time P, which is the length of the jobs?",
                    "label": 0
                },
                {
                    "sent": "And then try to schedule the same set of jobs.",
                    "label": 0
                },
                {
                    "sent": "If we would lose some job, or if the result would be that we schedule fewer jobs, then it doesn't make sense to wait then, then we are forced to.",
                    "label": 0
                },
                {
                    "sent": "We have to run the job, so that's the first case.",
                    "label": 0
                },
                {
                    "sent": "If it doesn't make sense to wait because we would lose some job, then we don't need.",
                    "label": 1
                },
                {
                    "sent": "And if we can wait, we just coordinate the two schedules and we coordinate.",
                    "label": 0
                },
                {
                    "sent": "It is through the log.",
                    "label": 0
                },
                {
                    "sent": "So that.",
                    "label": 0
                },
                {
                    "sent": "If it makes sense to wait, we try to see if the lock is available and if it is, we get the lock start, start the, start a job and release the lock after the job is completed and if the lock is not available, we just stay idle.",
                    "label": 1
                },
                {
                    "sent": "And I didn't say how do we choose a job to run if we choose to run a job, we choose the one which has early as deadline.",
                    "label": 0
                },
                {
                    "sent": "Nothing else makes sense.",
                    "label": 0
                },
                {
                    "sent": "So some examples.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This runs.",
                    "label": 0
                },
                {
                    "sent": "At the beginning it does exactly what I said.",
                    "label": 0
                },
                {
                    "sent": "One of the computers acquires the lock that's decided arbitrary or one of the processes.",
                    "label": 0
                },
                {
                    "sent": "And and it schedules schedules.",
                    "label": 0
                },
                {
                    "sent": "The first job that that comes.",
                    "label": 0
                },
                {
                    "sent": "Then maybe.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Another job comes, but we don't schedule it becausw by postponing it among the jobs that we have seen so far.",
                    "label": 0
                },
                {
                    "sent": "We wouldn't lose anything.",
                    "label": 0
                },
                {
                    "sent": "And we don't have the log, so the only process that could schedule is B and it doesn't, it cannot because it doesn't have a log.",
                    "label": 0
                },
                {
                    "sent": "So we wait.",
                    "label": 0
                }
            ]
        },
        "clip_31": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And at this time both the lock is released by by the 1st process and this job becomes urgent.",
                    "label": 0
                },
                {
                    "sent": "It doesn't make sense to postpone it any longer, because if you postpone it until this time, it wouldn't fit.",
                    "label": 0
                },
                {
                    "sent": "So now this job becomes urgent, so both.",
                    "label": 0
                },
                {
                    "sent": "Both processes schedule it.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                }
            ]
        },
        "clip_32": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "When it's finished well.",
                    "label": 0
                },
                {
                    "sent": "Meanwhile, maybe we lose some job.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "And at this time again, only the first job is available.",
                    "label": 0
                },
                {
                    "sent": "The first algorithm has already scheduled it, so it cannot do anything, and the second algorithm gets the lock and schedules it.",
                    "label": 0
                }
            ]
        },
        "clip_33": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Then maybe another job comes.",
                    "label": 0
                },
                {
                    "sent": "The same situation repeats both.",
                    "label": 0
                }
            ]
        },
        "clip_34": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Algorithms scheduled here and.",
                    "label": 0
                }
            ]
        },
        "clip_35": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Lose another job and that's that's the result on this particular instance.",
                    "label": 0
                },
                {
                    "sent": "So we can see that that we both schedules.",
                    "label": 0
                },
                {
                    "sent": "Get three jobs actually the same three jobs so.",
                    "label": 0
                },
                {
                    "sent": "So no matter how the conflict comes out, we get three jobs, but the optimum gets 5.",
                    "label": 0
                }
            ]
        },
        "clip_36": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So this is, this algorithm is no better than than 5 /, 3 competitive and this is the best result which we have for this simple problem.",
                    "label": 0
                }
            ]
        },
        "clip_37": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "How do we analyze it so I will not show a full proof but just just give an idea?",
                    "label": 0
                },
                {
                    "sent": "Again, we try to map the jobs in the optimal schedule in the into the.",
                    "label": 0
                },
                {
                    "sent": "Online schedule, which now are two schedules in fact.",
                    "label": 0
                },
                {
                    "sent": "So we cannot like do one to one mapping and and one to one mapping.",
                    "label": 0
                },
                {
                    "sent": "Couldn't get us a result with non integral competitive ratio.",
                    "label": 0
                },
                {
                    "sent": "So so we.",
                    "label": 0
                },
                {
                    "sent": "We sync of each job in opt having value one and we distribute it in some pieces to the jobs in the online schedule.",
                    "label": 1
                },
                {
                    "sent": "How we distributed it's that's somewhat complicated and tricky, but we do it in such a way that each job in these schedules, A&B, is charged at most 5 / 6 and because we schedule only half of these jobs that leads to the competitive ratio of 5 / 3.",
                    "label": 1
                }
            ]
        },
        "clip_38": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So that's that's the best result which is now almost 10 years old, and there have been no progress on this problem yet.",
                    "label": 0
                }
            ]
        },
        "clip_39": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I think it's it's such a simple problem that we should expect to be able to solve it optimally.",
                    "label": 0
                },
                {
                    "sent": "I have I have actually no guests.",
                    "label": 0
                },
                {
                    "sent": "I will not not.",
                    "label": 0
                },
                {
                    "sent": "Put up a conjecture whether what the competitive optimal competitive ratio is, but this is.",
                    "label": 0
                },
                {
                    "sent": "This is probably one of the problems that.",
                    "label": 0
                },
                {
                    "sent": "That I'm proposing.",
                    "label": 0
                }
            ]
        },
        "clip_40": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So if we talk through two, if we tend to more complex scenarios, the throughput problems in general have strange property that parallel machines using more machines than one seems to make them easier.",
                    "label": 1
                },
                {
                    "sent": "Make them easier in the sense of being able to get better performance, better competitive ratio.",
                    "label": 0
                },
                {
                    "sent": "This may not seem natural, but the inner way save is 2 machines.",
                    "label": 0
                },
                {
                    "sent": "We can try to do what we have done with two processes.",
                    "label": 0
                },
                {
                    "sent": "Here we could.",
                    "label": 0
                },
                {
                    "sent": "We could try to schedule on one of the machines aggressively and on the other machine have time for the.",
                    "label": 0
                },
                {
                    "sent": "For the jobs have spaced further jobs that will come.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "The results here are.",
                    "label": 0
                }
            ]
        },
        "clip_41": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Also.",
                    "label": 0
                },
                {
                    "sent": "Well, not too many of them, so we can show we can analyze the situation for two machines.",
                    "label": 0
                },
                {
                    "sent": "For the Terministic algorithm and.",
                    "label": 1
                },
                {
                    "sent": "And the optimal competitive ratio there is 3 / 2 and we have some algorithm for more machines that is better than two competitive.",
                    "label": 1
                },
                {
                    "sent": "But we have no, no really nontrivial lower bound, so so the lower bound is 6 / 5.",
                    "label": 1
                },
                {
                    "sent": "Which is lower than for one machine.",
                    "label": 0
                },
                {
                    "sent": "And that's another.",
                    "label": 0
                }
            ]
        },
        "clip_42": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The open problem that I would see as interesting to see something.",
                    "label": 0
                },
                {
                    "sent": "About about the problem for many machines.",
                    "label": 0
                },
                {
                    "sent": "Um?",
                    "label": 0
                }
            ]
        },
        "clip_43": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Another variant which which is really goes to the to the early history of online throughput scheduling.",
                    "label": 1
                },
                {
                    "sent": "Which is work by Gerhard begging, which is almost 20 years old now.",
                    "label": 0
                },
                {
                    "sent": "Is the situation when when we cannot delay the job, so each job has its length and it's really stand either it's scheduled or.",
                    "label": 1
                },
                {
                    "sent": "Or it's it's lost forever?",
                    "label": 0
                },
                {
                    "sent": "And he studied the situation where we have general length of jobs and general weights.",
                    "label": 1
                },
                {
                    "sent": "One immediate observation is that in this generality you cannot do anything, so so a job comes, you have to accept the first job and then another job with much higher weight or much smaller processing time comes and you would lose it and you cannot do anything.",
                    "label": 0
                },
                {
                    "sent": "So what is done is that we allow the running job to be to be preempted, which means that we stop it and lose it.",
                    "label": 0
                },
                {
                    "sent": "And for these scenarios he proved that there are four competitive algorithms for.",
                    "label": 0
                }
            ]
        },
        "clip_44": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Various cases.",
                    "label": 0
                },
                {
                    "sent": "All the simple cases that you could think, think of and we can.",
                    "label": 0
                },
                {
                    "sent": "And and he actually.",
                    "label": 0
                },
                {
                    "sent": "Studied the situation when the weights somehow depends on the processing time is a function of processing time and he pretty much characterized for which functions.",
                    "label": 0
                },
                {
                    "sent": "You can get on competitive online algorithm and the ratio in those cases appears to be happens before and there is a matching lower bound.",
                    "label": 1
                },
                {
                    "sent": "So this is this is historical.",
                    "label": 0
                },
                {
                    "sent": "Think now something new.",
                    "label": 0
                },
                {
                    "sent": "Allow meat remarks about about miswriting her so I should side here this is this is.",
                    "label": 0
                }
            ]
        },
        "clip_45": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "I would join to work from from this year's Uproxx IAM IAM omitting many other names because.",
                    "label": 0
                },
                {
                    "sent": "I don't, I would forget somebody and then there are many papers.",
                    "label": 0
                },
                {
                    "sent": "So that you can find in the proceedings.",
                    "label": 0
                },
                {
                    "sent": "So this is our joint work with this look.",
                    "label": 0
                },
                {
                    "sent": "Ashy, ash and rock monster from Uproxx.",
                    "label": 0
                },
                {
                    "sent": "We do we try to do the same as Gerhard dragging a date, but we do date from machines with speeds.",
                    "label": 1
                },
                {
                    "sent": "That means if we get a job, we can.",
                    "label": 0
                },
                {
                    "sent": "We can either schedule it immediately or reject it.",
                    "label": 0
                },
                {
                    "sent": "But we have machines with different speeds and faster machines process the jobs proportionally faster.",
                    "label": 0
                },
                {
                    "sent": "You can imagine it as if you are running some some shopper service where you have different machines and if a customer comes in, if you don't serve him immediately.",
                    "label": 0
                },
                {
                    "sent": "He will leave, but once you start serving him, he will stay with you even if it takes forever.",
                    "label": 0
                },
                {
                    "sent": "So what happens here?",
                    "label": 0
                },
                {
                    "sent": "OK, so so we have some results, basically generalizing the four competitive algorithm too.",
                    "label": 0
                }
            ]
        },
        "clip_46": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This scenario.",
                    "label": 0
                },
                {
                    "sent": "And we are interested in.",
                    "label": 0
                },
                {
                    "sent": "Also, in the case where all the jobs are the same, they have the same processing time, same, same same weight.",
                    "label": 0
                },
                {
                    "sent": "And we.",
                    "label": 0
                },
                {
                    "sent": "We just set them as as they come.",
                    "label": 0
                },
                {
                    "sent": "Well, obviously, what what you might think is is a good strategy is if a job comes and somebody is available to surface and then take the best machine and surface.",
                    "label": 0
                },
                {
                    "sent": "Amazing, good enough.",
                    "label": 0
                }
            ]
        },
        "clip_47": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Uh, here we cannot analyze the greedy algorithm we have.",
                    "label": 1
                },
                {
                    "sent": "We have no idea about how good it is.",
                    "label": 0
                },
                {
                    "sent": "Well, no idea is not not exact.",
                    "label": 1
                },
                {
                    "sent": "We can show that it is too competitive by exactly the same proof as I have shown before by mapping the jobs one to one and we can show that for two machines it's optimal.",
                    "label": 1
                },
                {
                    "sent": "But for more machines we only know that if there are many machines, its competitive ratio is bigger than than three halfs and lower than two.",
                    "label": 0
                },
                {
                    "sent": "It's.",
                    "label": 0
                },
                {
                    "sent": "Well, one thing is that it's a pity that we cannot even analyze the simplest algorithm, but there is still an option that the other algorithm would be better, even though it's not easy to imagine what else you could do.",
                    "label": 0
                },
                {
                    "sent": "But maybe, maybe if you have two fast machines and two slow machines and two jobs come, maybe you can serve one fast and one slow to keep you more flexible, but it's not at all clear how this would help or how we could analyze it.",
                    "label": 0
                },
                {
                    "sent": "So that's that's the last problem of this part, and I will move to the second part of the talk.",
                    "label": 0
                },
                {
                    "sent": "Unless you have some questions.",
                    "label": 0
                },
                {
                    "sent": "He really.",
                    "label": 0
                }
            ]
        },
        "clip_48": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Will be interested in unit lines of jobs and general ways.",
                    "label": 0
                },
                {
                    "sent": "So unit lankes of jobs make.",
                    "label": 0
                },
                {
                    "sent": "Make all problems easier.",
                    "label": 0
                },
                {
                    "sent": "I forgot to say at the beginning that we assume that all the parameters like deadlines and release times are integral.",
                    "label": 0
                },
                {
                    "sent": "So having unit length of jobs makes all the problems that we have been dealing before before disappear, so the problems that we have been.",
                    "label": 1
                },
                {
                    "sent": "Attacking before is how to deal with jobs that overlap whose processing can overlap in various ways.",
                    "label": 0
                },
                {
                    "sent": "If you have unit unit jobs.",
                    "label": 0
                },
                {
                    "sent": "Well then at each time we decide to run a job and the next time unit we have the machine available and we start the deciding again.",
                    "label": 0
                },
                {
                    "sent": "So so this seems to be easier.",
                    "label": 0
                },
                {
                    "sent": "Um?",
                    "label": 0
                }
            ]
        },
        "clip_49": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Again, the outline of this part is pretty much as similar as the previous one we.",
                    "label": 0
                },
                {
                    "sent": "The same proof will show that.",
                    "label": 0
                },
                {
                    "sent": "The greedy algorithm is too competitive.",
                    "label": 1
                },
                {
                    "sent": "Offline problem is easy, it's just a matching problem.",
                    "label": 1
                },
                {
                    "sent": "We are matching jobs with some weights to the time slots and even the graph is not only bipartite, but very special and the weights are very special.",
                    "label": 1
                },
                {
                    "sent": "Just an easy exercise.",
                    "label": 0
                },
                {
                    "sent": "And here we know some better randomized algorithms, better deterministic algorithms.",
                    "label": 0
                },
                {
                    "sent": "We know much more about this.",
                    "label": 0
                },
                {
                    "sent": "This case.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "Although I I said that.",
                    "label": 0
                }
            ]
        },
        "clip_50": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Yeah, that.",
                    "label": 0
                },
                {
                    "sent": "I'm dealing mostly with sort of toy problems or theoretical problems.",
                    "label": 0
                },
                {
                    "sent": "Theoretical interest problem.",
                    "label": 0
                },
                {
                    "sent": "This particular problem got some motivation from from practice.",
                    "label": 0
                },
                {
                    "sent": "Because we can think about of the jobs which equal ranks as as pockets and the scheduling algorithm is some network switch which has to forward the packets.",
                    "label": 0
                },
                {
                    "sent": "And if the packet gets gets delayed too much, it's lossed.",
                    "label": 0
                },
                {
                    "sent": "Somehow the weights correspond to the importance of the packets and the deadlines.",
                    "label": 0
                },
                {
                    "sent": "21 how long that bucket can possibly wait?",
                    "label": 0
                },
                {
                    "sent": "And because of this motivation, people study.",
                    "label": 0
                },
                {
                    "sent": "It also started studying many.",
                    "label": 0
                }
            ]
        },
        "clip_51": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Selected scenarios.",
                    "label": 0
                },
                {
                    "sent": "I am listing some that will be important later in the talk.",
                    "label": 0
                },
                {
                    "sent": "So we can assume that the packets are.",
                    "label": 0
                },
                {
                    "sent": "We know that all the packets are relatively urgent.",
                    "label": 0
                },
                {
                    "sent": "We don't want to hold, there are no jobs or no packets that can be held forever and it make make sense to send them tomorrow.",
                    "label": 0
                },
                {
                    "sent": "So so true bound data restrictions.",
                    "label": 0
                },
                {
                    "sent": "Says that each packet I don't need to be sent immediately or in the next time step.",
                    "label": 0
                },
                {
                    "sent": "And there also might be package that must be sent immediately.",
                    "label": 0
                },
                {
                    "sent": "There is some some case which is called agreeable deadlines, which says that the deadlines are consistent with the release time.",
                    "label": 1
                },
                {
                    "sent": "So it's it's impossible that the packet that comes strictly later.",
                    "label": 0
                },
                {
                    "sent": "Has a strictly earlier deadline than some other packet.",
                    "label": 0
                },
                {
                    "sent": "So you can.",
                    "label": 0
                },
                {
                    "sent": "You can.",
                    "label": 0
                },
                {
                    "sent": "Order all the packets that will ever come and so that so that they arrive in this order and also their deadlines expire in the same order.",
                    "label": 0
                },
                {
                    "sent": "Similar model, no, not email, it's it's it's not compatible.",
                    "label": 1
                },
                {
                    "sent": "Another model is a model of weighted queues, which is really the same model, except that the packets don't tell you the deadlines.",
                    "label": 0
                },
                {
                    "sent": "They they they only can compare themselves.",
                    "label": 0
                },
                {
                    "sent": "They say I'm more urgent than than the other pocket but but they don't.",
                    "label": 0
                },
                {
                    "sent": "Don't tell you whether they.",
                    "label": 0
                },
                {
                    "sent": "And they will wait till the next time step or not.",
                    "label": 0
                },
                {
                    "sent": "So it appears like you have a Q and in each time step you schedule some packet and then then just the beginning of the queue some some set of packets will just decide and take off disappear.",
                    "label": 0
                },
                {
                    "sent": "Then maybe some new packets will arrive, maybe at the end of the queue, maybe in the middle you schedule another one and somebody disappears.",
                    "label": 0
                },
                {
                    "sent": "You never know who will be available next time.",
                    "label": 0
                },
                {
                    "sent": "And also from the practical viewpoint, it's it's not.",
                    "label": 0
                },
                {
                    "sent": "Reasonable to assume that the weights are arbitrary, so people studied studied cases when the number of different weights is limited, like you have VIP packets and non VIP and.",
                    "label": 0
                },
                {
                    "sent": "And you see, if you try to do better.",
                    "label": 0
                },
                {
                    "sent": "So as I say.",
                    "label": 0
                }
            ]
        },
        "clip_52": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The greedy algorithm behaves the same way, esentially, so here the numbers denote the weights of packets.",
                    "label": 0
                },
                {
                    "sent": "And the greedy algorithm whenever, whenever the machine is idle again, we deal only with one machine for the moment.",
                    "label": 0
                },
                {
                    "sent": "We start the job that will bring us more money.",
                    "label": 0
                },
                {
                    "sent": "So here we will start the.",
                    "label": 0
                },
                {
                    "sent": "21 job and we will lose the job of wait 20 because it expires at the end of this time step.",
                    "label": 0
                },
                {
                    "sent": "The result.",
                    "label": 0
                }
            ]
        },
        "clip_53": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "It's pretty much the same.",
                    "label": 0
                },
                {
                    "sent": "We schedule one packet, we lose the packet that the optimum would use with the schedule at the same time.",
                    "label": 0
                }
            ]
        },
        "clip_54": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And again, the proof of the two competitiveness is is the same picture except that.",
                    "label": 0
                },
                {
                    "sent": "That I need to say something more.",
                    "label": 0
                },
                {
                    "sent": "If, if optimum schedules a bucket that we don't, then we surely schedule a packet which which brings us more money because that's the rule of the algorithm, and that's the end of the proof.",
                    "label": 0
                },
                {
                    "sent": "So what else we can do well?",
                    "label": 0
                },
                {
                    "sent": "Maybe maybe I'll go back here here it.",
                    "label": 0
                }
            ]
        },
        "clip_55": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The first step if you if you look at the this thing.",
                    "label": 0
                },
                {
                    "sent": "As a human, you would immediately schedule the urgent packet packet, which brings you as much money as almost as much money as the packet that will wait.",
                    "label": 0
                },
                {
                    "sent": "Um?",
                    "label": 0
                },
                {
                    "sent": "It's it's a more reasonable option, but how do you formalize it?",
                    "label": 0
                },
                {
                    "sent": "So when when are the weights almost?",
                    "label": 0
                }
            ]
        },
        "clip_56": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The same.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_57": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "But we have Fisher randomized algorithm which which works so that at each step it it picks some threshold.",
                    "label": 0
                },
                {
                    "sent": "And among the jobs with this threshold, it schedules the job.",
                    "label": 0
                },
                {
                    "sent": "This is the earliest deadline.",
                    "label": 0
                },
                {
                    "sent": "So here we are not dealing with overlapping job, but the game is that that we have some some job that brings a lot of money but can wait a lot.",
                    "label": 0
                },
                {
                    "sent": "We may have another job that brings less money but but it's more urgent and we can have an arbitrary long sequence like that and we need to make a rule how to choose from these important pockets.",
                    "label": 0
                },
                {
                    "sent": "Of.",
                    "label": 0
                },
                {
                    "sent": "There is some particular way how to how to choose the threshold for which we can prove that the algorithm is 1.58 competitive, which is.",
                    "label": 0
                },
                {
                    "sent": "A number that appears in many contexts.",
                    "label": 0
                },
                {
                    "sent": "This is a random number that takes values between 1 / E and one with some bias to the lower values.",
                    "label": 0
                },
                {
                    "sent": "So we choose uniformly uniformly real number.",
                    "label": 0
                },
                {
                    "sent": "Oh, there is a mistake.",
                    "label": 0
                },
                {
                    "sent": "This should be between minus one and zero, or there should be minus X here, so it should be corrected.",
                    "label": 0
                },
                {
                    "sent": "So we and we we use the exponential to see how much lower the.",
                    "label": 0
                },
                {
                    "sent": "And the social days, so we never.",
                    "label": 0
                },
                {
                    "sent": "If H is the weight of the the highest, the biggest amount of money that we can get.",
                    "label": 0
                },
                {
                    "sent": "We never schedule anything.",
                    "label": 0
                },
                {
                    "sent": "Switch gets less than H / 2.7 money, but more likely that the threshold will be somewhere around.",
                    "label": 0
                },
                {
                    "sent": "I don't know 1.5 or two.",
                    "label": 0
                },
                {
                    "sent": "So how do we?",
                    "label": 0
                },
                {
                    "sent": "How do we analyze this?",
                    "label": 0
                },
                {
                    "sent": "Well.",
                    "label": 0
                },
                {
                    "sent": "It's impossible to do similar thing as we did before some charging because now we have.",
                    "label": 0
                },
                {
                    "sent": "Continuous distribution it's not really continuous because there are discrete finitely many packets of which we are choosing, but it's getting messy.",
                    "label": 0
                },
                {
                    "sent": "So instead we use potential potential function, which is something that's taken from our Titan analysis.",
                    "label": 0
                },
                {
                    "sent": "And it's heavy.",
                    "label": 0
                }
            ]
        },
        "clip_58": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Really used in online algorithms?",
                    "label": 0
                },
                {
                    "sent": "Anne.",
                    "label": 0
                },
                {
                    "sent": "And the common understanding is that first using a potential function is a universal method, and 2nd that the potential function is something that comes from nowhere.",
                    "label": 0
                },
                {
                    "sent": "You can verify the proofs and, but you cannot invent them.",
                    "label": 0
                },
                {
                    "sent": "So both of these things are false.",
                    "label": 0
                },
                {
                    "sent": "Which I which I will try to extend through to explain to some extent.",
                    "label": 0
                },
                {
                    "sent": "So, so how?",
                    "label": 0
                },
                {
                    "sent": "What's the meaning of the potential?",
                    "label": 0
                },
                {
                    "sent": "So we think about the potential as used in online algorithms as a money that the online algorithm has.",
                    "label": 0
                },
                {
                    "sent": "So whenever the online algorithm gets a job, we pay the online algorithm, not only the weight.",
                    "label": 0
                },
                {
                    "sent": "But our times the weight where are is the competitive ratio that we are trying to get, and whenever the optimum schedules a job we.",
                    "label": 0
                },
                {
                    "sent": "V so so here.",
                    "label": 0
                },
                {
                    "sent": "Here the algorithm earns money, and here he needs to pay the optimum debate.",
                    "label": 0
                },
                {
                    "sent": "And the potential at the given time is the amount of money that the algorithm needs to have at that point.",
                    "label": 0
                },
                {
                    "sent": "So in this way we can easily translate the previous proof in a potential function argument.",
                    "label": 0
                },
                {
                    "sent": "So we just think how much money the algorithm would have at this point, and it's the amount of money is exactly.",
                    "label": 0
                },
                {
                    "sent": "And the weighted sum of the edges that go across this red line.",
                    "label": 0
                },
                {
                    "sent": "So this job 21, the algorithm already has scheduled and and got paid for and the optimum will only schedule it in the future.",
                    "label": 0
                },
                {
                    "sent": "So we have to keep some reserve money for that.",
                    "label": 0
                },
                {
                    "sent": "And this is, this is often the case.",
                    "label": 0
                },
                {
                    "sent": "How the potential looks like.",
                    "label": 0
                },
                {
                    "sent": "It somehow measures the discrepancy between the state of the algorithm and the optimum.",
                    "label": 0
                },
                {
                    "sent": "Becausw the.",
                    "label": 0
                },
                {
                    "sent": "It is good for the algorithm.",
                    "label": 0
                },
                {
                    "sent": "Is it as if it is in the same state as the optimum?",
                    "label": 0
                },
                {
                    "sent": "Because then.",
                    "label": 0
                },
                {
                    "sent": "Then it's safe, and then the future cannot hurt it.",
                    "label": 0
                },
                {
                    "sent": "So in our case it's very simple.",
                    "label": 0
                },
                {
                    "sent": "We take the potential as.",
                    "label": 0
                }
            ]
        },
        "clip_59": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The as a sum of weights of the jobs.",
                    "label": 0
                },
                {
                    "sent": "That the optimum will schedule later, but we have already scheduled.",
                    "label": 0
                },
                {
                    "sent": "Uh.",
                    "label": 0
                }
            ]
        },
        "clip_60": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And now to prove that the online algorithm is competitive, we need to show that in each step, the money that we have after this step is bigger than the potential that we are required required to have and the money is the old potential plus what we gain minus what we pay.",
                    "label": 0
                },
                {
                    "sent": "And of course for a randomized algorithm.",
                    "label": 0
                }
            ]
        },
        "clip_61": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "What we schedule and what will be the new configuration and its potential is random variable, so we take expectation.",
                    "label": 0
                },
                {
                    "sent": "And once we some dish over all the steps and at the beginning the potential is zero at the Entity zero, we just have to resolve.",
                    "label": 0
                },
                {
                    "sent": "So in what sense this is not not universal?",
                    "label": 0
                },
                {
                    "sent": "It's a universal method for deterministic algorithms, but not for randomized.",
                    "label": 0
                },
                {
                    "sent": "To make it universal for randomized, you would need to make the potential depends not only on the current state.",
                    "label": 0
                },
                {
                    "sent": "But say on the whole distribution, which is exactly what you don't want to do.",
                    "label": 0
                },
                {
                    "sent": "Oh, OK, So what happens for this algorithm?",
                    "label": 0
                },
                {
                    "sent": "We use basically the same.",
                    "label": 0
                }
            ]
        },
        "clip_62": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Argument.",
                    "label": 0
                },
                {
                    "sent": "As before.",
                    "label": 0
                },
                {
                    "sent": "So, so there there needs to be.",
                    "label": 0
                },
                {
                    "sent": "Taken care of some cases, so if the optimal schedules some job then then we need to distinguish whether we take whether our threshold chosen in the algorithm will be bigger than this weight or smaller.",
                    "label": 1
                },
                {
                    "sent": "If our threshold is smaller, it can be arranged so that that this job at the same time doesn't get these two charges, and that's that's where we win with some probability and after some calculation you decide, you realize that this distribution this commercial distribution is the Optima.",
                    "label": 0
                },
                {
                    "sent": "Distribution you can take.",
                    "label": 0
                },
                {
                    "sent": "And in a sense, the result this result is optimal.",
                    "label": 1
                },
                {
                    "sent": "It's optimal among all the algorithms that you can analyze using the potential function.",
                    "label": 0
                },
                {
                    "sent": "That it's just the fact that but I don't have time to go into details.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "How do we design deterministic algorithm?",
                    "label": 0
                }
            ]
        },
        "clip_63": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "At some point I saw that that this randomized algorithm.",
                    "label": 0
                },
                {
                    "sent": "Well, it's it's easy, just chooses among the packets with some random distribution and it should be derandomized in a fairly easy way.",
                    "label": 0
                },
                {
                    "sent": "It wasn't easy in the end and but we have found a way how to how to alternate some between these heavy and urgent packets and it gets an algorithm which is better than two competitive.",
                    "label": 0
                },
                {
                    "sent": "Currently the best result is little.",
                    "label": 0
                }
            ]
        },
        "clip_64": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "A bit better and it uses a fairly complex potential function.",
                    "label": 0
                }
            ]
        },
        "clip_65": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "What is an interesting method which which I think was really new in the area method of analysis is that we analyze the algorithm step by step.",
                    "label": 0
                },
                {
                    "sent": "But instead of using potential in each step, we make sure that the algorithm is in the same configuration as the optimal schedule, and we achieve that by giving some advantage to the optimum, like related schedule.",
                    "label": 0
                },
                {
                    "sent": "Two jobs instead of one, or we'll let it schedule a job and keep it for the future.",
                    "label": 0
                },
                {
                    "sent": "And this turned out to be fairly powerful and led to.",
                    "label": 0
                },
                {
                    "sent": "Golden ratio competitive algorithm for those instances with consistent deadlines and release times.",
                    "label": 0
                },
                {
                    "sent": "Yet another result is that even in this case, where the deadline.",
                    "label": 0
                }
            ]
        },
        "clip_66": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Are not known.",
                    "label": 0
                },
                {
                    "sent": "You can do some deterministic algorithm.",
                    "label": 0
                },
                {
                    "sent": "So the randomized algorithm has this property, doesn't need to know the deadlines, it only needs to know their ordering.",
                    "label": 0
                },
                {
                    "sent": "But the deterministic algorithms always seem to need at least to know which jobs will not be available in the next time step, and it was a big surprise that.",
                    "label": 0
                },
                {
                    "sent": "That this is not needed.",
                    "label": 0
                },
                {
                    "sent": "Relatively big surprise for people working on this.",
                    "label": 0
                }
            ]
        },
        "clip_67": {
            "is_summarization_sample": false,
            "summarization_data": []
        },
        "clip_68": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "I need to get to an open problem.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "I introduced the concept of two bounded instances where all the jobs are either very impatient and need to be scheduled immediately, or just impatient and they need to be scheduled in the next time step, so that's that's a case that we can analyze.",
                    "label": 0
                },
                {
                    "sent": "Completely.",
                    "label": 0
                },
                {
                    "sent": "But even for the general problem, we have no other lower bounds.",
                    "label": 1
                },
                {
                    "sent": "So that's strange becausw becausw if we have general jobs that the structure is much richer and we should be able to come up with some hard instances, and that's my.",
                    "label": 0
                },
                {
                    "sent": "Next problem whether whether really the general problem could be as easy as that abounded case.",
                    "label": 0
                },
                {
                    "sent": "So now it's time to get get back to the puzzle from the beginning.",
                    "label": 0
                },
                {
                    "sent": "So what do we know?",
                    "label": 0
                },
                {
                    "sent": "What is easy?",
                    "label": 0
                }
            ]
        },
        "clip_69": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "If you don't restrict the job blanks, the problem is strongly NP hard.",
                    "label": 0
                },
                {
                    "sent": "Even in the example, if you have one red job that just has to go in some place.",
                    "label": 0
                },
                {
                    "sent": "It's it's a partitioning problem.",
                    "label": 0
                },
                {
                    "sent": "You have to decide which jobs go left and which job jobs go to the right.",
                    "label": 0
                },
                {
                    "sent": "And as I mentioned, if.",
                    "label": 0
                },
                {
                    "sent": "If the processing times are one and which arbitrary.",
                    "label": 0
                },
                {
                    "sent": "Just matching.",
                    "label": 0
                },
                {
                    "sent": "It's almost everything that we know about it.",
                    "label": 0
                }
            ]
        },
        "clip_70": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Also, if if all the jobs have the same Lancs then then the problem is polynomial.",
                    "label": 1
                },
                {
                    "sent": "Even maximizing the weight of the jobs that will fit that, that's not so easy.",
                    "label": 1
                },
                {
                    "sent": "Polynomial result that I mentioned at the beginning.",
                    "label": 0
                },
                {
                    "sent": "But beyond this, the only thing that we know about this puzzle is that if you have two jobs, Lang's and one of them is one we can test if all the jobs will can be scheduled.",
                    "label": 0
                },
                {
                    "sent": "So on on one slide I will give the proof which is, which is nice because it's totally different and it's it.",
                    "label": 0
                },
                {
                    "sent": "It uses an idea.",
                    "label": 0
                },
                {
                    "sent": "That that was used by.",
                    "label": 0
                }
            ]
        },
        "clip_71": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I have dear and material rant for another problem we just set up a linear program.",
                    "label": 0
                },
                {
                    "sent": "Where the variables will be the number of the long jobs that have started up to some time.",
                    "label": 0
                },
                {
                    "sent": "And the constraints are natural.",
                    "label": 0
                },
                {
                    "sent": "The first one says that.",
                    "label": 0
                },
                {
                    "sent": "The jobs don't disappear from the schedule that the variables are not on that then that in each piece steps you schedule at most one job.",
                    "label": 0
                },
                {
                    "sent": "That between between S&T you start as many jobs as.",
                    "label": 0
                },
                {
                    "sent": "This is the number of jobs of along jobs that have released time after us and deadline before up to T. So you schedule all the all the big jobs that have to go in that part and the last constraint is somewhat difficult.",
                    "label": 0
                },
                {
                    "sent": "So if you take.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "Take all time, all slots between T minus and S. And look how many of them have to be occupied by small jobs.",
                    "label": 0
                },
                {
                    "sent": "Then you then if you divide this by P, you must be able to.",
                    "label": 0
                },
                {
                    "sent": "Faded.",
                    "label": 0
                },
                {
                    "sent": "This many jobs so so so this minus this is the number of big jobs that are scheduled started after S and finished between T. So, and this is how many slots you have available for them, so this better hole.",
                    "label": 0
                },
                {
                    "sent": "So why this?",
                    "label": 0
                },
                {
                    "sent": "Why is this linear program good it's?",
                    "label": 0
                }
            ]
        },
        "clip_72": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So the Union module so so it's optimal solution is integral and we can find it.",
                    "label": 0
                },
                {
                    "sent": "We can in fact find it faster becausw.",
                    "label": 0
                },
                {
                    "sent": "It's it's a.",
                    "label": 0
                },
                {
                    "sent": "And incidence the matrix is incidence matrix of directed graph.",
                    "label": 0
                },
                {
                    "sent": "So we can do a shortest path computation.",
                    "label": 0
                },
                {
                    "sent": "And if we have a scheduled and then we just set the variables as I say.",
                    "label": 0
                }
            ]
        },
        "clip_73": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "That and.",
                    "label": 0
                },
                {
                    "sent": "And we get a feasible solution.",
                    "label": 0
                },
                {
                    "sent": "If.",
                    "label": 0
                }
            ]
        },
        "clip_74": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We have a feasible so integral solution.",
                    "label": 1
                },
                {
                    "sent": "Then we can make a schedule by by scheduling fast the big jobs according to where the variables say they should start.",
                    "label": 0
                },
                {
                    "sent": "And and then scheduling the small jobs.",
                    "label": 0
                },
                {
                    "sent": "This is a bit subtle and for example similar things wouldn't wouldn't hold for four more machines if you try to set up the program.",
                    "label": 0
                },
                {
                    "sent": "But",
                    "label": 0
                }
            ]
        },
        "clip_75": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I will finish with the open problem.",
                    "label": 0
                }
            ]
        },
        "clip_76": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Is coming from.",
                    "label": 0
                }
            ]
        },
        "clip_77": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Chase so really.",
                    "label": 0
                },
                {
                    "sent": "If we have these two jobs Lang so we can just test whether all the jobs fades.",
                    "label": 0
                },
                {
                    "sent": "Fate we cannot even maximize the number of the jobs that will fit.",
                    "label": 1
                },
                {
                    "sent": "Becauses in the linear program, as we have shown at the number of jobs that will be fit, that will be in some interval, comes in the right hand side constraint.",
                    "label": 0
                },
                {
                    "sent": "So this is this is pretty amazing that we cannot do that.",
                    "label": 0
                },
                {
                    "sent": "And also if say running times are two and three, we cannot even say that all the jobs will fit.",
                    "label": 0
                },
                {
                    "sent": "On the other hand, we don't know any other NP hardness result than coming from the partition.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "I I hope.",
                    "label": 0
                },
                {
                    "sent": "I hope you got some.",
                    "label": 0
                },
                {
                    "sent": "Something out of the talk, maybe you will think about some of the problem.",
                    "label": 0
                },
                {
                    "sent": "Maybe you will solve it tomorrow, then let me know.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "Sometimes I think scheduling is perceived as a very closed area which is old and developed and you cannot get into it.",
                    "label": 0
                },
                {
                    "sent": "But I think this is just not true.",
                    "label": 0
                },
                {
                    "sent": "There are many simple problems that are.",
                    "label": 0
                },
                {
                    "sent": "Still open and somehow somehow the way we work is sometimes very strange.",
                    "label": 0
                },
                {
                    "sent": "Sometimes we are trying to solve hard problems.",
                    "label": 0
                },
                {
                    "sent": "Because we cannot solve the easy ones.",
                    "label": 0
                },
                {
                    "sent": "Or the easiest?",
                    "label": 0
                }
            ]
        },
        "clip_78": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Later on, so they are still there and waiting for you.",
                    "label": 0
                },
                {
                    "sent": "Thank you.",
                    "label": 0
                }
            ]
        }
    }
}