{
    "id": "yvjdi7irhreax3k74qfqlspwuxaeptfj",
    "title": "Hybrid Reasoning with Simple Forest Logic Programs",
    "info": {
        "author": [
            "Cristina Feier, Knowledge-Based System Group, Vienna University of Technology"
        ],
        "published": "July 28, 2009",
        "recorded": "June 2009",
        "category": [
            "Top->Computer Science->Semantic Web",
            "Top->Computer Science->Logic"
        ]
    },
    "url": "http://videolectures.net/eswc09_feier_hrws/",
    "segmentation": [
        [
            "OK, so hello everybody, my name is Christina Fayette.",
            "I work at the Technical University of Vienna and I will talk today about hybrid reasoning with forest logic programs.",
            "OK, better like this.",
            "I dragon it like this is better, OK?",
            "So I will talk today about hybrid reasoning with.",
            "For this logic, programs and this is joint work with my colleagues then humans."
        ],
        [
            "OK, so the presentation will try to address 3 main questions.",
            "And the first one is obviously what are forest logic programs."
        ],
        [
            "A short answer to this question is that they are a subset of open answer set programming.",
            "And the first part of the presentation, which look at open SSL programming and how this subset was defined."
        ],
        [
            "The next problem is how can one reason with this language with forest logic programs?"
        ],
        [
            "And for this purpose we devise a Tableau algorithm inspired from description logics, but which gets much more complex due to the minimality requirement.",
            "Anne."
        ],
        [
            "And then the last question is what are forest logic programs useful for and possible?"
        ],
        [
            "Answer is that they can be used for integrating shock knowledge basis with themselves with foil periods and thus we can we obtain a new type of hybrid knowledge basis which we call F hybrid knowledge basis and which distinguish themselves among other approaches by the fact that the rule part has no safety condition.",
            "So there is no DL safety or Datalog safety conditions on."
        ],
        [
            "OK so I move on to the first part, which is about Four's Logic Pro."
        ],
        [
            "Times and I will start with openrowset programming.",
            "So open SSL programming is an extension of answer.",
            "Set programming without function symbols with open domains.",
            "So what does this was?",
            "The open domains are subset of her brand domain of logic program, so more formally and open another set of false logic, program P or officer of an open set.",
            "Programming P is a pair.",
            "Umm where the universe U is nonempty subset of the.",
            "Constant in the program and M is an answer set of the program grounded video.",
            "So what does it mean?",
            "It's a nonempty subset in case there are no constants, then it has to have at least one anonymous individual, the universe."
        ],
        [
            "OK. An example how does this work?",
            "So we have this very simple program which says that X phase if X does not pass and John passes in the classical setting.",
            "If you just ground this program with John with a constant one with universe which is just one question John, we obtain that best.",
            "John is an answer set and also join and pass.",
            "John is a corresponding open and so set.",
            "And in this case, we see that the predicate fail is not satisfy aghbal, while if we add a new ananymous element to the domain X, we obtain an open answer set.",
            "Best jaanan fail X, which makes fail satisfiable.",
            "So we can see how this already makes a difference.",
            "And further on for this example, there are actually an infinite number of open answer set.",
            "So if introduce further new elements in the domain."
        ],
        [
            "Whoops, sorry.",
            "So now about for this logic program.",
            "So how were they defined?",
            "Open Assisted programming is undecidable, so then several syntax syntactical restrictions were tried in order to regain his ability.",
            "One of these wise to have some kind of tree shaped rules where only unary and binary literals are allowed, and you know literals correspond to nodes in trees binary to axe.",
            "That's how the name comes.",
            "And there are two variations for this kind of syntactic restriction.",
            "The first one is the case.",
            "There are no constants in the program which gives rise to the fragment of conceptual logic programs which enjoy that remodel property and were shown to be decidable.",
            "While the second variant is that constant are allowed in the program and this gives rise to the fragment we are discussing today.",
            "For this logic program, it has been shown that they enjoy the forest model property, but it has been not shown before or having this work on this algorithm which represent today that they're decidable, so they were assumed to be decidable.",
            "Kind of by similarity with conceptual logic problems, but there was no formal proof of this.",
            "Or another syntactical restriction which is orthogonal with what I discussed today is to have some kind of guarded fragment so.",
            "For."
        ],
        [
            "Open is a programming OK.",
            "So now more formally, what kind of rules are allowed to appear in in Forest logic program.",
            "So there are four types of rules.",
            "First of all, there are so called free rules which are unsafe rules of the Taipei Office or not alphas, FST or not.",
            "FST.",
            "So they basically allow the free introduction of such items in the open answer set so they bring kind of a first or the flavor to this non monotonic.",
            "Logic programming, formally.",
            "Then you know the rules have that reshaped.",
            "I talked about was that what does this mean?",
            "That the argument of the head can be seen as the root of a tree, and then the the second argument of the of the binary literals.",
            "So this can be seen as successors of of S of the root.",
            "So like a tree of depth one and the idea is that.",
            "So this better are set of unary, predicate, and Beth.",
            "Office signifies a set of unary literals where we extend better with every element from better with S and gamma.",
            "M is a set of binary predicate and the whole thing stands for a set of binary literals.",
            "Del Time is a set of.",
            "Unary predicates and again, so these are a funeral.",
            "It arise.",
            "So finally, if C is a set of inner qualities between these, these so one can also have inequality in such a way.",
            "There is a further constraint, so gamma M should not be empty for every M. And.",
            "Yes, in gamma I should sorry.",
            "Yeah, I should not be empty for him every now and then.",
            "We have binary rules which are also kind of tree shaped, but in the sense that just two terms appears at the terms of the head also in in the litter eyes in the body and then we can have also little eyes which have this is argument is term S&T.",
            "So this would be like kind of the root and T the successor of South.",
            "And finally we have constraint.",
            "And this can be simulated via unary rules and binary rules.",
            "OK."
        ],
        [
            "So I mentioned that this programs enjoy the forest model property, and in order to introduce that I have to 1st introduce the notion of extended forest, which is actually a forest extended forest F extended with a set of extra arcs and these arcs point always from nodes of the forest to roots of trees in the forest.",
            "So from any node in the forest but just to root.",
            "Because actually our models will have these shapes will be extended for it's not, Forrester said."
        ],
        [
            "OK, so the first model property of says that if unary predicate is satisfiable with respect to R4 LP, then the predicate is also for a satisfiable with respect to the same program.",
            "So the LP's have this property.",
            "And now what does it mean for such unary predicate before a satisfiable?",
            "It means that there exists an open set UM of P and an extended forest EF, which is formed from the first F and the extra offset ES, and the labeling function which is defined on the nodes and on the arcs of the extended forest.",
            "Which assigns to every such node and ARCA set of predicates frumpy, OK, and as it's quite complex I don't have so much time.",
            "I will explain this more."
        ],
        [
            "In an example.",
            "So consider that we have an open answer set with the universe XAZY and the model itself being P of X GX at cubes at FFF.",
            "Set a, etc.",
            "Then we can see that PS4 is satisfiable.",
            "Respect to pee from this diagram.",
            "So now will explain what this means.",
            "So the idea is that the universe of the openness set coincides with the node of an extended forest so.",
            "Can we see we have exactly the same knowledge of the universe?",
            "And then further on, for every unary litter, every unary item in the model, like P of X, we have.",
            "That piece should be in the label of X or what concerns binary we have in this case, so G should be in the label of X set.",
            "And so on.",
            "Every arc should have a non empty label, so like we see every arc not empty label and we also see an example of this arcs from which I mentioned before.",
            "So which violate the classical forest setting so from nodes two constants disarm also allowed.",
            "OK."
        ],
        [
            "And now I will move on to the.",
            "Actual mechanism mechanism for the algorithm.",
            "So the idea is that if you know that every predicate which is satisfy oball is for a satisfiable, we can just search for forest models which satisfy certain predicate.",
            "In order to do this, we introduce this completion structure, which is a tough call.",
            "Which is 4 elements.",
            "First EF is an extended forest, so this will capture the universe which is constructed month ago and then there is a labeling function content which again is defined on the nodes and arcs of the extended forest.",
            "But I like the labeling function for the forest model property.",
            "It also allows negative at operations of predicates in the labels.",
            "And.",
            "Then we have a graph.",
            "Which has as vertices actual atoms which are already in the opener set which we construct and has it as arcs.",
            "It keeps tracks between direct dependencies between atoms in the open answers that we actually are constructed.",
            "So we will see later that we need this for ensuring minimality, so we cannot justify, let's say a predicate via another anatomy.",
            "The nurse said via another, and so on.",
            "If this is not free or there is no negative instance on in this chain OK, and finally there is also a function which indicates which predicates in a node arc are already expanded at a certain time in the computation process.",
            "So more intuitively, data is that we already.",
            "We always push this.",
            "This kind of constraints in nodes and arcs, then this have to be justified.",
            "This gives rise to another constraint and so on.",
            "And this shows OK which things we already took care of and which we still have to work on them.",
            "Oh"
        ],
        [
            "So we define the notion of initial completion structure for checking satisfiability of unary predicate people with respect to R for LPP as a completion structure, where.",
            "The extended forest is initialized with a set of single node trees.",
            "There is a tree for every constant in their program, and possibly another tree with an anonymous route.",
            "If this tree down onymous root exists, then it has to contain the predicate to be satisfy aghbal.",
            "So this is like a random choice we do at the beginning of the algorithm.",
            "Whether we consider this anonymous thing or not.",
            "So this former think says exactly the same thing.",
            "So P has to be in the in the in the label in the content of one of these routes.",
            "And we initialize the graph G to have just one vertex P of epsilon.",
            "This says that piece of epsilon is already in in the open answer set.",
            "And no arcs.",
            "And we mark this as an expanded.",
            "So this will have to be justified.",
            "The presence of dissidence in the opener, so we have to be justified."
        ],
        [
            "OK, and there are some expansions which we employ to evolve this completion structure.",
            "I will not get very formal here.",
            "It is not enough time, but I will try to give the intuition.",
            "So the first type of expansion rules is expand unary binary positive predicate.",
            "So like in the example before we had this P which has to be justified, which was a unary predicate, and so on.",
            "So in order to motivate the presence of of an Atom P of X of or fxy in the open answer set, we have to find a rule which.",
            "His head matches P of S or FXY and then to ground this rule such that the head variables coincide coincide with the current node in arc and then to update the completion structure accordingly.",
            "OK."
        ],
        [
            "And then to expand unary and binary negative predicates.",
            "This means that this rule will take care of justifying the absence of an item in the opener set.",
            "We also have to keep track of this.",
            "And then the idea is that we have to consider the body of every ground rule whose head matches with this item, which is not in open answer set.",
            "Also, care has to be taken to consider all combination of successor nodes and the rule has to be has to be visited multiple times to check for new successors.",
            "So there is an interaction between these rules."
        ],
        [
            "OK.",
            "Finally, the last step of expansion rules is choose unary and binary.",
            "So the idea is to expand the partial model to complete model.",
            "So you might have that all constraints are are satisfied, but we still don't know whether we actually have an open answer set, because answer set programming does not have modularity property, so it might always be the case that we have this partial model, but it's not part of actual total model.",
            "So then we will just insert randomly predicates which do not appear in the label of a node orphan arc."
        ],
        [
            "OK, applicability rules that govern the application of expansion rules.",
            "So firstly saturation.",
            "The idea is that.",
            "The nodes of the extended Forrester treated one at a time.",
            "A successor is not nothing in a success.",
            "In the label of the successor is not expanded until everything in the level of predecessor has been expanded.",
            "Also, this is needed when we check for blocking conditions, for example and then blocking.",
            "So we have the node is blocked by a tree ancestor of itself if its content is included in the content of the ancestors.",
            "So this is a bit classical like in DL setting, but for the more in order to have this minimality property we have to check that in this graph which keeps track of dependencies.",
            "There is no path form P of X2 Q of Y, so.",
            "In order to know that the stability condition is is fulfilled so.",
            "There is a finite justification for an item in the upper asset OK, and Now because we have this this extra condition which is more than usually in a tableau setting, we do not get.",
            "We don't have termination if you just have two things anymore, because this might never be met.",
            "So while this will be might eventually, this might never be met.",
            "So then we have to have a natural which is also kind of issues.",
            "The finite model property for this logic, so we've seen that.",
            "We've showed that if there is an open answer set then there isn't forest open answer set which has a maximum number of nodes with equal content on any branch and he says that the node is redundant if this limit was achieved.",
            "So if it has a certain number of three ancestors.",
            "And with equal content with itself and it's not blocked."
        ],
        [
            "Kim termination so now we dis redundancy.",
            "We also have this.",
            "Carolyn terminates.",
            "We define the notions of complete completion structure.",
            "Clash free completion structure for a full voice logic program ping.",
            "So the idea is that.",
            "The completion structure should not be contradictory, so not A and not a in the same label sun.",
            "There should be no redundant on, so this is the extracting and also G should not contain cycles so we cannot have that P of X is justified by perfects or things like this.",
            "OK so this is the termination result."
        ],
        [
            "And then sound less complex completeness and complexity.",
            "So we have shown that the algorithm is sound and complete in the completeness proof we actually showed this result with the maximum number of nodes on any branch.",
            "So this is quite involved, approved, and finally the algorithm runs in double nondeterministic exponential time, which might be quite.",
            "A bad worst time complexity, but on the other hand it also so we've notice this is an artifact of minimality, so somehow if we would drop me the melody then immediately with drop one level lower or also if you drop completeness we drop one level lower, but so that's what we have so far.",
            "But it's also noted for Tableau algorithms.",
            "Many times the worst time complexity is bad, but they behave good in practice, every chicken."
        ],
        [
            "OK now so short description of of this application of F hybrid knowledge base."
        ],
        [
            "This.",
            "So we have.",
            "That's an F hybrid.",
            "Knowledge Base is a pair Sigma NP.",
            "Where Sigma ISM shock description, logic, knowledge base and peaceful forest logic programs we distinguish between the predicates of P. The predicates which we call the DL predicate, which are also atomic concept names.",
            "All names from Sigma.",
            "We assume that there are no predicating P which correspond to complex concept or all description from Sigma and we make the observation that.",
            "Due to the halfway piece that defined, there is no data, log safeness, or weekly deal sadness imposed for the role component."
        ],
        [
            "OK.",
            "In order to define the semantics, we need to introduce the projection of ground for his logic program P with respect to a given DL interpretation.",
            "I intuitively, the projection eliminates the rule which are trivially satisfied given I the rule whose bodies are obviously not satisfied given I and so these are all deleted and from the remaining rules or the literals which conform are deleted.",
            "So this is quite also classical for hybrid knowledge."
        ],
        [
            "Basis frameworks.",
            "And then the semantic.",
            "So we have that a triple UIM is an interpretation of an F hybrid knowledge base.",
            "Sigma P. If you is a universe for P also for Sigma, which for I sorry which is an interpretation of Sigma and then M is an interpretation of the projection of be grounded with you with respect to I. OK. And we have that you aim is a model of Sigma P. If I is a model of Sigma and M is an open as a set of the projection."
        ],
        [
            "Can't so reasoning this this is done by reducing satisfiability checking with respect to F hybrid knowledge basis to satisfy the check in respect to forest logic programs.",
            "Intuitively, for each concept expression, one introduces a new predicate in the logic program, which, together with the rules define the semantics of the corresponding DL construct constraint.",
            "In the in the logic program encode the inclusion axioms in the DL part and the 1st order interpretation of DL concept expressions is simulating using free rules.",
            "So basically for every concept name and role name, we introduce a freeroll.",
            "Present it in before in the beginning so and there is this following result.",
            "There is a polynomial non modular and faithful translation with respect to predicate satisfiability, from shock knowledge basis to forced forest logic problems.",
            "OK and as a consequence, satisfiability checking with respect to F1 hybrid knowledge basis is also in double exponential time."
        ],
        [
            "OK, so some related work.",
            "There are the air hybrids.",
            "Knowledge base is defined by Rosati.",
            "In which again, there is a deal knowledge base and the disjunctive Datalog program.",
            "But there is a so called Weekly deal safe safety condition imposed.",
            "Then Description logic rules are decidable fragments of soil where rules have a similar shape with our rules, or three shape tools.",
            "But there is no negation, and as the semantic is a first order one and not a minimal one, like in our case.",
            "Also, FDNC is an extension of answer set programming with function symbols where rules are again syntactically restricted in order to maintain decidability rules are somehow similar the syntactic restriction to ours, but.",
            "Still, so they are safe Datalog safe with.",
            "And.",
            "So we can see that there is not too much, or at least we do not know about approaches where you have integration with unsafe rules between such types of such hybrid combinations.",
            "OK, so future work we want to extend F hybrid knowledge basis and the reason it's reasoning algorithms or algorithm for file piece so that we can simulate streak and.",
            "Prototype implementation and optimization so they will be ready to work on on implementing.",
            "Not so complex version of the language and we are working on optimizing the algorithm.",
            "OK."
        ],
        [
            "So I'm finding some conclusions so.",
            "We offered reasoning support for language which allows an innovative combination of ontologies and rules.",
            "No sadness condition is needed from a more theoretical perspective, we divide the Tableau algorithm for non monotonic but yet not her Brant restricted formulas and also the paper established decidability results the presence of this algorithm established disabilities, Alpha forest logic programs.",
            "OK so.",
            "Thank you.",
            "Question.",
            "So maybe I've missed something, but it is not clear to me the motivation.",
            "The starting motivation is just.",
            "Is this just another attempt at combining ontologies or and rules?",
            "Or there is a specific problem you want to address?",
            "I've missed something maybe so we do not.",
            "We don't have a use case lacking that still use case or, but the idea is so as I said that the fact that we can simulate.",
            "Concept satisfiability and we can simulate such a complex description logic viral, so this is also not to be ignored and that there is no this deal safety condition because all the approaches I know so far.",
            "So they all kind.",
            "Have they all have a kind of restriction on on the presence of literalized in the body of the rules on the variable.",
            "So there there are restricted.",
            "So this is allows for.",
            "Outside, this is much more integrating approach.",
            "Also integrating the domains.",
            "Of the description, logic, interpretation and the open as I said.",
            "Like any other question.",
            "But I have one, can you say sorry?",
            "Not.",
            "This double next time results, are they tight or this algorithm is optimal?",
            "So we just know that they are an exponential nondeterministic exponential heart, but we don't have a completeness result for this fragment.",
            "So we know that it is in double nontraumatic exponential time, and we know that they are an expert, but also, but we don't know more.",
            "Any other question?",
            "So curiosity, can you tell us a bit more on your implementation?",
            "What are the results you have?",
            "And yeah, so so far there is only an implementation for the restricted fragment from Discworld piece, which I talked before and we made some comparison with Racer for example and.",
            "When we put repeated queries so in the end we we have kind of a bit worse results but not much worse.",
            "Let's say just the first query is worse for us, but we're working on optimizing this as this is totally unoptimized, so it's like just the first try and and we want to use.",
            "Servers so we are also working theoretically in how to integrate such servers even for this algorithm.",
            "So how to make calls to such servers?",
            "And then we expect when we when we have this and when we also have model caching and things like this which are already implementing in Racer then will be compatible, but it's quite early stages of question for this implementation.",
            "Thank you, thank you."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, so hello everybody, my name is Christina Fayette.",
                    "label": 0
                },
                {
                    "sent": "I work at the Technical University of Vienna and I will talk today about hybrid reasoning with forest logic programs.",
                    "label": 1
                },
                {
                    "sent": "OK, better like this.",
                    "label": 0
                },
                {
                    "sent": "I dragon it like this is better, OK?",
                    "label": 0
                },
                {
                    "sent": "So I will talk today about hybrid reasoning with.",
                    "label": 0
                },
                {
                    "sent": "For this logic, programs and this is joint work with my colleagues then humans.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so the presentation will try to address 3 main questions.",
                    "label": 0
                },
                {
                    "sent": "And the first one is obviously what are forest logic programs.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "A short answer to this question is that they are a subset of open answer set programming.",
                    "label": 0
                },
                {
                    "sent": "And the first part of the presentation, which look at open SSL programming and how this subset was defined.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The next problem is how can one reason with this language with forest logic programs?",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And for this purpose we devise a Tableau algorithm inspired from description logics, but which gets much more complex due to the minimality requirement.",
                    "label": 0
                },
                {
                    "sent": "Anne.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And then the last question is what are forest logic programs useful for and possible?",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Answer is that they can be used for integrating shock knowledge basis with themselves with foil periods and thus we can we obtain a new type of hybrid knowledge basis which we call F hybrid knowledge basis and which distinguish themselves among other approaches by the fact that the rule part has no safety condition.",
                    "label": 0
                },
                {
                    "sent": "So there is no DL safety or Datalog safety conditions on.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK so I move on to the first part, which is about Four's Logic Pro.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Times and I will start with openrowset programming.",
                    "label": 0
                },
                {
                    "sent": "So open SSL programming is an extension of answer.",
                    "label": 0
                },
                {
                    "sent": "Set programming without function symbols with open domains.",
                    "label": 0
                },
                {
                    "sent": "So what does this was?",
                    "label": 0
                },
                {
                    "sent": "The open domains are subset of her brand domain of logic program, so more formally and open another set of false logic, program P or officer of an open set.",
                    "label": 0
                },
                {
                    "sent": "Programming P is a pair.",
                    "label": 1
                },
                {
                    "sent": "Umm where the universe U is nonempty subset of the.",
                    "label": 1
                },
                {
                    "sent": "Constant in the program and M is an answer set of the program grounded video.",
                    "label": 1
                },
                {
                    "sent": "So what does it mean?",
                    "label": 0
                },
                {
                    "sent": "It's a nonempty subset in case there are no constants, then it has to have at least one anonymous individual, the universe.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK. An example how does this work?",
                    "label": 0
                },
                {
                    "sent": "So we have this very simple program which says that X phase if X does not pass and John passes in the classical setting.",
                    "label": 0
                },
                {
                    "sent": "If you just ground this program with John with a constant one with universe which is just one question John, we obtain that best.",
                    "label": 0
                },
                {
                    "sent": "John is an answer set and also join and pass.",
                    "label": 1
                },
                {
                    "sent": "John is a corresponding open and so set.",
                    "label": 0
                },
                {
                    "sent": "And in this case, we see that the predicate fail is not satisfy aghbal, while if we add a new ananymous element to the domain X, we obtain an open answer set.",
                    "label": 0
                },
                {
                    "sent": "Best jaanan fail X, which makes fail satisfiable.",
                    "label": 0
                },
                {
                    "sent": "So we can see how this already makes a difference.",
                    "label": 1
                },
                {
                    "sent": "And further on for this example, there are actually an infinite number of open answer set.",
                    "label": 0
                },
                {
                    "sent": "So if introduce further new elements in the domain.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Whoops, sorry.",
                    "label": 0
                },
                {
                    "sent": "So now about for this logic program.",
                    "label": 0
                },
                {
                    "sent": "So how were they defined?",
                    "label": 0
                },
                {
                    "sent": "Open Assisted programming is undecidable, so then several syntax syntactical restrictions were tried in order to regain his ability.",
                    "label": 0
                },
                {
                    "sent": "One of these wise to have some kind of tree shaped rules where only unary and binary literals are allowed, and you know literals correspond to nodes in trees binary to axe.",
                    "label": 0
                },
                {
                    "sent": "That's how the name comes.",
                    "label": 0
                },
                {
                    "sent": "And there are two variations for this kind of syntactic restriction.",
                    "label": 0
                },
                {
                    "sent": "The first one is the case.",
                    "label": 0
                },
                {
                    "sent": "There are no constants in the program which gives rise to the fragment of conceptual logic programs which enjoy that remodel property and were shown to be decidable.",
                    "label": 0
                },
                {
                    "sent": "While the second variant is that constant are allowed in the program and this gives rise to the fragment we are discussing today.",
                    "label": 0
                },
                {
                    "sent": "For this logic program, it has been shown that they enjoy the forest model property, but it has been not shown before or having this work on this algorithm which represent today that they're decidable, so they were assumed to be decidable.",
                    "label": 0
                },
                {
                    "sent": "Kind of by similarity with conceptual logic problems, but there was no formal proof of this.",
                    "label": 0
                },
                {
                    "sent": "Or another syntactical restriction which is orthogonal with what I discussed today is to have some kind of guarded fragment so.",
                    "label": 0
                },
                {
                    "sent": "For.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Open is a programming OK.",
                    "label": 0
                },
                {
                    "sent": "So now more formally, what kind of rules are allowed to appear in in Forest logic program.",
                    "label": 0
                },
                {
                    "sent": "So there are four types of rules.",
                    "label": 0
                },
                {
                    "sent": "First of all, there are so called free rules which are unsafe rules of the Taipei Office or not alphas, FST or not.",
                    "label": 0
                },
                {
                    "sent": "FST.",
                    "label": 0
                },
                {
                    "sent": "So they basically allow the free introduction of such items in the open answer set so they bring kind of a first or the flavor to this non monotonic.",
                    "label": 0
                },
                {
                    "sent": "Logic programming, formally.",
                    "label": 0
                },
                {
                    "sent": "Then you know the rules have that reshaped.",
                    "label": 0
                },
                {
                    "sent": "I talked about was that what does this mean?",
                    "label": 0
                },
                {
                    "sent": "That the argument of the head can be seen as the root of a tree, and then the the second argument of the of the binary literals.",
                    "label": 0
                },
                {
                    "sent": "So this can be seen as successors of of S of the root.",
                    "label": 0
                },
                {
                    "sent": "So like a tree of depth one and the idea is that.",
                    "label": 0
                },
                {
                    "sent": "So this better are set of unary, predicate, and Beth.",
                    "label": 0
                },
                {
                    "sent": "Office signifies a set of unary literals where we extend better with every element from better with S and gamma.",
                    "label": 0
                },
                {
                    "sent": "M is a set of binary predicate and the whole thing stands for a set of binary literals.",
                    "label": 0
                },
                {
                    "sent": "Del Time is a set of.",
                    "label": 0
                },
                {
                    "sent": "Unary predicates and again, so these are a funeral.",
                    "label": 0
                },
                {
                    "sent": "It arise.",
                    "label": 0
                },
                {
                    "sent": "So finally, if C is a set of inner qualities between these, these so one can also have inequality in such a way.",
                    "label": 0
                },
                {
                    "sent": "There is a further constraint, so gamma M should not be empty for every M. And.",
                    "label": 0
                },
                {
                    "sent": "Yes, in gamma I should sorry.",
                    "label": 0
                },
                {
                    "sent": "Yeah, I should not be empty for him every now and then.",
                    "label": 0
                },
                {
                    "sent": "We have binary rules which are also kind of tree shaped, but in the sense that just two terms appears at the terms of the head also in in the litter eyes in the body and then we can have also little eyes which have this is argument is term S&T.",
                    "label": 0
                },
                {
                    "sent": "So this would be like kind of the root and T the successor of South.",
                    "label": 0
                },
                {
                    "sent": "And finally we have constraint.",
                    "label": 0
                },
                {
                    "sent": "And this can be simulated via unary rules and binary rules.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So I mentioned that this programs enjoy the forest model property, and in order to introduce that I have to 1st introduce the notion of extended forest, which is actually a forest extended forest F extended with a set of extra arcs and these arcs point always from nodes of the forest to roots of trees in the forest.",
                    "label": 0
                },
                {
                    "sent": "So from any node in the forest but just to root.",
                    "label": 0
                },
                {
                    "sent": "Because actually our models will have these shapes will be extended for it's not, Forrester said.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so the first model property of says that if unary predicate is satisfiable with respect to R4 LP, then the predicate is also for a satisfiable with respect to the same program.",
                    "label": 0
                },
                {
                    "sent": "So the LP's have this property.",
                    "label": 0
                },
                {
                    "sent": "And now what does it mean for such unary predicate before a satisfiable?",
                    "label": 0
                },
                {
                    "sent": "It means that there exists an open set UM of P and an extended forest EF, which is formed from the first F and the extra offset ES, and the labeling function which is defined on the nodes and on the arcs of the extended forest.",
                    "label": 0
                },
                {
                    "sent": "Which assigns to every such node and ARCA set of predicates frumpy, OK, and as it's quite complex I don't have so much time.",
                    "label": 0
                },
                {
                    "sent": "I will explain this more.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "In an example.",
                    "label": 0
                },
                {
                    "sent": "So consider that we have an open answer set with the universe XAZY and the model itself being P of X GX at cubes at FFF.",
                    "label": 0
                },
                {
                    "sent": "Set a, etc.",
                    "label": 0
                },
                {
                    "sent": "Then we can see that PS4 is satisfiable.",
                    "label": 0
                },
                {
                    "sent": "Respect to pee from this diagram.",
                    "label": 0
                },
                {
                    "sent": "So now will explain what this means.",
                    "label": 0
                },
                {
                    "sent": "So the idea is that the universe of the openness set coincides with the node of an extended forest so.",
                    "label": 0
                },
                {
                    "sent": "Can we see we have exactly the same knowledge of the universe?",
                    "label": 0
                },
                {
                    "sent": "And then further on, for every unary litter, every unary item in the model, like P of X, we have.",
                    "label": 0
                },
                {
                    "sent": "That piece should be in the label of X or what concerns binary we have in this case, so G should be in the label of X set.",
                    "label": 0
                },
                {
                    "sent": "And so on.",
                    "label": 0
                },
                {
                    "sent": "Every arc should have a non empty label, so like we see every arc not empty label and we also see an example of this arcs from which I mentioned before.",
                    "label": 0
                },
                {
                    "sent": "So which violate the classical forest setting so from nodes two constants disarm also allowed.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And now I will move on to the.",
                    "label": 0
                },
                {
                    "sent": "Actual mechanism mechanism for the algorithm.",
                    "label": 0
                },
                {
                    "sent": "So the idea is that if you know that every predicate which is satisfy oball is for a satisfiable, we can just search for forest models which satisfy certain predicate.",
                    "label": 0
                },
                {
                    "sent": "In order to do this, we introduce this completion structure, which is a tough call.",
                    "label": 1
                },
                {
                    "sent": "Which is 4 elements.",
                    "label": 0
                },
                {
                    "sent": "First EF is an extended forest, so this will capture the universe which is constructed month ago and then there is a labeling function content which again is defined on the nodes and arcs of the extended forest.",
                    "label": 0
                },
                {
                    "sent": "But I like the labeling function for the forest model property.",
                    "label": 0
                },
                {
                    "sent": "It also allows negative at operations of predicates in the labels.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "Then we have a graph.",
                    "label": 0
                },
                {
                    "sent": "Which has as vertices actual atoms which are already in the opener set which we construct and has it as arcs.",
                    "label": 0
                },
                {
                    "sent": "It keeps tracks between direct dependencies between atoms in the open answers that we actually are constructed.",
                    "label": 0
                },
                {
                    "sent": "So we will see later that we need this for ensuring minimality, so we cannot justify, let's say a predicate via another anatomy.",
                    "label": 0
                },
                {
                    "sent": "The nurse said via another, and so on.",
                    "label": 0
                },
                {
                    "sent": "If this is not free or there is no negative instance on in this chain OK, and finally there is also a function which indicates which predicates in a node arc are already expanded at a certain time in the computation process.",
                    "label": 1
                },
                {
                    "sent": "So more intuitively, data is that we already.",
                    "label": 0
                },
                {
                    "sent": "We always push this.",
                    "label": 0
                },
                {
                    "sent": "This kind of constraints in nodes and arcs, then this have to be justified.",
                    "label": 0
                },
                {
                    "sent": "This gives rise to another constraint and so on.",
                    "label": 0
                },
                {
                    "sent": "And this shows OK which things we already took care of and which we still have to work on them.",
                    "label": 0
                },
                {
                    "sent": "Oh",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So we define the notion of initial completion structure for checking satisfiability of unary predicate people with respect to R for LPP as a completion structure, where.",
                    "label": 1
                },
                {
                    "sent": "The extended forest is initialized with a set of single node trees.",
                    "label": 0
                },
                {
                    "sent": "There is a tree for every constant in their program, and possibly another tree with an anonymous route.",
                    "label": 0
                },
                {
                    "sent": "If this tree down onymous root exists, then it has to contain the predicate to be satisfy aghbal.",
                    "label": 1
                },
                {
                    "sent": "So this is like a random choice we do at the beginning of the algorithm.",
                    "label": 0
                },
                {
                    "sent": "Whether we consider this anonymous thing or not.",
                    "label": 0
                },
                {
                    "sent": "So this former think says exactly the same thing.",
                    "label": 0
                },
                {
                    "sent": "So P has to be in the in the in the label in the content of one of these routes.",
                    "label": 1
                },
                {
                    "sent": "And we initialize the graph G to have just one vertex P of epsilon.",
                    "label": 0
                },
                {
                    "sent": "This says that piece of epsilon is already in in the open answer set.",
                    "label": 0
                },
                {
                    "sent": "And no arcs.",
                    "label": 0
                },
                {
                    "sent": "And we mark this as an expanded.",
                    "label": 0
                },
                {
                    "sent": "So this will have to be justified.",
                    "label": 0
                },
                {
                    "sent": "The presence of dissidence in the opener, so we have to be justified.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, and there are some expansions which we employ to evolve this completion structure.",
                    "label": 0
                },
                {
                    "sent": "I will not get very formal here.",
                    "label": 0
                },
                {
                    "sent": "It is not enough time, but I will try to give the intuition.",
                    "label": 0
                },
                {
                    "sent": "So the first type of expansion rules is expand unary binary positive predicate.",
                    "label": 1
                },
                {
                    "sent": "So like in the example before we had this P which has to be justified, which was a unary predicate, and so on.",
                    "label": 0
                },
                {
                    "sent": "So in order to motivate the presence of of an Atom P of X of or fxy in the open answer set, we have to find a rule which.",
                    "label": 1
                },
                {
                    "sent": "His head matches P of S or FXY and then to ground this rule such that the head variables coincide coincide with the current node in arc and then to update the completion structure accordingly.",
                    "label": 1
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And then to expand unary and binary negative predicates.",
                    "label": 0
                },
                {
                    "sent": "This means that this rule will take care of justifying the absence of an item in the opener set.",
                    "label": 0
                },
                {
                    "sent": "We also have to keep track of this.",
                    "label": 0
                },
                {
                    "sent": "And then the idea is that we have to consider the body of every ground rule whose head matches with this item, which is not in open answer set.",
                    "label": 1
                },
                {
                    "sent": "Also, care has to be taken to consider all combination of successor nodes and the rule has to be has to be visited multiple times to check for new successors.",
                    "label": 0
                },
                {
                    "sent": "So there is an interaction between these rules.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "Finally, the last step of expansion rules is choose unary and binary.",
                    "label": 1
                },
                {
                    "sent": "So the idea is to expand the partial model to complete model.",
                    "label": 1
                },
                {
                    "sent": "So you might have that all constraints are are satisfied, but we still don't know whether we actually have an open answer set, because answer set programming does not have modularity property, so it might always be the case that we have this partial model, but it's not part of actual total model.",
                    "label": 0
                },
                {
                    "sent": "So then we will just insert randomly predicates which do not appear in the label of a node orphan arc.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, applicability rules that govern the application of expansion rules.",
                    "label": 1
                },
                {
                    "sent": "So firstly saturation.",
                    "label": 0
                },
                {
                    "sent": "The idea is that.",
                    "label": 0
                },
                {
                    "sent": "The nodes of the extended Forrester treated one at a time.",
                    "label": 0
                },
                {
                    "sent": "A successor is not nothing in a success.",
                    "label": 1
                },
                {
                    "sent": "In the label of the successor is not expanded until everything in the level of predecessor has been expanded.",
                    "label": 0
                },
                {
                    "sent": "Also, this is needed when we check for blocking conditions, for example and then blocking.",
                    "label": 0
                },
                {
                    "sent": "So we have the node is blocked by a tree ancestor of itself if its content is included in the content of the ancestors.",
                    "label": 0
                },
                {
                    "sent": "So this is a bit classical like in DL setting, but for the more in order to have this minimality property we have to check that in this graph which keeps track of dependencies.",
                    "label": 0
                },
                {
                    "sent": "There is no path form P of X2 Q of Y, so.",
                    "label": 0
                },
                {
                    "sent": "In order to know that the stability condition is is fulfilled so.",
                    "label": 0
                },
                {
                    "sent": "There is a finite justification for an item in the upper asset OK, and Now because we have this this extra condition which is more than usually in a tableau setting, we do not get.",
                    "label": 0
                },
                {
                    "sent": "We don't have termination if you just have two things anymore, because this might never be met.",
                    "label": 0
                },
                {
                    "sent": "So while this will be might eventually, this might never be met.",
                    "label": 0
                },
                {
                    "sent": "So then we have to have a natural which is also kind of issues.",
                    "label": 1
                },
                {
                    "sent": "The finite model property for this logic, so we've seen that.",
                    "label": 0
                },
                {
                    "sent": "We've showed that if there is an open answer set then there isn't forest open answer set which has a maximum number of nodes with equal content on any branch and he says that the node is redundant if this limit was achieved.",
                    "label": 0
                },
                {
                    "sent": "So if it has a certain number of three ancestors.",
                    "label": 1
                },
                {
                    "sent": "And with equal content with itself and it's not blocked.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Kim termination so now we dis redundancy.",
                    "label": 0
                },
                {
                    "sent": "We also have this.",
                    "label": 0
                },
                {
                    "sent": "Carolyn terminates.",
                    "label": 0
                },
                {
                    "sent": "We define the notions of complete completion structure.",
                    "label": 0
                },
                {
                    "sent": "Clash free completion structure for a full voice logic program ping.",
                    "label": 0
                },
                {
                    "sent": "So the idea is that.",
                    "label": 0
                },
                {
                    "sent": "The completion structure should not be contradictory, so not A and not a in the same label sun.",
                    "label": 0
                },
                {
                    "sent": "There should be no redundant on, so this is the extracting and also G should not contain cycles so we cannot have that P of X is justified by perfects or things like this.",
                    "label": 0
                },
                {
                    "sent": "OK so this is the termination result.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And then sound less complex completeness and complexity.",
                    "label": 1
                },
                {
                    "sent": "So we have shown that the algorithm is sound and complete in the completeness proof we actually showed this result with the maximum number of nodes on any branch.",
                    "label": 1
                },
                {
                    "sent": "So this is quite involved, approved, and finally the algorithm runs in double nondeterministic exponential time, which might be quite.",
                    "label": 0
                },
                {
                    "sent": "A bad worst time complexity, but on the other hand it also so we've notice this is an artifact of minimality, so somehow if we would drop me the melody then immediately with drop one level lower or also if you drop completeness we drop one level lower, but so that's what we have so far.",
                    "label": 0
                },
                {
                    "sent": "But it's also noted for Tableau algorithms.",
                    "label": 0
                },
                {
                    "sent": "Many times the worst time complexity is bad, but they behave good in practice, every chicken.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK now so short description of of this application of F hybrid knowledge base.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This.",
                    "label": 0
                },
                {
                    "sent": "So we have.",
                    "label": 0
                },
                {
                    "sent": "That's an F hybrid.",
                    "label": 0
                },
                {
                    "sent": "Knowledge Base is a pair Sigma NP.",
                    "label": 0
                },
                {
                    "sent": "Where Sigma ISM shock description, logic, knowledge base and peaceful forest logic programs we distinguish between the predicates of P. The predicates which we call the DL predicate, which are also atomic concept names.",
                    "label": 0
                },
                {
                    "sent": "All names from Sigma.",
                    "label": 0
                },
                {
                    "sent": "We assume that there are no predicating P which correspond to complex concept or all description from Sigma and we make the observation that.",
                    "label": 0
                },
                {
                    "sent": "Due to the halfway piece that defined, there is no data, log safeness, or weekly deal sadness imposed for the role component.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "In order to define the semantics, we need to introduce the projection of ground for his logic program P with respect to a given DL interpretation.",
                    "label": 0
                },
                {
                    "sent": "I intuitively, the projection eliminates the rule which are trivially satisfied given I the rule whose bodies are obviously not satisfied given I and so these are all deleted and from the remaining rules or the literals which conform are deleted.",
                    "label": 0
                },
                {
                    "sent": "So this is quite also classical for hybrid knowledge.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Basis frameworks.",
                    "label": 0
                },
                {
                    "sent": "And then the semantic.",
                    "label": 0
                },
                {
                    "sent": "So we have that a triple UIM is an interpretation of an F hybrid knowledge base.",
                    "label": 0
                },
                {
                    "sent": "Sigma P. If you is a universe for P also for Sigma, which for I sorry which is an interpretation of Sigma and then M is an interpretation of the projection of be grounded with you with respect to I. OK. And we have that you aim is a model of Sigma P. If I is a model of Sigma and M is an open as a set of the projection.",
                    "label": 1
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Can't so reasoning this this is done by reducing satisfiability checking with respect to F hybrid knowledge basis to satisfy the check in respect to forest logic programs.",
                    "label": 0
                },
                {
                    "sent": "Intuitively, for each concept expression, one introduces a new predicate in the logic program, which, together with the rules define the semantics of the corresponding DL construct constraint.",
                    "label": 0
                },
                {
                    "sent": "In the in the logic program encode the inclusion axioms in the DL part and the 1st order interpretation of DL concept expressions is simulating using free rules.",
                    "label": 1
                },
                {
                    "sent": "So basically for every concept name and role name, we introduce a freeroll.",
                    "label": 0
                },
                {
                    "sent": "Present it in before in the beginning so and there is this following result.",
                    "label": 0
                },
                {
                    "sent": "There is a polynomial non modular and faithful translation with respect to predicate satisfiability, from shock knowledge basis to forced forest logic problems.",
                    "label": 1
                },
                {
                    "sent": "OK and as a consequence, satisfiability checking with respect to F1 hybrid knowledge basis is also in double exponential time.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, so some related work.",
                    "label": 0
                },
                {
                    "sent": "There are the air hybrids.",
                    "label": 0
                },
                {
                    "sent": "Knowledge base is defined by Rosati.",
                    "label": 0
                },
                {
                    "sent": "In which again, there is a deal knowledge base and the disjunctive Datalog program.",
                    "label": 0
                },
                {
                    "sent": "But there is a so called Weekly deal safe safety condition imposed.",
                    "label": 0
                },
                {
                    "sent": "Then Description logic rules are decidable fragments of soil where rules have a similar shape with our rules, or three shape tools.",
                    "label": 0
                },
                {
                    "sent": "But there is no negation, and as the semantic is a first order one and not a minimal one, like in our case.",
                    "label": 1
                },
                {
                    "sent": "Also, FDNC is an extension of answer set programming with function symbols where rules are again syntactically restricted in order to maintain decidability rules are somehow similar the syntactic restriction to ours, but.",
                    "label": 0
                },
                {
                    "sent": "Still, so they are safe Datalog safe with.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "So we can see that there is not too much, or at least we do not know about approaches where you have integration with unsafe rules between such types of such hybrid combinations.",
                    "label": 1
                },
                {
                    "sent": "OK, so future work we want to extend F hybrid knowledge basis and the reason it's reasoning algorithms or algorithm for file piece so that we can simulate streak and.",
                    "label": 0
                },
                {
                    "sent": "Prototype implementation and optimization so they will be ready to work on on implementing.",
                    "label": 0
                },
                {
                    "sent": "Not so complex version of the language and we are working on optimizing the algorithm.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So I'm finding some conclusions so.",
                    "label": 0
                },
                {
                    "sent": "We offered reasoning support for language which allows an innovative combination of ontologies and rules.",
                    "label": 1
                },
                {
                    "sent": "No sadness condition is needed from a more theoretical perspective, we divide the Tableau algorithm for non monotonic but yet not her Brant restricted formulas and also the paper established decidability results the presence of this algorithm established disabilities, Alpha forest logic programs.",
                    "label": 0
                },
                {
                    "sent": "OK so.",
                    "label": 0
                },
                {
                    "sent": "Thank you.",
                    "label": 0
                },
                {
                    "sent": "Question.",
                    "label": 0
                },
                {
                    "sent": "So maybe I've missed something, but it is not clear to me the motivation.",
                    "label": 0
                },
                {
                    "sent": "The starting motivation is just.",
                    "label": 0
                },
                {
                    "sent": "Is this just another attempt at combining ontologies or and rules?",
                    "label": 0
                },
                {
                    "sent": "Or there is a specific problem you want to address?",
                    "label": 0
                },
                {
                    "sent": "I've missed something maybe so we do not.",
                    "label": 0
                },
                {
                    "sent": "We don't have a use case lacking that still use case or, but the idea is so as I said that the fact that we can simulate.",
                    "label": 0
                },
                {
                    "sent": "Concept satisfiability and we can simulate such a complex description logic viral, so this is also not to be ignored and that there is no this deal safety condition because all the approaches I know so far.",
                    "label": 0
                },
                {
                    "sent": "So they all kind.",
                    "label": 0
                },
                {
                    "sent": "Have they all have a kind of restriction on on the presence of literalized in the body of the rules on the variable.",
                    "label": 0
                },
                {
                    "sent": "So there there are restricted.",
                    "label": 0
                },
                {
                    "sent": "So this is allows for.",
                    "label": 0
                },
                {
                    "sent": "Outside, this is much more integrating approach.",
                    "label": 0
                },
                {
                    "sent": "Also integrating the domains.",
                    "label": 0
                },
                {
                    "sent": "Of the description, logic, interpretation and the open as I said.",
                    "label": 0
                },
                {
                    "sent": "Like any other question.",
                    "label": 0
                },
                {
                    "sent": "But I have one, can you say sorry?",
                    "label": 0
                },
                {
                    "sent": "Not.",
                    "label": 0
                },
                {
                    "sent": "This double next time results, are they tight or this algorithm is optimal?",
                    "label": 0
                },
                {
                    "sent": "So we just know that they are an exponential nondeterministic exponential heart, but we don't have a completeness result for this fragment.",
                    "label": 0
                },
                {
                    "sent": "So we know that it is in double nontraumatic exponential time, and we know that they are an expert, but also, but we don't know more.",
                    "label": 0
                },
                {
                    "sent": "Any other question?",
                    "label": 0
                },
                {
                    "sent": "So curiosity, can you tell us a bit more on your implementation?",
                    "label": 0
                },
                {
                    "sent": "What are the results you have?",
                    "label": 0
                },
                {
                    "sent": "And yeah, so so far there is only an implementation for the restricted fragment from Discworld piece, which I talked before and we made some comparison with Racer for example and.",
                    "label": 0
                },
                {
                    "sent": "When we put repeated queries so in the end we we have kind of a bit worse results but not much worse.",
                    "label": 0
                },
                {
                    "sent": "Let's say just the first query is worse for us, but we're working on optimizing this as this is totally unoptimized, so it's like just the first try and and we want to use.",
                    "label": 0
                },
                {
                    "sent": "Servers so we are also working theoretically in how to integrate such servers even for this algorithm.",
                    "label": 0
                },
                {
                    "sent": "So how to make calls to such servers?",
                    "label": 0
                },
                {
                    "sent": "And then we expect when we when we have this and when we also have model caching and things like this which are already implementing in Racer then will be compatible, but it's quite early stages of question for this implementation.",
                    "label": 0
                },
                {
                    "sent": "Thank you, thank you.",
                    "label": 0
                }
            ]
        }
    }
}