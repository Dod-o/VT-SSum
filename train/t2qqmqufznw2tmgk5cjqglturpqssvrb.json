{
    "id": "t2qqmqufznw2tmgk5cjqglturpqssvrb",
    "title": "Querying Linked Data: SPARQL 101",
    "info": {
        "author": [
            "Irini Fundulaki, Foundation for Research and Technology - Hellas (FORTH)"
        ],
        "published": "Oct. 22, 2015",
        "recorded": "August 2015",
        "category": [
            "Top->Computer Science->Semantic Web"
        ]
    },
    "url": "http://videolectures.net/eswc2015_fundulaki_sparql_101/",
    "segmentation": [
        [
            "My name is Aiden, even do lucky and I'm OK and I'm a researcher at the Institute of Computer Science and forth.",
            "It's the one of the main institutes research institutes in Greece and it's located in Iraklion where your planes landed or your.",
            "Boats arrived.",
            "I don't know how you came here."
        ],
        [
            "So I'm going to talk to you about Sparkle.",
            "As Barry said before, it's the language that it's the language that the main language for querying RDF databases.",
            "So this is a an overview.",
            "I'm going to introduce a little bit of spark.",
            "Well, I'm going to discuss about this particular basics.",
            "I'm going to also then talk about how we can update link data using Sparkle 1.1.",
            "And finally, we're going to discuss a little bit about the Sparkle protocol at the end.",
            "If time allows us."
        ],
        [
            "So the sparkle specification consists of three parts."
        ],
        [
            "So first of all, there is the query language that we are going to discuss here.",
            "It is a declarative language for querying, sparkle for querying RDF data.",
            "There is the first specification Sparkle 1.0 it was a W3C specification, or if you if you like.",
            "Recommendation since January 2008.",
            "Then Sparkle 1.1 arrived.",
            "It was a W became a W3C special recommendation since the March of 2013.",
            "Now Sparkwell 1.1 is an update language.",
            "Consider also introduces update statements and it is a declarative language for manipulating RDF data.",
            "OK.",
            "The declarative in the sense that you say what you want to do, and the engine below does what it should do.",
            "Now then there's this particular protocol that we're also going to discuss here.",
            "It is a standard for issuing sparkle queries and for receiving results.",
            "It is useful the communication between Sparkle server clients and services.",
            "And finally, there is the the first part of the specification.",
            "Sparkle specification with the Sparkle query results.",
            "The XML specification there of that we're not going to discuss here.",
            "OK, so you can just go ahead and have a look at that."
        ],
        [
            "OK, so Sparkle 1.0 two was the first part of Sparkwell specification W 3C standards since 2008 an it allow it it it is a language only for for querying, right?",
            "It allows you to specify queries for read only queries.",
            "Sparkle 1.1 introduces now query extensions such as aggregate Subqueries, negation expressions in the select more.",
            "Complex expression expressions in the select clause.",
            "Updates for data management and such such as Insert, delete, create or.",
            "Say sorry for creating graphs for inserting triples in the graphs for manipulating graphs in general, and then there is also Federation extension in this particular 1.1 which actually describes how one can create services, create values and create service variables.",
            "No."
        ],
        [
            "OK, so in this presentation I'm going to use the turtle format that Barry talked about earlier for representing RDF data and the the turtle format can also be used in sparkle in the representation of a triple pattern.",
            "So here are a set of RDF triples, right.",
            "The first triple T1 this is this.",
            "These are the well more or less the RDF triples that we're going to work with in this presentation.",
            "Or triple T1 says the DPD a good sunshine.",
            "So this.",
            "So you have this triple here.",
            "This is the subject DP there.",
            "Good day.",
            "Sunshine has an artist.",
            "The Beatles, right?",
            "So this is the first triple SEC.",
            "Triple its stairs states that help the album help.",
            "It has an artist, The Beatles and so and so on.",
            "OK, do you get that?",
            "The triples OK?",
            "Is it fine?",
            "OK."
        ],
        [
            "No.",
            "These are again, so this is the RDF triple.",
            "The basic building block of of the Semantic Web data which is in the form of subject, predicate, and object.",
            "So this is how the constituents of a triple R."
        ],
        [
            "No sparkle for this particular basic sparkle is based on is it is based on pattern matching.",
            "What it means.",
            "It means that queries describe subgraphs of the queried graph and then sparkle.",
            "Graph patterns actually describe the subgraphs that we would we would like to match.",
            "OK, So what is this particular graph pattern?",
            "First of all, it is a triple pattern.",
            "It is a triple with variables, right?",
            "So you you take it triple, you remove the constant so the URS and then you put variable.",
            "So here you have a triple pattern.",
            "No, a group graph pattern is a composition of group graph patterns using sparkle operators.",
            "OK, So what this particular then sorry.",
            "I'm going to find to do that this particular operators are.",
            "Do you have our joints OK?",
            "Sets of triple patterns that actually produce or create the basic graph patterns you have?",
            "Union you have union graph patterns that are graph patterns that are connected with the Union operator.",
            "An optional graph patterns graph patterns connected with the optional operator right, and then you also can substitute.",
            "One can also express complex conditions are using filters on variables for group graph patterns and then finally you have patterns of named graphs.",
            "Do you know what name graphs are?",
            "Name graphs no OK, so in a spark you'll know.",
            "Sorry in RDF, they want it at some point.",
            "I think it was 2008 or a bit earlier than that.",
            "OK yeah it was.",
            "They wanted to express actually how provenance information you know.",
            "Like for instance somebody extolled me, set made, made the statement, told me a set of triples and then they want it actually to create a named graph graph that is uniquely determined by a UI.",
            "But that includes those triples.",
            "OK, so this is what a name graph is.",
            "You have a graph.",
            "You assign it to it.",
            "You are I and then you treat it as any other resource in RDF.",
            "OK, this is a name graph.",
            "They wanted to talk.",
            "They wanted the name graph to talk about provenance, to talk about quality, to talk about, trust, so named graph was a principle.",
            "Let's say one of the building blocks of RDF.",
            "When the application started coming in in the context of RDF data."
        ],
        [
            "Now, as I said before, a triple pattern is an RDF triple with variables right in place of subject, predicate and object and variables.",
            "In our case, well not in our case, but in Sparkle case are prefixed with the question mark.",
            "So here you have two triple patterns.",
            "This is what we said.",
            "You take one triple use.",
            "You substitute one of our all of Britain, three subject, predicate and object with a with a variable and then here you have it.",
            "This is the first triple button that says that.",
            "Oops, the first triple pattern matches all the triples that have the predicate they be paid.",
            "Their own owl artist.",
            "And then they have the object dipity other business.",
            "And here is the album sorry.",
            "Here's the variable.",
            "The variable is in the place of subject that says much me all the triples much me all triples with this predicate and these objects.",
            "The second one has two has two variables, one variable in the place of subject and another variable.",
            "The place of objects where the third one has all three variables there OK."
        ],
        [
            "So.",
            "No basic graph button is a set of triple patterns, right?",
            "That's what we said before, and basically graph pattern is is understood as a conjunction of triple patterns.",
            "Do you know what conjunction is, yes.",
            "Do you?",
            "OK. OK, so for instance, if I have this these two triple buttons, this is triple put pattern one and triple Pattern 2 right?",
            "What I can do is that I can just make one conjunction.",
            "Basic graph pattern that actually is a conjunction of both.",
            "So what is so in our case?",
            "This basic graph pattern says.",
            "Let's start from the beginning.",
            "This triple pattern says get me all artists.",
            "I get me the the artist of the album help right?",
            "This is the first triple pattern.",
            "The second triple pattern cells.",
            "Get me get me the artist and the and the gender, the kind of music that this artist is playing right this.",
            "These are the two separate triple patterns.",
            "They don't have any relationship between them.",
            "Now when I take those two and then I create a basic graph pattern, what happens is that I'm asking here for all.",
            "Find me the artist of the album help and then get me the kind of music for this artist.",
            "This is this is what the basic graph pattern is talking about.",
            "OK until now.",
            "Sorry it's a very bad time for doing any class.",
            "It's 2:30 in the afternoon."
        ],
        [
            "OK, so.",
            "No, I said before from the basic graph patterns we're going to group graph patterns so.",
            "Sorry it is what?"
        ],
        [
            "No, I know a conjunction is conjunction is always a subset.",
            "It says.",
            "Here this one says.",
            "Get me all artists of album help.",
            "That's one, and then here it says get me the artists and their kind.",
            "OK, here what happens is that you take those two conditions if you want.",
            "Right?",
            "You put them together, then you won't.",
            "They are all the all the artists that wrote the album help.",
            "Yes, this is what we got.",
            "Yes, this is what?",
            "Yeah, this is the definition of conjunction, yes?",
            "No problem."
        ],
        [
            "OK, so now a group group graph pattern is a set of graph patterns which are delimited by brackets.",
            "So for instance here if I have the this group graph patterns, so I have.",
            "I'm going to as you have.",
            "OK, as we have noted before, I'm writing triple pattern for triple patterns, BG for basic graph patterns and here is group graph patterns CGP.",
            "So here I'm I took the group graph pattern that I wrote before.",
            "Here it is again.",
            "The difference here is this.",
            "Point and here you see that I have two.",
            "I have one triple, but a nanosecond triple pattern there.",
            "Together in sorry in bracket, so these are equivalent graph patterns, so an equivalent an sorry, an equivalent.",
            "The group graph patterns are equivalent when a graph pattern consists of only basic graph patterns that are themselves in their credit as conjunction of triple patterns and the group graph pattern is then equal to all to the corresponding set of triple patterns.",
            "Well this daughter.",
            "So what is interesting about Sparkle is that this dot operator might.",
            "Here says is the join.",
            "Right, this is the conjunction for them.",
            "There is no end.",
            "In this in sparkle when you write sparkle queries, there is no end.",
            "The end right and the word.",
            "You you can right here the dot this is the end for them.",
            "Now, in another sense, here you see it ends.",
            "Actually it ends this triple pattern.",
            "OK, and here what it says is that it also ends this.",
            "It ends this triple pattern again.",
            "OK, so you have two, so if even if you even if you write this then this isn't this.",
            "Interpreting as a conjunction here it is also interpreting as a conjunction, and here it is also interpreted as a conjunction.",
            "Here it is interpreted as the end.",
            "This is the end of the statement.",
            "Yeah, yeah.",
            "I'm not having it.",
            "No, there's no difference, actually.",
            "What can you say that again, in the first here?",
            "Yes.",
            "If you remove them pointing, this is going to be syntactically incorrect.",
            "No, no, no.",
            "This is syntactically incorrect.",
            "If you have if you have two triple patterns and you cannot have two triple patterns without a point, you have to have one operator there, right?",
            "So this is the this is, yeah.",
            "This is the stocking company breast, which which which tells the query engine or a credit processor.",
            "There's some statement might be following.",
            "Yes yeah.",
            "So here here if you want to.",
            "Now, if you want to write an end, if you want to join these two statements then you have to write this.",
            "This this point, let's say right now.",
            "You see this point is missing from here.",
            "You don't need that here.",
            "You see, so these two are.",
            "These two are equivalent.",
            "There are written in different ways, but they're equivalent.",
            "They're meaning exactly exactly the same thing.",
            "OK. Other questions.",
            "Yes, sorry.",
            "Sorry.",
            "Yes, yeah.",
            "Launch.",
            "No.",
            "Here is something very, very specific here.",
            "The dot means it's an end, it's an end.",
            "It means it is a conjunction I want.",
            "Those artists and their their the kind of music they played where those artists are the artists of the album help.",
            "This is what it says.",
            "Yes, this is what you have to write, yeah?",
            "Yeah.",
            "OK. OK."
        ],
        [
            "OK, so group the group graph patterns are built through inductive construction, combining smaller patterns into larger ones.",
            "Using this particular operators.",
            "As I said before.",
            "No, the variables in Group graph patterns have a global scope.",
            "That means that you can have a you know a query.",
            "You can have many.",
            "You can have your group graph patterns.",
            "You can have variables there and they are not local to the group graph pattern.",
            "They are global to the query.",
            "OK and.",
            "OK.",
            "Sorry and then you can.",
            "Also we can also have the empty group graph pattern.",
            "We always need that in in logic, which is a special case of group graph pattern which is denoted by the empty brackets.",
            "Now so.",
            "As I said before, well, I don't remember if I said it, but I hope, but I put a lot of Internet well.",
            "Say Apple.",
            "Something there important.",
            "There is no keyword for conjunction is particularly right.",
            "I said about the dots, there is no end there.",
            "You don't write join, you don't write and you don't write anything.",
            "So basic graph patterns are.",
            "You can put together basic graph patterns and then you can.",
            "As as I showed."
        ],
        [
            "Here you can put together group graph patterns as I showed here or they are engulfed with the with the bracket with the bracket symbols and then like this you can actually talk about a joint statement OK."
        ],
        [
            "OK, so now this particular query results like this.",
            "You are going to understand, I think a little bit better what sparkle is about, so we have the subgraphs.",
            "Well, what given sparkle query?",
            "What is the result of this query?",
            "It is a subgraph of the data that match the Sparkle query.",
            "OK, so the matching is based on what we call from the relational world variable bindings or mappings.",
            "OK, So what is the variable binding?",
            "It is a substitution of query variables with terms in the RDF graph.",
            "What is an RDF term?",
            "It can be a resource UI or it can be also a constant.",
            "OK, this is what then RDF term is and also can be a blank mode.",
            "But there there is.",
            "There is an issue with blank notes because in spark well well, at least in in sparkle.",
            "I think in 1.1 in the second version of Sparkle, blank nodes are.",
            "I identified Adam, actually.",
            "They are uniquely identified in the sense that if you if you write something.",
            "A blank note.",
            "You know that.",
            "If if my query returns me to blank notes, then these two blank notes I by default different between them.",
            "They're not, they're not the same.",
            "OK, now they are perceived as a partial function from variable Stewart DF terms.",
            "This is what the mapping is and it represents 11 way of variable substitution.",
            "Also not on variables can be bound to a mapping and we're going to see this when we have optional optional operator or the Union operator.",
            "And in our case, usually how mappings are represented.",
            "There representatives with the tabular representation or where each row represents one mapping.",
            "So if for instance I have.",
            "A set of triple buttons or a union of triple buttons, or.",
            "Whatever you have triple buttons with all these K variables, then here is a mapping and mapping M1 is a binding between variable to value or two and value OK, not too narrow to non value.",
            "OK, so.",
            "Not in the form of your eyes.",
            "Yes, yes.",
            "Why not yes?",
            "Yeah, I don't see I mean sparkle queries.",
            "You can apply it to a triple store right in the Triple Store.",
            "You usually do not well what we store in a triple store.",
            "We do not store the ur eyes.",
            "We store some identifiers for representing the ur eyes and the reason for this is that your eyes are very long so the tab a lot of space.",
            "So what we what we try to do not with what we try to do but what most of engines are doing is actually they are represented there.",
            "They are substituting the UI with an identifier.",
            "Just to save space.",
            "Yeah, sorry.",
            "Yeah.",
            "No no no no no you cannot.",
            "You cannot query with sparkle something which is well.",
            "CSV is by.",
            "You can take a CSV and you can put it into triples, sparkle.",
            "You cannot query everything.",
            "You can query things which are into triples, your query.",
            "Your question was different in your question was can I query things that they they do not have the form of you are I and I said yes.",
            "Well The thing is that you cannot query all CSV files.",
            "You have to query triples there right?",
            "You cannot query with particular relational table, it has to be triples that you query.",
            "Subject predicate object yes.",
            "No, you can be, as I said before, it can be just an identifier.",
            "For instance, you couldn't.",
            "It's not necessary that it is a UI.",
            "Depends on the triple store that you have.",
            "Depends on the triple store that you have.",
            "So in your what we are doing in triple stores is that we we take in your eyes and and in order to save space we use them.",
            "We use not.",
            "We use them, we represent them.",
            "We give a representation as simple numbers, let's say or characters or numbers.",
            "OK, so the UI http3wdpedia.org/person it is represented by you.",
            "Are you 1 by by identifier one.",
            "So we have a mapping, a table that Maps identifiers to ur eyes, uniquely Maps them OK. My project.",
            "Yeah.",
            "Yes.",
            "Any yes?",
            "Yes.",
            "Yeah.",
            "Database of triplestore Well if you.",
            "OK, if you have, let's say that you have key value pairs.",
            "That's what you said, right?",
            "OK, this key value.",
            "Does it represent something?",
            "The is it the name?",
            "For instance, does it represent the name?",
            "It is the name Irini.",
            "OK, then you take something which is the current.",
            "Let's say the current value, not the current value.",
            "You you take something that is the metrics, right?",
            "Here is.",
            "I have one.",
            "Measurements are not not a metric measurement and this measurement has temperature 15 degrees.",
            "This measurement has temperature 35 degrees.",
            "These are triples.",
            "I'm just told you about.",
            "I spoke with your value pairs I just said.",
            "This is the triple based representation that I can use so so that's it.",
            "I mean, you just take CSV and you transform it in triples.",
            "Once you know what is the relationship between your think the key and your value pair and your value.",
            "OK, so you just do this transformation.",
            "Normalization?",
            "I mean, it's easy, not.",
            "It's not easy but well, I'm just I just want to say that if you have a CSV file right, you can have let's say 15 different columns.",
            "OK, for instance I I'm a human being right?",
            "I drive a car.",
            "My car here is this kind of, you know, like the license number I have a driver license.",
            "I have Social Security number etc etc.",
            "You can say see this as a universal relation like you can say that here is their role with erynnis.",
            "Everything about eating well, each attributes there.",
            "It has a meaning.",
            "The fact that I'm 165 this is my height right?",
            "So here in E as a as an identifier as a UI as something hasn't has a height 165 she has she's I don't know 40 years old she so this is her age right so?",
            "Everything, everything you can transform it, you can translate it into a triple.",
            "Something subject has predicate has age has.",
            "I don't know all over color of hair etc and the value so here it is.",
            "So so you take one huge 111 huge table one huge role with 15 maybe 100 attributes and then you transform it into a set of triples.",
            "You want something.",
            "Before we were discussing OK. OK, so so the solution for sparkle query on an RDF graph is a bug.",
            "Is is a set of.",
            "It's a bug of variable bindings.",
            "OK, it's a bug.",
            "It's not the set, it's a bug."
        ],
        [
            "OK, so so when I want to talk about how to what is the result of matching triple patterns.",
            "It is the triples that match the variables in the triple pattern.",
            "So here it is.",
            "So here is my triple button.",
            "OK, my triple pattern.",
            "Actually if I if I read it like this it says find me all triples that have their predicate artist.",
            "That's what it says.",
            "Find me all triples and have the.",
            "The predicate is DB DB pedia slash hour till the owl artist.",
            "So here.",
            "So here are my triples.",
            "So which are the triples?",
            "Which are the triples that much distribute pattern now?",
            "With two free variables, two variables that are not bound to anything.",
            "So here they are.",
            "Want to see this?",
            "Does not much, because actually it's not the predicate.",
            "Do not mind does not much do not much and this problem all the predicate does not much either.",
            "So I have three bindings here and one and two and three and bindings here.",
            "They're going to have this, so here it is.",
            "The double representation here is my mapping and here are my attributes for my for my mapping table.",
            "The attributes are actually the variable names.",
            "An artist, so for the work I have good day Sunshine and for the artist The Beatles and so on for the other triples.",
            "Did you get that?",
            "OK, it's not difficult."
        ],
        [
            "No, for the basic graph button who said that this is a conjunction of triple patterns.",
            "So all so first of all, all the triples, all the triple patterns should match.",
            "This is the conjunction and all variables must be bound.",
            "This is the join the aspect of join, so here it is.",
            "My triple butter.",
            "Now this is sorry.",
            "My basic graph parrot pattern now.",
            "So my basic graph pattern looks for the artists and their kinds and the artists should be the.",
            "The ones who actually made or authored or created album help.",
            "OK, so here is my here, am I?",
            "My triples.",
            "So I'm going to find first of all this is the DP pedia help artist.",
            "The Beatles.",
            "This is the.",
            "This is the triple that matches this one and now I'm also going to find the triple that matches the second triple pattern.",
            "And the triples are matches.",
            "The second triple patterns.",
            "This one right?",
            "Mike, am I OK?",
            "Yes or no?",
            "OK.",
            "So here is my.",
            "My own one and only triple pattern.",
            "Sorry mapping."
        ],
        [
            "OK, so here is another example.",
            "I have this basic graph pattern that says also is actually the same is give me all artists and their kinds that have written the album help.",
            "So the the the triples are different now.",
            "So again I'm I'm taking the album help, that's good.",
            "Now I'm also finding the kind of music that they wrote, which is pop music and like this I create my first mapping OK. Now I also create a second mapping.",
            "I create a second mapping becausw.",
            "The point is that.",
            "I have for the second triple pattern in my basic graph pattern.",
            "I have a second mapping, so I'm doing the Cartesian product of the two results.",
            "OK, so this is how I would get two mappings out of."
        ],
        [
            "1.",
            "No, for the filters the filters impose constraints on group graph patterns and not only on variables, so these constraints involve arithmetic operators.",
            "Are there functions which is?",
            "For instance, you can say whether something is a literal something the language in which string is written, whether a variable is bound that is rather variable, has a value or not, and also you have arithmetic comparisons like greater.",
            "Equal etc different etc.",
            "And then you have also logical connectives, which is negation, disjunction and conjunction.",
            "So all these are expressed using the filter keyword.",
            "So for instance here you can say 11 example of a filter is if the name is a literal as a literal value, and then you will.",
            "Well here is the filter is about the whether the variable name equals The Beatles.",
            "The third filter, the example of a filter, is whether the value value of variable name is the filters or.",
            "Sorry is The Beatles or The Beatles forgot here, sorry I forgot here and up.",
            "What this quote?",
            "Yes, and here I I have also a filter which is fine.",
            "Me know I want everything where the name is a regular expression where the name is contains the string bit bit like Beatles at position I and the last filter is something that says I want all the I want whatever I want or whether the variable runtime has a value greater than 1720 or.",
            "Lower than 1000 OK.",
            "So the idea of matching filters is the following is that compute the solutions.",
            "You you have a basic graph, button, group, graffunder, whatever you want.",
            "Compute the solutions and then remove all the.",
            "Remove those solutions that do not match the filter.",
            "This is how they are.",
            "This is how the evaluation is done."
        ],
        [
            "No, I feel condition is a restriction on on solutions over the whole group in which the filter appears.",
            "So group graph pattern as well can have multiple fear, multiple filters, not fierce filters.",
            "This can be written as a single filter, one conjoined with conjoined filter conditions.",
            "So, for instance, if I have this this one.",
            "I have a filter name equals The Beatles and filter dot OK. Myconnect last filter runtime greater than 7020.",
            "Around time, less than 1200 and this can be written in this.",
            "This filter, which is with the end right.",
            "The logical operator and you see that name filters and runtime.",
            "And so I removed one filter.",
            "I replace it with a yes.",
            "It depends on the engine, but there are some engine were actually yes and then some agents will actually know.",
            "So it depends on the.",
            "Usually no, because the I mean this is something that we know from the relational databases that when you see two ends in a filter you see two filters.",
            "Then you you do an end together and then you push it down to the and say to the database to evaluate 1st and to remove blah blah blah and the sorry the results the 1st result.",
            "Yeah.",
            "Yeah, but they also.",
            "The thing is here when you when I write the second filter, it might be that some yeah you you don't know you don't know the selectivity of the field of the of the attribute.",
            "Don't know anything.",
            "So for instance if I have a database where everybody or everything is about The Beatles but the first filter doesn't do anything, this is the second filter that does.",
            "So it depends on the selectivity of the of the attributes, yes?",
            "Yeah.",
            "Yeah, it's that it is the selectivity.",
            "It is the selectivity that they use this.",
            "I mean how selective is 1 filter with respect to the other?",
            "So this is.",
            "The results they come to how many peoples returns with this filter?",
            "And yeah there yes there are.",
            "There are all sorts of.",
            "There are plenty in of indexes that you can use in order to do this.",
            "You know to do this thing.",
            "So for instance you can use.",
            "So first of all the statistics as you said or the selectivity you can use.",
            "Then you can have also sorts of indexes where they say index me now on runtime or on name for instance.",
            "So you can just.",
            "Well this is not related to your question what to do but it is related mostly to.",
            "How quick optimization is done so they have thousands of of ways in which you can do.",
            "You can do query processing OK, so now I have we have equivalent graph patterns, so using so using these writings we can have also equivalent graph patterns and also The thing is that for instance if I have this filter, well it's not a filter, this one.",
            "This is a group graph pattern.",
            "I have this one, this triple button and I have a filter with the name equals Mittens where I can do it?",
            "Can I just simply substitute the variable name?",
            "With the right out with the value that I wanted to be bound to OK.",
            "Yes.",
            "Yeah.",
            "You can you cannot have equivalence with.",
            "You can have equivalence with equality.",
            "OK. Quality here you want name equals The Beatles if it were name regular if it was a filter with a regular expression etc.",
            "You cannot write it.",
            "Write it OK?",
            "No, the."
        ],
        [
            "In their expressions, we have different types of function who have functional forms.",
            "We have functions on RDF terms.",
            "We have fun."
        ],
        [
            "And some numbers we have functions of strings and functions on dates and times, so you have plenty of functions that you can use for spark well in order to do certain things."
        ],
        [
            "Now, how do we match string filters?",
            "So for instance this well this is not the filter, this is.",
            "This is an example of of an expression that contains a filter.",
            "It is give me all albums, artists and their names were the filter where the name equals The Beatles, right?",
            "So how do we?",
            "How does an well at Triple Store will match this?",
            "So here are my sets of triples, again.",
            "Now the.",
            "Here is my my only mapping, I think right?",
            "Is it?",
            "Well, no, it's not my only mapping.",
            "I have mapping for this one and that one OK. Do I have another mapping maybe?",
            "I have three mappings, why?",
            "This one it gives me artist in March, the first one, The Beatles.",
            "And then I have the name of The Beatles.",
            "The Beatles.",
            "OK now here it is.",
            "The first one.",
            "Sorry, the M2.",
            "For help, I have again The Beatles and then I go from here the DB prop name The Beatles and then I get the second mapping.",
            "The third mapping tells me you get one album Rain Rain dogs artist Tom Waits and then Tom ways with the name Tom Waits.",
            "So I have three mappings.",
            "But now when the time to evaluate the filter I'm going to start and remove the last one, right?",
            "So I'm going to remove the Tom Waits mapping OK. OK."
        ],
        [
            "OK, so now now it's different.",
            "Example, so here I have how do I match arithmetic filters?",
            "Is the same idea as I what I did to match the string filters?",
            "I have here an album with the runtime, then one the album and the runtime on the runtime is greater than 7020 and lower than 1200.",
            "OK, so here are my my triples.",
            "I have good day Sunshine 1290 it is not.",
            "Help 1723 and 2060.",
            "So here are my.",
            "My mappings.",
            "I have runtimes for everything right for all I have.",
            "I've run times for all, so I create three mappings for my for my query.",
            "If I want to evaluate the filter in the filter is going to to remove.",
            "Sorry the last album The Good Day Sunshine since the runtime is 1290 which is outside the threshold I have."
        ],
        [
            "No, these were the the group graph based triple patterns, basic graph patterns and group graph patterns.",
            "This is the conjunction and the filters, so this is how they are in their written and how they are interpreted and how they are matched, how they're evaluated.",
            "Now let's go into union graph buttons.",
            "As I said before, Union is one of the operators that we are going to work with.",
            "Well, you are going to work with if you want for your.",
            "For your application for your project.",
            "So what does what does we do?",
            "What do we do?",
            "What can we do with a Union graph pattern?",
            "It allows us to form the disjunction of graph patterns.",
            "Do you know what the disjunction is?",
            "Yes, this junction.",
            "Why do we need that?",
            "Why do we need union when Union we need the Union?",
            "Because if his information expressed in different ways in RDF graphs.",
            "OK, so for instance, if you have the pedia.org and you can have their the DPD our name in full.",
            "I know it's very hot.",
            "I know in fall for instance a friend of a friend then you have the full name as an attribute.",
            "So if I if I have those two datasets and I want to get information from both.",
            "Then I need one way to be able to go.",
            "If you want to get the name of people from both datasets, I need one way to say here it is.",
            "Take 2 two triple patterns.",
            "I know that one is the pedia name, the other is full of name and then get the names and bring them to me.",
            "OK so I need a Union graph button to do this.",
            "And how do we do this?",
            "We we?",
            "Well, how does Sparkle propose to do this?",
            "It is.",
            "It'll it provides us the Union keyword to express this thing.",
            "So, so here it is.",
            "So for instance, well, I used name.",
            "Now I use gender Foresters.",
            "So here in DP there all DPI uses DB pedia slash or gender and Musicbrainz.",
            "I think it uses kind to express the kind of music that one artist rights OK.",
            "So how does the matching perform more than one patterns may match.",
            "If if more than one patterns much, then all possible solutions are returned.",
            "The patterns are matched in dependently and the results are combined using sector at the Union.",
            "And patterns not necessarily use the same variables, and this is the main difference with the Union that we have in relational data, because in the relational queries you can, you can actually express a union between two relations, but they have to have the same.",
            "I mean you you do union of apples with apples.",
            "Here we can do unions of apples with oranges, right?",
            "So this is the interesting part of Union for for Spark."
        ],
        [
            "Among other things.",
            "OK, so how do we match those graph patterns?",
            "So here it is.",
            "So here is my union graph pattern.",
            "I need to hear the artist with from my data set the artist with with genre, pop music and union the artist with genre rock music OK.",
            "So here this my first, I see that.",
            "DBPR gender Maps.",
            "The first triple pattern.",
            "So here is my first by binding or mapping the second one binds the 2nd.",
            "Yeah, the second thing.",
            "And then that's it, right?",
            "I have two mappings.",
            "With one with one variable now.",
            "Sorry I have three mumblings because I have another rock music.",
            "OK."
        ],
        [
            "So let's see now what?",
            "What this union graph pattern does?",
            "It asks me, it asks me get me all the albums that have an artist, and then union the artist with with its kind.",
            "OK, I have two two different kinds of information that I have here so.",
            "What do I do?",
            "So the first thing is that I get the 1st.",
            "OK.",
            "I get the first time, sorry.",
            "I get the first basic graph button or triple button if you want album DPD All artist artists and then here it gives me help with the business for the first triple.",
            "No, the second the second one and.",
            "It gives me also DP, sorry.",
            "D3 gives me this one and then T1 gives me this one.",
            "It gives me the genre, DB pedia, pop music.",
            "OK, I get the second triple pattern.",
            "Then I match it with with my.",
            "With my triples and then at the end I get.",
            "Also, Tom Waits don't waste where.",
            "Why becausw dumb ways actually has?",
            "Much is the second triple button in my query.",
            "OK, did you get that or not?",
            "Yeah so.",
            "OK so I have.",
            "I have this union graph pattern.",
            "OK then I have two.",
            "Two triple patterns constitute this union graph pattern.",
            "The first one album I artist artist and the second one artists genre genre.",
            "OK, so how do I find these things?",
            "I said?",
            "First of all I get album DB, Pedia, oil artists, artists.",
            "And I'm trying to find all the triple patterns that match this triple pattern there.",
            "OK, so which?",
            "Which one is this?",
            "It is this one so I get help.",
            "You forget this OK?",
            "OK.",
            "The first one matches.",
            "This will return to me this mapping.",
            "Now I see.",
            "Are there any other triples in my data set that can match this distributor know then I'm going to the to the second one and the second one tells me that artist, genre, genre.",
            "So I'm going to find those two things and I'm going.",
            "I'm going just to say that you know something, artists.",
            "DB Pedia, The Beatles and dumb ways with their gender.",
            "I have no album value there.",
            "OK, as before I had before I had no.",
            "Nothing here now I have.",
            "I can just mob this thing.",
            "OK.",
            "Missed the final result.",
            "If you have a union, if you have a union it says you have to Union.",
            "If you have triple button one union triple Pattern 2, the result is the set of mappings that are either in triple pattern in the set of mappings from triple pattern or the set of mappings from triple pattern to OK, so the OR is represented as a union of those sets.",
            "OK.",
            "Yes.",
            "Can you can you repeat this please?",
            "No, the this is known value.",
            "There is no value, no value if you if you go in a relational database will return the null, but it's not.",
            "It's actually doesn't exist.",
            "It doesn't exist.",
            "You say here.",
            "It's it's really I I should have table.",
            "OK if you take.",
            "If you have two expressions and you say expression, one union with expression 2.",
            "The set of mappings, or if I if I evaluate this union of expressions in in a data set.",
            "The result is a mapping from the evaluation of the first expression union.",
            "The mappings from the evaluation of the second expression, so the results of the evaluation of this Union of expressions is either the result of the first or the result of the 2nd and, or it can be from both.",
            "OK.",
            "Sorry.",
            "Yes, this is the result.",
            "What I'm I'm writing there is always the result of an expression, OK?",
            "No, it is.",
            "It is a partial function.",
            "The mapping is a partial.",
            "It's not the globe and it is not the total function, it's a partial one, but it can map to something right to an RDF term, or it can map to.",
            "To the non value to the null for instance.",
            "Yes.",
            "Yeah.",
            "But in any case, the mapping.",
            "Also it can be, it can be a partial.",
            "It's a partial function, so it's it's.",
            "It's a partial function.",
            "It says that it can.",
            "It can map to.",
            "Well, it's not necessary, but it is a total.",
            "Not everything should be mapped to something.",
            "OK. OK."
        ],
        [
            "So here it is.",
            "A second graph pattern an.",
            "So sorry, the second union graph pattern.",
            "So we have here an album which was created by Artist One.",
            "This is my variable and artist two which has a gender right?",
            "This is what I want to get.",
            "And this is the set of a set of triples on which this graph pattern is going to be evaluated on so.",
            "Here you see that I have three variables.",
            "Sorry, four variables have album.",
            "I have artist one artist too and gender as as a result of my mappings.",
            "So here we are talking only about mappings OK.",
            "So before you said it was you who said no.",
            "No, I don't remember who said who asked what is the result of the day of the once the result of the sparkle query where for the for the moment we're not talking about sparkle queries.",
            "I'm just talking about mappings I'm talking about.",
            "Well.",
            "This group graph patterns they are part of sparkle queries right now.",
            "Buddy and Sparkle query can be a select if I right select."
        ],
        [
            "Here.",
            "Here this can.",
            "This can be a part of this particular query.",
            "If any sparkle query arrived, select album, artist.",
            "Then he's going to return me those.",
            "Going to return me the album and the artist that's going to return me.",
            "OK, this part of the table.",
            "From there, from this, this is the first thing that an evaluator does, takes the work laws, because this is everything in a where clause at the values they were closed, and then at the end that it does what it calls, evaluates the solution modifyers that says not.",
            "Now.",
            "For instance, I have a distinct, so in this distinct I am going to remove everything.",
            "That is, let's say the duplicates of albums on the duplicates of artists.",
            "For instance, I'm going just to remove to present.",
            "The album has a help and the artist is.",
            "I don't know Tom Waits or.",
            "The Beatles for instance OK.",
            "Yes, yeah.",
            "Yeah, yeah, yeah, so let's close or ask close or describe clothes or constructors, but the basic thing to understand is how those mappings are actually what is.",
            "When I write the query, how do I evaluate the query?",
            "OK, how does the result?",
            "How is the result computed?",
            "And then from then on you can.",
            "We can talk about the you know how.",
            "For instance we can how the select clause works OK."
        ],
        [
            "OK so here is my second union graph pattern or first one I don't remember and here is the data set of triple patterns, so here so here is my.",
            "So here is my set of.",
            "Well, here is the tabular representation of the mappings where I have four variables.",
            "OK, so now what does it want?",
            "First of all, I'm going to take.",
            "The first triple pattern right album Baby doll artist artist one.",
            "So this is the triple that I'm going.",
            "This can be evaluated on and this is the result that I get OK. That's simple, right?",
            "OK. No for the 2nd.",
            "For the second trip and the secondary provider, I'm going to get this this value.",
            "OK. No.",
            "For the.",
            "Sorry.",
            "OK. No, for the.",
            "And for the second triple pattern, I'm also going to get this value and This is why I'm getting to the PD Atom weights.",
            "OK.",
            "There's nothing more there.",
            "OK, any?",
            "No."
        ],
        [
            "OK. No semantics of union graph patterns.",
            "Do you know what semantics is?",
            "Yes.",
            "OK.",
            "Sorry.",
            "Yes, meaning formal meanings.",
            "OK, so the semantics of Union graph patterns, a Union graph pattern GP one.",
            "And I I tried to say before I have it here there is the same result as a set theoretic union of the of the result of grab graph patterns GP1 and GP2.",
            "OK, so if I say you take this, the union of those kind of patterns, then the result is the Union of the of the evaluation on the same set of triples of this graph.",
            "Patterns should be one in GP2.",
            "OK.",
            "This is it."
        ],
        [
            "Sorry.",
            "Sorry.",
            "Properties of Union Union is a binary operator.",
            "It is a commutative operator in the sense that GP one union GP2 is equivalent to GP2 Union GP one.",
            "It is left left associative.",
            "It has higher precedence than conjunction.",
            "So first we do union and then we do conjunction.",
            "And then so.",
            "Then if I OK so this is left associative, so GP one Union GP, two young GP three is equivalent to GP one union GP2 Union GP three OK?",
            "Anne.",
            "OK, now this is with for Union Union is OK, is interesting at least.",
            "Now optional graph patterns.",
            "For what does it allow us?",
            "Optionality is it's a very interesting operator in the sense that introduces negation in sparkle, and negation creates all sorts of problems when we're talking about provenance, where we're talking about.",
            "Provenance is it's very interesting and.",
            "Yeah, it's very difficult.",
            "OK, so it allows the specification of optional parts of a query.",
            "And why do we need that?",
            "Why do we need optional?",
            "Because regular and an end or complete information cannot be assumed.",
            "Not in RDF graphs.",
            "And this is the point of semantic web in the sense that we are not open world environment there there is information out there.",
            "We don't exactly know where it is and how it is etc which form it is and how do we express that?",
            "How does Sparkle allows us to express it expressed using the optional keywords?",
            "So we're just writing.",
            "Everyone would have gotten one option graph button too, so."
        ],
        [
            "So here it is an example, it says that.",
            "You should return me all artists.",
            "And their images, if they have.",
            "If they don't have, you don't return them to me, OK?",
            "If if here it was a dot sign, let's say if here was the dot, then I would I would.",
            "I would get all albums and their images.",
            "OK, if it was the union I would get their albums and images of whatever albums on whatever things I had.",
            "OK. OK, so for the matching process, if the optional part is not matched then no solutions on this part are created by the solutions but but the solutions are computed and are not eliminated by the.",
            "Sorry I'm not illuminated by the by the engine."
        ],
        [
            "No optional graph patterns.",
            "This optional graph pattern.",
            "Now it returns all mappings independently whether date is bound to somebody.",
            "OK, this is optionality here.",
            "I said give me all albums and artists, and optionally optionally, if they have the date.",
            "If the if the artists have a birthday to return this to me.",
            "If they don't, no problem, just return me the album and their artists, OK?",
            "Now this one says return all mappings where date is not bound.",
            "These are two different things.",
            "Here I I want that the bound means if I say bound variable means I require this variable has a value not bound.",
            "It means that I do not want this variable to have a value.",
            "So these two things are not equivalent.",
            "10 minutes.",
            "No, wait 10 minutes, forget it.",
            "OK so.",
            "Sorry so.",
            "In that case, these two expressions are not equivalent and you understand why, right?",
            "Yes.",
            "Don't.",
            "Well, yes, if this artist has a date then don't return this this artist.",
            "To me that's what it says OK?"
        ],
        [
            "OK, so now let's see how optional works.",
            "So here is my.",
            "Here is my set of triples.",
            "OK, fine then here is my query.",
            "My query says give me all albums and their artists an optionally the match of the album OK.",
            "So.",
            "So here are my my my set of mappings again first of all and I should have said that from the beginning my set of mappings.",
            "The attributes that I have are all the attributes in the graph patterns.",
            "So I take everything and then I just put it in a table.",
            "These are this is the tabular representation of a mapping.",
            "It says take all the attributes that sorry all the variables that I have in my set of graph patterns and then produce a tabular representation for those.",
            "OK, so now let's say, let's see.",
            "The first thing I'm going to do is that I'm going to evaluate the first, the first triple button, album artists, artists.",
            "So here is what I what I have OK. Now then, what I'm going to do is that I'm going to have.",
            "Sorry.",
            "Then The thing is also that for sorry.",
            "Do I have something for this for Beatles as an artist?",
            "No, sorry though.",
            "Do I have something for this album as an with an image?",
            "Do I have it or not?",
            "No, but still I don't have this image, so I'm going to return it because it was optional image, OK Now.",
            "Now for rain dogs.",
            "Tom Waits.",
            "I have that I have the image of the of the album.",
            "So album artist I have it where this album artist I have some weights and then also I have a.",
            "For image this one that I'm going to return it here so it was optional, but I have it so I'm returning it, so I'm interpreting it as a joint.",
            "OK, yes.",
            "Part what do you?",
            "What do you mean?",
            "Connected using artist.",
            "Why didn't you just return?",
            "The tooltip is from the beginning that mapping from the beginning you can return.",
            "I just did it.",
            "Try to do it step by step.",
            "You can return it as you like, yeah?",
            "No, it can get evaluated in a totally different way.",
            "This is the each engine.",
            "Each engine has its own way of interpreting and evaluating things and its own way of the plans.",
            "So some engines might do and completely different thing from what we are doing right now.",
            "In order to explain you know how I mean to explain how the matching is done.",
            "OK, yeah, you just.",
            "I just want you to understand how what it means.",
            "It means here it means evaluate the 1st.",
            "No.",
            "Try to evaluate evaluate both OK and if you find any much there then return this.",
            "If you don't return again.",
            "OK, so this is the thing.",
            "This is why it's declarative.",
            "Query language is the clarit when it's not functional and they said I'm not telling you how to do these things, I'm just telling you what I want from these things.",
            "OK, and if you see how the the algebraic expression it is, because there is an algebra between this behind this language, it says you have first to do the join and then difference remove the union OK, then remove the union of the two patterns.",
            "But first do the join.",
            "OK."
        ],
        [
            "So the properties of optional is that this binary operator it is left associative and.",
            "Is left associative, associative and it is also so if you have G1 optional GB.",
            "Two optional GP 3, then you can have.",
            "First of all, you do an option run between GP1 and GP2 and then the option between GPC OK. No, if you have GP GP, one optional GP2 optional GP three, this is not equivalent to that right?",
            "And I think you understand why.",
            "Huh?",
            "OK.",
            "It is non non not commutative.",
            "For sure, we cannot say.",
            "We cannot commute GP.",
            "One optional GP2.",
            "I mean it's a different query and it's completely different query.",
            "And finally if I have.",
            "Sometimes people write those awkward expressions optional GP, one it means empty graph.",
            "Optional GP one OK.",
            "Yes.",
            "And then so yeah.",
            "And then it is higher precedence than conjunction.",
            "OK.",
            "So now."
        ],
        [
            "Optional and filters.",
            "I'm not even.",
            "I have my heart, my presentation.",
            "OK, so so here.",
            "Here it is.",
            "Optional and filters.",
            "Here is my query I said.",
            "Find me I'll be an artist and then optional.",
            "I want the albums whose runtime is greater than 7020.",
            "OK, so here it is my my my mapping results.",
            "I'm going to have The Beatles good and then The Beatles.",
            "They have a runtime 1723 OK and then what I have I have rain dogs I have good day sunshine or I have rain dogs.",
            "the DP Pedia is I have Tom Waits.",
            "And then what this some weights?",
            "I don't have a runtime and it's good because it's optional, right?",
            "Why don't I don't have good day sunshine becausw?",
            "It's not greater than 70.",
            "Now 7020 it's just 1000, so I have eliminated that from scratch.",
            "Do you agree with it or not?",
            "Or was it too fast?",
            "What's the first?",
            "OK, so here it is.",
            "So you take the first, the first triple button, which is you know above listing you said album.",
            "I want all the albums and their artists, OK?",
            "And optionally I want for those albums, and you know, because this is the shared variable, it is the common variable.",
            "This is where they they do connect.",
            "And I want this album the runtime of those albums albums to be more than higher than 7020.",
            "OK, so I'm I'm just saying OK, fine, so here it is.",
            "I have an album and I have an artist, The Beatles.",
            "And then I'm going to find out whether for this album.",
            "I have a runtime.",
            "OK, I have a runtime yes 1723 it is higher than 7020 so it's fine.",
            "Now, what about rain dogs?",
            "Rain dogs?",
            "Yes, I have another.",
            "I have an artist and then do I have a runtime for rain dogs?",
            "No, I don't, but in any case it's optional.",
            "Some fine, right?",
            "No, another good day sunshine you have on the pedia.",
            "The Beatles.",
            "I also have a runtime for this, but actually it it breaks down my condition.",
            "So I'm not going to include it if it includes if if if I have an optional an I have a filter in the optional.",
            "It's not verified then I just reject it, right?",
            "It does not satisfy my my filter condition.",
            "OK.",
            "Yes.",
            "Yeah, of course, of course it's a different thing.",
            "Said completely different query.",
            "Yeah, because because now sorry, because you see the filter opens up here and ends here.",
            "Right, so everything is in the filter.",
            "So it's an expression in the filter.",
            "If I take the filter out, then the filter is actually it's going to be on on the artist.",
            "Right, and again it's not satisfied as well, so it's not.",
            "It's not going to be accepted as well.",
            "Yeah then good day sunshine with Bing.",
            "Because it doesn't have a filter.",
            "No, sorry it has a filter.",
            "It has a filter.",
            "Here's a filter.",
            "Yeah, it should be.",
            "Yeah it should be.",
            "It has a filter.",
            "Sorry it has a hard time.",
            "Sorry, OK, so actually the optional pattern does not generate generate any bindings when either there is no DB pedia runtime property.",
            "That's what it doesn't generate.",
            "There is a deep edial our runtime property, but the constraint is not satisfied.",
            "Then if this was the case for good day sunshine, right?",
            "It has a runtime property, but the constraint is not satisfied, so I'm just throwing it out."
        ],
        [
            "OK, no multiple optionals.",
            "Um?",
            "OK, so in multiple what do I do in multiple options here?",
            "I have again the artist and then I have an optional optional runtime and then an optional image.",
            "So what do I do?",
            "The first thing I do is that I'm I'm going to find out.",
            "I'm going to get album The Beatles good.",
            "I'm going to find Iran time 1723 fine and then do I have anything on any much for help?",
            "No I don't have.",
            "So here it is my my first.",
            "My first binding OK. No, let's go now to the second one.",
            "Rain dogs OK, I have Tom Waits good now I need something about Tom Waits which is does it have an optional no does have?",
            "Rain dogs Tom Waits.",
            "It doesn't have any much yes, so it has any much.",
            "It doesn't have a runtime.",
            "OK.",
            "It's OK, yeah?",
            "Yeah, I mean I'm less than half my slides.",
            "So I'm a problem there.",
            "Let me OK.",
            "I need some.",
            "I need another 15 minutes to wrap it up.",
            "Please 15 yeah OK then then I'm going to be fast, OK?",
            "OK, so then at the end I have a bone machines bone machine is here, it is here.",
            "Here's my artist, Tom Waits.",
            "Do I have anything for for bone Machine?",
            "No, I don't have anything, but still I don't care because.",
            "Image and runtime are optional fields, so I don't care if I don't have anything for Tom Waits."
        ],
        [
            "So now combining Union and optional I have general rules, optional refers exactly to one group, group to pattern to the right.",
            "Optional and union refer to all expressions to their left.",
            "Since both operators are left associative and union optional have the same precedence.",
            "So if I write an expression like this, then this expression is equivalent to the expression here.",
            "OK.",
            "So here if I have this expression, then I'm just going to Union 1st and then do the optional at the end.",
            "OK, these are the general rules for the option.",
            "OK."
        ],
        [
            "Now what happens with Union in conjunction?",
            "Then in union conjunction, this is equivalent to writing something like this.",
            "So for instance, I'm going to have.",
            "So I have this huge union and then I'm going to have first.",
            "The green one stops there and then the blue one stops.",
            "There is in the sense that I have first or union and then.",
            "First the Union and then the conjunction with the end."
        ],
        [
            "OK, so very fast.",
            "Now we are at the sparkle query components.",
            "So there is this prologue where now you sit down and your your virtuoso open point Open Access point you write your sparkle query.",
            "You have to write your prefix which is.",
            "In the prefix you say, what are my labels for?",
            "For your eyes, right?",
            "The PDF for the PDL?",
            "Then you specify your prefixes and then after that you.",
            "Syntax of the query is slightly different from turtle syntax.",
            "It is no.",
            "There is no.",
            "Right and used as a separator for the for the syntax."
        ],
        [
            "Now The thing is that we have different query forms.",
            "We have query form select task describen construct.",
            "For instance you have for instance here in this query I write select artist genre.",
            "Here this one is one of the many times you have seen this group graph pattern.",
            "What what query engine does is that if it sees this the where clause?",
            "Evaluates it and then based on the select it does other things like order by.",
            "Having by etc etc.",
            "And then at the end it will just select.",
            "It will pick up the the mappings from for the variables that you see there."
        ],
        [
            "OK, then you can also have from from from from name.",
            "It is an optional close when you say, for instance, that.",
            "You select from this name graph.",
            "If you haven't many name graphs in your datasets, then you need to point to point to say by saying that this is the name graph that I'm interested in, or from a name.",
            "If this is the name graph I'm interested in.",
            "If you have many named graphs in your."
        ],
        [
            "In your thing.",
            "OK, now the where is that defines the buttons to match against the data.",
            "OK and then this is the computation of the mappings and bindings that happens.",
            "So this is the whole discussion before was about this part.",
            "The where clause.",
            "Once you understand this they were close and then you understand how the select clause or the query clause goes and picks up the variables and you have.",
            "Then you have it.",
            "OK this is the main thing that you need to know."
        ],
        [
            "And then you also have solution modifiers that I used to modify the result set.",
            "You can have order by limit offset to organize the results you have group by to combine the results and distinct to eliminate duplicates.",
            "This is very similar to to the relational."
        ],
        [
            "Next no, the query forms very fast for different kinds.",
            "The select that returns actually in ordered multiset of variable bindings.",
            "The ask that asks whether a graph pattern has at least one solution with returns the Boolean OK and the constructor returns a new RDF graph and this is very helpful when you're going to build an application that takes has an RDF graph and then it's going to select specific kinds of.",
            "If you want to create a sub graph OK, then you are going to use the construct clause.",
            "And then the described that returns an RDF graph containing the RDF data inbound.",
            "This required resource.",
            "I'm.",
            "OK, so.",
            "Well the question OK, the construct it returns a new RDF graph.",
            "That means that it does not carry the does not carry the identifiers that the RBF nodes have.",
            "Just construct something you said construct it can well the.",
            "The pattern that he can have the construct close can be arbitrarily long, so you can have construct and then big group graph pattern.",
            "So you construct.",
            "The the trunk, the duration of the drug, the album that it is in when the the The whole graph.",
            "The initial RDF graph can be the album all the tracks, the duration of all the album and then the duration of the tracks etc etc.",
            "So you can reorganize your graph as you like.",
            "This is the construct close."
        ],
        [
            "Anne.",
            "Yeah.",
            "Undescribed describe is aren't.",
            "You give one, you are you are I, and it just returns the neighborhood of those you are I.",
            "This is very simple.",
            "It's one, yeah, right?",
            "That's what you said.",
            "Describe I, on the other hand, you can also say describen.",
            "Then you give a sparkle query, but then it should return only one UI.",
            "OK, so this is it basically, OK?",
            "No, the variables in the select rows are returned along with their values according to the computed binding.",
            "So this is what we.",
            "This is what we said before.",
            "So for instance this is select the artist that made the album identified by you.",
            "I help and we are this music kind so this is this is the group graph pattern we're discussing when you saw in the many examples and then you have selected artists and gender where you can just, you know.",
            "You get you get back the the the variables that you need.",
            "You can also have.",
            "Also, the only the artist return the artist OK just needs that.",
            "Just return the artist John here it means that it should exist OK.",
            "But gender as a value should exist there, but I need that this variable is there.",
            "OK."
        ],
        [
            "So, um."
        ],
        [
            "So there are also the solution modifyers.",
            "For instance return the name of the album of The Beatles that have at least two different tracks.",
            "So if I have the the solution modifyers here, I have this track one and track two and track one should be different than track two.",
            "This is a filter between the variables.",
            "That means that the two variables should map to different resources or different values.",
            "OK, and then they reduced.",
            "I remove, I return all the all the names of the album somewhere in the distinct I'll remove.",
            "I returned just.",
            "I eliminate the duplicates.",
            "I don't know to return everything.",
            "OK."
        ],
        [
            "Then you have a good against there.",
            "I'm going to guess that specify expressions on other groups of solutions, so here.",
            "So for example, I want the average value of a set of values in variable takes or.",
            "I want the average temperature.",
            "Or I want the average or the maximum count of.",
            "Prices this person gained over the period of six years, for instance.",
            "OK, so I'm going to get defined in Sparkle 1.1 or count sum min Max, average group concat and sample."
        ],
        [
            "OK. And so, for instance, here are a couple of well.",
            "Queries with the with this.",
            "With this aggregates select count album's albums.",
            "So here again select for instance, I can select an album and then I can.",
            "This is an expression we use also again loading relational databases where you you select this account, let's say 10 and then you return the variable albums and then number 10 below just to have one point of reference for this.",
            "This information and then also you can return the number of tracks per album recorded by The Beatles, where you can group by album and then you can throw count the track number for this for this album so you can do the grouping and then you can return the track."
        ],
        [
            "OK, so now since they're running after us.",
            "OK, so here it is, I'm done."
        ],
        [
            "I'm done here this this OK?",
            "I'm OK, so this is the construct GP one where GP two OK. Well again is the same kind of well.",
            "What we said before instead of group graph pattern.",
            "If there is a new graph specified by an optional pattern, and if the button is missing, then the graph graph pattern in the where clause is considered.",
            "Buttons uses variable sat in the queries were closed and the graph is obtained from the variable bindings in the queries were close."
        ],
        [
            "So for instance, here very quickly.",
            "So it says return graph containing only formation about The Beatles except typing except the information of type.",
            "So for instance I I want everything about The Beatles where everything about the biggest except the fact that they are group.",
            "There are music and music group about the fact that one of the most well on all the other, all the properties that are not.",
            "We do not have predicate type there.",
            "So what I'm going to return?",
            "Is I'm going to return which ones on?",
            "Everything, all the triples here.",
            "OK now The thing is that in this new graph.",
            "In this new graph, the this this information, they have the new identifiers.",
            "They're not the old identifiers, they are new.",
            "This is why they call it a new graph, OK?",
            "OK, so I'm done well.",
            "No.",
            "No, I'm in my head.",
            "OK. Yeah."
        ],
        [
            "OK, so here it is 62.",
            "OK.",
            "I think.",
            "Well, here also you can create the interesting thing about sparkle and that's Sparkle 1.1 and that's why I mean it's so hard to understand it and so hard to write queries.",
            "And This is why many applications are writing queries now.",
            "Instead of ask people is that you can have all sorts of nested queries there.",
            "So for instance you can.",
            "You can combine the construct query with aggregate values, subquery and.",
            "In order to do that, then you have to create a subquery inside the where clause.",
            "So for here for instance here, I can say that you know something, select, construct an album where the music Ontology with a duration and this album duration.",
            "And then I have where the album.",
            "Where?",
            "When?",
            "Where, what, where you need to find all the albums are by The Beatles.",
            "They they have been organized albums of The Beatles by Sorry by album, by album, and then they're having the the summary of their track duration should be more than XY.",
            "I don't know how many 6016.",
            "It's an hour 600 seconds.",
            "Yeah, OK, OK 60 minutes so then actually you construct this.",
            "This tablet this sorry this triple nothing.",
            "Established this triple by saying which is the album and which is duration of the ontology given that.",
            "The takes this.",
            "It takes the album duration select close so.",
            "This is what I had to say very fast.",
            "I think next year should be 1 1/2 hour for at least force.",
            "Punctual I think no.",
            "Yeah.",
            "And so here it is my from me.",
            "If you need anything please please you know come and yes."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "My name is Aiden, even do lucky and I'm OK and I'm a researcher at the Institute of Computer Science and forth.",
                    "label": 1
                },
                {
                    "sent": "It's the one of the main institutes research institutes in Greece and it's located in Iraklion where your planes landed or your.",
                    "label": 0
                },
                {
                    "sent": "Boats arrived.",
                    "label": 0
                },
                {
                    "sent": "I don't know how you came here.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So I'm going to talk to you about Sparkle.",
                    "label": 0
                },
                {
                    "sent": "As Barry said before, it's the language that it's the language that the main language for querying RDF databases.",
                    "label": 0
                },
                {
                    "sent": "So this is a an overview.",
                    "label": 0
                },
                {
                    "sent": "I'm going to introduce a little bit of spark.",
                    "label": 0
                },
                {
                    "sent": "Well, I'm going to discuss about this particular basics.",
                    "label": 0
                },
                {
                    "sent": "I'm going to also then talk about how we can update link data using Sparkle 1.1.",
                    "label": 0
                },
                {
                    "sent": "And finally, we're going to discuss a little bit about the Sparkle protocol at the end.",
                    "label": 0
                },
                {
                    "sent": "If time allows us.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So the sparkle specification consists of three parts.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So first of all, there is the query language that we are going to discuss here.",
                    "label": 0
                },
                {
                    "sent": "It is a declarative language for querying, sparkle for querying RDF data.",
                    "label": 1
                },
                {
                    "sent": "There is the first specification Sparkle 1.0 it was a W3C specification, or if you if you like.",
                    "label": 0
                },
                {
                    "sent": "Recommendation since January 2008.",
                    "label": 0
                },
                {
                    "sent": "Then Sparkle 1.1 arrived.",
                    "label": 0
                },
                {
                    "sent": "It was a W became a W3C special recommendation since the March of 2013.",
                    "label": 0
                },
                {
                    "sent": "Now Sparkwell 1.1 is an update language.",
                    "label": 0
                },
                {
                    "sent": "Consider also introduces update statements and it is a declarative language for manipulating RDF data.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "The declarative in the sense that you say what you want to do, and the engine below does what it should do.",
                    "label": 0
                },
                {
                    "sent": "Now then there's this particular protocol that we're also going to discuss here.",
                    "label": 0
                },
                {
                    "sent": "It is a standard for issuing sparkle queries and for receiving results.",
                    "label": 1
                },
                {
                    "sent": "It is useful the communication between Sparkle server clients and services.",
                    "label": 0
                },
                {
                    "sent": "And finally, there is the the first part of the specification.",
                    "label": 0
                },
                {
                    "sent": "Sparkle specification with the Sparkle query results.",
                    "label": 0
                },
                {
                    "sent": "The XML specification there of that we're not going to discuss here.",
                    "label": 0
                },
                {
                    "sent": "OK, so you can just go ahead and have a look at that.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, so Sparkle 1.0 two was the first part of Sparkwell specification W 3C standards since 2008 an it allow it it it is a language only for for querying, right?",
                    "label": 0
                },
                {
                    "sent": "It allows you to specify queries for read only queries.",
                    "label": 0
                },
                {
                    "sent": "Sparkle 1.1 introduces now query extensions such as aggregate Subqueries, negation expressions in the select more.",
                    "label": 1
                },
                {
                    "sent": "Complex expression expressions in the select clause.",
                    "label": 0
                },
                {
                    "sent": "Updates for data management and such such as Insert, delete, create or.",
                    "label": 0
                },
                {
                    "sent": "Say sorry for creating graphs for inserting triples in the graphs for manipulating graphs in general, and then there is also Federation extension in this particular 1.1 which actually describes how one can create services, create values and create service variables.",
                    "label": 0
                },
                {
                    "sent": "No.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, so in this presentation I'm going to use the turtle format that Barry talked about earlier for representing RDF data and the the turtle format can also be used in sparkle in the representation of a triple pattern.",
                    "label": 1
                },
                {
                    "sent": "So here are a set of RDF triples, right.",
                    "label": 0
                },
                {
                    "sent": "The first triple T1 this is this.",
                    "label": 0
                },
                {
                    "sent": "These are the well more or less the RDF triples that we're going to work with in this presentation.",
                    "label": 0
                },
                {
                    "sent": "Or triple T1 says the DPD a good sunshine.",
                    "label": 0
                },
                {
                    "sent": "So this.",
                    "label": 0
                },
                {
                    "sent": "So you have this triple here.",
                    "label": 0
                },
                {
                    "sent": "This is the subject DP there.",
                    "label": 0
                },
                {
                    "sent": "Good day.",
                    "label": 0
                },
                {
                    "sent": "Sunshine has an artist.",
                    "label": 0
                },
                {
                    "sent": "The Beatles, right?",
                    "label": 0
                },
                {
                    "sent": "So this is the first triple SEC.",
                    "label": 0
                },
                {
                    "sent": "Triple its stairs states that help the album help.",
                    "label": 0
                },
                {
                    "sent": "It has an artist, The Beatles and so and so on.",
                    "label": 0
                },
                {
                    "sent": "OK, do you get that?",
                    "label": 0
                },
                {
                    "sent": "The triples OK?",
                    "label": 0
                },
                {
                    "sent": "Is it fine?",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "No.",
                    "label": 0
                },
                {
                    "sent": "These are again, so this is the RDF triple.",
                    "label": 0
                },
                {
                    "sent": "The basic building block of of the Semantic Web data which is in the form of subject, predicate, and object.",
                    "label": 1
                },
                {
                    "sent": "So this is how the constituents of a triple R.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "No sparkle for this particular basic sparkle is based on is it is based on pattern matching.",
                    "label": 1
                },
                {
                    "sent": "What it means.",
                    "label": 0
                },
                {
                    "sent": "It means that queries describe subgraphs of the queried graph and then sparkle.",
                    "label": 1
                },
                {
                    "sent": "Graph patterns actually describe the subgraphs that we would we would like to match.",
                    "label": 1
                },
                {
                    "sent": "OK, So what is this particular graph pattern?",
                    "label": 0
                },
                {
                    "sent": "First of all, it is a triple pattern.",
                    "label": 0
                },
                {
                    "sent": "It is a triple with variables, right?",
                    "label": 0
                },
                {
                    "sent": "So you you take it triple, you remove the constant so the URS and then you put variable.",
                    "label": 0
                },
                {
                    "sent": "So here you have a triple pattern.",
                    "label": 1
                },
                {
                    "sent": "No, a group graph pattern is a composition of group graph patterns using sparkle operators.",
                    "label": 0
                },
                {
                    "sent": "OK, So what this particular then sorry.",
                    "label": 0
                },
                {
                    "sent": "I'm going to find to do that this particular operators are.",
                    "label": 1
                },
                {
                    "sent": "Do you have our joints OK?",
                    "label": 0
                },
                {
                    "sent": "Sets of triple patterns that actually produce or create the basic graph patterns you have?",
                    "label": 0
                },
                {
                    "sent": "Union you have union graph patterns that are graph patterns that are connected with the Union operator.",
                    "label": 0
                },
                {
                    "sent": "An optional graph patterns graph patterns connected with the optional operator right, and then you also can substitute.",
                    "label": 0
                },
                {
                    "sent": "One can also express complex conditions are using filters on variables for group graph patterns and then finally you have patterns of named graphs.",
                    "label": 0
                },
                {
                    "sent": "Do you know what name graphs are?",
                    "label": 0
                },
                {
                    "sent": "Name graphs no OK, so in a spark you'll know.",
                    "label": 0
                },
                {
                    "sent": "Sorry in RDF, they want it at some point.",
                    "label": 0
                },
                {
                    "sent": "I think it was 2008 or a bit earlier than that.",
                    "label": 0
                },
                {
                    "sent": "OK yeah it was.",
                    "label": 0
                },
                {
                    "sent": "They wanted to express actually how provenance information you know.",
                    "label": 0
                },
                {
                    "sent": "Like for instance somebody extolled me, set made, made the statement, told me a set of triples and then they want it actually to create a named graph graph that is uniquely determined by a UI.",
                    "label": 0
                },
                {
                    "sent": "But that includes those triples.",
                    "label": 0
                },
                {
                    "sent": "OK, so this is what a name graph is.",
                    "label": 0
                },
                {
                    "sent": "You have a graph.",
                    "label": 0
                },
                {
                    "sent": "You assign it to it.",
                    "label": 0
                },
                {
                    "sent": "You are I and then you treat it as any other resource in RDF.",
                    "label": 0
                },
                {
                    "sent": "OK, this is a name graph.",
                    "label": 0
                },
                {
                    "sent": "They wanted to talk.",
                    "label": 0
                },
                {
                    "sent": "They wanted the name graph to talk about provenance, to talk about quality, to talk about, trust, so named graph was a principle.",
                    "label": 0
                },
                {
                    "sent": "Let's say one of the building blocks of RDF.",
                    "label": 0
                },
                {
                    "sent": "When the application started coming in in the context of RDF data.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Now, as I said before, a triple pattern is an RDF triple with variables right in place of subject, predicate and object and variables.",
                    "label": 1
                },
                {
                    "sent": "In our case, well not in our case, but in Sparkle case are prefixed with the question mark.",
                    "label": 0
                },
                {
                    "sent": "So here you have two triple patterns.",
                    "label": 0
                },
                {
                    "sent": "This is what we said.",
                    "label": 0
                },
                {
                    "sent": "You take one triple use.",
                    "label": 0
                },
                {
                    "sent": "You substitute one of our all of Britain, three subject, predicate and object with a with a variable and then here you have it.",
                    "label": 0
                },
                {
                    "sent": "This is the first triple button that says that.",
                    "label": 0
                },
                {
                    "sent": "Oops, the first triple pattern matches all the triples that have the predicate they be paid.",
                    "label": 0
                },
                {
                    "sent": "Their own owl artist.",
                    "label": 0
                },
                {
                    "sent": "And then they have the object dipity other business.",
                    "label": 0
                },
                {
                    "sent": "And here is the album sorry.",
                    "label": 0
                },
                {
                    "sent": "Here's the variable.",
                    "label": 0
                },
                {
                    "sent": "The variable is in the place of subject that says much me all the triples much me all triples with this predicate and these objects.",
                    "label": 0
                },
                {
                    "sent": "The second one has two has two variables, one variable in the place of subject and another variable.",
                    "label": 0
                },
                {
                    "sent": "The place of objects where the third one has all three variables there OK.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "No basic graph button is a set of triple patterns, right?",
                    "label": 1
                },
                {
                    "sent": "That's what we said before, and basically graph pattern is is understood as a conjunction of triple patterns.",
                    "label": 1
                },
                {
                    "sent": "Do you know what conjunction is, yes.",
                    "label": 0
                },
                {
                    "sent": "Do you?",
                    "label": 0
                },
                {
                    "sent": "OK. OK, so for instance, if I have this these two triple buttons, this is triple put pattern one and triple Pattern 2 right?",
                    "label": 1
                },
                {
                    "sent": "What I can do is that I can just make one conjunction.",
                    "label": 0
                },
                {
                    "sent": "Basic graph pattern that actually is a conjunction of both.",
                    "label": 1
                },
                {
                    "sent": "So what is so in our case?",
                    "label": 0
                },
                {
                    "sent": "This basic graph pattern says.",
                    "label": 0
                },
                {
                    "sent": "Let's start from the beginning.",
                    "label": 0
                },
                {
                    "sent": "This triple pattern says get me all artists.",
                    "label": 0
                },
                {
                    "sent": "I get me the the artist of the album help right?",
                    "label": 0
                },
                {
                    "sent": "This is the first triple pattern.",
                    "label": 0
                },
                {
                    "sent": "The second triple pattern cells.",
                    "label": 0
                },
                {
                    "sent": "Get me get me the artist and the and the gender, the kind of music that this artist is playing right this.",
                    "label": 0
                },
                {
                    "sent": "These are the two separate triple patterns.",
                    "label": 0
                },
                {
                    "sent": "They don't have any relationship between them.",
                    "label": 0
                },
                {
                    "sent": "Now when I take those two and then I create a basic graph pattern, what happens is that I'm asking here for all.",
                    "label": 0
                },
                {
                    "sent": "Find me the artist of the album help and then get me the kind of music for this artist.",
                    "label": 0
                },
                {
                    "sent": "This is this is what the basic graph pattern is talking about.",
                    "label": 0
                },
                {
                    "sent": "OK until now.",
                    "label": 0
                },
                {
                    "sent": "Sorry it's a very bad time for doing any class.",
                    "label": 0
                },
                {
                    "sent": "It's 2:30 in the afternoon.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, so.",
                    "label": 0
                },
                {
                    "sent": "No, I said before from the basic graph patterns we're going to group graph patterns so.",
                    "label": 1
                },
                {
                    "sent": "Sorry it is what?",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "No, I know a conjunction is conjunction is always a subset.",
                    "label": 0
                },
                {
                    "sent": "It says.",
                    "label": 0
                },
                {
                    "sent": "Here this one says.",
                    "label": 0
                },
                {
                    "sent": "Get me all artists of album help.",
                    "label": 0
                },
                {
                    "sent": "That's one, and then here it says get me the artists and their kind.",
                    "label": 0
                },
                {
                    "sent": "OK, here what happens is that you take those two conditions if you want.",
                    "label": 0
                },
                {
                    "sent": "Right?",
                    "label": 0
                },
                {
                    "sent": "You put them together, then you won't.",
                    "label": 0
                },
                {
                    "sent": "They are all the all the artists that wrote the album help.",
                    "label": 0
                },
                {
                    "sent": "Yes, this is what we got.",
                    "label": 0
                },
                {
                    "sent": "Yes, this is what?",
                    "label": 0
                },
                {
                    "sent": "Yeah, this is the definition of conjunction, yes?",
                    "label": 0
                },
                {
                    "sent": "No problem.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, so now a group group graph pattern is a set of graph patterns which are delimited by brackets.",
                    "label": 1
                },
                {
                    "sent": "So for instance here if I have the this group graph patterns, so I have.",
                    "label": 0
                },
                {
                    "sent": "I'm going to as you have.",
                    "label": 0
                },
                {
                    "sent": "OK, as we have noted before, I'm writing triple pattern for triple patterns, BG for basic graph patterns and here is group graph patterns CGP.",
                    "label": 0
                },
                {
                    "sent": "So here I'm I took the group graph pattern that I wrote before.",
                    "label": 0
                },
                {
                    "sent": "Here it is again.",
                    "label": 0
                },
                {
                    "sent": "The difference here is this.",
                    "label": 0
                },
                {
                    "sent": "Point and here you see that I have two.",
                    "label": 0
                },
                {
                    "sent": "I have one triple, but a nanosecond triple pattern there.",
                    "label": 0
                },
                {
                    "sent": "Together in sorry in bracket, so these are equivalent graph patterns, so an equivalent an sorry, an equivalent.",
                    "label": 0
                },
                {
                    "sent": "The group graph patterns are equivalent when a graph pattern consists of only basic graph patterns that are themselves in their credit as conjunction of triple patterns and the group graph pattern is then equal to all to the corresponding set of triple patterns.",
                    "label": 1
                },
                {
                    "sent": "Well this daughter.",
                    "label": 0
                },
                {
                    "sent": "So what is interesting about Sparkle is that this dot operator might.",
                    "label": 0
                },
                {
                    "sent": "Here says is the join.",
                    "label": 0
                },
                {
                    "sent": "Right, this is the conjunction for them.",
                    "label": 0
                },
                {
                    "sent": "There is no end.",
                    "label": 0
                },
                {
                    "sent": "In this in sparkle when you write sparkle queries, there is no end.",
                    "label": 0
                },
                {
                    "sent": "The end right and the word.",
                    "label": 0
                },
                {
                    "sent": "You you can right here the dot this is the end for them.",
                    "label": 0
                },
                {
                    "sent": "Now, in another sense, here you see it ends.",
                    "label": 0
                },
                {
                    "sent": "Actually it ends this triple pattern.",
                    "label": 0
                },
                {
                    "sent": "OK, and here what it says is that it also ends this.",
                    "label": 0
                },
                {
                    "sent": "It ends this triple pattern again.",
                    "label": 0
                },
                {
                    "sent": "OK, so you have two, so if even if you even if you write this then this isn't this.",
                    "label": 0
                },
                {
                    "sent": "Interpreting as a conjunction here it is also interpreting as a conjunction, and here it is also interpreted as a conjunction.",
                    "label": 0
                },
                {
                    "sent": "Here it is interpreted as the end.",
                    "label": 0
                },
                {
                    "sent": "This is the end of the statement.",
                    "label": 0
                },
                {
                    "sent": "Yeah, yeah.",
                    "label": 0
                },
                {
                    "sent": "I'm not having it.",
                    "label": 0
                },
                {
                    "sent": "No, there's no difference, actually.",
                    "label": 0
                },
                {
                    "sent": "What can you say that again, in the first here?",
                    "label": 0
                },
                {
                    "sent": "Yes.",
                    "label": 0
                },
                {
                    "sent": "If you remove them pointing, this is going to be syntactically incorrect.",
                    "label": 0
                },
                {
                    "sent": "No, no, no.",
                    "label": 0
                },
                {
                    "sent": "This is syntactically incorrect.",
                    "label": 0
                },
                {
                    "sent": "If you have if you have two triple patterns and you cannot have two triple patterns without a point, you have to have one operator there, right?",
                    "label": 0
                },
                {
                    "sent": "So this is the this is, yeah.",
                    "label": 0
                },
                {
                    "sent": "This is the stocking company breast, which which which tells the query engine or a credit processor.",
                    "label": 0
                },
                {
                    "sent": "There's some statement might be following.",
                    "label": 0
                },
                {
                    "sent": "Yes yeah.",
                    "label": 0
                },
                {
                    "sent": "So here here if you want to.",
                    "label": 0
                },
                {
                    "sent": "Now, if you want to write an end, if you want to join these two statements then you have to write this.",
                    "label": 0
                },
                {
                    "sent": "This this point, let's say right now.",
                    "label": 0
                },
                {
                    "sent": "You see this point is missing from here.",
                    "label": 0
                },
                {
                    "sent": "You don't need that here.",
                    "label": 0
                },
                {
                    "sent": "You see, so these two are.",
                    "label": 0
                },
                {
                    "sent": "These two are equivalent.",
                    "label": 0
                },
                {
                    "sent": "There are written in different ways, but they're equivalent.",
                    "label": 0
                },
                {
                    "sent": "They're meaning exactly exactly the same thing.",
                    "label": 0
                },
                {
                    "sent": "OK. Other questions.",
                    "label": 0
                },
                {
                    "sent": "Yes, sorry.",
                    "label": 0
                },
                {
                    "sent": "Sorry.",
                    "label": 0
                },
                {
                    "sent": "Yes, yeah.",
                    "label": 0
                },
                {
                    "sent": "Launch.",
                    "label": 0
                },
                {
                    "sent": "No.",
                    "label": 0
                },
                {
                    "sent": "Here is something very, very specific here.",
                    "label": 0
                },
                {
                    "sent": "The dot means it's an end, it's an end.",
                    "label": 0
                },
                {
                    "sent": "It means it is a conjunction I want.",
                    "label": 0
                },
                {
                    "sent": "Those artists and their their the kind of music they played where those artists are the artists of the album help.",
                    "label": 0
                },
                {
                    "sent": "This is what it says.",
                    "label": 0
                },
                {
                    "sent": "Yes, this is what you have to write, yeah?",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "OK. OK.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, so group the group graph patterns are built through inductive construction, combining smaller patterns into larger ones.",
                    "label": 1
                },
                {
                    "sent": "Using this particular operators.",
                    "label": 0
                },
                {
                    "sent": "As I said before.",
                    "label": 1
                },
                {
                    "sent": "No, the variables in Group graph patterns have a global scope.",
                    "label": 0
                },
                {
                    "sent": "That means that you can have a you know a query.",
                    "label": 1
                },
                {
                    "sent": "You can have many.",
                    "label": 0
                },
                {
                    "sent": "You can have your group graph patterns.",
                    "label": 0
                },
                {
                    "sent": "You can have variables there and they are not local to the group graph pattern.",
                    "label": 0
                },
                {
                    "sent": "They are global to the query.",
                    "label": 1
                },
                {
                    "sent": "OK and.",
                    "label": 1
                },
                {
                    "sent": "OK.",
                    "label": 1
                },
                {
                    "sent": "Sorry and then you can.",
                    "label": 0
                },
                {
                    "sent": "Also we can also have the empty group graph pattern.",
                    "label": 0
                },
                {
                    "sent": "We always need that in in logic, which is a special case of group graph pattern which is denoted by the empty brackets.",
                    "label": 0
                },
                {
                    "sent": "Now so.",
                    "label": 0
                },
                {
                    "sent": "As I said before, well, I don't remember if I said it, but I hope, but I put a lot of Internet well.",
                    "label": 0
                },
                {
                    "sent": "Say Apple.",
                    "label": 1
                },
                {
                    "sent": "Something there important.",
                    "label": 1
                },
                {
                    "sent": "There is no keyword for conjunction is particularly right.",
                    "label": 0
                },
                {
                    "sent": "I said about the dots, there is no end there.",
                    "label": 0
                },
                {
                    "sent": "You don't write join, you don't write and you don't write anything.",
                    "label": 0
                },
                {
                    "sent": "So basic graph patterns are.",
                    "label": 0
                },
                {
                    "sent": "You can put together basic graph patterns and then you can.",
                    "label": 0
                },
                {
                    "sent": "As as I showed.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Here you can put together group graph patterns as I showed here or they are engulfed with the with the bracket with the bracket symbols and then like this you can actually talk about a joint statement OK.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, so now this particular query results like this.",
                    "label": 0
                },
                {
                    "sent": "You are going to understand, I think a little bit better what sparkle is about, so we have the subgraphs.",
                    "label": 0
                },
                {
                    "sent": "Well, what given sparkle query?",
                    "label": 0
                },
                {
                    "sent": "What is the result of this query?",
                    "label": 0
                },
                {
                    "sent": "It is a subgraph of the data that match the Sparkle query.",
                    "label": 1
                },
                {
                    "sent": "OK, so the matching is based on what we call from the relational world variable bindings or mappings.",
                    "label": 0
                },
                {
                    "sent": "OK, So what is the variable binding?",
                    "label": 1
                },
                {
                    "sent": "It is a substitution of query variables with terms in the RDF graph.",
                    "label": 0
                },
                {
                    "sent": "What is an RDF term?",
                    "label": 0
                },
                {
                    "sent": "It can be a resource UI or it can be also a constant.",
                    "label": 0
                },
                {
                    "sent": "OK, this is what then RDF term is and also can be a blank mode.",
                    "label": 0
                },
                {
                    "sent": "But there there is.",
                    "label": 0
                },
                {
                    "sent": "There is an issue with blank notes because in spark well well, at least in in sparkle.",
                    "label": 0
                },
                {
                    "sent": "I think in 1.1 in the second version of Sparkle, blank nodes are.",
                    "label": 0
                },
                {
                    "sent": "I identified Adam, actually.",
                    "label": 0
                },
                {
                    "sent": "They are uniquely identified in the sense that if you if you write something.",
                    "label": 0
                },
                {
                    "sent": "A blank note.",
                    "label": 0
                },
                {
                    "sent": "You know that.",
                    "label": 0
                },
                {
                    "sent": "If if my query returns me to blank notes, then these two blank notes I by default different between them.",
                    "label": 1
                },
                {
                    "sent": "They're not, they're not the same.",
                    "label": 0
                },
                {
                    "sent": "OK, now they are perceived as a partial function from variable Stewart DF terms.",
                    "label": 0
                },
                {
                    "sent": "This is what the mapping is and it represents 11 way of variable substitution.",
                    "label": 0
                },
                {
                    "sent": "Also not on variables can be bound to a mapping and we're going to see this when we have optional optional operator or the Union operator.",
                    "label": 0
                },
                {
                    "sent": "And in our case, usually how mappings are represented.",
                    "label": 1
                },
                {
                    "sent": "There representatives with the tabular representation or where each row represents one mapping.",
                    "label": 0
                },
                {
                    "sent": "So if for instance I have.",
                    "label": 0
                },
                {
                    "sent": "A set of triple buttons or a union of triple buttons, or.",
                    "label": 0
                },
                {
                    "sent": "Whatever you have triple buttons with all these K variables, then here is a mapping and mapping M1 is a binding between variable to value or two and value OK, not too narrow to non value.",
                    "label": 0
                },
                {
                    "sent": "OK, so.",
                    "label": 0
                },
                {
                    "sent": "Not in the form of your eyes.",
                    "label": 0
                },
                {
                    "sent": "Yes, yes.",
                    "label": 0
                },
                {
                    "sent": "Why not yes?",
                    "label": 0
                },
                {
                    "sent": "Yeah, I don't see I mean sparkle queries.",
                    "label": 0
                },
                {
                    "sent": "You can apply it to a triple store right in the Triple Store.",
                    "label": 0
                },
                {
                    "sent": "You usually do not well what we store in a triple store.",
                    "label": 0
                },
                {
                    "sent": "We do not store the ur eyes.",
                    "label": 0
                },
                {
                    "sent": "We store some identifiers for representing the ur eyes and the reason for this is that your eyes are very long so the tab a lot of space.",
                    "label": 0
                },
                {
                    "sent": "So what we what we try to do not with what we try to do but what most of engines are doing is actually they are represented there.",
                    "label": 0
                },
                {
                    "sent": "They are substituting the UI with an identifier.",
                    "label": 0
                },
                {
                    "sent": "Just to save space.",
                    "label": 0
                },
                {
                    "sent": "Yeah, sorry.",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "No no no no no you cannot.",
                    "label": 0
                },
                {
                    "sent": "You cannot query with sparkle something which is well.",
                    "label": 0
                },
                {
                    "sent": "CSV is by.",
                    "label": 0
                },
                {
                    "sent": "You can take a CSV and you can put it into triples, sparkle.",
                    "label": 0
                },
                {
                    "sent": "You cannot query everything.",
                    "label": 0
                },
                {
                    "sent": "You can query things which are into triples, your query.",
                    "label": 0
                },
                {
                    "sent": "Your question was different in your question was can I query things that they they do not have the form of you are I and I said yes.",
                    "label": 0
                },
                {
                    "sent": "Well The thing is that you cannot query all CSV files.",
                    "label": 0
                },
                {
                    "sent": "You have to query triples there right?",
                    "label": 0
                },
                {
                    "sent": "You cannot query with particular relational table, it has to be triples that you query.",
                    "label": 0
                },
                {
                    "sent": "Subject predicate object yes.",
                    "label": 0
                },
                {
                    "sent": "No, you can be, as I said before, it can be just an identifier.",
                    "label": 0
                },
                {
                    "sent": "For instance, you couldn't.",
                    "label": 0
                },
                {
                    "sent": "It's not necessary that it is a UI.",
                    "label": 0
                },
                {
                    "sent": "Depends on the triple store that you have.",
                    "label": 0
                },
                {
                    "sent": "Depends on the triple store that you have.",
                    "label": 0
                },
                {
                    "sent": "So in your what we are doing in triple stores is that we we take in your eyes and and in order to save space we use them.",
                    "label": 0
                },
                {
                    "sent": "We use not.",
                    "label": 0
                },
                {
                    "sent": "We use them, we represent them.",
                    "label": 0
                },
                {
                    "sent": "We give a representation as simple numbers, let's say or characters or numbers.",
                    "label": 0
                },
                {
                    "sent": "OK, so the UI http3wdpedia.org/person it is represented by you.",
                    "label": 0
                },
                {
                    "sent": "Are you 1 by by identifier one.",
                    "label": 0
                },
                {
                    "sent": "So we have a mapping, a table that Maps identifiers to ur eyes, uniquely Maps them OK. My project.",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "Yes.",
                    "label": 0
                },
                {
                    "sent": "Any yes?",
                    "label": 0
                },
                {
                    "sent": "Yes.",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "Database of triplestore Well if you.",
                    "label": 0
                },
                {
                    "sent": "OK, if you have, let's say that you have key value pairs.",
                    "label": 0
                },
                {
                    "sent": "That's what you said, right?",
                    "label": 0
                },
                {
                    "sent": "OK, this key value.",
                    "label": 0
                },
                {
                    "sent": "Does it represent something?",
                    "label": 0
                },
                {
                    "sent": "The is it the name?",
                    "label": 0
                },
                {
                    "sent": "For instance, does it represent the name?",
                    "label": 0
                },
                {
                    "sent": "It is the name Irini.",
                    "label": 0
                },
                {
                    "sent": "OK, then you take something which is the current.",
                    "label": 0
                },
                {
                    "sent": "Let's say the current value, not the current value.",
                    "label": 0
                },
                {
                    "sent": "You you take something that is the metrics, right?",
                    "label": 0
                },
                {
                    "sent": "Here is.",
                    "label": 0
                },
                {
                    "sent": "I have one.",
                    "label": 0
                },
                {
                    "sent": "Measurements are not not a metric measurement and this measurement has temperature 15 degrees.",
                    "label": 0
                },
                {
                    "sent": "This measurement has temperature 35 degrees.",
                    "label": 0
                },
                {
                    "sent": "These are triples.",
                    "label": 0
                },
                {
                    "sent": "I'm just told you about.",
                    "label": 0
                },
                {
                    "sent": "I spoke with your value pairs I just said.",
                    "label": 0
                },
                {
                    "sent": "This is the triple based representation that I can use so so that's it.",
                    "label": 0
                },
                {
                    "sent": "I mean, you just take CSV and you transform it in triples.",
                    "label": 0
                },
                {
                    "sent": "Once you know what is the relationship between your think the key and your value pair and your value.",
                    "label": 0
                },
                {
                    "sent": "OK, so you just do this transformation.",
                    "label": 0
                },
                {
                    "sent": "Normalization?",
                    "label": 0
                },
                {
                    "sent": "I mean, it's easy, not.",
                    "label": 0
                },
                {
                    "sent": "It's not easy but well, I'm just I just want to say that if you have a CSV file right, you can have let's say 15 different columns.",
                    "label": 0
                },
                {
                    "sent": "OK, for instance I I'm a human being right?",
                    "label": 0
                },
                {
                    "sent": "I drive a car.",
                    "label": 0
                },
                {
                    "sent": "My car here is this kind of, you know, like the license number I have a driver license.",
                    "label": 0
                },
                {
                    "sent": "I have Social Security number etc etc.",
                    "label": 0
                },
                {
                    "sent": "You can say see this as a universal relation like you can say that here is their role with erynnis.",
                    "label": 0
                },
                {
                    "sent": "Everything about eating well, each attributes there.",
                    "label": 0
                },
                {
                    "sent": "It has a meaning.",
                    "label": 0
                },
                {
                    "sent": "The fact that I'm 165 this is my height right?",
                    "label": 0
                },
                {
                    "sent": "So here in E as a as an identifier as a UI as something hasn't has a height 165 she has she's I don't know 40 years old she so this is her age right so?",
                    "label": 0
                },
                {
                    "sent": "Everything, everything you can transform it, you can translate it into a triple.",
                    "label": 0
                },
                {
                    "sent": "Something subject has predicate has age has.",
                    "label": 0
                },
                {
                    "sent": "I don't know all over color of hair etc and the value so here it is.",
                    "label": 0
                },
                {
                    "sent": "So so you take one huge 111 huge table one huge role with 15 maybe 100 attributes and then you transform it into a set of triples.",
                    "label": 1
                },
                {
                    "sent": "You want something.",
                    "label": 0
                },
                {
                    "sent": "Before we were discussing OK. OK, so so the solution for sparkle query on an RDF graph is a bug.",
                    "label": 0
                },
                {
                    "sent": "Is is a set of.",
                    "label": 0
                },
                {
                    "sent": "It's a bug of variable bindings.",
                    "label": 0
                },
                {
                    "sent": "OK, it's a bug.",
                    "label": 0
                },
                {
                    "sent": "It's not the set, it's a bug.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, so so when I want to talk about how to what is the result of matching triple patterns.",
                    "label": 1
                },
                {
                    "sent": "It is the triples that match the variables in the triple pattern.",
                    "label": 1
                },
                {
                    "sent": "So here it is.",
                    "label": 0
                },
                {
                    "sent": "So here is my triple button.",
                    "label": 0
                },
                {
                    "sent": "OK, my triple pattern.",
                    "label": 0
                },
                {
                    "sent": "Actually if I if I read it like this it says find me all triples that have their predicate artist.",
                    "label": 0
                },
                {
                    "sent": "That's what it says.",
                    "label": 0
                },
                {
                    "sent": "Find me all triples and have the.",
                    "label": 0
                },
                {
                    "sent": "The predicate is DB DB pedia slash hour till the owl artist.",
                    "label": 0
                },
                {
                    "sent": "So here.",
                    "label": 0
                },
                {
                    "sent": "So here are my triples.",
                    "label": 0
                },
                {
                    "sent": "So which are the triples?",
                    "label": 0
                },
                {
                    "sent": "Which are the triples that much distribute pattern now?",
                    "label": 0
                },
                {
                    "sent": "With two free variables, two variables that are not bound to anything.",
                    "label": 0
                },
                {
                    "sent": "So here they are.",
                    "label": 0
                },
                {
                    "sent": "Want to see this?",
                    "label": 0
                },
                {
                    "sent": "Does not much, because actually it's not the predicate.",
                    "label": 0
                },
                {
                    "sent": "Do not mind does not much do not much and this problem all the predicate does not much either.",
                    "label": 0
                },
                {
                    "sent": "So I have three bindings here and one and two and three and bindings here.",
                    "label": 0
                },
                {
                    "sent": "They're going to have this, so here it is.",
                    "label": 0
                },
                {
                    "sent": "The double representation here is my mapping and here are my attributes for my for my mapping table.",
                    "label": 0
                },
                {
                    "sent": "The attributes are actually the variable names.",
                    "label": 0
                },
                {
                    "sent": "An artist, so for the work I have good day Sunshine and for the artist The Beatles and so on for the other triples.",
                    "label": 0
                },
                {
                    "sent": "Did you get that?",
                    "label": 0
                },
                {
                    "sent": "OK, it's not difficult.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "No, for the basic graph button who said that this is a conjunction of triple patterns.",
                    "label": 0
                },
                {
                    "sent": "So all so first of all, all the triples, all the triple patterns should match.",
                    "label": 1
                },
                {
                    "sent": "This is the conjunction and all variables must be bound.",
                    "label": 0
                },
                {
                    "sent": "This is the join the aspect of join, so here it is.",
                    "label": 0
                },
                {
                    "sent": "My triple butter.",
                    "label": 1
                },
                {
                    "sent": "Now this is sorry.",
                    "label": 0
                },
                {
                    "sent": "My basic graph parrot pattern now.",
                    "label": 0
                },
                {
                    "sent": "So my basic graph pattern looks for the artists and their kinds and the artists should be the.",
                    "label": 0
                },
                {
                    "sent": "The ones who actually made or authored or created album help.",
                    "label": 0
                },
                {
                    "sent": "OK, so here is my here, am I?",
                    "label": 0
                },
                {
                    "sent": "My triples.",
                    "label": 0
                },
                {
                    "sent": "So I'm going to find first of all this is the DP pedia help artist.",
                    "label": 0
                },
                {
                    "sent": "The Beatles.",
                    "label": 0
                },
                {
                    "sent": "This is the.",
                    "label": 0
                },
                {
                    "sent": "This is the triple that matches this one and now I'm also going to find the triple that matches the second triple pattern.",
                    "label": 0
                },
                {
                    "sent": "And the triples are matches.",
                    "label": 0
                },
                {
                    "sent": "The second triple patterns.",
                    "label": 0
                },
                {
                    "sent": "This one right?",
                    "label": 0
                },
                {
                    "sent": "Mike, am I OK?",
                    "label": 0
                },
                {
                    "sent": "Yes or no?",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "So here is my.",
                    "label": 0
                },
                {
                    "sent": "My own one and only triple pattern.",
                    "label": 0
                },
                {
                    "sent": "Sorry mapping.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so here is another example.",
                    "label": 0
                },
                {
                    "sent": "I have this basic graph pattern that says also is actually the same is give me all artists and their kinds that have written the album help.",
                    "label": 0
                },
                {
                    "sent": "So the the the triples are different now.",
                    "label": 0
                },
                {
                    "sent": "So again I'm I'm taking the album help, that's good.",
                    "label": 0
                },
                {
                    "sent": "Now I'm also finding the kind of music that they wrote, which is pop music and like this I create my first mapping OK. Now I also create a second mapping.",
                    "label": 0
                },
                {
                    "sent": "I create a second mapping becausw.",
                    "label": 0
                },
                {
                    "sent": "The point is that.",
                    "label": 0
                },
                {
                    "sent": "I have for the second triple pattern in my basic graph pattern.",
                    "label": 0
                },
                {
                    "sent": "I have a second mapping, so I'm doing the Cartesian product of the two results.",
                    "label": 0
                },
                {
                    "sent": "OK, so this is how I would get two mappings out of.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "1.",
                    "label": 0
                },
                {
                    "sent": "No, for the filters the filters impose constraints on group graph patterns and not only on variables, so these constraints involve arithmetic operators.",
                    "label": 1
                },
                {
                    "sent": "Are there functions which is?",
                    "label": 0
                },
                {
                    "sent": "For instance, you can say whether something is a literal something the language in which string is written, whether a variable is bound that is rather variable, has a value or not, and also you have arithmetic comparisons like greater.",
                    "label": 0
                },
                {
                    "sent": "Equal etc different etc.",
                    "label": 1
                },
                {
                    "sent": "And then you have also logical connectives, which is negation, disjunction and conjunction.",
                    "label": 1
                },
                {
                    "sent": "So all these are expressed using the filter keyword.",
                    "label": 0
                },
                {
                    "sent": "So for instance here you can say 11 example of a filter is if the name is a literal as a literal value, and then you will.",
                    "label": 0
                },
                {
                    "sent": "Well here is the filter is about the whether the variable name equals The Beatles.",
                    "label": 0
                },
                {
                    "sent": "The third filter, the example of a filter, is whether the value value of variable name is the filters or.",
                    "label": 0
                },
                {
                    "sent": "Sorry is The Beatles or The Beatles forgot here, sorry I forgot here and up.",
                    "label": 0
                },
                {
                    "sent": "What this quote?",
                    "label": 0
                },
                {
                    "sent": "Yes, and here I I have also a filter which is fine.",
                    "label": 0
                },
                {
                    "sent": "Me know I want everything where the name is a regular expression where the name is contains the string bit bit like Beatles at position I and the last filter is something that says I want all the I want whatever I want or whether the variable runtime has a value greater than 1720 or.",
                    "label": 0
                },
                {
                    "sent": "Lower than 1000 OK.",
                    "label": 0
                },
                {
                    "sent": "So the idea of matching filters is the following is that compute the solutions.",
                    "label": 0
                },
                {
                    "sent": "You you have a basic graph, button, group, graffunder, whatever you want.",
                    "label": 0
                },
                {
                    "sent": "Compute the solutions and then remove all the.",
                    "label": 0
                },
                {
                    "sent": "Remove those solutions that do not match the filter.",
                    "label": 0
                },
                {
                    "sent": "This is how they are.",
                    "label": 0
                },
                {
                    "sent": "This is how the evaluation is done.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "No, I feel condition is a restriction on on solutions over the whole group in which the filter appears.",
                    "label": 1
                },
                {
                    "sent": "So group graph pattern as well can have multiple fear, multiple filters, not fierce filters.",
                    "label": 1
                },
                {
                    "sent": "This can be written as a single filter, one conjoined with conjoined filter conditions.",
                    "label": 0
                },
                {
                    "sent": "So, for instance, if I have this this one.",
                    "label": 0
                },
                {
                    "sent": "I have a filter name equals The Beatles and filter dot OK. Myconnect last filter runtime greater than 7020.",
                    "label": 0
                },
                {
                    "sent": "Around time, less than 1200 and this can be written in this.",
                    "label": 0
                },
                {
                    "sent": "This filter, which is with the end right.",
                    "label": 0
                },
                {
                    "sent": "The logical operator and you see that name filters and runtime.",
                    "label": 0
                },
                {
                    "sent": "And so I removed one filter.",
                    "label": 0
                },
                {
                    "sent": "I replace it with a yes.",
                    "label": 0
                },
                {
                    "sent": "It depends on the engine, but there are some engine were actually yes and then some agents will actually know.",
                    "label": 0
                },
                {
                    "sent": "So it depends on the.",
                    "label": 0
                },
                {
                    "sent": "Usually no, because the I mean this is something that we know from the relational databases that when you see two ends in a filter you see two filters.",
                    "label": 0
                },
                {
                    "sent": "Then you you do an end together and then you push it down to the and say to the database to evaluate 1st and to remove blah blah blah and the sorry the results the 1st result.",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "Yeah, but they also.",
                    "label": 0
                },
                {
                    "sent": "The thing is here when you when I write the second filter, it might be that some yeah you you don't know you don't know the selectivity of the field of the of the attribute.",
                    "label": 0
                },
                {
                    "sent": "Don't know anything.",
                    "label": 0
                },
                {
                    "sent": "So for instance if I have a database where everybody or everything is about The Beatles but the first filter doesn't do anything, this is the second filter that does.",
                    "label": 0
                },
                {
                    "sent": "So it depends on the selectivity of the of the attributes, yes?",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "Yeah, it's that it is the selectivity.",
                    "label": 0
                },
                {
                    "sent": "It is the selectivity that they use this.",
                    "label": 0
                },
                {
                    "sent": "I mean how selective is 1 filter with respect to the other?",
                    "label": 0
                },
                {
                    "sent": "So this is.",
                    "label": 0
                },
                {
                    "sent": "The results they come to how many peoples returns with this filter?",
                    "label": 0
                },
                {
                    "sent": "And yeah there yes there are.",
                    "label": 0
                },
                {
                    "sent": "There are all sorts of.",
                    "label": 0
                },
                {
                    "sent": "There are plenty in of indexes that you can use in order to do this.",
                    "label": 0
                },
                {
                    "sent": "You know to do this thing.",
                    "label": 0
                },
                {
                    "sent": "So for instance you can use.",
                    "label": 0
                },
                {
                    "sent": "So first of all the statistics as you said or the selectivity you can use.",
                    "label": 0
                },
                {
                    "sent": "Then you can have also sorts of indexes where they say index me now on runtime or on name for instance.",
                    "label": 0
                },
                {
                    "sent": "So you can just.",
                    "label": 0
                },
                {
                    "sent": "Well this is not related to your question what to do but it is related mostly to.",
                    "label": 0
                },
                {
                    "sent": "How quick optimization is done so they have thousands of of ways in which you can do.",
                    "label": 0
                },
                {
                    "sent": "You can do query processing OK, so now I have we have equivalent graph patterns, so using so using these writings we can have also equivalent graph patterns and also The thing is that for instance if I have this filter, well it's not a filter, this one.",
                    "label": 0
                },
                {
                    "sent": "This is a group graph pattern.",
                    "label": 0
                },
                {
                    "sent": "I have this one, this triple button and I have a filter with the name equals Mittens where I can do it?",
                    "label": 0
                },
                {
                    "sent": "Can I just simply substitute the variable name?",
                    "label": 0
                },
                {
                    "sent": "With the right out with the value that I wanted to be bound to OK.",
                    "label": 0
                },
                {
                    "sent": "Yes.",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "You can you cannot have equivalence with.",
                    "label": 0
                },
                {
                    "sent": "You can have equivalence with equality.",
                    "label": 0
                },
                {
                    "sent": "OK. Quality here you want name equals The Beatles if it were name regular if it was a filter with a regular expression etc.",
                    "label": 0
                },
                {
                    "sent": "You cannot write it.",
                    "label": 0
                },
                {
                    "sent": "Write it OK?",
                    "label": 0
                },
                {
                    "sent": "No, the.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "In their expressions, we have different types of function who have functional forms.",
                    "label": 0
                },
                {
                    "sent": "We have functions on RDF terms.",
                    "label": 1
                },
                {
                    "sent": "We have fun.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And some numbers we have functions of strings and functions on dates and times, so you have plenty of functions that you can use for spark well in order to do certain things.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Now, how do we match string filters?",
                    "label": 0
                },
                {
                    "sent": "So for instance this well this is not the filter, this is.",
                    "label": 0
                },
                {
                    "sent": "This is an example of of an expression that contains a filter.",
                    "label": 0
                },
                {
                    "sent": "It is give me all albums, artists and their names were the filter where the name equals The Beatles, right?",
                    "label": 0
                },
                {
                    "sent": "So how do we?",
                    "label": 0
                },
                {
                    "sent": "How does an well at Triple Store will match this?",
                    "label": 0
                },
                {
                    "sent": "So here are my sets of triples, again.",
                    "label": 0
                },
                {
                    "sent": "Now the.",
                    "label": 0
                },
                {
                    "sent": "Here is my my only mapping, I think right?",
                    "label": 0
                },
                {
                    "sent": "Is it?",
                    "label": 0
                },
                {
                    "sent": "Well, no, it's not my only mapping.",
                    "label": 0
                },
                {
                    "sent": "I have mapping for this one and that one OK. Do I have another mapping maybe?",
                    "label": 0
                },
                {
                    "sent": "I have three mappings, why?",
                    "label": 0
                },
                {
                    "sent": "This one it gives me artist in March, the first one, The Beatles.",
                    "label": 0
                },
                {
                    "sent": "And then I have the name of The Beatles.",
                    "label": 0
                },
                {
                    "sent": "The Beatles.",
                    "label": 0
                },
                {
                    "sent": "OK now here it is.",
                    "label": 0
                },
                {
                    "sent": "The first one.",
                    "label": 0
                },
                {
                    "sent": "Sorry, the M2.",
                    "label": 0
                },
                {
                    "sent": "For help, I have again The Beatles and then I go from here the DB prop name The Beatles and then I get the second mapping.",
                    "label": 0
                },
                {
                    "sent": "The third mapping tells me you get one album Rain Rain dogs artist Tom Waits and then Tom ways with the name Tom Waits.",
                    "label": 0
                },
                {
                    "sent": "So I have three mappings.",
                    "label": 0
                },
                {
                    "sent": "But now when the time to evaluate the filter I'm going to start and remove the last one, right?",
                    "label": 0
                },
                {
                    "sent": "So I'm going to remove the Tom Waits mapping OK. OK.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so now now it's different.",
                    "label": 0
                },
                {
                    "sent": "Example, so here I have how do I match arithmetic filters?",
                    "label": 0
                },
                {
                    "sent": "Is the same idea as I what I did to match the string filters?",
                    "label": 0
                },
                {
                    "sent": "I have here an album with the runtime, then one the album and the runtime on the runtime is greater than 7020 and lower than 1200.",
                    "label": 0
                },
                {
                    "sent": "OK, so here are my my triples.",
                    "label": 0
                },
                {
                    "sent": "I have good day Sunshine 1290 it is not.",
                    "label": 0
                },
                {
                    "sent": "Help 1723 and 2060.",
                    "label": 0
                },
                {
                    "sent": "So here are my.",
                    "label": 0
                },
                {
                    "sent": "My mappings.",
                    "label": 0
                },
                {
                    "sent": "I have runtimes for everything right for all I have.",
                    "label": 0
                },
                {
                    "sent": "I've run times for all, so I create three mappings for my for my query.",
                    "label": 0
                },
                {
                    "sent": "If I want to evaluate the filter in the filter is going to to remove.",
                    "label": 0
                },
                {
                    "sent": "Sorry the last album The Good Day Sunshine since the runtime is 1290 which is outside the threshold I have.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "No, these were the the group graph based triple patterns, basic graph patterns and group graph patterns.",
                    "label": 0
                },
                {
                    "sent": "This is the conjunction and the filters, so this is how they are in their written and how they are interpreted and how they are matched, how they're evaluated.",
                    "label": 0
                },
                {
                    "sent": "Now let's go into union graph buttons.",
                    "label": 0
                },
                {
                    "sent": "As I said before, Union is one of the operators that we are going to work with.",
                    "label": 0
                },
                {
                    "sent": "Well, you are going to work with if you want for your.",
                    "label": 0
                },
                {
                    "sent": "For your application for your project.",
                    "label": 0
                },
                {
                    "sent": "So what does what does we do?",
                    "label": 0
                },
                {
                    "sent": "What do we do?",
                    "label": 0
                },
                {
                    "sent": "What can we do with a Union graph pattern?",
                    "label": 1
                },
                {
                    "sent": "It allows us to form the disjunction of graph patterns.",
                    "label": 1
                },
                {
                    "sent": "Do you know what the disjunction is?",
                    "label": 0
                },
                {
                    "sent": "Yes, this junction.",
                    "label": 0
                },
                {
                    "sent": "Why do we need that?",
                    "label": 0
                },
                {
                    "sent": "Why do we need union when Union we need the Union?",
                    "label": 0
                },
                {
                    "sent": "Because if his information expressed in different ways in RDF graphs.",
                    "label": 1
                },
                {
                    "sent": "OK, so for instance, if you have the pedia.org and you can have their the DPD our name in full.",
                    "label": 0
                },
                {
                    "sent": "I know it's very hot.",
                    "label": 0
                },
                {
                    "sent": "I know in fall for instance a friend of a friend then you have the full name as an attribute.",
                    "label": 0
                },
                {
                    "sent": "So if I if I have those two datasets and I want to get information from both.",
                    "label": 0
                },
                {
                    "sent": "Then I need one way to be able to go.",
                    "label": 0
                },
                {
                    "sent": "If you want to get the name of people from both datasets, I need one way to say here it is.",
                    "label": 0
                },
                {
                    "sent": "Take 2 two triple patterns.",
                    "label": 0
                },
                {
                    "sent": "I know that one is the pedia name, the other is full of name and then get the names and bring them to me.",
                    "label": 0
                },
                {
                    "sent": "OK so I need a Union graph button to do this.",
                    "label": 0
                },
                {
                    "sent": "And how do we do this?",
                    "label": 0
                },
                {
                    "sent": "We we?",
                    "label": 0
                },
                {
                    "sent": "Well, how does Sparkle propose to do this?",
                    "label": 0
                },
                {
                    "sent": "It is.",
                    "label": 0
                },
                {
                    "sent": "It'll it provides us the Union keyword to express this thing.",
                    "label": 0
                },
                {
                    "sent": "So, so here it is.",
                    "label": 0
                },
                {
                    "sent": "So for instance, well, I used name.",
                    "label": 0
                },
                {
                    "sent": "Now I use gender Foresters.",
                    "label": 0
                },
                {
                    "sent": "So here in DP there all DPI uses DB pedia slash or gender and Musicbrainz.",
                    "label": 0
                },
                {
                    "sent": "I think it uses kind to express the kind of music that one artist rights OK.",
                    "label": 0
                },
                {
                    "sent": "So how does the matching perform more than one patterns may match.",
                    "label": 1
                },
                {
                    "sent": "If if more than one patterns much, then all possible solutions are returned.",
                    "label": 1
                },
                {
                    "sent": "The patterns are matched in dependently and the results are combined using sector at the Union.",
                    "label": 0
                },
                {
                    "sent": "And patterns not necessarily use the same variables, and this is the main difference with the Union that we have in relational data, because in the relational queries you can, you can actually express a union between two relations, but they have to have the same.",
                    "label": 0
                },
                {
                    "sent": "I mean you you do union of apples with apples.",
                    "label": 0
                },
                {
                    "sent": "Here we can do unions of apples with oranges, right?",
                    "label": 0
                },
                {
                    "sent": "So this is the interesting part of Union for for Spark.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Among other things.",
                    "label": 0
                },
                {
                    "sent": "OK, so how do we match those graph patterns?",
                    "label": 1
                },
                {
                    "sent": "So here it is.",
                    "label": 0
                },
                {
                    "sent": "So here is my union graph pattern.",
                    "label": 1
                },
                {
                    "sent": "I need to hear the artist with from my data set the artist with with genre, pop music and union the artist with genre rock music OK.",
                    "label": 0
                },
                {
                    "sent": "So here this my first, I see that.",
                    "label": 0
                },
                {
                    "sent": "DBPR gender Maps.",
                    "label": 0
                },
                {
                    "sent": "The first triple pattern.",
                    "label": 0
                },
                {
                    "sent": "So here is my first by binding or mapping the second one binds the 2nd.",
                    "label": 0
                },
                {
                    "sent": "Yeah, the second thing.",
                    "label": 0
                },
                {
                    "sent": "And then that's it, right?",
                    "label": 0
                },
                {
                    "sent": "I have two mappings.",
                    "label": 0
                },
                {
                    "sent": "With one with one variable now.",
                    "label": 0
                },
                {
                    "sent": "Sorry I have three mumblings because I have another rock music.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So let's see now what?",
                    "label": 0
                },
                {
                    "sent": "What this union graph pattern does?",
                    "label": 0
                },
                {
                    "sent": "It asks me, it asks me get me all the albums that have an artist, and then union the artist with with its kind.",
                    "label": 0
                },
                {
                    "sent": "OK, I have two two different kinds of information that I have here so.",
                    "label": 0
                },
                {
                    "sent": "What do I do?",
                    "label": 0
                },
                {
                    "sent": "So the first thing is that I get the 1st.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "I get the first time, sorry.",
                    "label": 0
                },
                {
                    "sent": "I get the first basic graph button or triple button if you want album DPD All artist artists and then here it gives me help with the business for the first triple.",
                    "label": 0
                },
                {
                    "sent": "No, the second the second one and.",
                    "label": 0
                },
                {
                    "sent": "It gives me also DP, sorry.",
                    "label": 0
                },
                {
                    "sent": "D3 gives me this one and then T1 gives me this one.",
                    "label": 0
                },
                {
                    "sent": "It gives me the genre, DB pedia, pop music.",
                    "label": 0
                },
                {
                    "sent": "OK, I get the second triple pattern.",
                    "label": 0
                },
                {
                    "sent": "Then I match it with with my.",
                    "label": 0
                },
                {
                    "sent": "With my triples and then at the end I get.",
                    "label": 0
                },
                {
                    "sent": "Also, Tom Waits don't waste where.",
                    "label": 0
                },
                {
                    "sent": "Why becausw dumb ways actually has?",
                    "label": 0
                },
                {
                    "sent": "Much is the second triple button in my query.",
                    "label": 0
                },
                {
                    "sent": "OK, did you get that or not?",
                    "label": 0
                },
                {
                    "sent": "Yeah so.",
                    "label": 0
                },
                {
                    "sent": "OK so I have.",
                    "label": 0
                },
                {
                    "sent": "I have this union graph pattern.",
                    "label": 0
                },
                {
                    "sent": "OK then I have two.",
                    "label": 0
                },
                {
                    "sent": "Two triple patterns constitute this union graph pattern.",
                    "label": 0
                },
                {
                    "sent": "The first one album I artist artist and the second one artists genre genre.",
                    "label": 0
                },
                {
                    "sent": "OK, so how do I find these things?",
                    "label": 0
                },
                {
                    "sent": "I said?",
                    "label": 0
                },
                {
                    "sent": "First of all I get album DB, Pedia, oil artists, artists.",
                    "label": 0
                },
                {
                    "sent": "And I'm trying to find all the triple patterns that match this triple pattern there.",
                    "label": 0
                },
                {
                    "sent": "OK, so which?",
                    "label": 0
                },
                {
                    "sent": "Which one is this?",
                    "label": 0
                },
                {
                    "sent": "It is this one so I get help.",
                    "label": 0
                },
                {
                    "sent": "You forget this OK?",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "The first one matches.",
                    "label": 0
                },
                {
                    "sent": "This will return to me this mapping.",
                    "label": 0
                },
                {
                    "sent": "Now I see.",
                    "label": 0
                },
                {
                    "sent": "Are there any other triples in my data set that can match this distributor know then I'm going to the to the second one and the second one tells me that artist, genre, genre.",
                    "label": 0
                },
                {
                    "sent": "So I'm going to find those two things and I'm going.",
                    "label": 0
                },
                {
                    "sent": "I'm going just to say that you know something, artists.",
                    "label": 0
                },
                {
                    "sent": "DB Pedia, The Beatles and dumb ways with their gender.",
                    "label": 0
                },
                {
                    "sent": "I have no album value there.",
                    "label": 0
                },
                {
                    "sent": "OK, as before I had before I had no.",
                    "label": 0
                },
                {
                    "sent": "Nothing here now I have.",
                    "label": 0
                },
                {
                    "sent": "I can just mob this thing.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "Missed the final result.",
                    "label": 0
                },
                {
                    "sent": "If you have a union, if you have a union it says you have to Union.",
                    "label": 0
                },
                {
                    "sent": "If you have triple button one union triple Pattern 2, the result is the set of mappings that are either in triple pattern in the set of mappings from triple pattern or the set of mappings from triple pattern to OK, so the OR is represented as a union of those sets.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "Yes.",
                    "label": 0
                },
                {
                    "sent": "Can you can you repeat this please?",
                    "label": 0
                },
                {
                    "sent": "No, the this is known value.",
                    "label": 0
                },
                {
                    "sent": "There is no value, no value if you if you go in a relational database will return the null, but it's not.",
                    "label": 0
                },
                {
                    "sent": "It's actually doesn't exist.",
                    "label": 0
                },
                {
                    "sent": "It doesn't exist.",
                    "label": 0
                },
                {
                    "sent": "You say here.",
                    "label": 0
                },
                {
                    "sent": "It's it's really I I should have table.",
                    "label": 0
                },
                {
                    "sent": "OK if you take.",
                    "label": 0
                },
                {
                    "sent": "If you have two expressions and you say expression, one union with expression 2.",
                    "label": 0
                },
                {
                    "sent": "The set of mappings, or if I if I evaluate this union of expressions in in a data set.",
                    "label": 0
                },
                {
                    "sent": "The result is a mapping from the evaluation of the first expression union.",
                    "label": 0
                },
                {
                    "sent": "The mappings from the evaluation of the second expression, so the results of the evaluation of this Union of expressions is either the result of the first or the result of the 2nd and, or it can be from both.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "Sorry.",
                    "label": 0
                },
                {
                    "sent": "Yes, this is the result.",
                    "label": 0
                },
                {
                    "sent": "What I'm I'm writing there is always the result of an expression, OK?",
                    "label": 0
                },
                {
                    "sent": "No, it is.",
                    "label": 0
                },
                {
                    "sent": "It is a partial function.",
                    "label": 0
                },
                {
                    "sent": "The mapping is a partial.",
                    "label": 0
                },
                {
                    "sent": "It's not the globe and it is not the total function, it's a partial one, but it can map to something right to an RDF term, or it can map to.",
                    "label": 0
                },
                {
                    "sent": "To the non value to the null for instance.",
                    "label": 0
                },
                {
                    "sent": "Yes.",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "But in any case, the mapping.",
                    "label": 0
                },
                {
                    "sent": "Also it can be, it can be a partial.",
                    "label": 0
                },
                {
                    "sent": "It's a partial function, so it's it's.",
                    "label": 0
                },
                {
                    "sent": "It's a partial function.",
                    "label": 0
                },
                {
                    "sent": "It says that it can.",
                    "label": 0
                },
                {
                    "sent": "It can map to.",
                    "label": 0
                },
                {
                    "sent": "Well, it's not necessary, but it is a total.",
                    "label": 0
                },
                {
                    "sent": "Not everything should be mapped to something.",
                    "label": 0
                },
                {
                    "sent": "OK. OK.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So here it is.",
                    "label": 0
                },
                {
                    "sent": "A second graph pattern an.",
                    "label": 0
                },
                {
                    "sent": "So sorry, the second union graph pattern.",
                    "label": 1
                },
                {
                    "sent": "So we have here an album which was created by Artist One.",
                    "label": 0
                },
                {
                    "sent": "This is my variable and artist two which has a gender right?",
                    "label": 1
                },
                {
                    "sent": "This is what I want to get.",
                    "label": 0
                },
                {
                    "sent": "And this is the set of a set of triples on which this graph pattern is going to be evaluated on so.",
                    "label": 0
                },
                {
                    "sent": "Here you see that I have three variables.",
                    "label": 0
                },
                {
                    "sent": "Sorry, four variables have album.",
                    "label": 0
                },
                {
                    "sent": "I have artist one artist too and gender as as a result of my mappings.",
                    "label": 0
                },
                {
                    "sent": "So here we are talking only about mappings OK.",
                    "label": 0
                },
                {
                    "sent": "So before you said it was you who said no.",
                    "label": 0
                },
                {
                    "sent": "No, I don't remember who said who asked what is the result of the day of the once the result of the sparkle query where for the for the moment we're not talking about sparkle queries.",
                    "label": 0
                },
                {
                    "sent": "I'm just talking about mappings I'm talking about.",
                    "label": 1
                },
                {
                    "sent": "Well.",
                    "label": 0
                },
                {
                    "sent": "This group graph patterns they are part of sparkle queries right now.",
                    "label": 0
                },
                {
                    "sent": "Buddy and Sparkle query can be a select if I right select.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Here.",
                    "label": 0
                },
                {
                    "sent": "Here this can.",
                    "label": 0
                },
                {
                    "sent": "This can be a part of this particular query.",
                    "label": 0
                },
                {
                    "sent": "If any sparkle query arrived, select album, artist.",
                    "label": 0
                },
                {
                    "sent": "Then he's going to return me those.",
                    "label": 0
                },
                {
                    "sent": "Going to return me the album and the artist that's going to return me.",
                    "label": 0
                },
                {
                    "sent": "OK, this part of the table.",
                    "label": 0
                },
                {
                    "sent": "From there, from this, this is the first thing that an evaluator does, takes the work laws, because this is everything in a where clause at the values they were closed, and then at the end that it does what it calls, evaluates the solution modifyers that says not.",
                    "label": 0
                },
                {
                    "sent": "Now.",
                    "label": 0
                },
                {
                    "sent": "For instance, I have a distinct, so in this distinct I am going to remove everything.",
                    "label": 0
                },
                {
                    "sent": "That is, let's say the duplicates of albums on the duplicates of artists.",
                    "label": 0
                },
                {
                    "sent": "For instance, I'm going just to remove to present.",
                    "label": 0
                },
                {
                    "sent": "The album has a help and the artist is.",
                    "label": 0
                },
                {
                    "sent": "I don't know Tom Waits or.",
                    "label": 0
                },
                {
                    "sent": "The Beatles for instance OK.",
                    "label": 0
                },
                {
                    "sent": "Yes, yeah.",
                    "label": 0
                },
                {
                    "sent": "Yeah, yeah, yeah, so let's close or ask close or describe clothes or constructors, but the basic thing to understand is how those mappings are actually what is.",
                    "label": 0
                },
                {
                    "sent": "When I write the query, how do I evaluate the query?",
                    "label": 0
                },
                {
                    "sent": "OK, how does the result?",
                    "label": 0
                },
                {
                    "sent": "How is the result computed?",
                    "label": 0
                },
                {
                    "sent": "And then from then on you can.",
                    "label": 0
                },
                {
                    "sent": "We can talk about the you know how.",
                    "label": 0
                },
                {
                    "sent": "For instance we can how the select clause works OK.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK so here is my second union graph pattern or first one I don't remember and here is the data set of triple patterns, so here so here is my.",
                    "label": 0
                },
                {
                    "sent": "So here is my set of.",
                    "label": 0
                },
                {
                    "sent": "Well, here is the tabular representation of the mappings where I have four variables.",
                    "label": 0
                },
                {
                    "sent": "OK, so now what does it want?",
                    "label": 0
                },
                {
                    "sent": "First of all, I'm going to take.",
                    "label": 0
                },
                {
                    "sent": "The first triple pattern right album Baby doll artist artist one.",
                    "label": 0
                },
                {
                    "sent": "So this is the triple that I'm going.",
                    "label": 0
                },
                {
                    "sent": "This can be evaluated on and this is the result that I get OK. That's simple, right?",
                    "label": 0
                },
                {
                    "sent": "OK. No for the 2nd.",
                    "label": 0
                },
                {
                    "sent": "For the second trip and the secondary provider, I'm going to get this this value.",
                    "label": 0
                },
                {
                    "sent": "OK. No.",
                    "label": 0
                },
                {
                    "sent": "For the.",
                    "label": 0
                },
                {
                    "sent": "Sorry.",
                    "label": 0
                },
                {
                    "sent": "OK. No, for the.",
                    "label": 0
                },
                {
                    "sent": "And for the second triple pattern, I'm also going to get this value and This is why I'm getting to the PD Atom weights.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "There's nothing more there.",
                    "label": 0
                },
                {
                    "sent": "OK, any?",
                    "label": 0
                },
                {
                    "sent": "No.",
                    "label": 0
                }
            ]
        },
        "clip_31": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK. No semantics of union graph patterns.",
                    "label": 0
                },
                {
                    "sent": "Do you know what semantics is?",
                    "label": 0
                },
                {
                    "sent": "Yes.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "Sorry.",
                    "label": 0
                },
                {
                    "sent": "Yes, meaning formal meanings.",
                    "label": 0
                },
                {
                    "sent": "OK, so the semantics of Union graph patterns, a Union graph pattern GP one.",
                    "label": 1
                },
                {
                    "sent": "And I I tried to say before I have it here there is the same result as a set theoretic union of the of the result of grab graph patterns GP1 and GP2.",
                    "label": 1
                },
                {
                    "sent": "OK, so if I say you take this, the union of those kind of patterns, then the result is the Union of the of the evaluation on the same set of triples of this graph.",
                    "label": 0
                },
                {
                    "sent": "Patterns should be one in GP2.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "This is it.",
                    "label": 0
                }
            ]
        },
        "clip_32": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Sorry.",
                    "label": 0
                },
                {
                    "sent": "Sorry.",
                    "label": 0
                },
                {
                    "sent": "Properties of Union Union is a binary operator.",
                    "label": 0
                },
                {
                    "sent": "It is a commutative operator in the sense that GP one union GP2 is equivalent to GP2 Union GP one.",
                    "label": 1
                },
                {
                    "sent": "It is left left associative.",
                    "label": 0
                },
                {
                    "sent": "It has higher precedence than conjunction.",
                    "label": 1
                },
                {
                    "sent": "So first we do union and then we do conjunction.",
                    "label": 0
                },
                {
                    "sent": "And then so.",
                    "label": 0
                },
                {
                    "sent": "Then if I OK so this is left associative, so GP one Union GP, two young GP three is equivalent to GP one union GP2 Union GP three OK?",
                    "label": 0
                },
                {
                    "sent": "Anne.",
                    "label": 0
                },
                {
                    "sent": "OK, now this is with for Union Union is OK, is interesting at least.",
                    "label": 0
                },
                {
                    "sent": "Now optional graph patterns.",
                    "label": 0
                },
                {
                    "sent": "For what does it allow us?",
                    "label": 0
                },
                {
                    "sent": "Optionality is it's a very interesting operator in the sense that introduces negation in sparkle, and negation creates all sorts of problems when we're talking about provenance, where we're talking about.",
                    "label": 0
                },
                {
                    "sent": "Provenance is it's very interesting and.",
                    "label": 0
                },
                {
                    "sent": "Yeah, it's very difficult.",
                    "label": 0
                },
                {
                    "sent": "OK, so it allows the specification of optional parts of a query.",
                    "label": 0
                },
                {
                    "sent": "And why do we need that?",
                    "label": 0
                },
                {
                    "sent": "Why do we need optional?",
                    "label": 0
                },
                {
                    "sent": "Because regular and an end or complete information cannot be assumed.",
                    "label": 0
                },
                {
                    "sent": "Not in RDF graphs.",
                    "label": 0
                },
                {
                    "sent": "And this is the point of semantic web in the sense that we are not open world environment there there is information out there.",
                    "label": 0
                },
                {
                    "sent": "We don't exactly know where it is and how it is etc which form it is and how do we express that?",
                    "label": 0
                },
                {
                    "sent": "How does Sparkle allows us to express it expressed using the optional keywords?",
                    "label": 0
                },
                {
                    "sent": "So we're just writing.",
                    "label": 0
                },
                {
                    "sent": "Everyone would have gotten one option graph button too, so.",
                    "label": 0
                }
            ]
        },
        "clip_33": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So here it is an example, it says that.",
                    "label": 0
                },
                {
                    "sent": "You should return me all artists.",
                    "label": 0
                },
                {
                    "sent": "And their images, if they have.",
                    "label": 0
                },
                {
                    "sent": "If they don't have, you don't return them to me, OK?",
                    "label": 0
                },
                {
                    "sent": "If if here it was a dot sign, let's say if here was the dot, then I would I would.",
                    "label": 0
                },
                {
                    "sent": "I would get all albums and their images.",
                    "label": 0
                },
                {
                    "sent": "OK, if it was the union I would get their albums and images of whatever albums on whatever things I had.",
                    "label": 0
                },
                {
                    "sent": "OK. OK, so for the matching process, if the optional part is not matched then no solutions on this part are created by the solutions but but the solutions are computed and are not eliminated by the.",
                    "label": 1
                },
                {
                    "sent": "Sorry I'm not illuminated by the by the engine.",
                    "label": 0
                }
            ]
        },
        "clip_34": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "No optional graph patterns.",
                    "label": 0
                },
                {
                    "sent": "This optional graph pattern.",
                    "label": 0
                },
                {
                    "sent": "Now it returns all mappings independently whether date is bound to somebody.",
                    "label": 1
                },
                {
                    "sent": "OK, this is optionality here.",
                    "label": 0
                },
                {
                    "sent": "I said give me all albums and artists, and optionally optionally, if they have the date.",
                    "label": 0
                },
                {
                    "sent": "If the if the artists have a birthday to return this to me.",
                    "label": 0
                },
                {
                    "sent": "If they don't, no problem, just return me the album and their artists, OK?",
                    "label": 1
                },
                {
                    "sent": "Now this one says return all mappings where date is not bound.",
                    "label": 0
                },
                {
                    "sent": "These are two different things.",
                    "label": 0
                },
                {
                    "sent": "Here I I want that the bound means if I say bound variable means I require this variable has a value not bound.",
                    "label": 0
                },
                {
                    "sent": "It means that I do not want this variable to have a value.",
                    "label": 0
                },
                {
                    "sent": "So these two things are not equivalent.",
                    "label": 0
                },
                {
                    "sent": "10 minutes.",
                    "label": 0
                },
                {
                    "sent": "No, wait 10 minutes, forget it.",
                    "label": 0
                },
                {
                    "sent": "OK so.",
                    "label": 0
                },
                {
                    "sent": "Sorry so.",
                    "label": 0
                },
                {
                    "sent": "In that case, these two expressions are not equivalent and you understand why, right?",
                    "label": 0
                },
                {
                    "sent": "Yes.",
                    "label": 0
                },
                {
                    "sent": "Don't.",
                    "label": 0
                },
                {
                    "sent": "Well, yes, if this artist has a date then don't return this this artist.",
                    "label": 0
                },
                {
                    "sent": "To me that's what it says OK?",
                    "label": 0
                }
            ]
        },
        "clip_35": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so now let's see how optional works.",
                    "label": 0
                },
                {
                    "sent": "So here is my.",
                    "label": 0
                },
                {
                    "sent": "Here is my set of triples.",
                    "label": 0
                },
                {
                    "sent": "OK, fine then here is my query.",
                    "label": 0
                },
                {
                    "sent": "My query says give me all albums and their artists an optionally the match of the album OK.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "So here are my my my set of mappings again first of all and I should have said that from the beginning my set of mappings.",
                    "label": 0
                },
                {
                    "sent": "The attributes that I have are all the attributes in the graph patterns.",
                    "label": 0
                },
                {
                    "sent": "So I take everything and then I just put it in a table.",
                    "label": 0
                },
                {
                    "sent": "These are this is the tabular representation of a mapping.",
                    "label": 0
                },
                {
                    "sent": "It says take all the attributes that sorry all the variables that I have in my set of graph patterns and then produce a tabular representation for those.",
                    "label": 0
                },
                {
                    "sent": "OK, so now let's say, let's see.",
                    "label": 0
                },
                {
                    "sent": "The first thing I'm going to do is that I'm going to evaluate the first, the first triple button, album artists, artists.",
                    "label": 0
                },
                {
                    "sent": "So here is what I what I have OK. Now then, what I'm going to do is that I'm going to have.",
                    "label": 0
                },
                {
                    "sent": "Sorry.",
                    "label": 0
                },
                {
                    "sent": "Then The thing is also that for sorry.",
                    "label": 0
                },
                {
                    "sent": "Do I have something for this for Beatles as an artist?",
                    "label": 0
                },
                {
                    "sent": "No, sorry though.",
                    "label": 0
                },
                {
                    "sent": "Do I have something for this album as an with an image?",
                    "label": 0
                },
                {
                    "sent": "Do I have it or not?",
                    "label": 0
                },
                {
                    "sent": "No, but still I don't have this image, so I'm going to return it because it was optional image, OK Now.",
                    "label": 0
                },
                {
                    "sent": "Now for rain dogs.",
                    "label": 0
                },
                {
                    "sent": "Tom Waits.",
                    "label": 0
                },
                {
                    "sent": "I have that I have the image of the of the album.",
                    "label": 0
                },
                {
                    "sent": "So album artist I have it where this album artist I have some weights and then also I have a.",
                    "label": 0
                },
                {
                    "sent": "For image this one that I'm going to return it here so it was optional, but I have it so I'm returning it, so I'm interpreting it as a joint.",
                    "label": 0
                },
                {
                    "sent": "OK, yes.",
                    "label": 0
                },
                {
                    "sent": "Part what do you?",
                    "label": 0
                },
                {
                    "sent": "What do you mean?",
                    "label": 0
                },
                {
                    "sent": "Connected using artist.",
                    "label": 0
                },
                {
                    "sent": "Why didn't you just return?",
                    "label": 0
                },
                {
                    "sent": "The tooltip is from the beginning that mapping from the beginning you can return.",
                    "label": 0
                },
                {
                    "sent": "I just did it.",
                    "label": 0
                },
                {
                    "sent": "Try to do it step by step.",
                    "label": 0
                },
                {
                    "sent": "You can return it as you like, yeah?",
                    "label": 0
                },
                {
                    "sent": "No, it can get evaluated in a totally different way.",
                    "label": 0
                },
                {
                    "sent": "This is the each engine.",
                    "label": 0
                },
                {
                    "sent": "Each engine has its own way of interpreting and evaluating things and its own way of the plans.",
                    "label": 0
                },
                {
                    "sent": "So some engines might do and completely different thing from what we are doing right now.",
                    "label": 0
                },
                {
                    "sent": "In order to explain you know how I mean to explain how the matching is done.",
                    "label": 0
                },
                {
                    "sent": "OK, yeah, you just.",
                    "label": 0
                },
                {
                    "sent": "I just want you to understand how what it means.",
                    "label": 0
                },
                {
                    "sent": "It means here it means evaluate the 1st.",
                    "label": 0
                },
                {
                    "sent": "No.",
                    "label": 0
                },
                {
                    "sent": "Try to evaluate evaluate both OK and if you find any much there then return this.",
                    "label": 0
                },
                {
                    "sent": "If you don't return again.",
                    "label": 0
                },
                {
                    "sent": "OK, so this is the thing.",
                    "label": 0
                },
                {
                    "sent": "This is why it's declarative.",
                    "label": 0
                },
                {
                    "sent": "Query language is the clarit when it's not functional and they said I'm not telling you how to do these things, I'm just telling you what I want from these things.",
                    "label": 0
                },
                {
                    "sent": "OK, and if you see how the the algebraic expression it is, because there is an algebra between this behind this language, it says you have first to do the join and then difference remove the union OK, then remove the union of the two patterns.",
                    "label": 0
                },
                {
                    "sent": "But first do the join.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_36": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So the properties of optional is that this binary operator it is left associative and.",
                    "label": 1
                },
                {
                    "sent": "Is left associative, associative and it is also so if you have G1 optional GB.",
                    "label": 0
                },
                {
                    "sent": "Two optional GP 3, then you can have.",
                    "label": 1
                },
                {
                    "sent": "First of all, you do an option run between GP1 and GP2 and then the option between GPC OK. No, if you have GP GP, one optional GP2 optional GP three, this is not equivalent to that right?",
                    "label": 0
                },
                {
                    "sent": "And I think you understand why.",
                    "label": 0
                },
                {
                    "sent": "Huh?",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 1
                },
                {
                    "sent": "It is non non not commutative.",
                    "label": 0
                },
                {
                    "sent": "For sure, we cannot say.",
                    "label": 0
                },
                {
                    "sent": "We cannot commute GP.",
                    "label": 0
                },
                {
                    "sent": "One optional GP2.",
                    "label": 0
                },
                {
                    "sent": "I mean it's a different query and it's completely different query.",
                    "label": 0
                },
                {
                    "sent": "And finally if I have.",
                    "label": 0
                },
                {
                    "sent": "Sometimes people write those awkward expressions optional GP, one it means empty graph.",
                    "label": 0
                },
                {
                    "sent": "Optional GP one OK.",
                    "label": 0
                },
                {
                    "sent": "Yes.",
                    "label": 0
                },
                {
                    "sent": "And then so yeah.",
                    "label": 1
                },
                {
                    "sent": "And then it is higher precedence than conjunction.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "So now.",
                    "label": 0
                }
            ]
        },
        "clip_37": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Optional and filters.",
                    "label": 0
                },
                {
                    "sent": "I'm not even.",
                    "label": 0
                },
                {
                    "sent": "I have my heart, my presentation.",
                    "label": 0
                },
                {
                    "sent": "OK, so so here.",
                    "label": 0
                },
                {
                    "sent": "Here it is.",
                    "label": 0
                },
                {
                    "sent": "Optional and filters.",
                    "label": 0
                },
                {
                    "sent": "Here is my query I said.",
                    "label": 0
                },
                {
                    "sent": "Find me I'll be an artist and then optional.",
                    "label": 0
                },
                {
                    "sent": "I want the albums whose runtime is greater than 7020.",
                    "label": 0
                },
                {
                    "sent": "OK, so here it is my my my mapping results.",
                    "label": 0
                },
                {
                    "sent": "I'm going to have The Beatles good and then The Beatles.",
                    "label": 0
                },
                {
                    "sent": "They have a runtime 1723 OK and then what I have I have rain dogs I have good day sunshine or I have rain dogs.",
                    "label": 0
                },
                {
                    "sent": "the DP Pedia is I have Tom Waits.",
                    "label": 0
                },
                {
                    "sent": "And then what this some weights?",
                    "label": 0
                },
                {
                    "sent": "I don't have a runtime and it's good because it's optional, right?",
                    "label": 0
                },
                {
                    "sent": "Why don't I don't have good day sunshine becausw?",
                    "label": 0
                },
                {
                    "sent": "It's not greater than 70.",
                    "label": 0
                },
                {
                    "sent": "Now 7020 it's just 1000, so I have eliminated that from scratch.",
                    "label": 0
                },
                {
                    "sent": "Do you agree with it or not?",
                    "label": 0
                },
                {
                    "sent": "Or was it too fast?",
                    "label": 0
                },
                {
                    "sent": "What's the first?",
                    "label": 0
                },
                {
                    "sent": "OK, so here it is.",
                    "label": 0
                },
                {
                    "sent": "So you take the first, the first triple button, which is you know above listing you said album.",
                    "label": 0
                },
                {
                    "sent": "I want all the albums and their artists, OK?",
                    "label": 0
                },
                {
                    "sent": "And optionally I want for those albums, and you know, because this is the shared variable, it is the common variable.",
                    "label": 0
                },
                {
                    "sent": "This is where they they do connect.",
                    "label": 0
                },
                {
                    "sent": "And I want this album the runtime of those albums albums to be more than higher than 7020.",
                    "label": 0
                },
                {
                    "sent": "OK, so I'm I'm just saying OK, fine, so here it is.",
                    "label": 0
                },
                {
                    "sent": "I have an album and I have an artist, The Beatles.",
                    "label": 0
                },
                {
                    "sent": "And then I'm going to find out whether for this album.",
                    "label": 0
                },
                {
                    "sent": "I have a runtime.",
                    "label": 0
                },
                {
                    "sent": "OK, I have a runtime yes 1723 it is higher than 7020 so it's fine.",
                    "label": 0
                },
                {
                    "sent": "Now, what about rain dogs?",
                    "label": 0
                },
                {
                    "sent": "Rain dogs?",
                    "label": 0
                },
                {
                    "sent": "Yes, I have another.",
                    "label": 0
                },
                {
                    "sent": "I have an artist and then do I have a runtime for rain dogs?",
                    "label": 0
                },
                {
                    "sent": "No, I don't, but in any case it's optional.",
                    "label": 0
                },
                {
                    "sent": "Some fine, right?",
                    "label": 0
                },
                {
                    "sent": "No, another good day sunshine you have on the pedia.",
                    "label": 0
                },
                {
                    "sent": "The Beatles.",
                    "label": 0
                },
                {
                    "sent": "I also have a runtime for this, but actually it it breaks down my condition.",
                    "label": 0
                },
                {
                    "sent": "So I'm not going to include it if it includes if if if I have an optional an I have a filter in the optional.",
                    "label": 0
                },
                {
                    "sent": "It's not verified then I just reject it, right?",
                    "label": 0
                },
                {
                    "sent": "It does not satisfy my my filter condition.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "Yes.",
                    "label": 0
                },
                {
                    "sent": "Yeah, of course, of course it's a different thing.",
                    "label": 0
                },
                {
                    "sent": "Said completely different query.",
                    "label": 0
                },
                {
                    "sent": "Yeah, because because now sorry, because you see the filter opens up here and ends here.",
                    "label": 0
                },
                {
                    "sent": "Right, so everything is in the filter.",
                    "label": 0
                },
                {
                    "sent": "So it's an expression in the filter.",
                    "label": 0
                },
                {
                    "sent": "If I take the filter out, then the filter is actually it's going to be on on the artist.",
                    "label": 0
                },
                {
                    "sent": "Right, and again it's not satisfied as well, so it's not.",
                    "label": 0
                },
                {
                    "sent": "It's not going to be accepted as well.",
                    "label": 0
                },
                {
                    "sent": "Yeah then good day sunshine with Bing.",
                    "label": 0
                },
                {
                    "sent": "Because it doesn't have a filter.",
                    "label": 0
                },
                {
                    "sent": "No, sorry it has a filter.",
                    "label": 0
                },
                {
                    "sent": "It has a filter.",
                    "label": 0
                },
                {
                    "sent": "Here's a filter.",
                    "label": 0
                },
                {
                    "sent": "Yeah, it should be.",
                    "label": 0
                },
                {
                    "sent": "Yeah it should be.",
                    "label": 0
                },
                {
                    "sent": "It has a filter.",
                    "label": 0
                },
                {
                    "sent": "Sorry it has a hard time.",
                    "label": 0
                },
                {
                    "sent": "Sorry, OK, so actually the optional pattern does not generate generate any bindings when either there is no DB pedia runtime property.",
                    "label": 1
                },
                {
                    "sent": "That's what it doesn't generate.",
                    "label": 1
                },
                {
                    "sent": "There is a deep edial our runtime property, but the constraint is not satisfied.",
                    "label": 0
                },
                {
                    "sent": "Then if this was the case for good day sunshine, right?",
                    "label": 0
                },
                {
                    "sent": "It has a runtime property, but the constraint is not satisfied, so I'm just throwing it out.",
                    "label": 0
                }
            ]
        },
        "clip_38": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, no multiple optionals.",
                    "label": 0
                },
                {
                    "sent": "Um?",
                    "label": 0
                },
                {
                    "sent": "OK, so in multiple what do I do in multiple options here?",
                    "label": 0
                },
                {
                    "sent": "I have again the artist and then I have an optional optional runtime and then an optional image.",
                    "label": 0
                },
                {
                    "sent": "So what do I do?",
                    "label": 0
                },
                {
                    "sent": "The first thing I do is that I'm I'm going to find out.",
                    "label": 0
                },
                {
                    "sent": "I'm going to get album The Beatles good.",
                    "label": 0
                },
                {
                    "sent": "I'm going to find Iran time 1723 fine and then do I have anything on any much for help?",
                    "label": 0
                },
                {
                    "sent": "No I don't have.",
                    "label": 0
                },
                {
                    "sent": "So here it is my my first.",
                    "label": 0
                },
                {
                    "sent": "My first binding OK. No, let's go now to the second one.",
                    "label": 0
                },
                {
                    "sent": "Rain dogs OK, I have Tom Waits good now I need something about Tom Waits which is does it have an optional no does have?",
                    "label": 0
                },
                {
                    "sent": "Rain dogs Tom Waits.",
                    "label": 0
                },
                {
                    "sent": "It doesn't have any much yes, so it has any much.",
                    "label": 0
                },
                {
                    "sent": "It doesn't have a runtime.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "It's OK, yeah?",
                    "label": 0
                },
                {
                    "sent": "Yeah, I mean I'm less than half my slides.",
                    "label": 0
                },
                {
                    "sent": "So I'm a problem there.",
                    "label": 0
                },
                {
                    "sent": "Let me OK.",
                    "label": 0
                },
                {
                    "sent": "I need some.",
                    "label": 0
                },
                {
                    "sent": "I need another 15 minutes to wrap it up.",
                    "label": 0
                },
                {
                    "sent": "Please 15 yeah OK then then I'm going to be fast, OK?",
                    "label": 0
                },
                {
                    "sent": "OK, so then at the end I have a bone machines bone machine is here, it is here.",
                    "label": 0
                },
                {
                    "sent": "Here's my artist, Tom Waits.",
                    "label": 0
                },
                {
                    "sent": "Do I have anything for for bone Machine?",
                    "label": 0
                },
                {
                    "sent": "No, I don't have anything, but still I don't care because.",
                    "label": 0
                },
                {
                    "sent": "Image and runtime are optional fields, so I don't care if I don't have anything for Tom Waits.",
                    "label": 0
                }
            ]
        },
        "clip_39": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So now combining Union and optional I have general rules, optional refers exactly to one group, group to pattern to the right.",
                    "label": 1
                },
                {
                    "sent": "Optional and union refer to all expressions to their left.",
                    "label": 0
                },
                {
                    "sent": "Since both operators are left associative and union optional have the same precedence.",
                    "label": 1
                },
                {
                    "sent": "So if I write an expression like this, then this expression is equivalent to the expression here.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "So here if I have this expression, then I'm just going to Union 1st and then do the optional at the end.",
                    "label": 0
                },
                {
                    "sent": "OK, these are the general rules for the option.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_40": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Now what happens with Union in conjunction?",
                    "label": 0
                },
                {
                    "sent": "Then in union conjunction, this is equivalent to writing something like this.",
                    "label": 0
                },
                {
                    "sent": "So for instance, I'm going to have.",
                    "label": 0
                },
                {
                    "sent": "So I have this huge union and then I'm going to have first.",
                    "label": 0
                },
                {
                    "sent": "The green one stops there and then the blue one stops.",
                    "label": 0
                },
                {
                    "sent": "There is in the sense that I have first or union and then.",
                    "label": 0
                },
                {
                    "sent": "First the Union and then the conjunction with the end.",
                    "label": 0
                }
            ]
        },
        "clip_41": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, so very fast.",
                    "label": 0
                },
                {
                    "sent": "Now we are at the sparkle query components.",
                    "label": 1
                },
                {
                    "sent": "So there is this prologue where now you sit down and your your virtuoso open point Open Access point you write your sparkle query.",
                    "label": 0
                },
                {
                    "sent": "You have to write your prefix which is.",
                    "label": 1
                },
                {
                    "sent": "In the prefix you say, what are my labels for?",
                    "label": 0
                },
                {
                    "sent": "For your eyes, right?",
                    "label": 0
                },
                {
                    "sent": "The PDF for the PDL?",
                    "label": 0
                },
                {
                    "sent": "Then you specify your prefixes and then after that you.",
                    "label": 0
                },
                {
                    "sent": "Syntax of the query is slightly different from turtle syntax.",
                    "label": 1
                },
                {
                    "sent": "It is no.",
                    "label": 0
                },
                {
                    "sent": "There is no.",
                    "label": 0
                },
                {
                    "sent": "Right and used as a separator for the for the syntax.",
                    "label": 0
                }
            ]
        },
        "clip_42": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Now The thing is that we have different query forms.",
                    "label": 1
                },
                {
                    "sent": "We have query form select task describen construct.",
                    "label": 0
                },
                {
                    "sent": "For instance you have for instance here in this query I write select artist genre.",
                    "label": 1
                },
                {
                    "sent": "Here this one is one of the many times you have seen this group graph pattern.",
                    "label": 1
                },
                {
                    "sent": "What what query engine does is that if it sees this the where clause?",
                    "label": 0
                },
                {
                    "sent": "Evaluates it and then based on the select it does other things like order by.",
                    "label": 0
                },
                {
                    "sent": "Having by etc etc.",
                    "label": 0
                },
                {
                    "sent": "And then at the end it will just select.",
                    "label": 0
                },
                {
                    "sent": "It will pick up the the mappings from for the variables that you see there.",
                    "label": 0
                }
            ]
        },
        "clip_43": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, then you can also have from from from from name.",
                    "label": 0
                },
                {
                    "sent": "It is an optional close when you say, for instance, that.",
                    "label": 0
                },
                {
                    "sent": "You select from this name graph.",
                    "label": 0
                },
                {
                    "sent": "If you haven't many name graphs in your datasets, then you need to point to point to say by saying that this is the name graph that I'm interested in, or from a name.",
                    "label": 0
                },
                {
                    "sent": "If this is the name graph I'm interested in.",
                    "label": 0
                },
                {
                    "sent": "If you have many named graphs in your.",
                    "label": 0
                }
            ]
        },
        "clip_44": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "In your thing.",
                    "label": 0
                },
                {
                    "sent": "OK, now the where is that defines the buttons to match against the data.",
                    "label": 1
                },
                {
                    "sent": "OK and then this is the computation of the mappings and bindings that happens.",
                    "label": 0
                },
                {
                    "sent": "So this is the whole discussion before was about this part.",
                    "label": 0
                },
                {
                    "sent": "The where clause.",
                    "label": 0
                },
                {
                    "sent": "Once you understand this they were close and then you understand how the select clause or the query clause goes and picks up the variables and you have.",
                    "label": 0
                },
                {
                    "sent": "Then you have it.",
                    "label": 0
                },
                {
                    "sent": "OK this is the main thing that you need to know.",
                    "label": 0
                }
            ]
        },
        "clip_45": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And then you also have solution modifiers that I used to modify the result set.",
                    "label": 1
                },
                {
                    "sent": "You can have order by limit offset to organize the results you have group by to combine the results and distinct to eliminate duplicates.",
                    "label": 1
                },
                {
                    "sent": "This is very similar to to the relational.",
                    "label": 0
                }
            ]
        },
        "clip_46": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Next no, the query forms very fast for different kinds.",
                    "label": 0
                },
                {
                    "sent": "The select that returns actually in ordered multiset of variable bindings.",
                    "label": 0
                },
                {
                    "sent": "The ask that asks whether a graph pattern has at least one solution with returns the Boolean OK and the constructor returns a new RDF graph and this is very helpful when you're going to build an application that takes has an RDF graph and then it's going to select specific kinds of.",
                    "label": 1
                },
                {
                    "sent": "If you want to create a sub graph OK, then you are going to use the construct clause.",
                    "label": 1
                },
                {
                    "sent": "And then the described that returns an RDF graph containing the RDF data inbound.",
                    "label": 0
                },
                {
                    "sent": "This required resource.",
                    "label": 0
                },
                {
                    "sent": "I'm.",
                    "label": 0
                },
                {
                    "sent": "OK, so.",
                    "label": 0
                },
                {
                    "sent": "Well the question OK, the construct it returns a new RDF graph.",
                    "label": 0
                },
                {
                    "sent": "That means that it does not carry the does not carry the identifiers that the RBF nodes have.",
                    "label": 0
                },
                {
                    "sent": "Just construct something you said construct it can well the.",
                    "label": 0
                },
                {
                    "sent": "The pattern that he can have the construct close can be arbitrarily long, so you can have construct and then big group graph pattern.",
                    "label": 0
                },
                {
                    "sent": "So you construct.",
                    "label": 0
                },
                {
                    "sent": "The the trunk, the duration of the drug, the album that it is in when the the The whole graph.",
                    "label": 0
                },
                {
                    "sent": "The initial RDF graph can be the album all the tracks, the duration of all the album and then the duration of the tracks etc etc.",
                    "label": 0
                },
                {
                    "sent": "So you can reorganize your graph as you like.",
                    "label": 0
                },
                {
                    "sent": "This is the construct close.",
                    "label": 0
                }
            ]
        },
        "clip_47": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Anne.",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "Undescribed describe is aren't.",
                    "label": 0
                },
                {
                    "sent": "You give one, you are you are I, and it just returns the neighborhood of those you are I.",
                    "label": 0
                },
                {
                    "sent": "This is very simple.",
                    "label": 0
                },
                {
                    "sent": "It's one, yeah, right?",
                    "label": 0
                },
                {
                    "sent": "That's what you said.",
                    "label": 0
                },
                {
                    "sent": "Describe I, on the other hand, you can also say describen.",
                    "label": 0
                },
                {
                    "sent": "Then you give a sparkle query, but then it should return only one UI.",
                    "label": 0
                },
                {
                    "sent": "OK, so this is it basically, OK?",
                    "label": 0
                },
                {
                    "sent": "No, the variables in the select rows are returned along with their values according to the computed binding.",
                    "label": 1
                },
                {
                    "sent": "So this is what we.",
                    "label": 0
                },
                {
                    "sent": "This is what we said before.",
                    "label": 1
                },
                {
                    "sent": "So for instance this is select the artist that made the album identified by you.",
                    "label": 0
                },
                {
                    "sent": "I help and we are this music kind so this is this is the group graph pattern we're discussing when you saw in the many examples and then you have selected artists and gender where you can just, you know.",
                    "label": 0
                },
                {
                    "sent": "You get you get back the the the variables that you need.",
                    "label": 0
                },
                {
                    "sent": "You can also have.",
                    "label": 0
                },
                {
                    "sent": "Also, the only the artist return the artist OK just needs that.",
                    "label": 0
                },
                {
                    "sent": "Just return the artist John here it means that it should exist OK.",
                    "label": 0
                },
                {
                    "sent": "But gender as a value should exist there, but I need that this variable is there.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_48": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So, um.",
                    "label": 0
                }
            ]
        },
        "clip_49": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So there are also the solution modifyers.",
                    "label": 0
                },
                {
                    "sent": "For instance return the name of the album of The Beatles that have at least two different tracks.",
                    "label": 1
                },
                {
                    "sent": "So if I have the the solution modifyers here, I have this track one and track two and track one should be different than track two.",
                    "label": 0
                },
                {
                    "sent": "This is a filter between the variables.",
                    "label": 0
                },
                {
                    "sent": "That means that the two variables should map to different resources or different values.",
                    "label": 0
                },
                {
                    "sent": "OK, and then they reduced.",
                    "label": 0
                },
                {
                    "sent": "I remove, I return all the all the names of the album somewhere in the distinct I'll remove.",
                    "label": 0
                },
                {
                    "sent": "I returned just.",
                    "label": 0
                },
                {
                    "sent": "I eliminate the duplicates.",
                    "label": 0
                },
                {
                    "sent": "I don't know to return everything.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_50": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Then you have a good against there.",
                    "label": 0
                },
                {
                    "sent": "I'm going to guess that specify expressions on other groups of solutions, so here.",
                    "label": 1
                },
                {
                    "sent": "So for example, I want the average value of a set of values in variable takes or.",
                    "label": 1
                },
                {
                    "sent": "I want the average temperature.",
                    "label": 0
                },
                {
                    "sent": "Or I want the average or the maximum count of.",
                    "label": 0
                },
                {
                    "sent": "Prices this person gained over the period of six years, for instance.",
                    "label": 1
                },
                {
                    "sent": "OK, so I'm going to get defined in Sparkle 1.1 or count sum min Max, average group concat and sample.",
                    "label": 0
                }
            ]
        },
        "clip_51": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK. And so, for instance, here are a couple of well.",
                    "label": 0
                },
                {
                    "sent": "Queries with the with this.",
                    "label": 0
                },
                {
                    "sent": "With this aggregates select count album's albums.",
                    "label": 0
                },
                {
                    "sent": "So here again select for instance, I can select an album and then I can.",
                    "label": 0
                },
                {
                    "sent": "This is an expression we use also again loading relational databases where you you select this account, let's say 10 and then you return the variable albums and then number 10 below just to have one point of reference for this.",
                    "label": 0
                },
                {
                    "sent": "This information and then also you can return the number of tracks per album recorded by The Beatles, where you can group by album and then you can throw count the track number for this for this album so you can do the grouping and then you can return the track.",
                    "label": 1
                }
            ]
        },
        "clip_52": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so now since they're running after us.",
                    "label": 0
                },
                {
                    "sent": "OK, so here it is, I'm done.",
                    "label": 0
                }
            ]
        },
        "clip_53": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "I'm done here this this OK?",
                    "label": 0
                },
                {
                    "sent": "I'm OK, so this is the construct GP one where GP two OK. Well again is the same kind of well.",
                    "label": 0
                },
                {
                    "sent": "What we said before instead of group graph pattern.",
                    "label": 0
                },
                {
                    "sent": "If there is a new graph specified by an optional pattern, and if the button is missing, then the graph graph pattern in the where clause is considered.",
                    "label": 1
                },
                {
                    "sent": "Buttons uses variable sat in the queries were closed and the graph is obtained from the variable bindings in the queries were close.",
                    "label": 0
                }
            ]
        },
        "clip_54": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So for instance, here very quickly.",
                    "label": 0
                },
                {
                    "sent": "So it says return graph containing only formation about The Beatles except typing except the information of type.",
                    "label": 1
                },
                {
                    "sent": "So for instance I I want everything about The Beatles where everything about the biggest except the fact that they are group.",
                    "label": 0
                },
                {
                    "sent": "There are music and music group about the fact that one of the most well on all the other, all the properties that are not.",
                    "label": 0
                },
                {
                    "sent": "We do not have predicate type there.",
                    "label": 0
                },
                {
                    "sent": "So what I'm going to return?",
                    "label": 0
                },
                {
                    "sent": "Is I'm going to return which ones on?",
                    "label": 0
                },
                {
                    "sent": "Everything, all the triples here.",
                    "label": 0
                },
                {
                    "sent": "OK now The thing is that in this new graph.",
                    "label": 0
                },
                {
                    "sent": "In this new graph, the this this information, they have the new identifiers.",
                    "label": 0
                },
                {
                    "sent": "They're not the old identifiers, they are new.",
                    "label": 0
                },
                {
                    "sent": "This is why they call it a new graph, OK?",
                    "label": 0
                },
                {
                    "sent": "OK, so I'm done well.",
                    "label": 0
                },
                {
                    "sent": "No.",
                    "label": 0
                },
                {
                    "sent": "No, I'm in my head.",
                    "label": 0
                },
                {
                    "sent": "OK. Yeah.",
                    "label": 0
                }
            ]
        },
        "clip_55": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, so here it is 62.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "I think.",
                    "label": 0
                },
                {
                    "sent": "Well, here also you can create the interesting thing about sparkle and that's Sparkle 1.1 and that's why I mean it's so hard to understand it and so hard to write queries.",
                    "label": 0
                },
                {
                    "sent": "And This is why many applications are writing queries now.",
                    "label": 0
                },
                {
                    "sent": "Instead of ask people is that you can have all sorts of nested queries there.",
                    "label": 0
                },
                {
                    "sent": "So for instance you can.",
                    "label": 0
                },
                {
                    "sent": "You can combine the construct query with aggregate values, subquery and.",
                    "label": 1
                },
                {
                    "sent": "In order to do that, then you have to create a subquery inside the where clause.",
                    "label": 0
                },
                {
                    "sent": "So for here for instance here, I can say that you know something, select, construct an album where the music Ontology with a duration and this album duration.",
                    "label": 0
                },
                {
                    "sent": "And then I have where the album.",
                    "label": 0
                },
                {
                    "sent": "Where?",
                    "label": 1
                },
                {
                    "sent": "When?",
                    "label": 0
                },
                {
                    "sent": "Where, what, where you need to find all the albums are by The Beatles.",
                    "label": 0
                },
                {
                    "sent": "They they have been organized albums of The Beatles by Sorry by album, by album, and then they're having the the summary of their track duration should be more than XY.",
                    "label": 0
                },
                {
                    "sent": "I don't know how many 6016.",
                    "label": 0
                },
                {
                    "sent": "It's an hour 600 seconds.",
                    "label": 0
                },
                {
                    "sent": "Yeah, OK, OK 60 minutes so then actually you construct this.",
                    "label": 0
                },
                {
                    "sent": "This tablet this sorry this triple nothing.",
                    "label": 0
                },
                {
                    "sent": "Established this triple by saying which is the album and which is duration of the ontology given that.",
                    "label": 0
                },
                {
                    "sent": "The takes this.",
                    "label": 0
                },
                {
                    "sent": "It takes the album duration select close so.",
                    "label": 0
                },
                {
                    "sent": "This is what I had to say very fast.",
                    "label": 0
                },
                {
                    "sent": "I think next year should be 1 1/2 hour for at least force.",
                    "label": 0
                },
                {
                    "sent": "Punctual I think no.",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "And so here it is my from me.",
                    "label": 0
                },
                {
                    "sent": "If you need anything please please you know come and yes.",
                    "label": 0
                }
            ]
        }
    }
}