{
    "id": "hpqf3ovja7no3vj674co5mqzodx2dunw",
    "title": "Overview of Automated Reasoning",
    "info": {
        "author": [
            "Peter Baumgartner, Australian National University"
        ],
        "published": "April 1, 2009",
        "recorded": "January 2009",
        "category": [
            "Top->Computer Science->Logic"
        ]
    },
    "url": "http://videolectures.net/ssll09_baumgartner_oar/",
    "segmentation": [
        [
            "Is only by example, so to speak."
        ],
        [
            "To provide some insights how the methods I will be talking about work?",
            "I.",
            "So the idea is to be, so to speak theoretical innocence, but not too technical.",
            "So really, to get the methods of the methods across the ideas across.",
            "My plan is to cover some standard techniques that you need, which are listed here on the second part of the slide, so it's a lot about normal forms of formulas.",
            "It's about Herbrand interpretations, it's about the resolution calculus, which is the most important calculus for doing automated reasoning, and the concept of unification.",
            "This brings us into 19 sixty 70s, but for more recent developments into 1980s or 90s, even.",
            "And then I have something on instance based methods, which is a relatively new.",
            "Developmenting automated theorem proving it's an alternative to these resolution methods to prove something without differently.",
            "There are reps 10 years old or 15 years at most.",
            "Then I have something about model computation, which is in a sense we opposite of theorem proving, and then I have a hot topic for several years now, which is theory reasoning in particular in a specific direction called satisfiability modulo theories.",
            "Which is very relevant.",
            "For instance for program verification."
        ],
        [
            "OK so I have think two parts in this lecture, first part.",
            "Is very short actually.",
            "Well, second part is much longer, So what is automated for improving?",
            "Well, there are many ways to exploit."
        ],
        [
            "Explain that and my favorite way to explain that is to explain it in relation to.",
            "Well, we all used to do calculation.",
            "Say that we have some term 2 to the power of two or three to four of two, and so on, and we can of course compute values with pocket calculators or things like that.",
            "This is easy, so which is not theorem proving OK?",
            "Way too easy enough in innocence.",
            "On the next level of difficulty of theoretical difficulties, so to speak, is what is known as constraint solving, which is a whole research area and topic of its own.",
            "Of course.",
            "Now to generalize the calculation from a birthday or constraint solving, you could say now the problem is X X ^2 = A where X is taken from a interval when 2P, let's say so.",
            "It's it's generic problem specification, but in order to do constraint solving.",
            "You not only give the model.",
            "The problem here, but you also have to be very specific, so you have to give a specific problem instance and this is done by fixing the values for the parameters and variables like X over ones that are searched for.",
            "OK, So what challenges to find values for variables such with X such But the problem instance is satisfied.",
            "Well, how is that in comparison with?",
            "Difficult is often exponential.",
            "Typically, constraint programming is about NP complete search problems, but it is still decidable and purposefully so because you still want to get an answer a positive or negative answer from the machine.",
            "So yes or no, and how this is achieved by restriction to finite domains.",
            "So if you fix the BVX is from a finite domain one 2P.",
            "And of course you can enumerate all the values.",
            "And just check the formulas for all possible instantiation's.",
            "Now, by contrast, 1st order for improving goes one level beyond that, so to speak.",
            "In that it does not work with the instance automated theorem.",
            "Proving is about very general statements if you will.",
            "So given is just for problem specification like the one that is given here and you just ask is it satisfy oball, is it unsatisfiable or is it valid?",
            "So for raising bees you could say our values for the SNP's.",
            "So what this is satisfy but without giving these values apriori?",
            "Or you could ask for all values of A&B, is there such a thing?",
            "And this is of course often very difficult to.",
            "To various incompleteness theorems.",
            "OK so but this is where first order theorem proving kicks in.",
            "Given a problem without the instance, again from the viewpoint of constraint satisfaction here and analyze such a problem specification for its logical properties.",
            "Of course you could do that for other things as well.",
            "You could have a logical specification of a program, so to speak, in order to.",
            "Logically underlies the properties of a program, whether it.",
            "Samsung some heap cells are references, but that shouldn't or if array are out of bounds or things like that, so let's."
        ],
        [
            "Realm of automated theorem proving.",
            "So here, if a very concrete example of logical analysis, again for the constraint.",
            "In the constraint satisfaction.",
            "World.",
            "This is a map, and anyways it's pretty easy to guess where I come from, so this is of course.",
            "But Germany map here.",
            "And of course it can be colored before colors because it has been proven.",
            "But another task is another question is to ask, can it be colored using only three colors where of course the neighboring countries are colored differently, so this is again an NP complete.",
            "Search problem."
        ],
        [
            "And before we can analyze it, we need first to formalize this, formalize it.",
            "So a concrete problem instance could of course be modeled as a graph here, but just putting edges between the neighboring countries here and the problem specification informally says OK, every node here should receive a color red, green or blue and adjacent nodes shall not receive the same color.",
            "No."
        ],
        [
            "The role of theorem proving here.",
            "Let's first formalize this in first order logic.",
            "So every node has at least one color.",
            "We can say that for all red of nor green nor blue event with the intended semantics and the variables range over the nodes.",
            "Then you say that every node has at most one color which is not excluded by this formula.",
            "So node could receive multiple color.",
            "Service has to be excluded as L, for instance if it's red, then it's not green and so on.",
            "And this suffices to.",
            "Exclude all cases where a node would receive in a model more than one color.",
            "And finally, of course, the restriction on the graph that adjacent nodes have different color.",
            "So whenever two nodes are in the edge, relation came in.",
            "When it's not the case that both are at mnar both rate.",
            "It's not the case that both are green and similarly for blue.",
            "Magic."
        ],
        [
            "OK, now that we have a problem and an instance, possibly we can of course solve it with a constraint solver.",
            "So let the constraint solver find the values for the variables such that the problem instance is satisfied.",
            "So we're all these variables are inside of constraints are satisfied, the variables are set, our colors of nodes in the graph of values are red, green or blue, and the problem instances for specific graph to be colored.",
            "No, we don't necessarily need a constraint solver fact.",
            "We can readily ship this problem to theorem prover.",
            "And we can do that."
        ],
        [
            "I can show you.",
            "Hobbies may look like.",
            "Chanel?",
            "K. Sophie are improving is a lot about very practical things.",
            "It's a lot about playing around with fear improvers and coming up with the right specifications and things like that and trying things out.",
            "That's one of the things that would like to convey here.",
            "OK so here is some machine readable syntax for 1st order logic and it's just used here to encode the problem performance F shown you in some different syntax, but it's essentially the same or just not use not necessary to go into details here.",
            "And also one has to save what edges there are.",
            "So this is the problem instance.",
            "Quite a number of them.",
            "Now I run some theorem prover on that.",
            "In this case is our own, but which does not really matter.",
            "Oops.",
            "Sex.",
            "OK, that was very quick.",
            "In general it's not that quick, but this time it was very quick.",
            "And it's actually quite night, quite quite nice.",
            "Anne.",
            "If you have a theorem prover that can produce models or that can produce useful answers in terms of your original task, you want you to solve, and this prove improver can do it so it outputs at the end the coloring of nodes that were given in the problem specification.",
            "Yeah.",
            "OK, so originally this was a satisfying instance.",
            "An unsatisfiable one by recommended out a lot of nodes, so I made the graph much smaller.",
            "And if I let the prover run.",
            "On the bigger instance.",
            "It takes a little longer.",
            "And it just.",
            "Produces a dump of it's run, so it explains us what it is doing, but not really in a very useful way, I would say.",
            "And after awhile it comes to a solution and finds out.",
            "That can satisfy this.",
            "So this particular color does not have.",
            "A coloring OK."
        ],
        [
            "This is the first impression of applying a few improver to some some some problem.",
            "However, to solve problem instances, a constraint solver is usually much more efficient than a few improver.",
            "For instance, one of these very efficient propositional logic SAT solvers could be used and would just blow it away and more seriously.",
            "In this case, by looking at the problem and knowing the properties of a theorem provers, I could be sure no matter if a graph is colorable or not, the theorem prover will terminate, guaranteed with a solution, but it's not always the case.",
            "In general, header.",
            "Tried another theorem provers.",
            "It would perhaps not.",
            "Would perhaps not have terminated on these examples here, so let's.",
            "That's of course a problem then.",
            "So theorem provers can be applied to this, but.",
            "There are perhaps over to."
        ],
        [
            "Ask a few.",
            "Improving is more appropriate.",
            "And also in conjunction here with this constraint satisfaction problem I have something that cannot be done by constraint solvers.",
            "They really need fear improving for that.",
            "It's about functional dependencies, so what's the functional dependency?",
            "The blue coloring depends functionally on the red and green coloring, I suppose.",
            "I've given you a graph.",
            "I've shown you it is, you know it is colorable.",
            "Say I've shown you what colors are red and all of them and showing you what colors are green and all of them.",
            "So it's not difficult to guess what color remaining nodes must have.",
            "OK, there must be blue, of course.",
            "So blue depends functionally on the coloring on red and green coloring there's no way to escape from that.",
            "It's a functional property, as in relational databases, for instance.",
            "But blue coloring does not functionally depend on the red coloring alone.",
            "So if I've only given you the red coloring, you can't tell me where exactly over blue account it.",
            "I mean, the unique way we have a blue colorings and the green color rings are so from this one it's possible to drive 2 colorings.",
            "One server Blues R. This this one here, and no one will lose this system.",
            "Is this one server green and blue is 1 hour I just swapped.",
            "Mount Marola theorem proving here is to prove that formula is valid or concretely that before following is valid as a formula is the blue coloring functionally dependent on the red or on the red and green coloring?",
            "So suppose you want to find that out.",
            "And notice so this is a task.",
            "Not a theorem proving task, not for one single problem instance, but it's a theorem proving task, but applies to the problem specification alone.",
            "So you want to find, say, something about all possible instances.",
            "So theorem proving is.",
            "Is adequate for that?",
            "Now, how could that be shown?",
            "OK.",
            "So remember on this slide here I have been talking about two colorings.",
            "Two possible colorings here.",
            "And the tricky."
        ],
        [
            "Is to use these to use two colorings to talk about two colorings in the problem specification.",
            "So here is just.",
            "But problem specification again, which specifies what a correctly colored graph is.",
            "But all of our predicates are indexed by #1.",
            "And now.",
            "I copy this formula.",
            "I have it here.",
            "And now it is indexed by two.",
            "OK, so I have two formulas which are equivalent there just.",
            "Slightly different, their constituents are just slightly different name.",
            "Now I want to compare.",
            "Colorings of these two, but these two formulas prescribed an.",
            "I can say that the two colorings but one with index one and once with that uses for index two are equal with respect to the blue coloring for all nodes and that node North is called a glue in one specification if and only if it's called blue and we have a specification.",
            "And I named this formula here say, let's be equal to property and the same I do for the red colorings and the green colorings.",
            "Um?",
            "OK, and here comes the theorem.",
            "To be proven.",
            "So it's called a conjecture here, so this is machine will be asked to prove that as a consequence.",
            "So then equal 22 when we have two colorings, supposedly two colorings, they and they agree on the red ones and they agree on the green ones, then inconsequence.",
            "They must agree on the blue ones.",
            "K now let me try that.",
            "It's not really important, but the proof is.",
            "It has very many flags, so you can see.",
            "OK, and the proof is actually.",
            "Very short here, so it finds that this is indeed valid in a couple of steps only.",
            "OK.",
            "So, so it's a state.",
            "Assume it's not so easy.",
            "On the other hand, to get a human readable proof out of this.",
            "Machine oriented proof here.",
            "Now.",
            "In contrast, I speculate now that the blue coloring is functionally dependent on the red coloring alone, which of course is not true.",
            "And so we can see what the theorem prover finds out this time.",
            "And this theorem prover is actually much better at producing counterexamples to invalid theorems when it is to produce proofs for valid theorems.",
            "OK, so.",
            "So here is the output.",
            "And it makes sense if you used to be used to read this one here, so it constructs a counterexample to the concept kitchen conjecture.",
            "But blue depends functionally on read only, and he does sweat by constructing a graph with two nodes only.",
            "And the two nodes have these two names.",
            "Here is code 30.",
            "An Easter 10.",
            "And it says is called 3 zero is colored green in the coloring one.",
            "And.",
            "Discovery screening colored one, but it is colored.",
            "Blue invoked coloring 2 because this one says everything is blue except this one here you don't really need to fully.",
            "See what is going on here, but take my word for it.",
            "It finds a counterexample here, right?",
            "And with when staring at it long enough, one can actually recognize it even."
        ],
        [
            "OK, I said why is 1 interested in finding out such things about functional dependencies?",
            "Well, the answer is.",
            "This analysis is, so to speak, a preparatory step to apply constraint.",
            "Solvers, when you know but a functional dependency exists, you can advise for constraint solver that it exists, and so he may arrange the search in a completely different way.",
            "It just may take advantage of that knowledge, so to speak and to find solutions faster then.",
            "So this is the interest why.",
            "I think it's interesting to analyze such program specification."
        ],
        [
            "Here's another example.",
            "Proving symmetries, so this time it's not about functional dependencies.",
            "This time it's about proving symmetries, but overall game is for same given a specification of a problem of a constraint satisfaction problem, say analyzes for, analyze it for its logical properties, and this time symmetries.",
            "The N Queens problem has variable symmetries.",
            "It has many symmetries, but among them are variable symmetries, mirroring preserves solutions.",
            "Of course, if you mentioned that you mirror Laborde along the horizontal axis and you had a solution before then you have a solution after the mirroring.",
            "Or similarly you could also mirror along the vertical axis.",
            "You could even mirror along with diagonal, so there are many symmetries, but just let's suppose we're talking about.",
            "Variable symmetry here.",
            "And it's called variable symmetry because there are eight variables in the problem or an array of eight variables if you will, which are just the Roseanne.",
            "Each variable gives you as an integer position of the column where this the Queen is supposed.",
            "Now.",
            "Say here in this solution you have but the Queen in the first row is leftmost to Queen.",
            "On the bottom row OK and mirroring would reverse that it was the reverse for left and right thing, but you already know if.",
            "Mirroring preserve solution.",
            "So if you if constraint solver would in its search come up with a solution that has Queen involved first right most to work, Queen of the leftmost cover you know let's and let's not good.",
            "You don't need to do that because whenever such a solution exists, you could always mirror it into a solution that has this property with left right property.",
            "So there is no need to search for these solutions that don't satisfy this left right property and so this can.",
            "This can further constraint but Queen in the first row must be left work within the last word can be added.",
            "Two are constraint and so the search space becomes smaller and constraint solvers are are helped by that."
        ],
        [
            "I'm.",
            "Showing you very briefly.",
            "Um?",
            "The input spec for that.",
            "In order to also emphasize another aspect.",
            "This time.",
            "How is this quote in Queens symmetry PK?",
            "So this time life is a little bit harder for the theorem prover.",
            "It does obviously some more complicated inferences somethings called paramodulation, which we will hear about later.",
            "OK while it's running.",
            "I can show you the problem specification, so here is Justin comments.",
            "Viqueens P formula is so it's just one copy of Queens constraint and perhaps use.",
            "You know this formula?",
            "If not, doesn't really matter.",
            "So this one says what a legal positioning of Queens on the board is parametric in end.",
            "And here's another copy of that.",
            "It's called Queens cool.",
            "And now the proof task is to show for all N, so not for requests for specific board, say with eight.",
            "8 by 8 board or 10 by 10 or something, but generically show it for every possible and for all values of.",
            "If the board Q is obtained by mirroring about P, which is what this formula here says, then a coloring Q when what we get from a mirrored board is also a coloring here.",
            "So it is also satisfied or coloring formula.",
            "K So what happens quite frequently unit with theorem prover and and it runs and runs and runs.",
            "You don't know what to do.",
            "So what you try?",
            "You try various magic flags improvements, things like that.",
            "And.",
            "It pops out.",
            "So it's one of the.",
            "Not so scientific things, perhaps because you have often to really play around with the flags in order to make the thing happen.",
            "And even worse, and This is why I show you this example here.",
            "So what is here?",
            "So this is this is the straightforward translation of these formulas here.",
            "That's not a big deal that can be written easily, it's just the plus.",
            "Symbol is written as plus.",
            "Minus is written as minus and so on.",
            "But so this is a general purpose fear improver, so to speak.",
            "And they are not so general purpose at all, quite often.",
            "Because.",
            "They lack built-in or efficient reasoning capabilities for integers, so obviously this problem has to do with a little bit with integer arithmetic.",
            "You've seen the permutation formula.",
            "It sets North to N + 1 minus sends I to N + 1 -- A, so a little bit of arithmetic is involved in that.",
            "But of course it's first order logic and various no predefined meaning of the symbols of arithmetic of less or equal of less value of all the symbols.",
            "But of course you have an interpretation in mind, but just does not apply to theorem provers, and so you have to tell the system what it means, or at least you have to tell the system sufficiently.",
            "Many of these facts about integers so that it will be able to find the proof.",
            "OK, so and this is what you do.",
            "You end up writing down axioms or things that are just true about the integers.",
            "Hoping that you provide enough facts about the integers.",
            "So what the proof can be found in automatically.",
            "Yeah, so he's actually quite obvious ones.",
            "So, but less equal relation with smaller relation is irreflexive and transitive.",
            "And things like that.",
            "But sometimes you need to also some other facts better.",
            "Perhaps not that obvious, but which are generically true of integers, of course.",
            "Yeah, so this is actually a research topic.",
            "This is how to add integer reasoning support to a few improver.",
            "It's currently actively researched into.",
            "OK."
        ],
        [
            "I think this was what I wanted to say."
        ],
        [
            "How about this one here?",
            "OK, now we have an idea.",
            "Of what, what?",
            "What theorems proofs might be useful for to analyze specifications very generally?",
            "Here presented in the setting."
        ],
        [
            "Of constraint satisfaction.",
            "Now comes the more technical part of a talk or mom.",
            "More method oriented part of the talk if you will.",
            "And I thought I structure it.",
            "Bye.",
            "The task of building a first order theorem prover.",
            "So what would you need if you would be asked to build a first order theorem prover?",
            "Of course you need to fix an input language that you allow to write formulas in.",
            "You can fix the semantics to define what the formulas mean, which will be always classical semantics here or slight extensions of that.",
            "Determined by the side services from the theorem prover.",
            "So what questions we would like for prover be able to answer it would like approval.",
            "For instance, be able to answer.",
            "Yes, this is a theorem or say no, this is not a theorem.",
            "For that reason these are rather different tasks, but forgiven from my application.",
            "You would perhaps identify what services are required to satisfactory to address the needs of an application area in a satisfying way.",
            "Well then it gets operational.",
            "Design the calculus for logic and for services we have identified before Vera calculus.",
            "Of course you know this is kind of a high level description of a logical analysis algorithm, so that how do you combine formulas and filter relations and things like that, but also including from the viewpoint of automated theorem proving redundancy criteria to keep the search space small.",
            "Then comes to speak of the.",
            "Engineering slash scientific aspect of that you want to make sure that the calculus you have defined is indeed correct with respect to the services you want it to deliver.",
            "So you need typically soundness and completeness proofs with respect to the logic in the services possible.",
            "Finally, not finally well, while I calculus serves as a kind of a high level description.",
            "For reasoning algorithm, in order to bring it on a computer, various details need to be figured out.",
            "How to arrange for search space?",
            "How to get rid of all these, or how to?",
            "Make all this nondeterminism deterministic and so on, and finally implement it.",
            "So what I will do for the rest of this talk is go through the right items on this slide."
        ],
        [
            "Now I have to talk a little about input languages and services."
        ],
        [
            "OK, the most basic input language Maps you can think of is.",
            "Propositional logic.",
            "So you give a formula tuba propositional logic to a theorem prover, say and ask a question.",
            "Is it satisfy aghbal or not, and the theorem prover produces yes or no.",
            "So Phi is propositional logic formula and one question would be, is it satisfiable as set?",
            "But that's not the only interesting.",
            "Questions.",
            "So there are more.",
            "Services one of them is minimal model computation.",
            "So when the formula is satisfy aghbal, it might have many models and some models might be bigger than other models.",
            "And why is it interesting to have minimal models?",
            "Well, one application of that, for instance, is diagnosis say we have a circuit modeled in propositional logic or any other system modeled in predicate logic in propositional logic.",
            "But the system does not behave as issued, so it's time to diagnose a circuit.",
            "Say and this can be reformulated as a propositional satisfiability problem.",
            "Well in smaller models.",
            "In this case, or minimal models means pointing out just very essential parts that might have broken, so it's perhaps not all circuits have.",
            "Program doesn't matter, but just one circuit is broken to explain the faulty behavior, and this translates back into a minimal model.",
            "Computation task.",
            "Or maximally consistent subsets which has, for instance, applications in in debugging of specifications you've written down a formula and it's unsatisfiable all we would expect it should not be unsatisfiable.",
            "So very slow, buggy.",
            "So these bugs that we can perhaps easier be found if one identifies a maximal set of maximal subformula forgiven formula but still is satisfy aghbal to identify the problem.",
            "Creeps in OK and this of course is also a research topic on its own.",
            "People come up with clever methods to build theorem provers for propositional logic.",
            "It could be based on BDD.",
            "Stochastic methods which have a lot of coin flipping in it to guess and refine candidate interpretations in order to find a model formula formula.",
            "Orbax so called the PLL method.",
            "When and it's such a simple logic, while another question is why people are interested in these all different methods and the answer is simply because for propositional formula can be B can be very big 10s of thousands of.",
            "Variables and hundreds of thousands of formulas, and these formulas arise quite naturally in model checking of hardware, for instance, or even software.",
            "So I don't know if redshift Corey has already talked about CTL.",
            "Or Pepsi will talk about that tomorrow.",
            "I know it's on his on his slides, so CTL model checking problems can be translated into propositional logic as well, and then the big formulas come up for.",
            "Realistic.",
            "Designs.",
            "OK, so actually I'm talking about a method.",
            "Now I'm talking about VPL because I thought it's an overview course about automated reasoning and one should have heard about that because it's such an important method."
        ],
        [
            "Now, the easiest way to explain the PLL, well, at least I find that is too.",
            "Presented as a semantic tree method, you will see in a minute what semantic tree is because it will evolve on the left side of the screen here.",
            "By way of example, assume that these of free for propositional formulas better.",
            "Here.",
            "There are clauses in this case where connected by and.",
            "And the task is to analyze if the conjunction of these formulas here is satisfied.",
            "And of course the ABC and D's there are propositional so they can be either true or false.",
            "Now the construction starts with an empty tree and was always intended intuition behind these semantic trees.",
            "They represent interpretations, and initially the empty tree represents an interpretation that assigns false to every propositional variable, so a is false piece falsies false and D is false.",
            "Now, from a semantic point of view, what PLL does is it checks if the current interpretation that is derived from the current re steady slice across it satisfies these formulas.",
            "And of course if everything is false by convention, which is what this empty set stands for, then.",
            "This disjunction, A or B is false OK.",
            "So what deep?"
        ],
        [
            "Well then does is it tries to repair this situation by carrying out a split by carrying out a case analysis.",
            "So a could be true, or a could be false in the left side is the case where a is true and the right side is where a is false.",
            "In written like that.",
            "So now if you follow down the left branch, that interpretation.",
            "Is refined a little bit so it now says a is true, but still piece Falsies falls into useful as everything else is false.",
            "What happens now?",
            "So we made some progress with respect to the formula A or B because it is satisfied now, but the red line here is problematic because C is still false, so this is false and also because a is true now, not a is false, so the whole disjunction is false, so it's time to.",
            "Repair the."
        ],
        [
            "Reputation again."
        ],
        [
            "Should add and the repairing is done in a guided way, so we so DPL really looks at the red formula here and it could try to repair it with C or with not a, but it can't repair with, not cannot repair with Note 8 because we a is already along the branch here, so you can't a path A and not a on the same branch.",
            "Let's just not good, but it can repair this, see."
        ],
        [
            "OK, what we have here, I've developed it a little further.",
            "Now you see a star here at this branch and the star means that the branch is closed because it is an elementary contradiction.",
            "Why's this because a contradicts this one here and not C contradicts this one here and there is no way to repair the interpretation beyond this leave here because it would have to add Eva C or not a.",
            "But if that is not possible because we have.",
            "So this thing fixed assignments for A&C already.",
            "OK, but going down the left branch rest for problems with this branch with this."
        ],
        [
            "Love Fred clause again and so we interpretation.",
            "So with semantic trees extended, again, we have a CD.",
            "And this feed is indeed is a satisfying assignment for all four formulas over method stops at this point.",
            "Similarly as before.",
            "With this branch, it gets closed."
        ],
        [
            "And if you wish, you could develop the right side a little bit further and compute another model.",
            "So we're just B is true.",
            "This would also be a model of.",
            "Offer formula above.",
            "OK, I think I said everything here.",
            "A branch stands for an interpretation.",
            "The purpose of splitting is to satisfy a clause that is currently falsified in the current candidate and you close the branches.",
            "Some clauses plainly falsified by it, so these are.",
            "The basic ingredients of the PLL algorithm device tin for 1960s or so, but it's still.",
            "At least among the best methods to build propositional SAT solvers.",
            "With some improvements.",
            "Excuse me Oh yeah, sure thanks.",
            "Yep.",
            "At anytime please interrupt me for questions more than happy to take questions.",
            "Yeah, GPL license for Davies, Putnam, Logeman Loveland.",
            "Which are for sure, yeah."
        ],
        [
            "So one thing I should say here, so here I said it would split on C and not C, But in reality the algorithm is a little bit smarter and it would just not split here, but deterministically derive C from a here and not do this on the right side here.",
            "And I would also."
        ],
        [
            "I'd like to talk about.",
            "Two improvements that are really except essential to make it work in practice.",
            "One is called lemma learning.",
            "So, but let my learning does the following.",
            "So here I have again with semantic tree from above.",
            "Do you naughty?",
            "OK.",
            "This is closed.",
            "Now you look at the reasons why the stars are here.",
            "So.",
            "This is close by C or not a.",
            "And this is close by.",
            "We are not see.",
            "Or not a. OK. No.",
            "Lemma learning means looking at the closed branches and looking at the formulas that cost them close and combine these formulas so they can be combined.",
            "These two formulas can be combined into a single formula.",
            "D or not a.",
            "By an inference rule called resolution, which we will see later in detail.",
            "No.",
            "I claim that this formula here is a consequense.",
            "Of these two formulas here, and therefore it is sound to add it to the existing to the formulas in that were given in the 1st place.",
            "And why is it a consequence?",
            "Um?",
            "No, something is wrong here.",
            "CRTR see.",
            "No, it's it's OK.",
            "So what it does is it looks at for two clauses.",
            "Here are two formulas here, sees complementary literals and cuts them out, and collects forest.",
            "It is a constant because if C is false case and if C is false, then any model must satisfy not A and if it satisfies not a then it will also satisfy not a or D and if C is true.",
            "Then from this formula here, this literal goes away, so to speak, and what it leaves you with D or not a, which is here.",
            "Service is a sound operation and why would you do that?",
            "Because.",
            "It allows us to.",
            "Derive an equivalent.",
            "Tree earlier.",
            "Because now after the A has been made.",
            "So suppose you add this formula to the input clause set.",
            "To reiterate, Superformula set from VA, you can immediately conclude.",
            "Mystery here by using this clause to close this branch here.",
            "And this example is not very meaningful.",
            "I just wanted to make the point that this T PLL method can be combined with other inference rules with some resolution inference rules, and these are very powerful.",
            "Miss.",
            "To add consequences to arrive at the same to arrive at shorter trees later.",
            "So the slogan is avoid making the same mistake twice.",
            "And this is in particular particularly useful if lemma learning is combined with another of these.",
            "Practically important.",
            "I. Mechanisms called restarts.",
            "Or better set randomized restarts.",
            "The idea is.",
            "To start with proof search for awhile, but because the formula is big, it may run for days for weeks or or even longer.",
            "And you derive lemmas along the way, so these new formulas.",
            "But then you give up and you start again.",
            "But this time arranging the search in a little bit different way, but and this makes sense in particular because.",
            "With all these lemmas derived, one will avoid deriving.",
            "The trees of certain branches in the trees that had not led to success in the previous run.",
            "So in combination this is a very very good technique.",
            "Sure.",
            "Yes, exactly.",
            "Yeah, that's one of the key ingredients.",
            "You keep the lemmas learned.",
            "Yeah.",
            "OK.",
            "So this was actually a little.",
            "Detour.",
            "But I said I thought talking about propositional logic.",
            "I must talk about VPL, at least an about limasan restarts, because these are the basic things one needs to have heard of when being interested in this stuff."
        ],
        [
            "OK. Another one.",
            "Still back one level now at the overview of languages and services description logics.",
            "OK formulas this time.",
            "Are so-called description logics.",
            "You will hear a lot of description logics, I presume in a later lecture.",
            "By Morris Pancho in knowledge or knowledge representation.",
            "But here is just a little appetizer if you will.",
            "So description, logic, formulas they came in.",
            "Two kinds, if you will be coming T boxes in eight boxes.",
            "And a tee box allows to specify a terminology or ontology as it is fashionably called where you have these objects in the domain.",
            "Like all these professors, students and BC persons and they are arranged say in graphical in a tree like way and description.",
            "Logics provide a language to express such ontologies in a very precise and formal way.",
            "And they have also gained a lot of popularity recently in the semantic Web.",
            "It is because all the L1 over standard languages.",
            "Is actually nothing but quite expressive description logic language.",
            "So in description logics, one can say for instance, if someone is a professor and there is a supervised thing which is a student, professors that have professors that supervise students are busy persons.",
            "And in a box 18 boxes, one makes concrete assertions instances, so to speak, of a proper specification.",
            "You say that P is a professor and that P&S are in the supervised supervises relation.",
            "No, and were recently services you would like to have from assistant is like is the T box in a box.",
            "If you read it as a combined formula is it satisfy aghbal?",
            "If it's not, something is probably wrong with the specification.",
            "Does C subsume D?",
            "Subsumption means so, C subsumes, D is if C is more general than the.",
            "So in this example, busy person is more general than the expression on the left hand side here, and this is obvious becomes when you read this as an implication here, or if you read this as a set containment here.",
            "Algorithms for that reasoning alphabet are predominantly Tableau algorithms like the ones are achieved.",
            "Corey has talked about.",
            "And it's in fact.",
            "Many description logics are nothing but syntactically slightly different notation for modal logics.",
            "OK, so there is a one to one correspondence between modal logics and such description logics here.",
            "So the existential quantifier here just becomes madiam and OK.",
            "I mean a diamond, but has the name supervisor, so in reality it's multi modal logic where one has many diamonds.",
            "Different names here and this.",
            "Here we come.",
            "Logical operators.",
            "This is a good thing.",
            "Which forces us to have a break now, right?",
            "Oh now let's see.",
            "So let me conclude that so this about description, logic so.",
            "Even if you don't remember the description logic formula that was here on the slide.",
            "I. Ken mentioned that it has to do a lot with first order logic.",
            "Translation of description logics.",
            "Into first order logic.",
            "So the formula.",
            "Post professor.",
            "It exists.",
            "Supervisors student.",
            "Busy person.",
            "Well, supposedly, just in case you would not like this syntax, it can be translated into into an equivalent 1st order logic formula.",
            "And the formula is this.",
            "Silly jokes for all X.",
            "If professor of X.",
            "And there is a Y.",
            "Search that.",
            "Supervisors XY and.",
            "Student of Y. OK, so this is obviously the translation of this one here.",
            "Implies.",
            "Easy person.",
            "Of X. OK. Now say if the tableau prover is currently broken, or.",
            "Doesn't run on your machine, but you have a first order theorem prover handy.",
            "You could translate your description logic formula into a first order logic formula and give it to.",
            "General Purpose 1st order fuel improver, but the same caveat applies as said before.",
            "This is not necessarily a good idea because we stop law.",
            "Reason is are really optimized with respect to efficient inference rules.",
            "Data structures just for description logics and Moreover they have mechanisms built into that.",
            "Let them even decide these logics.",
            "So whenever you supply such a description or should formula, you can be sure you get you answer back.",
            "It can be yes or no.",
            "Say two satisfiability problems, whereas usability when the translation is supplied to 1st order theorem prover with does not necessarily hold anymore.",
            "Because of incompleteness of.",
            "And decidability of 1st order logic it may only terminate in some cases.",
            "But if it's service viable, performance satisfiability might not might not terminate.",
            "OK, so.",
            "Yeah, I think this is what I wanted to add.",
            "To this and here I have one more item here.",
            "So much research challenges just to push push the expressivity of description logics to add more and more constructs to a language so that it can talk about integers.",
            "Say it's called concrete domains when you've seen before, integers are very important in recently, so people are thinking about extending description logics with integer reasoning as well, and devising reasoning procedures for that so that decidability is still.",
            "Given OK.",
            "But I don't want to say more about this year because I said.",
            "This will be covered in an later lecture and I would suggest we have a break now.",
            "And yes.",
            "Strict effect.",
            "It should surely allow you to get a solution quicker because that's why.",
            "I don't understand the paradox.",
            "Certain constraints.",
            "Where is in fact constraints is being contested.",
            "Contracts Pencil was an educated solution quicker.",
            "OK.",
            "I see.",
            "Let's see.",
            "So.",
            "Invoke invoke constraint case.",
            "But the language was was fixed, so it says here here is for language.",
            "But constraint solver can decide this language anuket can add additional constraints.",
            "To it so that symmetric solutions are excluded, for instance in the N Queens problem, But the input language is the same all the time and.",
            "And if you add constraints for formula is more and more it's difficult to.",
            "Becomes more and more difficult to find models for it because it's further constrained.",
            "Anne.",
            "But at the same time it cuts away search space if you will, which is the value of making formulas stronger.",
            "In contrast, I've talked about research challenge to make language speaker to allow more and more construction, but this I meant.",
            "The app isn't meant to make the language bigger, but you can say more things.",
            "So this is on a different.",
            "And a different scale, so to speak, on a different parameter access.",
            "Yeah so, but changes you want to have your language more expressive.",
            "You want to now have a description, description, logics that can't reason about integers, say.",
            "But now you want to extend the language so that you can talk in a limited way about integers so that you can say things, but you couldn't say before make the language more expressive while preserving the satisfiability of the language.",
            "I'm not sure if this answers your question.",
            "Happy to continue talking.",
            "OK, let's make a break."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Is only by example, so to speak.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "To provide some insights how the methods I will be talking about work?",
                    "label": 0
                },
                {
                    "sent": "I.",
                    "label": 0
                },
                {
                    "sent": "So the idea is to be, so to speak theoretical innocence, but not too technical.",
                    "label": 0
                },
                {
                    "sent": "So really, to get the methods of the methods across the ideas across.",
                    "label": 0
                },
                {
                    "sent": "My plan is to cover some standard techniques that you need, which are listed here on the second part of the slide, so it's a lot about normal forms of formulas.",
                    "label": 1
                },
                {
                    "sent": "It's about Herbrand interpretations, it's about the resolution calculus, which is the most important calculus for doing automated reasoning, and the concept of unification.",
                    "label": 0
                },
                {
                    "sent": "This brings us into 19 sixty 70s, but for more recent developments into 1980s or 90s, even.",
                    "label": 0
                },
                {
                    "sent": "And then I have something on instance based methods, which is a relatively new.",
                    "label": 1
                },
                {
                    "sent": "Developmenting automated theorem proving it's an alternative to these resolution methods to prove something without differently.",
                    "label": 0
                },
                {
                    "sent": "There are reps 10 years old or 15 years at most.",
                    "label": 0
                },
                {
                    "sent": "Then I have something about model computation, which is in a sense we opposite of theorem proving, and then I have a hot topic for several years now, which is theory reasoning in particular in a specific direction called satisfiability modulo theories.",
                    "label": 1
                },
                {
                    "sent": "Which is very relevant.",
                    "label": 0
                },
                {
                    "sent": "For instance for program verification.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK so I have think two parts in this lecture, first part.",
                    "label": 0
                },
                {
                    "sent": "Is very short actually.",
                    "label": 0
                },
                {
                    "sent": "Well, second part is much longer, So what is automated for improving?",
                    "label": 1
                },
                {
                    "sent": "Well, there are many ways to exploit.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Explain that and my favorite way to explain that is to explain it in relation to.",
                    "label": 1
                },
                {
                    "sent": "Well, we all used to do calculation.",
                    "label": 0
                },
                {
                    "sent": "Say that we have some term 2 to the power of two or three to four of two, and so on, and we can of course compute values with pocket calculators or things like that.",
                    "label": 1
                },
                {
                    "sent": "This is easy, so which is not theorem proving OK?",
                    "label": 0
                },
                {
                    "sent": "Way too easy enough in innocence.",
                    "label": 0
                },
                {
                    "sent": "On the next level of difficulty of theoretical difficulties, so to speak, is what is known as constraint solving, which is a whole research area and topic of its own.",
                    "label": 0
                },
                {
                    "sent": "Of course.",
                    "label": 0
                },
                {
                    "sent": "Now to generalize the calculation from a birthday or constraint solving, you could say now the problem is X X ^2 = A where X is taken from a interval when 2P, let's say so.",
                    "label": 0
                },
                {
                    "sent": "It's it's generic problem specification, but in order to do constraint solving.",
                    "label": 0
                },
                {
                    "sent": "You not only give the model.",
                    "label": 0
                },
                {
                    "sent": "The problem here, but you also have to be very specific, so you have to give a specific problem instance and this is done by fixing the values for the parameters and variables like X over ones that are searched for.",
                    "label": 0
                },
                {
                    "sent": "OK, So what challenges to find values for variables such with X such But the problem instance is satisfied.",
                    "label": 1
                },
                {
                    "sent": "Well, how is that in comparison with?",
                    "label": 0
                },
                {
                    "sent": "Difficult is often exponential.",
                    "label": 0
                },
                {
                    "sent": "Typically, constraint programming is about NP complete search problems, but it is still decidable and purposefully so because you still want to get an answer a positive or negative answer from the machine.",
                    "label": 1
                },
                {
                    "sent": "So yes or no, and how this is achieved by restriction to finite domains.",
                    "label": 0
                },
                {
                    "sent": "So if you fix the BVX is from a finite domain one 2P.",
                    "label": 0
                },
                {
                    "sent": "And of course you can enumerate all the values.",
                    "label": 0
                },
                {
                    "sent": "And just check the formulas for all possible instantiation's.",
                    "label": 0
                },
                {
                    "sent": "Now, by contrast, 1st order for improving goes one level beyond that, so to speak.",
                    "label": 0
                },
                {
                    "sent": "In that it does not work with the instance automated theorem.",
                    "label": 0
                },
                {
                    "sent": "Proving is about very general statements if you will.",
                    "label": 0
                },
                {
                    "sent": "So given is just for problem specification like the one that is given here and you just ask is it satisfy oball, is it unsatisfiable or is it valid?",
                    "label": 0
                },
                {
                    "sent": "So for raising bees you could say our values for the SNP's.",
                    "label": 1
                },
                {
                    "sent": "So what this is satisfy but without giving these values apriori?",
                    "label": 0
                },
                {
                    "sent": "Or you could ask for all values of A&B, is there such a thing?",
                    "label": 0
                },
                {
                    "sent": "And this is of course often very difficult to.",
                    "label": 0
                },
                {
                    "sent": "To various incompleteness theorems.",
                    "label": 0
                },
                {
                    "sent": "OK so but this is where first order theorem proving kicks in.",
                    "label": 0
                },
                {
                    "sent": "Given a problem without the instance, again from the viewpoint of constraint satisfaction here and analyze such a problem specification for its logical properties.",
                    "label": 0
                },
                {
                    "sent": "Of course you could do that for other things as well.",
                    "label": 0
                },
                {
                    "sent": "You could have a logical specification of a program, so to speak, in order to.",
                    "label": 0
                },
                {
                    "sent": "Logically underlies the properties of a program, whether it.",
                    "label": 0
                },
                {
                    "sent": "Samsung some heap cells are references, but that shouldn't or if array are out of bounds or things like that, so let's.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Realm of automated theorem proving.",
                    "label": 1
                },
                {
                    "sent": "So here, if a very concrete example of logical analysis, again for the constraint.",
                    "label": 0
                },
                {
                    "sent": "In the constraint satisfaction.",
                    "label": 0
                },
                {
                    "sent": "World.",
                    "label": 0
                },
                {
                    "sent": "This is a map, and anyways it's pretty easy to guess where I come from, so this is of course.",
                    "label": 0
                },
                {
                    "sent": "But Germany map here.",
                    "label": 0
                },
                {
                    "sent": "And of course it can be colored before colors because it has been proven.",
                    "label": 0
                },
                {
                    "sent": "But another task is another question is to ask, can it be colored using only three colors where of course the neighboring countries are colored differently, so this is again an NP complete.",
                    "label": 1
                },
                {
                    "sent": "Search problem.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And before we can analyze it, we need first to formalize this, formalize it.",
                    "label": 0
                },
                {
                    "sent": "So a concrete problem instance could of course be modeled as a graph here, but just putting edges between the neighboring countries here and the problem specification informally says OK, every node here should receive a color red, green or blue and adjacent nodes shall not receive the same color.",
                    "label": 1
                },
                {
                    "sent": "No.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "The role of theorem proving here.",
                    "label": 0
                },
                {
                    "sent": "Let's first formalize this in first order logic.",
                    "label": 0
                },
                {
                    "sent": "So every node has at least one color.",
                    "label": 1
                },
                {
                    "sent": "We can say that for all red of nor green nor blue event with the intended semantics and the variables range over the nodes.",
                    "label": 1
                },
                {
                    "sent": "Then you say that every node has at most one color which is not excluded by this formula.",
                    "label": 0
                },
                {
                    "sent": "So node could receive multiple color.",
                    "label": 0
                },
                {
                    "sent": "Service has to be excluded as L, for instance if it's red, then it's not green and so on.",
                    "label": 0
                },
                {
                    "sent": "And this suffices to.",
                    "label": 1
                },
                {
                    "sent": "Exclude all cases where a node would receive in a model more than one color.",
                    "label": 0
                },
                {
                    "sent": "And finally, of course, the restriction on the graph that adjacent nodes have different color.",
                    "label": 0
                },
                {
                    "sent": "So whenever two nodes are in the edge, relation came in.",
                    "label": 0
                },
                {
                    "sent": "When it's not the case that both are at mnar both rate.",
                    "label": 0
                },
                {
                    "sent": "It's not the case that both are green and similarly for blue.",
                    "label": 0
                },
                {
                    "sent": "Magic.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, now that we have a problem and an instance, possibly we can of course solve it with a constraint solver.",
                    "label": 1
                },
                {
                    "sent": "So let the constraint solver find the values for the variables such that the problem instance is satisfied.",
                    "label": 1
                },
                {
                    "sent": "So we're all these variables are inside of constraints are satisfied, the variables are set, our colors of nodes in the graph of values are red, green or blue, and the problem instances for specific graph to be colored.",
                    "label": 0
                },
                {
                    "sent": "No, we don't necessarily need a constraint solver fact.",
                    "label": 0
                },
                {
                    "sent": "We can readily ship this problem to theorem prover.",
                    "label": 0
                },
                {
                    "sent": "And we can do that.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "I can show you.",
                    "label": 0
                },
                {
                    "sent": "Hobbies may look like.",
                    "label": 0
                },
                {
                    "sent": "Chanel?",
                    "label": 0
                },
                {
                    "sent": "K. Sophie are improving is a lot about very practical things.",
                    "label": 0
                },
                {
                    "sent": "It's a lot about playing around with fear improvers and coming up with the right specifications and things like that and trying things out.",
                    "label": 0
                },
                {
                    "sent": "That's one of the things that would like to convey here.",
                    "label": 0
                },
                {
                    "sent": "OK so here is some machine readable syntax for 1st order logic and it's just used here to encode the problem performance F shown you in some different syntax, but it's essentially the same or just not use not necessary to go into details here.",
                    "label": 0
                },
                {
                    "sent": "And also one has to save what edges there are.",
                    "label": 0
                },
                {
                    "sent": "So this is the problem instance.",
                    "label": 1
                },
                {
                    "sent": "Quite a number of them.",
                    "label": 1
                },
                {
                    "sent": "Now I run some theorem prover on that.",
                    "label": 0
                },
                {
                    "sent": "In this case is our own, but which does not really matter.",
                    "label": 0
                },
                {
                    "sent": "Oops.",
                    "label": 0
                },
                {
                    "sent": "Sex.",
                    "label": 1
                },
                {
                    "sent": "OK, that was very quick.",
                    "label": 0
                },
                {
                    "sent": "In general it's not that quick, but this time it was very quick.",
                    "label": 0
                },
                {
                    "sent": "And it's actually quite night, quite quite nice.",
                    "label": 0
                },
                {
                    "sent": "Anne.",
                    "label": 0
                },
                {
                    "sent": "If you have a theorem prover that can produce models or that can produce useful answers in terms of your original task, you want you to solve, and this prove improver can do it so it outputs at the end the coloring of nodes that were given in the problem specification.",
                    "label": 1
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "OK, so originally this was a satisfying instance.",
                    "label": 1
                },
                {
                    "sent": "An unsatisfiable one by recommended out a lot of nodes, so I made the graph much smaller.",
                    "label": 0
                },
                {
                    "sent": "And if I let the prover run.",
                    "label": 0
                },
                {
                    "sent": "On the bigger instance.",
                    "label": 0
                },
                {
                    "sent": "It takes a little longer.",
                    "label": 0
                },
                {
                    "sent": "And it just.",
                    "label": 0
                },
                {
                    "sent": "Produces a dump of it's run, so it explains us what it is doing, but not really in a very useful way, I would say.",
                    "label": 0
                },
                {
                    "sent": "And after awhile it comes to a solution and finds out.",
                    "label": 0
                },
                {
                    "sent": "That can satisfy this.",
                    "label": 0
                },
                {
                    "sent": "So this particular color does not have.",
                    "label": 0
                },
                {
                    "sent": "A coloring OK.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "This is the first impression of applying a few improver to some some some problem.",
                    "label": 0
                },
                {
                    "sent": "However, to solve problem instances, a constraint solver is usually much more efficient than a few improver.",
                    "label": 1
                },
                {
                    "sent": "For instance, one of these very efficient propositional logic SAT solvers could be used and would just blow it away and more seriously.",
                    "label": 1
                },
                {
                    "sent": "In this case, by looking at the problem and knowing the properties of a theorem provers, I could be sure no matter if a graph is colorable or not, the theorem prover will terminate, guaranteed with a solution, but it's not always the case.",
                    "label": 0
                },
                {
                    "sent": "In general, header.",
                    "label": 0
                },
                {
                    "sent": "Tried another theorem provers.",
                    "label": 0
                },
                {
                    "sent": "It would perhaps not.",
                    "label": 0
                },
                {
                    "sent": "Would perhaps not have terminated on these examples here, so let's.",
                    "label": 0
                },
                {
                    "sent": "That's of course a problem then.",
                    "label": 0
                },
                {
                    "sent": "So theorem provers can be applied to this, but.",
                    "label": 0
                },
                {
                    "sent": "There are perhaps over to.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Ask a few.",
                    "label": 0
                },
                {
                    "sent": "Improving is more appropriate.",
                    "label": 0
                },
                {
                    "sent": "And also in conjunction here with this constraint satisfaction problem I have something that cannot be done by constraint solvers.",
                    "label": 0
                },
                {
                    "sent": "They really need fear improving for that.",
                    "label": 0
                },
                {
                    "sent": "It's about functional dependencies, so what's the functional dependency?",
                    "label": 0
                },
                {
                    "sent": "The blue coloring depends functionally on the red and green coloring, I suppose.",
                    "label": 1
                },
                {
                    "sent": "I've given you a graph.",
                    "label": 0
                },
                {
                    "sent": "I've shown you it is, you know it is colorable.",
                    "label": 0
                },
                {
                    "sent": "Say I've shown you what colors are red and all of them and showing you what colors are green and all of them.",
                    "label": 0
                },
                {
                    "sent": "So it's not difficult to guess what color remaining nodes must have.",
                    "label": 0
                },
                {
                    "sent": "OK, there must be blue, of course.",
                    "label": 0
                },
                {
                    "sent": "So blue depends functionally on the coloring on red and green coloring there's no way to escape from that.",
                    "label": 0
                },
                {
                    "sent": "It's a functional property, as in relational databases, for instance.",
                    "label": 0
                },
                {
                    "sent": "But blue coloring does not functionally depend on the red coloring alone.",
                    "label": 1
                },
                {
                    "sent": "So if I've only given you the red coloring, you can't tell me where exactly over blue account it.",
                    "label": 0
                },
                {
                    "sent": "I mean, the unique way we have a blue colorings and the green color rings are so from this one it's possible to drive 2 colorings.",
                    "label": 0
                },
                {
                    "sent": "One server Blues R. This this one here, and no one will lose this system.",
                    "label": 0
                },
                {
                    "sent": "Is this one server green and blue is 1 hour I just swapped.",
                    "label": 0
                },
                {
                    "sent": "Mount Marola theorem proving here is to prove that formula is valid or concretely that before following is valid as a formula is the blue coloring functionally dependent on the red or on the red and green coloring?",
                    "label": 1
                },
                {
                    "sent": "So suppose you want to find that out.",
                    "label": 0
                },
                {
                    "sent": "And notice so this is a task.",
                    "label": 0
                },
                {
                    "sent": "Not a theorem proving task, not for one single problem instance, but it's a theorem proving task, but applies to the problem specification alone.",
                    "label": 0
                },
                {
                    "sent": "So you want to find, say, something about all possible instances.",
                    "label": 0
                },
                {
                    "sent": "So theorem proving is.",
                    "label": 0
                },
                {
                    "sent": "Is adequate for that?",
                    "label": 0
                },
                {
                    "sent": "Now, how could that be shown?",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "So remember on this slide here I have been talking about two colorings.",
                    "label": 0
                },
                {
                    "sent": "Two possible colorings here.",
                    "label": 0
                },
                {
                    "sent": "And the tricky.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Is to use these to use two colorings to talk about two colorings in the problem specification.",
                    "label": 0
                },
                {
                    "sent": "So here is just.",
                    "label": 0
                },
                {
                    "sent": "But problem specification again, which specifies what a correctly colored graph is.",
                    "label": 0
                },
                {
                    "sent": "But all of our predicates are indexed by #1.",
                    "label": 0
                },
                {
                    "sent": "And now.",
                    "label": 0
                },
                {
                    "sent": "I copy this formula.",
                    "label": 0
                },
                {
                    "sent": "I have it here.",
                    "label": 0
                },
                {
                    "sent": "And now it is indexed by two.",
                    "label": 0
                },
                {
                    "sent": "OK, so I have two formulas which are equivalent there just.",
                    "label": 0
                },
                {
                    "sent": "Slightly different, their constituents are just slightly different name.",
                    "label": 0
                },
                {
                    "sent": "Now I want to compare.",
                    "label": 0
                },
                {
                    "sent": "Colorings of these two, but these two formulas prescribed an.",
                    "label": 0
                },
                {
                    "sent": "I can say that the two colorings but one with index one and once with that uses for index two are equal with respect to the blue coloring for all nodes and that node North is called a glue in one specification if and only if it's called blue and we have a specification.",
                    "label": 0
                },
                {
                    "sent": "And I named this formula here say, let's be equal to property and the same I do for the red colorings and the green colorings.",
                    "label": 0
                },
                {
                    "sent": "Um?",
                    "label": 0
                },
                {
                    "sent": "OK, and here comes the theorem.",
                    "label": 0
                },
                {
                    "sent": "To be proven.",
                    "label": 0
                },
                {
                    "sent": "So it's called a conjecture here, so this is machine will be asked to prove that as a consequence.",
                    "label": 0
                },
                {
                    "sent": "So then equal 22 when we have two colorings, supposedly two colorings, they and they agree on the red ones and they agree on the green ones, then inconsequence.",
                    "label": 0
                },
                {
                    "sent": "They must agree on the blue ones.",
                    "label": 1
                },
                {
                    "sent": "K now let me try that.",
                    "label": 0
                },
                {
                    "sent": "It's not really important, but the proof is.",
                    "label": 0
                },
                {
                    "sent": "It has very many flags, so you can see.",
                    "label": 0
                },
                {
                    "sent": "OK, and the proof is actually.",
                    "label": 0
                },
                {
                    "sent": "Very short here, so it finds that this is indeed valid in a couple of steps only.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "So, so it's a state.",
                    "label": 0
                },
                {
                    "sent": "Assume it's not so easy.",
                    "label": 0
                },
                {
                    "sent": "On the other hand, to get a human readable proof out of this.",
                    "label": 0
                },
                {
                    "sent": "Machine oriented proof here.",
                    "label": 0
                },
                {
                    "sent": "Now.",
                    "label": 0
                },
                {
                    "sent": "In contrast, I speculate now that the blue coloring is functionally dependent on the red coloring alone, which of course is not true.",
                    "label": 1
                },
                {
                    "sent": "And so we can see what the theorem prover finds out this time.",
                    "label": 0
                },
                {
                    "sent": "And this theorem prover is actually much better at producing counterexamples to invalid theorems when it is to produce proofs for valid theorems.",
                    "label": 0
                },
                {
                    "sent": "OK, so.",
                    "label": 1
                },
                {
                    "sent": "So here is the output.",
                    "label": 0
                },
                {
                    "sent": "And it makes sense if you used to be used to read this one here, so it constructs a counterexample to the concept kitchen conjecture.",
                    "label": 0
                },
                {
                    "sent": "But blue depends functionally on read only, and he does sweat by constructing a graph with two nodes only.",
                    "label": 0
                },
                {
                    "sent": "And the two nodes have these two names.",
                    "label": 0
                },
                {
                    "sent": "Here is code 30.",
                    "label": 0
                },
                {
                    "sent": "An Easter 10.",
                    "label": 0
                },
                {
                    "sent": "And it says is called 3 zero is colored green in the coloring one.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "Discovery screening colored one, but it is colored.",
                    "label": 0
                },
                {
                    "sent": "Blue invoked coloring 2 because this one says everything is blue except this one here you don't really need to fully.",
                    "label": 0
                },
                {
                    "sent": "See what is going on here, but take my word for it.",
                    "label": 0
                },
                {
                    "sent": "It finds a counterexample here, right?",
                    "label": 0
                },
                {
                    "sent": "And with when staring at it long enough, one can actually recognize it even.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, I said why is 1 interested in finding out such things about functional dependencies?",
                    "label": 0
                },
                {
                    "sent": "Well, the answer is.",
                    "label": 0
                },
                {
                    "sent": "This analysis is, so to speak, a preparatory step to apply constraint.",
                    "label": 0
                },
                {
                    "sent": "Solvers, when you know but a functional dependency exists, you can advise for constraint solver that it exists, and so he may arrange the search in a completely different way.",
                    "label": 0
                },
                {
                    "sent": "It just may take advantage of that knowledge, so to speak and to find solutions faster then.",
                    "label": 0
                },
                {
                    "sent": "So this is the interest why.",
                    "label": 0
                },
                {
                    "sent": "I think it's interesting to analyze such program specification.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Here's another example.",
                    "label": 0
                },
                {
                    "sent": "Proving symmetries, so this time it's not about functional dependencies.",
                    "label": 0
                },
                {
                    "sent": "This time it's about proving symmetries, but overall game is for same given a specification of a problem of a constraint satisfaction problem, say analyzes for, analyze it for its logical properties, and this time symmetries.",
                    "label": 0
                },
                {
                    "sent": "The N Queens problem has variable symmetries.",
                    "label": 0
                },
                {
                    "sent": "It has many symmetries, but among them are variable symmetries, mirroring preserves solutions.",
                    "label": 0
                },
                {
                    "sent": "Of course, if you mentioned that you mirror Laborde along the horizontal axis and you had a solution before then you have a solution after the mirroring.",
                    "label": 0
                },
                {
                    "sent": "Or similarly you could also mirror along the vertical axis.",
                    "label": 0
                },
                {
                    "sent": "You could even mirror along with diagonal, so there are many symmetries, but just let's suppose we're talking about.",
                    "label": 0
                },
                {
                    "sent": "Variable symmetry here.",
                    "label": 0
                },
                {
                    "sent": "And it's called variable symmetry because there are eight variables in the problem or an array of eight variables if you will, which are just the Roseanne.",
                    "label": 0
                },
                {
                    "sent": "Each variable gives you as an integer position of the column where this the Queen is supposed.",
                    "label": 0
                },
                {
                    "sent": "Now.",
                    "label": 0
                },
                {
                    "sent": "Say here in this solution you have but the Queen in the first row is leftmost to Queen.",
                    "label": 0
                },
                {
                    "sent": "On the bottom row OK and mirroring would reverse that it was the reverse for left and right thing, but you already know if.",
                    "label": 0
                },
                {
                    "sent": "Mirroring preserve solution.",
                    "label": 0
                },
                {
                    "sent": "So if you if constraint solver would in its search come up with a solution that has Queen involved first right most to work, Queen of the leftmost cover you know let's and let's not good.",
                    "label": 0
                },
                {
                    "sent": "You don't need to do that because whenever such a solution exists, you could always mirror it into a solution that has this property with left right property.",
                    "label": 0
                },
                {
                    "sent": "So there is no need to search for these solutions that don't satisfy this left right property and so this can.",
                    "label": 0
                },
                {
                    "sent": "This can further constraint but Queen in the first row must be left work within the last word can be added.",
                    "label": 0
                },
                {
                    "sent": "Two are constraint and so the search space becomes smaller and constraint solvers are are helped by that.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "I'm.",
                    "label": 0
                },
                {
                    "sent": "Showing you very briefly.",
                    "label": 0
                },
                {
                    "sent": "Um?",
                    "label": 0
                },
                {
                    "sent": "The input spec for that.",
                    "label": 0
                },
                {
                    "sent": "In order to also emphasize another aspect.",
                    "label": 0
                },
                {
                    "sent": "This time.",
                    "label": 0
                },
                {
                    "sent": "How is this quote in Queens symmetry PK?",
                    "label": 0
                },
                {
                    "sent": "So this time life is a little bit harder for the theorem prover.",
                    "label": 1
                },
                {
                    "sent": "It does obviously some more complicated inferences somethings called paramodulation, which we will hear about later.",
                    "label": 0
                },
                {
                    "sent": "OK while it's running.",
                    "label": 1
                },
                {
                    "sent": "I can show you the problem specification, so here is Justin comments.",
                    "label": 1
                },
                {
                    "sent": "Viqueens P formula is so it's just one copy of Queens constraint and perhaps use.",
                    "label": 1
                },
                {
                    "sent": "You know this formula?",
                    "label": 0
                },
                {
                    "sent": "If not, doesn't really matter.",
                    "label": 1
                },
                {
                    "sent": "So this one says what a legal positioning of Queens on the board is parametric in end.",
                    "label": 0
                },
                {
                    "sent": "And here's another copy of that.",
                    "label": 0
                },
                {
                    "sent": "It's called Queens cool.",
                    "label": 0
                },
                {
                    "sent": "And now the proof task is to show for all N, so not for requests for specific board, say with eight.",
                    "label": 0
                },
                {
                    "sent": "8 by 8 board or 10 by 10 or something, but generically show it for every possible and for all values of.",
                    "label": 0
                },
                {
                    "sent": "If the board Q is obtained by mirroring about P, which is what this formula here says, then a coloring Q when what we get from a mirrored board is also a coloring here.",
                    "label": 0
                },
                {
                    "sent": "So it is also satisfied or coloring formula.",
                    "label": 0
                },
                {
                    "sent": "K So what happens quite frequently unit with theorem prover and and it runs and runs and runs.",
                    "label": 0
                },
                {
                    "sent": "You don't know what to do.",
                    "label": 0
                },
                {
                    "sent": "So what you try?",
                    "label": 0
                },
                {
                    "sent": "You try various magic flags improvements, things like that.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "It pops out.",
                    "label": 0
                },
                {
                    "sent": "So it's one of the.",
                    "label": 0
                },
                {
                    "sent": "Not so scientific things, perhaps because you have often to really play around with the flags in order to make the thing happen.",
                    "label": 0
                },
                {
                    "sent": "And even worse, and This is why I show you this example here.",
                    "label": 0
                },
                {
                    "sent": "So what is here?",
                    "label": 1
                },
                {
                    "sent": "So this is this is the straightforward translation of these formulas here.",
                    "label": 0
                },
                {
                    "sent": "That's not a big deal that can be written easily, it's just the plus.",
                    "label": 0
                },
                {
                    "sent": "Symbol is written as plus.",
                    "label": 0
                },
                {
                    "sent": "Minus is written as minus and so on.",
                    "label": 0
                },
                {
                    "sent": "But so this is a general purpose fear improver, so to speak.",
                    "label": 0
                },
                {
                    "sent": "And they are not so general purpose at all, quite often.",
                    "label": 0
                },
                {
                    "sent": "Because.",
                    "label": 0
                },
                {
                    "sent": "They lack built-in or efficient reasoning capabilities for integers, so obviously this problem has to do with a little bit with integer arithmetic.",
                    "label": 0
                },
                {
                    "sent": "You've seen the permutation formula.",
                    "label": 0
                },
                {
                    "sent": "It sets North to N + 1 minus sends I to N + 1 -- A, so a little bit of arithmetic is involved in that.",
                    "label": 0
                },
                {
                    "sent": "But of course it's first order logic and various no predefined meaning of the symbols of arithmetic of less or equal of less value of all the symbols.",
                    "label": 0
                },
                {
                    "sent": "But of course you have an interpretation in mind, but just does not apply to theorem provers, and so you have to tell the system what it means, or at least you have to tell the system sufficiently.",
                    "label": 0
                },
                {
                    "sent": "Many of these facts about integers so that it will be able to find the proof.",
                    "label": 0
                },
                {
                    "sent": "OK, so and this is what you do.",
                    "label": 0
                },
                {
                    "sent": "You end up writing down axioms or things that are just true about the integers.",
                    "label": 0
                },
                {
                    "sent": "Hoping that you provide enough facts about the integers.",
                    "label": 0
                },
                {
                    "sent": "So what the proof can be found in automatically.",
                    "label": 0
                },
                {
                    "sent": "Yeah, so he's actually quite obvious ones.",
                    "label": 0
                },
                {
                    "sent": "So, but less equal relation with smaller relation is irreflexive and transitive.",
                    "label": 0
                },
                {
                    "sent": "And things like that.",
                    "label": 0
                },
                {
                    "sent": "But sometimes you need to also some other facts better.",
                    "label": 0
                },
                {
                    "sent": "Perhaps not that obvious, but which are generically true of integers, of course.",
                    "label": 0
                },
                {
                    "sent": "Yeah, so this is actually a research topic.",
                    "label": 0
                },
                {
                    "sent": "This is how to add integer reasoning support to a few improver.",
                    "label": 0
                },
                {
                    "sent": "It's currently actively researched into.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I think this was what I wanted to say.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "How about this one here?",
                    "label": 0
                },
                {
                    "sent": "OK, now we have an idea.",
                    "label": 0
                },
                {
                    "sent": "Of what, what?",
                    "label": 0
                },
                {
                    "sent": "What theorems proofs might be useful for to analyze specifications very generally?",
                    "label": 0
                },
                {
                    "sent": "Here presented in the setting.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Of constraint satisfaction.",
                    "label": 0
                },
                {
                    "sent": "Now comes the more technical part of a talk or mom.",
                    "label": 0
                },
                {
                    "sent": "More method oriented part of the talk if you will.",
                    "label": 0
                },
                {
                    "sent": "And I thought I structure it.",
                    "label": 0
                },
                {
                    "sent": "Bye.",
                    "label": 0
                },
                {
                    "sent": "The task of building a first order theorem prover.",
                    "label": 1
                },
                {
                    "sent": "So what would you need if you would be asked to build a first order theorem prover?",
                    "label": 0
                },
                {
                    "sent": "Of course you need to fix an input language that you allow to write formulas in.",
                    "label": 1
                },
                {
                    "sent": "You can fix the semantics to define what the formulas mean, which will be always classical semantics here or slight extensions of that.",
                    "label": 1
                },
                {
                    "sent": "Determined by the side services from the theorem prover.",
                    "label": 1
                },
                {
                    "sent": "So what questions we would like for prover be able to answer it would like approval.",
                    "label": 0
                },
                {
                    "sent": "For instance, be able to answer.",
                    "label": 0
                },
                {
                    "sent": "Yes, this is a theorem or say no, this is not a theorem.",
                    "label": 0
                },
                {
                    "sent": "For that reason these are rather different tasks, but forgiven from my application.",
                    "label": 1
                },
                {
                    "sent": "You would perhaps identify what services are required to satisfactory to address the needs of an application area in a satisfying way.",
                    "label": 0
                },
                {
                    "sent": "Well then it gets operational.",
                    "label": 0
                },
                {
                    "sent": "Design the calculus for logic and for services we have identified before Vera calculus.",
                    "label": 0
                },
                {
                    "sent": "Of course you know this is kind of a high level description of a logical analysis algorithm, so that how do you combine formulas and filter relations and things like that, but also including from the viewpoint of automated theorem proving redundancy criteria to keep the search space small.",
                    "label": 0
                },
                {
                    "sent": "Then comes to speak of the.",
                    "label": 0
                },
                {
                    "sent": "Engineering slash scientific aspect of that you want to make sure that the calculus you have defined is indeed correct with respect to the services you want it to deliver.",
                    "label": 0
                },
                {
                    "sent": "So you need typically soundness and completeness proofs with respect to the logic in the services possible.",
                    "label": 0
                },
                {
                    "sent": "Finally, not finally well, while I calculus serves as a kind of a high level description.",
                    "label": 0
                },
                {
                    "sent": "For reasoning algorithm, in order to bring it on a computer, various details need to be figured out.",
                    "label": 0
                },
                {
                    "sent": "How to arrange for search space?",
                    "label": 0
                },
                {
                    "sent": "How to get rid of all these, or how to?",
                    "label": 1
                },
                {
                    "sent": "Make all this nondeterminism deterministic and so on, and finally implement it.",
                    "label": 0
                },
                {
                    "sent": "So what I will do for the rest of this talk is go through the right items on this slide.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Now I have to talk a little about input languages and services.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, the most basic input language Maps you can think of is.",
                    "label": 0
                },
                {
                    "sent": "Propositional logic.",
                    "label": 0
                },
                {
                    "sent": "So you give a formula tuba propositional logic to a theorem prover, say and ask a question.",
                    "label": 0
                },
                {
                    "sent": "Is it satisfy aghbal or not, and the theorem prover produces yes or no.",
                    "label": 1
                },
                {
                    "sent": "So Phi is propositional logic formula and one question would be, is it satisfiable as set?",
                    "label": 1
                },
                {
                    "sent": "But that's not the only interesting.",
                    "label": 0
                },
                {
                    "sent": "Questions.",
                    "label": 0
                },
                {
                    "sent": "So there are more.",
                    "label": 1
                },
                {
                    "sent": "Services one of them is minimal model computation.",
                    "label": 0
                },
                {
                    "sent": "So when the formula is satisfy aghbal, it might have many models and some models might be bigger than other models.",
                    "label": 0
                },
                {
                    "sent": "And why is it interesting to have minimal models?",
                    "label": 0
                },
                {
                    "sent": "Well, one application of that, for instance, is diagnosis say we have a circuit modeled in propositional logic or any other system modeled in predicate logic in propositional logic.",
                    "label": 1
                },
                {
                    "sent": "But the system does not behave as issued, so it's time to diagnose a circuit.",
                    "label": 0
                },
                {
                    "sent": "Say and this can be reformulated as a propositional satisfiability problem.",
                    "label": 0
                },
                {
                    "sent": "Well in smaller models.",
                    "label": 0
                },
                {
                    "sent": "In this case, or minimal models means pointing out just very essential parts that might have broken, so it's perhaps not all circuits have.",
                    "label": 0
                },
                {
                    "sent": "Program doesn't matter, but just one circuit is broken to explain the faulty behavior, and this translates back into a minimal model.",
                    "label": 0
                },
                {
                    "sent": "Computation task.",
                    "label": 0
                },
                {
                    "sent": "Or maximally consistent subsets which has, for instance, applications in in debugging of specifications you've written down a formula and it's unsatisfiable all we would expect it should not be unsatisfiable.",
                    "label": 0
                },
                {
                    "sent": "So very slow, buggy.",
                    "label": 0
                },
                {
                    "sent": "So these bugs that we can perhaps easier be found if one identifies a maximal set of maximal subformula forgiven formula but still is satisfy aghbal to identify the problem.",
                    "label": 0
                },
                {
                    "sent": "Creeps in OK and this of course is also a research topic on its own.",
                    "label": 0
                },
                {
                    "sent": "People come up with clever methods to build theorem provers for propositional logic.",
                    "label": 0
                },
                {
                    "sent": "It could be based on BDD.",
                    "label": 1
                },
                {
                    "sent": "Stochastic methods which have a lot of coin flipping in it to guess and refine candidate interpretations in order to find a model formula formula.",
                    "label": 0
                },
                {
                    "sent": "Orbax so called the PLL method.",
                    "label": 0
                },
                {
                    "sent": "When and it's such a simple logic, while another question is why people are interested in these all different methods and the answer is simply because for propositional formula can be B can be very big 10s of thousands of.",
                    "label": 0
                },
                {
                    "sent": "Variables and hundreds of thousands of formulas, and these formulas arise quite naturally in model checking of hardware, for instance, or even software.",
                    "label": 0
                },
                {
                    "sent": "So I don't know if redshift Corey has already talked about CTL.",
                    "label": 0
                },
                {
                    "sent": "Or Pepsi will talk about that tomorrow.",
                    "label": 0
                },
                {
                    "sent": "I know it's on his on his slides, so CTL model checking problems can be translated into propositional logic as well, and then the big formulas come up for.",
                    "label": 0
                },
                {
                    "sent": "Realistic.",
                    "label": 0
                },
                {
                    "sent": "Designs.",
                    "label": 0
                },
                {
                    "sent": "OK, so actually I'm talking about a method.",
                    "label": 0
                },
                {
                    "sent": "Now I'm talking about VPL because I thought it's an overview course about automated reasoning and one should have heard about that because it's such an important method.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Now, the easiest way to explain the PLL, well, at least I find that is too.",
                    "label": 1
                },
                {
                    "sent": "Presented as a semantic tree method, you will see in a minute what semantic tree is because it will evolve on the left side of the screen here.",
                    "label": 1
                },
                {
                    "sent": "By way of example, assume that these of free for propositional formulas better.",
                    "label": 0
                },
                {
                    "sent": "Here.",
                    "label": 0
                },
                {
                    "sent": "There are clauses in this case where connected by and.",
                    "label": 0
                },
                {
                    "sent": "And the task is to analyze if the conjunction of these formulas here is satisfied.",
                    "label": 0
                },
                {
                    "sent": "And of course the ABC and D's there are propositional so they can be either true or false.",
                    "label": 0
                },
                {
                    "sent": "Now the construction starts with an empty tree and was always intended intuition behind these semantic trees.",
                    "label": 1
                },
                {
                    "sent": "They represent interpretations, and initially the empty tree represents an interpretation that assigns false to every propositional variable, so a is false piece falsies false and D is false.",
                    "label": 0
                },
                {
                    "sent": "Now, from a semantic point of view, what PLL does is it checks if the current interpretation that is derived from the current re steady slice across it satisfies these formulas.",
                    "label": 0
                },
                {
                    "sent": "And of course if everything is false by convention, which is what this empty set stands for, then.",
                    "label": 0
                },
                {
                    "sent": "This disjunction, A or B is false OK.",
                    "label": 0
                },
                {
                    "sent": "So what deep?",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Well then does is it tries to repair this situation by carrying out a split by carrying out a case analysis.",
                    "label": 0
                },
                {
                    "sent": "So a could be true, or a could be false in the left side is the case where a is true and the right side is where a is false.",
                    "label": 0
                },
                {
                    "sent": "In written like that.",
                    "label": 0
                },
                {
                    "sent": "So now if you follow down the left branch, that interpretation.",
                    "label": 0
                },
                {
                    "sent": "Is refined a little bit so it now says a is true, but still piece Falsies falls into useful as everything else is false.",
                    "label": 0
                },
                {
                    "sent": "What happens now?",
                    "label": 0
                },
                {
                    "sent": "So we made some progress with respect to the formula A or B because it is satisfied now, but the red line here is problematic because C is still false, so this is false and also because a is true now, not a is false, so the whole disjunction is false, so it's time to.",
                    "label": 0
                },
                {
                    "sent": "Repair the.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Reputation again.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Should add and the repairing is done in a guided way, so we so DPL really looks at the red formula here and it could try to repair it with C or with not a, but it can't repair with, not cannot repair with Note 8 because we a is already along the branch here, so you can't a path A and not a on the same branch.",
                    "label": 0
                },
                {
                    "sent": "Let's just not good, but it can repair this, see.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, what we have here, I've developed it a little further.",
                    "label": 0
                },
                {
                    "sent": "Now you see a star here at this branch and the star means that the branch is closed because it is an elementary contradiction.",
                    "label": 0
                },
                {
                    "sent": "Why's this because a contradicts this one here and not C contradicts this one here and there is no way to repair the interpretation beyond this leave here because it would have to add Eva C or not a.",
                    "label": 0
                },
                {
                    "sent": "But if that is not possible because we have.",
                    "label": 0
                },
                {
                    "sent": "So this thing fixed assignments for A&C already.",
                    "label": 0
                },
                {
                    "sent": "OK, but going down the left branch rest for problems with this branch with this.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Love Fred clause again and so we interpretation.",
                    "label": 0
                },
                {
                    "sent": "So with semantic trees extended, again, we have a CD.",
                    "label": 0
                },
                {
                    "sent": "And this feed is indeed is a satisfying assignment for all four formulas over method stops at this point.",
                    "label": 0
                },
                {
                    "sent": "Similarly as before.",
                    "label": 0
                },
                {
                    "sent": "With this branch, it gets closed.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And if you wish, you could develop the right side a little bit further and compute another model.",
                    "label": 0
                },
                {
                    "sent": "So we're just B is true.",
                    "label": 0
                },
                {
                    "sent": "This would also be a model of.",
                    "label": 0
                },
                {
                    "sent": "Offer formula above.",
                    "label": 0
                },
                {
                    "sent": "OK, I think I said everything here.",
                    "label": 0
                },
                {
                    "sent": "A branch stands for an interpretation.",
                    "label": 1
                },
                {
                    "sent": "The purpose of splitting is to satisfy a clause that is currently falsified in the current candidate and you close the branches.",
                    "label": 1
                },
                {
                    "sent": "Some clauses plainly falsified by it, so these are.",
                    "label": 0
                },
                {
                    "sent": "The basic ingredients of the PLL algorithm device tin for 1960s or so, but it's still.",
                    "label": 0
                },
                {
                    "sent": "At least among the best methods to build propositional SAT solvers.",
                    "label": 0
                },
                {
                    "sent": "With some improvements.",
                    "label": 0
                },
                {
                    "sent": "Excuse me Oh yeah, sure thanks.",
                    "label": 0
                },
                {
                    "sent": "Yep.",
                    "label": 0
                },
                {
                    "sent": "At anytime please interrupt me for questions more than happy to take questions.",
                    "label": 0
                },
                {
                    "sent": "Yeah, GPL license for Davies, Putnam, Logeman Loveland.",
                    "label": 0
                },
                {
                    "sent": "Which are for sure, yeah.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So one thing I should say here, so here I said it would split on C and not C, But in reality the algorithm is a little bit smarter and it would just not split here, but deterministically derive C from a here and not do this on the right side here.",
                    "label": 0
                },
                {
                    "sent": "And I would also.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I'd like to talk about.",
                    "label": 0
                },
                {
                    "sent": "Two improvements that are really except essential to make it work in practice.",
                    "label": 0
                },
                {
                    "sent": "One is called lemma learning.",
                    "label": 0
                },
                {
                    "sent": "So, but let my learning does the following.",
                    "label": 0
                },
                {
                    "sent": "So here I have again with semantic tree from above.",
                    "label": 0
                },
                {
                    "sent": "Do you naughty?",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "This is closed.",
                    "label": 0
                },
                {
                    "sent": "Now you look at the reasons why the stars are here.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "This is close by C or not a.",
                    "label": 0
                },
                {
                    "sent": "And this is close by.",
                    "label": 0
                },
                {
                    "sent": "We are not see.",
                    "label": 0
                },
                {
                    "sent": "Or not a. OK. No.",
                    "label": 0
                },
                {
                    "sent": "Lemma learning means looking at the closed branches and looking at the formulas that cost them close and combine these formulas so they can be combined.",
                    "label": 0
                },
                {
                    "sent": "These two formulas can be combined into a single formula.",
                    "label": 0
                },
                {
                    "sent": "D or not a.",
                    "label": 0
                },
                {
                    "sent": "By an inference rule called resolution, which we will see later in detail.",
                    "label": 0
                },
                {
                    "sent": "No.",
                    "label": 0
                },
                {
                    "sent": "I claim that this formula here is a consequense.",
                    "label": 0
                },
                {
                    "sent": "Of these two formulas here, and therefore it is sound to add it to the existing to the formulas in that were given in the 1st place.",
                    "label": 0
                },
                {
                    "sent": "And why is it a consequence?",
                    "label": 0
                },
                {
                    "sent": "Um?",
                    "label": 0
                },
                {
                    "sent": "No, something is wrong here.",
                    "label": 0
                },
                {
                    "sent": "CRTR see.",
                    "label": 0
                },
                {
                    "sent": "No, it's it's OK.",
                    "label": 0
                },
                {
                    "sent": "So what it does is it looks at for two clauses.",
                    "label": 0
                },
                {
                    "sent": "Here are two formulas here, sees complementary literals and cuts them out, and collects forest.",
                    "label": 0
                },
                {
                    "sent": "It is a constant because if C is false case and if C is false, then any model must satisfy not A and if it satisfies not a then it will also satisfy not a or D and if C is true.",
                    "label": 0
                },
                {
                    "sent": "Then from this formula here, this literal goes away, so to speak, and what it leaves you with D or not a, which is here.",
                    "label": 0
                },
                {
                    "sent": "Service is a sound operation and why would you do that?",
                    "label": 0
                },
                {
                    "sent": "Because.",
                    "label": 0
                },
                {
                    "sent": "It allows us to.",
                    "label": 0
                },
                {
                    "sent": "Derive an equivalent.",
                    "label": 0
                },
                {
                    "sent": "Tree earlier.",
                    "label": 0
                },
                {
                    "sent": "Because now after the A has been made.",
                    "label": 0
                },
                {
                    "sent": "So suppose you add this formula to the input clause set.",
                    "label": 0
                },
                {
                    "sent": "To reiterate, Superformula set from VA, you can immediately conclude.",
                    "label": 0
                },
                {
                    "sent": "Mystery here by using this clause to close this branch here.",
                    "label": 0
                },
                {
                    "sent": "And this example is not very meaningful.",
                    "label": 0
                },
                {
                    "sent": "I just wanted to make the point that this T PLL method can be combined with other inference rules with some resolution inference rules, and these are very powerful.",
                    "label": 0
                },
                {
                    "sent": "Miss.",
                    "label": 0
                },
                {
                    "sent": "To add consequences to arrive at the same to arrive at shorter trees later.",
                    "label": 0
                },
                {
                    "sent": "So the slogan is avoid making the same mistake twice.",
                    "label": 0
                },
                {
                    "sent": "And this is in particular particularly useful if lemma learning is combined with another of these.",
                    "label": 0
                },
                {
                    "sent": "Practically important.",
                    "label": 0
                },
                {
                    "sent": "I. Mechanisms called restarts.",
                    "label": 0
                },
                {
                    "sent": "Or better set randomized restarts.",
                    "label": 0
                },
                {
                    "sent": "The idea is.",
                    "label": 0
                },
                {
                    "sent": "To start with proof search for awhile, but because the formula is big, it may run for days for weeks or or even longer.",
                    "label": 0
                },
                {
                    "sent": "And you derive lemmas along the way, so these new formulas.",
                    "label": 0
                },
                {
                    "sent": "But then you give up and you start again.",
                    "label": 0
                },
                {
                    "sent": "But this time arranging the search in a little bit different way, but and this makes sense in particular because.",
                    "label": 0
                },
                {
                    "sent": "With all these lemmas derived, one will avoid deriving.",
                    "label": 0
                },
                {
                    "sent": "The trees of certain branches in the trees that had not led to success in the previous run.",
                    "label": 0
                },
                {
                    "sent": "So in combination this is a very very good technique.",
                    "label": 0
                },
                {
                    "sent": "Sure.",
                    "label": 0
                },
                {
                    "sent": "Yes, exactly.",
                    "label": 0
                },
                {
                    "sent": "Yeah, that's one of the key ingredients.",
                    "label": 0
                },
                {
                    "sent": "You keep the lemmas learned.",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "So this was actually a little.",
                    "label": 0
                },
                {
                    "sent": "Detour.",
                    "label": 0
                },
                {
                    "sent": "But I said I thought talking about propositional logic.",
                    "label": 0
                },
                {
                    "sent": "I must talk about VPL, at least an about limasan restarts, because these are the basic things one needs to have heard of when being interested in this stuff.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK. Another one.",
                    "label": 0
                },
                {
                    "sent": "Still back one level now at the overview of languages and services description logics.",
                    "label": 1
                },
                {
                    "sent": "OK formulas this time.",
                    "label": 0
                },
                {
                    "sent": "Are so-called description logics.",
                    "label": 0
                },
                {
                    "sent": "You will hear a lot of description logics, I presume in a later lecture.",
                    "label": 1
                },
                {
                    "sent": "By Morris Pancho in knowledge or knowledge representation.",
                    "label": 0
                },
                {
                    "sent": "But here is just a little appetizer if you will.",
                    "label": 1
                },
                {
                    "sent": "So description, logic, formulas they came in.",
                    "label": 0
                },
                {
                    "sent": "Two kinds, if you will be coming T boxes in eight boxes.",
                    "label": 0
                },
                {
                    "sent": "And a tee box allows to specify a terminology or ontology as it is fashionably called where you have these objects in the domain.",
                    "label": 0
                },
                {
                    "sent": "Like all these professors, students and BC persons and they are arranged say in graphical in a tree like way and description.",
                    "label": 0
                },
                {
                    "sent": "Logics provide a language to express such ontologies in a very precise and formal way.",
                    "label": 0
                },
                {
                    "sent": "And they have also gained a lot of popularity recently in the semantic Web.",
                    "label": 0
                },
                {
                    "sent": "It is because all the L1 over standard languages.",
                    "label": 0
                },
                {
                    "sent": "Is actually nothing but quite expressive description logic language.",
                    "label": 0
                },
                {
                    "sent": "So in description logics, one can say for instance, if someone is a professor and there is a supervised thing which is a student, professors that have professors that supervise students are busy persons.",
                    "label": 0
                },
                {
                    "sent": "And in a box 18 boxes, one makes concrete assertions instances, so to speak, of a proper specification.",
                    "label": 0
                },
                {
                    "sent": "You say that P is a professor and that P&S are in the supervised supervises relation.",
                    "label": 0
                },
                {
                    "sent": "No, and were recently services you would like to have from assistant is like is the T box in a box.",
                    "label": 0
                },
                {
                    "sent": "If you read it as a combined formula is it satisfy aghbal?",
                    "label": 0
                },
                {
                    "sent": "If it's not, something is probably wrong with the specification.",
                    "label": 0
                },
                {
                    "sent": "Does C subsume D?",
                    "label": 0
                },
                {
                    "sent": "Subsumption means so, C subsumes, D is if C is more general than the.",
                    "label": 0
                },
                {
                    "sent": "So in this example, busy person is more general than the expression on the left hand side here, and this is obvious becomes when you read this as an implication here, or if you read this as a set containment here.",
                    "label": 0
                },
                {
                    "sent": "Algorithms for that reasoning alphabet are predominantly Tableau algorithms like the ones are achieved.",
                    "label": 0
                },
                {
                    "sent": "Corey has talked about.",
                    "label": 0
                },
                {
                    "sent": "And it's in fact.",
                    "label": 0
                },
                {
                    "sent": "Many description logics are nothing but syntactically slightly different notation for modal logics.",
                    "label": 0
                },
                {
                    "sent": "OK, so there is a one to one correspondence between modal logics and such description logics here.",
                    "label": 0
                },
                {
                    "sent": "So the existential quantifier here just becomes madiam and OK.",
                    "label": 0
                },
                {
                    "sent": "I mean a diamond, but has the name supervisor, so in reality it's multi modal logic where one has many diamonds.",
                    "label": 0
                },
                {
                    "sent": "Different names here and this.",
                    "label": 0
                },
                {
                    "sent": "Here we come.",
                    "label": 0
                },
                {
                    "sent": "Logical operators.",
                    "label": 0
                },
                {
                    "sent": "This is a good thing.",
                    "label": 0
                },
                {
                    "sent": "Which forces us to have a break now, right?",
                    "label": 0
                },
                {
                    "sent": "Oh now let's see.",
                    "label": 0
                },
                {
                    "sent": "So let me conclude that so this about description, logic so.",
                    "label": 0
                },
                {
                    "sent": "Even if you don't remember the description logic formula that was here on the slide.",
                    "label": 0
                },
                {
                    "sent": "I. Ken mentioned that it has to do a lot with first order logic.",
                    "label": 0
                },
                {
                    "sent": "Translation of description logics.",
                    "label": 0
                },
                {
                    "sent": "Into first order logic.",
                    "label": 0
                },
                {
                    "sent": "So the formula.",
                    "label": 0
                },
                {
                    "sent": "Post professor.",
                    "label": 0
                },
                {
                    "sent": "It exists.",
                    "label": 0
                },
                {
                    "sent": "Supervisors student.",
                    "label": 1
                },
                {
                    "sent": "Busy person.",
                    "label": 0
                },
                {
                    "sent": "Well, supposedly, just in case you would not like this syntax, it can be translated into into an equivalent 1st order logic formula.",
                    "label": 0
                },
                {
                    "sent": "And the formula is this.",
                    "label": 0
                },
                {
                    "sent": "Silly jokes for all X.",
                    "label": 0
                },
                {
                    "sent": "If professor of X.",
                    "label": 0
                },
                {
                    "sent": "And there is a Y.",
                    "label": 0
                },
                {
                    "sent": "Search that.",
                    "label": 0
                },
                {
                    "sent": "Supervisors XY and.",
                    "label": 0
                },
                {
                    "sent": "Student of Y. OK, so this is obviously the translation of this one here.",
                    "label": 0
                },
                {
                    "sent": "Implies.",
                    "label": 0
                },
                {
                    "sent": "Easy person.",
                    "label": 0
                },
                {
                    "sent": "Of X. OK. Now say if the tableau prover is currently broken, or.",
                    "label": 0
                },
                {
                    "sent": "Doesn't run on your machine, but you have a first order theorem prover handy.",
                    "label": 0
                },
                {
                    "sent": "You could translate your description logic formula into a first order logic formula and give it to.",
                    "label": 0
                },
                {
                    "sent": "General Purpose 1st order fuel improver, but the same caveat applies as said before.",
                    "label": 0
                },
                {
                    "sent": "This is not necessarily a good idea because we stop law.",
                    "label": 0
                },
                {
                    "sent": "Reason is are really optimized with respect to efficient inference rules.",
                    "label": 0
                },
                {
                    "sent": "Data structures just for description logics and Moreover they have mechanisms built into that.",
                    "label": 0
                },
                {
                    "sent": "Let them even decide these logics.",
                    "label": 0
                },
                {
                    "sent": "So whenever you supply such a description or should formula, you can be sure you get you answer back.",
                    "label": 0
                },
                {
                    "sent": "It can be yes or no.",
                    "label": 0
                },
                {
                    "sent": "Say two satisfiability problems, whereas usability when the translation is supplied to 1st order theorem prover with does not necessarily hold anymore.",
                    "label": 0
                },
                {
                    "sent": "Because of incompleteness of.",
                    "label": 0
                },
                {
                    "sent": "And decidability of 1st order logic it may only terminate in some cases.",
                    "label": 0
                },
                {
                    "sent": "But if it's service viable, performance satisfiability might not might not terminate.",
                    "label": 0
                },
                {
                    "sent": "OK, so.",
                    "label": 0
                },
                {
                    "sent": "Yeah, I think this is what I wanted to add.",
                    "label": 0
                },
                {
                    "sent": "To this and here I have one more item here.",
                    "label": 0
                },
                {
                    "sent": "So much research challenges just to push push the expressivity of description logics to add more and more constructs to a language so that it can talk about integers.",
                    "label": 0
                },
                {
                    "sent": "Say it's called concrete domains when you've seen before, integers are very important in recently, so people are thinking about extending description logics with integer reasoning as well, and devising reasoning procedures for that so that decidability is still.",
                    "label": 0
                },
                {
                    "sent": "Given OK.",
                    "label": 0
                },
                {
                    "sent": "But I don't want to say more about this year because I said.",
                    "label": 0
                },
                {
                    "sent": "This will be covered in an later lecture and I would suggest we have a break now.",
                    "label": 0
                },
                {
                    "sent": "And yes.",
                    "label": 0
                },
                {
                    "sent": "Strict effect.",
                    "label": 0
                },
                {
                    "sent": "It should surely allow you to get a solution quicker because that's why.",
                    "label": 0
                },
                {
                    "sent": "I don't understand the paradox.",
                    "label": 0
                },
                {
                    "sent": "Certain constraints.",
                    "label": 0
                },
                {
                    "sent": "Where is in fact constraints is being contested.",
                    "label": 0
                },
                {
                    "sent": "Contracts Pencil was an educated solution quicker.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "I see.",
                    "label": 0
                },
                {
                    "sent": "Let's see.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "Invoke invoke constraint case.",
                    "label": 0
                },
                {
                    "sent": "But the language was was fixed, so it says here here is for language.",
                    "label": 0
                },
                {
                    "sent": "But constraint solver can decide this language anuket can add additional constraints.",
                    "label": 0
                },
                {
                    "sent": "To it so that symmetric solutions are excluded, for instance in the N Queens problem, But the input language is the same all the time and.",
                    "label": 0
                },
                {
                    "sent": "And if you add constraints for formula is more and more it's difficult to.",
                    "label": 0
                },
                {
                    "sent": "Becomes more and more difficult to find models for it because it's further constrained.",
                    "label": 0
                },
                {
                    "sent": "Anne.",
                    "label": 0
                },
                {
                    "sent": "But at the same time it cuts away search space if you will, which is the value of making formulas stronger.",
                    "label": 0
                },
                {
                    "sent": "In contrast, I've talked about research challenge to make language speaker to allow more and more construction, but this I meant.",
                    "label": 0
                },
                {
                    "sent": "The app isn't meant to make the language bigger, but you can say more things.",
                    "label": 0
                },
                {
                    "sent": "So this is on a different.",
                    "label": 0
                },
                {
                    "sent": "And a different scale, so to speak, on a different parameter access.",
                    "label": 0
                },
                {
                    "sent": "Yeah so, but changes you want to have your language more expressive.",
                    "label": 0
                },
                {
                    "sent": "You want to now have a description, description, logics that can't reason about integers, say.",
                    "label": 0
                },
                {
                    "sent": "But now you want to extend the language so that you can talk in a limited way about integers so that you can say things, but you couldn't say before make the language more expressive while preserving the satisfiability of the language.",
                    "label": 0
                },
                {
                    "sent": "I'm not sure if this answers your question.",
                    "label": 0
                },
                {
                    "sent": "Happy to continue talking.",
                    "label": 0
                },
                {
                    "sent": "OK, let's make a break.",
                    "label": 0
                }
            ]
        }
    }
}