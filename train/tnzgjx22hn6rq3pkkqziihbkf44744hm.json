{
    "id": "tnzgjx22hn6rq3pkkqziihbkf44744hm",
    "title": "From Automated Verification to Automated Design",
    "info": {
        "author": [
            "Moshe Y. Vardi, Rice University"
        ],
        "published": "Nov. 15, 2010",
        "recorded": "May 2010",
        "category": [
            "Top->Computer Science->Artificial Intelligence"
        ]
    },
    "url": "http://videolectures.net/icaps2010_vardi_design/",
    "segmentation": [
        [
            "Good morning.",
            "Anne.",
            "When we set out to look for invited speakers for this conference we wanted, we wanted to find someone who could help us make the connection to the world of.",
            "Formal methods in program analysis.",
            "And help help push it forward.",
            "And the natural candidate for this is Moshe Vardi, who is one of the leading researchers in the area of program verification and synthesis, and also many other areas.",
            "He was one of the most prominent researchers in the still is, but in theory of databases in automata theory and pushing it forward to becoming a practical tool for computer science.",
            "In theory of computer science, and he was also involved in the past.",
            "In effort to bring these two communities together, he was one of the organizers of the.",
            "Fix tool.",
            "Seminar on.",
            "A bounded model right on the on the relationship between planning and and program verification and synthesis, which focused mostly on bounded model checking's and this is the area bounded.",
            "Model checking is the area where the there's been.",
            "Most synergy between these two fields.",
            "And we believe that there's much room for synergy in the important problem of program synthesis.",
            "An therefore we've asked Moshe was one of the experts in this area.",
            "One of the most prominent experts in this area to give a talk to tell us a little bit about what's going on in this area, and there's been some major results there in the past.",
            "Think specially since around 2000, right?",
            "Some an share will hopefully help us understand this area better for us to learn from it.",
            "And hopefully maybe.",
            "Contribute to it.",
            "So let machine.",
            "Thank you very much.",
            "Thank you for the kind introduction.",
            "Thank you for the invitation.",
            "I always wanted to come to Icaps.",
            "Just somehow never worked out, so I'm really glad you gave me this opportunity to be.",
            "I've been in other conference where.",
            "Someone from another field is coming.",
            "There is a little always a little fulfilling of kind of a bit of a local chauvinism that every community feel very good about what it's doing and it's convinced what it is doing is better than what everybody else is doing.",
            "So it's a natural feeling.",
            "I have it too, when somebody else is coming to conference in my community, so I would just ask you to suspend.",
            "The local shopping is a little bit because I'm coming here.",
            "Mission of peace.",
            "Anne, what actually?",
            "I will try to do is not so much to focus exactly what happened on the last 10 years, but actually to step back and look in something that's been happening in this area for the last 50 years.",
            "Just to give."
        ],
        [
            "A little over an overview where we started and where we are.",
            "And then we have to start with verification because partly this is what gives this area.",
            "I think some credibility the obvious in program verification or the last 25 years and the basic idea is we have a program we have some kind of formal specific specification and we want to show that the program is in the model.",
            "It satisfied the specifications.",
            "OK, This is why it's called model checking.",
            "And they.",
            "The progress has been initially on using temporal specification using temporal logic and finite sets programs.",
            "And then we've seen expansion of the last 10 years or so on various classes of infinite set programs.",
            "And our tools SMV spin, slam etc.",
            "And we see today increasing impact on industrial design practices much in the hardware area.",
            "Every today every hardware design company uses formal methods in one way or another, an also in software Microsoft to ship something called static device verifier which they shipped today to the device developers.",
            "Now there is a basic however difficulty with verification that first of all you spend enormous.",
            "Effort designing a program.",
            "And then you model check it.",
            "It never passed.",
            "It always fails because you have errors and then there is very expensive to correct errors.",
            "So it's good that we have formal verification.",
            "But in some sense it hasn't made a big change in how the programming design in the first place."
        ],
        [
            "Now there is again computer science which somehow to automate the design.",
            "We would like to start from the specification.",
            "And then form the specification in a principle way.",
            "Driver program there will be what correct by design you designed in such a way that it's guaranteed to satisfy the specification.",
            "So there is no need for verification.",
            "There's only four redesign.",
            "The program is correct by design.",
            "If we could do it algorithmically.",
            "Then all that will be left is to write specification.",
            "Simplification is nontrivial, does.",
            "It doesn't mean that suddenly we have eliminate the difficulty, but we've gone up in the level of abstraction we become, we taking declarative programming to delimit you say what you want the program to do rather than how it should be.",
            "Do it.",
            "There was a very beautifully written paper by David derail a couple of years ago.",
            "IEEE computer.",
            "Can programming be liberated.",
            "Can we really raise any significant way there?"
        ],
        [
            "Level of abstraction programming.",
            "So we really write declarative specification and this also become program synthesis.",
            "And this is the idea that you can find probably appearing the first time in the late 60s.",
            "How to go again for mechanically phone specification to a program that will be correct by design.",
            "An initial.",
            "Initially it was.",
            "It was applied to what we call translate Trans Formational program program.",
            "They have input and I'm supposed to produce some output.",
            "And their first of all you have to do the specification is the relationship between the input and output and you start with the statement of realize ability that forelegs.",
            "There exists such some white satisfier ecstatic by the precondition, then X&Y will satisfy the post condition.",
            "And once you have such approved the idea, typically there is to extract the program from the proof, and for some you know there is a lot of people use constructive logic there because not even logic says that every essential quantifier has to be proven constructively, since that's the program.",
            "Now what we saw in the in the in the 80s that people start thinking and this was general trend in verification.",
            "People moving from reasoning about input output program to reasoning about ongoing programs.",
            "So people start to realize that the classical model of computation that typically with in terms of Turing machine you have an input output tape is a very poor description of the computation we see around us today.",
            "You know this, this machine is not clear what is input or the food it interacts with me.",
            "For its lifetime, and this is true today for almost any computer that you made, it continue interacts with some environment, so this we call it ongoing program.",
            "People call it open system reactive systems, and so this is where temporal specification come into the picture."
        ],
        [
            "And this was this insight came was put forward by the American oily who tragically passed away prematurely last fall in 1977.",
            "He proposed to use temporal logic with the logic used by philosophers, adopted it to describe ongoing computation.",
            "If there was not even good term that I'm the coolest cyclic programs.",
            "But today I said we talk about about reactive system open systems.",
            "And the idea is to talk with your basic logic so your basic assertions Proposition X = 5, Y is greater than Z and then at Temple Connective next and eventually always until and it's a logic view is very simple syntax and I've just build a pictures.",
            "So next, just you assume a discrete time trace.",
            "Their real time logics, but I will not talk about real time here, so we assume the time is discrete.",
            "Next just means if this is the point where you are making the assertion fee has to be true in the next time point.",
            "The next time point could be the next Clock tick tomorrow, next year, whatever is your temporal resolution, and until it's a binary connectivity that fuel hold feed hold 3:50 until size 2.",
            "So this is this is Temple, this is linear temporal logic.",
            "There other temporal logic but Alpha."
        ],
        [
            "Personally know temporal logic and now we can write things such as always.",
            "It is not the case that process one and process two are simultaneously in the in the critical in the critical section always.",
            "If you make your requests and eventually this request will be granted always.",
            "If you make a request in the request must stay on until it is granted.",
            "Now you've seen temporal logic may have seen lots of boxes and circles and diamonds, or G is an Epson access and the development of the.",
            "Past decade, specially with more from industry, they said this is this is we don't want any of these esoteric symbols.",
            "Just use plain English and now these are real formulas, but they start to look like what some people call structured English.",
            "It's almost just some English with some formal restrictions."
        ],
        [
            "So in the early 80s people start talking about synthesis of ongoing programs and or two separate papers in the same year.",
            "I won't get into the difference one is by wordpad, other one by Clark and Emerson.",
            "In fact, the 1st paper.",
            "Wasn't about model checking with synthesis model checking was kind of a side result in a synthesis paper.",
            "And they said look, you're given a temporal specification.",
            "It has to be satisfied with this film has to be true in some model.",
            "If it's not satisfy incorrect specification because it cannot be satisfied.",
            "So find some model and that model will give you essentially a program.",
            "And the simplest example would be think of this specification here.",
            "Always odd implies next, not odd and always not odd implies next odd.",
            "So it is satisfiability.",
            "Yes, it's it's satisfied by by, by program, which two states, or then not odd, and it just it just states it's a one bit counter and it's a model program.",
            "So this looks very nice, very intuitive and so we think we should be able to generalize it.",
            "And anyway, should always check there are specific instances satisfy aghbal, so we also can extract the program system while we're doing satisfied."
        ],
        [
            "But within a few years it became clear there is a basic flaw in this approach, which is it doesn't deal with openness or with activity.",
            "So we were talking with systems.",
            "I mean the whole point of having this device here know that it is sitting there and doing talking to itself, even though most of the time.",
            "Unfortunately it does, right?",
            "It's busy, you turn out to look at the processes and you see 90% of the CPU or taken by system idle process.",
            "OK, so it's become a closed system, but in principle is supposed to be talking to me.",
            "So let's look at a very simple example.",
            "I want to specify a printer server, so this is very simple example.",
            "Let's imagine the proposition Ji mean Joe buys and proposition.",
            "API job is printed and let's assume we have two two jobs.",
            "So we want to make sure that the two jobs are not printed at the same time, so always not P1P1 and P2.",
            "So the printer does not print two jobs at the same time and lightness means that every job is eventually printed.",
            "So Ji implies eventually P."
        ],
        [
            "So.",
            "Is this satisfy aghbal?",
            "The answer is yes.",
            "It's very easily able make everything always false.",
            "No job is submitted.",
            "No job is printed.",
            "The specification is satisfied.",
            "Now, can we expect a program out of this?",
            "Not a very interesting one.",
            "So what is the basic flow?",
            "The basic flow is that.",
            "We have to distinguish here between the submission of the job, which is something that environment does from the print server.",
            "I cannot control whether Job is submitted.",
            "I have to control which job is being printed.",
            "OK, so we have to make a distinction between between input variables which are controlled by the environment and output variable which are controlled by the system with a system that can react to all input input sequences that make it reactive and open.",
            "But satisfiability does not make this distinction, so such as satisfiability is inadequate for synthesis and people realize it by roughly by the by the mid to late 80s."
        ],
        [
            "And then you start to talk about realize ability.",
            "Is separately from satisfiability and realizability.",
            "We make a clear distinction between input and output variables, and we imagine there is the game between the system and the environment.",
            "The system always choose the truth assignment.",
            "To the output output proposition, you decide the values and we assume here for simplicity, I'm assuming that all these values are just Boolean values, but of course you can generalize it, but just for simply so 2 to the oh simply all the truth assignments to the output position.",
            "The environment give you an input assignment, so I play.",
            "Is going to be.",
            "Something like data sequence of input assignment in a sequence of output assignments.",
            "And the infinite behavior is simply the unified assignments at any given point.",
            "Now what does it mean?",
            "To win.",
            "You win a particular particular behavior.",
            "What you wanted to satisfy the specification.",
            "So now assume there's a temporal specification.",
            "We just saw the example before, not two jobs are printed at the same time.",
            "Every job, every request is eventually granted, and they have to be satisfied by such a behavior.",
            "But but of course there are many possible behaviors.",
            "In fact, there uncountably many behaviors each depend on the input sequence, which is controlled by the environment.",
            "So what we want is for the system to have a strategy.",
            "That's what they want to win the game.",
            "To have a winning strategy.",
            "What is the winning strategy and winning strategy is a function that looks the history of the input, the full history of the input and determines the next move.",
            "So generally strategy in the behavioral game.",
            "So this is the extensive form of the game.",
            "This is not what you say what you see the matrix.",
            "OK, this is the game tree, so to speak.",
            "Depending on the history of the game so far, you have to decide.",
            "What is your next move?",
            "Now on the face of this is a function that requires unbounded memory, will come back to it in a minute, but in principle yes, you have to remember the full history of the game.",
            "So a in this pretty much around the same time about the Lamport and wallpaper, published a paper arguing for realizability, employee and roesener.",
            "Also published influential paper, also talking bout realize ability.",
            "Nor was there also.",
            "Go farther, algorithms how to start with linear temporal logic.",
            "Check for Real's ability and give you back.",
            "A program give you back a winning strategy.",
            "In fact there are.",
            "Now they showed that the winning strategy is a finite set finite state program, so you can only need bounded amount of memory.",
            "Now of course, they don't realize that.",
            "I think it was probably 87 that people in Star talk about universal universal planning.",
            "And again, the people didn't realize it, but really, essentially, if you look at the planning terminology, what they said here was that we need a universal plan, a plan that can react to assume non terminism a plunger can react to all possible outcomes of actions."
        ],
        [
            "Turns out over that not only they were not aware of what happened two years before that.",
            "They're not aware of what happens 30 years.",
            "In effect, this is a very old idea, goes back to the late 50s.",
            "So in 1957, along with charge, whom you heard of him, he's done recursion theory, and he's done a Lambda calculus, but you didn't know that you also did circle design and planning.",
            "But in 1957, along with just talked about a essentially but realize ability.",
            "With respect to specification at the time, there was no logic so long to church uses.",
            "He was more of a classic and religion.",
            "He talked about the Monadic 2nd order theory of 1 successor function, which was the temporal logic, so to speak.",
            "With 1957.",
            "It's a powerful logic, talks about what happened when you have essentially the natural numbers with monadic proposition, which is exactly what happened when we talk about temporal logic.",
            "So it's exactly the same framework.",
            "In fact, it's more expressive than a linear temporal logic, and.",
            "The problem was 12 years later by Bush in land labor and they proved that when you have MSO specification one realize ability is decidable an if there is a winning strategy, there is a finite state strategy and the relativity algorithm in fact produces.",
            "So it does synthesis.",
            "It does produce the financial strategy.",
            "The book The Land Verbal Solution was difficult too, and it was quite difficult to understand in 1972, rubbing propose a simpler solution via rubbing through.",
            "I will review in a minute.",
            "But now this is, this seems very strange.",
            "So the problem was already solved in 69 for MSO and even a simple solution using three automata in 72.",
            "What did Nolan was not do at 1989?",
            "Looks like this was all known and answer is and this is really the theme of my talk is it's all about better algorithms really.",
            "The quest for better algorithm is fair to describe that again in the 70s people didn't worry too much about the quality of algorithms and complexity of algorithms, but when the area kind of died out or become dormant and then woke up both in planning in verification in the late 80s it since then, it's just the quest for better algorithms."
        ],
        [
            "So, and this is really what the rest of my talk is about.",
            "It just now about how do we design algorithm fault enthesis.",
            "So first I want to talk about what Robbins contributed to this.",
            "And So what is a three?",
            "Let's look at what do we mean by three.",
            "So three is simply the set this star.",
            "For a particular set of direction D, so think of for example the binary tree.",
            "What is the binary tree?",
            "The binary tree is every node in the tree is a sequence of left and right zero and one, so it's simply award over the alphabet 01.",
            "So in general, every tree is the star you have, the word is the root an X.",
            "If you have X is award XD is the disk disk successor of X. OK. Nice strategy we said was a function from 2 to the I start to today.",
            "Oh so it's a tree.",
            "It is a tree where the set of direction is 2 to the I.",
            "And the labels were interested in label three, so labeled three is a is a mapping from the start for Bit Sigma.",
            "So here the alphabet is 2 to the oldest of all to sign into the output propositions.",
            "So this was first of all rubbing.",
            "Inside is the trusted.",
            "These are simply can be viewed as trees.",
            "OK, now the problem is of course is that the branches of the tree and the set of labels goes exponentially with number of propositions.",
            "So it's very hard to draw other than the very simple case where there is only one input and one output proposition, and then it just a simple binary tree with the labels are Q, bar, QQ.",
            "Also Q doesn't hold at every node.",
            "So this is a strategy, and for the search to be a winning strategy we want all behaviors to satisfy the specification, which is linear, which means every branch in the tree.",
            "Every branch in the tree has to satisfy the LTL formula, so every branch correspond to 1 play.",
            "And so we have to look at the totality of the place every player has to buy the formula."
        ],
        [
            "And so now that we think about trees rubbing took a theory.",
            "So what happened y'all know that 1959 is a classical paper by Robin and Scott, but finite automata on finite words.",
            "There was an important paper.",
            "It's still a beautiful paper.",
            "They got the Turing Award essentially for that paper and what's happening throughout the 60s.",
            "People extend the theory of finite automata, so they go from first of all, from a finite words for words.",
            "And we will see that a briefly and then they go from words to trees and eventually by 69 rubbing publishers, a very important paper on automata on infinite trees.",
            "So what is in comment on Infinite Tree?",
            "I go very quickly on this one because we're not going to spend a lot of time on this, but you have a finite alphabet furniture of sort of initial states.",
            "Transition function is something a bit new, so here's the transition function so it says, given a set an election, you get a set of K tuples of states.",
            "So because now you have to think of a binary tree or at a node and you have to choose you have to go to the left to the right if you have.",
            "If you have a bunch and erase K, you need a K tuple of states.",
            "And ultimately, that means that you have a set of K2 bowls of states.",
            "Now accepting function is now things are getting more bizzare and all I can promise you will get even busier.",
            "Air.",
            "So all I can explain is you had to be there to understand why Robin is coming for such things, but you have a set.",
            "Of pairs of sets of States and.",
            "The condition is along every branch.",
            "One of the one of these pairs has to succeed, and for the peer to succeed means that the good states are with infinitely often in the bed sets are visit only finitely often.",
            "Don't ask me why, just go with the impression.",
            "This is Robin Toyota."
        ],
        [
            "Now for whenever you look at Automata, there is one fundamental question is called the emptiness question.",
            "Given an automaton, does it accept anything?",
            "So for the automata that you're familiar with, let's say DFA or NFA will come back to it empty.",
            "This is very easy.",
            "Will come back to it.",
            "For finite trees, emptiness is not so trivial.",
            "It correspond to satisfiability horn clauses, so it's in P time.",
            "But when you go to infinite trees, this seems to be a difficult question, and it took many years before it was finally settled, rubbing head what's called a nonelementary complexity elementary means that you have an unbounded tower of exponentials, so Robin had an induction.",
            "The number of pairs, and.",
            "Each to eliminate every part cost you one costing one exponential and then gradually it was improved to two explained X time and eventually it came out.",
            "This is NP complete, so we got it.",
            "Now most people say incomplete is bad news, but here we are incomplete, right?",
            "So when we completed for us is incredibly easy.",
            "I mean my slogan here that exponential is the new polynomial."
        ],
        [
            "So here is.",
            "Here is Robbins.",
            "I've been the porch.",
            "How do you check your eligibility of a formula Phi?",
            "You construct a rubbing tree automaton that accepts all winning strategies.",
            "OK, so this is by construction, except precisely willing started to check the long every branch is.",
            "The formula is satisfied.",
            "So there is some automata through the construction to do that.",
            "Then we check for non emptiness.",
            "So if it's empty then there is no strategy.",
            "If it's if it's not empty, there exists at least one strategy.",
            "It turns out that the non optimized algorithm actually returns your witness in the form of what's called a regular tree, which is a.",
            "It's a finitely within with look back, so it represents an infinite infinite tree, but it's a finite representation.",
            "So this is this is the, so we know now that this part the second part which is check for emptiness.",
            "This is exponential.",
            "But it turns out that this part was was a nonelementary.",
            "And this was in fact was was a result of the fact that you are very expressive specification language MSO.",
            "So going from MSO to automaton with all of the known elementary.",
            "So in some sense, that's why in 72 Robin wasn't too troubled by the fact that non emptiness was not elementary because nonelementary composing an elementary.",
            "What the heck?",
            "We already have an unbounded tower of exponentials."
        ],
        [
            "So, so clearly the theory as it is in 1972.",
            "The logicians may be happy, but it wasn't really a framework that one could proceed from these two really to try to implementing, so nobody implemented things for a long time.",
            "And then what we have here, essentially starting?",
            "Throughout the 80s was really trying to improve the tamatori automata theoretic part.",
            "So this first of all depends.",
            "Everything depends on the fact that in 1977 will replace them, and so by language like like LTL, Napoli chose LTL because he thought it would just.",
            "Easier for people to use.",
            "But it turns out this was an inspired choice because easier for people to use also meant easier for computers to use, and that's a whole other talk by itself, which I won't get here, but but by several techniques now over there.",
            "We were able eventually to get to the point that for LTL.",
            "Eligibility is double exponential time and it's complete for double exponential time.",
            "So now theoretically this is not fully understood as of 1919 by 1990, which is a horsnell thesis.",
            "OK, he also had the lower bound, so we fully understand the theory of LTL synthesis.",
            "It is complete for double exponential time."
        ],
        [
            "Now, of course, many people says and says look you told us exponentially is a new polynomial, but this is doubly exponential and maybe you have the hood.",
            "Sparta said exponential is a new polynomial, but surely you're not going to set the double exponential is a new polynomial.",
            "So and in fact many people, once they saw the result, they wrote it off.",
            "This is OK.",
            "Forget about this.",
            "The problem is you know.",
            "Beyond our capability.",
            "But to me this is just a very naive approach, because what we what we have seen, and I think this is true due to this community related community.",
            "Much of it, I think was the I community.",
            "That worst case complexity just a very pessimistic assumption.",
            "And yes, there will be cases where you won't be able to solve the problem by using computers, but it doesn't tell us what happened in more common cases, and I think probably the most outstanding example of this was happening with that.",
            "OK, when I was a graduate student, that was something that you would even touch with a 10 foot pole.",
            "It was infectious.",
            "You know.",
            "It was then look at it and today we solve routinely problems with millions of variables.",
            "So yes, one can construct smallsat problem that you cannot solve today, but nobody seemed to be scaled from SAT anymore.",
            "So the issue is really not what is the complexity the worst case, but what is complex in practice and I'll come back to this point.",
            "The other thing that we actually the proof tells us, is that there are small formulas.",
            "Please see quote or poem.",
            "It realizes them is huge.",
            "It has to have double exponentially many states.",
            "So if you happen to have one of these specifications, well, you're in trouble, because it doesn't mean you can do it by hand.",
            "I mean, it just means that this is your very succeed specification to a very complex program.",
            "But again, these are very usually very pathological specification.",
            "You don't expect to get them normally, so we're going to come back to the issue of whether this is doable, but we know we won't let the worst case complexity to deter us."
        ],
        [
            "But I do want to understand, explain to the difficulty and why we're still fighting the algorithmics of this problem, and why nobody can say OK, this is fully solved and I'm going to go back to the framework that you're all familiar.",
            "I'm just going to abstract it a little bit.",
            "OK, so this is going back to strips planning, except you won't see any strips here.",
            "Everything will be automata theoretic, but I want to recognize that this is an abstraction of what you see is trip planning, and it retains the sequential nature of the problem.",
            "But of course is abstract.",
            "Difficulty constructing state spaces, which we know is a separate challenge.",
            "So I'm going to assume that we're giving a DFA.",
            "So what is a DFA?",
            "This is something very classical.",
            "You all have seen it probably, maybe by now in high school event.",
            "So we have.",
            "It's a good high school.",
            "So we have an alphabet sort of state initial set deterministic transition function, right?",
            "Given a statement with the next state sort of accepting states.",
            "You give it a sequence of letters.",
            "It follows the transition function you get there on the last set has to be accepting.",
            "Now how do I want to make it a planning problem?",
            "The planning problem is given such a DFA give me a word that will take me from initial to final state given accepted word.",
            "Now of course we know how to check it.",
            "In fact, all that matter is that in the graph there is a path from initial to final two accepting states.",
            "That path give you a word and that word is a program you can think of it because it says do this now.",
            "Do this now.",
            "Do this and now do that.",
            "So the world is the problem.",
            "Of course, why this problem can be solved if you're given a DFF for this problem can be solved in linear time.",
            "Of course, the practical thing is that this is going to be a huge DFA, and constructing the full set pieces beyond the questions and therefore we have to search a very large space, but I must abstracting away that part of the problem right now, so strip planning is essentially about DFAS deterministic if it's not."
        ],
        [
            "Terministic we just make it to NFA.",
            "So this is exactly everything.",
            "There's only change here is that now you see the function give you for a given state, and later you have a set of successful states.",
            "But in terms of non emptiness, nothing changes.",
            "You basically all that count is what's called the graph of the automaton.",
            "There has to be a path from initial to final state, and the sequence of labels is the.",
            "That's the plan.",
            "It says do this.",
            "Do this, do this.",
            "OK, and it means that this now I'm talking about.",
            "It's not a conformant planet, just a possible plan.",
            "OK, so of course, if you have to deal with the fact not romantic, what happened, but right now I'm simplifying all of this away, not urbanism will come.",
            "Will come later in the in the reactive part."
        ],
        [
            "Now what we want to do?",
            "It also go to infinite worlds.",
            "So I will go as I said before, this is this actually goes back to 1960 when Bush introduced Automata on infinite worlds.",
            "Now if you look at the Bush automaton, you'll see that.",
            "It's exactly like an NFA.",
            "There's nothing different here.",
            "Instead of states Alphabet, states, initial states transition function on terministic accepting states.",
            "So what's different?",
            "What's different is it now we're feeling it an infinite sequence of symbols.",
            "Now of course the automaton has not Ness and no memory other than its state, so it doesn't know whether the sequence of finite or infinite.",
            "All it knows how many state I get a letter and a change of state, but we are looking from outside.",
            "We are realizing now the run is an infinite run.",
            "So the question is what does it mean to accept?",
            "So typically we think of acceptance is a decision automaton at the end of the run tells you accept reject, green light red light.",
            "This automaton runs forever, so definitions to be abstract.",
            "This was actually Bush is contribution that you can think of accepting such a way and Bush is said you accept if you visit accepting state infinitely often.",
            "So now I'm saying accepting state other than final state could not final.",
            "But you have to visit accepting sets infinitely often.",
            "And that's the definition of acceptance.",
            "So you accept.",
            "These are infinite words.",
            "Now.",
            "This was a very important contribution.",
            "It started the whole line of reserves the same way that Robin and Scott 59, was dead.",
            "That regularity is very robust property and you can take automaton, make non terministic Magnum two way we know.",
            "Now you can make them alternating and all kinds of things that can up.",
            "They can jump up and down.",
            "They can dance, they can hope and this will only accept regular regular languages.",
            "Something very similar happens here.",
            "These are called Omega regular languages that Bush actually showed that are equivalent to MSO.",
            "It's more expensive than LTL.",
            "It's a very robust class.",
            "People are."
        ],
        [
            "Typically less familiar with it, so I'll give you 2 two little examples so.",
            "This is a.",
            "The first one here, very simple automaton you enter on the left.",
            "The two states left and right right is accepting state and see that zero always second the left.",
            "And one always take it to the right.",
            "So this is the terministic automaton.",
            "So to accept, you have to visit with the Red Circuit and you only get there by seeing a one.",
            "Let me you have to see infinitely many ones, so this would this automaton says I accept all the words that have infinitely many ones.",
            "Another automaton sees a little more interesting again.",
            "It has left and right.",
            "You enter the left, right is accepting.",
            "Now notice here that that both 0 and 1 zero ticket delivered also one.",
            "If you see one, you can also stay at the left.",
            "So it means you can look in the left.",
            "In some sense, along as long as you want, but if you stay on the left, you cannot accept.",
            "Because to accept, you have to go to the Red State.",
            "You go to the red State by seeing a one, but then you're only allowed to see one if you get here in Co you get stuck so you die.",
            "So this automaton, except if from some point on you see only once.",
            "OK, so eventually all ones only finitely many zeros.",
            "Actually, I think of this little tamatown is the story of.",
            "Becausw what happens here?",
            "You have to make a decision.",
            "Whether the signal is good is she will spend on what will happen in the future.",
            "If you make the right decision, you will live happily ever after few mcdang decision you die.",
            "This is, this is what we have to do every day."
        ],
        [
            "So now this is now, let's call it infinitary planning.",
            "Given a non terministic Bush automaton on Ward called NBAA on word because also tamatown trees.",
            "Find a word that is accepted by the automaton.",
            "So the same way that on final tomata we can think about them as a graphs and we all we want is is a path from initial to final state.",
            "The same thing is true here, but just just a graph theoretic reasoning is just a little more involved.",
            "So again define the graph as the automaton is the directed graph where the nodes are the States and the edges are all the pairs of states where you can make a transition upon some letter.",
            "So all the pair St such that is a successor of of S. When you read a.",
            "And then it's not very difficult to prove the following lemma that the automaton is on empty if there is a path from initial states to some accepting States and then cycle back from that state back to itself.",
            "And typically we think of it as a loss, so you have a prefix and then a cycle going back.",
            "And this is because if you think about it because the fundamental states in accepting run, there must be some specific accepting states that you visit infinitely often.",
            "So you should be able to get to that accepting States and you should be able to get back from that accepting state to itself.",
            "So the corollary is that if this automaton is nonempty, then there is a weakness of the following form.",
            "Do first of all do you, and then do we repeated?",
            "And notice this is now it's nice because it's a finite set program.",
            "It says do you and then repeatedly do V and both you and we are finite there.",
            "In fact, the linear in the size of the automaton.",
            "OK, so we have a finite set program for a for this case.",
            "So this is if I take kind of classical planning I think of, I think of it automata theoretically, and that enables me to go from finite words to infinite worlds.",
            "So now we're really planning, but but it is not planning in the typical thing.",
            "So if you look at air planning first, it was just go to some good configuration.",
            "So the goal was just some particular set we want to get to, and then people start talking about again using even temporal, temporal, extended goals.",
            "And then you will say you know, go to this room, but on the way to be, so you must visit.",
            "A and then and then B or C. And then you must get to whom did something like that.",
            "But now we're talking about plans for life, and life is now is infinite life.",
            "Just tell to do for the rest of your life and life is between now and Kingdom come."
        ],
        [
            "Now, so far they were talking about Automata with this temporal logic come in.",
            "So temporal logic Cummings, because there is very intimate connection between temporal logic and automata, and this was shown in the early 80s.",
            "Appear wallpaper and myself.",
            "And the idea is, and I think it's a very important idea cause.",
            "It's a basic computer science principle.",
            "Great principle, computer science that humans deal with better with high level formalisms and machines deal better with low level formalisms.",
            "So the paradigm here we want to compile from high level to low level and this is what the compilation theorem tells us.",
            "It says that given an Lt Formula Phi you can build a Bush automaton, a sub fee.",
            "Such a computation is accepted by the automaton precisely when it is satisfied by the formula.",
            "And the compilation is at most, and that's good news.",
            "And if you drop the last sentence.",
            "Then essentially, this was already approved by Bush.",
            "Because you can translate very easily Lt L2 MSO and Bush already prove it to me so.",
            "But if you go that way, you're going to get a non elementary bound.",
            "So here is the fact that we don't want to go through and so we have another alternative translation which is only exponential instead of being non elementary.",
            "So that's really is explaining this essentially theorem explained I Lt L is so much better computationally than MSO is because you can translate automata with exponential blowup.",
            "In, let's take two formulas once.",
            "They always eventually P. That means that P must happen infinitely often.",
            "And this is just like infinitely many ones.",
            "And so we saw the little automaton for that, it's deterministic.",
            "Anne.",
            "Eventually, always P means from some point on.",
            "It must be true.",
            "There must be only finitely many, not P. And this is like finitely many zeros and again we saw the automaton for that.",
            "So the automaton showed you before are kind of represent these type of compilation.",
            "An in fact here we're going to see the normal ISM is essential."
        ],
        [
            "So this is.",
            "This is essentially how we can do and this is what we're proposing, esentially with some historical revisionism.",
            "But essentially you can say this proposed 1981 is to take an input formula Phi.",
            "And we want to find award satisfying the formula.",
            "That's the planning problem.",
            "Finding work that satisfies the formula.",
            "Check if the formula is satisfy aghbal.",
            "And you do that by simply translating it to an automaton and now doing the planning problem for the automaton.",
            "So this is where we are roughly circa 1985.",
            "Before people start about reactive systems and universal planning.",
            "And realize ability."
        ],
        [
            "So now I want to introduce reactivity into it.",
            "And your activity.",
            "One way you think about this is when you do an action.",
            "The outcome is known terministic, and it means it's determined by an adversary, so it goes to our game theoretic setting.",
            "So I'm now going to think of the system playing games against an environment, so the system is the good guy and he is the bad guy is for evil.",
            "If you want is the bad guy.",
            "So here is one way to do it.",
            "So imagine the following game system chooses an output value, a environment chosen an input value B.",
            "So every round we get a pair of values, an input and output value.",
            "So the play now is going to be award.",
            "Over the Alphabet Sigma times Delta right?",
            "So every at every position you have a pair of letters and a sequence of such pairs.",
            "This is the play.",
            "Now for specification, assume that you simply have a DFA except all the winning plays.",
            "Over so it's a DFA over the Alphabet Sigma course Delta.",
            "And now for the system.",
            "The system will win when the play is accepted by the automaton.",
            "And of course what we want is a winning strategy.",
            "Winning strategy is going to be again a function.",
            "Home Delta Star Delta are the moves by the environment from Delta Star to Sigma.",
            "I saw what the environment is done so far and I decided my next letter.",
            "It is eligibility will be looking for a winning strategy and synthesis will be constructing a winning strategy.",
            "So this is in some sense it's the simplest setting to describe reactive planning or universal planning.",
            "Reactive synthesis is same as universal planning and hear the specifications given the DFA over these pairs of moves by the environment and the system."
        ],
        [
            "So how do we solve it?",
            "Well, now it's not about finding path anymore, because now it's really is and this is.",
            "This is the essence to me, of spending an unsent uncertain world and this time I opened the paper and a politician announced I have a plan to accomplish X and the plan is I will do A and then B and then C. But of course we live in a world where the outcome of action is not determined.",
            "And they never says well, I will do A and then if.",
            "This will happen or that will happen.",
            "I will do B and then depend on that outcome.",
            "I will do see.",
            "So here we have to think, of course, in terms of what happens.",
            "So to solve such game reason backwards.",
            "OK, so the question is, I will say can I win?",
            "In I moves.",
            "OK, how do I win in zero moves for example?",
            "In zero move if the automaton except empty world.",
            "If the empty world is a winning, play them without doing anything the system wins.",
            "So in this case.",
            "Will compute the set of states from which you win in I moves, so we assume that we start from zero, but I will actually generalize and say, let's compute the states from which you win in I moves.",
            "So to compute to win in zero state, you must be an accepting states.",
            "It's the only way you win in zero steps.",
            "And if you compute it, if you can win in I moves then you win in I + 1 moves in the reviewing in eye moves or the state has to be such that there is some letter A that you can choose such as four letter.",
            "That environment chooses once you make the transition.",
            "You can win in AI moves.",
            "So this is just very simple induction.",
            "This is this is end or games.",
            "Essentially this is taking the standard indoor games and putting now the moves of the removal of the of the system are the OR moves and it moves by the environment of the Earth moves.",
            "This is very simple so this gives us.",
            "You can see this is a realistic one algorithm and it correspond to two.",
            "For example, you can express it to satisfy satisfy ability of horn clauses, so this can be done in linear time, but it's just check your eligibility doesn't give a synthesis.",
            "I want to go further and do synthesis.",
            "So until now I was a bit vague."
        ],
        [
            "But what is it I want to synthesize?",
            "So what I want to construct is really a function representation of a strategy.",
            "This is, again, this is a very old object.",
            "If you go back to automata theory in the 50s and some of you may be old enough that at some point in your life you read about transducers, more machines milling machines, this is stuff that was all part of the kernel of computer science, but there's been gradually new books came on top and this has been kind of pushed to the bottom shelves and maybe realize it anymore, but this is very similar to DFA, except that it has two type of.",
            "Alphabet, input alphabet and output alphabet.",
            "And in addition to the usual stuff, instead of talking about acceptance or rejection, we have a function that gives you for any given state, it tells you what is the output.",
            "So you can think of standard DFA as a transducer where the output is simply zero or one accept or reject, but in general we can have instead of having only two lights, you can have several several lights.",
            "In fact, if you go back to, I think one of the very first, I think the first kind of personal computer was altaira 8080, and it had essentially set of switches.",
            "You can set and there were set of lights and that this was the output of the thing.",
            "There is no other input or output.",
            "The switches and the lights or the input and output.",
            "So it turns out and this is a nice exercise because this is DF synthesis.",
            "Very simple.",
            "Once you compute this win zero win I etc.",
            "And at some point you gotta fix.",
            "Point this in a very natural way will give you the states of the transducer.",
            "And the choices that you're going to make at every at every level.",
            "How to go back to the previous level will give you the the moves of distance yourself, so it's easy to contact transducers once you've constructed a sequence of winning zone.",
            "The winning zones in the automaton.",
            "So this is the face synthesis and again this is.",
            "This is fairly."
        ],
        [
            "So now let's generalize a little bit and I should add this correspond to something that people called reachability games.",
            "OK, so which ability games is you?",
            "Imagine if you have a bipartite graph.",
            "And you have nodes Visio where player zero moves and not one more player one move and there's a winning region.",
            "An the goal of the of the of the system is to get to the player.",
            "Zero wants to get to the winning region and player one wants to stay out of the winning and then you do exactly the same kind of reasoning.",
            "The same kind of backward induction that you saw and so reachability games can be solved in linear time and easy to get synthesis for reachability games.",
            "So reachability games are the easiest games for us to solve.",
            "I mean there are classical indoor games."
        ],
        [
            "Indoor trees.",
            "So now let's generalize it slightly and start talking about NFL games.",
            "So the setting is going to be exactly the same as we had before.",
            "Date, so again, system chooses environment chooses every round is a pair of letter.",
            "The pleasure is a word over pairs of letters, but now the specification is an NFA.",
            "Now, if you recall when I did planning before, there was really very little difference between between DFA and NFA.",
            "You just have to find a path from initial to accepting states.",
            "But now we realize.",
            "There is a fundamental problem.",
            "In a fundamental is.",
            "Did not Minnesota have incredible power?",
            "They can look at the full world.",
            "And then they make.",
            "They make the choices.",
            "They don't have to make their choice.",
            "Letter by letter.",
            "Even even if you look at an infinite worlds first, automaton comes in, it looks at all the world from here to Infinity, then says OK, I know how to accept this world.",
            "I'll do this sequence of moves.",
            "But we're interested hearing playing games to play games you can see into the future.",
            "You have no look ahead.",
            "You only know what you've seen so far.",
            "Strategies have no foresight, automata have foresight, and the only way that we know how to solve it.",
            "And this can be proved in a formal sense, we use to determine eyes.",
            "The world we must determine as automaton and then go back to DFA games.",
            "And that means suddenly, if you determine ize their exponential blowup when we determine as automata."
        ],
        [
            "And the same, the same will happen.",
            "Now let's go to NBA game.",
            "So again, it's the same.",
            "Set up exactly the same setup.",
            "But now the plays are going to be infinite.",
            "These are going to be infinite place and the specification will be in terms of Bush automaton.",
            "And we have, and we have LTL game.",
            "It will be the same issue because the formula what we saw before we can translate formulas to non terministic automata.",
            "And with invisible to don't don't lend themselves to solving games.",
            "We must determine eyes, and essentially this is really what people have done earlier.",
            "They actually the same thing was done with me.",
            "So you build automata you determine as automata, then you play games on the top with deterministic automata.",
            "And essentially this is when Robin talk about rubbing tree automata.",
            "You can think of to automatize as a game, but you must determine as automata."
        ],
        [
            "The problem is the determining Omega automata is not so simple.",
            "So for automaton finite words, again, we know there is a subset construction.",
            "It's expensive, but it's only one exponential, so we know how to do it.",
            "But if we go back to this automata, remember this automata flies.",
            "Right, so you want to get married, but only if you're going to be happy ever after with this particular spouse.",
            "And answer it, there's no way to do Terministic Lee.",
            "We all know that you just have to.",
            "Eventually you have to close your eyes and jump right and.",
            "Sometimes you're happy, sometimes sometimes you're dead.",
            "And so it turns out that unlike automaton finite words where we have this incredible robustness, Bush automata cannot be determine ized.",
            "You want to determine eyes, you have to use more general acceptance condition.",
            "And I remember when I talked about Rabin Automata.",
            "Though this weird condition that has a set of pairs of sets of states that come from, you cannot terminate within Bush exception condition, not powerful enough, and it did make note on in 1966 with a very complicated construction show.",
            "That you can use essentially rubbing exceptions condition.",
            "And but the blowup is double exponential, so this would result in 1966."
        ],
        [
            "And then in the late 80s, suddenly people are revisiting this question.",
            "Does it have to be double exponential?",
            "In fact, even double exponential was not something that Mcnaughten was aware of.",
            "It.",
            "I met him sometimes in the 80s and ask him if he knows how many stages construction used and he said lots and lots of states.",
            "And if we think of lots is exponential.",
            "And lots and lots was actually very accurate.",
            "By the late 80s with people have come up with another acceptance condition, so if you thought that Robin condition was weird.",
            "Then sit tight.",
            "So in the people of defining what became known as parity automata, So what is acceptance condition?",
            "Exception conditions is the partition of the set of states.",
            "It's a partition of the set of states.",
            "The index of the partition, the size of the prediction is called the index it's K. And you accept if the list.",
            "I suggest FIS visit infinitely often is even.",
            "OK, and it look at it.",
            "I'm sure it looks to you.",
            "It looks to anybody really bizzare condition and only explanation is you have to be there.",
            "OK you have to understand it has one advantage that it is.",
            "It is easily self dual because if you want to negate it it becomes ordered by adding one empty set you can very easily.",
            "So this condition is self dual Robin condition was not self dual which makes it more difficult.",
            "So for example this automaton that we saw you cannot do.",
            "We you couldn't do it with this language.",
            "Said finally means you do it with book condition, but you can do it easily with parity condition and not suffer was able to show was really a wonderful paper in 1988 that with North States you can build germanistik party automaton with one exponential blowup, but it's not too.",
            "Then it sent to the power of North and the indexes is linear."
        ],
        [
            "So.",
            "And that means that the game that we're going to be playing.",
            "Before I talked about Reachability games, now we're going to be playing playing party games.",
            "OK.",
            "So party games well again it's think of it.",
            "It's a graph based game.",
            "It's bipartite graph.",
            "There are the graph, they are the nodes of nodes of player zero, player zero, move whenever you're in a V0 player, zero move to take some move on whenever you are in V1 player one makes a move but not exact.",
            "Condition is going to be the winning condition is going to be.",
            "We're going to have a partition of the set of nodes.",
            "And Player Zero win if.",
            "The least I such W subies with infinitely often has to be even.",
            "Now this is a nasty little game.",
            "'cause I mean it is it's been now and open questions now for since the.",
            "They relate to to mid to late 80s, so by now 25 years, what do we know about this problem?",
            "We know that it's in NP intersect point defects in Jupiter's echo PUP is the NP.",
            "When you have unique, unique accepting runs.",
            "So it's an NP intersect Co and P. We can do it in, enter the power off K or case the index.",
            "There is an algorithm.",
            "The best algorithm that we know is end to the power of square root of North and the open question is it in P time or not?",
            "It's unlikely to be NP complete cause of because it's in NP intersect Co NP.",
            "So it's not clear how to prove lower bounds an people have now been trying.",
            "I know it this problem wrecked at least one career person who's determined to solve this problem and essentially fell into a black hole and never came out."
        ],
        [
            "So, so this.",
            "Essentially this is how today we do LTL synthesis.",
            "OK, we start from the specification.",
            "We build a Bush automaton.",
            "We converted to deterministic parity automaton.",
            "And then we have to play party games.",
            "And when you put all of it together, you get that you can do it in double exponential time.",
            "And you'll get a transducer whose size in the worst case could be double exponential.",
            "It's a number of states.",
            "If you think of implementing it in a program the size of the program will be exponentially.",
            "Just what it tells us the program might be exponentially larger."
        ],
        [
            "So this is where the theorist ends, and it's it's a very elegant, very beautiful theory.",
            "But it's quite far from practice and one would ask why is it far from practice, so it used to be the peoples.",
            "All this automata theory is very beautiful, but it's not very practical.",
            "But by now we know that this automata theory can mean many practical.",
            "There is in fact there is a package called Mona which is Amazon Finite worlds with full Monadic 2nd order logic, which is known elementary.",
            "But this is well, yes, in some cases we will blow up, but in many cases we get actually optimal, optimal and very good algorithms.",
            "LTL model checking is now on Lt alone.",
            "Infinite word.",
            "Using automata theory is now industrial practice.",
            "And the other cases where people have implemented automata three quite successfully.",
            "But but there are very few implementation of LTL synthesis.",
            "And was that algorithmic building blocks are still too difficult like this suffered determinization, even though by now this has been somewhat improve.",
            "Still just an example, somebody tried to take a 9 state.",
            "Bush automaton applied construction and you get from 9 state to Vermilion states in the terministic automaton, just say.",
            "Gymnastic construction and the state space is very difficult, which means we want to bring in symbolic algorithm using BDS.",
            "For example, we need nice description of the state space and this other construction is very difficult to make symbolic.",
            "So the problem to me is not the double exponential time.",
            "The problem is the algorithms are just not good enough yet and that's what we need to work on."
        ],
        [
            "And I'll just mention A1 result that one progress of the last few years and there are many more.",
            "But I will mention one progress, which is that in 2005 Oracle Foreman and I find a way to get around.",
            "One this difficulty, which is they need to use the suffer determinization.",
            "And we found a way to get around it.",
            "In effect we are able to reduce the problem, not to."
        ],
        [
            "Party games, but two recurrence games.",
            "Whether the current game again it's the same graph theoretic setting, people take moves.",
            "But the goal of player player Player 0 is not to reach the winning the winning zone but with which the winning zone infinitely often.",
            "So now it's an infinite game and you have to win infinitely often, and this is much more simpler to solve this game than to solve parity game.",
            "These are clearly we have a quadratic algorithm for current games."
        ],
        [
            "So.",
            "It is.",
            "This is not mean.",
            "This is by no means a panacea.",
            "This approach introduce its own difficulties, but it can be made symbolic.",
            "There have been some mentations, some I would say preliminary.",
            "Equally preliminary implementation shows that it's much easier to use this approach than to use a suffers approach.",
            "And there is a lot of experimentation, experimentation going on now on the data structures and underlying algorithmics to make it better."
        ],
        [
            "And an important part here, which I did not say spend much, is that when you think about large systems, the idea is that you get fully specified system.",
            "And is correctly specified is very unrealistic.",
            "Reality is people with some specification.",
            "You build something so it doesn't quite do what we want.",
            "We have some additional properties and you want to do it without starting the whole work from scratch every time, and this is all incremental synthesis and there are some some progress along this line too."
        ],
        [
            "So we go back to the question is so it's a problem that we know it to be double exponential time complete.",
            "Can we hope to practice and is argued before the worst case approach is overly pessimistic.",
            "What we want is we want to have algorithm that will blow up sometimes, but only when necessary.",
            "If for example, if there is no small program to implement religious specification where this is life.",
            "But I want something that will not be in something.",
            "Ideally you want something will be somehow will be, maybe at most exponentially in the program.",
            "Others in double exponentially in the program.",
            "So this is where really well I think they need to put them in France now with algorithmic engineering."
        ],
        [
            "And I want to come back to the same that was mentioned here at the very introduction is the relation between verification and planning.",
            "But I hope I've convinced you that we're essentially working on the same problem.",
            "Preps with somewhat different perspectives and the perspective casting community was really on dealing with.",
            "Very expressive specification and try to deal with the general case, but there is a lot of work that they have time to mention looking at sub cases I think we already saw at least three things that I know off and maybe I'm missing.",
            "Maybe maybe more.",
            "I think 2 very important tech transfer between the two areas.",
            "Bounded model checking clearly came from the planning community and revolutionized the practice of model checking.",
            "Today when you look at industry does is bounded model checking which is set based an at the same time.",
            "BDS moved to planning an as temporal goals.",
            "Also, people now are familiar with little use, temporal goals and what I hope this will stimulate to some degree is more collaboration and more tech transfer between the two communities.",
            "Thank you very much.",
            "The third time I've heard of dogs in the past few years.",
            "Every time was something else that each song is really for me, inspiring things.",
            "Most people will feel the same.",
            "Maybe you should use the mic because I'm told it's being recorded.",
            "No, no use the mic.",
            "Posterity not for me.",
            "For posterity.",
            "OK, wonderful theoretical framework.",
            "Wonderful talker.",
            "You make it hard for us to be to shopping and stuff today the talk.",
            "Now they are striking parallels, as you say between planning Anan.",
            "And so on.",
            "An.",
            "It looks to me that one key difference is the definition or or the filling of what it means by better algorithms.",
            "So it looks at all your slides.",
            "You're focusing on worst case complexity results, what in AI we are not so pessimistic.",
            "We tend to be actually the other way around.",
            "We are very optimistic.",
            "OK, I tend to ignore worse complexity results and head on anyway, so maybe you can comment on that a bit so.",
            "I I agree with you violently.",
            "OK, so whatever they say, if you just look at complexity, we will complete all the questions were all settled by 99.",
            "So by 1990 the theory was closed in some sense by 1990 and everything that we that we see from since 1990 was really focusing very much in the same way that people here was algorithm algorithm will work better in practice and I said it doesn't trouble me.",
            "This double exponential time and it means that there will be some specification on which we will fail.",
            "OK, this is OK.",
            "But I want this specification that will on algorithm that would work better on typical specification specification that a person can solve easily OK, so we should we should have program that will be able to do what people can do and be able to do it more so now.",
            "I think we're very much and I said until 19:00, 90.",
            "This was afraid question that we focused very much.",
            "But in fact, I have to say that some of the problem now is that we write papers and we said this is a better algorithm.",
            "Anne and people said, well, it's not a better complexity.",
            "So in what sense is the algorithm?",
            "And it's just now.",
            "It's harder to make the case of progress, but very much this direction.",
            "We need to go absolutely.",
            "Yeah.",
            "What?",
            "The community has focused very early on on defining problems like City and all that that some much more practical realization.",
            "So algorithm algorithms for solving those problems I've I've been developed more by the planning community.",
            "I mean, if you set up a number of examples.",
            "We have algorithms to solve.",
            "Many of those.",
            "I mean, I'm not sure whether you think some of the work that's been done here actually provides some answers to the questions in.",
            "Your community, or do you think it's basically, you know, not that significant?",
            "I mean, we sometimes use some tools you know from from the verification community, which is, for instance, you know for instance or BDS, but so do you think you would you agree with my my guess that really the practical, the algorithms for solving those problems I've come more from the planning community.",
            "So I think that you know.",
            "I was given one hour.",
            "If you give me 10 hours with different presentation.",
            "One of the things that I think the problem between between communities that that usually will transfer are the most significant bits.",
            "OK, stick for example automotive theoretic approach to just a verification to model checking.",
            "So if you know about it then you know OK you translate from logic to automata, but what you may not realize that.",
            "I would say for the last now 15 years, much effort has gone on just optimizing the worse complex potential just optimizing.",
            "And this is still an ongoing error filter.",
            "Just optimizing this translation very much, focusing on on performance.",
            "So if you look today what's happening much overlapping model checking.",
            "In general if you ask anybody, was at Clark, what is the challenge he would say static explosion problem so very much the two communities very much dealing with very similar issues.",
            "It's not as if somehow you think unification or just appointed, so additions will be surprised.",
            "I mean there is very much focus on on also on algorithm working practice, and partly because we've had.",
            "I would say again, roughly from the mid 90s for the last now 15 years, very extensive interaction with industry.",
            "Much of the focus has been on performance, performance, performance, so I think it's true for verifications.",
            "For synthesis, I'm not.",
            "I haven't seen I mean.",
            "You know, I admit that I might be ignorant in there.",
            "I haven't seen a lot of work on synthesis coming more methods community until quite recently as opposed to, say, work that's been done in the planning community dating back from, you know, the the mid 90s something.",
            "So it's fair to say that it is at this point if you look at what happened in formal methods in general, it's fair to say that it is not the major occupation of people.",
            "Informal method.",
            "I mean the major occupation is Ceylon verification.",
            "And justifiably so, because there is immediate industrial demand for better technology vision.",
            "And since this is still a little bit pie in the Sky four years ago in 2006 there was a workshop celebrating 25 years of model checking and.",
            "And there was a whole day workshop and then there was a panel and people saw where is model checking going.",
            "And so I had five minutes and in 5 minutes said model checking should go to synthesis.",
            "Which is not surprising given my current interest, but with interesting to me is that I said I said I said I'm hoping that in 25 years, so this will be like 2031.",
            "We will have a workshop celebrating 25 years of synthesis and then I asked.",
            "The audience occurs.",
            "So how many people here have an active interest in synthesis?",
            "An I would expect this that like 5 people who raise their hand and I would say well this has to change.",
            "But to my surprise.",
            "About I would say about 1/3 of the people in the audience, so maybe about 100 people, several people on there says I have to have active interest in synthesis so.",
            "We will have to step back and look in 10 years and see whether there.",
            "Indeed there is a significant movement in that direction.",
            "OK.",
            "Pretty much.",
            "It's going to be around here, and if you have your.",
            "Thank you again."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Good morning.",
                    "label": 0
                },
                {
                    "sent": "Anne.",
                    "label": 0
                },
                {
                    "sent": "When we set out to look for invited speakers for this conference we wanted, we wanted to find someone who could help us make the connection to the world of.",
                    "label": 0
                },
                {
                    "sent": "Formal methods in program analysis.",
                    "label": 0
                },
                {
                    "sent": "And help help push it forward.",
                    "label": 0
                },
                {
                    "sent": "And the natural candidate for this is Moshe Vardi, who is one of the leading researchers in the area of program verification and synthesis, and also many other areas.",
                    "label": 0
                },
                {
                    "sent": "He was one of the most prominent researchers in the still is, but in theory of databases in automata theory and pushing it forward to becoming a practical tool for computer science.",
                    "label": 0
                },
                {
                    "sent": "In theory of computer science, and he was also involved in the past.",
                    "label": 0
                },
                {
                    "sent": "In effort to bring these two communities together, he was one of the organizers of the.",
                    "label": 0
                },
                {
                    "sent": "Fix tool.",
                    "label": 0
                },
                {
                    "sent": "Seminar on.",
                    "label": 0
                },
                {
                    "sent": "A bounded model right on the on the relationship between planning and and program verification and synthesis, which focused mostly on bounded model checking's and this is the area bounded.",
                    "label": 0
                },
                {
                    "sent": "Model checking is the area where the there's been.",
                    "label": 0
                },
                {
                    "sent": "Most synergy between these two fields.",
                    "label": 0
                },
                {
                    "sent": "And we believe that there's much room for synergy in the important problem of program synthesis.",
                    "label": 0
                },
                {
                    "sent": "An therefore we've asked Moshe was one of the experts in this area.",
                    "label": 0
                },
                {
                    "sent": "One of the most prominent experts in this area to give a talk to tell us a little bit about what's going on in this area, and there's been some major results there in the past.",
                    "label": 0
                },
                {
                    "sent": "Think specially since around 2000, right?",
                    "label": 0
                },
                {
                    "sent": "Some an share will hopefully help us understand this area better for us to learn from it.",
                    "label": 0
                },
                {
                    "sent": "And hopefully maybe.",
                    "label": 0
                },
                {
                    "sent": "Contribute to it.",
                    "label": 0
                },
                {
                    "sent": "So let machine.",
                    "label": 0
                },
                {
                    "sent": "Thank you very much.",
                    "label": 0
                },
                {
                    "sent": "Thank you for the kind introduction.",
                    "label": 0
                },
                {
                    "sent": "Thank you for the invitation.",
                    "label": 0
                },
                {
                    "sent": "I always wanted to come to Icaps.",
                    "label": 0
                },
                {
                    "sent": "Just somehow never worked out, so I'm really glad you gave me this opportunity to be.",
                    "label": 0
                },
                {
                    "sent": "I've been in other conference where.",
                    "label": 0
                },
                {
                    "sent": "Someone from another field is coming.",
                    "label": 0
                },
                {
                    "sent": "There is a little always a little fulfilling of kind of a bit of a local chauvinism that every community feel very good about what it's doing and it's convinced what it is doing is better than what everybody else is doing.",
                    "label": 0
                },
                {
                    "sent": "So it's a natural feeling.",
                    "label": 0
                },
                {
                    "sent": "I have it too, when somebody else is coming to conference in my community, so I would just ask you to suspend.",
                    "label": 0
                },
                {
                    "sent": "The local shopping is a little bit because I'm coming here.",
                    "label": 0
                },
                {
                    "sent": "Mission of peace.",
                    "label": 0
                },
                {
                    "sent": "Anne, what actually?",
                    "label": 0
                },
                {
                    "sent": "I will try to do is not so much to focus exactly what happened on the last 10 years, but actually to step back and look in something that's been happening in this area for the last 50 years.",
                    "label": 0
                },
                {
                    "sent": "Just to give.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "A little over an overview where we started and where we are.",
                    "label": 0
                },
                {
                    "sent": "And then we have to start with verification because partly this is what gives this area.",
                    "label": 0
                },
                {
                    "sent": "I think some credibility the obvious in program verification or the last 25 years and the basic idea is we have a program we have some kind of formal specific specification and we want to show that the program is in the model.",
                    "label": 0
                },
                {
                    "sent": "It satisfied the specifications.",
                    "label": 0
                },
                {
                    "sent": "OK, This is why it's called model checking.",
                    "label": 1
                },
                {
                    "sent": "And they.",
                    "label": 0
                },
                {
                    "sent": "The progress has been initially on using temporal specification using temporal logic and finite sets programs.",
                    "label": 0
                },
                {
                    "sent": "And then we've seen expansion of the last 10 years or so on various classes of infinite set programs.",
                    "label": 0
                },
                {
                    "sent": "And our tools SMV spin, slam etc.",
                    "label": 1
                },
                {
                    "sent": "And we see today increasing impact on industrial design practices much in the hardware area.",
                    "label": 0
                },
                {
                    "sent": "Every today every hardware design company uses formal methods in one way or another, an also in software Microsoft to ship something called static device verifier which they shipped today to the device developers.",
                    "label": 0
                },
                {
                    "sent": "Now there is a basic however difficulty with verification that first of all you spend enormous.",
                    "label": 0
                },
                {
                    "sent": "Effort designing a program.",
                    "label": 0
                },
                {
                    "sent": "And then you model check it.",
                    "label": 0
                },
                {
                    "sent": "It never passed.",
                    "label": 0
                },
                {
                    "sent": "It always fails because you have errors and then there is very expensive to correct errors.",
                    "label": 0
                },
                {
                    "sent": "So it's good that we have formal verification.",
                    "label": 0
                },
                {
                    "sent": "But in some sense it hasn't made a big change in how the programming design in the first place.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Now there is again computer science which somehow to automate the design.",
                    "label": 0
                },
                {
                    "sent": "We would like to start from the specification.",
                    "label": 0
                },
                {
                    "sent": "And then form the specification in a principle way.",
                    "label": 0
                },
                {
                    "sent": "Driver program there will be what correct by design you designed in such a way that it's guaranteed to satisfy the specification.",
                    "label": 0
                },
                {
                    "sent": "So there is no need for verification.",
                    "label": 0
                },
                {
                    "sent": "There's only four redesign.",
                    "label": 0
                },
                {
                    "sent": "The program is correct by design.",
                    "label": 0
                },
                {
                    "sent": "If we could do it algorithmically.",
                    "label": 0
                },
                {
                    "sent": "Then all that will be left is to write specification.",
                    "label": 0
                },
                {
                    "sent": "Simplification is nontrivial, does.",
                    "label": 0
                },
                {
                    "sent": "It doesn't mean that suddenly we have eliminate the difficulty, but we've gone up in the level of abstraction we become, we taking declarative programming to delimit you say what you want the program to do rather than how it should be.",
                    "label": 0
                },
                {
                    "sent": "Do it.",
                    "label": 0
                },
                {
                    "sent": "There was a very beautifully written paper by David derail a couple of years ago.",
                    "label": 0
                },
                {
                    "sent": "IEEE computer.",
                    "label": 0
                },
                {
                    "sent": "Can programming be liberated.",
                    "label": 0
                },
                {
                    "sent": "Can we really raise any significant way there?",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Level of abstraction programming.",
                    "label": 0
                },
                {
                    "sent": "So we really write declarative specification and this also become program synthesis.",
                    "label": 1
                },
                {
                    "sent": "And this is the idea that you can find probably appearing the first time in the late 60s.",
                    "label": 0
                },
                {
                    "sent": "How to go again for mechanically phone specification to a program that will be correct by design.",
                    "label": 1
                },
                {
                    "sent": "An initial.",
                    "label": 0
                },
                {
                    "sent": "Initially it was.",
                    "label": 0
                },
                {
                    "sent": "It was applied to what we call translate Trans Formational program program.",
                    "label": 0
                },
                {
                    "sent": "They have input and I'm supposed to produce some output.",
                    "label": 0
                },
                {
                    "sent": "And their first of all you have to do the specification is the relationship between the input and output and you start with the statement of realize ability that forelegs.",
                    "label": 0
                },
                {
                    "sent": "There exists such some white satisfier ecstatic by the precondition, then X&Y will satisfy the post condition.",
                    "label": 0
                },
                {
                    "sent": "And once you have such approved the idea, typically there is to extract the program from the proof, and for some you know there is a lot of people use constructive logic there because not even logic says that every essential quantifier has to be proven constructively, since that's the program.",
                    "label": 0
                },
                {
                    "sent": "Now what we saw in the in the in the 80s that people start thinking and this was general trend in verification.",
                    "label": 0
                },
                {
                    "sent": "People moving from reasoning about input output program to reasoning about ongoing programs.",
                    "label": 0
                },
                {
                    "sent": "So people start to realize that the classical model of computation that typically with in terms of Turing machine you have an input output tape is a very poor description of the computation we see around us today.",
                    "label": 0
                },
                {
                    "sent": "You know this, this machine is not clear what is input or the food it interacts with me.",
                    "label": 0
                },
                {
                    "sent": "For its lifetime, and this is true today for almost any computer that you made, it continue interacts with some environment, so this we call it ongoing program.",
                    "label": 0
                },
                {
                    "sent": "People call it open system reactive systems, and so this is where temporal specification come into the picture.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And this was this insight came was put forward by the American oily who tragically passed away prematurely last fall in 1977.",
                    "label": 0
                },
                {
                    "sent": "He proposed to use temporal logic with the logic used by philosophers, adopted it to describe ongoing computation.",
                    "label": 0
                },
                {
                    "sent": "If there was not even good term that I'm the coolest cyclic programs.",
                    "label": 0
                },
                {
                    "sent": "But today I said we talk about about reactive system open systems.",
                    "label": 0
                },
                {
                    "sent": "And the idea is to talk with your basic logic so your basic assertions Proposition X = 5, Y is greater than Z and then at Temple Connective next and eventually always until and it's a logic view is very simple syntax and I've just build a pictures.",
                    "label": 0
                },
                {
                    "sent": "So next, just you assume a discrete time trace.",
                    "label": 0
                },
                {
                    "sent": "Their real time logics, but I will not talk about real time here, so we assume the time is discrete.",
                    "label": 1
                },
                {
                    "sent": "Next just means if this is the point where you are making the assertion fee has to be true in the next time point.",
                    "label": 1
                },
                {
                    "sent": "The next time point could be the next Clock tick tomorrow, next year, whatever is your temporal resolution, and until it's a binary connectivity that fuel hold feed hold 3:50 until size 2.",
                    "label": 1
                },
                {
                    "sent": "So this is this is Temple, this is linear temporal logic.",
                    "label": 1
                },
                {
                    "sent": "There other temporal logic but Alpha.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Personally know temporal logic and now we can write things such as always.",
                    "label": 0
                },
                {
                    "sent": "It is not the case that process one and process two are simultaneously in the in the critical in the critical section always.",
                    "label": 0
                },
                {
                    "sent": "If you make your requests and eventually this request will be granted always.",
                    "label": 0
                },
                {
                    "sent": "If you make a request in the request must stay on until it is granted.",
                    "label": 0
                },
                {
                    "sent": "Now you've seen temporal logic may have seen lots of boxes and circles and diamonds, or G is an Epson access and the development of the.",
                    "label": 0
                },
                {
                    "sent": "Past decade, specially with more from industry, they said this is this is we don't want any of these esoteric symbols.",
                    "label": 0
                },
                {
                    "sent": "Just use plain English and now these are real formulas, but they start to look like what some people call structured English.",
                    "label": 0
                },
                {
                    "sent": "It's almost just some English with some formal restrictions.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So in the early 80s people start talking about synthesis of ongoing programs and or two separate papers in the same year.",
                    "label": 1
                },
                {
                    "sent": "I won't get into the difference one is by wordpad, other one by Clark and Emerson.",
                    "label": 0
                },
                {
                    "sent": "In fact, the 1st paper.",
                    "label": 0
                },
                {
                    "sent": "Wasn't about model checking with synthesis model checking was kind of a side result in a synthesis paper.",
                    "label": 0
                },
                {
                    "sent": "And they said look, you're given a temporal specification.",
                    "label": 0
                },
                {
                    "sent": "It has to be satisfied with this film has to be true in some model.",
                    "label": 0
                },
                {
                    "sent": "If it's not satisfy incorrect specification because it cannot be satisfied.",
                    "label": 0
                },
                {
                    "sent": "So find some model and that model will give you essentially a program.",
                    "label": 0
                },
                {
                    "sent": "And the simplest example would be think of this specification here.",
                    "label": 1
                },
                {
                    "sent": "Always odd implies next, not odd and always not odd implies next odd.",
                    "label": 0
                },
                {
                    "sent": "So it is satisfiability.",
                    "label": 0
                },
                {
                    "sent": "Yes, it's it's satisfied by by, by program, which two states, or then not odd, and it just it just states it's a one bit counter and it's a model program.",
                    "label": 0
                },
                {
                    "sent": "So this looks very nice, very intuitive and so we think we should be able to generalize it.",
                    "label": 0
                },
                {
                    "sent": "And anyway, should always check there are specific instances satisfy aghbal, so we also can extract the program system while we're doing satisfied.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "But within a few years it became clear there is a basic flaw in this approach, which is it doesn't deal with openness or with activity.",
                    "label": 0
                },
                {
                    "sent": "So we were talking with systems.",
                    "label": 0
                },
                {
                    "sent": "I mean the whole point of having this device here know that it is sitting there and doing talking to itself, even though most of the time.",
                    "label": 0
                },
                {
                    "sent": "Unfortunately it does, right?",
                    "label": 0
                },
                {
                    "sent": "It's busy, you turn out to look at the processes and you see 90% of the CPU or taken by system idle process.",
                    "label": 0
                },
                {
                    "sent": "OK, so it's become a closed system, but in principle is supposed to be talking to me.",
                    "label": 0
                },
                {
                    "sent": "So let's look at a very simple example.",
                    "label": 0
                },
                {
                    "sent": "I want to specify a printer server, so this is very simple example.",
                    "label": 0
                },
                {
                    "sent": "Let's imagine the proposition Ji mean Joe buys and proposition.",
                    "label": 0
                },
                {
                    "sent": "API job is printed and let's assume we have two two jobs.",
                    "label": 0
                },
                {
                    "sent": "So we want to make sure that the two jobs are not printed at the same time, so always not P1P1 and P2.",
                    "label": 1
                },
                {
                    "sent": "So the printer does not print two jobs at the same time and lightness means that every job is eventually printed.",
                    "label": 0
                },
                {
                    "sent": "So Ji implies eventually P.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "Is this satisfy aghbal?",
                    "label": 0
                },
                {
                    "sent": "The answer is yes.",
                    "label": 0
                },
                {
                    "sent": "It's very easily able make everything always false.",
                    "label": 0
                },
                {
                    "sent": "No job is submitted.",
                    "label": 0
                },
                {
                    "sent": "No job is printed.",
                    "label": 0
                },
                {
                    "sent": "The specification is satisfied.",
                    "label": 0
                },
                {
                    "sent": "Now, can we expect a program out of this?",
                    "label": 0
                },
                {
                    "sent": "Not a very interesting one.",
                    "label": 0
                },
                {
                    "sent": "So what is the basic flow?",
                    "label": 0
                },
                {
                    "sent": "The basic flow is that.",
                    "label": 0
                },
                {
                    "sent": "We have to distinguish here between the submission of the job, which is something that environment does from the print server.",
                    "label": 0
                },
                {
                    "sent": "I cannot control whether Job is submitted.",
                    "label": 0
                },
                {
                    "sent": "I have to control which job is being printed.",
                    "label": 0
                },
                {
                    "sent": "OK, so we have to make a distinction between between input variables which are controlled by the environment and output variable which are controlled by the system with a system that can react to all input input sequences that make it reactive and open.",
                    "label": 1
                },
                {
                    "sent": "But satisfiability does not make this distinction, so such as satisfiability is inadequate for synthesis and people realize it by roughly by the by the mid to late 80s.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And then you start to talk about realize ability.",
                    "label": 0
                },
                {
                    "sent": "Is separately from satisfiability and realizability.",
                    "label": 0
                },
                {
                    "sent": "We make a clear distinction between input and output variables, and we imagine there is the game between the system and the environment.",
                    "label": 1
                },
                {
                    "sent": "The system always choose the truth assignment.",
                    "label": 0
                },
                {
                    "sent": "To the output output proposition, you decide the values and we assume here for simplicity, I'm assuming that all these values are just Boolean values, but of course you can generalize it, but just for simply so 2 to the oh simply all the truth assignments to the output position.",
                    "label": 0
                },
                {
                    "sent": "The environment give you an input assignment, so I play.",
                    "label": 0
                },
                {
                    "sent": "Is going to be.",
                    "label": 0
                },
                {
                    "sent": "Something like data sequence of input assignment in a sequence of output assignments.",
                    "label": 0
                },
                {
                    "sent": "And the infinite behavior is simply the unified assignments at any given point.",
                    "label": 1
                },
                {
                    "sent": "Now what does it mean?",
                    "label": 0
                },
                {
                    "sent": "To win.",
                    "label": 0
                },
                {
                    "sent": "You win a particular particular behavior.",
                    "label": 0
                },
                {
                    "sent": "What you wanted to satisfy the specification.",
                    "label": 0
                },
                {
                    "sent": "So now assume there's a temporal specification.",
                    "label": 0
                },
                {
                    "sent": "We just saw the example before, not two jobs are printed at the same time.",
                    "label": 0
                },
                {
                    "sent": "Every job, every request is eventually granted, and they have to be satisfied by such a behavior.",
                    "label": 0
                },
                {
                    "sent": "But but of course there are many possible behaviors.",
                    "label": 0
                },
                {
                    "sent": "In fact, there uncountably many behaviors each depend on the input sequence, which is controlled by the environment.",
                    "label": 0
                },
                {
                    "sent": "So what we want is for the system to have a strategy.",
                    "label": 0
                },
                {
                    "sent": "That's what they want to win the game.",
                    "label": 0
                },
                {
                    "sent": "To have a winning strategy.",
                    "label": 1
                },
                {
                    "sent": "What is the winning strategy and winning strategy is a function that looks the history of the input, the full history of the input and determines the next move.",
                    "label": 0
                },
                {
                    "sent": "So generally strategy in the behavioral game.",
                    "label": 0
                },
                {
                    "sent": "So this is the extensive form of the game.",
                    "label": 0
                },
                {
                    "sent": "This is not what you say what you see the matrix.",
                    "label": 0
                },
                {
                    "sent": "OK, this is the game tree, so to speak.",
                    "label": 0
                },
                {
                    "sent": "Depending on the history of the game so far, you have to decide.",
                    "label": 0
                },
                {
                    "sent": "What is your next move?",
                    "label": 0
                },
                {
                    "sent": "Now on the face of this is a function that requires unbounded memory, will come back to it in a minute, but in principle yes, you have to remember the full history of the game.",
                    "label": 0
                },
                {
                    "sent": "So a in this pretty much around the same time about the Lamport and wallpaper, published a paper arguing for realizability, employee and roesener.",
                    "label": 0
                },
                {
                    "sent": "Also published influential paper, also talking bout realize ability.",
                    "label": 0
                },
                {
                    "sent": "Nor was there also.",
                    "label": 0
                },
                {
                    "sent": "Go farther, algorithms how to start with linear temporal logic.",
                    "label": 0
                },
                {
                    "sent": "Check for Real's ability and give you back.",
                    "label": 0
                },
                {
                    "sent": "A program give you back a winning strategy.",
                    "label": 0
                },
                {
                    "sent": "In fact there are.",
                    "label": 0
                },
                {
                    "sent": "Now they showed that the winning strategy is a finite set finite state program, so you can only need bounded amount of memory.",
                    "label": 0
                },
                {
                    "sent": "Now of course, they don't realize that.",
                    "label": 0
                },
                {
                    "sent": "I think it was probably 87 that people in Star talk about universal universal planning.",
                    "label": 0
                },
                {
                    "sent": "And again, the people didn't realize it, but really, essentially, if you look at the planning terminology, what they said here was that we need a universal plan, a plan that can react to assume non terminism a plunger can react to all possible outcomes of actions.",
                    "label": 1
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Turns out over that not only they were not aware of what happened two years before that.",
                    "label": 0
                },
                {
                    "sent": "They're not aware of what happens 30 years.",
                    "label": 0
                },
                {
                    "sent": "In effect, this is a very old idea, goes back to the late 50s.",
                    "label": 0
                },
                {
                    "sent": "So in 1957, along with charge, whom you heard of him, he's done recursion theory, and he's done a Lambda calculus, but you didn't know that you also did circle design and planning.",
                    "label": 0
                },
                {
                    "sent": "But in 1957, along with just talked about a essentially but realize ability.",
                    "label": 0
                },
                {
                    "sent": "With respect to specification at the time, there was no logic so long to church uses.",
                    "label": 0
                },
                {
                    "sent": "He was more of a classic and religion.",
                    "label": 0
                },
                {
                    "sent": "He talked about the Monadic 2nd order theory of 1 successor function, which was the temporal logic, so to speak.",
                    "label": 1
                },
                {
                    "sent": "With 1957.",
                    "label": 0
                },
                {
                    "sent": "It's a powerful logic, talks about what happened when you have essentially the natural numbers with monadic proposition, which is exactly what happened when we talk about temporal logic.",
                    "label": 0
                },
                {
                    "sent": "So it's exactly the same framework.",
                    "label": 0
                },
                {
                    "sent": "In fact, it's more expressive than a linear temporal logic, and.",
                    "label": 0
                },
                {
                    "sent": "The problem was 12 years later by Bush in land labor and they proved that when you have MSO specification one realize ability is decidable an if there is a winning strategy, there is a finite state strategy and the relativity algorithm in fact produces.",
                    "label": 1
                },
                {
                    "sent": "So it does synthesis.",
                    "label": 1
                },
                {
                    "sent": "It does produce the financial strategy.",
                    "label": 0
                },
                {
                    "sent": "The book The Land Verbal Solution was difficult too, and it was quite difficult to understand in 1972, rubbing propose a simpler solution via rubbing through.",
                    "label": 0
                },
                {
                    "sent": "I will review in a minute.",
                    "label": 1
                },
                {
                    "sent": "But now this is, this seems very strange.",
                    "label": 0
                },
                {
                    "sent": "So the problem was already solved in 69 for MSO and even a simple solution using three automata in 72.",
                    "label": 0
                },
                {
                    "sent": "What did Nolan was not do at 1989?",
                    "label": 0
                },
                {
                    "sent": "Looks like this was all known and answer is and this is really the theme of my talk is it's all about better algorithms really.",
                    "label": 0
                },
                {
                    "sent": "The quest for better algorithm is fair to describe that again in the 70s people didn't worry too much about the quality of algorithms and complexity of algorithms, but when the area kind of died out or become dormant and then woke up both in planning in verification in the late 80s it since then, it's just the quest for better algorithms.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So, and this is really what the rest of my talk is about.",
                    "label": 0
                },
                {
                    "sent": "It just now about how do we design algorithm fault enthesis.",
                    "label": 0
                },
                {
                    "sent": "So first I want to talk about what Robbins contributed to this.",
                    "label": 0
                },
                {
                    "sent": "And So what is a three?",
                    "label": 0
                },
                {
                    "sent": "Let's look at what do we mean by three.",
                    "label": 0
                },
                {
                    "sent": "So three is simply the set this star.",
                    "label": 0
                },
                {
                    "sent": "For a particular set of direction D, so think of for example the binary tree.",
                    "label": 0
                },
                {
                    "sent": "What is the binary tree?",
                    "label": 0
                },
                {
                    "sent": "The binary tree is every node in the tree is a sequence of left and right zero and one, so it's simply award over the alphabet 01.",
                    "label": 0
                },
                {
                    "sent": "So in general, every tree is the star you have, the word is the root an X.",
                    "label": 0
                },
                {
                    "sent": "If you have X is award XD is the disk disk successor of X. OK. Nice strategy we said was a function from 2 to the I start to today.",
                    "label": 0
                },
                {
                    "sent": "Oh so it's a tree.",
                    "label": 0
                },
                {
                    "sent": "It is a tree where the set of direction is 2 to the I.",
                    "label": 0
                },
                {
                    "sent": "And the labels were interested in label three, so labeled three is a is a mapping from the start for Bit Sigma.",
                    "label": 0
                },
                {
                    "sent": "So here the alphabet is 2 to the oldest of all to sign into the output propositions.",
                    "label": 0
                },
                {
                    "sent": "So this was first of all rubbing.",
                    "label": 0
                },
                {
                    "sent": "Inside is the trusted.",
                    "label": 0
                },
                {
                    "sent": "These are simply can be viewed as trees.",
                    "label": 0
                },
                {
                    "sent": "OK, now the problem is of course is that the branches of the tree and the set of labels goes exponentially with number of propositions.",
                    "label": 0
                },
                {
                    "sent": "So it's very hard to draw other than the very simple case where there is only one input and one output proposition, and then it just a simple binary tree with the labels are Q, bar, QQ.",
                    "label": 0
                },
                {
                    "sent": "Also Q doesn't hold at every node.",
                    "label": 0
                },
                {
                    "sent": "So this is a strategy, and for the search to be a winning strategy we want all behaviors to satisfy the specification, which is linear, which means every branch in the tree.",
                    "label": 1
                },
                {
                    "sent": "Every branch in the tree has to satisfy the LTL formula, so every branch correspond to 1 play.",
                    "label": 0
                },
                {
                    "sent": "And so we have to look at the totality of the place every player has to buy the formula.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And so now that we think about trees rubbing took a theory.",
                    "label": 1
                },
                {
                    "sent": "So what happened y'all know that 1959 is a classical paper by Robin and Scott, but finite automata on finite words.",
                    "label": 0
                },
                {
                    "sent": "There was an important paper.",
                    "label": 0
                },
                {
                    "sent": "It's still a beautiful paper.",
                    "label": 0
                },
                {
                    "sent": "They got the Turing Award essentially for that paper and what's happening throughout the 60s.",
                    "label": 0
                },
                {
                    "sent": "People extend the theory of finite automata, so they go from first of all, from a finite words for words.",
                    "label": 0
                },
                {
                    "sent": "And we will see that a briefly and then they go from words to trees and eventually by 69 rubbing publishers, a very important paper on automata on infinite trees.",
                    "label": 1
                },
                {
                    "sent": "So what is in comment on Infinite Tree?",
                    "label": 0
                },
                {
                    "sent": "I go very quickly on this one because we're not going to spend a lot of time on this, but you have a finite alphabet furniture of sort of initial states.",
                    "label": 0
                },
                {
                    "sent": "Transition function is something a bit new, so here's the transition function so it says, given a set an election, you get a set of K tuples of states.",
                    "label": 0
                },
                {
                    "sent": "So because now you have to think of a binary tree or at a node and you have to choose you have to go to the left to the right if you have.",
                    "label": 0
                },
                {
                    "sent": "If you have a bunch and erase K, you need a K tuple of states.",
                    "label": 0
                },
                {
                    "sent": "And ultimately, that means that you have a set of K2 bowls of states.",
                    "label": 0
                },
                {
                    "sent": "Now accepting function is now things are getting more bizzare and all I can promise you will get even busier.",
                    "label": 0
                },
                {
                    "sent": "Air.",
                    "label": 0
                },
                {
                    "sent": "So all I can explain is you had to be there to understand why Robin is coming for such things, but you have a set.",
                    "label": 0
                },
                {
                    "sent": "Of pairs of sets of States and.",
                    "label": 1
                },
                {
                    "sent": "The condition is along every branch.",
                    "label": 1
                },
                {
                    "sent": "One of the one of these pairs has to succeed, and for the peer to succeed means that the good states are with infinitely often in the bed sets are visit only finitely often.",
                    "label": 0
                },
                {
                    "sent": "Don't ask me why, just go with the impression.",
                    "label": 0
                },
                {
                    "sent": "This is Robin Toyota.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Now for whenever you look at Automata, there is one fundamental question is called the emptiness question.",
                    "label": 0
                },
                {
                    "sent": "Given an automaton, does it accept anything?",
                    "label": 0
                },
                {
                    "sent": "So for the automata that you're familiar with, let's say DFA or NFA will come back to it empty.",
                    "label": 0
                },
                {
                    "sent": "This is very easy.",
                    "label": 0
                },
                {
                    "sent": "Will come back to it.",
                    "label": 0
                },
                {
                    "sent": "For finite trees, emptiness is not so trivial.",
                    "label": 0
                },
                {
                    "sent": "It correspond to satisfiability horn clauses, so it's in P time.",
                    "label": 0
                },
                {
                    "sent": "But when you go to infinite trees, this seems to be a difficult question, and it took many years before it was finally settled, rubbing head what's called a nonelementary complexity elementary means that you have an unbounded tower of exponentials, so Robin had an induction.",
                    "label": 0
                },
                {
                    "sent": "The number of pairs, and.",
                    "label": 0
                },
                {
                    "sent": "Each to eliminate every part cost you one costing one exponential and then gradually it was improved to two explained X time and eventually it came out.",
                    "label": 0
                },
                {
                    "sent": "This is NP complete, so we got it.",
                    "label": 0
                },
                {
                    "sent": "Now most people say incomplete is bad news, but here we are incomplete, right?",
                    "label": 0
                },
                {
                    "sent": "So when we completed for us is incredibly easy.",
                    "label": 0
                },
                {
                    "sent": "I mean my slogan here that exponential is the new polynomial.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So here is.",
                    "label": 0
                },
                {
                    "sent": "Here is Robbins.",
                    "label": 0
                },
                {
                    "sent": "I've been the porch.",
                    "label": 0
                },
                {
                    "sent": "How do you check your eligibility of a formula Phi?",
                    "label": 0
                },
                {
                    "sent": "You construct a rubbing tree automaton that accepts all winning strategies.",
                    "label": 1
                },
                {
                    "sent": "OK, so this is by construction, except precisely willing started to check the long every branch is.",
                    "label": 0
                },
                {
                    "sent": "The formula is satisfied.",
                    "label": 0
                },
                {
                    "sent": "So there is some automata through the construction to do that.",
                    "label": 1
                },
                {
                    "sent": "Then we check for non emptiness.",
                    "label": 0
                },
                {
                    "sent": "So if it's empty then there is no strategy.",
                    "label": 0
                },
                {
                    "sent": "If it's if it's not empty, there exists at least one strategy.",
                    "label": 0
                },
                {
                    "sent": "It turns out that the non optimized algorithm actually returns your witness in the form of what's called a regular tree, which is a.",
                    "label": 0
                },
                {
                    "sent": "It's a finitely within with look back, so it represents an infinite infinite tree, but it's a finite representation.",
                    "label": 0
                },
                {
                    "sent": "So this is this is the, so we know now that this part the second part which is check for emptiness.",
                    "label": 0
                },
                {
                    "sent": "This is exponential.",
                    "label": 0
                },
                {
                    "sent": "But it turns out that this part was was a nonelementary.",
                    "label": 0
                },
                {
                    "sent": "And this was in fact was was a result of the fact that you are very expressive specification language MSO.",
                    "label": 0
                },
                {
                    "sent": "So going from MSO to automaton with all of the known elementary.",
                    "label": 0
                },
                {
                    "sent": "So in some sense, that's why in 72 Robin wasn't too troubled by the fact that non emptiness was not elementary because nonelementary composing an elementary.",
                    "label": 0
                },
                {
                    "sent": "What the heck?",
                    "label": 0
                },
                {
                    "sent": "We already have an unbounded tower of exponentials.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So, so clearly the theory as it is in 1972.",
                    "label": 0
                },
                {
                    "sent": "The logicians may be happy, but it wasn't really a framework that one could proceed from these two really to try to implementing, so nobody implemented things for a long time.",
                    "label": 0
                },
                {
                    "sent": "And then what we have here, essentially starting?",
                    "label": 0
                },
                {
                    "sent": "Throughout the 80s was really trying to improve the tamatori automata theoretic part.",
                    "label": 0
                },
                {
                    "sent": "So this first of all depends.",
                    "label": 0
                },
                {
                    "sent": "Everything depends on the fact that in 1977 will replace them, and so by language like like LTL, Napoli chose LTL because he thought it would just.",
                    "label": 0
                },
                {
                    "sent": "Easier for people to use.",
                    "label": 0
                },
                {
                    "sent": "But it turns out this was an inspired choice because easier for people to use also meant easier for computers to use, and that's a whole other talk by itself, which I won't get here, but but by several techniques now over there.",
                    "label": 0
                },
                {
                    "sent": "We were able eventually to get to the point that for LTL.",
                    "label": 0
                },
                {
                    "sent": "Eligibility is double exponential time and it's complete for double exponential time.",
                    "label": 0
                },
                {
                    "sent": "So now theoretically this is not fully understood as of 1919 by 1990, which is a horsnell thesis.",
                    "label": 0
                },
                {
                    "sent": "OK, he also had the lower bound, so we fully understand the theory of LTL synthesis.",
                    "label": 0
                },
                {
                    "sent": "It is complete for double exponential time.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Now, of course, many people says and says look you told us exponentially is a new polynomial, but this is doubly exponential and maybe you have the hood.",
                    "label": 1
                },
                {
                    "sent": "Sparta said exponential is a new polynomial, but surely you're not going to set the double exponential is a new polynomial.",
                    "label": 0
                },
                {
                    "sent": "So and in fact many people, once they saw the result, they wrote it off.",
                    "label": 0
                },
                {
                    "sent": "This is OK.",
                    "label": 0
                },
                {
                    "sent": "Forget about this.",
                    "label": 0
                },
                {
                    "sent": "The problem is you know.",
                    "label": 0
                },
                {
                    "sent": "Beyond our capability.",
                    "label": 0
                },
                {
                    "sent": "But to me this is just a very naive approach, because what we what we have seen, and I think this is true due to this community related community.",
                    "label": 0
                },
                {
                    "sent": "Much of it, I think was the I community.",
                    "label": 0
                },
                {
                    "sent": "That worst case complexity just a very pessimistic assumption.",
                    "label": 0
                },
                {
                    "sent": "And yes, there will be cases where you won't be able to solve the problem by using computers, but it doesn't tell us what happened in more common cases, and I think probably the most outstanding example of this was happening with that.",
                    "label": 0
                },
                {
                    "sent": "OK, when I was a graduate student, that was something that you would even touch with a 10 foot pole.",
                    "label": 0
                },
                {
                    "sent": "It was infectious.",
                    "label": 0
                },
                {
                    "sent": "You know.",
                    "label": 0
                },
                {
                    "sent": "It was then look at it and today we solve routinely problems with millions of variables.",
                    "label": 0
                },
                {
                    "sent": "So yes, one can construct smallsat problem that you cannot solve today, but nobody seemed to be scaled from SAT anymore.",
                    "label": 0
                },
                {
                    "sent": "So the issue is really not what is the complexity the worst case, but what is complex in practice and I'll come back to this point.",
                    "label": 1
                },
                {
                    "sent": "The other thing that we actually the proof tells us, is that there are small formulas.",
                    "label": 0
                },
                {
                    "sent": "Please see quote or poem.",
                    "label": 0
                },
                {
                    "sent": "It realizes them is huge.",
                    "label": 0
                },
                {
                    "sent": "It has to have double exponentially many states.",
                    "label": 0
                },
                {
                    "sent": "So if you happen to have one of these specifications, well, you're in trouble, because it doesn't mean you can do it by hand.",
                    "label": 0
                },
                {
                    "sent": "I mean, it just means that this is your very succeed specification to a very complex program.",
                    "label": 0
                },
                {
                    "sent": "But again, these are very usually very pathological specification.",
                    "label": 0
                },
                {
                    "sent": "You don't expect to get them normally, so we're going to come back to the issue of whether this is doable, but we know we won't let the worst case complexity to deter us.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "But I do want to understand, explain to the difficulty and why we're still fighting the algorithmics of this problem, and why nobody can say OK, this is fully solved and I'm going to go back to the framework that you're all familiar.",
                    "label": 0
                },
                {
                    "sent": "I'm just going to abstract it a little bit.",
                    "label": 0
                },
                {
                    "sent": "OK, so this is going back to strips planning, except you won't see any strips here.",
                    "label": 0
                },
                {
                    "sent": "Everything will be automata theoretic, but I want to recognize that this is an abstraction of what you see is trip planning, and it retains the sequential nature of the problem.",
                    "label": 0
                },
                {
                    "sent": "But of course is abstract.",
                    "label": 0
                },
                {
                    "sent": "Difficulty constructing state spaces, which we know is a separate challenge.",
                    "label": 0
                },
                {
                    "sent": "So I'm going to assume that we're giving a DFA.",
                    "label": 0
                },
                {
                    "sent": "So what is a DFA?",
                    "label": 0
                },
                {
                    "sent": "This is something very classical.",
                    "label": 0
                },
                {
                    "sent": "You all have seen it probably, maybe by now in high school event.",
                    "label": 0
                },
                {
                    "sent": "So we have.",
                    "label": 0
                },
                {
                    "sent": "It's a good high school.",
                    "label": 0
                },
                {
                    "sent": "So we have an alphabet sort of state initial set deterministic transition function, right?",
                    "label": 0
                },
                {
                    "sent": "Given a statement with the next state sort of accepting states.",
                    "label": 0
                },
                {
                    "sent": "You give it a sequence of letters.",
                    "label": 0
                },
                {
                    "sent": "It follows the transition function you get there on the last set has to be accepting.",
                    "label": 0
                },
                {
                    "sent": "Now how do I want to make it a planning problem?",
                    "label": 0
                },
                {
                    "sent": "The planning problem is given such a DFA give me a word that will take me from initial to final state given accepted word.",
                    "label": 0
                },
                {
                    "sent": "Now of course we know how to check it.",
                    "label": 0
                },
                {
                    "sent": "In fact, all that matter is that in the graph there is a path from initial to final two accepting states.",
                    "label": 0
                },
                {
                    "sent": "That path give you a word and that word is a program you can think of it because it says do this now.",
                    "label": 0
                },
                {
                    "sent": "Do this now.",
                    "label": 0
                },
                {
                    "sent": "Do this and now do that.",
                    "label": 0
                },
                {
                    "sent": "So the world is the problem.",
                    "label": 0
                },
                {
                    "sent": "Of course, why this problem can be solved if you're given a DFF for this problem can be solved in linear time.",
                    "label": 0
                },
                {
                    "sent": "Of course, the practical thing is that this is going to be a huge DFA, and constructing the full set pieces beyond the questions and therefore we have to search a very large space, but I must abstracting away that part of the problem right now, so strip planning is essentially about DFAS deterministic if it's not.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Terministic we just make it to NFA.",
                    "label": 0
                },
                {
                    "sent": "So this is exactly everything.",
                    "label": 0
                },
                {
                    "sent": "There's only change here is that now you see the function give you for a given state, and later you have a set of successful states.",
                    "label": 0
                },
                {
                    "sent": "But in terms of non emptiness, nothing changes.",
                    "label": 0
                },
                {
                    "sent": "You basically all that count is what's called the graph of the automaton.",
                    "label": 0
                },
                {
                    "sent": "There has to be a path from initial to final state, and the sequence of labels is the.",
                    "label": 0
                },
                {
                    "sent": "That's the plan.",
                    "label": 0
                },
                {
                    "sent": "It says do this.",
                    "label": 0
                },
                {
                    "sent": "Do this, do this.",
                    "label": 0
                },
                {
                    "sent": "OK, and it means that this now I'm talking about.",
                    "label": 0
                },
                {
                    "sent": "It's not a conformant planet, just a possible plan.",
                    "label": 0
                },
                {
                    "sent": "OK, so of course, if you have to deal with the fact not romantic, what happened, but right now I'm simplifying all of this away, not urbanism will come.",
                    "label": 0
                },
                {
                    "sent": "Will come later in the in the reactive part.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Now what we want to do?",
                    "label": 0
                },
                {
                    "sent": "It also go to infinite worlds.",
                    "label": 0
                },
                {
                    "sent": "So I will go as I said before, this is this actually goes back to 1960 when Bush introduced Automata on infinite worlds.",
                    "label": 0
                },
                {
                    "sent": "Now if you look at the Bush automaton, you'll see that.",
                    "label": 0
                },
                {
                    "sent": "It's exactly like an NFA.",
                    "label": 0
                },
                {
                    "sent": "There's nothing different here.",
                    "label": 0
                },
                {
                    "sent": "Instead of states Alphabet, states, initial states transition function on terministic accepting states.",
                    "label": 0
                },
                {
                    "sent": "So what's different?",
                    "label": 0
                },
                {
                    "sent": "What's different is it now we're feeling it an infinite sequence of symbols.",
                    "label": 0
                },
                {
                    "sent": "Now of course the automaton has not Ness and no memory other than its state, so it doesn't know whether the sequence of finite or infinite.",
                    "label": 0
                },
                {
                    "sent": "All it knows how many state I get a letter and a change of state, but we are looking from outside.",
                    "label": 0
                },
                {
                    "sent": "We are realizing now the run is an infinite run.",
                    "label": 0
                },
                {
                    "sent": "So the question is what does it mean to accept?",
                    "label": 0
                },
                {
                    "sent": "So typically we think of acceptance is a decision automaton at the end of the run tells you accept reject, green light red light.",
                    "label": 0
                },
                {
                    "sent": "This automaton runs forever, so definitions to be abstract.",
                    "label": 0
                },
                {
                    "sent": "This was actually Bush is contribution that you can think of accepting such a way and Bush is said you accept if you visit accepting state infinitely often.",
                    "label": 0
                },
                {
                    "sent": "So now I'm saying accepting state other than final state could not final.",
                    "label": 0
                },
                {
                    "sent": "But you have to visit accepting sets infinitely often.",
                    "label": 0
                },
                {
                    "sent": "And that's the definition of acceptance.",
                    "label": 0
                },
                {
                    "sent": "So you accept.",
                    "label": 0
                },
                {
                    "sent": "These are infinite words.",
                    "label": 0
                },
                {
                    "sent": "Now.",
                    "label": 0
                },
                {
                    "sent": "This was a very important contribution.",
                    "label": 0
                },
                {
                    "sent": "It started the whole line of reserves the same way that Robin and Scott 59, was dead.",
                    "label": 0
                },
                {
                    "sent": "That regularity is very robust property and you can take automaton, make non terministic Magnum two way we know.",
                    "label": 0
                },
                {
                    "sent": "Now you can make them alternating and all kinds of things that can up.",
                    "label": 0
                },
                {
                    "sent": "They can jump up and down.",
                    "label": 0
                },
                {
                    "sent": "They can dance, they can hope and this will only accept regular regular languages.",
                    "label": 0
                },
                {
                    "sent": "Something very similar happens here.",
                    "label": 0
                },
                {
                    "sent": "These are called Omega regular languages that Bush actually showed that are equivalent to MSO.",
                    "label": 0
                },
                {
                    "sent": "It's more expensive than LTL.",
                    "label": 0
                },
                {
                    "sent": "It's a very robust class.",
                    "label": 0
                },
                {
                    "sent": "People are.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Typically less familiar with it, so I'll give you 2 two little examples so.",
                    "label": 0
                },
                {
                    "sent": "This is a.",
                    "label": 0
                },
                {
                    "sent": "The first one here, very simple automaton you enter on the left.",
                    "label": 0
                },
                {
                    "sent": "The two states left and right right is accepting state and see that zero always second the left.",
                    "label": 0
                },
                {
                    "sent": "And one always take it to the right.",
                    "label": 0
                },
                {
                    "sent": "So this is the terministic automaton.",
                    "label": 0
                },
                {
                    "sent": "So to accept, you have to visit with the Red Circuit and you only get there by seeing a one.",
                    "label": 0
                },
                {
                    "sent": "Let me you have to see infinitely many ones, so this would this automaton says I accept all the words that have infinitely many ones.",
                    "label": 1
                },
                {
                    "sent": "Another automaton sees a little more interesting again.",
                    "label": 0
                },
                {
                    "sent": "It has left and right.",
                    "label": 0
                },
                {
                    "sent": "You enter the left, right is accepting.",
                    "label": 0
                },
                {
                    "sent": "Now notice here that that both 0 and 1 zero ticket delivered also one.",
                    "label": 0
                },
                {
                    "sent": "If you see one, you can also stay at the left.",
                    "label": 0
                },
                {
                    "sent": "So it means you can look in the left.",
                    "label": 0
                },
                {
                    "sent": "In some sense, along as long as you want, but if you stay on the left, you cannot accept.",
                    "label": 0
                },
                {
                    "sent": "Because to accept, you have to go to the Red State.",
                    "label": 0
                },
                {
                    "sent": "You go to the red State by seeing a one, but then you're only allowed to see one if you get here in Co you get stuck so you die.",
                    "label": 0
                },
                {
                    "sent": "So this automaton, except if from some point on you see only once.",
                    "label": 0
                },
                {
                    "sent": "OK, so eventually all ones only finitely many zeros.",
                    "label": 1
                },
                {
                    "sent": "Actually, I think of this little tamatown is the story of.",
                    "label": 0
                },
                {
                    "sent": "Becausw what happens here?",
                    "label": 0
                },
                {
                    "sent": "You have to make a decision.",
                    "label": 0
                },
                {
                    "sent": "Whether the signal is good is she will spend on what will happen in the future.",
                    "label": 0
                },
                {
                    "sent": "If you make the right decision, you will live happily ever after few mcdang decision you die.",
                    "label": 0
                },
                {
                    "sent": "This is, this is what we have to do every day.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So now this is now, let's call it infinitary planning.",
                    "label": 1
                },
                {
                    "sent": "Given a non terministic Bush automaton on Ward called NBAA on word because also tamatown trees.",
                    "label": 0
                },
                {
                    "sent": "Find a word that is accepted by the automaton.",
                    "label": 0
                },
                {
                    "sent": "So the same way that on final tomata we can think about them as a graphs and we all we want is is a path from initial to final state.",
                    "label": 0
                },
                {
                    "sent": "The same thing is true here, but just just a graph theoretic reasoning is just a little more involved.",
                    "label": 0
                },
                {
                    "sent": "So again define the graph as the automaton is the directed graph where the nodes are the States and the edges are all the pairs of states where you can make a transition upon some letter.",
                    "label": 0
                },
                {
                    "sent": "So all the pair St such that is a successor of of S. When you read a.",
                    "label": 0
                },
                {
                    "sent": "And then it's not very difficult to prove the following lemma that the automaton is on empty if there is a path from initial states to some accepting States and then cycle back from that state back to itself.",
                    "label": 1
                },
                {
                    "sent": "And typically we think of it as a loss, so you have a prefix and then a cycle going back.",
                    "label": 0
                },
                {
                    "sent": "And this is because if you think about it because the fundamental states in accepting run, there must be some specific accepting states that you visit infinitely often.",
                    "label": 0
                },
                {
                    "sent": "So you should be able to get to that accepting States and you should be able to get back from that accepting state to itself.",
                    "label": 0
                },
                {
                    "sent": "So the corollary is that if this automaton is nonempty, then there is a weakness of the following form.",
                    "label": 0
                },
                {
                    "sent": "Do first of all do you, and then do we repeated?",
                    "label": 0
                },
                {
                    "sent": "And notice this is now it's nice because it's a finite set program.",
                    "label": 1
                },
                {
                    "sent": "It says do you and then repeatedly do V and both you and we are finite there.",
                    "label": 1
                },
                {
                    "sent": "In fact, the linear in the size of the automaton.",
                    "label": 0
                },
                {
                    "sent": "OK, so we have a finite set program for a for this case.",
                    "label": 0
                },
                {
                    "sent": "So this is if I take kind of classical planning I think of, I think of it automata theoretically, and that enables me to go from finite words to infinite worlds.",
                    "label": 0
                },
                {
                    "sent": "So now we're really planning, but but it is not planning in the typical thing.",
                    "label": 0
                },
                {
                    "sent": "So if you look at air planning first, it was just go to some good configuration.",
                    "label": 0
                },
                {
                    "sent": "So the goal was just some particular set we want to get to, and then people start talking about again using even temporal, temporal, extended goals.",
                    "label": 0
                },
                {
                    "sent": "And then you will say you know, go to this room, but on the way to be, so you must visit.",
                    "label": 0
                },
                {
                    "sent": "A and then and then B or C. And then you must get to whom did something like that.",
                    "label": 0
                },
                {
                    "sent": "But now we're talking about plans for life, and life is now is infinite life.",
                    "label": 0
                },
                {
                    "sent": "Just tell to do for the rest of your life and life is between now and Kingdom come.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Now, so far they were talking about Automata with this temporal logic come in.",
                    "label": 0
                },
                {
                    "sent": "So temporal logic Cummings, because there is very intimate connection between temporal logic and automata, and this was shown in the early 80s.",
                    "label": 0
                },
                {
                    "sent": "Appear wallpaper and myself.",
                    "label": 0
                },
                {
                    "sent": "And the idea is, and I think it's a very important idea cause.",
                    "label": 0
                },
                {
                    "sent": "It's a basic computer science principle.",
                    "label": 0
                },
                {
                    "sent": "Great principle, computer science that humans deal with better with high level formalisms and machines deal better with low level formalisms.",
                    "label": 0
                },
                {
                    "sent": "So the paradigm here we want to compile from high level to low level and this is what the compilation theorem tells us.",
                    "label": 0
                },
                {
                    "sent": "It says that given an Lt Formula Phi you can build a Bush automaton, a sub fee.",
                    "label": 0
                },
                {
                    "sent": "Such a computation is accepted by the automaton precisely when it is satisfied by the formula.",
                    "label": 1
                },
                {
                    "sent": "And the compilation is at most, and that's good news.",
                    "label": 1
                },
                {
                    "sent": "And if you drop the last sentence.",
                    "label": 0
                },
                {
                    "sent": "Then essentially, this was already approved by Bush.",
                    "label": 0
                },
                {
                    "sent": "Because you can translate very easily Lt L2 MSO and Bush already prove it to me so.",
                    "label": 0
                },
                {
                    "sent": "But if you go that way, you're going to get a non elementary bound.",
                    "label": 0
                },
                {
                    "sent": "So here is the fact that we don't want to go through and so we have another alternative translation which is only exponential instead of being non elementary.",
                    "label": 0
                },
                {
                    "sent": "So that's really is explaining this essentially theorem explained I Lt L is so much better computationally than MSO is because you can translate automata with exponential blowup.",
                    "label": 0
                },
                {
                    "sent": "In, let's take two formulas once.",
                    "label": 0
                },
                {
                    "sent": "They always eventually P. That means that P must happen infinitely often.",
                    "label": 0
                },
                {
                    "sent": "And this is just like infinitely many ones.",
                    "label": 0
                },
                {
                    "sent": "And so we saw the little automaton for that, it's deterministic.",
                    "label": 1
                },
                {
                    "sent": "Anne.",
                    "label": 0
                },
                {
                    "sent": "Eventually, always P means from some point on.",
                    "label": 0
                },
                {
                    "sent": "It must be true.",
                    "label": 0
                },
                {
                    "sent": "There must be only finitely many, not P. And this is like finitely many zeros and again we saw the automaton for that.",
                    "label": 0
                },
                {
                    "sent": "So the automaton showed you before are kind of represent these type of compilation.",
                    "label": 0
                },
                {
                    "sent": "An in fact here we're going to see the normal ISM is essential.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So this is.",
                    "label": 0
                },
                {
                    "sent": "This is essentially how we can do and this is what we're proposing, esentially with some historical revisionism.",
                    "label": 0
                },
                {
                    "sent": "But essentially you can say this proposed 1981 is to take an input formula Phi.",
                    "label": 0
                },
                {
                    "sent": "And we want to find award satisfying the formula.",
                    "label": 0
                },
                {
                    "sent": "That's the planning problem.",
                    "label": 0
                },
                {
                    "sent": "Finding work that satisfies the formula.",
                    "label": 0
                },
                {
                    "sent": "Check if the formula is satisfy aghbal.",
                    "label": 0
                },
                {
                    "sent": "And you do that by simply translating it to an automaton and now doing the planning problem for the automaton.",
                    "label": 0
                },
                {
                    "sent": "So this is where we are roughly circa 1985.",
                    "label": 0
                },
                {
                    "sent": "Before people start about reactive systems and universal planning.",
                    "label": 0
                },
                {
                    "sent": "And realize ability.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So now I want to introduce reactivity into it.",
                    "label": 0
                },
                {
                    "sent": "And your activity.",
                    "label": 0
                },
                {
                    "sent": "One way you think about this is when you do an action.",
                    "label": 0
                },
                {
                    "sent": "The outcome is known terministic, and it means it's determined by an adversary, so it goes to our game theoretic setting.",
                    "label": 0
                },
                {
                    "sent": "So I'm now going to think of the system playing games against an environment, so the system is the good guy and he is the bad guy is for evil.",
                    "label": 0
                },
                {
                    "sent": "If you want is the bad guy.",
                    "label": 0
                },
                {
                    "sent": "So here is one way to do it.",
                    "label": 0
                },
                {
                    "sent": "So imagine the following game system chooses an output value, a environment chosen an input value B.",
                    "label": 1
                },
                {
                    "sent": "So every round we get a pair of values, an input and output value.",
                    "label": 0
                },
                {
                    "sent": "So the play now is going to be award.",
                    "label": 1
                },
                {
                    "sent": "Over the Alphabet Sigma times Delta right?",
                    "label": 0
                },
                {
                    "sent": "So every at every position you have a pair of letters and a sequence of such pairs.",
                    "label": 0
                },
                {
                    "sent": "This is the play.",
                    "label": 0
                },
                {
                    "sent": "Now for specification, assume that you simply have a DFA except all the winning plays.",
                    "label": 0
                },
                {
                    "sent": "Over so it's a DFA over the Alphabet Sigma course Delta.",
                    "label": 0
                },
                {
                    "sent": "And now for the system.",
                    "label": 1
                },
                {
                    "sent": "The system will win when the play is accepted by the automaton.",
                    "label": 0
                },
                {
                    "sent": "And of course what we want is a winning strategy.",
                    "label": 0
                },
                {
                    "sent": "Winning strategy is going to be again a function.",
                    "label": 0
                },
                {
                    "sent": "Home Delta Star Delta are the moves by the environment from Delta Star to Sigma.",
                    "label": 0
                },
                {
                    "sent": "I saw what the environment is done so far and I decided my next letter.",
                    "label": 0
                },
                {
                    "sent": "It is eligibility will be looking for a winning strategy and synthesis will be constructing a winning strategy.",
                    "label": 0
                },
                {
                    "sent": "So this is in some sense it's the simplest setting to describe reactive planning or universal planning.",
                    "label": 0
                },
                {
                    "sent": "Reactive synthesis is same as universal planning and hear the specifications given the DFA over these pairs of moves by the environment and the system.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So how do we solve it?",
                    "label": 0
                },
                {
                    "sent": "Well, now it's not about finding path anymore, because now it's really is and this is.",
                    "label": 0
                },
                {
                    "sent": "This is the essence to me, of spending an unsent uncertain world and this time I opened the paper and a politician announced I have a plan to accomplish X and the plan is I will do A and then B and then C. But of course we live in a world where the outcome of action is not determined.",
                    "label": 0
                },
                {
                    "sent": "And they never says well, I will do A and then if.",
                    "label": 0
                },
                {
                    "sent": "This will happen or that will happen.",
                    "label": 0
                },
                {
                    "sent": "I will do B and then depend on that outcome.",
                    "label": 0
                },
                {
                    "sent": "I will do see.",
                    "label": 0
                },
                {
                    "sent": "So here we have to think, of course, in terms of what happens.",
                    "label": 0
                },
                {
                    "sent": "So to solve such game reason backwards.",
                    "label": 0
                },
                {
                    "sent": "OK, so the question is, I will say can I win?",
                    "label": 0
                },
                {
                    "sent": "In I moves.",
                    "label": 0
                },
                {
                    "sent": "OK, how do I win in zero moves for example?",
                    "label": 0
                },
                {
                    "sent": "In zero move if the automaton except empty world.",
                    "label": 0
                },
                {
                    "sent": "If the empty world is a winning, play them without doing anything the system wins.",
                    "label": 0
                },
                {
                    "sent": "So in this case.",
                    "label": 0
                },
                {
                    "sent": "Will compute the set of states from which you win in I moves, so we assume that we start from zero, but I will actually generalize and say, let's compute the states from which you win in I moves.",
                    "label": 0
                },
                {
                    "sent": "So to compute to win in zero state, you must be an accepting states.",
                    "label": 0
                },
                {
                    "sent": "It's the only way you win in zero steps.",
                    "label": 0
                },
                {
                    "sent": "And if you compute it, if you can win in I moves then you win in I + 1 moves in the reviewing in eye moves or the state has to be such that there is some letter A that you can choose such as four letter.",
                    "label": 0
                },
                {
                    "sent": "That environment chooses once you make the transition.",
                    "label": 0
                },
                {
                    "sent": "You can win in AI moves.",
                    "label": 0
                },
                {
                    "sent": "So this is just very simple induction.",
                    "label": 0
                },
                {
                    "sent": "This is this is end or games.",
                    "label": 0
                },
                {
                    "sent": "Essentially this is taking the standard indoor games and putting now the moves of the removal of the of the system are the OR moves and it moves by the environment of the Earth moves.",
                    "label": 0
                },
                {
                    "sent": "This is very simple so this gives us.",
                    "label": 0
                },
                {
                    "sent": "You can see this is a realistic one algorithm and it correspond to two.",
                    "label": 0
                },
                {
                    "sent": "For example, you can express it to satisfy satisfy ability of horn clauses, so this can be done in linear time, but it's just check your eligibility doesn't give a synthesis.",
                    "label": 0
                },
                {
                    "sent": "I want to go further and do synthesis.",
                    "label": 0
                },
                {
                    "sent": "So until now I was a bit vague.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "But what is it I want to synthesize?",
                    "label": 0
                },
                {
                    "sent": "So what I want to construct is really a function representation of a strategy.",
                    "label": 1
                },
                {
                    "sent": "This is, again, this is a very old object.",
                    "label": 0
                },
                {
                    "sent": "If you go back to automata theory in the 50s and some of you may be old enough that at some point in your life you read about transducers, more machines milling machines, this is stuff that was all part of the kernel of computer science, but there's been gradually new books came on top and this has been kind of pushed to the bottom shelves and maybe realize it anymore, but this is very similar to DFA, except that it has two type of.",
                    "label": 1
                },
                {
                    "sent": "Alphabet, input alphabet and output alphabet.",
                    "label": 0
                },
                {
                    "sent": "And in addition to the usual stuff, instead of talking about acceptance or rejection, we have a function that gives you for any given state, it tells you what is the output.",
                    "label": 0
                },
                {
                    "sent": "So you can think of standard DFA as a transducer where the output is simply zero or one accept or reject, but in general we can have instead of having only two lights, you can have several several lights.",
                    "label": 0
                },
                {
                    "sent": "In fact, if you go back to, I think one of the very first, I think the first kind of personal computer was altaira 8080, and it had essentially set of switches.",
                    "label": 0
                },
                {
                    "sent": "You can set and there were set of lights and that this was the output of the thing.",
                    "label": 0
                },
                {
                    "sent": "There is no other input or output.",
                    "label": 0
                },
                {
                    "sent": "The switches and the lights or the input and output.",
                    "label": 0
                },
                {
                    "sent": "So it turns out and this is a nice exercise because this is DF synthesis.",
                    "label": 0
                },
                {
                    "sent": "Very simple.",
                    "label": 0
                },
                {
                    "sent": "Once you compute this win zero win I etc.",
                    "label": 0
                },
                {
                    "sent": "And at some point you gotta fix.",
                    "label": 0
                },
                {
                    "sent": "Point this in a very natural way will give you the states of the transducer.",
                    "label": 0
                },
                {
                    "sent": "And the choices that you're going to make at every at every level.",
                    "label": 0
                },
                {
                    "sent": "How to go back to the previous level will give you the the moves of distance yourself, so it's easy to contact transducers once you've constructed a sequence of winning zone.",
                    "label": 0
                },
                {
                    "sent": "The winning zones in the automaton.",
                    "label": 0
                },
                {
                    "sent": "So this is the face synthesis and again this is.",
                    "label": 0
                },
                {
                    "sent": "This is fairly.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So now let's generalize a little bit and I should add this correspond to something that people called reachability games.",
                    "label": 0
                },
                {
                    "sent": "OK, so which ability games is you?",
                    "label": 0
                },
                {
                    "sent": "Imagine if you have a bipartite graph.",
                    "label": 0
                },
                {
                    "sent": "And you have nodes Visio where player zero moves and not one more player one move and there's a winning region.",
                    "label": 0
                },
                {
                    "sent": "An the goal of the of the of the system is to get to the player.",
                    "label": 0
                },
                {
                    "sent": "Zero wants to get to the winning region and player one wants to stay out of the winning and then you do exactly the same kind of reasoning.",
                    "label": 0
                },
                {
                    "sent": "The same kind of backward induction that you saw and so reachability games can be solved in linear time and easy to get synthesis for reachability games.",
                    "label": 1
                },
                {
                    "sent": "So reachability games are the easiest games for us to solve.",
                    "label": 0
                },
                {
                    "sent": "I mean there are classical indoor games.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Indoor trees.",
                    "label": 0
                },
                {
                    "sent": "So now let's generalize it slightly and start talking about NFL games.",
                    "label": 0
                },
                {
                    "sent": "So the setting is going to be exactly the same as we had before.",
                    "label": 0
                },
                {
                    "sent": "Date, so again, system chooses environment chooses every round is a pair of letter.",
                    "label": 0
                },
                {
                    "sent": "The pleasure is a word over pairs of letters, but now the specification is an NFA.",
                    "label": 0
                },
                {
                    "sent": "Now, if you recall when I did planning before, there was really very little difference between between DFA and NFA.",
                    "label": 0
                },
                {
                    "sent": "You just have to find a path from initial to accepting states.",
                    "label": 0
                },
                {
                    "sent": "But now we realize.",
                    "label": 0
                },
                {
                    "sent": "There is a fundamental problem.",
                    "label": 0
                },
                {
                    "sent": "In a fundamental is.",
                    "label": 0
                },
                {
                    "sent": "Did not Minnesota have incredible power?",
                    "label": 0
                },
                {
                    "sent": "They can look at the full world.",
                    "label": 0
                },
                {
                    "sent": "And then they make.",
                    "label": 0
                },
                {
                    "sent": "They make the choices.",
                    "label": 0
                },
                {
                    "sent": "They don't have to make their choice.",
                    "label": 0
                },
                {
                    "sent": "Letter by letter.",
                    "label": 0
                },
                {
                    "sent": "Even even if you look at an infinite worlds first, automaton comes in, it looks at all the world from here to Infinity, then says OK, I know how to accept this world.",
                    "label": 0
                },
                {
                    "sent": "I'll do this sequence of moves.",
                    "label": 0
                },
                {
                    "sent": "But we're interested hearing playing games to play games you can see into the future.",
                    "label": 0
                },
                {
                    "sent": "You have no look ahead.",
                    "label": 0
                },
                {
                    "sent": "You only know what you've seen so far.",
                    "label": 0
                },
                {
                    "sent": "Strategies have no foresight, automata have foresight, and the only way that we know how to solve it.",
                    "label": 1
                },
                {
                    "sent": "And this can be proved in a formal sense, we use to determine eyes.",
                    "label": 0
                },
                {
                    "sent": "The world we must determine as automaton and then go back to DFA games.",
                    "label": 0
                },
                {
                    "sent": "And that means suddenly, if you determine ize their exponential blowup when we determine as automata.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And the same, the same will happen.",
                    "label": 0
                },
                {
                    "sent": "Now let's go to NBA game.",
                    "label": 0
                },
                {
                    "sent": "So again, it's the same.",
                    "label": 0
                },
                {
                    "sent": "Set up exactly the same setup.",
                    "label": 0
                },
                {
                    "sent": "But now the plays are going to be infinite.",
                    "label": 0
                },
                {
                    "sent": "These are going to be infinite place and the specification will be in terms of Bush automaton.",
                    "label": 0
                },
                {
                    "sent": "And we have, and we have LTL game.",
                    "label": 0
                },
                {
                    "sent": "It will be the same issue because the formula what we saw before we can translate formulas to non terministic automata.",
                    "label": 0
                },
                {
                    "sent": "And with invisible to don't don't lend themselves to solving games.",
                    "label": 0
                },
                {
                    "sent": "We must determine eyes, and essentially this is really what people have done earlier.",
                    "label": 0
                },
                {
                    "sent": "They actually the same thing was done with me.",
                    "label": 0
                },
                {
                    "sent": "So you build automata you determine as automata, then you play games on the top with deterministic automata.",
                    "label": 0
                },
                {
                    "sent": "And essentially this is when Robin talk about rubbing tree automata.",
                    "label": 0
                },
                {
                    "sent": "You can think of to automatize as a game, but you must determine as automata.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "The problem is the determining Omega automata is not so simple.",
                    "label": 0
                },
                {
                    "sent": "So for automaton finite words, again, we know there is a subset construction.",
                    "label": 0
                },
                {
                    "sent": "It's expensive, but it's only one exponential, so we know how to do it.",
                    "label": 0
                },
                {
                    "sent": "But if we go back to this automata, remember this automata flies.",
                    "label": 0
                },
                {
                    "sent": "Right, so you want to get married, but only if you're going to be happy ever after with this particular spouse.",
                    "label": 0
                },
                {
                    "sent": "And answer it, there's no way to do Terministic Lee.",
                    "label": 0
                },
                {
                    "sent": "We all know that you just have to.",
                    "label": 0
                },
                {
                    "sent": "Eventually you have to close your eyes and jump right and.",
                    "label": 0
                },
                {
                    "sent": "Sometimes you're happy, sometimes sometimes you're dead.",
                    "label": 0
                },
                {
                    "sent": "And so it turns out that unlike automaton finite words where we have this incredible robustness, Bush automata cannot be determine ized.",
                    "label": 0
                },
                {
                    "sent": "You want to determine eyes, you have to use more general acceptance condition.",
                    "label": 1
                },
                {
                    "sent": "And I remember when I talked about Rabin Automata.",
                    "label": 0
                },
                {
                    "sent": "Though this weird condition that has a set of pairs of sets of states that come from, you cannot terminate within Bush exception condition, not powerful enough, and it did make note on in 1966 with a very complicated construction show.",
                    "label": 0
                },
                {
                    "sent": "That you can use essentially rubbing exceptions condition.",
                    "label": 1
                },
                {
                    "sent": "And but the blowup is double exponential, so this would result in 1966.",
                    "label": 0
                }
            ]
        },
        "clip_31": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And then in the late 80s, suddenly people are revisiting this question.",
                    "label": 0
                },
                {
                    "sent": "Does it have to be double exponential?",
                    "label": 0
                },
                {
                    "sent": "In fact, even double exponential was not something that Mcnaughten was aware of.",
                    "label": 0
                },
                {
                    "sent": "It.",
                    "label": 0
                },
                {
                    "sent": "I met him sometimes in the 80s and ask him if he knows how many stages construction used and he said lots and lots of states.",
                    "label": 0
                },
                {
                    "sent": "And if we think of lots is exponential.",
                    "label": 1
                },
                {
                    "sent": "And lots and lots was actually very accurate.",
                    "label": 0
                },
                {
                    "sent": "By the late 80s with people have come up with another acceptance condition, so if you thought that Robin condition was weird.",
                    "label": 0
                },
                {
                    "sent": "Then sit tight.",
                    "label": 0
                },
                {
                    "sent": "So in the people of defining what became known as parity automata, So what is acceptance condition?",
                    "label": 0
                },
                {
                    "sent": "Exception conditions is the partition of the set of states.",
                    "label": 0
                },
                {
                    "sent": "It's a partition of the set of states.",
                    "label": 1
                },
                {
                    "sent": "The index of the partition, the size of the prediction is called the index it's K. And you accept if the list.",
                    "label": 0
                },
                {
                    "sent": "I suggest FIS visit infinitely often is even.",
                    "label": 1
                },
                {
                    "sent": "OK, and it look at it.",
                    "label": 0
                },
                {
                    "sent": "I'm sure it looks to you.",
                    "label": 0
                },
                {
                    "sent": "It looks to anybody really bizzare condition and only explanation is you have to be there.",
                    "label": 0
                },
                {
                    "sent": "OK you have to understand it has one advantage that it is.",
                    "label": 0
                },
                {
                    "sent": "It is easily self dual because if you want to negate it it becomes ordered by adding one empty set you can very easily.",
                    "label": 0
                },
                {
                    "sent": "So this condition is self dual Robin condition was not self dual which makes it more difficult.",
                    "label": 0
                },
                {
                    "sent": "So for example this automaton that we saw you cannot do.",
                    "label": 0
                },
                {
                    "sent": "We you couldn't do it with this language.",
                    "label": 0
                },
                {
                    "sent": "Said finally means you do it with book condition, but you can do it easily with parity condition and not suffer was able to show was really a wonderful paper in 1988 that with North States you can build germanistik party automaton with one exponential blowup, but it's not too.",
                    "label": 0
                },
                {
                    "sent": "Then it sent to the power of North and the indexes is linear.",
                    "label": 0
                }
            ]
        },
        "clip_32": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "And that means that the game that we're going to be playing.",
                    "label": 0
                },
                {
                    "sent": "Before I talked about Reachability games, now we're going to be playing playing party games.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "So party games well again it's think of it.",
                    "label": 0
                },
                {
                    "sent": "It's a graph based game.",
                    "label": 0
                },
                {
                    "sent": "It's bipartite graph.",
                    "label": 0
                },
                {
                    "sent": "There are the graph, they are the nodes of nodes of player zero, player zero, move whenever you're in a V0 player, zero move to take some move on whenever you are in V1 player one makes a move but not exact.",
                    "label": 0
                },
                {
                    "sent": "Condition is going to be the winning condition is going to be.",
                    "label": 0
                },
                {
                    "sent": "We're going to have a partition of the set of nodes.",
                    "label": 0
                },
                {
                    "sent": "And Player Zero win if.",
                    "label": 0
                },
                {
                    "sent": "The least I such W subies with infinitely often has to be even.",
                    "label": 1
                },
                {
                    "sent": "Now this is a nasty little game.",
                    "label": 0
                },
                {
                    "sent": "'cause I mean it is it's been now and open questions now for since the.",
                    "label": 0
                },
                {
                    "sent": "They relate to to mid to late 80s, so by now 25 years, what do we know about this problem?",
                    "label": 0
                },
                {
                    "sent": "We know that it's in NP intersect point defects in Jupiter's echo PUP is the NP.",
                    "label": 0
                },
                {
                    "sent": "When you have unique, unique accepting runs.",
                    "label": 0
                },
                {
                    "sent": "So it's an NP intersect Co and P. We can do it in, enter the power off K or case the index.",
                    "label": 0
                },
                {
                    "sent": "There is an algorithm.",
                    "label": 0
                },
                {
                    "sent": "The best algorithm that we know is end to the power of square root of North and the open question is it in P time or not?",
                    "label": 0
                },
                {
                    "sent": "It's unlikely to be NP complete cause of because it's in NP intersect Co NP.",
                    "label": 0
                },
                {
                    "sent": "So it's not clear how to prove lower bounds an people have now been trying.",
                    "label": 0
                },
                {
                    "sent": "I know it this problem wrecked at least one career person who's determined to solve this problem and essentially fell into a black hole and never came out.",
                    "label": 0
                }
            ]
        },
        "clip_33": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So, so this.",
                    "label": 0
                },
                {
                    "sent": "Essentially this is how today we do LTL synthesis.",
                    "label": 0
                },
                {
                    "sent": "OK, we start from the specification.",
                    "label": 0
                },
                {
                    "sent": "We build a Bush automaton.",
                    "label": 0
                },
                {
                    "sent": "We converted to deterministic parity automaton.",
                    "label": 0
                },
                {
                    "sent": "And then we have to play party games.",
                    "label": 0
                },
                {
                    "sent": "And when you put all of it together, you get that you can do it in double exponential time.",
                    "label": 0
                },
                {
                    "sent": "And you'll get a transducer whose size in the worst case could be double exponential.",
                    "label": 0
                },
                {
                    "sent": "It's a number of states.",
                    "label": 0
                },
                {
                    "sent": "If you think of implementing it in a program the size of the program will be exponentially.",
                    "label": 0
                },
                {
                    "sent": "Just what it tells us the program might be exponentially larger.",
                    "label": 0
                }
            ]
        },
        "clip_34": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So this is where the theorist ends, and it's it's a very elegant, very beautiful theory.",
                    "label": 0
                },
                {
                    "sent": "But it's quite far from practice and one would ask why is it far from practice, so it used to be the peoples.",
                    "label": 0
                },
                {
                    "sent": "All this automata theory is very beautiful, but it's not very practical.",
                    "label": 0
                },
                {
                    "sent": "But by now we know that this automata theory can mean many practical.",
                    "label": 0
                },
                {
                    "sent": "There is in fact there is a package called Mona which is Amazon Finite worlds with full Monadic 2nd order logic, which is known elementary.",
                    "label": 0
                },
                {
                    "sent": "But this is well, yes, in some cases we will blow up, but in many cases we get actually optimal, optimal and very good algorithms.",
                    "label": 0
                },
                {
                    "sent": "LTL model checking is now on Lt alone.",
                    "label": 0
                },
                {
                    "sent": "Infinite word.",
                    "label": 0
                },
                {
                    "sent": "Using automata theory is now industrial practice.",
                    "label": 0
                },
                {
                    "sent": "And the other cases where people have implemented automata three quite successfully.",
                    "label": 0
                },
                {
                    "sent": "But but there are very few implementation of LTL synthesis.",
                    "label": 0
                },
                {
                    "sent": "And was that algorithmic building blocks are still too difficult like this suffered determinization, even though by now this has been somewhat improve.",
                    "label": 0
                },
                {
                    "sent": "Still just an example, somebody tried to take a 9 state.",
                    "label": 0
                },
                {
                    "sent": "Bush automaton applied construction and you get from 9 state to Vermilion states in the terministic automaton, just say.",
                    "label": 0
                },
                {
                    "sent": "Gymnastic construction and the state space is very difficult, which means we want to bring in symbolic algorithm using BDS.",
                    "label": 0
                },
                {
                    "sent": "For example, we need nice description of the state space and this other construction is very difficult to make symbolic.",
                    "label": 0
                },
                {
                    "sent": "So the problem to me is not the double exponential time.",
                    "label": 0
                },
                {
                    "sent": "The problem is the algorithms are just not good enough yet and that's what we need to work on.",
                    "label": 0
                }
            ]
        },
        "clip_35": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And I'll just mention A1 result that one progress of the last few years and there are many more.",
                    "label": 0
                },
                {
                    "sent": "But I will mention one progress, which is that in 2005 Oracle Foreman and I find a way to get around.",
                    "label": 0
                },
                {
                    "sent": "One this difficulty, which is they need to use the suffer determinization.",
                    "label": 0
                },
                {
                    "sent": "And we found a way to get around it.",
                    "label": 0
                },
                {
                    "sent": "In effect we are able to reduce the problem, not to.",
                    "label": 0
                }
            ]
        },
        "clip_36": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Party games, but two recurrence games.",
                    "label": 0
                },
                {
                    "sent": "Whether the current game again it's the same graph theoretic setting, people take moves.",
                    "label": 0
                },
                {
                    "sent": "But the goal of player player Player 0 is not to reach the winning the winning zone but with which the winning zone infinitely often.",
                    "label": 0
                },
                {
                    "sent": "So now it's an infinite game and you have to win infinitely often, and this is much more simpler to solve this game than to solve parity game.",
                    "label": 0
                },
                {
                    "sent": "These are clearly we have a quadratic algorithm for current games.",
                    "label": 0
                }
            ]
        },
        "clip_37": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "It is.",
                    "label": 0
                },
                {
                    "sent": "This is not mean.",
                    "label": 0
                },
                {
                    "sent": "This is by no means a panacea.",
                    "label": 0
                },
                {
                    "sent": "This approach introduce its own difficulties, but it can be made symbolic.",
                    "label": 0
                },
                {
                    "sent": "There have been some mentations, some I would say preliminary.",
                    "label": 0
                },
                {
                    "sent": "Equally preliminary implementation shows that it's much easier to use this approach than to use a suffers approach.",
                    "label": 0
                },
                {
                    "sent": "And there is a lot of experimentation, experimentation going on now on the data structures and underlying algorithmics to make it better.",
                    "label": 0
                }
            ]
        },
        "clip_38": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And an important part here, which I did not say spend much, is that when you think about large systems, the idea is that you get fully specified system.",
                    "label": 0
                },
                {
                    "sent": "And is correctly specified is very unrealistic.",
                    "label": 0
                },
                {
                    "sent": "Reality is people with some specification.",
                    "label": 0
                },
                {
                    "sent": "You build something so it doesn't quite do what we want.",
                    "label": 0
                },
                {
                    "sent": "We have some additional properties and you want to do it without starting the whole work from scratch every time, and this is all incremental synthesis and there are some some progress along this line too.",
                    "label": 1
                }
            ]
        },
        "clip_39": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So we go back to the question is so it's a problem that we know it to be double exponential time complete.",
                    "label": 0
                },
                {
                    "sent": "Can we hope to practice and is argued before the worst case approach is overly pessimistic.",
                    "label": 1
                },
                {
                    "sent": "What we want is we want to have algorithm that will blow up sometimes, but only when necessary.",
                    "label": 0
                },
                {
                    "sent": "If for example, if there is no small program to implement religious specification where this is life.",
                    "label": 0
                },
                {
                    "sent": "But I want something that will not be in something.",
                    "label": 0
                },
                {
                    "sent": "Ideally you want something will be somehow will be, maybe at most exponentially in the program.",
                    "label": 0
                },
                {
                    "sent": "Others in double exponentially in the program.",
                    "label": 0
                },
                {
                    "sent": "So this is where really well I think they need to put them in France now with algorithmic engineering.",
                    "label": 0
                }
            ]
        },
        "clip_40": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And I want to come back to the same that was mentioned here at the very introduction is the relation between verification and planning.",
                    "label": 0
                },
                {
                    "sent": "But I hope I've convinced you that we're essentially working on the same problem.",
                    "label": 1
                },
                {
                    "sent": "Preps with somewhat different perspectives and the perspective casting community was really on dealing with.",
                    "label": 0
                },
                {
                    "sent": "Very expressive specification and try to deal with the general case, but there is a lot of work that they have time to mention looking at sub cases I think we already saw at least three things that I know off and maybe I'm missing.",
                    "label": 0
                },
                {
                    "sent": "Maybe maybe more.",
                    "label": 0
                },
                {
                    "sent": "I think 2 very important tech transfer between the two areas.",
                    "label": 0
                },
                {
                    "sent": "Bounded model checking clearly came from the planning community and revolutionized the practice of model checking.",
                    "label": 0
                },
                {
                    "sent": "Today when you look at industry does is bounded model checking which is set based an at the same time.",
                    "label": 0
                },
                {
                    "sent": "BDS moved to planning an as temporal goals.",
                    "label": 0
                },
                {
                    "sent": "Also, people now are familiar with little use, temporal goals and what I hope this will stimulate to some degree is more collaboration and more tech transfer between the two communities.",
                    "label": 0
                },
                {
                    "sent": "Thank you very much.",
                    "label": 0
                },
                {
                    "sent": "The third time I've heard of dogs in the past few years.",
                    "label": 1
                },
                {
                    "sent": "Every time was something else that each song is really for me, inspiring things.",
                    "label": 0
                },
                {
                    "sent": "Most people will feel the same.",
                    "label": 0
                },
                {
                    "sent": "Maybe you should use the mic because I'm told it's being recorded.",
                    "label": 0
                },
                {
                    "sent": "No, no use the mic.",
                    "label": 0
                },
                {
                    "sent": "Posterity not for me.",
                    "label": 0
                },
                {
                    "sent": "For posterity.",
                    "label": 0
                },
                {
                    "sent": "OK, wonderful theoretical framework.",
                    "label": 0
                },
                {
                    "sent": "Wonderful talker.",
                    "label": 0
                },
                {
                    "sent": "You make it hard for us to be to shopping and stuff today the talk.",
                    "label": 0
                },
                {
                    "sent": "Now they are striking parallels, as you say between planning Anan.",
                    "label": 0
                },
                {
                    "sent": "And so on.",
                    "label": 0
                },
                {
                    "sent": "An.",
                    "label": 0
                },
                {
                    "sent": "It looks to me that one key difference is the definition or or the filling of what it means by better algorithms.",
                    "label": 1
                },
                {
                    "sent": "So it looks at all your slides.",
                    "label": 0
                },
                {
                    "sent": "You're focusing on worst case complexity results, what in AI we are not so pessimistic.",
                    "label": 0
                },
                {
                    "sent": "We tend to be actually the other way around.",
                    "label": 0
                },
                {
                    "sent": "We are very optimistic.",
                    "label": 0
                },
                {
                    "sent": "OK, I tend to ignore worse complexity results and head on anyway, so maybe you can comment on that a bit so.",
                    "label": 0
                },
                {
                    "sent": "I I agree with you violently.",
                    "label": 0
                },
                {
                    "sent": "OK, so whatever they say, if you just look at complexity, we will complete all the questions were all settled by 99.",
                    "label": 0
                },
                {
                    "sent": "So by 1990 the theory was closed in some sense by 1990 and everything that we that we see from since 1990 was really focusing very much in the same way that people here was algorithm algorithm will work better in practice and I said it doesn't trouble me.",
                    "label": 0
                },
                {
                    "sent": "This double exponential time and it means that there will be some specification on which we will fail.",
                    "label": 0
                },
                {
                    "sent": "OK, this is OK.",
                    "label": 0
                },
                {
                    "sent": "But I want this specification that will on algorithm that would work better on typical specification specification that a person can solve easily OK, so we should we should have program that will be able to do what people can do and be able to do it more so now.",
                    "label": 0
                },
                {
                    "sent": "I think we're very much and I said until 19:00, 90.",
                    "label": 0
                },
                {
                    "sent": "This was afraid question that we focused very much.",
                    "label": 0
                },
                {
                    "sent": "But in fact, I have to say that some of the problem now is that we write papers and we said this is a better algorithm.",
                    "label": 1
                },
                {
                    "sent": "Anne and people said, well, it's not a better complexity.",
                    "label": 0
                },
                {
                    "sent": "So in what sense is the algorithm?",
                    "label": 0
                },
                {
                    "sent": "And it's just now.",
                    "label": 0
                },
                {
                    "sent": "It's harder to make the case of progress, but very much this direction.",
                    "label": 0
                },
                {
                    "sent": "We need to go absolutely.",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "What?",
                    "label": 0
                },
                {
                    "sent": "The community has focused very early on on defining problems like City and all that that some much more practical realization.",
                    "label": 0
                },
                {
                    "sent": "So algorithm algorithms for solving those problems I've I've been developed more by the planning community.",
                    "label": 0
                },
                {
                    "sent": "I mean, if you set up a number of examples.",
                    "label": 0
                },
                {
                    "sent": "We have algorithms to solve.",
                    "label": 0
                },
                {
                    "sent": "Many of those.",
                    "label": 0
                },
                {
                    "sent": "I mean, I'm not sure whether you think some of the work that's been done here actually provides some answers to the questions in.",
                    "label": 0
                },
                {
                    "sent": "Your community, or do you think it's basically, you know, not that significant?",
                    "label": 0
                },
                {
                    "sent": "I mean, we sometimes use some tools you know from from the verification community, which is, for instance, you know for instance or BDS, but so do you think you would you agree with my my guess that really the practical, the algorithms for solving those problems I've come more from the planning community.",
                    "label": 0
                },
                {
                    "sent": "So I think that you know.",
                    "label": 0
                },
                {
                    "sent": "I was given one hour.",
                    "label": 0
                },
                {
                    "sent": "If you give me 10 hours with different presentation.",
                    "label": 0
                },
                {
                    "sent": "One of the things that I think the problem between between communities that that usually will transfer are the most significant bits.",
                    "label": 0
                },
                {
                    "sent": "OK, stick for example automotive theoretic approach to just a verification to model checking.",
                    "label": 0
                },
                {
                    "sent": "So if you know about it then you know OK you translate from logic to automata, but what you may not realize that.",
                    "label": 0
                },
                {
                    "sent": "I would say for the last now 15 years, much effort has gone on just optimizing the worse complex potential just optimizing.",
                    "label": 0
                },
                {
                    "sent": "And this is still an ongoing error filter.",
                    "label": 0
                },
                {
                    "sent": "Just optimizing this translation very much, focusing on on performance.",
                    "label": 0
                },
                {
                    "sent": "So if you look today what's happening much overlapping model checking.",
                    "label": 0
                },
                {
                    "sent": "In general if you ask anybody, was at Clark, what is the challenge he would say static explosion problem so very much the two communities very much dealing with very similar issues.",
                    "label": 0
                },
                {
                    "sent": "It's not as if somehow you think unification or just appointed, so additions will be surprised.",
                    "label": 0
                },
                {
                    "sent": "I mean there is very much focus on on also on algorithm working practice, and partly because we've had.",
                    "label": 0
                },
                {
                    "sent": "I would say again, roughly from the mid 90s for the last now 15 years, very extensive interaction with industry.",
                    "label": 0
                },
                {
                    "sent": "Much of the focus has been on performance, performance, performance, so I think it's true for verifications.",
                    "label": 0
                },
                {
                    "sent": "For synthesis, I'm not.",
                    "label": 0
                },
                {
                    "sent": "I haven't seen I mean.",
                    "label": 0
                },
                {
                    "sent": "You know, I admit that I might be ignorant in there.",
                    "label": 0
                },
                {
                    "sent": "I haven't seen a lot of work on synthesis coming more methods community until quite recently as opposed to, say, work that's been done in the planning community dating back from, you know, the the mid 90s something.",
                    "label": 0
                },
                {
                    "sent": "So it's fair to say that it is at this point if you look at what happened in formal methods in general, it's fair to say that it is not the major occupation of people.",
                    "label": 0
                },
                {
                    "sent": "Informal method.",
                    "label": 0
                },
                {
                    "sent": "I mean the major occupation is Ceylon verification.",
                    "label": 0
                },
                {
                    "sent": "And justifiably so, because there is immediate industrial demand for better technology vision.",
                    "label": 0
                },
                {
                    "sent": "And since this is still a little bit pie in the Sky four years ago in 2006 there was a workshop celebrating 25 years of model checking and.",
                    "label": 0
                },
                {
                    "sent": "And there was a whole day workshop and then there was a panel and people saw where is model checking going.",
                    "label": 0
                },
                {
                    "sent": "And so I had five minutes and in 5 minutes said model checking should go to synthesis.",
                    "label": 0
                },
                {
                    "sent": "Which is not surprising given my current interest, but with interesting to me is that I said I said I said I'm hoping that in 25 years, so this will be like 2031.",
                    "label": 0
                },
                {
                    "sent": "We will have a workshop celebrating 25 years of synthesis and then I asked.",
                    "label": 0
                },
                {
                    "sent": "The audience occurs.",
                    "label": 0
                },
                {
                    "sent": "So how many people here have an active interest in synthesis?",
                    "label": 0
                },
                {
                    "sent": "An I would expect this that like 5 people who raise their hand and I would say well this has to change.",
                    "label": 0
                },
                {
                    "sent": "But to my surprise.",
                    "label": 0
                },
                {
                    "sent": "About I would say about 1/3 of the people in the audience, so maybe about 100 people, several people on there says I have to have active interest in synthesis so.",
                    "label": 0
                },
                {
                    "sent": "We will have to step back and look in 10 years and see whether there.",
                    "label": 0
                },
                {
                    "sent": "Indeed there is a significant movement in that direction.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "Pretty much.",
                    "label": 0
                },
                {
                    "sent": "It's going to be around here, and if you have your.",
                    "label": 0
                },
                {
                    "sent": "Thank you again.",
                    "label": 0
                }
            ]
        }
    }
}