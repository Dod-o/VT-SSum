{
    "id": "p6c7tvwoi52vpc4sxn6jjvxoxtcesiyp",
    "title": "What is the cube root of 27? Question Answering over CodeOntology",
    "info": {
        "author": [
            "Maurizio Atzori, University of Cagliari"
        ],
        "published": "Nov. 22, 2018",
        "recorded": "October 2018",
        "category": [
            "Top->Computer Science->Semantic Web"
        ]
    },
    "url": "http://videolectures.net/iswc2018_atzori_what_is_27/",
    "segmentation": [
        [
            "Hi everyone, this is a joint work with my student Matias, Annie and OK So.",
            "Since you let me see if I."
        ],
        [
            "OK, so you like the title so can you answer this question?",
            "What is the cube root of the Max between 20 and 27?",
            "Can anyone answer this question?",
            "OK.",
            "He was correct three so.",
            "Of course it's easy for us and also writing a program that can answer this question is 1 liner print three.",
            "But we addressed the problem of of answering this kind of question which is question answering problem of course, but not the typical one.",
            "The usual one.",
            "In fact, in this case we can."
        ],
        [
            "Sorry.",
            "We cannot answer this question with usual factoid question.",
            "Answering, for example the usual question answer is like what is the capital of Italy or things like this.",
            "So you look up for results in a data set or in a corpora or and even advanced data.",
            "Querying is not enough because the answer is not in your data set in this case."
        ],
        [
            "For this kind of questions, you must run some code to have the answer.",
            "And for example, if you use Java, we can run this simple program OK. And."
        ],
        [
            "What we did, of course there are other kind of similar questions that we addressed like convert my string to uppercase or what is the size of ABCD so the size of a string.",
            "So of course we are here.",
            "We are focusing on.",
            "Simple question related to coding basically, but the approach is more general, so we can also apply it to other other application."
        ],
        [
            "And so.",
            "Then what's the idea behind the approach that we used?",
            "We divided this problem so the one of answering natural language questions that require running code into chosen problems.",
            "One is providing a semantic representation of.",
            "The object oriented source code, so we need to represent in a structured way the code.",
            "And the other some problem, let's say, is the question answering over the resulting knowledge base.",
            "So first we construct this knowledge base and then we query it.",
            "So regarding the 1st."
        ],
        [
            "Part of it was addressed that in our previous paper that we presented last year in Vienna is weak.",
            "In fact, we constructed Code Ontology, which is an ontology over object oriented programming describing object oriented source code and we also developed a parser that is able to analyze Java source code and provide an produce generate.",
            "RDF triples using the Code Ontology Ontology except.",
            "So."
        ],
        [
            "And of course it's important to understand how how it works, because all the question answering system is made on top of this.",
            "So how could ontology works?",
            "Basically, given some source code like one on top.",
            "It's a, it's a simple code.",
            "You see.",
            "It's a classic example with a method main, so it's a lower program and given this simple source code column, talagi parser provides output this graph and in this graph you can see that there is a node representing the.",
            "Represented in Java class and also with the property as method and another node that represented the main method.",
            "And this method also has returning type etc and also information about the common natural language comment that represent in natural language the what the method does and also with by using tag me we can also extract from the comments from the text comments other information like.",
            "Basically we create a link, so with the paideia by using A tag ME tag are.",
            "So for example, we can see that there are a node relation with Hello World Program results in data in the deep area.",
            "So we start from this information from this graph."
        ],
        [
            "And this is actually available online and freely.",
            "We basically run code aladji parser over open JDK 8 and so we produce a big.",
            "I'm."
        ],
        [
            "Big data set.",
            "It's two, millions 500,000.",
            "Triples Owner open JDK.",
            "So."
        ],
        [
            "Of course it's easy to query this graph with Sparkle an we can of course run this query like find me all the methods with a parameter that has type double and it's associated with the paideia cube root.",
            "So with Sparkle we can answer by using code Ontology.",
            "The initial question an find a number of methods that match this description.",
            "Let's say there's these constraints.",
            "But"
        ],
        [
            "We want to answer these questions and finding the right methods by just typing a natural language question.",
            "So what is the cube root of 27?",
            "So we split it.",
            "This again we did it on top of Code Ontology so we query.",
            "Eventually we query with Sparkle the graph.",
            "But we focused first on a simple problem, simpler problem that we call the coarse grained approach in this simple, simpler problem.",
            "We focus only on natural language sentences that corresponds to the execution of one single method.",
            "So it's a simpler problem, let's say.",
            "And then on top of it, we construct the."
        ],
        [
            "File system, so the simpler, simpler problem.",
            "In this simple problem, we have a natural language specification.",
            "In this case it's compute the cube root.",
            "That's that's a string, and then we have a list of parameters.",
            "So the question is not just a natural language space, and it's somewhat structure, so we have a list of parameters, input parameters, and also we provide the type the return type.",
            "So in this case double and.",
            "This coarse grained approach is interesting percent 'cause there are application of this task actually.",
            "For example, if you want to.",
            "Provide some tools for developer so inside the integrated integrated development environment that you want to have some tools to help the developer.",
            "So this is interesting person and how it works.",
            "Basically it run a sparkle query.",
            "Constraining the results to have this kind of types and then we that's the interesting part.",
            "We need to rank the results because some of them are not the right answer, for example.",
            "So square root is somewhat related to this query, but of course we're not looking for square root.",
            "We're looking for cube root, so we have our ranking system of these results.",
            "And then of course, hopefully if it works correctly.",
            "Most of the one with a higher score is the method that we need to run in order to get there."
        ],
        [
            "Downstairs so how we approach the ranking problem of?",
            "It's actually we tried to match all them form textual information in the source code with the natural language specification of the query for example and one scoring."
        ],
        [
            "Another is to use the.",
            "Edit distance so basically it's a syntactic future of feature, of course, so we compare the distance of the description of a method and with the description of the query, so of course edit distance is 1 measure."
        ],
        [
            "Under 2.",
            "Measures are the engram overlap between the name of the method and the query or the description of the method and the query and the class metal and query.",
            "And then we also."
        ],
        [
            "Also use the semantic features so we compare using compared the question network language specification and method description.",
            "Using word embeddings, we just used the pre training the Google News or embeddings and also we exploit the pedia links that we extracted, encode ontologies.",
            "So we try to tag also the natural language specification of the query and we see how many.",
            "Basically, how many the ratio of the number of matching tags?",
            "Anne."
        ],
        [
            "OK, then we constructed we bill.",
            "It's a new problem, so we had to build a benchmark and we have exploited Stackoverflow that contains a number of questions.",
            "Of course we filter out all the questions that cannot be answered with just running by running only one gentle method and for the other one.",
            "So the most popular questions we get the result.",
            "The answer provided bye bye.",
            "Stack Overflow and we also had other answers because in many cases like convert a string to an integer, of course, stack overflow provide one answer, but there are other equally correct answer so.",
            "That's how we call structure than the bench."
        ],
        [
            "As we can see that every measure that we used, they all of them.",
            "Are they both the syntactic ones and the semantic features they help in reaching, somewhat surprising.",
            "Precision becausw 90%.",
            "It's more than I expected, actually.",
            "At the beginning, so of course this is the coarse grained problem, so we provide a natural language specification, that of the query and also we provide separately the inputs and the type of expected output, and that's that's the first part then on top."
        ],
        [
            "Of this, we constructed the final system.",
            "Let's say the one focusing on having only one string as input, which is the natural language question.",
            "And we.",
            "Answer These, we probably approached this by exploiting the previous approach.",
            "So in order to solve let's say the final grade approach, we exploited the coarse grained approach.",
            "How we do this?",
            "We run the the natural language questions against the we perform basically dependency parsing, which is something that is provided by the stand for the NLP library and so we get a graph.",
            "Basically this graph that you can see.",
            "This is the first step.",
            "Then we that's a challenging problem.",
            "We try to transform this graph into a tree and the tree will be the execution code basically so."
        ],
        [
            "How can we do it so something that the output that we want to have at this stage of our system is this one?",
            "So given the natural language question, we want to have this tree.",
            "And of course it's we start by transforming the initial graph into a tree.",
            "So we labeled all the leaves with this kind of yellow tag and all the other nodes with Green Tiger.",
            "But then of course, it's not this.",
            "It will be a messy tree.",
            "OK, with many unusable nodes and things like this, so we need to transform the tree into the initial tree provided by dependency graph dependency analysis into something that we can run.",
            "So."
        ],
        [
            "And of course we want also match.",
            "For example, we want to match a Max with the Java function that exploits that computes the Max and same for the cube root.",
            "So we want to maximize the score of all the method calls.",
            "Uh."
        ],
        [
            "And another constraint that we have is that the output of a leaf or a middle node should be compatible with the input type of the of the other node on top of it.",
            "So of course the result of Max should be compatible with the input of the cube root function, so the types must be of course.",
            "I'm Batman."
        ],
        [
            "OK, so this is the.",
            "This is what it happens that once we have a graph like this and these are strings basically extracted from the initial question, we need to match against and find the correct method.",
            "This is done by using the previous approach.",
            "The coarse grained approach.",
            "And as I said, there is a ranking problem, but in this case it's a global ranking problem because we want to match that we want to find the higher score among the all the combinations.",
            "And of course this is a in terms of.",
            "The space that we want to visit is quite large, so we approached it in agreed with Gridlee with agreed algorithm."
        ],
        [
            "Anne.",
            "OK."
        ],
        [
            "So we perform a greedy search.",
            "Also becausw.",
            "As I said, there are nodes.",
            "There are problems with the graph extracted by using the Stanford dependency parsing.",
            "And So what we did basically what we do."
        ],
        [
            "Who is we?",
            "Transform the tree by by merging nodes.",
            "For example, cube root OK. At the beginning there are two nodes and then we create a node that is called labeled only cube root."
        ],
        [
            "And so I'm running out of time, right?",
            "OK, so I will go to the."
        ],
        [
            "So we trance."
        ],
        [
            "Form of these three into a simple one.",
            "And of course we wait all the edits."
        ],
        [
            "Negatively, so we don't want to change too much the graph.",
            "And finally."
        ],
        [
            "So I."
        ],
        [
            "I I just."
        ],
        [
            "We have a 91% of precision which is much better than the only system that that we found that we can compare against, which is Wolfram Alpha.",
            "It's a closed system and so we are pretty happy with the results."
        ],
        [
            "Of course I need to go."
        ],
        [
            "Sorry, OK, and of course if someone if you want to join us, we are running some experiments.",
            "So if you want to test it.",
            "Thank you."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Hi everyone, this is a joint work with my student Matias, Annie and OK So.",
                    "label": 0
                },
                {
                    "sent": "Since you let me see if I.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, so you like the title so can you answer this question?",
                    "label": 0
                },
                {
                    "sent": "What is the cube root of the Max between 20 and 27?",
                    "label": 1
                },
                {
                    "sent": "Can anyone answer this question?",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "He was correct three so.",
                    "label": 0
                },
                {
                    "sent": "Of course it's easy for us and also writing a program that can answer this question is 1 liner print three.",
                    "label": 0
                },
                {
                    "sent": "But we addressed the problem of of answering this kind of question which is question answering problem of course, but not the typical one.",
                    "label": 0
                },
                {
                    "sent": "The usual one.",
                    "label": 0
                },
                {
                    "sent": "In fact, in this case we can.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Sorry.",
                    "label": 0
                },
                {
                    "sent": "We cannot answer this question with usual factoid question.",
                    "label": 0
                },
                {
                    "sent": "Answering, for example the usual question answer is like what is the capital of Italy or things like this.",
                    "label": 1
                },
                {
                    "sent": "So you look up for results in a data set or in a corpora or and even advanced data.",
                    "label": 0
                },
                {
                    "sent": "Querying is not enough because the answer is not in your data set in this case.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "For this kind of questions, you must run some code to have the answer.",
                    "label": 0
                },
                {
                    "sent": "And for example, if you use Java, we can run this simple program OK. And.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "What we did, of course there are other kind of similar questions that we addressed like convert my string to uppercase or what is the size of ABCD so the size of a string.",
                    "label": 1
                },
                {
                    "sent": "So of course we are here.",
                    "label": 0
                },
                {
                    "sent": "We are focusing on.",
                    "label": 0
                },
                {
                    "sent": "Simple question related to coding basically, but the approach is more general, so we can also apply it to other other application.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And so.",
                    "label": 0
                },
                {
                    "sent": "Then what's the idea behind the approach that we used?",
                    "label": 0
                },
                {
                    "sent": "We divided this problem so the one of answering natural language questions that require running code into chosen problems.",
                    "label": 0
                },
                {
                    "sent": "One is providing a semantic representation of.",
                    "label": 1
                },
                {
                    "sent": "The object oriented source code, so we need to represent in a structured way the code.",
                    "label": 1
                },
                {
                    "sent": "And the other some problem, let's say, is the question answering over the resulting knowledge base.",
                    "label": 0
                },
                {
                    "sent": "So first we construct this knowledge base and then we query it.",
                    "label": 0
                },
                {
                    "sent": "So regarding the 1st.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Part of it was addressed that in our previous paper that we presented last year in Vienna is weak.",
                    "label": 0
                },
                {
                    "sent": "In fact, we constructed Code Ontology, which is an ontology over object oriented programming describing object oriented source code and we also developed a parser that is able to analyze Java source code and provide an produce generate.",
                    "label": 1
                },
                {
                    "sent": "RDF triples using the Code Ontology Ontology except.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And of course it's important to understand how how it works, because all the question answering system is made on top of this.",
                    "label": 0
                },
                {
                    "sent": "So how could ontology works?",
                    "label": 0
                },
                {
                    "sent": "Basically, given some source code like one on top.",
                    "label": 0
                },
                {
                    "sent": "It's a, it's a simple code.",
                    "label": 0
                },
                {
                    "sent": "You see.",
                    "label": 0
                },
                {
                    "sent": "It's a classic example with a method main, so it's a lower program and given this simple source code column, talagi parser provides output this graph and in this graph you can see that there is a node representing the.",
                    "label": 0
                },
                {
                    "sent": "Represented in Java class and also with the property as method and another node that represented the main method.",
                    "label": 0
                },
                {
                    "sent": "And this method also has returning type etc and also information about the common natural language comment that represent in natural language the what the method does and also with by using tag me we can also extract from the comments from the text comments other information like.",
                    "label": 0
                },
                {
                    "sent": "Basically we create a link, so with the paideia by using A tag ME tag are.",
                    "label": 0
                },
                {
                    "sent": "So for example, we can see that there are a node relation with Hello World Program results in data in the deep area.",
                    "label": 0
                },
                {
                    "sent": "So we start from this information from this graph.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And this is actually available online and freely.",
                    "label": 0
                },
                {
                    "sent": "We basically run code aladji parser over open JDK 8 and so we produce a big.",
                    "label": 0
                },
                {
                    "sent": "I'm.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Big data set.",
                    "label": 0
                },
                {
                    "sent": "It's two, millions 500,000.",
                    "label": 0
                },
                {
                    "sent": "Triples Owner open JDK.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Of course it's easy to query this graph with Sparkle an we can of course run this query like find me all the methods with a parameter that has type double and it's associated with the paideia cube root.",
                    "label": 0
                },
                {
                    "sent": "So with Sparkle we can answer by using code Ontology.",
                    "label": 0
                },
                {
                    "sent": "The initial question an find a number of methods that match this description.",
                    "label": 0
                },
                {
                    "sent": "Let's say there's these constraints.",
                    "label": 0
                },
                {
                    "sent": "But",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We want to answer these questions and finding the right methods by just typing a natural language question.",
                    "label": 0
                },
                {
                    "sent": "So what is the cube root of 27?",
                    "label": 0
                },
                {
                    "sent": "So we split it.",
                    "label": 0
                },
                {
                    "sent": "This again we did it on top of Code Ontology so we query.",
                    "label": 0
                },
                {
                    "sent": "Eventually we query with Sparkle the graph.",
                    "label": 0
                },
                {
                    "sent": "But we focused first on a simple problem, simpler problem that we call the coarse grained approach in this simple, simpler problem.",
                    "label": 0
                },
                {
                    "sent": "We focus only on natural language sentences that corresponds to the execution of one single method.",
                    "label": 1
                },
                {
                    "sent": "So it's a simpler problem, let's say.",
                    "label": 0
                },
                {
                    "sent": "And then on top of it, we construct the.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "File system, so the simpler, simpler problem.",
                    "label": 0
                },
                {
                    "sent": "In this simple problem, we have a natural language specification.",
                    "label": 0
                },
                {
                    "sent": "In this case it's compute the cube root.",
                    "label": 0
                },
                {
                    "sent": "That's that's a string, and then we have a list of parameters.",
                    "label": 0
                },
                {
                    "sent": "So the question is not just a natural language space, and it's somewhat structure, so we have a list of parameters, input parameters, and also we provide the type the return type.",
                    "label": 0
                },
                {
                    "sent": "So in this case double and.",
                    "label": 0
                },
                {
                    "sent": "This coarse grained approach is interesting percent 'cause there are application of this task actually.",
                    "label": 0
                },
                {
                    "sent": "For example, if you want to.",
                    "label": 0
                },
                {
                    "sent": "Provide some tools for developer so inside the integrated integrated development environment that you want to have some tools to help the developer.",
                    "label": 0
                },
                {
                    "sent": "So this is interesting person and how it works.",
                    "label": 0
                },
                {
                    "sent": "Basically it run a sparkle query.",
                    "label": 0
                },
                {
                    "sent": "Constraining the results to have this kind of types and then we that's the interesting part.",
                    "label": 0
                },
                {
                    "sent": "We need to rank the results because some of them are not the right answer, for example.",
                    "label": 0
                },
                {
                    "sent": "So square root is somewhat related to this query, but of course we're not looking for square root.",
                    "label": 0
                },
                {
                    "sent": "We're looking for cube root, so we have our ranking system of these results.",
                    "label": 0
                },
                {
                    "sent": "And then of course, hopefully if it works correctly.",
                    "label": 0
                },
                {
                    "sent": "Most of the one with a higher score is the method that we need to run in order to get there.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Downstairs so how we approach the ranking problem of?",
                    "label": 0
                },
                {
                    "sent": "It's actually we tried to match all them form textual information in the source code with the natural language specification of the query for example and one scoring.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Another is to use the.",
                    "label": 0
                },
                {
                    "sent": "Edit distance so basically it's a syntactic future of feature, of course, so we compare the distance of the description of a method and with the description of the query, so of course edit distance is 1 measure.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Under 2.",
                    "label": 0
                },
                {
                    "sent": "Measures are the engram overlap between the name of the method and the query or the description of the method and the query and the class metal and query.",
                    "label": 1
                },
                {
                    "sent": "And then we also.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Also use the semantic features so we compare using compared the question network language specification and method description.",
                    "label": 1
                },
                {
                    "sent": "Using word embeddings, we just used the pre training the Google News or embeddings and also we exploit the pedia links that we extracted, encode ontologies.",
                    "label": 1
                },
                {
                    "sent": "So we try to tag also the natural language specification of the query and we see how many.",
                    "label": 1
                },
                {
                    "sent": "Basically, how many the ratio of the number of matching tags?",
                    "label": 0
                },
                {
                    "sent": "Anne.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, then we constructed we bill.",
                    "label": 0
                },
                {
                    "sent": "It's a new problem, so we had to build a benchmark and we have exploited Stackoverflow that contains a number of questions.",
                    "label": 1
                },
                {
                    "sent": "Of course we filter out all the questions that cannot be answered with just running by running only one gentle method and for the other one.",
                    "label": 0
                },
                {
                    "sent": "So the most popular questions we get the result.",
                    "label": 0
                },
                {
                    "sent": "The answer provided bye bye.",
                    "label": 0
                },
                {
                    "sent": "Stack Overflow and we also had other answers because in many cases like convert a string to an integer, of course, stack overflow provide one answer, but there are other equally correct answer so.",
                    "label": 1
                },
                {
                    "sent": "That's how we call structure than the bench.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "As we can see that every measure that we used, they all of them.",
                    "label": 0
                },
                {
                    "sent": "Are they both the syntactic ones and the semantic features they help in reaching, somewhat surprising.",
                    "label": 0
                },
                {
                    "sent": "Precision becausw 90%.",
                    "label": 0
                },
                {
                    "sent": "It's more than I expected, actually.",
                    "label": 0
                },
                {
                    "sent": "At the beginning, so of course this is the coarse grained problem, so we provide a natural language specification, that of the query and also we provide separately the inputs and the type of expected output, and that's that's the first part then on top.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Of this, we constructed the final system.",
                    "label": 0
                },
                {
                    "sent": "Let's say the one focusing on having only one string as input, which is the natural language question.",
                    "label": 1
                },
                {
                    "sent": "And we.",
                    "label": 0
                },
                {
                    "sent": "Answer These, we probably approached this by exploiting the previous approach.",
                    "label": 0
                },
                {
                    "sent": "So in order to solve let's say the final grade approach, we exploited the coarse grained approach.",
                    "label": 0
                },
                {
                    "sent": "How we do this?",
                    "label": 0
                },
                {
                    "sent": "We run the the natural language questions against the we perform basically dependency parsing, which is something that is provided by the stand for the NLP library and so we get a graph.",
                    "label": 0
                },
                {
                    "sent": "Basically this graph that you can see.",
                    "label": 0
                },
                {
                    "sent": "This is the first step.",
                    "label": 0
                },
                {
                    "sent": "Then we that's a challenging problem.",
                    "label": 0
                },
                {
                    "sent": "We try to transform this graph into a tree and the tree will be the execution code basically so.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "How can we do it so something that the output that we want to have at this stage of our system is this one?",
                    "label": 0
                },
                {
                    "sent": "So given the natural language question, we want to have this tree.",
                    "label": 0
                },
                {
                    "sent": "And of course it's we start by transforming the initial graph into a tree.",
                    "label": 0
                },
                {
                    "sent": "So we labeled all the leaves with this kind of yellow tag and all the other nodes with Green Tiger.",
                    "label": 0
                },
                {
                    "sent": "But then of course, it's not this.",
                    "label": 0
                },
                {
                    "sent": "It will be a messy tree.",
                    "label": 0
                },
                {
                    "sent": "OK, with many unusable nodes and things like this, so we need to transform the tree into the initial tree provided by dependency graph dependency analysis into something that we can run.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And of course we want also match.",
                    "label": 0
                },
                {
                    "sent": "For example, we want to match a Max with the Java function that exploits that computes the Max and same for the cube root.",
                    "label": 0
                },
                {
                    "sent": "So we want to maximize the score of all the method calls.",
                    "label": 0
                },
                {
                    "sent": "Uh.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And another constraint that we have is that the output of a leaf or a middle node should be compatible with the input type of the of the other node on top of it.",
                    "label": 0
                },
                {
                    "sent": "So of course the result of Max should be compatible with the input of the cube root function, so the types must be of course.",
                    "label": 0
                },
                {
                    "sent": "I'm Batman.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so this is the.",
                    "label": 0
                },
                {
                    "sent": "This is what it happens that once we have a graph like this and these are strings basically extracted from the initial question, we need to match against and find the correct method.",
                    "label": 0
                },
                {
                    "sent": "This is done by using the previous approach.",
                    "label": 0
                },
                {
                    "sent": "The coarse grained approach.",
                    "label": 0
                },
                {
                    "sent": "And as I said, there is a ranking problem, but in this case it's a global ranking problem because we want to match that we want to find the higher score among the all the combinations.",
                    "label": 0
                },
                {
                    "sent": "And of course this is a in terms of.",
                    "label": 0
                },
                {
                    "sent": "The space that we want to visit is quite large, so we approached it in agreed with Gridlee with agreed algorithm.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Anne.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So we perform a greedy search.",
                    "label": 1
                },
                {
                    "sent": "Also becausw.",
                    "label": 0
                },
                {
                    "sent": "As I said, there are nodes.",
                    "label": 0
                },
                {
                    "sent": "There are problems with the graph extracted by using the Stanford dependency parsing.",
                    "label": 0
                },
                {
                    "sent": "And So what we did basically what we do.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Who is we?",
                    "label": 0
                },
                {
                    "sent": "Transform the tree by by merging nodes.",
                    "label": 0
                },
                {
                    "sent": "For example, cube root OK. At the beginning there are two nodes and then we create a node that is called labeled only cube root.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And so I'm running out of time, right?",
                    "label": 0
                },
                {
                    "sent": "OK, so I will go to the.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So we trance.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Form of these three into a simple one.",
                    "label": 0
                },
                {
                    "sent": "And of course we wait all the edits.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Negatively, so we don't want to change too much the graph.",
                    "label": 0
                },
                {
                    "sent": "And finally.",
                    "label": 0
                }
            ]
        },
        "clip_31": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So I.",
                    "label": 0
                }
            ]
        },
        "clip_32": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I I just.",
                    "label": 0
                }
            ]
        },
        "clip_33": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We have a 91% of precision which is much better than the only system that that we found that we can compare against, which is Wolfram Alpha.",
                    "label": 0
                },
                {
                    "sent": "It's a closed system and so we are pretty happy with the results.",
                    "label": 0
                }
            ]
        },
        "clip_34": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Of course I need to go.",
                    "label": 0
                }
            ]
        },
        "clip_35": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Sorry, OK, and of course if someone if you want to join us, we are running some experiments.",
                    "label": 0
                },
                {
                    "sent": "So if you want to test it.",
                    "label": 0
                },
                {
                    "sent": "Thank you.",
                    "label": 0
                }
            ]
        }
    }
}