{
    "id": "e6d6aj3cedhqhsbsozyimryhrwsaimzx",
    "title": "Functional Maps: A Flexible Representation of Maps (with Applications)",
    "info": {
        "author": [
            "Maks Ovsjanikov, Laboratoire d'Informatique, \u00c9cole Polytechnique"
        ],
        "published": "March 5, 2013",
        "recorded": "February 2013",
        "category": [
            "Top->Computer Science->Computer Vision->Shape Analysis"
        ]
    },
    "url": "http://videolectures.net/solomon_ovsjanikov_maps/",
    "segmentation": [
        [
            "Thanks a lot premiums for giving me this opportunity to come here and to give this talk and to meet some of the people.",
            "And so if any of this is interesting to you, I'd be very curious to discuss and also obviously feel free to interrupt me and ask any questions.",
            "So I'm definitely looking for feedback as well.",
            "So some of this work is a little bit older.",
            "Some of this work is more new, so it's still kind of in development, something that I'm very interested in.",
            "So this is joint work with people from Leo Guibas lab.",
            "Most importantly Maryland pension, who is now at Technion and Justin, Solomon, and Adrian Butcher who are both at Stanford."
        ],
        [
            "So the general problem that we consider is that of shape matching and basically what a shape matching.",
            "It's very simple to describe, but very difficult to formalize.",
            "We're given a pair of shapes and we would like to find a correspondence between them.",
            "So somehow intuitively would like to say that."
        ],
        [
            "You know the tip of the ear on this armadillo on the left somehow corresponds to the tip of the ear of the armadillo on the right, and you know the same for other points."
        ],
        [
            "And of course ideally we'd like to find dense correspondences, so not just some landmark points that we can recognize, but actually dense correspondences across entire shapes OK, and so this is one of those problems that."
        ],
        [
            "It is very easy for human beings to do, but it's very difficult to explain to a computer and it's also very difficult to perform efficiently in practice.",
            "So you know, there are many kind of disguises for this.",
            "For this problem, you know you talk about finding best alignment, best map correspondence, and at the end of the day it's all talking about the same thing, and so the main kind of problem is what do we consider best, right?",
            "So somehow when we're looking at these two shapes, we come already with a lot of prior knowledge about.",
            "You know the semantics of the of the of the shapes, but to a computer where we're just given the shapes without any labels, without any segmentations, they don't.",
            "You know, computer doesn't have such a prior knowledge.",
            "So basically the problem is how to define what do we mean by best."
        ],
        [
            "And I'll be talking today mostly about 3D shape matching, where we have pairs of shapes represented as meshes.",
            "So these are points and triangles in 3D.",
            "But the problem is very general and the same ideas I think are applicable to other settings, like for example finding correspondences between pointclouds between volumetric data data, which is very common in medical imaging.",
            "So MRI scans and CT scans and so on.",
            "And finding correspondences between 2D images as well is also a very active area of research, and at the heart of all of these problems is basically the same.",
            "The same exact goal.",
            "So."
        ],
        [
            "Why would we care about this shape matching?",
            "You can imagine that it's very kind of basic operation and it's used in many different settings, so the most important part of of having a correspondence or a map between a pair of shapes is that it basically allows some kind of a transfer.",
            "So if you have two shapes and correspondence between them, then you can, for example assign a texture or some kind of a parametrization to the first shape, and you can transfer it onto the second shape.",
            "If you have a correspondence again, if you have some labels and segmentation, you can take labels of one of the shapes, then transfer them onto the other, and then one operation which is very common in computer graphics, which is one of my sort of background.",
            "Where my background comes from is where you do deformation.",
            "So basically you're given a shape and you would like to create some kind of plausible deformation.",
            "So for example, horses galloping, which is very important for you know cinema industry and this is a very very time consuming operation.",
            "It takes artists entire days to create, you know single frames and once you have a correspondence between pair of shapes you can take a deformation defined on one of the shapes and just simply transfer it onto the second shape.",
            "So this is.",
            "One of the sort of basic operations, but then of course there are other applications like shape interpolation, reconstruction and so on."
        ],
        [
            "So actually one of the sort of earliest applications of shape matching was in manufacturing, where you have one of the shapes is a CAD model, for example for a car and the other shape would be a scan.",
            "So you actually take a 3D scan.",
            "Imagine for example connect and then once you have a map or correspondence, you can find the differences and you can find defects.",
            "So you say OK, actually the manufacturing process to fail, so there's some kind of problem here in medicine.",
            "It is very common problem and in many others and one thing in particular that I find interesting and I think this is a lot of future work in this direction is statistical shape analysis.",
            "So instead of just finding correspondences between a single pair of shapes, you can also ask the same question for a collection.",
            "An very kind of cool application for this was done by hoster at all in your graphics 2009, where they basically scanned a whole bunch of different people and they found the correspondence between the scans.",
            "And then they used statistical analysis on this whole collection of humans, and they extracted the main sort of parameters of variability in the shape of a human, which basically."
        ],
        [
            "Later on allowed them to take and generate new models with the given parameters, so once."
        ],
        [
            "We have a lot of scans with correspondences you can do statistical analysis."
        ],
        [
            "And then you can generate models, say give me a random female that weighs about 65 kilos and they can do that only because they have correspondences between the shapes in their collection."
        ],
        [
            "And of course, you know, like I said, this is really one of the most basic operations in geometry analysis, so it really comes up in many different areas.",
            "So."
        ],
        [
            "So this is a small taxonomy of different types of shape matching scenarios, so here I'm not talking about the methods, but I'm talking about the problems because like I said, you know the problems arise in different settings.",
            "So the way that you solve them is also slightly different.",
            "So rough taxonomy of the different instances of shape matching problem is the following.",
            "First of all will look at local versus global where local shape matching already assumes that you have approximate alignment between the shapes, which is common for example in manufacturing.",
            "So human can come in approximately a line.",
            "You know the scan and the CAD model of a of a car, and global is basically where you have no idea where the correspondences are, is just two shapes in arbitrary in arbitrary position, another one it was very important, rigid versus deformable or rigid means that basically the two shapes are related by rigid motion which is rotation and translation.",
            "So the correspondences are parameterized by a small number of parameters and deformable means, for example, articulated motion.",
            "Like a human performing some.",
            "Richard Information, and then finally a very important distinction is whether you're considering a pair or collection.",
            "So like I described in this statistical learning scenario, you might have more than just a pair of shapes and."
        ],
        [
            "More or less, I think this is this kind of half of this taxonomy is solved, or at least is well established and there is a lot of kind of fundamental work that's done, or it would be very difficult to publish a paper in this right now, and any other combination is quite open.",
            "I would say so.",
            "Basically, if you look at."
        ],
        [
            "You know, even local deformable pair is probably the easiest one.",
            "It still is still very active area of research, and in particular today I'll be talking about this global deformable pear shape matching a little bit about collection, but mostly about that.",
            "You have any questions?",
            "OK."
        ],
        [
            "So."
        ],
        [
            "Why is this sort of local rigid matching solved?",
            "This is a very well classical, well known algorithm called iterative closest point, which basically comes from this paper published in 92, which is one of the sort of foundational papers and shape matching has something like 9000 citations now, and it's very simple method, basically designed to solve this problem where you have two shapes that are approximately aligned and the goal is to find the rotation and translation that would align them perfectly.",
            "OK, and I don't know.",
            "Maybe some of you already know this method, but I wanted to describe it in a little bit of detail because it also comes back to what I'll be describing later.",
            "So here we are assuming that you are given a pair of point clouds, so we don't assume actually any kind of mesh structure.",
            "We just assume collection of points an North and this method has the following two steps.",
            "So for every point XI an M first we find its nearest neighbor.",
            "Why I?",
            "Nearest neighbor here is really in space, so this is where this assumption that the two point clouds are approximately aligned.",
            "Comes into play because in here we already assumed that XI lies close to its corresponding point.",
            "Why I?",
            "And the second step of this algorithm is to find the optimal translate transformation parameters are empty.",
            "That would minimize the sum of the distances between the transformed XI and their corresponding.",
            "Why I OK?",
            "So our XI is just the rotation of XI?",
            "Around RNNT is the translation.",
            "So suppose you have these two different curves and you're trying to."
        ],
        [
            "Find the red curve with the blue curve OK."
        ],
        [
            "So the first step is you establish the correspondence is.",
            "So here I'm just showing the correspondences for a few points, but you imagine that you would do this for all points.",
            "So for every point on the red curve you find its nearest neighbor on the blue curve.",
            "OK, and sometimes you are correct or approximately correct.",
            "Sometimes you might be wrong and then after that you find that."
        ],
        [
            "Transformation their rotation and translation that would align the points that you have with their corresponding points OK, and then you iterate."
        ],
        [
            "Dude."
        ],
        [
            "Again."
        ],
        [
            "This again until."
        ],
        [
            "Well you converge OK. And this is a very simple algorithm.",
            "It's quite easy to implement and you can also show that it converges linearly to the global optimal if you start in the vicinity of the optimal and it's quite robust, so it's really used in practice a lot in industry as well.",
            "But"
        ],
        [
            "Basically so the main thing here is that both steps can be done efficiently because first of all you can find nearest neighbors in space using an efficient data structure like a KD tree or node diagram in 3D, and you can.",
            "There's a closed form solution for finding the optimal R and team here."
        ],
        [
            "But the problem is that when we have nonrigid matching, which is the case that I'll be talking about, you don't have this either of these steps are possible.",
            "OK, first of all, you don't know where the corresponding points are for.",
            "So if I'm given a point X, what is the corresponding point T of X?",
            "There are many many different possibilities and also there is no closed form solution to find the optimal transformation.",
            "So remember in this AICP algorithm there is a step where you compute.",
            "Rotation and the translation, and in general when you have an articulated motion like this armadillo is lifting and a leg and and sort of changing position of the arm, there is no way to parameterise it efficiently, or at least it's not obvious how you do that.",
            "So the main kind of issue is that there is no compact representation to optimize foreigner nonrigid shape matching, and what people have done for many years.",
            "You know what I'll be describing is of course not the first method.",
            "This is an old problem.",
            "What people have done is directly optimize over this.",
            "Mapping.",
            "Points OK, so for a given set of points X you just look for their corresponding points T of X and basically the space over which you're optimizing is the space of all correspondence is a very complicated space actually, and so the main kind of message here that I wanted to convey is that there is no compact representation to optimize for in nonrigid shape matching, and that's one of the main sort of challenges.",
            "It's hard to define such a representation."
        ],
        [
            "And so just to give you kind of an idea of how contemporary nonrigid shape matching works, this is an example of a result from 2011, and typically the way you show these results.",
            "So you have two shapes and you have a correspondence and it's kind of difficult to visualize what's going on with the correspondence.",
            "So you just flotsam function on the 1st shape and then you use the correspondence to pull back the function and you show the value of the function after you pull back and.",
            "The you can basically see the.",
            "Ideally the function should be smooth and ideally should be exactly the same, but here there's a problem because you know that it looks like the hands are mapped to the one of the feet, and then you know you have a lot of discontinuity's, so this map really doesn't look that great.",
            "OK, and this is a close to state of the art in 2011, so this is a very difficult problem, OK?"
        ],
        [
            "So just to give you kind of a like an overview of what people have done.",
            "Basically there's a kind of a generic recipe of how to solve this nonrigid shape matching, and this occurs both in an image analysis as well as in computer graphics, and typically what you do is the following.",
            "So you can't optimize overall correspondence is this is just too expensive, so these shapes you know they might have something like 30 thousand 50,000 points, so you can find the correspondence is for all thirty 50,000.",
            "So what you do is you subsample, so you find some.",
            "A small number of landmark points on Onshape M and then for each of the landmark points you find its corresponding point.",
            "You know for each of the landmark points X or here is P or you will find the corresponding point T of \u03c0 by basically doing this optimization where you have a first order term which is just the difference between PII or between the signature some kind of descriptor of Pi like for example if you're familiar with image analysis, SIFT is a very common.",
            "Image local signature of a point.",
            "But you can imagine like curvature is one kind of signature.",
            "What kind of descriptor that you'd like to preserve?",
            "So Gauss curvature or something like that?",
            "And then you have also another term which is the 2nd order term which basically says that for every pair of points Pi and PJ I want to find a correspondence T such that the distance and here typically you assume that the geodesic distances approximately preserved, so the distance not in space, but the distance on the surface, and that's why you have the subscript M and.",
            "So the distance between \u03c0 and PJ is approximately the same as the distance on or between TRP ion TFJ OK. And first of all, approximating this distance is already very expensive.",
            "It's like order Ncube something like that and best case.",
            "And Secondly, when you're doing this optimization, you're basically you're optimizing over the space T over the space of all correspondence is so for every point you're looking for its corresponding point OK. And you could do it just using the 1st order term.",
            "But you know the results that you get are quite bad.",
            "And even though this is efficient, but it really is really expensive is basically this part.",
            "So having the 2nd order term makes the problem well, you can actually show that this problem in general is NP hard.",
            "OK, so after you but you know there is some relaxations and people assume some things in practice.",
            "Some initial correspondence and so on.",
            "So once you find the landmark correspondences, you can obtain the dense correspondences from the sparse one.",
            "So if you know the you know, let's say you have 50,000 points and you know the correspondence between, say 20, it's quite easy to find the correspondence between the other.",
            "The other points that you don't know an actually in.",
            "Previous work in 2010 we showed that if in the sort of exact case when everything is nice and smooth where you have the preservation of the distances holding exactly there is, this results that we show that basically if you knew exactly 1 correspondence, just one point.",
            "If you knew the map of 1 point, you can recover the full dense map no matter how many points.",
            "There are an no matter what the dimension of the underlying shapes are, and even that is actually quite weak in the sense that it's like, oh, it's perfect algorithm.",
            "All you need is just to find one correspondence right, but it doesn't really work.",
            "First of all, because even obtaining a single correspondence is hard.",
            "Finding where exactly does this point go is like nontrivial when you have 50,000 possibilities, and then also even once you do find the correspondence because things aren't, you know they don't hold exactly.",
            "Typically the distances aren't preserved exactly, you have some approximate preservation of distances, so all this kind of beautiful theory breaks down South.",
            "That doesn't work in practice.",
            "They were very excited one when we saw this, but anyway, so it's still very challenging."
        ],
        [
            "Right, so that's the last step of finding dense correspondences from sparse ones.",
            "OK.",
            "So any questions so far?",
            "One is clear.",
            "OK, so."
        ],
        [
            "So basically the motivation for the what I'm going to show you was the following, so you know, we sort of looked at this problem.",
            "We said people recognize that there's this inherent complexity, and So what they do is they subsample so they take some landmark responses, but in reality doesn't actually change the problem fundamentally, because fundamentally you're still looking for mappings between surfaces, so the space over which you're optimizing is still the same.",
            "You know you're still optimizing over correspondence is on the surface is and.",
            "So the problem is when you have, you know points which are discrete.",
            "The optimizations the solution space is still discrete, so you know for a given point X what is the what is the corresponding point T of X.",
            "And if I have 50,000 points, it's still discrete space that I have to consider.",
            "And you know, probably you sort of have the intuition that often these kind of problems are very difficult, so this is discrete optimization problem.",
            "Unless there is some very very special structure like you know some minimal spanning tree or something like that, it's very typically these are very difficult problems to optimize for.",
            "So what we'd like to do is actually make the solution space or the optimization with the thing that we are optimizing continuous instead of discrete.",
            "That's one of the motivations.",
            "So you know, because you have discrete, it's very difficult to optimize quadratic energy functions.",
            "Things become NP complete very quickly, you it's difficult to enforce global continuity constraints like I showed.",
            "You know you have discontinuous Maps.",
            "Jumping around is also very difficult to incorporate uncertainty into prior data, so when you know what I mean by this, is this result where we have the single point and single correspondence, then everything was nice, but typically we don't know is even a single correspondence.",
            "What we know is this point approximately, or Maps in the vicinity of some.",
            "Other point, and when you have the space of correspondence is just, you know the map is very difficult to incorporate that uncertainty unless you you construct some probability distribution over the space of points.",
            "But then it even the solution space blows up even more because now instead of just having 50,000 variables you know you have 50,000 square variables anyway, and then again another sort of more subtle point is that when you have ambiguities, that symmetry is very difficult to.",
            "Return meaningful results because you know you have maybe two possibilities, not even one.",
            "So what we sort of looked at and we said, you know, I think that this is more a limitation of the of the representation.",
            "Naturally of a particular method.",
            "So what we're really what you really care bout isn't a particular sort of, you know, one little bit.",
            "Small improvement over the method that people use for finding these correspondences.",
            "But really, look at a different representation for the correspondence to themselves."
        ],
        [
            "So you know just to give you kind of a small overview of what people have done in this particular area is finding corresponds directly is hard.",
            "You can imagine that you can basically embed a shape into some kind of space, like think for example of.",
            "You know Laplacian Eigen Maps or something like that if you're familiar from machine learning, you take your point cloud.",
            "You compute some operator and then that gives you an embedding into a different space and then you find some transformation in that embedded space.",
            "So this is a very common approach, but unfortunately it's very difficult to find a space where things align perfectly."
        ],
        [
            "And right so this is spectral embeddings is the most common approach.",
            "And."
        ],
        [
            "There is another approach which is based on conformal mapping where the author is basically pointed out that if you have two shapes that have sphere topology, then finding Maps that preserve geodesic distances is a subgroup of finding Maps that preserve angles and that group of mappings that preserve angles is called Mobius Group, and it has a small number of parameters.",
            "So if you know only three correspondences you can find, you can find the full dense dance map.",
            "They built a method based on these three landmark correspondences, and that that anyway doesn't work that great."
        ],
        [
            "And this is the work that I mentioned earlier with one point."
        ],
        [
            "So.",
            "The present, the representation that I'll show you in what follows, is basically a different represent."
        ],
        [
            "Asian for correspondences, which isn't based on finding correspondences between points.",
            "So for every point X and I'm finding some corresponding point T of X and it's more amicable to direct optimization so it leads to continuous optimization problems instead of discrete optimization problems.",
            "So it's it has very nice properties like it's compact.",
            "So regardless of how many number of points, even if you have, you know 10s or hundreds of thousands of points, you can represent a map usually quite compactly using a small matrix.",
            "It's inherently global and multi scale and incorporates ambiguity, uncertainty quite well.",
            "So this is sort of our goal.",
            "OK, and at the end of the day we have this correspondence and basically you can encode it as a small matrix and the optimization shape matching becomes just manipulation of matrices and matrices are probably the easiest things to manipulate, so that's why things things become quite."
        ],
        [
            "OK, so the the way that this representation is constructed is as follows.",
            "So suppose you know so far I've talked about shape matching, so you're given two shapes and your find your goal is to find the correspondence.",
            "But suppose someone actually gives you the correspondence.",
            "So suppose you have two shapes and and and the map T between them.",
            "OK, so now let's say that I paint a function."
        ],
        [
            "On North OK then or say here I paint a function on M, then I can find a corresponding function on North which so if I have a function F which is just a real valued function, so it has values into the real line, then there is a corresponding function on Earth which also takes values in the real line and is just defined as the pullback of the.",
            "Original function F. OK so if I have a function on MI can use the given correspondence T to define the corresponding function on North.",
            "OK, so for this in here assumes bijections.",
            "So if I have a bijection between M&N this I can do this, but you can also reverse the direction and then you don't need to assume projections.",
            "But things are much nicer with projections, so that's why I wanted to.",
            "Talk about that first, so this is like a very basic step, so this should be clear."
        ],
        [
            "So of course, once you know the correspondence T, so this mapping between points, it induces a correspondence between functions and that corresponds is fixed.",
            "So in the sense that it works for any function.",
            "So if I paint a function on EM, you know there's always the corresponding function on M and the mapping is induced from the original mapping T or so.",
            "We write this as T sub F to denote the mapping between functions.",
            "So the mapping between points induces.",
            "Mappings between functions.",
            "That's kind of important."
        ],
        [
            "And the thing about this mapping between functions is that unlike even though like I said, you know the mapping between points can be discontinuous.",
            "Ann Behav vary widely.",
            "The mapping between functions is actually very, very simple.",
            "So first of all, the the very important thing is that it's linear.",
            "So if I have a just linear combination of two functions, their their correspondence or their image is also linear combination of the images.",
            "And also it's complete.",
            "So now what we mean by completing the following.",
            "So suppose someone told me the mapping between the functions but didn't tell me the mapping between the points.",
            "Can I use the mapping between the functions to recover the mapping between the points OK and it's very simple.",
            "Basically, you can imagine that you take a Delta function, so a function that's one at a particular point and zero everywhere else you look at its image, and by construction the image also has to be one at a particular point in zero everywhere else, and so the place where that.",
            "Function is one that's going to be a correspondence.",
            "OK, so basically you have this mapping between functions T of F is linear and it's complete."
        ],
        [
            "And so right.",
            "So here I took a smaller kind of a Gaussian or a type of Delta function, found its image and then say OK, this image has a maximum at a particular point.",
            "So I take that as my corresponding point, OK?"
        ],
        [
            "So and you can do this for all points."
        ],
        [
            "Course, so the nice thing about functions is that they form a vector space.",
            "So if you consider this space of square integrable functions on the shape, so I give you a shape and you look at all the functions that are possible real valued functions on that shape.",
            "This has a natural vector space structure because you can obviously add and multiply functions by constant and So what that means is that there's a natural basis, or you can define.",
            "Bases for functional spaces.",
            "OK, so you can say given a shape I can construct.",
            "A set of basis functions such that any function is going to be a linear combination of these basis functions.",
            "And this is really the fundamental difference between functional spaces an points because points if you consider just points on the surface, they don't have this vector space structure, and that's why the shape matching on just points is very difficult, because you're optimizing over some space which is highly nonlinear.",
            "If you consider just the points on the surface, you have many possibilities, highly nonlinear.",
            "It doesn't have this vector space structure.",
            "That's why it's very difficult, but the function spaces are very easy to manipulate because.",
            "The space of functions forms of extra space.",
            "So you have a multi scale basis and also even though individual basis functions are often unstable under perturbations, you can show that this space is spanned by basis.",
            "Functions are often stable, so there's a little bit more technical detail, but this is important for our method.",
            "And So what it means is that you know from all the previous kind of little tidbits that I showed you.",
            "It follows that if you consider both the functional space on M and the function space on North, if they're both endowed with basis, then the correspondence, dysfunction, correspondence, T sub F can be represented as a matrix.",
            "OK, and this matrix is just the change of basis matrix.",
            "And the sort of R kind of goal or intuition is that we instead of looking instead of operating with direct correspondences between points, we're going to operate with these matrices.",
            "So the definition for the functional."
        ],
        [
            "Presentation of the map is a matrix C such that so this should be a such that if you have a function F which is represented as a linear combination of basis functions on on M, the image of F which is a linear combination of basis functions on North, is just given as B is equal to C * A.",
            "This should be a where B&AR vectors representing the coefficients OK and the most important thing is that once you fix the correspondence T. This matrix sees fixed it's independent of the of the coefficients A&B.",
            "OK.",
            "I mean it's kind of very trivial remark, but it just it just basically means that the original correspondence these encoded completely in a fixed matrix C, so it doesn't depend on on a.",
            "And especially, this matrix has a very simple form where the base is the basis functions are orthonormal with respect to some inner product, because you can just you can compute the ijaaf element of your matrix C as the inner product between the image of the Earth basis vector on North with J basis vector on North.",
            "OK, it's just a very like there's a closed form expression for what she looks like.",
            "If you know the correspondences.",
            "OK."
        ],
        [
            "So this is just an example of what these matrices look like, so we have a source shape and a target shape.",
            "So there are two different shapes and we have three different Maps between these shapes, so the first map Maps, you know it's kind of a natural map.",
            "It Maps the left of the cat to the left of the cat in the way that you would expect you know the the sort of the feed get mapped to the feet, and so on.",
            "The second map is symmetric in the sense that it Maps the left of the cat to the right of the cat, but still, it's nice natural in the sense that you know just the left foot Maps to the right foot, but.",
            "There's nothing else like any discontinuity going on, and the last map Maps the head to the tail OK, the way that they are represented again, we paint a function on this shape, and then so we paint the function of this shape, and then we're showing the image of that function on the different shapes, and these matrices show the representation.",
            "This functional representation of these three Maps.",
            "OK, so here we picked some particular bases for the functional space and on the shapes, and the basis is the eigenfunctions of the possible.",
            "Operator, which I won't go into too much detail, but basically it's a multi scale basis that allows you to encode a function you know if it's sufficiently smooth and a shape using a fixed number of coefficients, and these matrices just represent the functional representation of this point to point map and you know there's some interesting things about it.",
            "First of all, if you have a quite natural Maps Maps that are approximately preserving of the geodesics distances.",
            "Then these matrices are exactly or close to being diagonal, so that's what you have for for these two these two Maps.",
            "But the interesting thing is they're not exactly diagonal.",
            "OK, so you have quite a nontrivial thing here going on, and this is where this remark that I made earlier about having a one perfect correspondence, sort of solves all your problems.",
            "Comes in because if you had a one perfect correspondence, then this matrix would be exactly diagonal, and most of the previous methods that have.",
            "Nice theory structure behind them assume diagonal structure for this matrix in.",
            "Phrased differently, this is what they assume.",
            "You know.",
            "Maybe they assume preservation of geodesic distances or preservation of angles, but what it translates to in the function representation is that it's a diagonal matrix an.",
            "In practice, if you look at most natural Maps that you care about, there not diagonal OK, and this is really the heart of the problem.",
            "And the interesting thing is here, if you have quite a sort of unnatural, like or map that has a lot of distortion, then the function of representation is much less diagonal.",
            "But it's still.",
            "It's still fixed in the sense that you don't need some special structure for your map to define the function representation, so any map has a functional representation."
        ],
        [
            "Right, so we use this the functional representation, inflexible since it allows.",
            "Basically for any choice of basis you get a representation for the map.",
            "So what we use is like I said, the eigenfunctions of the Laplace Beltrami operator which you can think of just as eigenvectors of the Laplacian on a graph.",
            "So if you're familiar with the spectral graph theory, just imagine a Laplacian on a graph and it has eigenvectors and they are ordered by eigenvalues.",
            "Eigenvalues are kind of representing a certain notion of scale.",
            "So you have very very smooth functions in beginning.",
            "The first eigenfunction is always constant and the second one is.",
            "You know very smoothest Fiedler vector and so on.",
            "So basically there's a natural correspondence between that and the laws that ramping up erator in the continuous setting.",
            "So the nice thing about these guys is that it's a little bit technical to find them, but they have some nice properties.",
            "First of all, their multi scale and sparse so multi scale.",
            "It means that the first K basis functions are guaranteed to be smooth.",
            "Where the smoothness is depending on K. OK, so as you increase K as you increase the number of basis functions that you take, you are allowing yourself to represent more and more sort of varying functions.",
            "But in practice actually cutting at a certain point is better because you sort of avoid very discontinuous things.",
            "OK, so that's that's good for us.",
            "And then also the functions themselves are smooth and there's no code you can compute this in practice if you want to."
        ],
        [
            "And so this thing about multi scale is this example.",
            "So we have a source.",
            "So we have a shape of this cat and then 3 four different other cats and the correspondence is here just a normal correspondence is.",
            "So just like the regular you map the right foot to the right foot and all of the four examples and this plot shows the error that you get by converting.",
            "So the shapes themselves have 3030 thousand points roughly.",
            "And the Maps we represent I'm using the functional representation using a matrix of size N by N, where N is the X axis.",
            "So here goes between 10280 to 300 and the Y axis is the error.",
            "So we encode.",
            "Basically we compress the map into a matrix and then we recover the map again and we measure the error and you don't really need to worry about what you know exactly.",
            "The scale of this error, but roughly speaking around here on this line, it's one hop size on the mesh.",
            "So basically you're either.",
            "Exactly correct, or you're correct with just an error of 1 neighbor?",
            "OK, So what it means is that you can represent a map between two shapes with 30,000 points using a matrix of size you know about 80 by 80, and this is without any kind of further optimization.",
            "We just took this particular basis functions and this is what you use.",
            "But you can also actually show that you can do even better than that.",
            "So the sort of point of this whole approach is to consider these small or relatively small medium sized matrices an operate on Maps as just matrices and do shape matching in this metric space."
        ],
        [
            "And like I said, they are quite sparse, so if you show just the sort of the significantly non zero values.",
            "The interesting thing here is that if you have two shapes like, the difference between the source and the cat, so kacian cat 10, there's very little distortion.",
            "OK, so the distortion is the geodesic distance.",
            "Distortion is quite small, so you have approximately diagonal matrix as when, whereas in here you have quite a bit of distortion, so you have like more and more of the off diagonal elements, so there's also a measure of distortion.",
            "OK."
        ],
        [
            "So Interestingly, there's some other nice properties about this functional representation of a correspondence, which is the following.",
            "So if you have two, you know two Maps, so from A to B and from B to C, and you want to compose them.",
            "So that's one sort of fundamental properties of Maps that you can always compose them.",
            "And the function of representation.",
            "It becomes just matrix multiplication.",
            "So if I have a matrix representing the first map and the matrix representing the second map, if I want to find their composition, I just multiply the matrices, which is very handy and mapping version is just matrix inversion, which is actually quite a difficult operation practice.",
            "Like suppose someone gives you a mapping and is not bijective, so you want to find the pre image or sort of natural pre image for every point.",
            "So there are some methods to do that but in here all you have to do is just take the matrix inverse.",
            "And this very, very efficient and kind of another interesting thing is that things that weren't possible to define using just point correspondences now become possible, like for example taking a sum of two different correspondences or linear combination of two different correspondences.",
            "So if I give you 2 correspondences between two shapes represented as points, then and ask you what's the sum of these two correspondences.",
            "There's no sort of good answer for that, whereas in here where you represent the two.",
            "Correspondences as matrices.",
            "Then you can just take the sum of the two matrices and there is a natural way in which they are defined in the sense that.",
            "Basically, if I have a shape one and shape 2 and two different Maps, then I can first consider the image of a given function on this shape.",
            "Then consider the image of the given function using this map and then take the sum of those two.",
            "OK, so you have this kind of a linear structure of the space of Maps now, and it's actually the most important thing here is that when we are going to this representation of Maps using matrices, we're actually going to hire space, so.",
            "We are no longer restricting ourselves to just Maps that are defined point to point.",
            "So every point to point correspondence has a functional representation, but not every functional map corresponds to a point to point map.",
            "And that's actually one of the sort of price price that you have to pay for doing this.",
            "Map processing with matrices.",
            "Because for example, when you take a linear combination of two correspondences, this functional map is a linear functional map.",
            "You know it's very nice, but actually it doesn't correspond any point to point map because it it mixes the left and the right equally.",
            "But in certain scenarios this is actually an advantage instead of a disadvantage, because often you don't know whether the left should go to the left or the right, and then you can define natural ambiguous functional Maps.",
            "OK, so."
        ],
        [
            "So the most important thing for shape matching is of this representation of the following.",
            "So suppose so.",
            "So far I told you OK if someone gave me a correspondence, I can define this functional representation and then it has some nice properties and I can manipulate and so on.",
            "But in practice we don't know the functional correspondence.",
            "OK, so the actual goal of shape matching is to recover the correspondence.",
            "So I have two shapes M in North and I want to recover the correspondence or dysfunctional correspondence.",
            "See OK, I represent this matrix.",
            "There's sort of the most useful property of this function.",
            "Representation is the following.",
            "Suppose that you know, so you don't know the correspondences between the points, but you can sometimes say OK, I don't know the correspondence is, but I know that I can find a function on M and a corresponding function on or.",
            "So.",
            "For example, suppose that you compute Gauss curvature or some kind of measure of curvature.",
            "So you define a map, or you define a function on M and you define a function or and, say, a natural map or a good map should approximately preserve this function.",
            "So the image of the function that I painted on the left should be the same as the function that painted on the right OK, and actually, even though it might seem hard to come up with these constraints, it's actually very easy, so four different types of descriptors, different types of sort of signatures you can come up with.",
            "Natural constraints of this type and the most sort of amazing thing is that once you have this constraint of CA equals to B or approximately equals to be where A&B are no.",
            "Nancy's unknown is a linear constraint on.",
            "See OK, so that means that if you give me enough so if I for example I have CS 80 by 80.",
            "So if you give me 80 of such constraints then I can recover see uniquely using just the least square system.",
            "So instead of those very very expensive.",
            "Discrete optimization techniques that I talked about earlier that do this subsampling an do very expensive optimization.",
            "All we need to do now is just do a least squares solver Singlely score system using enough constraints.",
            "And so these constraints."
        ],
        [
            "So right, so, given enough A&B pairs, we can recover a matrix C. Using at least square cyst."
        ],
        [
            "And."
        ],
        [
            "So these these constraints are quite general, so you can define.",
            "So, for example, someone comes in and tells you the texture, so you know the texture on the two shapes.",
            "This is this is a functional correspondence constraint, so you can phrase it as a linear constraint on C. Like I said, descriptor preservation like Gauss curvature, landmark correspondences so."
        ],
        [
            "Suppose that someone tells you, OK, I think that this point should go to this point, but I don't know exactly so actually what I know is that a Gaussian of a certain width around this point should map to a Gaussian to certain width around that point, even though I don't know exactly where the points go.",
            "This constraint also is a functional preservation constraint, so you can just say OK CA equals to be for some specific A&B, and finally correspondence constraints.",
            "So suppose that someone came and pre segmented, so split the shapes into into.",
            "Segments and they say, OK, I think this is a leg, so the segment of the leg here should correspond to the segment on the leg here and you can just say."
        ],
        [
            "OK, if I give if I have a region of a shape I can just define the indicator function on that region and I say OK, the indicator function on this region should correspond to the indicator function on this region, so again you can incorporate uncertainty and so on."
        ],
        [
            "And another thing which we use is that is a little bit more technically complicated, But basically you know there are two types of constraints there is this functional preservation constraint, but also often when you have the shapes, they are also endowed with self operators.",
            "So La Plaza try operator is self operated.",
            "But you can think about symmetry.",
            "So for example left and right symmetry just swaps the values of the given a function.",
            "It swaps the values on the left and the right.",
            "OK, so I have a function an A symmetry operator just.",
            "Takes a function, produces a new function, and so you can construct this commutative diagram.",
            "So if I have a shape M, so the functional shape M from surreal I and have an operator S1 and the same thing for the functional shape N and I have an operator S2, then basically I want a functional correspondence see such that this this diagram should commute, so S1C should equal to CS2.",
            "OK and.",
            "Even though this seems like a kind of a second order constraint because I'm combining two operators, it's actually a linear constraint on C. Again.",
            "So basically you can write this constraint as a linear constraint on C. And this really helps in practice.",
            "So OK, so at the end of the day."
        ],
        [
            "Alright, so The thing is this kind of important is that we might form all these constraints and we get a solution, but we don't know whether this solution actually corresponds to a point to point map.",
            "So like I said, you know functional Maps are more general than point to point Maps, so often we don't know whether a functional map corresponds to point point now, but we have the following theorem, which is the basically says that if I have a map and underlying map T that preserves distances.",
            "Or it actually preserves volume, so local area on each shape, so it's a local area preserving map, which is a weaker condition than preserving distances.",
            "Then the matrix corresponding to the functional representation of this map must be orthonormal.",
            "OK, so basically relates preservation of volume on between the shapes to the structure of the matrix.",
            "So what that means is that we can say OK, I want to find a function.",
            "Matrix C that preserves all these functional constraints as linear an is also approximately orthonormal.",
            "OK so.",
            "All of these together.",
            "Kind of, you know, once you put all of these together into simple least squares system, you get a very simple shape matching method that actually works better than than what was there before.",
            "So this is just."
        ],
        [
            "Showing the quality of the Maps that we obtain on 2 standard benchmarks.",
            "So basically what you need to look at is the solid green line so it's hard to see what's going on, but if you look at the solid green line, here is the geodesic error and this is the number of correspondences that you have with that error, so the ideal map would look like this, you know, just kind of it wouldn't have any error, but our map basically performs better than the methods that were there before.",
            "And it's kind of remarkable because actually solving this is very, very fast.",
            "You know you don't need some kind of very complex optimization to do this."
        ],
        [
            "But the other interesting thing is that even if you give me a different shape matching method, it can still benefit from this representation.",
            "So what we did is we took the output of previous shape matching methods.",
            "We converted their output, which is just a point to point correspondence into a functional correspondence, and then we just mapped it to the closest orthonormal matrix.",
            "Because of this theorem that I had, and we did a few iterations of this.",
            "And actually this improves the results of even.",
            "Other methods which we treat as a black box.",
            "So in a sense that we can do things in the function representation very easily and improve Maps, very efficiency.",
            "Even if we don't know where these Maps come from.",
            "So this shows basically the thin lines are the results that the old methods obtain using just their own standard techniques, and then the thick lines is what we get after this improvement in the functional space.",
            "And again this improvement takes like 15 seconds per pair pair of shapes."
        ],
        [
            "So just as a small, I give a couple of applications and one of them is segmentation transfer.",
            "So like I said earlier, one of the most useful properties of having a map is being able to transfer things between shapes and so note that we can of course recover the point to point map from a functional representation, but often we don't even need to do that.",
            "So once we actually solved for the function representation, which is the matrix, we can use it directly to.",
            "Achieve or do many of the tasks that we want.",
            "So for example, if for this segment segmentation transfer I have this shape and I'm trying to end some segmentation on it and I'm trying to find the corresponding segmentation.",
            "So what I do is for every segment for every part I define the indicator function and I look at the image of this indicator function under this map that I found and then for every point I just find OK which of the images gave me the highest value and that's my segmentation transfer.",
            "So in this case, you know I'm always operating just with the functional representation, so I don't even convert to the point to point representation."
        ],
        [
            "Another interesting thing is that we can now treat collections of Maps using kind of standard linear algebra tools.",
            "So here we show basically results where you take 10 different cats and Maps between them, so we have each, let's say each map is 80 by 80 matrix, so we put all of these matrices together into this one big matrix, which becomes 800 by 800 because we have 1010 pairs.",
            "So we have 100 pairs of shapes and then.",
            "For every pair defines a map, and the interesting thing here is that once you have this matrix, because you can do linear algebra operations on these matrices, you can just take powers of this matrix and rewrite map as a linear combination of other Maps and what it means is that suppose that I have most of my Maps between like shape zero and shape, and the other shapes are correct, but maybe one of them is slightly off, and once I do this iteration, I can actually get rid of bad Maps this way.",
            "Very very simply by just taking powers of a medium size matrix."
        ],
        [
            "So this is 1."
        ],
        [
            "An application where we get improvement by looking at collections and other things."
        ],
        [
            "Each.",
            "I wanted to mention I don't know how interesting this might be for you, but one thing that's really like exciting for me is is actually doing map analysis.",
            "So now we have this framework for treating correspondences like in their own right.",
            "So you can say now correspondence isn't something kind of like funny like this map that is very difficult to analyze, but is really something tangible, which is a matrix, and so we use this for visualization and map analysis.",
            "And the problem here is actually quite interesting.",
            "So suppose that someone comes in and actually gives you the map, right?",
            "So this is the inverse of the problem of shape matching, so I have two shapes Anna map.",
            "So how do you show how you show this correspondence?",
            "OK, this is just for visualization and the same thing actually happens in.",
            "For example, if you have a pair of graphs or you have a dynamically evolving graph, how do you sort of show where things happen the most OK?",
            "So there are two visualizations that exist in computer graphics.",
            "I'm sure there are many more in other areas, but the two most fundamental visualizations, basically you have.",
            "You know your shape on the left and you just connect the.",
            "You know you take a point here and you find you just draw a line between the corresponding points.",
            "Or like I said, you paint a function on the second shape and you take the preimage of that function under the map.",
            "OK and the question is how do you pick a good function to show?",
            "So when you look at the results of shape matching papers off and they just like showed kind of image like this and it sort of looks really really nice you know?",
            "OK we have these perfect Maps.",
            "But in reality, let me just kind of skip a little and show that basically we can recover the functions that are distorted the most OK.",
            "So even though this map looks very very kind of nice, you can very quickly see that there is a part like on the nose that gets mapped to the neck and in order to do that all we do is."
        ],
        [
            "Basically, SVD decomposition of the functional representation of the map.",
            "So we give we take a map.",
            "We create this functional representation, we find it's singular value decomposition and then we look at the singular vectors corresponding to the largest singular values.",
            "And you can basically show that because of Plancherel's theorem, the area.",
            "So if, for example if you have an indicator function here, the ratio of the areas before and after the map is exactly.",
            "The ratio of the L2 norm of the vector corresponding to the two functions, and that's why you can recover the functions that get distorted the most using just singular value decomposition.",
            "OK."
        ],
        [
            "So I'll skip the technical detail, so this is just some standard harmonic analysis stuff."
        ],
        [
            "OK."
        ],
        [
            "So in conclusion, basically this you know what I was trying to show you is really a representation for Maps between shapes, and it's compact and it leads to very simple optimization problems when you're trying to do shape matching.",
            "In particular, the most important aspect is that many constraints, like functional preservation constraints, become linear and because they are linear, you can recover the matrix using least square system.",
            "And another interesting aspect is now map processing becomes kind of possible because you can understand Maps in their own right by looking at the different properties of the functional representation that they induce."
        ],
        [
            "And so I think there is really a lot of future work for this.",
            "So first of all, like I said, you know, we just pick one of the basis functions that we were able to compute, But you can design better basis.",
            "You know the question would be what is the best basis to represent a given map or a given collection of Maps?",
            "Can you somehow do some machine learning to actually design A better basis given a few examples?",
            "Another question that's very important is we.",
            "Pick this set of constraints and we just throw them into a least square system, but often these are competing constraints and some of them are actually might lead to worse results and better results.",
            "So learning better optimal combination of constraints, that thing is important and you can of course you don't have to stop it functions, you know we just use functions, but anything that you can define and shape that has a vector space structure would lead to the same roughly the same properties, so you know if you use higher order forms like vector.",
            "Vector fields, or you know one forms.",
            "Our K forms to define Maps.",
            "You get the same sort of structure, but now it becomes quite different.",
            "So how do you manipulate now?",
            "It wouldn't be functional Maps, it would be vector field Maps or something like that and fundamental groups you know like homology bases also have a vector space structure, even though it's not over R, but still similar things presumably should should be possible.",
            "Has better idea?",
            "And finally, I think this general idea of map analysis and processing is very interesting, and what we can do there I think is quite quite open.",
            "So analyzing and processing Maps using function representation is promising."
        ],
        [
            "Yeah, so that's it for my talk.",
            "Thank the speaker.",
            "So I have some questions.",
            "OK, so everything you do is with the L2 norm, right?",
            "Is there any particular reason other than ease of compute ability or you know, would an L1 norm make sense or an L Infinity norm give you different information?",
            "Yeah, actually that's a good question.",
            "So I guess L2 norm it.",
            "Yeah, it's mostly for the ease of computation because you know, we know how to solve least squares systems an, but I guess that's like 18 to 19 century math.",
            "So like we also know how to do L1 norm optimization, so it's not that significantly harder, so actually there is a follow up work of this.",
            "This paper we presented Graph 2012 and now and your graphics 2013 someone else.",
            "Basically took this and they did the optimization over L1 norm and the underlying motivation is that if you do, you can enforce sparsity this way, basically so they have no penalty for non sparse matrices and they show that you get a slight improvement and we saw this also in practice that you get a slight improvement if you try to enforce sparsity and do L1 norm optimization, but for us it wasn't worth really like all the hassle, but I mean it's actually it is better and.",
            "So all your examples were also given on meshes and basically to manifolds.",
            "Other than the problem of defining a suitable operator, does all the machine already go through?",
            "If you have just something more general like a metric space?",
            "Well, there is this work on defining yeah Laplace type operators on general metric spaces.",
            "By smell and some other people smell and.",
            "I think it's just smelling smell smell.",
            "Yeah, yeah, so I don't know this very well, but as far as I understand that it basically has the same properties of the manifold structure.",
            "So we actually don't use manifold structure ever anywhere.",
            "As long as you can define an operator, you should be able to do everything that we do, but.",
            "I guess things are a bit harder too.",
            "You know manipulate, or at least I'm not.",
            "I'm not familiar with this, very.",
            "So Max is here until Friday, so if anyone has any questions will be around and let's thank the speaker again."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Thanks a lot premiums for giving me this opportunity to come here and to give this talk and to meet some of the people.",
                    "label": 0
                },
                {
                    "sent": "And so if any of this is interesting to you, I'd be very curious to discuss and also obviously feel free to interrupt me and ask any questions.",
                    "label": 0
                },
                {
                    "sent": "So I'm definitely looking for feedback as well.",
                    "label": 0
                },
                {
                    "sent": "So some of this work is a little bit older.",
                    "label": 0
                },
                {
                    "sent": "Some of this work is more new, so it's still kind of in development, something that I'm very interested in.",
                    "label": 0
                },
                {
                    "sent": "So this is joint work with people from Leo Guibas lab.",
                    "label": 0
                },
                {
                    "sent": "Most importantly Maryland pension, who is now at Technion and Justin, Solomon, and Adrian Butcher who are both at Stanford.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So the general problem that we consider is that of shape matching and basically what a shape matching.",
                    "label": 0
                },
                {
                    "sent": "It's very simple to describe, but very difficult to formalize.",
                    "label": 0
                },
                {
                    "sent": "We're given a pair of shapes and we would like to find a correspondence between them.",
                    "label": 1
                },
                {
                    "sent": "So somehow intuitively would like to say that.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "You know the tip of the ear on this armadillo on the left somehow corresponds to the tip of the ear of the armadillo on the right, and you know the same for other points.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And of course ideally we'd like to find dense correspondences, so not just some landmark points that we can recognize, but actually dense correspondences across entire shapes OK, and so this is one of those problems that.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "It is very easy for human beings to do, but it's very difficult to explain to a computer and it's also very difficult to perform efficiently in practice.",
                    "label": 0
                },
                {
                    "sent": "So you know, there are many kind of disguises for this.",
                    "label": 0
                },
                {
                    "sent": "For this problem, you know you talk about finding best alignment, best map correspondence, and at the end of the day it's all talking about the same thing, and so the main kind of problem is what do we consider best, right?",
                    "label": 0
                },
                {
                    "sent": "So somehow when we're looking at these two shapes, we come already with a lot of prior knowledge about.",
                    "label": 0
                },
                {
                    "sent": "You know the semantics of the of the of the shapes, but to a computer where we're just given the shapes without any labels, without any segmentations, they don't.",
                    "label": 0
                },
                {
                    "sent": "You know, computer doesn't have such a prior knowledge.",
                    "label": 0
                },
                {
                    "sent": "So basically the problem is how to define what do we mean by best.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And I'll be talking today mostly about 3D shape matching, where we have pairs of shapes represented as meshes.",
                    "label": 0
                },
                {
                    "sent": "So these are points and triangles in 3D.",
                    "label": 0
                },
                {
                    "sent": "But the problem is very general and the same ideas I think are applicable to other settings, like for example finding correspondences between pointclouds between volumetric data data, which is very common in medical imaging.",
                    "label": 0
                },
                {
                    "sent": "So MRI scans and CT scans and so on.",
                    "label": 0
                },
                {
                    "sent": "And finding correspondences between 2D images as well is also a very active area of research, and at the heart of all of these problems is basically the same.",
                    "label": 0
                },
                {
                    "sent": "The same exact goal.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Why would we care about this shape matching?",
                    "label": 1
                },
                {
                    "sent": "You can imagine that it's very kind of basic operation and it's used in many different settings, so the most important part of of having a correspondence or a map between a pair of shapes is that it basically allows some kind of a transfer.",
                    "label": 0
                },
                {
                    "sent": "So if you have two shapes and correspondence between them, then you can, for example assign a texture or some kind of a parametrization to the first shape, and you can transfer it onto the second shape.",
                    "label": 0
                },
                {
                    "sent": "If you have a correspondence again, if you have some labels and segmentation, you can take labels of one of the shapes, then transfer them onto the other, and then one operation which is very common in computer graphics, which is one of my sort of background.",
                    "label": 0
                },
                {
                    "sent": "Where my background comes from is where you do deformation.",
                    "label": 0
                },
                {
                    "sent": "So basically you're given a shape and you would like to create some kind of plausible deformation.",
                    "label": 0
                },
                {
                    "sent": "So for example, horses galloping, which is very important for you know cinema industry and this is a very very time consuming operation.",
                    "label": 0
                },
                {
                    "sent": "It takes artists entire days to create, you know single frames and once you have a correspondence between pair of shapes you can take a deformation defined on one of the shapes and just simply transfer it onto the second shape.",
                    "label": 0
                },
                {
                    "sent": "So this is.",
                    "label": 0
                },
                {
                    "sent": "One of the sort of basic operations, but then of course there are other applications like shape interpolation, reconstruction and so on.",
                    "label": 1
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So actually one of the sort of earliest applications of shape matching was in manufacturing, where you have one of the shapes is a CAD model, for example for a car and the other shape would be a scan.",
                    "label": 1
                },
                {
                    "sent": "So you actually take a 3D scan.",
                    "label": 0
                },
                {
                    "sent": "Imagine for example connect and then once you have a map or correspondence, you can find the differences and you can find defects.",
                    "label": 0
                },
                {
                    "sent": "So you say OK, actually the manufacturing process to fail, so there's some kind of problem here in medicine.",
                    "label": 0
                },
                {
                    "sent": "It is very common problem and in many others and one thing in particular that I find interesting and I think this is a lot of future work in this direction is statistical shape analysis.",
                    "label": 1
                },
                {
                    "sent": "So instead of just finding correspondences between a single pair of shapes, you can also ask the same question for a collection.",
                    "label": 0
                },
                {
                    "sent": "An very kind of cool application for this was done by hoster at all in your graphics 2009, where they basically scanned a whole bunch of different people and they found the correspondence between the scans.",
                    "label": 0
                },
                {
                    "sent": "And then they used statistical analysis on this whole collection of humans, and they extracted the main sort of parameters of variability in the shape of a human, which basically.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Later on allowed them to take and generate new models with the given parameters, so once.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We have a lot of scans with correspondences you can do statistical analysis.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And then you can generate models, say give me a random female that weighs about 65 kilos and they can do that only because they have correspondences between the shapes in their collection.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And of course, you know, like I said, this is really one of the most basic operations in geometry analysis, so it really comes up in many different areas.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So this is a small taxonomy of different types of shape matching scenarios, so here I'm not talking about the methods, but I'm talking about the problems because like I said, you know the problems arise in different settings.",
                    "label": 0
                },
                {
                    "sent": "So the way that you solve them is also slightly different.",
                    "label": 0
                },
                {
                    "sent": "So rough taxonomy of the different instances of shape matching problem is the following.",
                    "label": 0
                },
                {
                    "sent": "First of all will look at local versus global where local shape matching already assumes that you have approximate alignment between the shapes, which is common for example in manufacturing.",
                    "label": 0
                },
                {
                    "sent": "So human can come in approximately a line.",
                    "label": 0
                },
                {
                    "sent": "You know the scan and the CAD model of a of a car, and global is basically where you have no idea where the correspondences are, is just two shapes in arbitrary in arbitrary position, another one it was very important, rigid versus deformable or rigid means that basically the two shapes are related by rigid motion which is rotation and translation.",
                    "label": 0
                },
                {
                    "sent": "So the correspondences are parameterized by a small number of parameters and deformable means, for example, articulated motion.",
                    "label": 0
                },
                {
                    "sent": "Like a human performing some.",
                    "label": 0
                },
                {
                    "sent": "Richard Information, and then finally a very important distinction is whether you're considering a pair or collection.",
                    "label": 0
                },
                {
                    "sent": "So like I described in this statistical learning scenario, you might have more than just a pair of shapes and.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "More or less, I think this is this kind of half of this taxonomy is solved, or at least is well established and there is a lot of kind of fundamental work that's done, or it would be very difficult to publish a paper in this right now, and any other combination is quite open.",
                    "label": 0
                },
                {
                    "sent": "I would say so.",
                    "label": 0
                },
                {
                    "sent": "Basically, if you look at.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "You know, even local deformable pair is probably the easiest one.",
                    "label": 0
                },
                {
                    "sent": "It still is still very active area of research, and in particular today I'll be talking about this global deformable pear shape matching a little bit about collection, but mostly about that.",
                    "label": 0
                },
                {
                    "sent": "You have any questions?",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Why is this sort of local rigid matching solved?",
                    "label": 0
                },
                {
                    "sent": "This is a very well classical, well known algorithm called iterative closest point, which basically comes from this paper published in 92, which is one of the sort of foundational papers and shape matching has something like 9000 citations now, and it's very simple method, basically designed to solve this problem where you have two shapes that are approximately aligned and the goal is to find the rotation and translation that would align them perfectly.",
                    "label": 0
                },
                {
                    "sent": "OK, and I don't know.",
                    "label": 0
                },
                {
                    "sent": "Maybe some of you already know this method, but I wanted to describe it in a little bit of detail because it also comes back to what I'll be describing later.",
                    "label": 0
                },
                {
                    "sent": "So here we are assuming that you are given a pair of point clouds, so we don't assume actually any kind of mesh structure.",
                    "label": 1
                },
                {
                    "sent": "We just assume collection of points an North and this method has the following two steps.",
                    "label": 0
                },
                {
                    "sent": "So for every point XI an M first we find its nearest neighbor.",
                    "label": 1
                },
                {
                    "sent": "Why I?",
                    "label": 0
                },
                {
                    "sent": "Nearest neighbor here is really in space, so this is where this assumption that the two point clouds are approximately aligned.",
                    "label": 0
                },
                {
                    "sent": "Comes into play because in here we already assumed that XI lies close to its corresponding point.",
                    "label": 0
                },
                {
                    "sent": "Why I?",
                    "label": 0
                },
                {
                    "sent": "And the second step of this algorithm is to find the optimal translate transformation parameters are empty.",
                    "label": 0
                },
                {
                    "sent": "That would minimize the sum of the distances between the transformed XI and their corresponding.",
                    "label": 0
                },
                {
                    "sent": "Why I OK?",
                    "label": 0
                },
                {
                    "sent": "So our XI is just the rotation of XI?",
                    "label": 0
                },
                {
                    "sent": "Around RNNT is the translation.",
                    "label": 0
                },
                {
                    "sent": "So suppose you have these two different curves and you're trying to.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Find the red curve with the blue curve OK.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So the first step is you establish the correspondence is.",
                    "label": 0
                },
                {
                    "sent": "So here I'm just showing the correspondences for a few points, but you imagine that you would do this for all points.",
                    "label": 1
                },
                {
                    "sent": "So for every point on the red curve you find its nearest neighbor on the blue curve.",
                    "label": 1
                },
                {
                    "sent": "OK, and sometimes you are correct or approximately correct.",
                    "label": 0
                },
                {
                    "sent": "Sometimes you might be wrong and then after that you find that.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Transformation their rotation and translation that would align the points that you have with their corresponding points OK, and then you iterate.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Dude.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Again.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This again until.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Well you converge OK. And this is a very simple algorithm.",
                    "label": 0
                },
                {
                    "sent": "It's quite easy to implement and you can also show that it converges linearly to the global optimal if you start in the vicinity of the optimal and it's quite robust, so it's really used in practice a lot in industry as well.",
                    "label": 0
                },
                {
                    "sent": "But",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Basically so the main thing here is that both steps can be done efficiently because first of all you can find nearest neighbors in space using an efficient data structure like a KD tree or node diagram in 3D, and you can.",
                    "label": 0
                },
                {
                    "sent": "There's a closed form solution for finding the optimal R and team here.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "But the problem is that when we have nonrigid matching, which is the case that I'll be talking about, you don't have this either of these steps are possible.",
                    "label": 0
                },
                {
                    "sent": "OK, first of all, you don't know where the corresponding points are for.",
                    "label": 0
                },
                {
                    "sent": "So if I'm given a point X, what is the corresponding point T of X?",
                    "label": 0
                },
                {
                    "sent": "There are many many different possibilities and also there is no closed form solution to find the optimal transformation.",
                    "label": 0
                },
                {
                    "sent": "So remember in this AICP algorithm there is a step where you compute.",
                    "label": 0
                },
                {
                    "sent": "Rotation and the translation, and in general when you have an articulated motion like this armadillo is lifting and a leg and and sort of changing position of the arm, there is no way to parameterise it efficiently, or at least it's not obvious how you do that.",
                    "label": 0
                },
                {
                    "sent": "So the main kind of issue is that there is no compact representation to optimize foreigner nonrigid shape matching, and what people have done for many years.",
                    "label": 0
                },
                {
                    "sent": "You know what I'll be describing is of course not the first method.",
                    "label": 0
                },
                {
                    "sent": "This is an old problem.",
                    "label": 0
                },
                {
                    "sent": "What people have done is directly optimize over this.",
                    "label": 0
                },
                {
                    "sent": "Mapping.",
                    "label": 0
                },
                {
                    "sent": "Points OK, so for a given set of points X you just look for their corresponding points T of X and basically the space over which you're optimizing is the space of all correspondence is a very complicated space actually, and so the main kind of message here that I wanted to convey is that there is no compact representation to optimize for in nonrigid shape matching, and that's one of the main sort of challenges.",
                    "label": 0
                },
                {
                    "sent": "It's hard to define such a representation.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And so just to give you kind of an idea of how contemporary nonrigid shape matching works, this is an example of a result from 2011, and typically the way you show these results.",
                    "label": 1
                },
                {
                    "sent": "So you have two shapes and you have a correspondence and it's kind of difficult to visualize what's going on with the correspondence.",
                    "label": 0
                },
                {
                    "sent": "So you just flotsam function on the 1st shape and then you use the correspondence to pull back the function and you show the value of the function after you pull back and.",
                    "label": 0
                },
                {
                    "sent": "The you can basically see the.",
                    "label": 0
                },
                {
                    "sent": "Ideally the function should be smooth and ideally should be exactly the same, but here there's a problem because you know that it looks like the hands are mapped to the one of the feet, and then you know you have a lot of discontinuity's, so this map really doesn't look that great.",
                    "label": 0
                },
                {
                    "sent": "OK, and this is a close to state of the art in 2011, so this is a very difficult problem, OK?",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So just to give you kind of a like an overview of what people have done.",
                    "label": 0
                },
                {
                    "sent": "Basically there's a kind of a generic recipe of how to solve this nonrigid shape matching, and this occurs both in an image analysis as well as in computer graphics, and typically what you do is the following.",
                    "label": 1
                },
                {
                    "sent": "So you can't optimize overall correspondence is this is just too expensive, so these shapes you know they might have something like 30 thousand 50,000 points, so you can find the correspondence is for all thirty 50,000.",
                    "label": 0
                },
                {
                    "sent": "So what you do is you subsample, so you find some.",
                    "label": 0
                },
                {
                    "sent": "A small number of landmark points on Onshape M and then for each of the landmark points you find its corresponding point.",
                    "label": 0
                },
                {
                    "sent": "You know for each of the landmark points X or here is P or you will find the corresponding point T of \u03c0 by basically doing this optimization where you have a first order term which is just the difference between PII or between the signature some kind of descriptor of Pi like for example if you're familiar with image analysis, SIFT is a very common.",
                    "label": 0
                },
                {
                    "sent": "Image local signature of a point.",
                    "label": 0
                },
                {
                    "sent": "But you can imagine like curvature is one kind of signature.",
                    "label": 0
                },
                {
                    "sent": "What kind of descriptor that you'd like to preserve?",
                    "label": 0
                },
                {
                    "sent": "So Gauss curvature or something like that?",
                    "label": 0
                },
                {
                    "sent": "And then you have also another term which is the 2nd order term which basically says that for every pair of points Pi and PJ I want to find a correspondence T such that the distance and here typically you assume that the geodesic distances approximately preserved, so the distance not in space, but the distance on the surface, and that's why you have the subscript M and.",
                    "label": 0
                },
                {
                    "sent": "So the distance between \u03c0 and PJ is approximately the same as the distance on or between TRP ion TFJ OK. And first of all, approximating this distance is already very expensive.",
                    "label": 0
                },
                {
                    "sent": "It's like order Ncube something like that and best case.",
                    "label": 0
                },
                {
                    "sent": "And Secondly, when you're doing this optimization, you're basically you're optimizing over the space T over the space of all correspondence is so for every point you're looking for its corresponding point OK. And you could do it just using the 1st order term.",
                    "label": 0
                },
                {
                    "sent": "But you know the results that you get are quite bad.",
                    "label": 0
                },
                {
                    "sent": "And even though this is efficient, but it really is really expensive is basically this part.",
                    "label": 0
                },
                {
                    "sent": "So having the 2nd order term makes the problem well, you can actually show that this problem in general is NP hard.",
                    "label": 1
                },
                {
                    "sent": "OK, so after you but you know there is some relaxations and people assume some things in practice.",
                    "label": 0
                },
                {
                    "sent": "Some initial correspondence and so on.",
                    "label": 0
                },
                {
                    "sent": "So once you find the landmark correspondences, you can obtain the dense correspondences from the sparse one.",
                    "label": 0
                },
                {
                    "sent": "So if you know the you know, let's say you have 50,000 points and you know the correspondence between, say 20, it's quite easy to find the correspondence between the other.",
                    "label": 0
                },
                {
                    "sent": "The other points that you don't know an actually in.",
                    "label": 0
                },
                {
                    "sent": "Previous work in 2010 we showed that if in the sort of exact case when everything is nice and smooth where you have the preservation of the distances holding exactly there is, this results that we show that basically if you knew exactly 1 correspondence, just one point.",
                    "label": 0
                },
                {
                    "sent": "If you knew the map of 1 point, you can recover the full dense map no matter how many points.",
                    "label": 0
                },
                {
                    "sent": "There are an no matter what the dimension of the underlying shapes are, and even that is actually quite weak in the sense that it's like, oh, it's perfect algorithm.",
                    "label": 0
                },
                {
                    "sent": "All you need is just to find one correspondence right, but it doesn't really work.",
                    "label": 0
                },
                {
                    "sent": "First of all, because even obtaining a single correspondence is hard.",
                    "label": 0
                },
                {
                    "sent": "Finding where exactly does this point go is like nontrivial when you have 50,000 possibilities, and then also even once you do find the correspondence because things aren't, you know they don't hold exactly.",
                    "label": 0
                },
                {
                    "sent": "Typically the distances aren't preserved exactly, you have some approximate preservation of distances, so all this kind of beautiful theory breaks down South.",
                    "label": 0
                },
                {
                    "sent": "That doesn't work in practice.",
                    "label": 1
                },
                {
                    "sent": "They were very excited one when we saw this, but anyway, so it's still very challenging.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Right, so that's the last step of finding dense correspondences from sparse ones.",
                    "label": 1
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "So any questions so far?",
                    "label": 0
                },
                {
                    "sent": "One is clear.",
                    "label": 0
                },
                {
                    "sent": "OK, so.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So basically the motivation for the what I'm going to show you was the following, so you know, we sort of looked at this problem.",
                    "label": 0
                },
                {
                    "sent": "We said people recognize that there's this inherent complexity, and So what they do is they subsample so they take some landmark responses, but in reality doesn't actually change the problem fundamentally, because fundamentally you're still looking for mappings between surfaces, so the space over which you're optimizing is still the same.",
                    "label": 0
                },
                {
                    "sent": "You know you're still optimizing over correspondence is on the surface is and.",
                    "label": 0
                },
                {
                    "sent": "So the problem is when you have, you know points which are discrete.",
                    "label": 0
                },
                {
                    "sent": "The optimizations the solution space is still discrete, so you know for a given point X what is the what is the corresponding point T of X.",
                    "label": 0
                },
                {
                    "sent": "And if I have 50,000 points, it's still discrete space that I have to consider.",
                    "label": 0
                },
                {
                    "sent": "And you know, probably you sort of have the intuition that often these kind of problems are very difficult, so this is discrete optimization problem.",
                    "label": 0
                },
                {
                    "sent": "Unless there is some very very special structure like you know some minimal spanning tree or something like that, it's very typically these are very difficult problems to optimize for.",
                    "label": 0
                },
                {
                    "sent": "So what we'd like to do is actually make the solution space or the optimization with the thing that we are optimizing continuous instead of discrete.",
                    "label": 0
                },
                {
                    "sent": "That's one of the motivations.",
                    "label": 0
                },
                {
                    "sent": "So you know, because you have discrete, it's very difficult to optimize quadratic energy functions.",
                    "label": 0
                },
                {
                    "sent": "Things become NP complete very quickly, you it's difficult to enforce global continuity constraints like I showed.",
                    "label": 0
                },
                {
                    "sent": "You know you have discontinuous Maps.",
                    "label": 0
                },
                {
                    "sent": "Jumping around is also very difficult to incorporate uncertainty into prior data, so when you know what I mean by this, is this result where we have the single point and single correspondence, then everything was nice, but typically we don't know is even a single correspondence.",
                    "label": 0
                },
                {
                    "sent": "What we know is this point approximately, or Maps in the vicinity of some.",
                    "label": 0
                },
                {
                    "sent": "Other point, and when you have the space of correspondence is just, you know the map is very difficult to incorporate that uncertainty unless you you construct some probability distribution over the space of points.",
                    "label": 0
                },
                {
                    "sent": "But then it even the solution space blows up even more because now instead of just having 50,000 variables you know you have 50,000 square variables anyway, and then again another sort of more subtle point is that when you have ambiguities, that symmetry is very difficult to.",
                    "label": 0
                },
                {
                    "sent": "Return meaningful results because you know you have maybe two possibilities, not even one.",
                    "label": 0
                },
                {
                    "sent": "So what we sort of looked at and we said, you know, I think that this is more a limitation of the of the representation.",
                    "label": 0
                },
                {
                    "sent": "Naturally of a particular method.",
                    "label": 0
                },
                {
                    "sent": "So what we're really what you really care bout isn't a particular sort of, you know, one little bit.",
                    "label": 0
                },
                {
                    "sent": "Small improvement over the method that people use for finding these correspondences.",
                    "label": 0
                },
                {
                    "sent": "But really, look at a different representation for the correspondence to themselves.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So you know just to give you kind of a small overview of what people have done in this particular area is finding corresponds directly is hard.",
                    "label": 0
                },
                {
                    "sent": "You can imagine that you can basically embed a shape into some kind of space, like think for example of.",
                    "label": 0
                },
                {
                    "sent": "You know Laplacian Eigen Maps or something like that if you're familiar from machine learning, you take your point cloud.",
                    "label": 0
                },
                {
                    "sent": "You compute some operator and then that gives you an embedding into a different space and then you find some transformation in that embedded space.",
                    "label": 0
                },
                {
                    "sent": "So this is a very common approach, but unfortunately it's very difficult to find a space where things align perfectly.",
                    "label": 0
                }
            ]
        },
        "clip_31": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And right so this is spectral embeddings is the most common approach.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                }
            ]
        },
        "clip_32": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "There is another approach which is based on conformal mapping where the author is basically pointed out that if you have two shapes that have sphere topology, then finding Maps that preserve geodesic distances is a subgroup of finding Maps that preserve angles and that group of mappings that preserve angles is called Mobius Group, and it has a small number of parameters.",
                    "label": 0
                },
                {
                    "sent": "So if you know only three correspondences you can find, you can find the full dense dance map.",
                    "label": 0
                },
                {
                    "sent": "They built a method based on these three landmark correspondences, and that that anyway doesn't work that great.",
                    "label": 0
                }
            ]
        },
        "clip_33": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And this is the work that I mentioned earlier with one point.",
                    "label": 0
                }
            ]
        },
        "clip_34": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "The present, the representation that I'll show you in what follows, is basically a different represent.",
                    "label": 0
                }
            ]
        },
        "clip_35": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Asian for correspondences, which isn't based on finding correspondences between points.",
                    "label": 0
                },
                {
                    "sent": "So for every point X and I'm finding some corresponding point T of X and it's more amicable to direct optimization so it leads to continuous optimization problems instead of discrete optimization problems.",
                    "label": 0
                },
                {
                    "sent": "So it's it has very nice properties like it's compact.",
                    "label": 0
                },
                {
                    "sent": "So regardless of how many number of points, even if you have, you know 10s or hundreds of thousands of points, you can represent a map usually quite compactly using a small matrix.",
                    "label": 0
                },
                {
                    "sent": "It's inherently global and multi scale and incorporates ambiguity, uncertainty quite well.",
                    "label": 0
                },
                {
                    "sent": "So this is sort of our goal.",
                    "label": 0
                },
                {
                    "sent": "OK, and at the end of the day we have this correspondence and basically you can encode it as a small matrix and the optimization shape matching becomes just manipulation of matrices and matrices are probably the easiest things to manipulate, so that's why things things become quite.",
                    "label": 0
                }
            ]
        },
        "clip_36": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so the the way that this representation is constructed is as follows.",
                    "label": 0
                },
                {
                    "sent": "So suppose you know so far I've talked about shape matching, so you're given two shapes and your find your goal is to find the correspondence.",
                    "label": 0
                },
                {
                    "sent": "But suppose someone actually gives you the correspondence.",
                    "label": 0
                },
                {
                    "sent": "So suppose you have two shapes and and and the map T between them.",
                    "label": 0
                },
                {
                    "sent": "OK, so now let's say that I paint a function.",
                    "label": 0
                }
            ]
        },
        "clip_37": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "On North OK then or say here I paint a function on M, then I can find a corresponding function on North which so if I have a function F which is just a real valued function, so it has values into the real line, then there is a corresponding function on Earth which also takes values in the real line and is just defined as the pullback of the.",
                    "label": 0
                },
                {
                    "sent": "Original function F. OK so if I have a function on MI can use the given correspondence T to define the corresponding function on North.",
                    "label": 0
                },
                {
                    "sent": "OK, so for this in here assumes bijections.",
                    "label": 0
                },
                {
                    "sent": "So if I have a bijection between M&N this I can do this, but you can also reverse the direction and then you don't need to assume projections.",
                    "label": 0
                },
                {
                    "sent": "But things are much nicer with projections, so that's why I wanted to.",
                    "label": 0
                },
                {
                    "sent": "Talk about that first, so this is like a very basic step, so this should be clear.",
                    "label": 0
                }
            ]
        },
        "clip_38": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So of course, once you know the correspondence T, so this mapping between points, it induces a correspondence between functions and that corresponds is fixed.",
                    "label": 0
                },
                {
                    "sent": "So in the sense that it works for any function.",
                    "label": 0
                },
                {
                    "sent": "So if I paint a function on EM, you know there's always the corresponding function on M and the mapping is induced from the original mapping T or so.",
                    "label": 0
                },
                {
                    "sent": "We write this as T sub F to denote the mapping between functions.",
                    "label": 0
                },
                {
                    "sent": "So the mapping between points induces.",
                    "label": 0
                },
                {
                    "sent": "Mappings between functions.",
                    "label": 0
                },
                {
                    "sent": "That's kind of important.",
                    "label": 0
                }
            ]
        },
        "clip_39": {
            "is_summarization_sample": false,
            "summarization_data": []
        },
        "clip_40": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And the thing about this mapping between functions is that unlike even though like I said, you know the mapping between points can be discontinuous.",
                    "label": 0
                },
                {
                    "sent": "Ann Behav vary widely.",
                    "label": 0
                },
                {
                    "sent": "The mapping between functions is actually very, very simple.",
                    "label": 0
                },
                {
                    "sent": "So first of all, the the very important thing is that it's linear.",
                    "label": 0
                },
                {
                    "sent": "So if I have a just linear combination of two functions, their their correspondence or their image is also linear combination of the images.",
                    "label": 0
                },
                {
                    "sent": "And also it's complete.",
                    "label": 0
                },
                {
                    "sent": "So now what we mean by completing the following.",
                    "label": 0
                },
                {
                    "sent": "So suppose someone told me the mapping between the functions but didn't tell me the mapping between the points.",
                    "label": 0
                },
                {
                    "sent": "Can I use the mapping between the functions to recover the mapping between the points OK and it's very simple.",
                    "label": 0
                },
                {
                    "sent": "Basically, you can imagine that you take a Delta function, so a function that's one at a particular point and zero everywhere else you look at its image, and by construction the image also has to be one at a particular point in zero everywhere else, and so the place where that.",
                    "label": 0
                },
                {
                    "sent": "Function is one that's going to be a correspondence.",
                    "label": 0
                },
                {
                    "sent": "OK, so basically you have this mapping between functions T of F is linear and it's complete.",
                    "label": 0
                }
            ]
        },
        "clip_41": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And so right.",
                    "label": 0
                },
                {
                    "sent": "So here I took a smaller kind of a Gaussian or a type of Delta function, found its image and then say OK, this image has a maximum at a particular point.",
                    "label": 0
                },
                {
                    "sent": "So I take that as my corresponding point, OK?",
                    "label": 0
                }
            ]
        },
        "clip_42": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So and you can do this for all points.",
                    "label": 0
                }
            ]
        },
        "clip_43": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Course, so the nice thing about functions is that they form a vector space.",
                    "label": 0
                },
                {
                    "sent": "So if you consider this space of square integrable functions on the shape, so I give you a shape and you look at all the functions that are possible real valued functions on that shape.",
                    "label": 0
                },
                {
                    "sent": "This has a natural vector space structure because you can obviously add and multiply functions by constant and So what that means is that there's a natural basis, or you can define.",
                    "label": 0
                },
                {
                    "sent": "Bases for functional spaces.",
                    "label": 0
                },
                {
                    "sent": "OK, so you can say given a shape I can construct.",
                    "label": 0
                },
                {
                    "sent": "A set of basis functions such that any function is going to be a linear combination of these basis functions.",
                    "label": 0
                },
                {
                    "sent": "And this is really the fundamental difference between functional spaces an points because points if you consider just points on the surface, they don't have this vector space structure, and that's why the shape matching on just points is very difficult, because you're optimizing over some space which is highly nonlinear.",
                    "label": 0
                },
                {
                    "sent": "If you consider just the points on the surface, you have many possibilities, highly nonlinear.",
                    "label": 0
                },
                {
                    "sent": "It doesn't have this vector space structure.",
                    "label": 0
                },
                {
                    "sent": "That's why it's very difficult, but the function spaces are very easy to manipulate because.",
                    "label": 0
                },
                {
                    "sent": "The space of functions forms of extra space.",
                    "label": 0
                },
                {
                    "sent": "So you have a multi scale basis and also even though individual basis functions are often unstable under perturbations, you can show that this space is spanned by basis.",
                    "label": 0
                },
                {
                    "sent": "Functions are often stable, so there's a little bit more technical detail, but this is important for our method.",
                    "label": 0
                },
                {
                    "sent": "And So what it means is that you know from all the previous kind of little tidbits that I showed you.",
                    "label": 0
                },
                {
                    "sent": "It follows that if you consider both the functional space on M and the function space on North, if they're both endowed with basis, then the correspondence, dysfunction, correspondence, T sub F can be represented as a matrix.",
                    "label": 0
                },
                {
                    "sent": "OK, and this matrix is just the change of basis matrix.",
                    "label": 0
                },
                {
                    "sent": "And the sort of R kind of goal or intuition is that we instead of looking instead of operating with direct correspondences between points, we're going to operate with these matrices.",
                    "label": 0
                },
                {
                    "sent": "So the definition for the functional.",
                    "label": 0
                }
            ]
        },
        "clip_44": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Presentation of the map is a matrix C such that so this should be a such that if you have a function F which is represented as a linear combination of basis functions on on M, the image of F which is a linear combination of basis functions on North, is just given as B is equal to C * A.",
                    "label": 1
                },
                {
                    "sent": "This should be a where B&AR vectors representing the coefficients OK and the most important thing is that once you fix the correspondence T. This matrix sees fixed it's independent of the of the coefficients A&B.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "I mean it's kind of very trivial remark, but it just it just basically means that the original correspondence these encoded completely in a fixed matrix C, so it doesn't depend on on a.",
                    "label": 0
                },
                {
                    "sent": "And especially, this matrix has a very simple form where the base is the basis functions are orthonormal with respect to some inner product, because you can just you can compute the ijaaf element of your matrix C as the inner product between the image of the Earth basis vector on North with J basis vector on North.",
                    "label": 0
                },
                {
                    "sent": "OK, it's just a very like there's a closed form expression for what she looks like.",
                    "label": 0
                },
                {
                    "sent": "If you know the correspondences.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_45": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So this is just an example of what these matrices look like, so we have a source shape and a target shape.",
                    "label": 0
                },
                {
                    "sent": "So there are two different shapes and we have three different Maps between these shapes, so the first map Maps, you know it's kind of a natural map.",
                    "label": 0
                },
                {
                    "sent": "It Maps the left of the cat to the left of the cat in the way that you would expect you know the the sort of the feed get mapped to the feet, and so on.",
                    "label": 0
                },
                {
                    "sent": "The second map is symmetric in the sense that it Maps the left of the cat to the right of the cat, but still, it's nice natural in the sense that you know just the left foot Maps to the right foot, but.",
                    "label": 0
                },
                {
                    "sent": "There's nothing else like any discontinuity going on, and the last map Maps the head to the tail OK, the way that they are represented again, we paint a function on this shape, and then so we paint the function of this shape, and then we're showing the image of that function on the different shapes, and these matrices show the representation.",
                    "label": 0
                },
                {
                    "sent": "This functional representation of these three Maps.",
                    "label": 0
                },
                {
                    "sent": "OK, so here we picked some particular bases for the functional space and on the shapes, and the basis is the eigenfunctions of the possible.",
                    "label": 0
                },
                {
                    "sent": "Operator, which I won't go into too much detail, but basically it's a multi scale basis that allows you to encode a function you know if it's sufficiently smooth and a shape using a fixed number of coefficients, and these matrices just represent the functional representation of this point to point map and you know there's some interesting things about it.",
                    "label": 0
                },
                {
                    "sent": "First of all, if you have a quite natural Maps Maps that are approximately preserving of the geodesics distances.",
                    "label": 0
                },
                {
                    "sent": "Then these matrices are exactly or close to being diagonal, so that's what you have for for these two these two Maps.",
                    "label": 0
                },
                {
                    "sent": "But the interesting thing is they're not exactly diagonal.",
                    "label": 0
                },
                {
                    "sent": "OK, so you have quite a nontrivial thing here going on, and this is where this remark that I made earlier about having a one perfect correspondence, sort of solves all your problems.",
                    "label": 0
                },
                {
                    "sent": "Comes in because if you had a one perfect correspondence, then this matrix would be exactly diagonal, and most of the previous methods that have.",
                    "label": 0
                },
                {
                    "sent": "Nice theory structure behind them assume diagonal structure for this matrix in.",
                    "label": 0
                },
                {
                    "sent": "Phrased differently, this is what they assume.",
                    "label": 0
                },
                {
                    "sent": "You know.",
                    "label": 0
                },
                {
                    "sent": "Maybe they assume preservation of geodesic distances or preservation of angles, but what it translates to in the function representation is that it's a diagonal matrix an.",
                    "label": 0
                },
                {
                    "sent": "In practice, if you look at most natural Maps that you care about, there not diagonal OK, and this is really the heart of the problem.",
                    "label": 0
                },
                {
                    "sent": "And the interesting thing is here, if you have quite a sort of unnatural, like or map that has a lot of distortion, then the function of representation is much less diagonal.",
                    "label": 0
                },
                {
                    "sent": "But it's still.",
                    "label": 0
                },
                {
                    "sent": "It's still fixed in the sense that you don't need some special structure for your map to define the function representation, so any map has a functional representation.",
                    "label": 0
                }
            ]
        },
        "clip_46": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Right, so we use this the functional representation, inflexible since it allows.",
                    "label": 0
                },
                {
                    "sent": "Basically for any choice of basis you get a representation for the map.",
                    "label": 0
                },
                {
                    "sent": "So what we use is like I said, the eigenfunctions of the Laplace Beltrami operator which you can think of just as eigenvectors of the Laplacian on a graph.",
                    "label": 0
                },
                {
                    "sent": "So if you're familiar with the spectral graph theory, just imagine a Laplacian on a graph and it has eigenvectors and they are ordered by eigenvalues.",
                    "label": 0
                },
                {
                    "sent": "Eigenvalues are kind of representing a certain notion of scale.",
                    "label": 0
                },
                {
                    "sent": "So you have very very smooth functions in beginning.",
                    "label": 0
                },
                {
                    "sent": "The first eigenfunction is always constant and the second one is.",
                    "label": 0
                },
                {
                    "sent": "You know very smoothest Fiedler vector and so on.",
                    "label": 0
                },
                {
                    "sent": "So basically there's a natural correspondence between that and the laws that ramping up erator in the continuous setting.",
                    "label": 0
                },
                {
                    "sent": "So the nice thing about these guys is that it's a little bit technical to find them, but they have some nice properties.",
                    "label": 0
                },
                {
                    "sent": "First of all, their multi scale and sparse so multi scale.",
                    "label": 0
                },
                {
                    "sent": "It means that the first K basis functions are guaranteed to be smooth.",
                    "label": 1
                },
                {
                    "sent": "Where the smoothness is depending on K. OK, so as you increase K as you increase the number of basis functions that you take, you are allowing yourself to represent more and more sort of varying functions.",
                    "label": 0
                },
                {
                    "sent": "But in practice actually cutting at a certain point is better because you sort of avoid very discontinuous things.",
                    "label": 0
                },
                {
                    "sent": "OK, so that's that's good for us.",
                    "label": 0
                },
                {
                    "sent": "And then also the functions themselves are smooth and there's no code you can compute this in practice if you want to.",
                    "label": 0
                }
            ]
        },
        "clip_47": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And so this thing about multi scale is this example.",
                    "label": 0
                },
                {
                    "sent": "So we have a source.",
                    "label": 0
                },
                {
                    "sent": "So we have a shape of this cat and then 3 four different other cats and the correspondence is here just a normal correspondence is.",
                    "label": 0
                },
                {
                    "sent": "So just like the regular you map the right foot to the right foot and all of the four examples and this plot shows the error that you get by converting.",
                    "label": 0
                },
                {
                    "sent": "So the shapes themselves have 3030 thousand points roughly.",
                    "label": 0
                },
                {
                    "sent": "And the Maps we represent I'm using the functional representation using a matrix of size N by N, where N is the X axis.",
                    "label": 1
                },
                {
                    "sent": "So here goes between 10280 to 300 and the Y axis is the error.",
                    "label": 0
                },
                {
                    "sent": "So we encode.",
                    "label": 0
                },
                {
                    "sent": "Basically we compress the map into a matrix and then we recover the map again and we measure the error and you don't really need to worry about what you know exactly.",
                    "label": 0
                },
                {
                    "sent": "The scale of this error, but roughly speaking around here on this line, it's one hop size on the mesh.",
                    "label": 0
                },
                {
                    "sent": "So basically you're either.",
                    "label": 0
                },
                {
                    "sent": "Exactly correct, or you're correct with just an error of 1 neighbor?",
                    "label": 0
                },
                {
                    "sent": "OK, So what it means is that you can represent a map between two shapes with 30,000 points using a matrix of size you know about 80 by 80, and this is without any kind of further optimization.",
                    "label": 0
                },
                {
                    "sent": "We just took this particular basis functions and this is what you use.",
                    "label": 0
                },
                {
                    "sent": "But you can also actually show that you can do even better than that.",
                    "label": 0
                },
                {
                    "sent": "So the sort of point of this whole approach is to consider these small or relatively small medium sized matrices an operate on Maps as just matrices and do shape matching in this metric space.",
                    "label": 0
                }
            ]
        },
        "clip_48": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And like I said, they are quite sparse, so if you show just the sort of the significantly non zero values.",
                    "label": 0
                },
                {
                    "sent": "The interesting thing here is that if you have two shapes like, the difference between the source and the cat, so kacian cat 10, there's very little distortion.",
                    "label": 0
                },
                {
                    "sent": "OK, so the distortion is the geodesic distance.",
                    "label": 0
                },
                {
                    "sent": "Distortion is quite small, so you have approximately diagonal matrix as when, whereas in here you have quite a bit of distortion, so you have like more and more of the off diagonal elements, so there's also a measure of distortion.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_49": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So Interestingly, there's some other nice properties about this functional representation of a correspondence, which is the following.",
                    "label": 0
                },
                {
                    "sent": "So if you have two, you know two Maps, so from A to B and from B to C, and you want to compose them.",
                    "label": 0
                },
                {
                    "sent": "So that's one sort of fundamental properties of Maps that you can always compose them.",
                    "label": 0
                },
                {
                    "sent": "And the function of representation.",
                    "label": 0
                },
                {
                    "sent": "It becomes just matrix multiplication.",
                    "label": 0
                },
                {
                    "sent": "So if I have a matrix representing the first map and the matrix representing the second map, if I want to find their composition, I just multiply the matrices, which is very handy and mapping version is just matrix inversion, which is actually quite a difficult operation practice.",
                    "label": 0
                },
                {
                    "sent": "Like suppose someone gives you a mapping and is not bijective, so you want to find the pre image or sort of natural pre image for every point.",
                    "label": 0
                },
                {
                    "sent": "So there are some methods to do that but in here all you have to do is just take the matrix inverse.",
                    "label": 0
                },
                {
                    "sent": "And this very, very efficient and kind of another interesting thing is that things that weren't possible to define using just point correspondences now become possible, like for example taking a sum of two different correspondences or linear combination of two different correspondences.",
                    "label": 0
                },
                {
                    "sent": "So if I give you 2 correspondences between two shapes represented as points, then and ask you what's the sum of these two correspondences.",
                    "label": 0
                },
                {
                    "sent": "There's no sort of good answer for that, whereas in here where you represent the two.",
                    "label": 0
                },
                {
                    "sent": "Correspondences as matrices.",
                    "label": 0
                },
                {
                    "sent": "Then you can just take the sum of the two matrices and there is a natural way in which they are defined in the sense that.",
                    "label": 0
                },
                {
                    "sent": "Basically, if I have a shape one and shape 2 and two different Maps, then I can first consider the image of a given function on this shape.",
                    "label": 0
                },
                {
                    "sent": "Then consider the image of the given function using this map and then take the sum of those two.",
                    "label": 0
                },
                {
                    "sent": "OK, so you have this kind of a linear structure of the space of Maps now, and it's actually the most important thing here is that when we are going to this representation of Maps using matrices, we're actually going to hire space, so.",
                    "label": 0
                },
                {
                    "sent": "We are no longer restricting ourselves to just Maps that are defined point to point.",
                    "label": 0
                },
                {
                    "sent": "So every point to point correspondence has a functional representation, but not every functional map corresponds to a point to point map.",
                    "label": 0
                },
                {
                    "sent": "And that's actually one of the sort of price price that you have to pay for doing this.",
                    "label": 0
                },
                {
                    "sent": "Map processing with matrices.",
                    "label": 0
                },
                {
                    "sent": "Because for example, when you take a linear combination of two correspondences, this functional map is a linear functional map.",
                    "label": 0
                },
                {
                    "sent": "You know it's very nice, but actually it doesn't correspond any point to point map because it it mixes the left and the right equally.",
                    "label": 0
                },
                {
                    "sent": "But in certain scenarios this is actually an advantage instead of a disadvantage, because often you don't know whether the left should go to the left or the right, and then you can define natural ambiguous functional Maps.",
                    "label": 0
                },
                {
                    "sent": "OK, so.",
                    "label": 0
                }
            ]
        },
        "clip_50": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So the most important thing for shape matching is of this representation of the following.",
                    "label": 0
                },
                {
                    "sent": "So suppose so.",
                    "label": 0
                },
                {
                    "sent": "So far I told you OK if someone gave me a correspondence, I can define this functional representation and then it has some nice properties and I can manipulate and so on.",
                    "label": 0
                },
                {
                    "sent": "But in practice we don't know the functional correspondence.",
                    "label": 0
                },
                {
                    "sent": "OK, so the actual goal of shape matching is to recover the correspondence.",
                    "label": 0
                },
                {
                    "sent": "So I have two shapes M in North and I want to recover the correspondence or dysfunctional correspondence.",
                    "label": 0
                },
                {
                    "sent": "See OK, I represent this matrix.",
                    "label": 0
                },
                {
                    "sent": "There's sort of the most useful property of this function.",
                    "label": 0
                },
                {
                    "sent": "Representation is the following.",
                    "label": 0
                },
                {
                    "sent": "Suppose that you know, so you don't know the correspondences between the points, but you can sometimes say OK, I don't know the correspondence is, but I know that I can find a function on M and a corresponding function on or.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "For example, suppose that you compute Gauss curvature or some kind of measure of curvature.",
                    "label": 0
                },
                {
                    "sent": "So you define a map, or you define a function on M and you define a function or and, say, a natural map or a good map should approximately preserve this function.",
                    "label": 0
                },
                {
                    "sent": "So the image of the function that I painted on the left should be the same as the function that painted on the right OK, and actually, even though it might seem hard to come up with these constraints, it's actually very easy, so four different types of descriptors, different types of sort of signatures you can come up with.",
                    "label": 0
                },
                {
                    "sent": "Natural constraints of this type and the most sort of amazing thing is that once you have this constraint of CA equals to B or approximately equals to be where A&B are no.",
                    "label": 0
                },
                {
                    "sent": "Nancy's unknown is a linear constraint on.",
                    "label": 0
                },
                {
                    "sent": "See OK, so that means that if you give me enough so if I for example I have CS 80 by 80.",
                    "label": 0
                },
                {
                    "sent": "So if you give me 80 of such constraints then I can recover see uniquely using just the least square system.",
                    "label": 0
                },
                {
                    "sent": "So instead of those very very expensive.",
                    "label": 0
                },
                {
                    "sent": "Discrete optimization techniques that I talked about earlier that do this subsampling an do very expensive optimization.",
                    "label": 0
                },
                {
                    "sent": "All we need to do now is just do a least squares solver Singlely score system using enough constraints.",
                    "label": 0
                },
                {
                    "sent": "And so these constraints.",
                    "label": 0
                }
            ]
        },
        "clip_51": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So right, so, given enough A&B pairs, we can recover a matrix C. Using at least square cyst.",
                    "label": 0
                }
            ]
        },
        "clip_52": {
            "is_summarization_sample": false,
            "summarization_data": []
        },
        "clip_53": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And.",
                    "label": 0
                }
            ]
        },
        "clip_54": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So these these constraints are quite general, so you can define.",
                    "label": 0
                },
                {
                    "sent": "So, for example, someone comes in and tells you the texture, so you know the texture on the two shapes.",
                    "label": 0
                },
                {
                    "sent": "This is this is a functional correspondence constraint, so you can phrase it as a linear constraint on C. Like I said, descriptor preservation like Gauss curvature, landmark correspondences so.",
                    "label": 0
                }
            ]
        },
        "clip_55": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Suppose that someone tells you, OK, I think that this point should go to this point, but I don't know exactly so actually what I know is that a Gaussian of a certain width around this point should map to a Gaussian to certain width around that point, even though I don't know exactly where the points go.",
                    "label": 0
                },
                {
                    "sent": "This constraint also is a functional preservation constraint, so you can just say OK CA equals to be for some specific A&B, and finally correspondence constraints.",
                    "label": 0
                },
                {
                    "sent": "So suppose that someone came and pre segmented, so split the shapes into into.",
                    "label": 0
                },
                {
                    "sent": "Segments and they say, OK, I think this is a leg, so the segment of the leg here should correspond to the segment on the leg here and you can just say.",
                    "label": 0
                }
            ]
        },
        "clip_56": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, if I give if I have a region of a shape I can just define the indicator function on that region and I say OK, the indicator function on this region should correspond to the indicator function on this region, so again you can incorporate uncertainty and so on.",
                    "label": 0
                }
            ]
        },
        "clip_57": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And another thing which we use is that is a little bit more technically complicated, But basically you know there are two types of constraints there is this functional preservation constraint, but also often when you have the shapes, they are also endowed with self operators.",
                    "label": 1
                },
                {
                    "sent": "So La Plaza try operator is self operated.",
                    "label": 0
                },
                {
                    "sent": "But you can think about symmetry.",
                    "label": 1
                },
                {
                    "sent": "So for example left and right symmetry just swaps the values of the given a function.",
                    "label": 0
                },
                {
                    "sent": "It swaps the values on the left and the right.",
                    "label": 0
                },
                {
                    "sent": "OK, so I have a function an A symmetry operator just.",
                    "label": 0
                },
                {
                    "sent": "Takes a function, produces a new function, and so you can construct this commutative diagram.",
                    "label": 0
                },
                {
                    "sent": "So if I have a shape M, so the functional shape M from surreal I and have an operator S1 and the same thing for the functional shape N and I have an operator S2, then basically I want a functional correspondence see such that this this diagram should commute, so S1C should equal to CS2.",
                    "label": 1
                },
                {
                    "sent": "OK and.",
                    "label": 0
                },
                {
                    "sent": "Even though this seems like a kind of a second order constraint because I'm combining two operators, it's actually a linear constraint on C. Again.",
                    "label": 0
                },
                {
                    "sent": "So basically you can write this constraint as a linear constraint on C. And this really helps in practice.",
                    "label": 1
                },
                {
                    "sent": "So OK, so at the end of the day.",
                    "label": 0
                }
            ]
        },
        "clip_58": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Alright, so The thing is this kind of important is that we might form all these constraints and we get a solution, but we don't know whether this solution actually corresponds to a point to point map.",
                    "label": 0
                },
                {
                    "sent": "So like I said, you know functional Maps are more general than point to point Maps, so often we don't know whether a functional map corresponds to point point now, but we have the following theorem, which is the basically says that if I have a map and underlying map T that preserves distances.",
                    "label": 0
                },
                {
                    "sent": "Or it actually preserves volume, so local area on each shape, so it's a local area preserving map, which is a weaker condition than preserving distances.",
                    "label": 0
                },
                {
                    "sent": "Then the matrix corresponding to the functional representation of this map must be orthonormal.",
                    "label": 0
                },
                {
                    "sent": "OK, so basically relates preservation of volume on between the shapes to the structure of the matrix.",
                    "label": 0
                },
                {
                    "sent": "So what that means is that we can say OK, I want to find a function.",
                    "label": 0
                },
                {
                    "sent": "Matrix C that preserves all these functional constraints as linear an is also approximately orthonormal.",
                    "label": 0
                },
                {
                    "sent": "OK so.",
                    "label": 0
                },
                {
                    "sent": "All of these together.",
                    "label": 0
                },
                {
                    "sent": "Kind of, you know, once you put all of these together into simple least squares system, you get a very simple shape matching method that actually works better than than what was there before.",
                    "label": 0
                },
                {
                    "sent": "So this is just.",
                    "label": 0
                }
            ]
        },
        "clip_59": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Showing the quality of the Maps that we obtain on 2 standard benchmarks.",
                    "label": 0
                },
                {
                    "sent": "So basically what you need to look at is the solid green line so it's hard to see what's going on, but if you look at the solid green line, here is the geodesic error and this is the number of correspondences that you have with that error, so the ideal map would look like this, you know, just kind of it wouldn't have any error, but our map basically performs better than the methods that were there before.",
                    "label": 0
                },
                {
                    "sent": "And it's kind of remarkable because actually solving this is very, very fast.",
                    "label": 0
                },
                {
                    "sent": "You know you don't need some kind of very complex optimization to do this.",
                    "label": 0
                }
            ]
        },
        "clip_60": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "But the other interesting thing is that even if you give me a different shape matching method, it can still benefit from this representation.",
                    "label": 0
                },
                {
                    "sent": "So what we did is we took the output of previous shape matching methods.",
                    "label": 0
                },
                {
                    "sent": "We converted their output, which is just a point to point correspondence into a functional correspondence, and then we just mapped it to the closest orthonormal matrix.",
                    "label": 0
                },
                {
                    "sent": "Because of this theorem that I had, and we did a few iterations of this.",
                    "label": 0
                },
                {
                    "sent": "And actually this improves the results of even.",
                    "label": 0
                },
                {
                    "sent": "Other methods which we treat as a black box.",
                    "label": 0
                },
                {
                    "sent": "So in a sense that we can do things in the function representation very easily and improve Maps, very efficiency.",
                    "label": 0
                },
                {
                    "sent": "Even if we don't know where these Maps come from.",
                    "label": 0
                },
                {
                    "sent": "So this shows basically the thin lines are the results that the old methods obtain using just their own standard techniques, and then the thick lines is what we get after this improvement in the functional space.",
                    "label": 0
                },
                {
                    "sent": "And again this improvement takes like 15 seconds per pair pair of shapes.",
                    "label": 0
                }
            ]
        },
        "clip_61": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So just as a small, I give a couple of applications and one of them is segmentation transfer.",
                    "label": 0
                },
                {
                    "sent": "So like I said earlier, one of the most useful properties of having a map is being able to transfer things between shapes and so note that we can of course recover the point to point map from a functional representation, but often we don't even need to do that.",
                    "label": 0
                },
                {
                    "sent": "So once we actually solved for the function representation, which is the matrix, we can use it directly to.",
                    "label": 0
                },
                {
                    "sent": "Achieve or do many of the tasks that we want.",
                    "label": 0
                },
                {
                    "sent": "So for example, if for this segment segmentation transfer I have this shape and I'm trying to end some segmentation on it and I'm trying to find the corresponding segmentation.",
                    "label": 0
                },
                {
                    "sent": "So what I do is for every segment for every part I define the indicator function and I look at the image of this indicator function under this map that I found and then for every point I just find OK which of the images gave me the highest value and that's my segmentation transfer.",
                    "label": 0
                },
                {
                    "sent": "So in this case, you know I'm always operating just with the functional representation, so I don't even convert to the point to point representation.",
                    "label": 0
                }
            ]
        },
        "clip_62": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Another interesting thing is that we can now treat collections of Maps using kind of standard linear algebra tools.",
                    "label": 0
                },
                {
                    "sent": "So here we show basically results where you take 10 different cats and Maps between them, so we have each, let's say each map is 80 by 80 matrix, so we put all of these matrices together into this one big matrix, which becomes 800 by 800 because we have 1010 pairs.",
                    "label": 0
                },
                {
                    "sent": "So we have 100 pairs of shapes and then.",
                    "label": 0
                },
                {
                    "sent": "For every pair defines a map, and the interesting thing here is that once you have this matrix, because you can do linear algebra operations on these matrices, you can just take powers of this matrix and rewrite map as a linear combination of other Maps and what it means is that suppose that I have most of my Maps between like shape zero and shape, and the other shapes are correct, but maybe one of them is slightly off, and once I do this iteration, I can actually get rid of bad Maps this way.",
                    "label": 0
                },
                {
                    "sent": "Very very simply by just taking powers of a medium size matrix.",
                    "label": 0
                }
            ]
        },
        "clip_63": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So this is 1.",
                    "label": 0
                }
            ]
        },
        "clip_64": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "An application where we get improvement by looking at collections and other things.",
                    "label": 0
                }
            ]
        },
        "clip_65": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Each.",
                    "label": 0
                },
                {
                    "sent": "I wanted to mention I don't know how interesting this might be for you, but one thing that's really like exciting for me is is actually doing map analysis.",
                    "label": 0
                },
                {
                    "sent": "So now we have this framework for treating correspondences like in their own right.",
                    "label": 0
                },
                {
                    "sent": "So you can say now correspondence isn't something kind of like funny like this map that is very difficult to analyze, but is really something tangible, which is a matrix, and so we use this for visualization and map analysis.",
                    "label": 0
                },
                {
                    "sent": "And the problem here is actually quite interesting.",
                    "label": 0
                },
                {
                    "sent": "So suppose that someone comes in and actually gives you the map, right?",
                    "label": 0
                },
                {
                    "sent": "So this is the inverse of the problem of shape matching, so I have two shapes Anna map.",
                    "label": 0
                },
                {
                    "sent": "So how do you show how you show this correspondence?",
                    "label": 0
                },
                {
                    "sent": "OK, this is just for visualization and the same thing actually happens in.",
                    "label": 0
                },
                {
                    "sent": "For example, if you have a pair of graphs or you have a dynamically evolving graph, how do you sort of show where things happen the most OK?",
                    "label": 0
                },
                {
                    "sent": "So there are two visualizations that exist in computer graphics.",
                    "label": 0
                },
                {
                    "sent": "I'm sure there are many more in other areas, but the two most fundamental visualizations, basically you have.",
                    "label": 0
                },
                {
                    "sent": "You know your shape on the left and you just connect the.",
                    "label": 0
                },
                {
                    "sent": "You know you take a point here and you find you just draw a line between the corresponding points.",
                    "label": 0
                },
                {
                    "sent": "Or like I said, you paint a function on the second shape and you take the preimage of that function under the map.",
                    "label": 0
                },
                {
                    "sent": "OK and the question is how do you pick a good function to show?",
                    "label": 0
                },
                {
                    "sent": "So when you look at the results of shape matching papers off and they just like showed kind of image like this and it sort of looks really really nice you know?",
                    "label": 0
                },
                {
                    "sent": "OK we have these perfect Maps.",
                    "label": 0
                },
                {
                    "sent": "But in reality, let me just kind of skip a little and show that basically we can recover the functions that are distorted the most OK.",
                    "label": 0
                },
                {
                    "sent": "So even though this map looks very very kind of nice, you can very quickly see that there is a part like on the nose that gets mapped to the neck and in order to do that all we do is.",
                    "label": 0
                }
            ]
        },
        "clip_66": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Basically, SVD decomposition of the functional representation of the map.",
                    "label": 0
                },
                {
                    "sent": "So we give we take a map.",
                    "label": 0
                },
                {
                    "sent": "We create this functional representation, we find it's singular value decomposition and then we look at the singular vectors corresponding to the largest singular values.",
                    "label": 0
                },
                {
                    "sent": "And you can basically show that because of Plancherel's theorem, the area.",
                    "label": 0
                },
                {
                    "sent": "So if, for example if you have an indicator function here, the ratio of the areas before and after the map is exactly.",
                    "label": 0
                },
                {
                    "sent": "The ratio of the L2 norm of the vector corresponding to the two functions, and that's why you can recover the functions that get distorted the most using just singular value decomposition.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_67": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So I'll skip the technical detail, so this is just some standard harmonic analysis stuff.",
                    "label": 0
                }
            ]
        },
        "clip_68": {
            "is_summarization_sample": false,
            "summarization_data": []
        },
        "clip_69": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_70": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So in conclusion, basically this you know what I was trying to show you is really a representation for Maps between shapes, and it's compact and it leads to very simple optimization problems when you're trying to do shape matching.",
                    "label": 0
                },
                {
                    "sent": "In particular, the most important aspect is that many constraints, like functional preservation constraints, become linear and because they are linear, you can recover the matrix using least square system.",
                    "label": 0
                },
                {
                    "sent": "And another interesting aspect is now map processing becomes kind of possible because you can understand Maps in their own right by looking at the different properties of the functional representation that they induce.",
                    "label": 1
                }
            ]
        },
        "clip_71": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And so I think there is really a lot of future work for this.",
                    "label": 0
                },
                {
                    "sent": "So first of all, like I said, you know, we just pick one of the basis functions that we were able to compute, But you can design better basis.",
                    "label": 0
                },
                {
                    "sent": "You know the question would be what is the best basis to represent a given map or a given collection of Maps?",
                    "label": 0
                },
                {
                    "sent": "Can you somehow do some machine learning to actually design A better basis given a few examples?",
                    "label": 0
                },
                {
                    "sent": "Another question that's very important is we.",
                    "label": 0
                },
                {
                    "sent": "Pick this set of constraints and we just throw them into a least square system, but often these are competing constraints and some of them are actually might lead to worse results and better results.",
                    "label": 0
                },
                {
                    "sent": "So learning better optimal combination of constraints, that thing is important and you can of course you don't have to stop it functions, you know we just use functions, but anything that you can define and shape that has a vector space structure would lead to the same roughly the same properties, so you know if you use higher order forms like vector.",
                    "label": 0
                },
                {
                    "sent": "Vector fields, or you know one forms.",
                    "label": 0
                },
                {
                    "sent": "Our K forms to define Maps.",
                    "label": 0
                },
                {
                    "sent": "You get the same sort of structure, but now it becomes quite different.",
                    "label": 0
                },
                {
                    "sent": "So how do you manipulate now?",
                    "label": 0
                },
                {
                    "sent": "It wouldn't be functional Maps, it would be vector field Maps or something like that and fundamental groups you know like homology bases also have a vector space structure, even though it's not over R, but still similar things presumably should should be possible.",
                    "label": 0
                },
                {
                    "sent": "Has better idea?",
                    "label": 0
                },
                {
                    "sent": "And finally, I think this general idea of map analysis and processing is very interesting, and what we can do there I think is quite quite open.",
                    "label": 0
                },
                {
                    "sent": "So analyzing and processing Maps using function representation is promising.",
                    "label": 0
                }
            ]
        },
        "clip_72": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Yeah, so that's it for my talk.",
                    "label": 0
                },
                {
                    "sent": "Thank the speaker.",
                    "label": 0
                },
                {
                    "sent": "So I have some questions.",
                    "label": 0
                },
                {
                    "sent": "OK, so everything you do is with the L2 norm, right?",
                    "label": 0
                },
                {
                    "sent": "Is there any particular reason other than ease of compute ability or you know, would an L1 norm make sense or an L Infinity norm give you different information?",
                    "label": 0
                },
                {
                    "sent": "Yeah, actually that's a good question.",
                    "label": 0
                },
                {
                    "sent": "So I guess L2 norm it.",
                    "label": 0
                },
                {
                    "sent": "Yeah, it's mostly for the ease of computation because you know, we know how to solve least squares systems an, but I guess that's like 18 to 19 century math.",
                    "label": 0
                },
                {
                    "sent": "So like we also know how to do L1 norm optimization, so it's not that significantly harder, so actually there is a follow up work of this.",
                    "label": 0
                },
                {
                    "sent": "This paper we presented Graph 2012 and now and your graphics 2013 someone else.",
                    "label": 0
                },
                {
                    "sent": "Basically took this and they did the optimization over L1 norm and the underlying motivation is that if you do, you can enforce sparsity this way, basically so they have no penalty for non sparse matrices and they show that you get a slight improvement and we saw this also in practice that you get a slight improvement if you try to enforce sparsity and do L1 norm optimization, but for us it wasn't worth really like all the hassle, but I mean it's actually it is better and.",
                    "label": 0
                },
                {
                    "sent": "So all your examples were also given on meshes and basically to manifolds.",
                    "label": 0
                },
                {
                    "sent": "Other than the problem of defining a suitable operator, does all the machine already go through?",
                    "label": 0
                },
                {
                    "sent": "If you have just something more general like a metric space?",
                    "label": 0
                },
                {
                    "sent": "Well, there is this work on defining yeah Laplace type operators on general metric spaces.",
                    "label": 0
                },
                {
                    "sent": "By smell and some other people smell and.",
                    "label": 0
                },
                {
                    "sent": "I think it's just smelling smell smell.",
                    "label": 0
                },
                {
                    "sent": "Yeah, yeah, so I don't know this very well, but as far as I understand that it basically has the same properties of the manifold structure.",
                    "label": 0
                },
                {
                    "sent": "So we actually don't use manifold structure ever anywhere.",
                    "label": 0
                },
                {
                    "sent": "As long as you can define an operator, you should be able to do everything that we do, but.",
                    "label": 0
                },
                {
                    "sent": "I guess things are a bit harder too.",
                    "label": 0
                },
                {
                    "sent": "You know manipulate, or at least I'm not.",
                    "label": 0
                },
                {
                    "sent": "I'm not familiar with this, very.",
                    "label": 0
                },
                {
                    "sent": "So Max is here until Friday, so if anyone has any questions will be around and let's thank the speaker again.",
                    "label": 0
                }
            ]
        }
    }
}