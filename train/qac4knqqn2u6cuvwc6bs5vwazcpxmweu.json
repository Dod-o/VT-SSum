{
    "id": "qac4knqqn2u6cuvwc6bs5vwazcpxmweu",
    "title": "Shark",
    "info": {
        "author": [
            "Tobias Glasmachers, Ruhr University Bochum"
        ],
        "published": "Dec. 20, 2008",
        "recorded": "December 2008",
        "category": [
            "Top->Computers->Programming"
        ]
    },
    "url": "http://videolectures.net/mloss08_glasmachers_shark/",
    "segmentation": [
        [
            "I tried.",
            "Lively"
        ],
        [
            "So first of all, I would give you a short introduction overview and then our counter model particular topic, which is maybe some interest for this audience which is supervised learning.",
            "This is from China.",
            "To be fair to all the other components we have in the lab, we I will give your overview of what else is now and then I will summarize."
        ],
        [
            "So.",
            "Am I talking about here?"
        ],
        [
            "Of course OK."
        ],
        [
            "Machine learning library and it is completely sequenced class, so this is C++ library.",
            "You should be able to familiarize superclass if you want to use this."
        ],
        [
            "It is more."
        ],
        [
            "And of course it is free online."
        ],
        [
            "I told you I was not awake.",
            "Oh yes.",
            "OK, can you hear me?",
            "So it is also very portable and what makes?"
        ],
        [
            "This library portable so first, of course, it runs on all major operating systems, but yes, OK, you can also get this running on nearly any other platform I can."
        ],
        [
            "And there are some reasons for this.",
            "First of all, this library is really about algorithms, so."
        ],
        [
            "We do not have in the 1st place.",
            "We do not have own graphical user interface in the library and that is one thing which makes porting much."
        ],
        [
            "Yeah.",
            "And Furthermore, this library is really self contained.",
            "So for example we have all this flexibel Airways like yes in touch.",
            "There seem to be very flexible Airways also, so arbitrary type, dimension, number of dimensions.",
            "We have a system independent random number generator, and of course all the linear algebra stuff you have at the basis of each and every machine learning library.",
            "And in fact the Shark lab we carries all the tool."
        ],
        [
            "It needs such that we have absolutely no dependencies on any other, maybe third party packages, and this, I think really makes the library very poor."
        ],
        [
            "Book.",
            "Furthermore, this ever growing and actively."
        ],
        [
            "It ain't it is very well documented, so here you have.",
            "You can have a look at its main documentation page, but there's a lot more by."
        ],
        [
            "Behind this we have more than 60 example programs which could, for examples of starting points for your own experiment."
        ],
        [
            "It's with the library and we have more than 20 tutorials ranging from simple stuff like OK, how to install the library under different operating systems over?",
            "Yeah, how to train your network support vector machine up to real application level scenarios like here on."
        ],
        [
            "Alright, OK, let me come to the supervised learning part."
        ],
        [
            "So you all know learning and it, particularly the slots for supervised learning.",
            "Learning is often closely related to optimization, so as soon as you have a learning problem and you really try to fix the components at a, break it down you more or less end up with the optimization prob."
        ],
        [
            "So how is this optimization problem translated to our software?",
            "And there we split it up into three components.",
            "First of all, we have a model which has this parameter vector here and it is able to process inputs and compute corresponding outputs of course.",
            "Depending on this parameter vector, so this may be a family of functions or OK. Models can also have internal state such that we have some functors or in types of learning.",
            "So this should usually be thought of the class of hypothesis we allow in our learning tasks.",
            "So then we have this our function which in terms of learning really is definition of our goal of learning, allows us to assess the quality of the model we have learned in the end.",
            "And this may correspond to a simple loss function or regular last loss function and you will see some more examples.",
            "Which is not so straightforward maybe.",
            "And then of course we have an optimizer which is a learning rule or optimization algorithm.",
            "Depends on your point of view."
        ],
        [
            "So I have a little bit closer look at what we have in the lobby.",
            "For example, we have we count your networks.",
            "We also have of course feedforward networks.",
            "Please come with arbitrary activation functions.",
            "You can define layers, define arbitrary connectivity between this layer, shortcut connections, whatever you like by us.",
            "Another important class of models we have in the library are Connor best models.",
            "For example, the corner function itself is a abstract superclass here, so you can.",
            "Easily supply your own favorite, maybe very specialized color from outside the library so you don't need to hack it into our code.",
            "And then what do we do with this kind of functions?",
            "The most popular models build out of kernels.",
            "Of course support vector machines and we have a whole zoo of support vector machines available, so we have the Senate binary machines for binary classification with L1 or L2 penalty on the slack variables.",
            "We have also for different methods for multiclass.",
            "Classification that we have methods for regression, the standard epsilon, insensitive loss or regularization networks and also a one class machine.",
            "And as you can see there this box with the dots.",
            "We have lots more models, so simple stuff, for example like linear functions, linear Maps or nearest neighborhoods or whatever you want.",
            "And a very interesting fact about models is that they can easily be combined to form more complex models out of.",
            "Simple components so you can use models, for example in parallel or built here.",
            "Hierarchical model of simple components such a typical network approach."
        ],
        [
            "For the hour, functions are just put two simple loss functions here mean squared error and 01 loss for standard regression and classification you will see much more advanced exam."
        ],
        [
            "It's on the next slide and for the optimizers we have some gradient based methods.",
            "PDF, JS for different variants of the app, prop algorithm, conjugate gradients, or even simple steepest decent.",
            "You can use this online batch version, stochastic versions of your life, but sometimes gradients are not available and then it's very convenient to have direct search methods also in the library.",
            "So I put here the covariance matrix adaptation evolution strategy.",
            "Which is very efficient for parameter search in real valued vector spaces and does not require gradients.",
            "So this is very nice to have.",
            "On the one hand, if you do not have gradients available and on the other hand, if you're just lazy and want rapid prototyping.",
            "So sometimes gradients are a little bit hard to implement and our prone computations, so this is simply nice to have.",
            "And then of course we have a special type of optimizer for support vector machine training, SVM optimizer which basically instantiates different quadratic program solvers depending on the type of support vector machine."
        ],
        [
            "I have chosen and all these quadratic program solvers are very fast and compatible to, for example, lip SVM."
        ],
        [
            "So, but really, one key thing about this architecture is that all the different models at our functions that optimizes I've shown you.",
            "In theory.",
            "Communicate only through this top level interface."
        ],
        [
            "And therefore we can apply any.",
            "Model together with any our function and our favorite optimizer to model our learning task.",
            "OK, this does not hold to 100%.",
            "You will not use a SPM optimizer to train in your network.",
            "This doesn't work obviously, but.",
            "In principle, this makes this framework where we flexible, and to convince you how flexible this really is.",
            "I will show you an example."
        ],
        [
            "Anna picked an example.",
            "Most of you probably now it's training a support vector machine."
        ],
        [
            "OK, first of all we need a model and this is a composite model in this case, so we have actual regular wise binary machine for classification.",
            "First of all we have here the kernel I've picked a radial basis function Gaussian kernel with a parameter gamma and then we have second hyperparameter.",
            "Here this C for regularization and of course we have the model this SVM model down here with its parameters Alpha and B to make the actual.",
            "Predictions?"
        ],
        [
            "And then it's rather standard.",
            "We use this SVM optimizer to train the model, which means we compute the parameters Alpha and B given gamma and see and then we may use the 01 loss to assess the quality of the resulting machine on an independent test.",
            "Said, well, OK, this procedure is rather standard and you know that it quality of the resulting classifier crucially depends on the right choice of these so called hyper parameters.",
            "So we wanted more or less.",
            "Automated way too far."
        ],
        [
            "This problem it has two and.",
            "For example we can use a cross validation error in this case and this cross validation error function more or less uses this.",
            "Model here with this permit, as small as this whole inner optimization loop as its model, and then we apply quit search.",
            "OK, let's assume it turns out that our kernel is not flexible enough and we may go for something else, like for example a Gaussian kernel with completely adaptive covariance matrix.",
            "Then of course, grid search doesn't scale and we want."
        ],
        [
            "Something more efficient?",
            "For example, we could then switch to gradient decent on the radius margin bound."
        ],
        [
            "Or if you're fan of the span bond, so Force band board.",
            "Gradients can be computed by.",
            "This is sometimes slow and sometimes numerically nontrivial, so we may go if you like for direct search method instead.",
            "So what you've seen here in principle."
        ],
        [
            "Is that we apply the same optimization framework coherently to different levels of inference, which means in this inner loop model training and then in this outer loop.",
            "William model selection.",
            "And at least for me, it's quite convincing.",
            "That this optimization framework is very flexible because it can do all these things."
        ],
        [
            "OK, let me show you what else we have in the lab we."
        ],
        [
            "Yes, it's much more than support vector machines.",
            "I already indicated that we have many more models.",
            "Our functions and optimizers, but we have also completely different stuff."
        ],
        [
            "So we have a module for evolutionary algorithms, and in particular we have very efficient so called evolution strategies in the library for real valued parameter search."
        ],
        [
            "We have very strong methods for multi objective optimization, so if you're interested, this is really.",
            "A place to go."
        ],
        [
            "For you and we have a fuzzy logic library and all these tools are very complete and powerful for themselves."
        ],
        [
            "So before I finish, I want to show you some pointers where can find shark on the web.",
            "So first of all shark is hosted at SourceForge.",
            "Yeah, shark Project SourceForge net there you can always download the most recent release version or have a look at the very complete online documentation."
        ],
        [
            "May be easier for most of you to remember is that shark is also linked at machine learning.",
            "Open source software org."
        ],
        [
            "And there was a recent paper by our work group entitled Shark, which also appeared in the Machine learning of software track of the Journal of Machine Learning Research.",
            "And this of course."
        ],
        [
            "Possible online.",
            "OK, let me come to the car."
        ],
        [
            "Notions which is made up by the question, which is possibly the most important one for most of you.",
            "What will you make shark differ?"
        ],
        [
            "And I want you to take Home 3."
        ],
        [
            "Messages.",
            "3 answers to this question.",
            "First of all, track is really platform independent cause it is completely self contained."
        ],
        [
            "Second, you will laugh.",
            "It's flexible design."
        ],
        [
            "And thought it is a very large library.",
            "It really covers multiple areas of machine learning, so it should be interesting for many."
        ],
        [
            "People.",
            "Thank you very much.",
            "Are there any questions?",
            "Covers lots of areas.",
            "Do you guys get into decision trees, random forests, bags back to boosted models?",
            "Mobile style stuff?",
            "No?",
            "I mean, this library is now nearly ten years old and we put all our research in it so we do not develop a machine learning library, including for example decision trees.",
            "We never needed them.",
            "So as soon as I will need decision trees or investigate them closer, I will put them in the library but.",
            "You're also free to contribute.",
            "I would be very happy if you add decision tree models.",
            "No problem, but we don't have them.",
            "I also have one question and supported user when when should I use your toolbox?",
            "This seems rather general question.",
            "When should I use your toolbox there if you want to do machine learning.",
            "So can you specify this a little bit closer?",
            "I mean like, I mean, in a way like if I if I want to train an SVM, I would use like I say just SVM package like this PM or whatever but now.",
            "It's unclear to me when exactly you would use your so, except it when you when I need to portability.",
            "To all these operating systems, yes, OK, so it should not be much harder to part lip as we enter into any system then then shack.",
            "OK you can always go forward as well.",
            "Two this is an alternative.",
            "So Shaq is not slower and OK, not much faster than lip as we am.",
            "It's just much wider.",
            "It's it's much broader focus.",
            "If you want to train as perfect machine, there are multiple possibilities and this is not the worst one.",
            "So I cannot convince you that we have the absolutely best support vector machine implementation in the world.",
            "But for example, if you want to have a multiclass classification, we have completely different methods than, yeah, you found an ellipse with them.",
            "I think there was a.",
            "One against one solution basically, and we have, for example, an implementation of methods West Watkins.",
            "We have OK some standard stuff.",
            "One against all.",
            "You can easily compare them all within the same framework, which is nice or their so recent method maybe not so recent anymore.",
            "Multiclass classification at the cost of a binary machine.",
            "Maybe these are really only in this lab.",
            "We and of course this library is of course focused on.",
            "The research in my work group, so if you want to apply our methods, they're all in the library.",
            "Maybe all your methods are not in there, but I would be happy if you contributed.",
            "Speaker.",
            "You should take it real time.",
            "Have you had a break so it's just so you can ask me into breaking?"
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I tried.",
                    "label": 0
                },
                {
                    "sent": "Lively",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So first of all, I would give you a short introduction overview and then our counter model particular topic, which is maybe some interest for this audience which is supervised learning.",
                    "label": 0
                },
                {
                    "sent": "This is from China.",
                    "label": 0
                },
                {
                    "sent": "To be fair to all the other components we have in the lab, we I will give your overview of what else is now and then I will summarize.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "Am I talking about here?",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Of course OK.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Machine learning library and it is completely sequenced class, so this is C++ library.",
                    "label": 0
                },
                {
                    "sent": "You should be able to familiarize superclass if you want to use this.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "It is more.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And of course it is free online.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I told you I was not awake.",
                    "label": 0
                },
                {
                    "sent": "Oh yes.",
                    "label": 0
                },
                {
                    "sent": "OK, can you hear me?",
                    "label": 0
                },
                {
                    "sent": "So it is also very portable and what makes?",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This library portable so first, of course, it runs on all major operating systems, but yes, OK, you can also get this running on nearly any other platform I can.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And there are some reasons for this.",
                    "label": 0
                },
                {
                    "sent": "First of all, this library is really about algorithms, so.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We do not have in the 1st place.",
                    "label": 0
                },
                {
                    "sent": "We do not have own graphical user interface in the library and that is one thing which makes porting much.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "And Furthermore, this library is really self contained.",
                    "label": 0
                },
                {
                    "sent": "So for example we have all this flexibel Airways like yes in touch.",
                    "label": 0
                },
                {
                    "sent": "There seem to be very flexible Airways also, so arbitrary type, dimension, number of dimensions.",
                    "label": 0
                },
                {
                    "sent": "We have a system independent random number generator, and of course all the linear algebra stuff you have at the basis of each and every machine learning library.",
                    "label": 1
                },
                {
                    "sent": "And in fact the Shark lab we carries all the tool.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "It needs such that we have absolutely no dependencies on any other, maybe third party packages, and this, I think really makes the library very poor.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Book.",
                    "label": 0
                },
                {
                    "sent": "Furthermore, this ever growing and actively.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "It ain't it is very well documented, so here you have.",
                    "label": 0
                },
                {
                    "sent": "You can have a look at its main documentation page, but there's a lot more by.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Behind this we have more than 60 example programs which could, for examples of starting points for your own experiment.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "It's with the library and we have more than 20 tutorials ranging from simple stuff like OK, how to install the library under different operating systems over?",
                    "label": 0
                },
                {
                    "sent": "Yeah, how to train your network support vector machine up to real application level scenarios like here on.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Alright, OK, let me come to the supervised learning part.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So you all know learning and it, particularly the slots for supervised learning.",
                    "label": 0
                },
                {
                    "sent": "Learning is often closely related to optimization, so as soon as you have a learning problem and you really try to fix the components at a, break it down you more or less end up with the optimization prob.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So how is this optimization problem translated to our software?",
                    "label": 0
                },
                {
                    "sent": "And there we split it up into three components.",
                    "label": 0
                },
                {
                    "sent": "First of all, we have a model which has this parameter vector here and it is able to process inputs and compute corresponding outputs of course.",
                    "label": 0
                },
                {
                    "sent": "Depending on this parameter vector, so this may be a family of functions or OK. Models can also have internal state such that we have some functors or in types of learning.",
                    "label": 0
                },
                {
                    "sent": "So this should usually be thought of the class of hypothesis we allow in our learning tasks.",
                    "label": 0
                },
                {
                    "sent": "So then we have this our function which in terms of learning really is definition of our goal of learning, allows us to assess the quality of the model we have learned in the end.",
                    "label": 0
                },
                {
                    "sent": "And this may correspond to a simple loss function or regular last loss function and you will see some more examples.",
                    "label": 0
                },
                {
                    "sent": "Which is not so straightforward maybe.",
                    "label": 0
                },
                {
                    "sent": "And then of course we have an optimizer which is a learning rule or optimization algorithm.",
                    "label": 0
                },
                {
                    "sent": "Depends on your point of view.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So I have a little bit closer look at what we have in the lobby.",
                    "label": 0
                },
                {
                    "sent": "For example, we have we count your networks.",
                    "label": 0
                },
                {
                    "sent": "We also have of course feedforward networks.",
                    "label": 0
                },
                {
                    "sent": "Please come with arbitrary activation functions.",
                    "label": 0
                },
                {
                    "sent": "You can define layers, define arbitrary connectivity between this layer, shortcut connections, whatever you like by us.",
                    "label": 0
                },
                {
                    "sent": "Another important class of models we have in the library are Connor best models.",
                    "label": 0
                },
                {
                    "sent": "For example, the corner function itself is a abstract superclass here, so you can.",
                    "label": 0
                },
                {
                    "sent": "Easily supply your own favorite, maybe very specialized color from outside the library so you don't need to hack it into our code.",
                    "label": 0
                },
                {
                    "sent": "And then what do we do with this kind of functions?",
                    "label": 0
                },
                {
                    "sent": "The most popular models build out of kernels.",
                    "label": 0
                },
                {
                    "sent": "Of course support vector machines and we have a whole zoo of support vector machines available, so we have the Senate binary machines for binary classification with L1 or L2 penalty on the slack variables.",
                    "label": 0
                },
                {
                    "sent": "We have also for different methods for multiclass.",
                    "label": 0
                },
                {
                    "sent": "Classification that we have methods for regression, the standard epsilon, insensitive loss or regularization networks and also a one class machine.",
                    "label": 0
                },
                {
                    "sent": "And as you can see there this box with the dots.",
                    "label": 0
                },
                {
                    "sent": "We have lots more models, so simple stuff, for example like linear functions, linear Maps or nearest neighborhoods or whatever you want.",
                    "label": 0
                },
                {
                    "sent": "And a very interesting fact about models is that they can easily be combined to form more complex models out of.",
                    "label": 0
                },
                {
                    "sent": "Simple components so you can use models, for example in parallel or built here.",
                    "label": 0
                },
                {
                    "sent": "Hierarchical model of simple components such a typical network approach.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "For the hour, functions are just put two simple loss functions here mean squared error and 01 loss for standard regression and classification you will see much more advanced exam.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "It's on the next slide and for the optimizers we have some gradient based methods.",
                    "label": 0
                },
                {
                    "sent": "PDF, JS for different variants of the app, prop algorithm, conjugate gradients, or even simple steepest decent.",
                    "label": 0
                },
                {
                    "sent": "You can use this online batch version, stochastic versions of your life, but sometimes gradients are not available and then it's very convenient to have direct search methods also in the library.",
                    "label": 0
                },
                {
                    "sent": "So I put here the covariance matrix adaptation evolution strategy.",
                    "label": 0
                },
                {
                    "sent": "Which is very efficient for parameter search in real valued vector spaces and does not require gradients.",
                    "label": 0
                },
                {
                    "sent": "So this is very nice to have.",
                    "label": 0
                },
                {
                    "sent": "On the one hand, if you do not have gradients available and on the other hand, if you're just lazy and want rapid prototyping.",
                    "label": 0
                },
                {
                    "sent": "So sometimes gradients are a little bit hard to implement and our prone computations, so this is simply nice to have.",
                    "label": 0
                },
                {
                    "sent": "And then of course we have a special type of optimizer for support vector machine training, SVM optimizer which basically instantiates different quadratic program solvers depending on the type of support vector machine.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I have chosen and all these quadratic program solvers are very fast and compatible to, for example, lip SVM.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So, but really, one key thing about this architecture is that all the different models at our functions that optimizes I've shown you.",
                    "label": 0
                },
                {
                    "sent": "In theory.",
                    "label": 0
                },
                {
                    "sent": "Communicate only through this top level interface.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And therefore we can apply any.",
                    "label": 1
                },
                {
                    "sent": "Model together with any our function and our favorite optimizer to model our learning task.",
                    "label": 0
                },
                {
                    "sent": "OK, this does not hold to 100%.",
                    "label": 0
                },
                {
                    "sent": "You will not use a SPM optimizer to train in your network.",
                    "label": 1
                },
                {
                    "sent": "This doesn't work obviously, but.",
                    "label": 0
                },
                {
                    "sent": "In principle, this makes this framework where we flexible, and to convince you how flexible this really is.",
                    "label": 0
                },
                {
                    "sent": "I will show you an example.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Anna picked an example.",
                    "label": 0
                },
                {
                    "sent": "Most of you probably now it's training a support vector machine.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, first of all we need a model and this is a composite model in this case, so we have actual regular wise binary machine for classification.",
                    "label": 0
                },
                {
                    "sent": "First of all we have here the kernel I've picked a radial basis function Gaussian kernel with a parameter gamma and then we have second hyperparameter.",
                    "label": 0
                },
                {
                    "sent": "Here this C for regularization and of course we have the model this SVM model down here with its parameters Alpha and B to make the actual.",
                    "label": 0
                },
                {
                    "sent": "Predictions?",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And then it's rather standard.",
                    "label": 0
                },
                {
                    "sent": "We use this SVM optimizer to train the model, which means we compute the parameters Alpha and B given gamma and see and then we may use the 01 loss to assess the quality of the resulting machine on an independent test.",
                    "label": 0
                },
                {
                    "sent": "Said, well, OK, this procedure is rather standard and you know that it quality of the resulting classifier crucially depends on the right choice of these so called hyper parameters.",
                    "label": 0
                },
                {
                    "sent": "So we wanted more or less.",
                    "label": 0
                },
                {
                    "sent": "Automated way too far.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This problem it has two and.",
                    "label": 0
                },
                {
                    "sent": "For example we can use a cross validation error in this case and this cross validation error function more or less uses this.",
                    "label": 0
                },
                {
                    "sent": "Model here with this permit, as small as this whole inner optimization loop as its model, and then we apply quit search.",
                    "label": 0
                },
                {
                    "sent": "OK, let's assume it turns out that our kernel is not flexible enough and we may go for something else, like for example a Gaussian kernel with completely adaptive covariance matrix.",
                    "label": 0
                },
                {
                    "sent": "Then of course, grid search doesn't scale and we want.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Something more efficient?",
                    "label": 0
                },
                {
                    "sent": "For example, we could then switch to gradient decent on the radius margin bound.",
                    "label": 0
                }
            ]
        },
        "clip_31": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Or if you're fan of the span bond, so Force band board.",
                    "label": 0
                },
                {
                    "sent": "Gradients can be computed by.",
                    "label": 0
                },
                {
                    "sent": "This is sometimes slow and sometimes numerically nontrivial, so we may go if you like for direct search method instead.",
                    "label": 0
                },
                {
                    "sent": "So what you've seen here in principle.",
                    "label": 0
                }
            ]
        },
        "clip_32": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Is that we apply the same optimization framework coherently to different levels of inference, which means in this inner loop model training and then in this outer loop.",
                    "label": 1
                },
                {
                    "sent": "William model selection.",
                    "label": 0
                },
                {
                    "sent": "And at least for me, it's quite convincing.",
                    "label": 0
                },
                {
                    "sent": "That this optimization framework is very flexible because it can do all these things.",
                    "label": 0
                }
            ]
        },
        "clip_33": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, let me show you what else we have in the lab we.",
                    "label": 0
                }
            ]
        },
        "clip_34": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Yes, it's much more than support vector machines.",
                    "label": 0
                },
                {
                    "sent": "I already indicated that we have many more models.",
                    "label": 1
                },
                {
                    "sent": "Our functions and optimizers, but we have also completely different stuff.",
                    "label": 0
                }
            ]
        },
        "clip_35": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So we have a module for evolutionary algorithms, and in particular we have very efficient so called evolution strategies in the library for real valued parameter search.",
                    "label": 0
                }
            ]
        },
        "clip_36": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We have very strong methods for multi objective optimization, so if you're interested, this is really.",
                    "label": 0
                },
                {
                    "sent": "A place to go.",
                    "label": 0
                }
            ]
        },
        "clip_37": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "For you and we have a fuzzy logic library and all these tools are very complete and powerful for themselves.",
                    "label": 0
                }
            ]
        },
        "clip_38": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So before I finish, I want to show you some pointers where can find shark on the web.",
                    "label": 1
                },
                {
                    "sent": "So first of all shark is hosted at SourceForge.",
                    "label": 0
                },
                {
                    "sent": "Yeah, shark Project SourceForge net there you can always download the most recent release version or have a look at the very complete online documentation.",
                    "label": 1
                }
            ]
        },
        "clip_39": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "May be easier for most of you to remember is that shark is also linked at machine learning.",
                    "label": 0
                },
                {
                    "sent": "Open source software org.",
                    "label": 0
                }
            ]
        },
        "clip_40": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And there was a recent paper by our work group entitled Shark, which also appeared in the Machine learning of software track of the Journal of Machine Learning Research.",
                    "label": 0
                },
                {
                    "sent": "And this of course.",
                    "label": 0
                }
            ]
        },
        "clip_41": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Possible online.",
                    "label": 0
                },
                {
                    "sent": "OK, let me come to the car.",
                    "label": 0
                }
            ]
        },
        "clip_42": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Notions which is made up by the question, which is possibly the most important one for most of you.",
                    "label": 0
                },
                {
                    "sent": "What will you make shark differ?",
                    "label": 0
                }
            ]
        },
        "clip_43": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And I want you to take Home 3.",
                    "label": 0
                }
            ]
        },
        "clip_44": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Messages.",
                    "label": 0
                },
                {
                    "sent": "3 answers to this question.",
                    "label": 0
                },
                {
                    "sent": "First of all, track is really platform independent cause it is completely self contained.",
                    "label": 0
                }
            ]
        },
        "clip_45": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Second, you will laugh.",
                    "label": 0
                },
                {
                    "sent": "It's flexible design.",
                    "label": 0
                }
            ]
        },
        "clip_46": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And thought it is a very large library.",
                    "label": 0
                },
                {
                    "sent": "It really covers multiple areas of machine learning, so it should be interesting for many.",
                    "label": 0
                }
            ]
        },
        "clip_47": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "People.",
                    "label": 0
                },
                {
                    "sent": "Thank you very much.",
                    "label": 0
                },
                {
                    "sent": "Are there any questions?",
                    "label": 0
                },
                {
                    "sent": "Covers lots of areas.",
                    "label": 0
                },
                {
                    "sent": "Do you guys get into decision trees, random forests, bags back to boosted models?",
                    "label": 0
                },
                {
                    "sent": "Mobile style stuff?",
                    "label": 0
                },
                {
                    "sent": "No?",
                    "label": 0
                },
                {
                    "sent": "I mean, this library is now nearly ten years old and we put all our research in it so we do not develop a machine learning library, including for example decision trees.",
                    "label": 1
                },
                {
                    "sent": "We never needed them.",
                    "label": 0
                },
                {
                    "sent": "So as soon as I will need decision trees or investigate them closer, I will put them in the library but.",
                    "label": 0
                },
                {
                    "sent": "You're also free to contribute.",
                    "label": 0
                },
                {
                    "sent": "I would be very happy if you add decision tree models.",
                    "label": 0
                },
                {
                    "sent": "No problem, but we don't have them.",
                    "label": 0
                },
                {
                    "sent": "I also have one question and supported user when when should I use your toolbox?",
                    "label": 0
                },
                {
                    "sent": "This seems rather general question.",
                    "label": 0
                },
                {
                    "sent": "When should I use your toolbox there if you want to do machine learning.",
                    "label": 0
                },
                {
                    "sent": "So can you specify this a little bit closer?",
                    "label": 0
                },
                {
                    "sent": "I mean like, I mean, in a way like if I if I want to train an SVM, I would use like I say just SVM package like this PM or whatever but now.",
                    "label": 0
                },
                {
                    "sent": "It's unclear to me when exactly you would use your so, except it when you when I need to portability.",
                    "label": 0
                },
                {
                    "sent": "To all these operating systems, yes, OK, so it should not be much harder to part lip as we enter into any system then then shack.",
                    "label": 0
                },
                {
                    "sent": "OK you can always go forward as well.",
                    "label": 0
                },
                {
                    "sent": "Two this is an alternative.",
                    "label": 0
                },
                {
                    "sent": "So Shaq is not slower and OK, not much faster than lip as we am.",
                    "label": 0
                },
                {
                    "sent": "It's just much wider.",
                    "label": 0
                },
                {
                    "sent": "It's it's much broader focus.",
                    "label": 0
                },
                {
                    "sent": "If you want to train as perfect machine, there are multiple possibilities and this is not the worst one.",
                    "label": 0
                },
                {
                    "sent": "So I cannot convince you that we have the absolutely best support vector machine implementation in the world.",
                    "label": 0
                },
                {
                    "sent": "But for example, if you want to have a multiclass classification, we have completely different methods than, yeah, you found an ellipse with them.",
                    "label": 0
                },
                {
                    "sent": "I think there was a.",
                    "label": 0
                },
                {
                    "sent": "One against one solution basically, and we have, for example, an implementation of methods West Watkins.",
                    "label": 0
                },
                {
                    "sent": "We have OK some standard stuff.",
                    "label": 0
                },
                {
                    "sent": "One against all.",
                    "label": 0
                },
                {
                    "sent": "You can easily compare them all within the same framework, which is nice or their so recent method maybe not so recent anymore.",
                    "label": 0
                },
                {
                    "sent": "Multiclass classification at the cost of a binary machine.",
                    "label": 0
                },
                {
                    "sent": "Maybe these are really only in this lab.",
                    "label": 0
                },
                {
                    "sent": "We and of course this library is of course focused on.",
                    "label": 0
                },
                {
                    "sent": "The research in my work group, so if you want to apply our methods, they're all in the library.",
                    "label": 0
                },
                {
                    "sent": "Maybe all your methods are not in there, but I would be happy if you contributed.",
                    "label": 0
                },
                {
                    "sent": "Speaker.",
                    "label": 0
                },
                {
                    "sent": "You should take it real time.",
                    "label": 0
                },
                {
                    "sent": "Have you had a break so it's just so you can ask me into breaking?",
                    "label": 0
                }
            ]
        }
    }
}