{
    "id": "m7ab5jxyctahwaocqgkioctqymjis5d2",
    "title": "P2P Video Networking with Social Media Applications",
    "info": {
        "author": [
            "A. Murat Tekalp, Ko\u00e7 University"
        ],
        "published": "July 18, 2011",
        "recorded": "July 2011",
        "category": [
            "Top->Technology",
            "Top->Computer Science->Social Media"
        ]
    },
    "url": "http://videolectures.net/s3mr2011_tekalp_media/",
    "segmentation": [
        [
            "Yeah, today I'm going to talk on peer to peer video."
        ],
        [
            "And the content of my talk is briefly described here.",
            "I'm going to start with a short introduction to streaming the terminology and the types of streaming systems and then briefly talk about server clients streaming, which is the basically precursor to peer to peer streaming.",
            "And then we're going to talk again briefly about quality of experience in streaming systems an if I have time at the end, I'll talk about 3D.",
            "Video systems and 3D video streaming."
        ],
        [
            "OK, so let's start with an introduction."
        ],
        [
            "To video streaming, and before I go into technical details, I just want to put this into historical perspective.",
            "I went to United States in 1980 for my PhD to do my PhD.",
            "And at that time there was no Internet.",
            "There was no personal computers.",
            "We had IBM mainframe in the University and some terminals.",
            "And if you want to send somebody something like.",
            "Email that didn't exist, of course, since there is no Internet, you put it in a magnetic tape big wheel and put it in the US Mail service.",
            "That's the way to send somebody something.",
            "And if you want to record video, there were analog VHS recorders.",
            "And if you want to watch some video, you go to the blockbusters and rent.",
            "Basically VHS tape that was the state of the art.",
            "So in about 30 years since 1980, today there was a big digital media revolution and peer to peer systems.",
            "And 3D visit the video are the latest developments in this digital media revolution.",
            "And actually I also remember in 1988 when the first idea about digital television broadcasts was proposed, many people opposed it, saying that it was impossible to compress video into a single analog TV channel bandwidth.",
            "Which basically could carry about 20 mbits at that time, so.",
            "That really seen large resistance.",
            "The idea of digital television and of course in about four years in 90 two MPEG two was developed and that was the start of the digital media revolution, actually.",
            "Anyway, with that introduction."
        ],
        [
            "Let's move to the definitions.",
            "Well, first there are probably many definitions for streaming, but my definition is if you start playback before completing the download of a media file that is called streaming.",
            "And.",
            "There are.",
            "Couple of modes basically that we can.",
            "Discuss streaming under the most common approach is video on demand streaming.",
            "That is, the content exists somewhere in its entirety in a server, and you want to receive this.",
            "Again, as I said, start playback before completing the whole media file in your own system, completing the download of the whole media file in your system.",
            "There's also real time streaming, which is basically.",
            "Synchronize with some.",
            "In some fashion, so people watch the same content at the same time.",
            "This is the case for web, TV or IPTV systems.",
            "This can happen with live encoding for live events or.",
            "Pre encoding of basically pre captured material but you can still do this and I think on ice fashion.",
            "As in the TV program streaming example and then finally there is the interactive streaming where this is like a video telephone application.",
            "Are there is interaction and so you need to have a live encoder on both sides and you have strict basically delay requirements in the interactive system such as 150 milliseconds or so.",
            "So depending on the requirements of the streaming application, there are different streaming technologies we can consider when we discuss different technologies will basically look at in which context they can be used.",
            "But as I said, there is the video on demand application real time streaming application, an interactive communications streaming application."
        ],
        [
            "OK, the usual way of streaming is server client or client server, basically streaming architecture.",
            "And this can be point to point unicast.",
            "Are point to multipoint multicast?"
        ],
        [
            "So let's look at this unit cast.",
            "Streaming scenario point to point unicast streaming scenario in a point to point unicast streaming scenario, there is a sender and there is a receiver.",
            "And the sender sends packets.",
            "To the receiver over.",
            "Set of links and there is other traffic that may interfere with this streaming app."
        ],
        [
            "Location.",
            "In a multicast scenario, there is a single sender and multiple receivers.",
            "And basically the sender sends a single stream.",
            "Up to a certain point from where basically stream is split into different receivers.",
            "This is the typical multicast scenario.",
            "Now if you go."
        ],
        [
            "Back obviously the single server.",
            "Put pressure on the the single server.",
            "Streaming scenario puts pressure on the server.",
            "There is a certain number of clients.",
            "Not that server can handle it a given time.",
            "So people come up with architectures too.",
            "Circumvent this problem and the.",
            "Most common approach is the CDN or the content distribution network.",
            "Architecture where we have high quality servers at the edges of the network where you first push the content to these CDN nodes and then people request the service from the nearest CDN node.",
            "So that's basically a solution to basically bypass the server.",
            "Congestion problem, but it's an expensive solution.",
            "Because you have to.",
            "Basically, deploy and maintain these CDN nodes.",
            "At the edges of the network.",
            "Mark reasonable or maybe a low cost solution is peer to peer streaming and that is the most recent trend.",
            "Basically in streaming peer to peer streaming.",
            "And here if there are actually 2.",
            "Topologies or architectures one is 3 based.",
            "Peer to peer streaming and the other is mesh based.",
            "Peer to peer streaming.",
            "Actually it's free based peer to peer."
        ],
        [
            "Is kind of an evolution of multi."
        ],
        [
            "Best.",
            "And here basically, if you look at the three based peer to peer.",
            "Architecture.",
            "There is a single sender.",
            "Is there a pointer that I can use?",
            "OK problem, maybe not.",
            "There is a single sender which is indicated as S and then we develop or design some tree structure.",
            "Indicate how the content should be moved from the sender to different clients in the system.",
            "And design a single tree.",
            "Or you can design multiple trees.",
            "Obviously the multiple tree gives you the multiple trees.",
            "Architecture gives you more flexibility, and basically there must be a supernode.",
            "That overseas that designs and overseas and maintains this tree structure and some people call this app tracker which tracks the state of of the.",
            "Peer to peer streaming.",
            "And.",
            "Here in this example we have two trees.",
            "One is shown in red, the other is shown in blue.",
            "Thank you for the OK. Alright.",
            "So basically the content here on the red tree goes to P1.",
            "And then P2 an.",
            "P5.",
            "And P6 and P7 an.",
            "Also, 2P3P4 M P8, so that's the structure of the red Three, an alternately, the blue tree is provides alternate routes on the distribution of the content, and one of the advantages of multiple freezes if a node.",
            "Leaves unexpectedly then.",
            "The child or the children of that node does not die.",
            "Necessarily because they may receive content from the alternate tree.",
            "For example, if you look at.",
            "This P2.",
            "P2 receives content directly from.",
            "The.",
            "Sender An alternately receives content on the red tree from P1.",
            "So if P1 all of a sudden disappears, then P2 still receives content on the Blue Tree an somehow this content is forwarded to P6MP5.",
            "So P5 still survives when P1 unexpectedly leaves the distribution network.",
            "So multiple trees somehow provide.",
            "Redundancy but also assurance that the service is reliable even if one or two peers unexpectedly leave the distribution.",
            "Application actually there's a nice paper on this.",
            "This was published in Packet Video in 2007 by Burn O An.",
            "We Thomas Vegan Tan sure others.",
            "Basically that discussed this application of multiple multicast trees on for three days.",
            "Peer to peer streaming.",
            "By the way, if you have any questions feel free to interrupt and we can have some discussion."
        ],
        [
            "So.",
            "The other scenario.",
            "Is the more common.",
            "Fully known scenario for peer to peer streaming is the mesh base peer to peer streaming architectures.",
            "This is actually an animation I've copied from the Internet that describes how the BitTorrent works in the mesh base.",
            "Peer to peer streaming systems.",
            "There is.",
            "Not self organized tree structure, but there are basically random connections between any peers at anytime.",
            "And again, this results in redundancy, but also assurance that the system is going to be reliable if one or more peers leave the network unexpectedly in the.",
            "Match please.",
            "Structure."
        ],
        [
            "About going back to the tree based structure in the tree based structure, you push the packets in sequence.",
            "So basically the sender pushes the packets in sequence typically, and this is more like a.",
            "Common streaming scenario sender or server driven stream."
        ],
        [
            "Scenario in the mesh base architecture, the transmission of packets are not necessarily sequence and you actually divide.",
            "This is the server.",
            "And you divide the content into chunks.",
            "Each color represents a different chunk.",
            "And then basically the server pushes the chunks to a couple of these peers.",
            "And it pushes different chunks to different pairs.",
            "So for example the.",
            "Brown chunks are pushed to couple of peers here, and the yellow chunks are pushed to a couple of another appears and the green chunks yet are pushed to some other players and then the peers start exchanging these chunks among themselves and eventually at some point everybody has all the chunks.",
            "That's the architecture of a mesh base.",
            "Peer to peer system.",
            "So here the.",
            "Content is divided into chunks and the chunks are traveling.",
            "From server to some peers and then our exchange between all the peers and some random order.",
            "Well, in streaming applications this is of course the torrent architecture was first invented for file exchange and not for streaming applications.",
            "In streaming.",
            "There must be some time, order, time, sequence order.",
            "So basically the peers have some buffer, but if you do this in totally random order then there is basically too much delay until appear receives the.",
            "Necessary chunk, so you have to prioritize the chunk exchange.",
            "Also taking into account time requirements of a chunk.",
            "So there are different policies developed for basically.",
            "Prioritizing the chunk exchange between the peers so the original torrent architecture.",
            "Apple employs the reddest first principle, which doesn't really have any time.",
            "Basically dimension, but then later systems developed on this architecture for streaming applications, have invented different policies which emphasize the importance of time in exchanging of these packets in a timely fashion.",
            "There are also hybrid architectures which are combination of three and mesh.",
            "So there are some systems developed which employ neither mesh nor tree structures but hybrid.",
            "Three and mesh structures more actually recent approaches are in that direction using a combination of.",
            "Tryan mesh architecture."
        ],
        [
            "OK, now this is a different classification of streaming applications.",
            "We looked at server, client and peer to peer architectures and as I said a different classification.",
            "And here I classify streaming applications as push model streaming versus pool models streaming.",
            "And the difference is basically.",
            "Is on where the intelligence is?",
            "In a push model, the intelligence is at the server.",
            "This is the basically chotank old older approach.",
            "An example of this is the apples Darwin streaming server, for example.",
            "Basically, the push model streaming server.",
            "Makes all the decisions itself on length of send, how many packets to which client.",
            "So the clients just basically request service.",
            "From the server and that's it.",
            "Then all the decisions are made by the server on which packets will be pushed to which client at what time, and so forth.",
            "Opposite is the pool model where the intelligence resides at the client or the receiver.",
            "In this case, a good example is the HTTP streaming scenario in the HTTP streaming scenario, the client.",
            "Issues.",
            "Get comments and requests.",
            "The Hall or the piece of the file of called again chunk from the streaming server.",
            "So basically in the pool model scenario, the client decides.",
            "Which packets to request.",
            "And at what rate?",
            "From the streaming server?",
            "The server here just basically stores.",
            "Chunks of media.",
            "And does not do anything but to respond to the requests.",
            "So intelligence is at the client.",
            "And the pool ways model so we can actually have both.",
            "Client, server and peer to peers.",
            "Under each scheme, so you can have a pool based.",
            "Client server, streaming application or a pool based peer to peer application as well as you can have a push based client server and push based peer to peer application.",
            "So as I said, this is a different dimension of categorization of streaming applications."
        ],
        [
            "Now, when it comes to actual media transfer between the peers or between the server and the peers.",
            "There is this usual stack of protocols, so let's look at the stack of protocols.",
            "The physical layer at the bottom.",
            "Is the actual?",
            "Medium or the wired or wireless, basically where the.",
            "Transmission occurs, an examples are basically.",
            "Wireless or copper wire or fiber or whatever, and then we have a protocol that runs.",
            "On top of the physical layer and manage is the transfer of bits.",
            "And if you are on the DSL line.",
            "Or in a cable system.",
            "This is the US cable system DOCSIS protocol.",
            "Or Wi-Fi or Wimax.",
            "Whatever that basically governance.",
            "Have the packet search or actual bits are transmitted over the physical.",
            "Layer and then on top of this there is the IP protocol.",
            "Which basically.",
            "Farms IP packets.",
            "And on top of the IP there is this transport control layer.",
            "The typical Internet runs with TCP, but then there is UDP and ECP that are developed for media.",
            "Applications.",
            "Which governs the.",
            "Basically, transport control.",
            "Layer and on top of this there is a session streaming session.",
            "This streaming session can be STP control.",
            "Session control can be HTTP or RTSP or SIP.",
            "An RTP so these are basically.",
            "The white layers here are invisible to the application they are in the physical communication layer and usually the transport and IPR and operating system.",
            "So you don't really see these in your application, so the TCP, UDP and IP are varied in the operating system.",
            "And these are in the communication layer and these three are at the application which you basically control.",
            "And what are they about?",
            "Basically there's RTP, which I will say briefly what it is and then codecs and on at the very top.",
            "That's the application.",
            "Whatever application software that you're running.",
            "So that's the basically.",
            "Stacking of the protocols that govern streaming application.",
            "Your streaming application is at the top.",
            "And it runs some codecs.",
            "And then there's session control and RTP, which are at the application layer.",
            "The rest are in the operating system and physical communication channel."
        ],
        [
            "And this is yet another.",
            "A diagram to show the same thing.",
            "For example, if you are doing.",
            "HTTP streaming you're running HTTP over TCP over IP.",
            "So an HTTP streaming system runs HTTP at the application layer which runs on top of TCP.",
            "An over IP.",
            "And for example, that Darwin streaming server.",
            "Old fashioned approach runs RTP at the application layer and RTP is run on top of UDP.",
            "And you DPS over IP.",
            "So basically RTP UDP IP is 1 approach HTTP, TCP IP is another approach and which path you choose.",
            "Is going to affect how you design and evaluate your streaming application.",
            "And the main reason for this.",
            "Well, this is basically saying that the OS provides the.",
            "Blue layer and the bottom.",
            "And the transport address is an IP address and port number.",
            "That's how you address the operating system, so the operating system provides report number such as a UDP port or a TCP port."
        ],
        [
            "OK, now which transport protocol you use is going to affect how you design and evaluate your streaming application.",
            "Be cause, for example, UDP is an unreliable protocol, meaning that the packets are not guaranteed to deliver it.",
            "And there is no acknowledgement of whether a packet is delivered or not.",
            "So in a UDP.",
            "Streaming application packets may last may get lost.",
            "And your basically streaming application must take some measures to deal with.",
            "Packet loss or delivery impairments.",
            "On the contrary, the TCP.",
            "Basically guarantees delivery of packets by retransmissions of unreceived packets, and there's a acknowledgement mechanism.",
            "Which acknowledges received.",
            "Of all packets.",
            "But there is no guarantee on time with delivery, so it delivers the packet sometime but not necessary along time.",
            "So if you're using HTTP over TCP.",
            "You can deal with this.",
            "Are not timely packets in two ways.",
            "You can freeze the playback until the packet arrives.",
            "Or you can basically consider these not timely deliver packets as loss packets, as in the case of UDP.",
            "So this is.",
            "Something decision your streaming application has to make when a packet is not delivered on time in TCP, are you going to freeze the display and wait?",
            "Or are you just going to skip that packet and continue with the next packet if it is delivered?",
            "So this is basically.",
            "This requires an understanding of the protocols so that you can deal with evaluation of your streaming application.",
            "Accordingly, and then there's the CCP, which is a hybrid of UDP and TCP that was delivered, or that was basically designed for streaming media applications.",
            "It's not deployed with commonly exists in the Linux kernel, but it doesn't appear in the Microsoft operating system.",
            "So if you're using a Linux kernel, you can actually employ DCP, which is UDP plus rate control.",
            "Now another thing about another difference between TCP and UDP is that UDP doesn't employ any rate control, so you can flood the network with UDP packets.",
            "Whereas TCP employees rate control.",
            "Basically, if a packet is lossed or not delivered on time in TCP, TCP immediately cuts your transmission rate by half.",
            "So basically this is not good for video streaming unnecessarily, because if you're streaming video, let's say at one megabit per second and single packet is.",
            "They were late.",
            "The TCP immediately cuts your transmission rate by half, so you're now reduced to 500 kilobits instead of a megabit.",
            "An increase back is linear, whereas the decrease in TCP rate is.",
            "Basically by half so every time a packet is delayed, your TCP rate is cut by half and then TCP allows you to increase to the previous straight.",
            "In the edited version and slow fashion basically.",
            "So it generates.",
            "Really, some.",
            "Sudden changes in video quality.",
            "If you're using TCP.",
            "And if I don't get this.",
            "Relevant light, so if you're using TCP for example for your streaming application, you should really make sure that you're using the network under capacity so that you basically minimize the probability of a late packet so you don't get unnecessary, basically.",
            "Penalty in your transmission rates by the TCP itself, so the CCP is in between these two extremes, whereas basically here is a drastic rate control and there is no rate control.",
            "So this CP employs UDP with some rate control.",
            "But this is more friendly rate control than the TCP rate control."
        ],
        [
            "So the DCP uses the TCP friendly rate control.",
            "And this means there is a formula that just DCP transmission rate.",
            "In case of a packet loss.",
            "Love.",
            "In a more friendly fashion, basically rather than divided by two type rate control.",
            "Now another important difference between."
        ],
        [
            "Different protocols is.",
            "UDP.",
            "Does not use any connections, so.",
            "Each packet can be delivered.",
            "From a different route in theory.",
            "Well, as TCP is sort of, quote unquote, connection oriented protocol.",
            "And.",
            "Therefore it is.",
            "Easier to actually monitor TCP traffic on the network.",
            "And as a result of this firewalls.",
            "Usually don't allow.",
            "UDP traffic because they cannot really recognize and monitor UDP traffic, so TCP is used in most scenarios because it can go through firewalls, whereas UDP cannot.",
            "So if you're going to stream over UDP port, you have to make sure that the receiver allows traffic to be received on that UDP port.",
            "DCP is also."
        ],
        [
            "Connection oriented.",
            "So it is also friendly, but.",
            "Network address translation and firewalls.",
            "But again, at the moment it only comes with the Linux kernels, and it's not why the diploid, so maybe?",
            "In the future it may be, but currently you're still mostly limited by TCP and UDP.",
            "For streaming applications.",
            "Any questions so far?"
        ],
        [
            "Well then another important component of this is video coding.",
            "Because we are transmitting encoded data and how you encode your video.",
            "Also affects the streaming.",
            "Applications and streaming.",
            "Scenarios.",
            "The current.",
            "Approach or standards for video coding is H264 MPEG four AVC an it's being upgraded to high efficiency video coding.",
            "An alternative approach is scalable video coding.",
            "And there is an MPEG SVC standard which is an extension of 264 and AVC, basically an finally there."
        ],
        [
            "3D video coding.",
            "Let's say a few words about MPEG 4.",
            "MPEG Four was designed to be twice more efficient than MPEG 2.",
            "I need employees new tools such as hierarchical be prediction and intra prediction and better motion compensation as well as others.",
            "I'm not going to.",
            "I'm not going to go into details, but what matters is what is the?",
            "Coding rates.",
            "Of different video.",
            "Basically types with AVC or H264.",
            "Well typically standard definition video is coded at.",
            "Good quality.",
            "Between 2 to 4 megabits per second and HD video is encoded in good quality between 5 to 10 megabits per second.",
            "This depends on the content, of course.",
            "If it's sports video, it requires more betsan.",
            "If it's slow varying romantic video then it requires less bandwidth.",
            "So when you actually transmit HD video, you have to allocate this much of bandwidth to the application, otherwise you're going to run into trouble.",
            "Or you're going to use a lower resolution video basically.",
            "And actually, I should also say if you use scalable video, the scalable video, it comes in two layers that base layer and announcement layer and then you can choose the base layers at the available bandwidth to your application and so forth.",
            "I'll say a few more things about that.",
            "That open source software for real time encoding and decoding of H264 or typical laptop and you can download these software freely.",
            "Basically, X 264 is the encoder and FF MPEG employees FF MPEG package basically employs it 264 decoders."
        ],
        [
            "OK, now HEBC.",
            "Is the current impact project to rush probably knows more about this and its design?",
            "Principle is to be twice more efficient than.",
            "MPEG Four AVC or 264.",
            "It is still blocked the city waste.",
            "It employs newer tools such as adaptive interpolation, filtering and variable size.",
            "Motion compensation, as well as.",
            "Many other tools.",
            "And when completed it is advertised to be twice more efficient as the current age to 64.",
            "So if you go by that."
        ],
        [
            "We can say that it will cut the bitrates here.",
            "By half if it is successfully."
        ],
        [
            "Finished.",
            "And the reference software is under development.",
            "For the HVC standards."
        ],
        [
            "OK, now just a few words about scalable video coding.",
            "And the scalable.",
            "Video is encoded in layers.",
            "One or more actually two or more layers, one base layer.",
            "This is the must have component of the video and you can set the bitrate for the base layer.",
            "Depending on your application.",
            "So if you have a one megabit.",
            "Let's say connection.",
            "You can set the base layer.",
            "At that layer at that level, and for people having higher bandwidth connections, they can receive the base layer plus enhancement layers and the people having the backbone available and basically connection will receive only the base layer.",
            "That's the idea.",
            "And you can do special.",
            "Scalability, temporal scalability or quality SNR scalability.",
            "Basically.",
            "Most people use as in our scalability because that's the easiest.",
            "Implement and has less scalable to penalty.",
            "Special scalability has some penalty.",
            "Basically, about 10 to 15% penalty, whereas SNR scalability has very little penalty for having a scalable bitstream.",
            "Now the main problem with SVC is that although there is a real time decoder open SVC decoder.",
            "The encoder is the reference encoder is very slow.",
            "And you cannot do real time encoding using the reference encoder an.",
            "I don't think there are any open source openly available real time encoders for SVC at the moment.",
            "So basically these are the approaches for video coding.",
            "You will decide whether to encode your video, scalable or not, and then design your streaming application accord."
        ],
        [
            "Ugly.",
            "This is an example of SVC configuration.",
            "This is just a hypothetical example.",
            "The bitstream is designed in 11 layers.",
            "The zero layer is the base layer.",
            "And the mid trades here are just basically for the sake of.",
            "The example not typical of streaming application this these are very low bitrates as I wait for these bitrates can only support cusip resolution video.",
            "Very small video basically.",
            "But any case?",
            "So basically, according to this application, if you have less than 100 kilobits connection, you will only receive the base layer and the video quality is about 30.",
            "DB.",
            "An if you have let's say 250.",
            "Kilobits connection then you receive 6 letters.",
            "And the video quality is 34.6 DB an if you have more basically bandwidth then you receive all the layers and the video quality is about order 60 be.",
            "So that's basically the approach of scalable encoding an you stream the layers.",
            "According to your bandwidth."
        ],
        [
            "So.",
            "An important design question in scalable video coding is how you.",
            "Basically, decide the bit rates for different levels becausw this has implications in terms of compression efficiency.",
            "If your base layer.",
            "Mitt rate is very small.",
            "Then the compression efficiency of the whole system will be relatively low because some layers actually take the base layer as a reference in encoding.",
            "So basically it.",
            "Basically it must have some quality at some minimum qualities, or that the system works.",
            "And if you set the base layer too high, then.",
            "Some applications may not receive that video because the base layer, even the base layer, is too high for the application, so that's good.",
            "Basically optimization problem in designing streaming systems using scalable video coding."
        ],
        [
            "OK, now let's say a few words about the old style."
        ],
        [
            "Server client video streaming.",
            "Before we go to the peer to peer video streaming.",
            "This is the.",
            "Session.",
            "Of a typical.",
            "Darwin type basically push based streamer application.",
            "You have a video codecs or image codecs at the top.",
            "This is the motion JPEG which encodes.",
            "Each picture is still basically each frame is still JPEG picture.",
            "This is whatever MPEG codec is and this is aged 26 type of codec.",
            "Whatever you some code I got the application layer.",
            "And then.",
            "Use RTP packets to encode or drank capsulatus.",
            "Basically units of video.",
            "And then these are transported over UDP an IP.",
            "And.",
            "Bottom physical layer basically, and on the other side there is a session description protocol that controls the connection, so this is the initial request of streaming file, for example from a server or in case of interactive communication application.",
            "This is a signaling part that governs the signaling of the session control.",
            "The signaling usually goes over TCP and the media packets goes over UDP in a typical basically.",
            "Pushpay streaming"
        ],
        [
            "Application.",
            "I have a few words about.",
            "RTP here."
        ],
        [
            "RTP is basically.",
            "Wanna provide the following type of?",
            "Service payload type identification.",
            "So when you receive an RTP packet, you know.",
            "What type of payload does it have?",
            "Is it MPEG four?",
            "Is it M JPEG or whatever the codec is?",
            "Or is it an audio packet because RTP also encapsulates audio packets sequence numbering to ensure resequencing?",
            "And loss detection at the receiving side, timestamping this is basically if you sent audio and video, they go in different RTP sessions and then use the RTP timestamps to synchronize.",
            "The audio and video packets and RTP usually goes together with our TCP, which is the control protocol and provides feedback of receipt."
        ],
        [
            "Of packets.",
            "So this is again.",
            "To show that RTP.",
            "Runs at the application layer over the operating system boundary, so this is under the operating system.",
            "An RTP runs at the application, so RTP Packetization is done at the application layer.",
            "And just a small word, basically TCP.",
            "TCP if you're running TCP here, I didn't put TCP or because it really doesn't make too much sense to run RTP over TCP, because TCP actually.",
            "Chops and chips packet at the transport layer under the operating system.",
            "Without your control, pretty much, and so RTP packetization together with TCP doesn't make too much sense.",
            "Usually that's why RTP is used over UDP."
        ],
        [
            "He OK, so this is just a few comments about audio and video.",
            "Sessions under RTP.",
            "I'll skip the details."
        ],
        [
            "And there are different RDP.",
            "Payload formats for different codecs, so each codec.",
            "Basically, has it.",
            "RTP payload format.",
            "The shoot for its payload type and RTP really does not guarantee delivery or prevent out of.",
            "Order delivery or timely deliberate.",
            "It doesn't guarantee any of these, but just basically.",
            "Put time stamps so that you can check whether things are delivered."
        ],
        [
            "On time or not.",
            "Anyway, now let's come to.",
            "Little bit of HTTP based streaming.",
            "This is the pool scenario.",
            "And here.",
            "We know that HTTP runs over TCP and the client sends get comments to request the content from the server and there are the older approach for HTTP streaming is progressive download which is really.",
            "Downloading a file, but you start playback before the download is complete.",
            "So this is the old approach.",
            "The more recent HTTPS streamers provide adaptive video streaming capability.",
            "And this you do by dividing the video into chunks.",
            "An instead of requesting the file, you request chunks at a time and then you can basically request different types of chunks or different chunks of video code at different bitrates depending your.",
            "Transmit rate so you can adapt basically streaming quality.",
            "With the intelligence being at the client and not at the sender."
        ],
        [
            "Uh, here is actually.",
            "What we are doing and sattazahn project.",
            "This is a European project which I will mention shortly and in the same project.",
            "We know from Portugal actually developed a system based on HTTP streaming of chunks, and this is an adaptive streaming HTTP adaptive streaming application.",
            "Basically the.",
            "Streaming server contains chunks, and these chunks contains parts of the video file, and you can actually have video encoded at different rates.",
            "For example, you can encode the video at one megabit, and you can encode the video at 2 megabits, and you can encode the video at 500 kilobits and then from chunks of video encode at different bitrates.",
            "And then the client here knowing its current bandwidth.",
            "Requestor appropriate chunks so there is a manifest file which basically lets the.",
            "Client null what type of chunks are available at the server, so there is a manifest file here.",
            "The client first request the manifest file and the manifest file says that while for this video at the server that are chunks quoted at 500.",
            "One megabit and two megabytes, and now the.",
            "Client knows what's available there.",
            "An knows its current bandwidth requests appropriate chunks for different parts of the video, and it does so by issuing yet comments.",
            "So there's an HTTP get channel 001, which basically requests this chunk and chunk is delivered and then.",
            "It may decide not to request trying to, but request chunk three later, and chunk four and so forth, so that decisions are all made that client.",
            "And through the get comments and looking at the manifest file, that's basically very simple design and very effective design."
        ],
        [
            "OK, now.",
            "How to deal with that very impairments?",
            "What are delivery improvements?",
            "First of all well?",
            "Packets may be delayed if you are talking about TCP, packets may be delayed.",
            "If you're talking about UDP, packets may be lost.",
            "And.",
            "Packets may be delivered out of order.",
            "Packets may be replicated.",
            "Because TCP issues repeat requests after some periods and you may actually have duplicate copies of same packet.",
            "If the original packet is delayed and you may have some bit errors, this is typically for the wireless applications.",
            "And so basically, how do you deal with?"
        ],
        [
            "Is.",
            "Well, the main reason."
        ],
        [
            "Or"
        ],
        [
            "Delay and loss are congestion.",
            "So you have to 1st.",
            "Try to avoid congestion.",
            "As much as possible."
        ],
        [
            "How do you avoid congestion?",
            "How to avoid congestion?",
            "For example, we use rate control and TCP as I mentioned before, has its own rate control mechanism.",
            "An if a packet is dropped at that router.",
            "Or delayed at the router.",
            "Then TCP interprets this as a sign of congestion and cut your rate by half.",
            "And then TCP periodically probes the network.",
            "To check whether more bandwidth becomes available, and if so, basically then it lets you increase your transmission rate."
        ],
        [
            "Slowly, in a negative fashion, TF RC is the more friendly, basically TCP friendly rate control.",
            "An it again the tax.",
            "Basically problems with network and the text or estimates the round trip.",
            "Time.",
            "And using this in a formula.",
            "Computes.",
            "The currently available rate in the network as a function of RTT."
        ],
        [
            "OK, now the.",
            "Let's assume we.",
            "Somehow?",
            "Use rate control to avoid.",
            "Congestion, but now.",
            "What can we do in case of congestion if we cannot avoid congestion while the first thing is the application layer framing principle which basically says that video packets.",
            "Must be self decodable or self contained packets so you don't really.",
            "Arbitrarily chop and ship the bitstream, but you organize the bitstream into network access units which are slices of video and slices of video are designed to be independent decodable.",
            "So that's the main principle to avoid the error propagation.",
            "In case of a packet loss.",
            "So if you make the slices self contained and if you lose one slice of video or one packet of video in one slice into one packet case, basically lose one packet means lose one slice, in which case the effect of this loss will be contained in typically in a group of pictures of video not propagate all over basically entire the bitstream.",
            "Therefore we have to use this application layer framing using slices and putting slices into packets, and this actually design was ensured.",
            "And H264 an SVC by the introduction of network access layer units now units and all units basically make sure that you don't randomly championship the video."
        ],
        [
            "And.",
            "Basically.",
            "Application or automatic repeat requests at the application layer is another way to deal with late packets.",
            "So you can basically request packets in a timely fashion.",
            "At the application layer.",
            "So as I said.",
            "TCP already implements.",
            "Repeat requests, but that's in the operating system.",
            "You cannot control that.",
            "TCP does it in its own version.",
            "What we're talking here is application layer repeat requests.",
            "So if you're running UDP.",
            "Then the operating system will not request repeats for you, but you can do so at the application layer.",
            "And your own application in a more timely fashion than the TCP would do it.",
            "So you can control the number of repeats and the time window.",
            "That repeat request will be made at the application layer.",
            "So this is an alternative approach to TCP repeat requests.",
            "These are application layer repeat requests."
        ],
        [
            "An application layer forward error correction.",
            "This is another way to deal with packet losses.",
            "I'll skip the deed."
        ],
        [
            "Sales in the interest of time.",
            "But there is an RFC ETF RFC that describes how you do packet base FEC.",
            "At the application layer."
        ],
        [
            "And finally, ATF.",
            "Invented some mechanisms for QoS quality of service, Diffserv.",
            "An RSVP an MPLS are.",
            "Different ETF?",
            "Documents that describe how to implement quality of service, but they are not really diploid on real networks so.",
            "Again, I'll skip the details."
        ],
        [
            "Error resilient video coding while basically.",
            "We talked about making these slices.",
            "Self content, and to do that you have to.",
            "Really.",
            "Know what to do at video encoding level as well, so we either use in for updates in in fact keyframes into the video encoding.",
            "So that you can basically.",
            "Contain the loss of a packet into neighborhood of pictures.",
            "A group of pigs."
        ],
        [
            "There's.",
            "Or we can employ.",
            "Actually we can do both of them at the same time.",
            "Robust prediction structures such as hierarchical B pictures, hierarchal beat prediction basically as well as multiple reference frames.",
            "So a single reference is lossed.",
            "We can rely on the other reference.",
            "So these are approaches to be taken at the video.",
            "And coding level to ensure.",
            "To contain the damage of loss packets at the transport layer.",
            "OK."
        ],
        [
            "So.",
            "And finally, this scalable video coding is remedy.",
            "For.",
            "Packet loss is because now you can.",
            "Divide the video into layers of base layer, an enhancement layer or multiple enhancement layers and make sure that the base layer is well protected.",
            "This is the unequal error protection approach, so we talked about FEC.",
            "For example.",
            "You can employ FEC only on the base layer packets, or you can repeat requests at the application layer only for the base layer packets.",
            "So there are certain things you can do to make sure that the base layer packets are delivered on time, and if your enhancement layer packets are lost, so be it because they don't really affect the.",
            "Continuous playback of the video.",
            "The quality will fluctuate, but the continuous playback will not be affected."
        ],
        [
            "And there are concealment approaches.",
            "That we can use now.",
            "This is basically to show.",
            "That the quality of the video.",
            "Does not necessarily monotonically increase as you increase the video encoding rate.",
            "This is the video encoding rate.",
            "If there is a bottleneck band that in your network and if you increase the encoding rate beyond that, then your quality goes back down.",
            "So you have to really do the video encoding and the transport in synchronous fashion, so you decide your encoding rates or the base layer rates depending on the.",
            "Transport scenario, you're going to use, otherwise the increasing bitrate may actually lead to.",
            "Loss of video quality.",
            "And this is the actually.",
            "The main reason people have moved on to adaptive streaming scenarios few years ago, since let's say 2005 or so adaptive streaming has become the basically mainstream approach before people were streaming H264 MPEG.",
            "Where is the video at a fixed rate.",
            "An packets were basically lossed.",
            "In case of congestion and nothing was done to prevent that, but.",
            "Adaptive streaming is an approach which basically.",
            "Puts the video encoding.",
            "And.",
            "Transmission into.",
            "Some synchro?"
        ],
        [
            "City.",
            "And.",
            "This is.",
            "One approach for adaptive streaming encode the video in multiple streams.",
            "And then you do stream switching.",
            "Adaptively.",
            "And sure stream actually has existed for long time, maybe over 10 years now and basically implements the stream switching according to the network condition.",
            "Windows has intelligence streaming scenarios similar to stream, but sure stream was the leader basically in this.",
            "Originally and then came adaptive streaming based on SVC scalable video coding."
        ],
        [
            "And basically, in an adaptive streaming application, you first estimate the instantaneous bandwidth.",
            "You can do so using the TFC rates.",
            "TCP friendly rate control rate basically and then adapt the source rate to the TFC rate or the CCP rate.",
            "And then in case of using scalable video, employ additional protection for the base layer packets.",
            "So this is the best scenario for basically.",
            "Adaptive streaming use SVC.",
            "Scalable video coding.",
            "First protect your base layer packets with extra protection and then adapt source rates.",
            "The number of layers in the video basically remember this 11 layer scenario I draw before select the number of layers according to your current instantaneous bandwidth, which you can estimate using the TFC rate of the network.",
            "So that's basically a standard approach for.",
            "Rate control or adaptive streaming, basically."
        ],
        [
            "So these are the."
        ],
        [
            "Different ways to."
        ],
        [
            "Adaptive right now, let me say a few words about rate, adaptacion and multicast because that's an important.",
            "A way to move on to the peer to peer radio.",
            "While the bottleneck bandwidth.",
            "And I'm all ticket scenario is not the same for everyone.",
            "Remember the video goes up to a point.",
            "At the single rate and then split the different receivers.",
            "At a later stage, so we have to put this.",
            "Adaptive streaming intelligence at that last node in the network where this occurs because you cannot do that, that source in a multicast scenario because the bottleneck bandwidth will not be the same for all the receivers.",
            "There are different ways if you want to do this at the sender.",
            "You can take the.",
            "Worst case basically receiver.",
            "Or you can take the mean opinion.",
            "Of all the bottleneck bandwidth, but these are suboptimal approaches.",
            "The better approach is.",
            "Either do the intelligence at the last note before the split.",
            "Which is difficult.",
            "The better approach is to put the intelligence at the receiver.",
            "So going back to the pool base scenario, this is relatively easy to do.",
            "Adaptive streaming in a pool based application pool based multicast application.",
            "The scenario is the following.",
            "You encode the video with SVC.",
            "And then established different multicast groups, one group for the base layer.",
            "An another group for the enhancement layers.",
            "And since the client here.",
            "This is the source of multicast, and these are the clients, and since the clients know their bottleneck bandwidths, they can subscribe to different multicast groups.",
            "Low bandwidth client.",
            "Subscribes only to the base layer multicast group.",
            "And a higher bandwidth client subscribes to both base layer, an enhancement layer.",
            "Multicast groups.",
            "So higher bandwidth client receives both base layer and enhancement layer.",
            "Multicast streams, whereas a low bandwidth client receives only the base layer.",
            "And it makes the decision itself not the source or the network.",
            "The client makes the decision, so this is the way to move to.",
            "Basically adaptive multicast streaming.",
            "Put the intelligence that declines an form different multicast groups.",
            "One for the base layer and another and maybe others for enhancement layers since of SVC.",
            "And then basically each client makes its own decision to which multicast groups to join, and this is the way we make the transition to the peer to peer streaming."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Yeah, today I'm going to talk on peer to peer video.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And the content of my talk is briefly described here.",
                    "label": 0
                },
                {
                    "sent": "I'm going to start with a short introduction to streaming the terminology and the types of streaming systems and then briefly talk about server clients streaming, which is the basically precursor to peer to peer streaming.",
                    "label": 0
                },
                {
                    "sent": "And then we're going to talk again briefly about quality of experience in streaming systems an if I have time at the end, I'll talk about 3D.",
                    "label": 1
                },
                {
                    "sent": "Video systems and 3D video streaming.",
                    "label": 1
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so let's start with an introduction.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "To video streaming, and before I go into technical details, I just want to put this into historical perspective.",
                    "label": 0
                },
                {
                    "sent": "I went to United States in 1980 for my PhD to do my PhD.",
                    "label": 0
                },
                {
                    "sent": "And at that time there was no Internet.",
                    "label": 0
                },
                {
                    "sent": "There was no personal computers.",
                    "label": 0
                },
                {
                    "sent": "We had IBM mainframe in the University and some terminals.",
                    "label": 0
                },
                {
                    "sent": "And if you want to send somebody something like.",
                    "label": 0
                },
                {
                    "sent": "Email that didn't exist, of course, since there is no Internet, you put it in a magnetic tape big wheel and put it in the US Mail service.",
                    "label": 0
                },
                {
                    "sent": "That's the way to send somebody something.",
                    "label": 0
                },
                {
                    "sent": "And if you want to record video, there were analog VHS recorders.",
                    "label": 0
                },
                {
                    "sent": "And if you want to watch some video, you go to the blockbusters and rent.",
                    "label": 0
                },
                {
                    "sent": "Basically VHS tape that was the state of the art.",
                    "label": 0
                },
                {
                    "sent": "So in about 30 years since 1980, today there was a big digital media revolution and peer to peer systems.",
                    "label": 0
                },
                {
                    "sent": "And 3D visit the video are the latest developments in this digital media revolution.",
                    "label": 0
                },
                {
                    "sent": "And actually I also remember in 1988 when the first idea about digital television broadcasts was proposed, many people opposed it, saying that it was impossible to compress video into a single analog TV channel bandwidth.",
                    "label": 0
                },
                {
                    "sent": "Which basically could carry about 20 mbits at that time, so.",
                    "label": 0
                },
                {
                    "sent": "That really seen large resistance.",
                    "label": 0
                },
                {
                    "sent": "The idea of digital television and of course in about four years in 90 two MPEG two was developed and that was the start of the digital media revolution, actually.",
                    "label": 0
                },
                {
                    "sent": "Anyway, with that introduction.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Let's move to the definitions.",
                    "label": 0
                },
                {
                    "sent": "Well, first there are probably many definitions for streaming, but my definition is if you start playback before completing the download of a media file that is called streaming.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "There are.",
                    "label": 0
                },
                {
                    "sent": "Couple of modes basically that we can.",
                    "label": 0
                },
                {
                    "sent": "Discuss streaming under the most common approach is video on demand streaming.",
                    "label": 0
                },
                {
                    "sent": "That is, the content exists somewhere in its entirety in a server, and you want to receive this.",
                    "label": 0
                },
                {
                    "sent": "Again, as I said, start playback before completing the whole media file in your own system, completing the download of the whole media file in your system.",
                    "label": 1
                },
                {
                    "sent": "There's also real time streaming, which is basically.",
                    "label": 0
                },
                {
                    "sent": "Synchronize with some.",
                    "label": 0
                },
                {
                    "sent": "In some fashion, so people watch the same content at the same time.",
                    "label": 0
                },
                {
                    "sent": "This is the case for web, TV or IPTV systems.",
                    "label": 1
                },
                {
                    "sent": "This can happen with live encoding for live events or.",
                    "label": 0
                },
                {
                    "sent": "Pre encoding of basically pre captured material but you can still do this and I think on ice fashion.",
                    "label": 0
                },
                {
                    "sent": "As in the TV program streaming example and then finally there is the interactive streaming where this is like a video telephone application.",
                    "label": 0
                },
                {
                    "sent": "Are there is interaction and so you need to have a live encoder on both sides and you have strict basically delay requirements in the interactive system such as 150 milliseconds or so.",
                    "label": 0
                },
                {
                    "sent": "So depending on the requirements of the streaming application, there are different streaming technologies we can consider when we discuss different technologies will basically look at in which context they can be used.",
                    "label": 0
                },
                {
                    "sent": "But as I said, there is the video on demand application real time streaming application, an interactive communications streaming application.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, the usual way of streaming is server client or client server, basically streaming architecture.",
                    "label": 0
                },
                {
                    "sent": "And this can be point to point unicast.",
                    "label": 0
                },
                {
                    "sent": "Are point to multipoint multicast?",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So let's look at this unit cast.",
                    "label": 0
                },
                {
                    "sent": "Streaming scenario point to point unicast streaming scenario in a point to point unicast streaming scenario, there is a sender and there is a receiver.",
                    "label": 1
                },
                {
                    "sent": "And the sender sends packets.",
                    "label": 0
                },
                {
                    "sent": "To the receiver over.",
                    "label": 0
                },
                {
                    "sent": "Set of links and there is other traffic that may interfere with this streaming app.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Location.",
                    "label": 0
                },
                {
                    "sent": "In a multicast scenario, there is a single sender and multiple receivers.",
                    "label": 0
                },
                {
                    "sent": "And basically the sender sends a single stream.",
                    "label": 0
                },
                {
                    "sent": "Up to a certain point from where basically stream is split into different receivers.",
                    "label": 0
                },
                {
                    "sent": "This is the typical multicast scenario.",
                    "label": 0
                },
                {
                    "sent": "Now if you go.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Back obviously the single server.",
                    "label": 0
                },
                {
                    "sent": "Put pressure on the the single server.",
                    "label": 0
                },
                {
                    "sent": "Streaming scenario puts pressure on the server.",
                    "label": 0
                },
                {
                    "sent": "There is a certain number of clients.",
                    "label": 0
                },
                {
                    "sent": "Not that server can handle it a given time.",
                    "label": 0
                },
                {
                    "sent": "So people come up with architectures too.",
                    "label": 0
                },
                {
                    "sent": "Circumvent this problem and the.",
                    "label": 0
                },
                {
                    "sent": "Most common approach is the CDN or the content distribution network.",
                    "label": 1
                },
                {
                    "sent": "Architecture where we have high quality servers at the edges of the network where you first push the content to these CDN nodes and then people request the service from the nearest CDN node.",
                    "label": 1
                },
                {
                    "sent": "So that's basically a solution to basically bypass the server.",
                    "label": 0
                },
                {
                    "sent": "Congestion problem, but it's an expensive solution.",
                    "label": 0
                },
                {
                    "sent": "Because you have to.",
                    "label": 0
                },
                {
                    "sent": "Basically, deploy and maintain these CDN nodes.",
                    "label": 0
                },
                {
                    "sent": "At the edges of the network.",
                    "label": 0
                },
                {
                    "sent": "Mark reasonable or maybe a low cost solution is peer to peer streaming and that is the most recent trend.",
                    "label": 0
                },
                {
                    "sent": "Basically in streaming peer to peer streaming.",
                    "label": 0
                },
                {
                    "sent": "And here if there are actually 2.",
                    "label": 0
                },
                {
                    "sent": "Topologies or architectures one is 3 based.",
                    "label": 0
                },
                {
                    "sent": "Peer to peer streaming and the other is mesh based.",
                    "label": 0
                },
                {
                    "sent": "Peer to peer streaming.",
                    "label": 0
                },
                {
                    "sent": "Actually it's free based peer to peer.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": false,
            "summarization_data": []
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Is kind of an evolution of multi.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Best.",
                    "label": 0
                },
                {
                    "sent": "And here basically, if you look at the three based peer to peer.",
                    "label": 0
                },
                {
                    "sent": "Architecture.",
                    "label": 0
                },
                {
                    "sent": "There is a single sender.",
                    "label": 0
                },
                {
                    "sent": "Is there a pointer that I can use?",
                    "label": 0
                },
                {
                    "sent": "OK problem, maybe not.",
                    "label": 0
                },
                {
                    "sent": "There is a single sender which is indicated as S and then we develop or design some tree structure.",
                    "label": 0
                },
                {
                    "sent": "Indicate how the content should be moved from the sender to different clients in the system.",
                    "label": 0
                },
                {
                    "sent": "And design a single tree.",
                    "label": 0
                },
                {
                    "sent": "Or you can design multiple trees.",
                    "label": 0
                },
                {
                    "sent": "Obviously the multiple tree gives you the multiple trees.",
                    "label": 0
                },
                {
                    "sent": "Architecture gives you more flexibility, and basically there must be a supernode.",
                    "label": 0
                },
                {
                    "sent": "That overseas that designs and overseas and maintains this tree structure and some people call this app tracker which tracks the state of of the.",
                    "label": 1
                },
                {
                    "sent": "Peer to peer streaming.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "Here in this example we have two trees.",
                    "label": 0
                },
                {
                    "sent": "One is shown in red, the other is shown in blue.",
                    "label": 0
                },
                {
                    "sent": "Thank you for the OK. Alright.",
                    "label": 0
                },
                {
                    "sent": "So basically the content here on the red tree goes to P1.",
                    "label": 0
                },
                {
                    "sent": "And then P2 an.",
                    "label": 0
                },
                {
                    "sent": "P5.",
                    "label": 0
                },
                {
                    "sent": "And P6 and P7 an.",
                    "label": 0
                },
                {
                    "sent": "Also, 2P3P4 M P8, so that's the structure of the red Three, an alternately, the blue tree is provides alternate routes on the distribution of the content, and one of the advantages of multiple freezes if a node.",
                    "label": 0
                },
                {
                    "sent": "Leaves unexpectedly then.",
                    "label": 0
                },
                {
                    "sent": "The child or the children of that node does not die.",
                    "label": 0
                },
                {
                    "sent": "Necessarily because they may receive content from the alternate tree.",
                    "label": 0
                },
                {
                    "sent": "For example, if you look at.",
                    "label": 0
                },
                {
                    "sent": "This P2.",
                    "label": 0
                },
                {
                    "sent": "P2 receives content directly from.",
                    "label": 0
                },
                {
                    "sent": "The.",
                    "label": 0
                },
                {
                    "sent": "Sender An alternately receives content on the red tree from P1.",
                    "label": 0
                },
                {
                    "sent": "So if P1 all of a sudden disappears, then P2 still receives content on the Blue Tree an somehow this content is forwarded to P6MP5.",
                    "label": 0
                },
                {
                    "sent": "So P5 still survives when P1 unexpectedly leaves the distribution network.",
                    "label": 0
                },
                {
                    "sent": "So multiple trees somehow provide.",
                    "label": 0
                },
                {
                    "sent": "Redundancy but also assurance that the service is reliable even if one or two peers unexpectedly leave the distribution.",
                    "label": 0
                },
                {
                    "sent": "Application actually there's a nice paper on this.",
                    "label": 1
                },
                {
                    "sent": "This was published in Packet Video in 2007 by Burn O An.",
                    "label": 0
                },
                {
                    "sent": "We Thomas Vegan Tan sure others.",
                    "label": 0
                },
                {
                    "sent": "Basically that discussed this application of multiple multicast trees on for three days.",
                    "label": 1
                },
                {
                    "sent": "Peer to peer streaming.",
                    "label": 0
                },
                {
                    "sent": "By the way, if you have any questions feel free to interrupt and we can have some discussion.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "The other scenario.",
                    "label": 0
                },
                {
                    "sent": "Is the more common.",
                    "label": 0
                },
                {
                    "sent": "Fully known scenario for peer to peer streaming is the mesh base peer to peer streaming architectures.",
                    "label": 0
                },
                {
                    "sent": "This is actually an animation I've copied from the Internet that describes how the BitTorrent works in the mesh base.",
                    "label": 0
                },
                {
                    "sent": "Peer to peer streaming systems.",
                    "label": 0
                },
                {
                    "sent": "There is.",
                    "label": 0
                },
                {
                    "sent": "Not self organized tree structure, but there are basically random connections between any peers at anytime.",
                    "label": 1
                },
                {
                    "sent": "And again, this results in redundancy, but also assurance that the system is going to be reliable if one or more peers leave the network unexpectedly in the.",
                    "label": 1
                },
                {
                    "sent": "Match please.",
                    "label": 0
                },
                {
                    "sent": "Structure.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "About going back to the tree based structure in the tree based structure, you push the packets in sequence.",
                    "label": 0
                },
                {
                    "sent": "So basically the sender pushes the packets in sequence typically, and this is more like a.",
                    "label": 0
                },
                {
                    "sent": "Common streaming scenario sender or server driven stream.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Scenario in the mesh base architecture, the transmission of packets are not necessarily sequence and you actually divide.",
                    "label": 1
                },
                {
                    "sent": "This is the server.",
                    "label": 0
                },
                {
                    "sent": "And you divide the content into chunks.",
                    "label": 0
                },
                {
                    "sent": "Each color represents a different chunk.",
                    "label": 0
                },
                {
                    "sent": "And then basically the server pushes the chunks to a couple of these peers.",
                    "label": 0
                },
                {
                    "sent": "And it pushes different chunks to different pairs.",
                    "label": 0
                },
                {
                    "sent": "So for example the.",
                    "label": 0
                },
                {
                    "sent": "Brown chunks are pushed to couple of peers here, and the yellow chunks are pushed to a couple of another appears and the green chunks yet are pushed to some other players and then the peers start exchanging these chunks among themselves and eventually at some point everybody has all the chunks.",
                    "label": 0
                },
                {
                    "sent": "That's the architecture of a mesh base.",
                    "label": 1
                },
                {
                    "sent": "Peer to peer system.",
                    "label": 0
                },
                {
                    "sent": "So here the.",
                    "label": 0
                },
                {
                    "sent": "Content is divided into chunks and the chunks are traveling.",
                    "label": 0
                },
                {
                    "sent": "From server to some peers and then our exchange between all the peers and some random order.",
                    "label": 0
                },
                {
                    "sent": "Well, in streaming applications this is of course the torrent architecture was first invented for file exchange and not for streaming applications.",
                    "label": 0
                },
                {
                    "sent": "In streaming.",
                    "label": 0
                },
                {
                    "sent": "There must be some time, order, time, sequence order.",
                    "label": 0
                },
                {
                    "sent": "So basically the peers have some buffer, but if you do this in totally random order then there is basically too much delay until appear receives the.",
                    "label": 0
                },
                {
                    "sent": "Necessary chunk, so you have to prioritize the chunk exchange.",
                    "label": 0
                },
                {
                    "sent": "Also taking into account time requirements of a chunk.",
                    "label": 0
                },
                {
                    "sent": "So there are different policies developed for basically.",
                    "label": 0
                },
                {
                    "sent": "Prioritizing the chunk exchange between the peers so the original torrent architecture.",
                    "label": 0
                },
                {
                    "sent": "Apple employs the reddest first principle, which doesn't really have any time.",
                    "label": 0
                },
                {
                    "sent": "Basically dimension, but then later systems developed on this architecture for streaming applications, have invented different policies which emphasize the importance of time in exchanging of these packets in a timely fashion.",
                    "label": 0
                },
                {
                    "sent": "There are also hybrid architectures which are combination of three and mesh.",
                    "label": 0
                },
                {
                    "sent": "So there are some systems developed which employ neither mesh nor tree structures but hybrid.",
                    "label": 0
                },
                {
                    "sent": "Three and mesh structures more actually recent approaches are in that direction using a combination of.",
                    "label": 0
                },
                {
                    "sent": "Tryan mesh architecture.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, now this is a different classification of streaming applications.",
                    "label": 0
                },
                {
                    "sent": "We looked at server, client and peer to peer architectures and as I said a different classification.",
                    "label": 0
                },
                {
                    "sent": "And here I classify streaming applications as push model streaming versus pool models streaming.",
                    "label": 0
                },
                {
                    "sent": "And the difference is basically.",
                    "label": 0
                },
                {
                    "sent": "Is on where the intelligence is?",
                    "label": 0
                },
                {
                    "sent": "In a push model, the intelligence is at the server.",
                    "label": 0
                },
                {
                    "sent": "This is the basically chotank old older approach.",
                    "label": 0
                },
                {
                    "sent": "An example of this is the apples Darwin streaming server, for example.",
                    "label": 1
                },
                {
                    "sent": "Basically, the push model streaming server.",
                    "label": 1
                },
                {
                    "sent": "Makes all the decisions itself on length of send, how many packets to which client.",
                    "label": 0
                },
                {
                    "sent": "So the clients just basically request service.",
                    "label": 0
                },
                {
                    "sent": "From the server and that's it.",
                    "label": 0
                },
                {
                    "sent": "Then all the decisions are made by the server on which packets will be pushed to which client at what time, and so forth.",
                    "label": 0
                },
                {
                    "sent": "Opposite is the pool model where the intelligence resides at the client or the receiver.",
                    "label": 0
                },
                {
                    "sent": "In this case, a good example is the HTTP streaming scenario in the HTTP streaming scenario, the client.",
                    "label": 0
                },
                {
                    "sent": "Issues.",
                    "label": 0
                },
                {
                    "sent": "Get comments and requests.",
                    "label": 0
                },
                {
                    "sent": "The Hall or the piece of the file of called again chunk from the streaming server.",
                    "label": 0
                },
                {
                    "sent": "So basically in the pool model scenario, the client decides.",
                    "label": 0
                },
                {
                    "sent": "Which packets to request.",
                    "label": 0
                },
                {
                    "sent": "And at what rate?",
                    "label": 0
                },
                {
                    "sent": "From the streaming server?",
                    "label": 0
                },
                {
                    "sent": "The server here just basically stores.",
                    "label": 0
                },
                {
                    "sent": "Chunks of media.",
                    "label": 0
                },
                {
                    "sent": "And does not do anything but to respond to the requests.",
                    "label": 0
                },
                {
                    "sent": "So intelligence is at the client.",
                    "label": 0
                },
                {
                    "sent": "And the pool ways model so we can actually have both.",
                    "label": 0
                },
                {
                    "sent": "Client, server and peer to peers.",
                    "label": 0
                },
                {
                    "sent": "Under each scheme, so you can have a pool based.",
                    "label": 0
                },
                {
                    "sent": "Client server, streaming application or a pool based peer to peer application as well as you can have a push based client server and push based peer to peer application.",
                    "label": 0
                },
                {
                    "sent": "So as I said, this is a different dimension of categorization of streaming applications.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Now, when it comes to actual media transfer between the peers or between the server and the peers.",
                    "label": 0
                },
                {
                    "sent": "There is this usual stack of protocols, so let's look at the stack of protocols.",
                    "label": 0
                },
                {
                    "sent": "The physical layer at the bottom.",
                    "label": 0
                },
                {
                    "sent": "Is the actual?",
                    "label": 0
                },
                {
                    "sent": "Medium or the wired or wireless, basically where the.",
                    "label": 0
                },
                {
                    "sent": "Transmission occurs, an examples are basically.",
                    "label": 0
                },
                {
                    "sent": "Wireless or copper wire or fiber or whatever, and then we have a protocol that runs.",
                    "label": 0
                },
                {
                    "sent": "On top of the physical layer and manage is the transfer of bits.",
                    "label": 0
                },
                {
                    "sent": "And if you are on the DSL line.",
                    "label": 0
                },
                {
                    "sent": "Or in a cable system.",
                    "label": 0
                },
                {
                    "sent": "This is the US cable system DOCSIS protocol.",
                    "label": 0
                },
                {
                    "sent": "Or Wi-Fi or Wimax.",
                    "label": 0
                },
                {
                    "sent": "Whatever that basically governance.",
                    "label": 0
                },
                {
                    "sent": "Have the packet search or actual bits are transmitted over the physical.",
                    "label": 0
                },
                {
                    "sent": "Layer and then on top of this there is the IP protocol.",
                    "label": 0
                },
                {
                    "sent": "Which basically.",
                    "label": 0
                },
                {
                    "sent": "Farms IP packets.",
                    "label": 0
                },
                {
                    "sent": "And on top of the IP there is this transport control layer.",
                    "label": 0
                },
                {
                    "sent": "The typical Internet runs with TCP, but then there is UDP and ECP that are developed for media.",
                    "label": 0
                },
                {
                    "sent": "Applications.",
                    "label": 0
                },
                {
                    "sent": "Which governs the.",
                    "label": 0
                },
                {
                    "sent": "Basically, transport control.",
                    "label": 0
                },
                {
                    "sent": "Layer and on top of this there is a session streaming session.",
                    "label": 0
                },
                {
                    "sent": "This streaming session can be STP control.",
                    "label": 0
                },
                {
                    "sent": "Session control can be HTTP or RTSP or SIP.",
                    "label": 0
                },
                {
                    "sent": "An RTP so these are basically.",
                    "label": 0
                },
                {
                    "sent": "The white layers here are invisible to the application they are in the physical communication layer and usually the transport and IPR and operating system.",
                    "label": 0
                },
                {
                    "sent": "So you don't really see these in your application, so the TCP, UDP and IP are varied in the operating system.",
                    "label": 0
                },
                {
                    "sent": "And these are in the communication layer and these three are at the application which you basically control.",
                    "label": 0
                },
                {
                    "sent": "And what are they about?",
                    "label": 0
                },
                {
                    "sent": "Basically there's RTP, which I will say briefly what it is and then codecs and on at the very top.",
                    "label": 0
                },
                {
                    "sent": "That's the application.",
                    "label": 0
                },
                {
                    "sent": "Whatever application software that you're running.",
                    "label": 0
                },
                {
                    "sent": "So that's the basically.",
                    "label": 0
                },
                {
                    "sent": "Stacking of the protocols that govern streaming application.",
                    "label": 0
                },
                {
                    "sent": "Your streaming application is at the top.",
                    "label": 0
                },
                {
                    "sent": "And it runs some codecs.",
                    "label": 0
                },
                {
                    "sent": "And then there's session control and RTP, which are at the application layer.",
                    "label": 0
                },
                {
                    "sent": "The rest are in the operating system and physical communication channel.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And this is yet another.",
                    "label": 0
                },
                {
                    "sent": "A diagram to show the same thing.",
                    "label": 0
                },
                {
                    "sent": "For example, if you are doing.",
                    "label": 0
                },
                {
                    "sent": "HTTP streaming you're running HTTP over TCP over IP.",
                    "label": 0
                },
                {
                    "sent": "So an HTTP streaming system runs HTTP at the application layer which runs on top of TCP.",
                    "label": 0
                },
                {
                    "sent": "An over IP.",
                    "label": 0
                },
                {
                    "sent": "And for example, that Darwin streaming server.",
                    "label": 0
                },
                {
                    "sent": "Old fashioned approach runs RTP at the application layer and RTP is run on top of UDP.",
                    "label": 0
                },
                {
                    "sent": "And you DPS over IP.",
                    "label": 0
                },
                {
                    "sent": "So basically RTP UDP IP is 1 approach HTTP, TCP IP is another approach and which path you choose.",
                    "label": 0
                },
                {
                    "sent": "Is going to affect how you design and evaluate your streaming application.",
                    "label": 0
                },
                {
                    "sent": "And the main reason for this.",
                    "label": 0
                },
                {
                    "sent": "Well, this is basically saying that the OS provides the.",
                    "label": 1
                },
                {
                    "sent": "Blue layer and the bottom.",
                    "label": 0
                },
                {
                    "sent": "And the transport address is an IP address and port number.",
                    "label": 1
                },
                {
                    "sent": "That's how you address the operating system, so the operating system provides report number such as a UDP port or a TCP port.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, now which transport protocol you use is going to affect how you design and evaluate your streaming application.",
                    "label": 0
                },
                {
                    "sent": "Be cause, for example, UDP is an unreliable protocol, meaning that the packets are not guaranteed to deliver it.",
                    "label": 1
                },
                {
                    "sent": "And there is no acknowledgement of whether a packet is delivered or not.",
                    "label": 1
                },
                {
                    "sent": "So in a UDP.",
                    "label": 0
                },
                {
                    "sent": "Streaming application packets may last may get lost.",
                    "label": 0
                },
                {
                    "sent": "And your basically streaming application must take some measures to deal with.",
                    "label": 0
                },
                {
                    "sent": "Packet loss or delivery impairments.",
                    "label": 0
                },
                {
                    "sent": "On the contrary, the TCP.",
                    "label": 0
                },
                {
                    "sent": "Basically guarantees delivery of packets by retransmissions of unreceived packets, and there's a acknowledgement mechanism.",
                    "label": 0
                },
                {
                    "sent": "Which acknowledges received.",
                    "label": 0
                },
                {
                    "sent": "Of all packets.",
                    "label": 0
                },
                {
                    "sent": "But there is no guarantee on time with delivery, so it delivers the packet sometime but not necessary along time.",
                    "label": 0
                },
                {
                    "sent": "So if you're using HTTP over TCP.",
                    "label": 0
                },
                {
                    "sent": "You can deal with this.",
                    "label": 0
                },
                {
                    "sent": "Are not timely packets in two ways.",
                    "label": 0
                },
                {
                    "sent": "You can freeze the playback until the packet arrives.",
                    "label": 0
                },
                {
                    "sent": "Or you can basically consider these not timely deliver packets as loss packets, as in the case of UDP.",
                    "label": 0
                },
                {
                    "sent": "So this is.",
                    "label": 0
                },
                {
                    "sent": "Something decision your streaming application has to make when a packet is not delivered on time in TCP, are you going to freeze the display and wait?",
                    "label": 0
                },
                {
                    "sent": "Or are you just going to skip that packet and continue with the next packet if it is delivered?",
                    "label": 0
                },
                {
                    "sent": "So this is basically.",
                    "label": 0
                },
                {
                    "sent": "This requires an understanding of the protocols so that you can deal with evaluation of your streaming application.",
                    "label": 0
                },
                {
                    "sent": "Accordingly, and then there's the CCP, which is a hybrid of UDP and TCP that was delivered, or that was basically designed for streaming media applications.",
                    "label": 0
                },
                {
                    "sent": "It's not deployed with commonly exists in the Linux kernel, but it doesn't appear in the Microsoft operating system.",
                    "label": 0
                },
                {
                    "sent": "So if you're using a Linux kernel, you can actually employ DCP, which is UDP plus rate control.",
                    "label": 0
                },
                {
                    "sent": "Now another thing about another difference between TCP and UDP is that UDP doesn't employ any rate control, so you can flood the network with UDP packets.",
                    "label": 1
                },
                {
                    "sent": "Whereas TCP employees rate control.",
                    "label": 0
                },
                {
                    "sent": "Basically, if a packet is lossed or not delivered on time in TCP, TCP immediately cuts your transmission rate by half.",
                    "label": 0
                },
                {
                    "sent": "So basically this is not good for video streaming unnecessarily, because if you're streaming video, let's say at one megabit per second and single packet is.",
                    "label": 0
                },
                {
                    "sent": "They were late.",
                    "label": 0
                },
                {
                    "sent": "The TCP immediately cuts your transmission rate by half, so you're now reduced to 500 kilobits instead of a megabit.",
                    "label": 0
                },
                {
                    "sent": "An increase back is linear, whereas the decrease in TCP rate is.",
                    "label": 0
                },
                {
                    "sent": "Basically by half so every time a packet is delayed, your TCP rate is cut by half and then TCP allows you to increase to the previous straight.",
                    "label": 0
                },
                {
                    "sent": "In the edited version and slow fashion basically.",
                    "label": 0
                },
                {
                    "sent": "So it generates.",
                    "label": 0
                },
                {
                    "sent": "Really, some.",
                    "label": 0
                },
                {
                    "sent": "Sudden changes in video quality.",
                    "label": 0
                },
                {
                    "sent": "If you're using TCP.",
                    "label": 0
                },
                {
                    "sent": "And if I don't get this.",
                    "label": 1
                },
                {
                    "sent": "Relevant light, so if you're using TCP for example for your streaming application, you should really make sure that you're using the network under capacity so that you basically minimize the probability of a late packet so you don't get unnecessary, basically.",
                    "label": 0
                },
                {
                    "sent": "Penalty in your transmission rates by the TCP itself, so the CCP is in between these two extremes, whereas basically here is a drastic rate control and there is no rate control.",
                    "label": 0
                },
                {
                    "sent": "So this CP employs UDP with some rate control.",
                    "label": 0
                },
                {
                    "sent": "But this is more friendly rate control than the TCP rate control.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So the DCP uses the TCP friendly rate control.",
                    "label": 0
                },
                {
                    "sent": "And this means there is a formula that just DCP transmission rate.",
                    "label": 0
                },
                {
                    "sent": "In case of a packet loss.",
                    "label": 0
                },
                {
                    "sent": "Love.",
                    "label": 0
                },
                {
                    "sent": "In a more friendly fashion, basically rather than divided by two type rate control.",
                    "label": 0
                },
                {
                    "sent": "Now another important difference between.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Different protocols is.",
                    "label": 0
                },
                {
                    "sent": "UDP.",
                    "label": 0
                },
                {
                    "sent": "Does not use any connections, so.",
                    "label": 0
                },
                {
                    "sent": "Each packet can be delivered.",
                    "label": 0
                },
                {
                    "sent": "From a different route in theory.",
                    "label": 0
                },
                {
                    "sent": "Well, as TCP is sort of, quote unquote, connection oriented protocol.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "Therefore it is.",
                    "label": 0
                },
                {
                    "sent": "Easier to actually monitor TCP traffic on the network.",
                    "label": 0
                },
                {
                    "sent": "And as a result of this firewalls.",
                    "label": 0
                },
                {
                    "sent": "Usually don't allow.",
                    "label": 0
                },
                {
                    "sent": "UDP traffic because they cannot really recognize and monitor UDP traffic, so TCP is used in most scenarios because it can go through firewalls, whereas UDP cannot.",
                    "label": 0
                },
                {
                    "sent": "So if you're going to stream over UDP port, you have to make sure that the receiver allows traffic to be received on that UDP port.",
                    "label": 1
                },
                {
                    "sent": "DCP is also.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Connection oriented.",
                    "label": 0
                },
                {
                    "sent": "So it is also friendly, but.",
                    "label": 0
                },
                {
                    "sent": "Network address translation and firewalls.",
                    "label": 0
                },
                {
                    "sent": "But again, at the moment it only comes with the Linux kernels, and it's not why the diploid, so maybe?",
                    "label": 1
                },
                {
                    "sent": "In the future it may be, but currently you're still mostly limited by TCP and UDP.",
                    "label": 0
                },
                {
                    "sent": "For streaming applications.",
                    "label": 0
                },
                {
                    "sent": "Any questions so far?",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Well then another important component of this is video coding.",
                    "label": 0
                },
                {
                    "sent": "Because we are transmitting encoded data and how you encode your video.",
                    "label": 0
                },
                {
                    "sent": "Also affects the streaming.",
                    "label": 0
                },
                {
                    "sent": "Applications and streaming.",
                    "label": 0
                },
                {
                    "sent": "Scenarios.",
                    "label": 0
                },
                {
                    "sent": "The current.",
                    "label": 0
                },
                {
                    "sent": "Approach or standards for video coding is H264 MPEG four AVC an it's being upgraded to high efficiency video coding.",
                    "label": 0
                },
                {
                    "sent": "An alternative approach is scalable video coding.",
                    "label": 1
                },
                {
                    "sent": "And there is an MPEG SVC standard which is an extension of 264 and AVC, basically an finally there.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "3D video coding.",
                    "label": 0
                },
                {
                    "sent": "Let's say a few words about MPEG 4.",
                    "label": 0
                },
                {
                    "sent": "MPEG Four was designed to be twice more efficient than MPEG 2.",
                    "label": 1
                },
                {
                    "sent": "I need employees new tools such as hierarchical be prediction and intra prediction and better motion compensation as well as others.",
                    "label": 0
                },
                {
                    "sent": "I'm not going to.",
                    "label": 0
                },
                {
                    "sent": "I'm not going to go into details, but what matters is what is the?",
                    "label": 0
                },
                {
                    "sent": "Coding rates.",
                    "label": 0
                },
                {
                    "sent": "Of different video.",
                    "label": 0
                },
                {
                    "sent": "Basically types with AVC or H264.",
                    "label": 0
                },
                {
                    "sent": "Well typically standard definition video is coded at.",
                    "label": 0
                },
                {
                    "sent": "Good quality.",
                    "label": 0
                },
                {
                    "sent": "Between 2 to 4 megabits per second and HD video is encoded in good quality between 5 to 10 megabits per second.",
                    "label": 0
                },
                {
                    "sent": "This depends on the content, of course.",
                    "label": 0
                },
                {
                    "sent": "If it's sports video, it requires more betsan.",
                    "label": 0
                },
                {
                    "sent": "If it's slow varying romantic video then it requires less bandwidth.",
                    "label": 0
                },
                {
                    "sent": "So when you actually transmit HD video, you have to allocate this much of bandwidth to the application, otherwise you're going to run into trouble.",
                    "label": 0
                },
                {
                    "sent": "Or you're going to use a lower resolution video basically.",
                    "label": 0
                },
                {
                    "sent": "And actually, I should also say if you use scalable video, the scalable video, it comes in two layers that base layer and announcement layer and then you can choose the base layers at the available bandwidth to your application and so forth.",
                    "label": 0
                },
                {
                    "sent": "I'll say a few more things about that.",
                    "label": 0
                },
                {
                    "sent": "That open source software for real time encoding and decoding of H264 or typical laptop and you can download these software freely.",
                    "label": 0
                },
                {
                    "sent": "Basically, X 264 is the encoder and FF MPEG employees FF MPEG package basically employs it 264 decoders.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, now HEBC.",
                    "label": 0
                },
                {
                    "sent": "Is the current impact project to rush probably knows more about this and its design?",
                    "label": 0
                },
                {
                    "sent": "Principle is to be twice more efficient than.",
                    "label": 1
                },
                {
                    "sent": "MPEG Four AVC or 264.",
                    "label": 0
                },
                {
                    "sent": "It is still blocked the city waste.",
                    "label": 1
                },
                {
                    "sent": "It employs newer tools such as adaptive interpolation, filtering and variable size.",
                    "label": 0
                },
                {
                    "sent": "Motion compensation, as well as.",
                    "label": 0
                },
                {
                    "sent": "Many other tools.",
                    "label": 0
                },
                {
                    "sent": "And when completed it is advertised to be twice more efficient as the current age to 64.",
                    "label": 0
                },
                {
                    "sent": "So if you go by that.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We can say that it will cut the bitrates here.",
                    "label": 0
                },
                {
                    "sent": "By half if it is successfully.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Finished.",
                    "label": 0
                },
                {
                    "sent": "And the reference software is under development.",
                    "label": 1
                },
                {
                    "sent": "For the HVC standards.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, now just a few words about scalable video coding.",
                    "label": 1
                },
                {
                    "sent": "And the scalable.",
                    "label": 0
                },
                {
                    "sent": "Video is encoded in layers.",
                    "label": 0
                },
                {
                    "sent": "One or more actually two or more layers, one base layer.",
                    "label": 1
                },
                {
                    "sent": "This is the must have component of the video and you can set the bitrate for the base layer.",
                    "label": 0
                },
                {
                    "sent": "Depending on your application.",
                    "label": 0
                },
                {
                    "sent": "So if you have a one megabit.",
                    "label": 0
                },
                {
                    "sent": "Let's say connection.",
                    "label": 0
                },
                {
                    "sent": "You can set the base layer.",
                    "label": 0
                },
                {
                    "sent": "At that layer at that level, and for people having higher bandwidth connections, they can receive the base layer plus enhancement layers and the people having the backbone available and basically connection will receive only the base layer.",
                    "label": 0
                },
                {
                    "sent": "That's the idea.",
                    "label": 0
                },
                {
                    "sent": "And you can do special.",
                    "label": 0
                },
                {
                    "sent": "Scalability, temporal scalability or quality SNR scalability.",
                    "label": 0
                },
                {
                    "sent": "Basically.",
                    "label": 0
                },
                {
                    "sent": "Most people use as in our scalability because that's the easiest.",
                    "label": 0
                },
                {
                    "sent": "Implement and has less scalable to penalty.",
                    "label": 0
                },
                {
                    "sent": "Special scalability has some penalty.",
                    "label": 0
                },
                {
                    "sent": "Basically, about 10 to 15% penalty, whereas SNR scalability has very little penalty for having a scalable bitstream.",
                    "label": 1
                },
                {
                    "sent": "Now the main problem with SVC is that although there is a real time decoder open SVC decoder.",
                    "label": 0
                },
                {
                    "sent": "The encoder is the reference encoder is very slow.",
                    "label": 0
                },
                {
                    "sent": "And you cannot do real time encoding using the reference encoder an.",
                    "label": 0
                },
                {
                    "sent": "I don't think there are any open source openly available real time encoders for SVC at the moment.",
                    "label": 0
                },
                {
                    "sent": "So basically these are the approaches for video coding.",
                    "label": 0
                },
                {
                    "sent": "You will decide whether to encode your video, scalable or not, and then design your streaming application accord.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Ugly.",
                    "label": 0
                },
                {
                    "sent": "This is an example of SVC configuration.",
                    "label": 0
                },
                {
                    "sent": "This is just a hypothetical example.",
                    "label": 0
                },
                {
                    "sent": "The bitstream is designed in 11 layers.",
                    "label": 0
                },
                {
                    "sent": "The zero layer is the base layer.",
                    "label": 0
                },
                {
                    "sent": "And the mid trades here are just basically for the sake of.",
                    "label": 0
                },
                {
                    "sent": "The example not typical of streaming application this these are very low bitrates as I wait for these bitrates can only support cusip resolution video.",
                    "label": 0
                },
                {
                    "sent": "Very small video basically.",
                    "label": 0
                },
                {
                    "sent": "But any case?",
                    "label": 0
                },
                {
                    "sent": "So basically, according to this application, if you have less than 100 kilobits connection, you will only receive the base layer and the video quality is about 30.",
                    "label": 0
                },
                {
                    "sent": "DB.",
                    "label": 0
                },
                {
                    "sent": "An if you have let's say 250.",
                    "label": 0
                },
                {
                    "sent": "Kilobits connection then you receive 6 letters.",
                    "label": 0
                },
                {
                    "sent": "And the video quality is 34.6 DB an if you have more basically bandwidth then you receive all the layers and the video quality is about order 60 be.",
                    "label": 0
                },
                {
                    "sent": "So that's basically the approach of scalable encoding an you stream the layers.",
                    "label": 0
                },
                {
                    "sent": "According to your bandwidth.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "An important design question in scalable video coding is how you.",
                    "label": 0
                },
                {
                    "sent": "Basically, decide the bit rates for different levels becausw this has implications in terms of compression efficiency.",
                    "label": 0
                },
                {
                    "sent": "If your base layer.",
                    "label": 0
                },
                {
                    "sent": "Mitt rate is very small.",
                    "label": 0
                },
                {
                    "sent": "Then the compression efficiency of the whole system will be relatively low because some layers actually take the base layer as a reference in encoding.",
                    "label": 0
                },
                {
                    "sent": "So basically it.",
                    "label": 0
                },
                {
                    "sent": "Basically it must have some quality at some minimum qualities, or that the system works.",
                    "label": 0
                },
                {
                    "sent": "And if you set the base layer too high, then.",
                    "label": 0
                },
                {
                    "sent": "Some applications may not receive that video because the base layer, even the base layer, is too high for the application, so that's good.",
                    "label": 0
                },
                {
                    "sent": "Basically optimization problem in designing streaming systems using scalable video coding.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, now let's say a few words about the old style.",
                    "label": 0
                }
            ]
        },
        "clip_31": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Server client video streaming.",
                    "label": 0
                },
                {
                    "sent": "Before we go to the peer to peer video streaming.",
                    "label": 0
                },
                {
                    "sent": "This is the.",
                    "label": 0
                },
                {
                    "sent": "Session.",
                    "label": 0
                },
                {
                    "sent": "Of a typical.",
                    "label": 0
                },
                {
                    "sent": "Darwin type basically push based streamer application.",
                    "label": 0
                },
                {
                    "sent": "You have a video codecs or image codecs at the top.",
                    "label": 0
                },
                {
                    "sent": "This is the motion JPEG which encodes.",
                    "label": 0
                },
                {
                    "sent": "Each picture is still basically each frame is still JPEG picture.",
                    "label": 0
                },
                {
                    "sent": "This is whatever MPEG codec is and this is aged 26 type of codec.",
                    "label": 0
                },
                {
                    "sent": "Whatever you some code I got the application layer.",
                    "label": 0
                },
                {
                    "sent": "And then.",
                    "label": 0
                },
                {
                    "sent": "Use RTP packets to encode or drank capsulatus.",
                    "label": 0
                },
                {
                    "sent": "Basically units of video.",
                    "label": 0
                },
                {
                    "sent": "And then these are transported over UDP an IP.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "Bottom physical layer basically, and on the other side there is a session description protocol that controls the connection, so this is the initial request of streaming file, for example from a server or in case of interactive communication application.",
                    "label": 0
                },
                {
                    "sent": "This is a signaling part that governs the signaling of the session control.",
                    "label": 0
                },
                {
                    "sent": "The signaling usually goes over TCP and the media packets goes over UDP in a typical basically.",
                    "label": 0
                },
                {
                    "sent": "Pushpay streaming",
                    "label": 0
                }
            ]
        },
        "clip_32": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Application.",
                    "label": 0
                },
                {
                    "sent": "I have a few words about.",
                    "label": 0
                },
                {
                    "sent": "RTP here.",
                    "label": 0
                }
            ]
        },
        "clip_33": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "RTP is basically.",
                    "label": 0
                },
                {
                    "sent": "Wanna provide the following type of?",
                    "label": 0
                },
                {
                    "sent": "Service payload type identification.",
                    "label": 0
                },
                {
                    "sent": "So when you receive an RTP packet, you know.",
                    "label": 0
                },
                {
                    "sent": "What type of payload does it have?",
                    "label": 0
                },
                {
                    "sent": "Is it MPEG four?",
                    "label": 0
                },
                {
                    "sent": "Is it M JPEG or whatever the codec is?",
                    "label": 0
                },
                {
                    "sent": "Or is it an audio packet because RTP also encapsulates audio packets sequence numbering to ensure resequencing?",
                    "label": 1
                },
                {
                    "sent": "And loss detection at the receiving side, timestamping this is basically if you sent audio and video, they go in different RTP sessions and then use the RTP timestamps to synchronize.",
                    "label": 0
                },
                {
                    "sent": "The audio and video packets and RTP usually goes together with our TCP, which is the control protocol and provides feedback of receipt.",
                    "label": 1
                }
            ]
        },
        "clip_34": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Of packets.",
                    "label": 0
                },
                {
                    "sent": "So this is again.",
                    "label": 0
                },
                {
                    "sent": "To show that RTP.",
                    "label": 0
                },
                {
                    "sent": "Runs at the application layer over the operating system boundary, so this is under the operating system.",
                    "label": 0
                },
                {
                    "sent": "An RTP runs at the application, so RTP Packetization is done at the application layer.",
                    "label": 0
                },
                {
                    "sent": "And just a small word, basically TCP.",
                    "label": 0
                },
                {
                    "sent": "TCP if you're running TCP here, I didn't put TCP or because it really doesn't make too much sense to run RTP over TCP, because TCP actually.",
                    "label": 0
                },
                {
                    "sent": "Chops and chips packet at the transport layer under the operating system.",
                    "label": 0
                },
                {
                    "sent": "Without your control, pretty much, and so RTP packetization together with TCP doesn't make too much sense.",
                    "label": 0
                },
                {
                    "sent": "Usually that's why RTP is used over UDP.",
                    "label": 0
                }
            ]
        },
        "clip_35": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "He OK, so this is just a few comments about audio and video.",
                    "label": 0
                },
                {
                    "sent": "Sessions under RTP.",
                    "label": 0
                },
                {
                    "sent": "I'll skip the details.",
                    "label": 0
                }
            ]
        },
        "clip_36": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And there are different RDP.",
                    "label": 0
                },
                {
                    "sent": "Payload formats for different codecs, so each codec.",
                    "label": 1
                },
                {
                    "sent": "Basically, has it.",
                    "label": 0
                },
                {
                    "sent": "RTP payload format.",
                    "label": 0
                },
                {
                    "sent": "The shoot for its payload type and RTP really does not guarantee delivery or prevent out of.",
                    "label": 1
                },
                {
                    "sent": "Order delivery or timely deliberate.",
                    "label": 0
                },
                {
                    "sent": "It doesn't guarantee any of these, but just basically.",
                    "label": 0
                },
                {
                    "sent": "Put time stamps so that you can check whether things are delivered.",
                    "label": 0
                }
            ]
        },
        "clip_37": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "On time or not.",
                    "label": 0
                },
                {
                    "sent": "Anyway, now let's come to.",
                    "label": 0
                },
                {
                    "sent": "Little bit of HTTP based streaming.",
                    "label": 0
                },
                {
                    "sent": "This is the pool scenario.",
                    "label": 0
                },
                {
                    "sent": "And here.",
                    "label": 0
                },
                {
                    "sent": "We know that HTTP runs over TCP and the client sends get comments to request the content from the server and there are the older approach for HTTP streaming is progressive download which is really.",
                    "label": 1
                },
                {
                    "sent": "Downloading a file, but you start playback before the download is complete.",
                    "label": 0
                },
                {
                    "sent": "So this is the old approach.",
                    "label": 0
                },
                {
                    "sent": "The more recent HTTPS streamers provide adaptive video streaming capability.",
                    "label": 0
                },
                {
                    "sent": "And this you do by dividing the video into chunks.",
                    "label": 0
                },
                {
                    "sent": "An instead of requesting the file, you request chunks at a time and then you can basically request different types of chunks or different chunks of video code at different bitrates depending your.",
                    "label": 0
                },
                {
                    "sent": "Transmit rate so you can adapt basically streaming quality.",
                    "label": 0
                },
                {
                    "sent": "With the intelligence being at the client and not at the sender.",
                    "label": 0
                }
            ]
        },
        "clip_38": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Uh, here is actually.",
                    "label": 0
                },
                {
                    "sent": "What we are doing and sattazahn project.",
                    "label": 0
                },
                {
                    "sent": "This is a European project which I will mention shortly and in the same project.",
                    "label": 0
                },
                {
                    "sent": "We know from Portugal actually developed a system based on HTTP streaming of chunks, and this is an adaptive streaming HTTP adaptive streaming application.",
                    "label": 0
                },
                {
                    "sent": "Basically the.",
                    "label": 0
                },
                {
                    "sent": "Streaming server contains chunks, and these chunks contains parts of the video file, and you can actually have video encoded at different rates.",
                    "label": 0
                },
                {
                    "sent": "For example, you can encode the video at one megabit, and you can encode the video at 2 megabits, and you can encode the video at 500 kilobits and then from chunks of video encode at different bitrates.",
                    "label": 0
                },
                {
                    "sent": "And then the client here knowing its current bandwidth.",
                    "label": 0
                },
                {
                    "sent": "Requestor appropriate chunks so there is a manifest file which basically lets the.",
                    "label": 0
                },
                {
                    "sent": "Client null what type of chunks are available at the server, so there is a manifest file here.",
                    "label": 0
                },
                {
                    "sent": "The client first request the manifest file and the manifest file says that while for this video at the server that are chunks quoted at 500.",
                    "label": 0
                },
                {
                    "sent": "One megabit and two megabytes, and now the.",
                    "label": 0
                },
                {
                    "sent": "Client knows what's available there.",
                    "label": 0
                },
                {
                    "sent": "An knows its current bandwidth requests appropriate chunks for different parts of the video, and it does so by issuing yet comments.",
                    "label": 0
                },
                {
                    "sent": "So there's an HTTP get channel 001, which basically requests this chunk and chunk is delivered and then.",
                    "label": 0
                },
                {
                    "sent": "It may decide not to request trying to, but request chunk three later, and chunk four and so forth, so that decisions are all made that client.",
                    "label": 0
                },
                {
                    "sent": "And through the get comments and looking at the manifest file, that's basically very simple design and very effective design.",
                    "label": 0
                }
            ]
        },
        "clip_39": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, now.",
                    "label": 0
                },
                {
                    "sent": "How to deal with that very impairments?",
                    "label": 0
                },
                {
                    "sent": "What are delivery improvements?",
                    "label": 0
                },
                {
                    "sent": "First of all well?",
                    "label": 0
                },
                {
                    "sent": "Packets may be delayed if you are talking about TCP, packets may be delayed.",
                    "label": 0
                },
                {
                    "sent": "If you're talking about UDP, packets may be lost.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "Packets may be delivered out of order.",
                    "label": 0
                },
                {
                    "sent": "Packets may be replicated.",
                    "label": 0
                },
                {
                    "sent": "Because TCP issues repeat requests after some periods and you may actually have duplicate copies of same packet.",
                    "label": 0
                },
                {
                    "sent": "If the original packet is delayed and you may have some bit errors, this is typically for the wireless applications.",
                    "label": 1
                },
                {
                    "sent": "And so basically, how do you deal with?",
                    "label": 0
                }
            ]
        },
        "clip_40": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Is.",
                    "label": 0
                },
                {
                    "sent": "Well, the main reason.",
                    "label": 0
                }
            ]
        },
        "clip_41": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Or",
                    "label": 0
                }
            ]
        },
        "clip_42": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Delay and loss are congestion.",
                    "label": 0
                },
                {
                    "sent": "So you have to 1st.",
                    "label": 0
                },
                {
                    "sent": "Try to avoid congestion.",
                    "label": 0
                },
                {
                    "sent": "As much as possible.",
                    "label": 0
                }
            ]
        },
        "clip_43": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "How do you avoid congestion?",
                    "label": 0
                },
                {
                    "sent": "How to avoid congestion?",
                    "label": 0
                },
                {
                    "sent": "For example, we use rate control and TCP as I mentioned before, has its own rate control mechanism.",
                    "label": 0
                },
                {
                    "sent": "An if a packet is dropped at that router.",
                    "label": 0
                },
                {
                    "sent": "Or delayed at the router.",
                    "label": 0
                },
                {
                    "sent": "Then TCP interprets this as a sign of congestion and cut your rate by half.",
                    "label": 1
                },
                {
                    "sent": "And then TCP periodically probes the network.",
                    "label": 0
                },
                {
                    "sent": "To check whether more bandwidth becomes available, and if so, basically then it lets you increase your transmission rate.",
                    "label": 0
                }
            ]
        },
        "clip_44": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Slowly, in a negative fashion, TF RC is the more friendly, basically TCP friendly rate control.",
                    "label": 1
                },
                {
                    "sent": "An it again the tax.",
                    "label": 1
                },
                {
                    "sent": "Basically problems with network and the text or estimates the round trip.",
                    "label": 0
                },
                {
                    "sent": "Time.",
                    "label": 0
                },
                {
                    "sent": "And using this in a formula.",
                    "label": 1
                },
                {
                    "sent": "Computes.",
                    "label": 0
                },
                {
                    "sent": "The currently available rate in the network as a function of RTT.",
                    "label": 0
                }
            ]
        },
        "clip_45": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, now the.",
                    "label": 0
                },
                {
                    "sent": "Let's assume we.",
                    "label": 0
                },
                {
                    "sent": "Somehow?",
                    "label": 0
                },
                {
                    "sent": "Use rate control to avoid.",
                    "label": 0
                },
                {
                    "sent": "Congestion, but now.",
                    "label": 0
                },
                {
                    "sent": "What can we do in case of congestion if we cannot avoid congestion while the first thing is the application layer framing principle which basically says that video packets.",
                    "label": 1
                },
                {
                    "sent": "Must be self decodable or self contained packets so you don't really.",
                    "label": 0
                },
                {
                    "sent": "Arbitrarily chop and ship the bitstream, but you organize the bitstream into network access units which are slices of video and slices of video are designed to be independent decodable.",
                    "label": 0
                },
                {
                    "sent": "So that's the main principle to avoid the error propagation.",
                    "label": 0
                },
                {
                    "sent": "In case of a packet loss.",
                    "label": 1
                },
                {
                    "sent": "So if you make the slices self contained and if you lose one slice of video or one packet of video in one slice into one packet case, basically lose one packet means lose one slice, in which case the effect of this loss will be contained in typically in a group of pictures of video not propagate all over basically entire the bitstream.",
                    "label": 0
                },
                {
                    "sent": "Therefore we have to use this application layer framing using slices and putting slices into packets, and this actually design was ensured.",
                    "label": 0
                },
                {
                    "sent": "And H264 an SVC by the introduction of network access layer units now units and all units basically make sure that you don't randomly championship the video.",
                    "label": 0
                }
            ]
        },
        "clip_46": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "Basically.",
                    "label": 0
                },
                {
                    "sent": "Application or automatic repeat requests at the application layer is another way to deal with late packets.",
                    "label": 1
                },
                {
                    "sent": "So you can basically request packets in a timely fashion.",
                    "label": 0
                },
                {
                    "sent": "At the application layer.",
                    "label": 0
                },
                {
                    "sent": "So as I said.",
                    "label": 0
                },
                {
                    "sent": "TCP already implements.",
                    "label": 0
                },
                {
                    "sent": "Repeat requests, but that's in the operating system.",
                    "label": 0
                },
                {
                    "sent": "You cannot control that.",
                    "label": 0
                },
                {
                    "sent": "TCP does it in its own version.",
                    "label": 0
                },
                {
                    "sent": "What we're talking here is application layer repeat requests.",
                    "label": 0
                },
                {
                    "sent": "So if you're running UDP.",
                    "label": 0
                },
                {
                    "sent": "Then the operating system will not request repeats for you, but you can do so at the application layer.",
                    "label": 0
                },
                {
                    "sent": "And your own application in a more timely fashion than the TCP would do it.",
                    "label": 0
                },
                {
                    "sent": "So you can control the number of repeats and the time window.",
                    "label": 0
                },
                {
                    "sent": "That repeat request will be made at the application layer.",
                    "label": 1
                },
                {
                    "sent": "So this is an alternative approach to TCP repeat requests.",
                    "label": 0
                },
                {
                    "sent": "These are application layer repeat requests.",
                    "label": 0
                }
            ]
        },
        "clip_47": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "An application layer forward error correction.",
                    "label": 1
                },
                {
                    "sent": "This is another way to deal with packet losses.",
                    "label": 0
                },
                {
                    "sent": "I'll skip the deed.",
                    "label": 0
                }
            ]
        },
        "clip_48": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Sales in the interest of time.",
                    "label": 0
                },
                {
                    "sent": "But there is an RFC ETF RFC that describes how you do packet base FEC.",
                    "label": 0
                },
                {
                    "sent": "At the application layer.",
                    "label": 0
                }
            ]
        },
        "clip_49": {
            "is_summarization_sample": false,
            "summarization_data": []
        },
        "clip_50": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And finally, ATF.",
                    "label": 0
                },
                {
                    "sent": "Invented some mechanisms for QoS quality of service, Diffserv.",
                    "label": 0
                },
                {
                    "sent": "An RSVP an MPLS are.",
                    "label": 0
                },
                {
                    "sent": "Different ETF?",
                    "label": 0
                },
                {
                    "sent": "Documents that describe how to implement quality of service, but they are not really diploid on real networks so.",
                    "label": 0
                },
                {
                    "sent": "Again, I'll skip the details.",
                    "label": 0
                }
            ]
        },
        "clip_51": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Error resilient video coding while basically.",
                    "label": 0
                },
                {
                    "sent": "We talked about making these slices.",
                    "label": 0
                },
                {
                    "sent": "Self content, and to do that you have to.",
                    "label": 0
                },
                {
                    "sent": "Really.",
                    "label": 0
                },
                {
                    "sent": "Know what to do at video encoding level as well, so we either use in for updates in in fact keyframes into the video encoding.",
                    "label": 0
                },
                {
                    "sent": "So that you can basically.",
                    "label": 0
                },
                {
                    "sent": "Contain the loss of a packet into neighborhood of pictures.",
                    "label": 0
                },
                {
                    "sent": "A group of pigs.",
                    "label": 0
                }
            ]
        },
        "clip_52": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "There's.",
                    "label": 0
                },
                {
                    "sent": "Or we can employ.",
                    "label": 0
                },
                {
                    "sent": "Actually we can do both of them at the same time.",
                    "label": 0
                },
                {
                    "sent": "Robust prediction structures such as hierarchical B pictures, hierarchal beat prediction basically as well as multiple reference frames.",
                    "label": 1
                },
                {
                    "sent": "So a single reference is lossed.",
                    "label": 0
                },
                {
                    "sent": "We can rely on the other reference.",
                    "label": 0
                },
                {
                    "sent": "So these are approaches to be taken at the video.",
                    "label": 0
                },
                {
                    "sent": "And coding level to ensure.",
                    "label": 0
                },
                {
                    "sent": "To contain the damage of loss packets at the transport layer.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_53": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "And finally, this scalable video coding is remedy.",
                    "label": 1
                },
                {
                    "sent": "For.",
                    "label": 0
                },
                {
                    "sent": "Packet loss is because now you can.",
                    "label": 1
                },
                {
                    "sent": "Divide the video into layers of base layer, an enhancement layer or multiple enhancement layers and make sure that the base layer is well protected.",
                    "label": 0
                },
                {
                    "sent": "This is the unequal error protection approach, so we talked about FEC.",
                    "label": 0
                },
                {
                    "sent": "For example.",
                    "label": 0
                },
                {
                    "sent": "You can employ FEC only on the base layer packets, or you can repeat requests at the application layer only for the base layer packets.",
                    "label": 1
                },
                {
                    "sent": "So there are certain things you can do to make sure that the base layer packets are delivered on time, and if your enhancement layer packets are lost, so be it because they don't really affect the.",
                    "label": 0
                },
                {
                    "sent": "Continuous playback of the video.",
                    "label": 0
                },
                {
                    "sent": "The quality will fluctuate, but the continuous playback will not be affected.",
                    "label": 0
                }
            ]
        },
        "clip_54": {
            "is_summarization_sample": false,
            "summarization_data": []
        },
        "clip_55": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And there are concealment approaches.",
                    "label": 0
                },
                {
                    "sent": "That we can use now.",
                    "label": 0
                },
                {
                    "sent": "This is basically to show.",
                    "label": 0
                },
                {
                    "sent": "That the quality of the video.",
                    "label": 1
                },
                {
                    "sent": "Does not necessarily monotonically increase as you increase the video encoding rate.",
                    "label": 0
                },
                {
                    "sent": "This is the video encoding rate.",
                    "label": 0
                },
                {
                    "sent": "If there is a bottleneck band that in your network and if you increase the encoding rate beyond that, then your quality goes back down.",
                    "label": 0
                },
                {
                    "sent": "So you have to really do the video encoding and the transport in synchronous fashion, so you decide your encoding rates or the base layer rates depending on the.",
                    "label": 0
                },
                {
                    "sent": "Transport scenario, you're going to use, otherwise the increasing bitrate may actually lead to.",
                    "label": 0
                },
                {
                    "sent": "Loss of video quality.",
                    "label": 0
                },
                {
                    "sent": "And this is the actually.",
                    "label": 1
                },
                {
                    "sent": "The main reason people have moved on to adaptive streaming scenarios few years ago, since let's say 2005 or so adaptive streaming has become the basically mainstream approach before people were streaming H264 MPEG.",
                    "label": 0
                },
                {
                    "sent": "Where is the video at a fixed rate.",
                    "label": 0
                },
                {
                    "sent": "An packets were basically lossed.",
                    "label": 1
                },
                {
                    "sent": "In case of congestion and nothing was done to prevent that, but.",
                    "label": 0
                },
                {
                    "sent": "Adaptive streaming is an approach which basically.",
                    "label": 0
                },
                {
                    "sent": "Puts the video encoding.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "Transmission into.",
                    "label": 0
                },
                {
                    "sent": "Some synchro?",
                    "label": 0
                }
            ]
        },
        "clip_56": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "City.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "This is.",
                    "label": 0
                },
                {
                    "sent": "One approach for adaptive streaming encode the video in multiple streams.",
                    "label": 1
                },
                {
                    "sent": "And then you do stream switching.",
                    "label": 0
                },
                {
                    "sent": "Adaptively.",
                    "label": 0
                },
                {
                    "sent": "And sure stream actually has existed for long time, maybe over 10 years now and basically implements the stream switching according to the network condition.",
                    "label": 0
                },
                {
                    "sent": "Windows has intelligence streaming scenarios similar to stream, but sure stream was the leader basically in this.",
                    "label": 0
                },
                {
                    "sent": "Originally and then came adaptive streaming based on SVC scalable video coding.",
                    "label": 0
                }
            ]
        },
        "clip_57": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And basically, in an adaptive streaming application, you first estimate the instantaneous bandwidth.",
                    "label": 1
                },
                {
                    "sent": "You can do so using the TFC rates.",
                    "label": 1
                },
                {
                    "sent": "TCP friendly rate control rate basically and then adapt the source rate to the TFC rate or the CCP rate.",
                    "label": 1
                },
                {
                    "sent": "And then in case of using scalable video, employ additional protection for the base layer packets.",
                    "label": 0
                },
                {
                    "sent": "So this is the best scenario for basically.",
                    "label": 0
                },
                {
                    "sent": "Adaptive streaming use SVC.",
                    "label": 0
                },
                {
                    "sent": "Scalable video coding.",
                    "label": 0
                },
                {
                    "sent": "First protect your base layer packets with extra protection and then adapt source rates.",
                    "label": 0
                },
                {
                    "sent": "The number of layers in the video basically remember this 11 layer scenario I draw before select the number of layers according to your current instantaneous bandwidth, which you can estimate using the TFC rate of the network.",
                    "label": 0
                },
                {
                    "sent": "So that's basically a standard approach for.",
                    "label": 0
                },
                {
                    "sent": "Rate control or adaptive streaming, basically.",
                    "label": 0
                }
            ]
        },
        "clip_58": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So these are the.",
                    "label": 0
                }
            ]
        },
        "clip_59": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Different ways to.",
                    "label": 0
                }
            ]
        },
        "clip_60": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Adaptive right now, let me say a few words about rate, adaptacion and multicast because that's an important.",
                    "label": 0
                },
                {
                    "sent": "A way to move on to the peer to peer radio.",
                    "label": 0
                },
                {
                    "sent": "While the bottleneck bandwidth.",
                    "label": 0
                },
                {
                    "sent": "And I'm all ticket scenario is not the same for everyone.",
                    "label": 1
                },
                {
                    "sent": "Remember the video goes up to a point.",
                    "label": 0
                },
                {
                    "sent": "At the single rate and then split the different receivers.",
                    "label": 0
                },
                {
                    "sent": "At a later stage, so we have to put this.",
                    "label": 0
                },
                {
                    "sent": "Adaptive streaming intelligence at that last node in the network where this occurs because you cannot do that, that source in a multicast scenario because the bottleneck bandwidth will not be the same for all the receivers.",
                    "label": 0
                },
                {
                    "sent": "There are different ways if you want to do this at the sender.",
                    "label": 0
                },
                {
                    "sent": "You can take the.",
                    "label": 0
                },
                {
                    "sent": "Worst case basically receiver.",
                    "label": 1
                },
                {
                    "sent": "Or you can take the mean opinion.",
                    "label": 0
                },
                {
                    "sent": "Of all the bottleneck bandwidth, but these are suboptimal approaches.",
                    "label": 0
                },
                {
                    "sent": "The better approach is.",
                    "label": 0
                },
                {
                    "sent": "Either do the intelligence at the last note before the split.",
                    "label": 0
                },
                {
                    "sent": "Which is difficult.",
                    "label": 0
                },
                {
                    "sent": "The better approach is to put the intelligence at the receiver.",
                    "label": 0
                },
                {
                    "sent": "So going back to the pool base scenario, this is relatively easy to do.",
                    "label": 0
                },
                {
                    "sent": "Adaptive streaming in a pool based application pool based multicast application.",
                    "label": 0
                },
                {
                    "sent": "The scenario is the following.",
                    "label": 0
                },
                {
                    "sent": "You encode the video with SVC.",
                    "label": 1
                },
                {
                    "sent": "And then established different multicast groups, one group for the base layer.",
                    "label": 0
                },
                {
                    "sent": "An another group for the enhancement layers.",
                    "label": 0
                },
                {
                    "sent": "And since the client here.",
                    "label": 0
                },
                {
                    "sent": "This is the source of multicast, and these are the clients, and since the clients know their bottleneck bandwidths, they can subscribe to different multicast groups.",
                    "label": 0
                },
                {
                    "sent": "Low bandwidth client.",
                    "label": 0
                },
                {
                    "sent": "Subscribes only to the base layer multicast group.",
                    "label": 0
                },
                {
                    "sent": "And a higher bandwidth client subscribes to both base layer, an enhancement layer.",
                    "label": 0
                },
                {
                    "sent": "Multicast groups.",
                    "label": 0
                },
                {
                    "sent": "So higher bandwidth client receives both base layer and enhancement layer.",
                    "label": 0
                },
                {
                    "sent": "Multicast streams, whereas a low bandwidth client receives only the base layer.",
                    "label": 0
                },
                {
                    "sent": "And it makes the decision itself not the source or the network.",
                    "label": 0
                },
                {
                    "sent": "The client makes the decision, so this is the way to move to.",
                    "label": 0
                },
                {
                    "sent": "Basically adaptive multicast streaming.",
                    "label": 1
                },
                {
                    "sent": "Put the intelligence that declines an form different multicast groups.",
                    "label": 0
                },
                {
                    "sent": "One for the base layer and another and maybe others for enhancement layers since of SVC.",
                    "label": 0
                },
                {
                    "sent": "And then basically each client makes its own decision to which multicast groups to join, and this is the way we make the transition to the peer to peer streaming.",
                    "label": 0
                }
            ]
        },
        "clip_61": {
            "is_summarization_sample": false,
            "summarization_data": []
        }
    }
}