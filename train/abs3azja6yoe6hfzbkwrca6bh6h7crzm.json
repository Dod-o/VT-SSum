{
    "id": "abs3azja6yoe6hfzbkwrca6bh6h7crzm",
    "title": "Question Answering over Linked Data",
    "info": {
        "author": [
            "Nikolay Radoev, Polytechnique Montr\u00e9al"
        ],
        "published": "July 10, 2017",
        "recorded": "May 2017",
        "category": [
            "Top->Computer Science->Big Data",
            "Top->Computer Science->Semantic Web"
        ]
    },
    "url": "http://videolectures.net/eswc2017_radoev_linked_data/",
    "segmentation": [
        [
            "We are from protecting morale, and that's going to explain."
        ],
        [
            "Why we're doing it in French?",
            "So we called it ask me in any language, even though right now any just French.",
            "Just because a mile is one of our supervisors and let's you thought it was funny at three in the morning.",
            "And we also have a web portal through which you can actually ask questions and hopefully get some results.",
            "So."
        ],
        [
            "So the system description.",
            "So we focus on the French language."
        ],
        [
            "For now, and the reason why is 'cause we're from Qu\u00e9bec and Qu\u00e9bec, is this little like island of French in a huge sea of English with the rest of Canada in America an people from Qu\u00e9bec really, really like to show that they are French and they're not actually.",
            "Like the rest of the Canadians.",
            "So our system does not rely on given keywords.",
            "This is a decision we took or was kind of posed to us by our supervisor because most of the time when we all go and ask questions on Google.",
            "I'm sorry Google Bing, whatever.",
            "We don't put keywords, we just put the question and hope we get the right answer.",
            "So we know we don't have any modifications to the question format, so you input your question in our system, you don't have to specify give a specific order.",
            "You have specific grammar.",
            "We try to do our best with what we're given.",
            "An we also primarily focus on simple questions and what is a simple question will come right in the next slide.",
            "So for those who just want to know what are we doing is we analyze giving questions.",
            "We just build a specific sparkle query to find the answer in DB pedia.",
            "We only focus on DB pedia information, right?"
        ],
        [
            "So what is a simple question?",
            "We have a single entity property relationship.",
            "For example, Keely pulls the barrack, Obama or English.",
            "Who is Barack Obama's wife?",
            "We have Barack Obama being an entity and it pulls or spouse of being the property.",
            "We also support entity entity relationship for questions that are like closed ended questions.",
            "Yes or no questions.",
            "So Michelle Obama, a lips, the rock Obama or is Michelle Obama the wife of Barack Obama?",
            "We have Michelle Obama, Barack Obama who are both entities and we have pools or spouse of being the relationship between both of them.",
            "And we also have limited support from more complex questions, but we have not developed that in this particular challenge."
        ],
        [
            "So this is basically the flow of water system is we have a question.",
            "The first step is go through a question type analyzer so we have multiple question types that we're going to see later, and depending on the question type we use specific question solver, which is the like the core of our system and that question solver uses different touristics based on the type.",
            "Sorry the type and finally we run it through a sparkle query builder so we can go query DB pedia.",
            "And getting information to hopefully get an answer.",
            "So what is the question type analyzer?"
        ],
        [
            "We have four question types.",
            "We have date, Boolean number and resource, so anything that is not a we cannot find a match is not a date is not a Boolean data number.",
            "We put it as a default resource.",
            "We also have questions subtypes which are lists and aggregations.",
            "So list is simple.",
            "It's whenever the answer has more than one entity.",
            "Aggregation, however, has two different types of.",
            "Like subtypes I guess one specific ordering so we have to order the information either by ascending or descending or particular order and we have counting for example, we have to count how many people or how many entities are there to get the final result."
        ],
        [
            "So every question is over.",
            "As I said, it gets its type and then has two main.",
            "Main subsystems, subsystems.",
            "The Entity extractor, which pretty much removes all unnecessary words from the free phrase.",
            "So that leaves the removes all of the question words or the determinants of the unnecessary words, then finds all the non groups and the rest of the phrase and looks on DB pedia for entities.",
            "We also add a same as or translator module to make sure we find the most entities possible.",
            "Because we're working on French and the French DP Pedia is not as big as not as rich as the English one.",
            "We also have a property extractor which.",
            "Takes on entities that was already found in the phrase.",
            "Then tries with the remaining tokens in the phrase to find a property.",
            "We use DP and disambiguation links.",
            "To find a property, for example, if we have a question like who is the producer of Titanic and we find Titanic is an entity?",
            "Well, Titanic in DPD normally shows you the boat, but the boat does not have a producer so we follow the simulation link.",
            "So we find Titanic film and Titanic film of course has a producer.",
            "So that is another way to find a more accurate answer.",
            "So that ran."
        ],
        [
            "Later, given that we're doing this in French and the challenge requires us to have answers in English, we have to translate our entities.",
            "This is maybe one of the weak link in order system, because we found that using Google API this is not actually deterministic.",
            "If we ask Google the same phrase 3 four times in a row, we don't always get the same answer.",
            "So that might be one of the problem and that's one of the challenges when you have to deal with languages that are not English.",
            "So that's why we have some manual translations.",
            "So every question solver also has what we call custom rules.",
            "So there all the questions solvers are implemented like modules, so we can take her system, inherit from the base questions over an, implement your own questions over with your own rules.",
            "That means that if we ever want to implement another language or another type of question, all you have to do is remove the old module plugin you one and code it correctly.",
            "So."
        ],
        [
            "Example, we have aggregation custom rules.",
            "If we have to find the difference between order ordering and counting.",
            "So for example, the sequence determinant adverb adjective is for ordering.",
            "So the highest mountain or the tallest player.",
            "So we always have this sequence that shows us that we have to find something that requires a particular ordering, either ascending or descending.",
            "Ordering questions are sometimes tricky, so we have tallest or highest which are.",
            "Normally descending type questions when you get tallest you have you order everybody and you take the first one from a descending order.",
            "However, if you have a date, you have to inverse it, because if you ask for the youngest or youngest is what somebody who's born more recently.",
            "But that means the date is actually the highest.",
            "So somebody born in 1970 as a hire date that somebody born in 1969, even though the person in 1970 is younger.",
            "And finally."
        ],
        [
            "This Parco querybuilder so we support ask and select queries.",
            "For example one.",
            "How much did Pulp Fiction cost?",
            "It's a pretty simple.",
            "Select question we also support count in order by for all the aggregation questions.",
            "So here how many languages are spoken to Mickey?",
            "Stan is a count question, so we have to go in to make the web page find all the languages and count the number of entities we find we all."
        ],
        [
            "We have ordered by so who is the oldest child of Meryl Streep?",
            "Then we select all the children that are all the children of Meryl Streep and then we have to order by and then again this is the tricky part where.",
            "If we look at we are looking for the oldest child where we ordered by ascending because of the whole date inversion thing.",
            "So here is."
        ],
        [
            "Simple example of what a question might work in our system.",
            "So we have, is Michelle Obama the wife of Barack Obama.",
            "First step is to find the question type.",
            "It's a Boolean yes or no question.",
            "Then we remove all the unnecessary words so we have Michelle Obama labels the back, So remove the is remove the verb because we don't need it anymore.",
            "It's not part of the question.",
            "Then using our entry extractor we find 2 entities Michelle Obama and Barack Obama.",
            "We then find a relationship between them.",
            "Which is it?",
            "Pulls or spouse?",
            "And using that we build our query and we get a result which is true for now."
        ],
        [
            "And here's an aggregation example.",
            "Who is the tallest basketball player?",
            "So we find that it's a resource and it's an aggregation question.",
            "We also remove that.",
            "Who is the tallest?",
            "Because we don't need it for our query.",
            "We just need basketball player.",
            "And that is of course the entity that we find basketball player.",
            "Then we keep in memory that our aggregation keyword, which is tallest or loop recall in French.",
            "And that lets us know that we have to.",
            "Select this is also a.",
            "The wrong sparkle query, but imagine that as a aggregation, I'm sorry.",
            "Oh, never mind, I got it.",
            "I'm confused.",
            "So yeah, we the tallest tells us that we have to order by descending order.",
            "Can we get a result?",
            "So the evaluation."
        ],
        [
            "And so we use the 2017 train data set.",
            "There were 211 questions out of them, 165 were considered simple questions.",
            "So entity property and the entity relationship out of them we managed to get 150 of them correct, which gives us an average of like 91% of accuracy.",
            "However, given that we also focus so much on the simple questions, we had less results on the total question.",
            "So the total question.",
            "The total average is lower, around 77%.",
            "So what do you?"
        ],
        [
            "Hope we want to do.",
            "Our system is support more complex questions so more than one entity more than one property, multiple multiple relationships support multiple languages, so not just French.",
            "More generic rules.",
            "Instead of having some of hard coded translations and use multiple version of the Pedia, which also links to the same sort of different questions.",
            "So."
        ],
        [
            "Questions, comments, insults?",
            "OK, thank you very much."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We are from protecting morale, and that's going to explain.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Why we're doing it in French?",
                    "label": 0
                },
                {
                    "sent": "So we called it ask me in any language, even though right now any just French.",
                    "label": 1
                },
                {
                    "sent": "Just because a mile is one of our supervisors and let's you thought it was funny at three in the morning.",
                    "label": 0
                },
                {
                    "sent": "And we also have a web portal through which you can actually ask questions and hopefully get some results.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So the system description.",
                    "label": 0
                },
                {
                    "sent": "So we focus on the French language.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "For now, and the reason why is 'cause we're from Qu\u00e9bec and Qu\u00e9bec, is this little like island of French in a huge sea of English with the rest of Canada in America an people from Qu\u00e9bec really, really like to show that they are French and they're not actually.",
                    "label": 0
                },
                {
                    "sent": "Like the rest of the Canadians.",
                    "label": 0
                },
                {
                    "sent": "So our system does not rely on given keywords.",
                    "label": 1
                },
                {
                    "sent": "This is a decision we took or was kind of posed to us by our supervisor because most of the time when we all go and ask questions on Google.",
                    "label": 0
                },
                {
                    "sent": "I'm sorry Google Bing, whatever.",
                    "label": 0
                },
                {
                    "sent": "We don't put keywords, we just put the question and hope we get the right answer.",
                    "label": 0
                },
                {
                    "sent": "So we know we don't have any modifications to the question format, so you input your question in our system, you don't have to specify give a specific order.",
                    "label": 0
                },
                {
                    "sent": "You have specific grammar.",
                    "label": 0
                },
                {
                    "sent": "We try to do our best with what we're given.",
                    "label": 1
                },
                {
                    "sent": "An we also primarily focus on simple questions and what is a simple question will come right in the next slide.",
                    "label": 0
                },
                {
                    "sent": "So for those who just want to know what are we doing is we analyze giving questions.",
                    "label": 0
                },
                {
                    "sent": "We just build a specific sparkle query to find the answer in DB pedia.",
                    "label": 0
                },
                {
                    "sent": "We only focus on DB pedia information, right?",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So what is a simple question?",
                    "label": 0
                },
                {
                    "sent": "We have a single entity property relationship.",
                    "label": 0
                },
                {
                    "sent": "For example, Keely pulls the barrack, Obama or English.",
                    "label": 0
                },
                {
                    "sent": "Who is Barack Obama's wife?",
                    "label": 0
                },
                {
                    "sent": "We have Barack Obama being an entity and it pulls or spouse of being the property.",
                    "label": 0
                },
                {
                    "sent": "We also support entity entity relationship for questions that are like closed ended questions.",
                    "label": 0
                },
                {
                    "sent": "Yes or no questions.",
                    "label": 0
                },
                {
                    "sent": "So Michelle Obama, a lips, the rock Obama or is Michelle Obama the wife of Barack Obama?",
                    "label": 1
                },
                {
                    "sent": "We have Michelle Obama, Barack Obama who are both entities and we have pools or spouse of being the relationship between both of them.",
                    "label": 0
                },
                {
                    "sent": "And we also have limited support from more complex questions, but we have not developed that in this particular challenge.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So this is basically the flow of water system is we have a question.",
                    "label": 0
                },
                {
                    "sent": "The first step is go through a question type analyzer so we have multiple question types that we're going to see later, and depending on the question type we use specific question solver, which is the like the core of our system and that question solver uses different touristics based on the type.",
                    "label": 0
                },
                {
                    "sent": "Sorry the type and finally we run it through a sparkle query builder so we can go query DB pedia.",
                    "label": 0
                },
                {
                    "sent": "And getting information to hopefully get an answer.",
                    "label": 0
                },
                {
                    "sent": "So what is the question type analyzer?",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We have four question types.",
                    "label": 0
                },
                {
                    "sent": "We have date, Boolean number and resource, so anything that is not a we cannot find a match is not a date is not a Boolean data number.",
                    "label": 1
                },
                {
                    "sent": "We put it as a default resource.",
                    "label": 0
                },
                {
                    "sent": "We also have questions subtypes which are lists and aggregations.",
                    "label": 0
                },
                {
                    "sent": "So list is simple.",
                    "label": 0
                },
                {
                    "sent": "It's whenever the answer has more than one entity.",
                    "label": 0
                },
                {
                    "sent": "Aggregation, however, has two different types of.",
                    "label": 0
                },
                {
                    "sent": "Like subtypes I guess one specific ordering so we have to order the information either by ascending or descending or particular order and we have counting for example, we have to count how many people or how many entities are there to get the final result.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So every question is over.",
                    "label": 0
                },
                {
                    "sent": "As I said, it gets its type and then has two main.",
                    "label": 0
                },
                {
                    "sent": "Main subsystems, subsystems.",
                    "label": 0
                },
                {
                    "sent": "The Entity extractor, which pretty much removes all unnecessary words from the free phrase.",
                    "label": 1
                },
                {
                    "sent": "So that leaves the removes all of the question words or the determinants of the unnecessary words, then finds all the non groups and the rest of the phrase and looks on DB pedia for entities.",
                    "label": 1
                },
                {
                    "sent": "We also add a same as or translator module to make sure we find the most entities possible.",
                    "label": 0
                },
                {
                    "sent": "Because we're working on French and the French DP Pedia is not as big as not as rich as the English one.",
                    "label": 0
                },
                {
                    "sent": "We also have a property extractor which.",
                    "label": 0
                },
                {
                    "sent": "Takes on entities that was already found in the phrase.",
                    "label": 0
                },
                {
                    "sent": "Then tries with the remaining tokens in the phrase to find a property.",
                    "label": 0
                },
                {
                    "sent": "We use DP and disambiguation links.",
                    "label": 0
                },
                {
                    "sent": "To find a property, for example, if we have a question like who is the producer of Titanic and we find Titanic is an entity?",
                    "label": 0
                },
                {
                    "sent": "Well, Titanic in DPD normally shows you the boat, but the boat does not have a producer so we follow the simulation link.",
                    "label": 0
                },
                {
                    "sent": "So we find Titanic film and Titanic film of course has a producer.",
                    "label": 0
                },
                {
                    "sent": "So that is another way to find a more accurate answer.",
                    "label": 0
                },
                {
                    "sent": "So that ran.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Later, given that we're doing this in French and the challenge requires us to have answers in English, we have to translate our entities.",
                    "label": 0
                },
                {
                    "sent": "This is maybe one of the weak link in order system, because we found that using Google API this is not actually deterministic.",
                    "label": 0
                },
                {
                    "sent": "If we ask Google the same phrase 3 four times in a row, we don't always get the same answer.",
                    "label": 0
                },
                {
                    "sent": "So that might be one of the problem and that's one of the challenges when you have to deal with languages that are not English.",
                    "label": 0
                },
                {
                    "sent": "So that's why we have some manual translations.",
                    "label": 1
                },
                {
                    "sent": "So every question solver also has what we call custom rules.",
                    "label": 1
                },
                {
                    "sent": "So there all the questions solvers are implemented like modules, so we can take her system, inherit from the base questions over an, implement your own questions over with your own rules.",
                    "label": 0
                },
                {
                    "sent": "That means that if we ever want to implement another language or another type of question, all you have to do is remove the old module plugin you one and code it correctly.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Example, we have aggregation custom rules.",
                    "label": 1
                },
                {
                    "sent": "If we have to find the difference between order ordering and counting.",
                    "label": 0
                },
                {
                    "sent": "So for example, the sequence determinant adverb adjective is for ordering.",
                    "label": 0
                },
                {
                    "sent": "So the highest mountain or the tallest player.",
                    "label": 1
                },
                {
                    "sent": "So we always have this sequence that shows us that we have to find something that requires a particular ordering, either ascending or descending.",
                    "label": 0
                },
                {
                    "sent": "Ordering questions are sometimes tricky, so we have tallest or highest which are.",
                    "label": 0
                },
                {
                    "sent": "Normally descending type questions when you get tallest you have you order everybody and you take the first one from a descending order.",
                    "label": 0
                },
                {
                    "sent": "However, if you have a date, you have to inverse it, because if you ask for the youngest or youngest is what somebody who's born more recently.",
                    "label": 0
                },
                {
                    "sent": "But that means the date is actually the highest.",
                    "label": 0
                },
                {
                    "sent": "So somebody born in 1970 as a hire date that somebody born in 1969, even though the person in 1970 is younger.",
                    "label": 0
                },
                {
                    "sent": "And finally.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "This Parco querybuilder so we support ask and select queries.",
                    "label": 0
                },
                {
                    "sent": "For example one.",
                    "label": 0
                },
                {
                    "sent": "How much did Pulp Fiction cost?",
                    "label": 1
                },
                {
                    "sent": "It's a pretty simple.",
                    "label": 0
                },
                {
                    "sent": "Select question we also support count in order by for all the aggregation questions.",
                    "label": 0
                },
                {
                    "sent": "So here how many languages are spoken to Mickey?",
                    "label": 0
                },
                {
                    "sent": "Stan is a count question, so we have to go in to make the web page find all the languages and count the number of entities we find we all.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We have ordered by so who is the oldest child of Meryl Streep?",
                    "label": 1
                },
                {
                    "sent": "Then we select all the children that are all the children of Meryl Streep and then we have to order by and then again this is the tricky part where.",
                    "label": 0
                },
                {
                    "sent": "If we look at we are looking for the oldest child where we ordered by ascending because of the whole date inversion thing.",
                    "label": 0
                },
                {
                    "sent": "So here is.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Simple example of what a question might work in our system.",
                    "label": 0
                },
                {
                    "sent": "So we have, is Michelle Obama the wife of Barack Obama.",
                    "label": 1
                },
                {
                    "sent": "First step is to find the question type.",
                    "label": 0
                },
                {
                    "sent": "It's a Boolean yes or no question.",
                    "label": 0
                },
                {
                    "sent": "Then we remove all the unnecessary words so we have Michelle Obama labels the back, So remove the is remove the verb because we don't need it anymore.",
                    "label": 0
                },
                {
                    "sent": "It's not part of the question.",
                    "label": 0
                },
                {
                    "sent": "Then using our entry extractor we find 2 entities Michelle Obama and Barack Obama.",
                    "label": 0
                },
                {
                    "sent": "We then find a relationship between them.",
                    "label": 0
                },
                {
                    "sent": "Which is it?",
                    "label": 0
                },
                {
                    "sent": "Pulls or spouse?",
                    "label": 0
                },
                {
                    "sent": "And using that we build our query and we get a result which is true for now.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And here's an aggregation example.",
                    "label": 1
                },
                {
                    "sent": "Who is the tallest basketball player?",
                    "label": 1
                },
                {
                    "sent": "So we find that it's a resource and it's an aggregation question.",
                    "label": 0
                },
                {
                    "sent": "We also remove that.",
                    "label": 0
                },
                {
                    "sent": "Who is the tallest?",
                    "label": 0
                },
                {
                    "sent": "Because we don't need it for our query.",
                    "label": 0
                },
                {
                    "sent": "We just need basketball player.",
                    "label": 0
                },
                {
                    "sent": "And that is of course the entity that we find basketball player.",
                    "label": 0
                },
                {
                    "sent": "Then we keep in memory that our aggregation keyword, which is tallest or loop recall in French.",
                    "label": 0
                },
                {
                    "sent": "And that lets us know that we have to.",
                    "label": 0
                },
                {
                    "sent": "Select this is also a.",
                    "label": 0
                },
                {
                    "sent": "The wrong sparkle query, but imagine that as a aggregation, I'm sorry.",
                    "label": 0
                },
                {
                    "sent": "Oh, never mind, I got it.",
                    "label": 0
                },
                {
                    "sent": "I'm confused.",
                    "label": 0
                },
                {
                    "sent": "So yeah, we the tallest tells us that we have to order by descending order.",
                    "label": 0
                },
                {
                    "sent": "Can we get a result?",
                    "label": 0
                },
                {
                    "sent": "So the evaluation.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And so we use the 2017 train data set.",
                    "label": 1
                },
                {
                    "sent": "There were 211 questions out of them, 165 were considered simple questions.",
                    "label": 0
                },
                {
                    "sent": "So entity property and the entity relationship out of them we managed to get 150 of them correct, which gives us an average of like 91% of accuracy.",
                    "label": 0
                },
                {
                    "sent": "However, given that we also focus so much on the simple questions, we had less results on the total question.",
                    "label": 0
                },
                {
                    "sent": "So the total question.",
                    "label": 0
                },
                {
                    "sent": "The total average is lower, around 77%.",
                    "label": 1
                },
                {
                    "sent": "So what do you?",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Hope we want to do.",
                    "label": 0
                },
                {
                    "sent": "Our system is support more complex questions so more than one entity more than one property, multiple multiple relationships support multiple languages, so not just French.",
                    "label": 1
                },
                {
                    "sent": "More generic rules.",
                    "label": 0
                },
                {
                    "sent": "Instead of having some of hard coded translations and use multiple version of the Pedia, which also links to the same sort of different questions.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Questions, comments, insults?",
                    "label": 0
                },
                {
                    "sent": "OK, thank you very much.",
                    "label": 0
                }
            ]
        }
    }
}