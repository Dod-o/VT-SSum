{
    "id": "aowrzf5aepc4lfe5ujo5wyuu3jwrkfmq",
    "title": "The Primal-Dual approach for Online Algorithms",
    "info": {
        "author": [
            "Nikhil Bansal, Department of Mathematics and Computer Science, Eindhoven University of Technology"
        ],
        "published": "Oct. 2, 2012",
        "recorded": "September 2012",
        "category": [
            "Top->Computer Science"
        ]
    },
    "url": "http://videolectures.net/algo2012_bansal_online_algorithms/",
    "segmentation": [
        [
            "So I'll be talking about this primal dual approach for online problems, so let me begin."
        ],
        [
            "What's the outline going to be?",
            "So I'll just give a very quick introduction about what online algorithms are.",
            "I assume most of you know this already, but just so that everybody's on the same page, then I'll spend most of the time on this primal dual approach and I'll sort of develop it very slowly, so I'll first give you sort of very basic intuition about LP duality and what this basic method is, and then sort of the key idea of the proof without going in all the details.",
            "And then we look at some case studies of two problems where how this is applied, and then if you have some time in the end, I'll mention about some recent.",
            "Extensions of this."
        ],
        [
            "Turn.",
            "So yeah, what are online algorithms?",
            "Again, as we all know it's the setting where your data is coming over time you don't know everything in upfront.",
            "Things are only coming over time and still you would want to do something reasonable.",
            "Particular algorithm has to make its current decision without knowing what's going to happen in the future, right so?",
            "These kinds of settings arrives very naturally, like in scheduling is a very common example.",
            "Or say if you're investing in the stock market, you don't know what's going to happen tomorrow, but you have to assign your portfolio somehow.",
            "And again, there are various ways in the literature of looking at it.",
            "You can do average case analysis which is like queuing theory various other ways.",
            "But in computer science we look at mostly what's called competitive analysis or sort of the worst case ratio type of thing.",
            "So what is competitive ratio for an algorithm?",
            "So if you're given some online algorithm, let's call it on so competitive ratio is just.",
            "If you look at the worst case ratio over all possible instances of how your online algorithm does versus had you known all the input in advance, what would have been the best?",
            "Optimum offline solution and this number is called the competitive ratio, so the smaller it is, the better your algorithm is.",
            "If it's one, it means you're optimal, but usually that's not the case, so you try to make this small one alternate view, which is often very useful in thinking about online algorithms is that you can think of this as a game with an adversary.",
            "So what do I mean by this?",
            "So suppose you have some kind of algorithm.",
            "Now the adversary knows your strategy, right?",
            "Like he knows this code, so he tried to come up with the worst case example, which will make your.",
            "Algorithm do as bad as possible, so you can think of it.",
            "OK, I've come up with some algorithm and I want to analyze its competitive ratio, so there is some malicious adversary out there who's trying to make your life as hard as possible.",
            "OK."
        ],
        [
            "Now often in online algorithms we also allow randomization in our algorithms and so this just means that your algorithm can toss some coins during its execution, and then we talk of expected competitive ratio.",
            "So instead of the online cost, now an expected costs.",
            "So one thing to notice is this is still like a worst case setting right?",
            "So I am taking maximum overall input instances, so it's not some kind of average case, so the only randomization is sort of in my algorithm.",
            "So already here, when you allow randomization, there are sort of two subtleties.",
            "There are two notions, so one is what's called an oblivious adversary, and this is important.",
            "So let me go a little bit slowly over this.",
            "So in this setting, so this adversary that we talked about previously, so he knows what the algorithm is, what the randomized algorithm is doing, but he cannot see your random coin tosses, so he knows, like your code, exactly when you will toss a coin, what you do, but he cannot see the outcome of these coins.",
            "So, so one way to think of these algorithms in this obvious setting is that you have some kind of randomized algorithm and at anytime adversary only knows sort of an expectation over what state your algorithm is in.",
            "It does not know precisely what state it is in, right?",
            "So you could have crossed some coins in the past and you are in some convex combination of states, so that's usually a good way of thinking about such algorithms in this oblivious setting.",
            "Another sort of stronger adversaries.",
            "What's called adaptive adversary.",
            "So here again, your algorithm is randomized, so at each time step it might do something random so the adversary does not know what random step is taking, but in the next step it will know right?",
            "So if algorithm does something random that adversaries knows, oh, you did this in the next time, so then I'll give you some other requests.",
            "OK, so these algorithms are more almost like deterministic algorithms because you're giving the adversary too much power right?",
            "Somehow it kills randomness.",
            "So typically in this talk will be focusing on this oblivious adversary.",
            "Things are most interesting in this setting, and in particular adaptive adversary mostly is like deterministic algorithms, and I won't make this precise what this means, but.",
            "Yeah, results are not usually so intra."
        ],
        [
            "Sting in this setting.",
            "OK, so let's just begin with some classic problems and online settings to get a feel for what kind of problems will be looking."
        ],
        [
            "So perhaps the most basic problem?",
            "Again, most of you have probably seen this is the ski rental problem.",
            "So here you want to go skiing an if you want to buy skis.",
            "It costs some dollar B and let's say renting costs $1.",
            "And the problem is you don't know how many skis days you'll be going to ski.",
            "Maybe you go the first day and you break your leg and you never want to go again.",
            "Or maybe you love it so much you go every week, so it's not known and maybe an adversary will decide this and the question is whether you should rent or buy.",
            "Like every time you go skiing.",
            "And the goal, of course, is to minimize the total cost.",
            "So if you think about it for like 10 seconds, you'll realize the right thing is to not buy right away.",
            "But maybe rent for the first B times or B -- 1 times, and then on the birth time when you go.",
            "Then you buy it right?",
            "So you'll never be more than Factor 2 off, because maybe then the adversary say OK, you exactly Gobi time skiing and never more, so you paid for the rental and then you paid for the binding factor 2 off, and this deterministic algorithm.",
            "This simple algorithm is sort of type.",
            "And it's also known in the randomized setting.",
            "You can beat this too, so the there is an algorithm which achieves the ratio of y / y -- 1, which is roughly 1.58, and this is also tight.",
            "Now you might wonder why this particular number, so we'll get some intuition for this later when we go in the talk, and this number particularly comes up often in online algorithms and will see there is a kind of fundamental reason for this.",
            "OK.",
            "So let's look at another sort of maybe more complex."
        ],
        [
            "The problem, which is called the online virtual circuit routing.",
            "So here you are given some network graph and I'll show you a picture in the next slide.",
            "So there are capacities on the edges and you're getting requests overtime, right?",
            "So requests is like a source and a sink.",
            "And let's say you want to route some bandwidth from S2T over some path in the network.",
            "Is here it's, let's say all of them have bandwidth one, so when I request arrives you can choose either you want to accept this request or reject it.",
            "And if you choose to accept it, you have to find a path in your network.",
            "But once you choose a path, you cannot re route it like once more requests come, you can't go back and change your decision.",
            "So it's sort of online in the sense, and your goal is to minimize congestion.",
            "So let's.",
            "So so edges have some capacities and you're so you want to respect these edge capacities and you want to accept as many as you can, right?",
            "So let's look at an example."
        ],
        [
            "So say this was your network, and let's say all edges have capacity 5.",
            "You get maybe one request an, so you decide to route it like this along this path so your congestion is 1 / 5 because edge is at capacity 5 and all these edges are one load.",
            "Then maybe you get a second request.",
            "You decide to route it like this, so this edge has congestion two or five and sort of discontinuous, so you get."
        ],
        [
            "Other request you wrote it like this and so on.",
            "So in these kinds of problems there are various kinds of questions you can look at, so there is this congestion parameter and throughput parameter, right?",
            "And you can play with these.",
            "And the key decision where that comes up in these problems is like when a request comes whether you want to reject it or accept it.",
            "And if you choose to accept it, how do you route it right?",
            "So these are sort of the two key questions.",
            "And there has been in fact in the 90s there were like bunch of papers on this problem and they achieve various kinds of tradeoffs on these two things.",
            "So one classic result is you can get order log and congestion and roughly constant throughput.",
            "OK, and again, sort of at a very high level.",
            "The main idea in these algorithms, the previous algorithms was you kind of assign a cost to an edge, which is an exponential function in its congestion.",
            "So if Edge gets more and more congested like the penalty grows exponentially.",
            "And now when you get a new request from S2 T you sort of compute, say the shortest path according to these penalties and make your decision along them.",
            "So this is how sort of these algorithms roughly worked, and this name approach even has a name like exponential penalty approach.",
            "And if you look at the analysis, they're sort of very slick, like just seems like magic when you look at these things.",
            "OK, so this is how these problems work, so let me introduce."
        ],
        [
            "One more problem.",
            "Which is again the classical paging or caching problem.",
            "So here you have a universe of end pages.",
            "Let's say they're all of unit size.",
            "So think of these as some pages one through N sitting on your hard disk.",
            "And there is a cache of size K which is think of it as being much less than North, right?",
            "The size of your hard disk and you get.",
            "So you're running a program maybe, and it requests pages overtime, so maybe there is a request sequence for these pages, and in this idealized theoretical model we think of it like this.",
            "So if a page is requested.",
            "If it's already in your cash, if it's sitting in this fast memory, it's like for free.",
            "You don't pay anything.",
            "Otherwise if it's not there in your cache, then it's a cache miss and you load this page from the memory in your cache.",
            "And let's say you incur one unit of penalty.",
            "And then you serve it, right?",
            "So typically when you fetch some page, you have to decide what do you have to evict, because usually your cash will be full and so to bring something, you have to probably throw out something.",
            "And this is where sort of the cleverness comes in, and the goal of course is to minimize the total number of cache misses, right?",
            "You don't know what's going to come in the future, but you still want to come up with the algorithm, which does good, and the key decision is which page to evacuate.",
            "When you get a request.",
            "So what's known for this problem?",
            "So this is a very classic problem.",
            "Again, probably most of you have seen it already in the 1st paper by Sleater Tarjan, which introduced competitive analysis.",
            "This sort of analyze the deterministic case."
        ],
        [
            "Completely, so it's known that any deterministic algorithm is at least K competitive.",
            "You can't beat K, and they also gave various K competitive algorithms in particular least recently used and also some other ones.",
            "Now it turns out if you allow randomization in your algorithm, then you can do exponentially better.",
            "So again, there was this classical result by Fiat at all, which showed that you can get the order log K competitive ratio, and this is also tight, so you cannot be this long, K. Which is this harmonic number, which is roughly 1K, and in fact now people even know how to achieve this exactly up to the constant.",
            "So this problem is sort of very well understood.",
            "You know we understand both the randomized under deterministic case, but it's in a classical sort of testbed for coming up with new algorithms."
        ],
        [
            "OK.",
            "So so I showed you three different problems.",
            "Key rental, virtual circuit routing and cashing in on the surface.",
            "They sort of look very different, maybe OK, they're all online problems, so that's similar.",
            "But other than that they seem.",
            "Quite different, So what do they have in?"
        ],
        [
            "Common.",
            "There was a very nice insight by Buchbinder and or in 2005, which I'll elaborate a bit more later, so that insight was all these problems can be thought of as a special case of our abstract online problem.",
            "Online linear programming problem.",
            "So what is this abstract problem?",
            "So here, so say you are given, so I assume everybody knows linear program, so it's just some linear objective function with a bunch of linear constraints and you want to optimize it.",
            "So in this online setting, the game is the following.",
            "So in the beginning you are just given, say some objective function.",
            "Not any constraints, and let's say at time one you get some constraint that you want to satisfy, right?",
            "So what we will do now, you'll pick some values for these X one X3X6 so that you satisfy this and then when you do that then at mikes time step maybe you get another constraint right?",
            "And if your solution already satisfies this constraint then you don't do anything.",
            "Otherwise you bump up the values a bit more to satisfy this and so on right?",
            "So this continues.",
            "And one thing will assume here that it's a covering LP, so by covering LP we just mean that all the constraints are of this type, that something something is greater than something.",
            "So you would cover the right hand side and all the coefficients are non negative.",
            "These are called covering LP's.",
            "And these are sort of the simplest objects to work with.",
            "OK, and your goal is to find a solution with sort of the minimum cost and what are the requirements.",
            "So the key thing is, once a constraint arrives, you must satisfy it.",
            "You can't say OK, I'll wait for 10 more steps and then I'll go back and satisfied.",
            "You have to do it right then and the second sort of key issue is you cannot decrease the variable once you have set it to something.",
            "OK, so this sort of models online nature that once I've decided in the past I'll go this high.",
            "You can't sort of go back and change it otherwise.",
            "Of course you could resolve the problem optimally.",
            "In the end, right?",
            "So so that's not allowed, so you cannot.",
            "Decrease you can't sort of."
        ],
        [
            "Do your decisions.",
            "OK, so let's look at an example just to be on the same page.",
            "So suppose yeah, initially there are no constraints.",
            "And let's say this was your objective function.",
            "You get a constraint like this.",
            "So what's maybe a natural thing to do?",
            "Let's set all the variables to one over North.",
            "So this satisfies this, so that's great.",
            "But now maybe you get a constraint like this.",
            "So this particular solution that I had so far is not quite satisfying this, because it doesn't come up to one.",
            "So what will I do?",
            "Maybe the natural thing is to bump up all these X 2X and 1 / N -- 1.",
            "So you satisfy this also and so on right?",
            "So maybe the adversary gives you a sequence like this?",
            "And what did our algorithm do so it kept bumping up?",
            "Like when this constraint came it bumped up these variables and so on.",
            "Now notice in hindsight, whatever had I known that this would be the linear program, the optimum thing would have been to just set this accent to one, right then you would have satisfied everything and you pay only one in your objective function.",
            "But the way what is online paying?",
            "So I claim online is paying roughly log North.",
            "Becaused notice this X1 variable was set to 1 / N and then it was never changed.",
            "This guy will be set to 1 / N -- 1 one over N -- 2 and so on all the way to 1 right?",
            "So this harmonic sum which is roughly log an.",
            "That's what online pays in at least this way of doing things.",
            "And it turns out it's not too hard to show that this is really the best you can do.",
            "I mean, I can convert this argument into also a lower bound proof, because what we were doing was sort of the reasonable thing to do.",
            "OK, so yeah, so you cannot hope to be quite log North, but as we'll see you can basically get logarithm guarantees, but we'll come to that.",
            "OK, so this was for the cover."
        ],
        [
            "Linear programs, so one can also look at the dual setting.",
            "I won't talk much about the dual setting in this talk, but I just want to give the problem formulation so you know that there is a notion out there.",
            "So in the dual.",
            "So in the covering what was happening like constraints were coming one at a time and you have to satisfy right now in the dual setting you get these variables one at a time.",
            "OK, an instead of a covering LP you have a packing LP, so you have something something is less than something really the dual and the game looks like this, yeah?",
            "Time one you get some constraint, I mean some variable like this so you know so you know all the constraints up front.",
            "You know how it looks, but you don't know which what's going to happen with other variables.",
            "And maybe you have to decide what value to pick.",
            "Four Y one.",
            "Then once you do that, maybe white shoes are revealed and so on.",
            "Again, you can only you cannot decrease things once you have set up set them to some value and you can ask the same question that how well can I do.",
            "OK. OK, good so.",
            "And again this is a maximization problem now because it's a packing problem.",
            "So to maximize because you could otherwise always just because zero solution right that would satisfy everything.",
            "OK, yeah, so variables arrive sequentially and you can only modify or increase YT.",
            "So pretty much the theory I'll only talk about the theory for covering LP's and things can be sort of in a straightforward way.",
            "Map to the packing case.",
            "Yeah, so turns out.",
            "Why is this framework so powerful?",
            "So as I mentioned, all these previous problems we saw earlier and much more can be expressed as special cases of this setting.",
            "So let's just maybe."
        ],
        [
            "The ski rental problem.",
            "So I can think of this as the following.",
            "Online linear program.",
            "So I have variables X, which means whether I buy my skis or not, so it's a 01 variable.",
            "And I have a variable ZI, which means whether I rent on day or not OK. Now what are my constraints?",
            "When each day I go skiing, I should either buy or rent, right?",
            "So X plus size at least one?",
            "And your objective function is this.",
            "You pay before buying and everyday you rent, you pay one right.",
            "So you can think exactly like every day you are going and you get a constraint like this which you should satisfy.",
            "Yeah, so you model this prob."
        ],
        [
            "Like this, so let's look at the routing linear program.",
            "So this is a bit more complicated.",
            "Here you have exponentially many variables.",
            "So what?",
            "So again, this is a standard routing LP.",
            "If you have seen this so for every request RI write an for every possible path from SITI can have a variable.",
            "How much of this request you route along this path, right?",
            "So it could be exponentially many and then you just put the usual constraints.",
            "So for each request I should.",
            "Actually you can assign at most one unit of paths and it's at most because maybe you could have chosen to reject this right so, but at most you can get only one unit of credit and you should respect the congestion constraints, right?",
            "So again, you don't need to see exactly what it is, so this is just.",
            "If you sum up over all the load over the edges, you should satisfy the capacities.",
            "OK, so again, you can think of it when the requests arrive.",
            "You get sort of these variables online, so it's a packing online LP.",
            "OK."
        ],
        [
            "And let's look at our third page example.",
            "So this is a little bit more complicated on the ski rental problems, so again, we have a covering LP, but.",
            "It may be useful to see how one models paging and paging is also an example.",
            "Will be looking at it in more detail later, so let's go over it a bit carefully.",
            "OK, so in paging recall what was happening right?",
            "Like at every time step you were getting a request for a page and if it was in your cash you don't pay anything.",
            "Otherwise you pay something.",
            "So let's first try to write a offline LP for this problem.",
            "And it's a little bit tricky, so it's not the most obvious help you would think at the first side.",
            "So here is how you do it.",
            "So this is my timeline and look at all the times when, say, a particular page I was requested.",
            "OK, so maybe it was requested here, then here then here, so on.",
            "Now for every two consecutive requests of page, I let me associate the interval.",
            "So let me call this interval I one I2 for the second consecutive requests and so on.",
            "And the key observation is that.",
            "OK, so suppose you when this page I was requested here and you did not incur a cache miss.",
            "What does it mean?",
            "Right?",
            "So it must mean that.",
            "This page I must have been sitting in your cache.",
            "Since its previous requests until now, because if you ever evicted in the middle then you have to fetch it again.",
            "So.",
            "And you can actually argue that if you evict at once, you know there is no sense in fetching it unless it's requested.",
            "I mean you can only be suboptimal, yeah, so if you did not incur a cache miss here, then I was sitting forever.",
            "So it was kind of this interval was sitting in your cash.",
            "So that gives us a nice way to capture this problem.",
            "Yeah, so this is for page I then you do this for every other page right?",
            "So for every page I prime I would have these intervals and so on.",
            "And what is our constraint?",
            "So I know that our cache has capacity K. Or in other words, if I look at anytime T. You can at most have case such intervals sitting in your cache, right?",
            "I mean.",
            "Or in other words, at least minor scale intervals must be missing.",
            "The call end was the total number of pages and you can have at most K in your cache.",
            "So N -- K at least N -- K must be missing, right?",
            "And this is the view will adapt.",
            "So here is the.",
            "LP we can think of.",
            "So let XIJ and again I hear is the index for the page is kind of the jet consecutive, so this kind of notation.",
            "So let's have a variable XI J, which means at a particular time how much this interval IJ is missing from my cash.",
            "OK. And by this argument previously that we have at least minus K intervals should be missing at anytime.",
            "You just have the following constraint that if I look at anytime T. Right, if I sum up over all the pages and this right here just denotes the index for the.",
            "A request at time T right?",
            "So it's just a way of saying that yeah, if I sum up over all the pages, at least minus K must be missing and the objective function is this right?",
            "Because every time you are missing a page, you pay one in the cache.",
            "So again, maybe if you got lost, the point is yes, you can write it as a simple covering LP of this form that anytime you have minus K sort of pages missing from your cache.",
            "So we saw all these problems can be written as this abstract program."
        ],
        [
            "Problem, So what can you say about this problem?"
        ],
        [
            "So in the 1st paper by Buchbinder right now or where they introduced this framework, they showed the following results.",
            "So if you have a 01 covering or packing matrix, all your entries AIJ in your axe less than equal to BL PR01, and I showed you can get a competitive ratio of log D where these sort of the maximum non zero entries in any constraints.",
            "So it's kind of sparse.",
            "You get something better, and if it's a very dense LP then you can get logged at worst.",
            "And for many other problems where you have two variables in any constraints, so ski rental was of this type because I had X + Y I less than equal to 1.",
            "So they showed for many such problems you can get a / E -- 1.",
            "And this was sort of nice because for this gives a intuitive explanation why this number pops up often in online algorithms, right?",
            "So it's more like a combinatorial.",
            "Sort of, yeah, it's a nice unifying result in that way.",
            "So this was 1 result.",
            "Now just some quick remarks.",
            "So as we'll see, when you solve this sort of linear program, it gives you a fractional solution and later we'll see how to interpret this fractional solution as a randomized algorithm and I'll come to this if it doesn't make sense right now what this means?",
            "But already this framework is quite flexible 'cause you know you could do the same things that you do with LP's sort of all the time.",
            "So often you can solve LP's when you exponential number of constraints or variables by going to the dual or using ellipsoid.",
            "So you could do the same thing here.",
            "Or you can sort of play around with how much you are paying in the objective versus how much you are violating in the constraints right?",
            "So maybe you can have an Alpha approximate solution with some beta feasibility so you can do all kinds of tricks that you do in approximation.",
            "So so once you've formulated in this framework, you can use all kinds of tools that we have developed in approximation.",
            "So this turned out to be very nice.",
            "And so this showed some more things also."
        ],
        [
            "So the previous results for work for a 01 matrix.",
            "Now for a general covering and packing matrix where you could have arbitrary entries AIJ in your constraints they showed for recovering case, you can get a log N where N is the number of variables.",
            "And for packing you get slightly more ugly things, so you get a log N plus something that depends on your number, but it's logarithmic in that.",
            "OK, so it's roughly a log rhythmic approximation and these results are also tight, so you can't really hope to do much better, at least in this setting."
        ],
        [
            "But so why was this nice?",
            "So it was like a very.",
            "Universal and powerful framework and sort of unified and improved various previous results.",
            "And as I'll discuss now, we could use these ideas to further so these results that I mentioned previously were already proved in 2005 and sort of.",
            "They gave very general results, but we could use these ideas to sort of nail various problems that were open for a long time and I'll define these problems later as we go along.",
            "So one of these was the weighted paging problem.",
            "So this problem if you haven't heard about this before, so this.",
            "Is just the first generalization you would think of the paging or caching problem, so in caching if you had a cache miss and you wanted to fetch a page you paid one in your cash penalty of your time, right?",
            "So in waiting weighted paging, Now let's say each page has a different fetching cost, right?",
            "So you pay W I4 page.",
            "I so just the slightest weighted extension of caching, but surprisingly nothing was known for this before, so there were various special cases.",
            "So like if you have two different types of weights.",
            "There was some like polylogarithmic guarantee, and so on, but nothing was known.",
            "Even sub linear in K for case of three weights.",
            "So what we could do?",
            "The 1st result an will actually see this algorithm later in the talk?",
            "Could get us very simple logarithmic approximation.",
            "And then even for a more general problem where you could have arbitrary weights and sizes in the caching setting, we could get a log squared K, then this was open because this is of course generalizing this problem and nothing was known for this already.",
            "And this was further improved recently to the right log K. And of course you cannot beat log K because even for unit paging lock is the lower bound.",
            "Yep.",
            "And more recently we could use this kind of techniques for obtaining a polylogarithmic approximation for the K server problem, and again, if you don't know what this problem is, I'll define it a bit later."
        ],
        [
            "OK, so for the rest of the talk, the plan is the following, so I want to give you sort of a very brief introduction to what linear programming duality is and how the primal technique primal dual technique is used in the offline setting.",
            "If you haven't seen that before and then we look at how you adapted to the online case and I won't give you the full proof, but I'll basically give you the whole intuition and you'll see that it follows in a very natural way.",
            "Once we set up sort of the machinery and then sort of will look at these particular problems and some extensions so.",
            "So that's the plan for the rest of the talk and.",
            "So maybe this is a good time if you have any questions or.",
            "Something.",
            "So now we'll go into the more technical stuff.",
            "Cancel.",
            "OK, So what is?"
        ],
        [
            "Ality so let's begin with a simple puzzle type of thing.",
            "So suppose you have some linear program, right?",
            "So just two constraints on some objective function, and somebody gave you this linear program and you wanted to convince somebody that there is a solution of value less than equal to 12.",
            "OK, so I wanted to convince you this was the case.",
            "Now how would we do it?",
            "So it's simple.",
            "One way you could convince somebody's actually demonstrates such a solution, right?",
            "So, so for example.",
            "In this case, if I set X2 equal to three, then you see that.",
            "Both these constraints are satisfied, so this is obviously satisfied, and two X2 is 6, so this is true and then you see that this objective function is 12.",
            "So clearly this is a solution and maybe there is something better out there, right?",
            "So there is a very simple witness that optimum is now."
        ],
        [
            "More than 12 no how about?",
            "Slightly more harder question.",
            "So suppose you wanted to convince someone that there is no solution of value 10.",
            "Right, so notice this is a bit more tricky.",
            "If you first see some time, because now you want to show that you, no matter what values of X one X2 you take, there is no way you can get this.",
            "Right, so so if you haven't seen this before, it's yeah it's not obvious.",
            "I mean, how do you?",
            "It's like a Co NP witness right?",
            "Yeah, so how would you do this?",
            "Now let's look at this particular example.",
            "Now, here is an ad hoc trick which works at least for this example.",
            "So suppose I take the first constraint for the first equation multiplied by a factor of two.",
            "So take this multiply by two and add it to the second constraint.",
            "Right, So what do I get so 2 * X one plus X one is 3X1 and this would be 4X2 is at least 11 right which is 2 * 3 + 5, right?",
            "And the reason we multiplied with this by two and one was notice what we have now.",
            "This is exactly what we had in the objective function.",
            "So you have shown by sort of doing this funny multiplication and adding them that.",
            "This is at least 11.",
            "And what this basically says is that no matter what X one X2 I take, I can never go below 11.",
            "Right, so this is your witness.",
            "So one way you could convince somebody is to give them these multipliers, two and one, and they can convince themselves.",
            "And LP duality theorem is basically this that this seemingly ad hoc trick that fitted here always works no matter what your linear program is.",
            "You can always come up with these multipliers and that will do the job.",
            "So, so let's just formalize this a little bit.",
            "And yeah, we'll see."
        ],
        [
            "Some actually a formal proof of this.",
            "So you can say you are given some linear program like this and I can always write it in this form.",
            "Something is greater than equal to something, because if it was less than equal to something, I can negate both sides on.",
            "The sign will change, right?",
            "OK, so now in duality we take some linear combination of these constraints, let's say weighted by yjs.",
            "And we do exactly what we did before, so we choose these multipliers in such a way.",
            "That you're right, if you sum up these multiplied constraints, they are less than equal to the objective function.",
            "OK, and so if you do that you can easily check by very small computation that it will give you a witness of this type that if you look at this objective function CJXJ.",
            "Yeah, there should be a summation here, which I guess I'm missing, but yeah, so if you look at this objective function then this by I will be a lower bound.",
            "For the optimum, just like in the previous example, and where is this buyer coming from?",
            "Notices just some of these buys multiplied with wireless.",
            "So what we do is we call this a dual.",
            "We call this whole thing a dual LP, so these are what are called dual constraints.",
            "So you want to come up with my eyes with satisfy this and this is your dual objective so you can write this dual LP.",
            "And what's known?",
            "So there is this strong LP duality which says that actually you can come up with these wise where this equality is achieved, right?",
            "And in fact, so just a small calculation, which I'll skip here.",
            "You can also show that for this equality to be achieved, basically all the inequalities here should have been tight, so there should be an equality.",
            "And here you should have an equality and this gives rise to what are called complementary slackness conditions.",
            "So what this means is that if this dual variable Yi, which corresponds to the Earth primal constraint is non negative, then this primal constraint is tight and vice versa right?",
            "So if some XC0 then the Earth dual constraint is tight and actually let me give a.",
            "Very nice proof of this complementary slackness, which I think should be more well known, but somehow so the usual way you prove all this is we are this far cash lemma and some complicated stuff.",
            "But here is a very sort of intuitive way to see this.",
            "So let's see what's a linear program, right?",
            "So we all know this.",
            "So in linear program you somehow have a direction given by this C where you want to optimize and you have some linear constraints right given by these.",
            "Hyperplanes so this is in the A One Direction, a direction and so on.",
            "So we have some polytope and you want to maximize in some direction.",
            "OK, and we OK.",
            "So we know like in this case if these were your constraints then optimum 'cause this is our objective direction.",
            "It would be somewhere here.",
            "So let's look at this following physical proof.",
            "So imagine this was like a particle, some small particle, and this was a force acting on this particle.",
            "And this was the barriers.",
            "So this particle cannot escape.",
            "Sort of these.",
            "Hyperplanes so we know that.",
            "OK, so say this particle starts here, then maybe it would hit here.",
            "Then this forces acting so it would stabilize here, right?",
            "Now at this equilibrium, if I think of physical particle, so there is this 4th C acting on it.",
            "And what is the force balancing it?",
            "So this force must come from?",
            "Something along by one direct a One Direction and something along a two direction right?",
            "And these forces.",
            "So imagine this hyperplane applying a force of 1 along the direction A1 and this hyperplane applying a force of Y 2 units along the direction A to write the normal direction and at equilibrium because this is a stable system, these things should balance out.",
            "So this 4C should be cancelled by these.",
            "Other forces that are applying right?",
            "And this is exactly what LP duality says, so there are these combinations yiz such that this exactly holds, so in some sense you can think of the dual as.",
            "So, So what does this picture tell us, right?",
            "Like so this already conveys us a lot.",
            "So if this was the optimum achieved at this vertex, then you know that the only forces that are being applied are by the hyperplanes that touch at this vertex, right?",
            "Like this, a 3 does not need to apply any force, it has no effect.",
            "So this exactly translates to complementary slackness, and in fact sort of the more force.",
            "A constraint is applying, which means the dual is high.",
            "Sort of means how likely that constraint is being pushed in some sense, so this is sort of maybe more physical intuition for the dual, which is maybe useful to keep in mind.",
            "OK, so this was sort of the bit about LP duality.",
            "And how does how?"
        ],
        [
            "LP duality, very useful in approximation, so here is how a generic primal dual offline algorithm works.",
            "So suppose you are given some primal problem or problem that you want to solve.",
            "So using Primal Dual the way you would do it is you look at the dual which looks like this right?",
            "And you start with the solution says 00, so everything is.",
            "Kind of yeah.",
            "So the primal is unfeasible.",
            "You haven't satisfied anything and the dual is feasible and what you try to come up in a primal dual algorithm is the following.",
            "And this is where the ingenuity lies.",
            "So you try to come up with some way of increasing the primal and dual variables together such that.",
            "With the following property, right?",
            "So if the dual increases by say one if the dual objective function, then somehow if you could guarantee that the primal increases by some at most C. And of course it's not obvious how to do this.",
            "It depends on the problem, involves a lot of creativity, but suppose you could do this and you end up with some feasible solutions.",
            "So you kept increasing the dual and primal so that this became feasible, and this also remains feasible.",
            "Yeah, then this implies you ever see approximate solution because the dual was a lower bound and whenever I increase the dual, one primal at most increased by some C times.",
            "So that's my C approximation right there."
        ],
        [
            "So here is, so we'll follow a similar idea for our online primal dual setting.",
            "Write an so this is perhaps maybe the most important slide of the talk, so let's let me run slowly through it.",
            "So again, recall the Primal Online primal dual setting.",
            "What was happening there, right?",
            "So at each time step T you are getting some constraint at that time and you had some objective function.",
            "So let's do the following thought experiment.",
            "So suppose at time T you end up with the following.",
            "This constraint arrives.",
            "Now, of course, if your current values of X is already satisfy this, then.",
            "You don't need to do anything.",
            "You can move on to the next step, so let's say it's not satisfied, right?",
            "So this constraint is currently being violated, so I have to bump up these exercise to kind of satisfy this.",
            "So let's see what's happening in the dual right now in the dual we have a variable for every constraint out there, right?",
            "This was the multiplier variable.",
            "So at time T, when the tiered constraints arrives in the primal, you have some dual variable YT and again the way the dual objective was constructed.",
            "So because this right hand side in the primal becomes the objective in the dual.",
            "So you would get this variable white in the dual and this in the dual objective BT YT term.",
            "So so far it's nothing special is going on.",
            "Now let's think of at the following.",
            "Suppose I bump up YT by one, so I'm trying to bump up my do a little bit.",
            "And the question is.",
            "How much should I bump up these excise right?",
            "Because this constraint is not satisfied so I have to come up with a rule for this.",
            "Yeah, so let's bump up YT by one.",
            "So what happens if I bump up Whitey by one now because my dual objective was BT YT, my dual cost will increase by BT bumping up my YT by 1.",
            "An If I bump up these excise by some Delta XI which I don't know quite yet, how to do this, but I'm trying to figure out by this thought experiment.",
            "So suppose I bump up Zi by Delta XI, then my primal cost will increase by CI times Delta XI, right?",
            "Because this was my objective function and that's the change in the primal cost an in a primal dual algorithm.",
            "What did you want to do?",
            "We want to relate the dual to the primal.",
            "If you could connect them, then we have given our primal dual algorithm.",
            "So somehow we want to.",
            "Come up with these Delta's eyes.",
            "So that the increase in primal cost is, say, roughly the same or within some small factor of the increase in the dual cost OK?",
            "So how can we do this now?",
            "I know the dual cost when I increase YT by one, is it increases by BT?",
            "But what do I know about this BT?",
            "So the only thing I know about this BT.",
            "It was the right hand side of this constraint, right?",
            "And we know.",
            "That this constraint was not satisfied.",
            "That's the whole reason I'm increasing my variables.",
            "If so, I know that this summation, AIX I hear, is less than equal to BT.",
            "OK, so this much I know so far.",
            "OK, so my problem is somehow I want to relate this thing to this thing.",
            "OK Anne, how can we do it?",
            "So one way is just to do a pattern matching right?",
            "So I want to do this to this.",
            "So what I'll do?",
            "So suppose I set my Delta XI to be Aix.",
            "I oversee I let's just do a blind substitution.",
            "The notice that this some CCI cancels and shows this.",
            "Alright, so.",
            "Yeah, so it's just I don't have much choice here, right?",
            "Like OK, I wanted to relate this thing to this thing and so it's kind of forced upon me.",
            "So that's what I'll do.",
            "So I'll set up my rule as being whenever I increase the dual by 1 unit I will increase the primal variables XI by something like this.",
            "Now let's stare at this bit what it means.",
            "And you'll see it's a very intuitive thing, so I'm increasing XI.",
            "By proportional to this right?",
            "So my Delta XI is this.",
            "And so the numerator is AI, right?",
            "And what does this mean that if my I was big, then I'm increasing this variable by a lot and a big big big means that this variable was helping a lot covering this constraint, right?",
            "Like if some a let's say it was very, very big, then I'm trying to increase this variable abit more because it helps me a lot even if I increase it a bit to cover it and in the denominator you have CI right?",
            "Which means and what does big CI mean?",
            "So if my CI was large, it means that every time we increase this variable I pay a lot in my primal, so I don't want to increase this variable.",
            "So roughly you should be inversely proportional to the cost, right?",
            "So it's kind of doing the right thing, so here I should be in the numerator, see and the nominator, and this is a formal proof for why I mean this whole chain of inequalities that this is sort of the right thing to do.",
            "So this gives us a very generic rule.",
            "That yeah, so currently have some solution you want to raise it so you do it in a way such that if.",
            "The rate of increase of X as a function of the dual is proportional to X, and this proportionality is a overseer and let's forget about that.",
            "Let's assume all these are one, but the key point is that.",
            "DX over device sort of proportional to X.",
            "It's the rate at which I increase X already depends on the value X.",
            "And if you recall from your basic calculus or whatever, if you have a differential equation like this where you are increasing a variable at a rate that proportional to X, then it will vary as some exponent of Y.",
            "So this variable will sort of start growing exponentially.",
            "And this is essentially the whole insight of the primal dual method.",
            "OK go.",
            "Yeah, it just came directly at us, right?",
            "We didn't do.",
            "We just tried to relate the primal and dual and it just fell in our laps.",
            "So let's make this a bit more precise and then we have a complete algorithm."
        ],
        [
            "So one problem, so I said in the previous slide.",
            "OK, we should increase the variable proportional to its current value.",
            "That's what the previous thing told us.",
            "But of course there is one trivial sort of technicality that we need to take care of because we start with all zero solution, typically in the beginning.",
            "So if we try to apply this rule and you know you'll stay at 0 right like your rate of change is still 0 because X is 0.",
            "So one thing is OK. At some point you want to bump it like give it a seeding right?",
            "So instead of zero give us something very slightly more than zero.",
            "So typically you would initialize it to one over North.",
            "So think of 1 / N as some very small number.",
            "Another question is OK when should I bump up my variable from zero to this tiny seed and again, complementary slackness tells us when to do this and this was the reason was sort of why I went a bit more into this complementary slackness, so recall that complementary slackness says that in any optimum solution a variable should be non negative only if the corresponding dual is tight.",
            "Right?",
            "So this is exactly what we do.",
            "Will bump up this variable from zero to one over nor some small number when its corresponding dual constraint becomes tight.",
            "'cause this sort of the right thing to do by complementary slackness.",
            "And I'm being a bit vague here on purpose because if you try to write it notationally it becomes a bit pain.",
            "But hopefully the idea is clear that it's sort of the right time to update a variable right when it's two list, right?",
            "OK, and also so this is not the only way to do this.",
            "There are also some other ways which work in some other problems and I will see all of this in the next slide or so.",
            "Yeah, so so this is sort of the algorithm, so you bump up a variable from zero to some small value when.",
            "The dual tells you that it's time to bump it up and its dual constraint becomes tight and once it start becomes nonzero, you started increasing it according to that exponential rule that we saw in the previous slide.",
            "So this is sort of the only thing you need to remember at a high level."
        ],
        [
            "Yeah, OK, maybe I.",
            "Say this OK, so let's summarize this.",
            "So yeah, when the earth constraint arrives right in the primal.",
            "OK, so you initialize the dual.",
            "So for this constraint there is a corresponding dual variable.",
            "Initially you set it to 0.",
            "If this constraint was already satisfied.",
            "Of course you don't need to do anything.",
            "So let's assume it's unsatisfied, so we'll start gradually increasing the dual.",
            "Variable Yi corresponding to that constraint.",
            "And we'll set this variable XJ to say 1 / N if it's dual constraint becomes tight, right?",
            "Because once this why increases.",
            "At some point, this dual constraint corresponding to this variable will be tight, so we set it to small number and then we sort of update it multiplicatively.",
            "Proportional to XI with AI over CI.",
            "So that's sort of the algorithm and what we can show.",
            "Is that this update in this update rule?",
            "Remember this slide couple of couple of slides ago, right?"
        ],
        [
            "I was ensuring that my primal cost increase is bounded by the increase in the dual."
        ],
        [
            "So I've ensured this so that ensures that yeah, so I'm always satisfying this according to my rule.",
            "And we can also show by a small calculation that the dual solution is violated by at most log in factor and roughly.",
            "This is because you start to ramp up things exponentially, right?",
            "So you won't have to increase your dual by too much, roughly logarithmic, and then your variable becomes so large that your primal will be satisfied.",
            "And again, this can be made formal with the calculation, but.",
            "Avoiding it for because that would make a bit of a mess, but it's not hard to work it out.",
            "OK, so let's look."
        ],
        [
            "Running example so this weighted caching problem which I already mentioned was open for a long time, but we'll see how it follows very easily from this setting.",
            "So again, there's a very simple way to think of this weighted caching problem as we saw at anytime.",
            "Right, we know that there can be at most K pages in our cache, so at least N -- K pages must be missing.",
            "So let XI denote how much pages missing from my cache.",
            "And I'm maintaining that summation XI should be at least minus K. Now at time T, suppose some page piece requested.",
            "So when a page is requested, I know this page must be completely in my cache, right?",
            "Or in other words, the amount that page is missing from my cache should be 0, because if it's completely present.",
            "So I should set XP to be 0 if P is requested, but now maybe setting XP-20 violates this right?",
            "Because I currently maintain this nice frontier that everything sum up sums up to more than N -- K I. I'm forced to set something down to zero.",
            "So now again maintain this.",
            "I have to bump up some other variables.",
            "Or in other words, it means I have to bring pee in my cash so I have to make room by bumping out, like evicting out some other variables.",
            "That's what it means.",
            "'cause if you increase excite means you are sort of throwing things away.",
            "And what this previous slide tells us that the increase in your variable should be.",
            "Yeah, so if you just write the LP in the objective function, we have these weights WS so it should be inversely proportional to WI and this multiplicative rule.",
            "Right and notice here I'm adding this instead of just one over W * X. I have added this so this is sort of another way to see it.",
            "Right, yeah?",
            "So if this doesn't make sense, never mind.",
            "So essentially we're doing a multiplicative rule together with seeding combined in it.",
            "So if X is basically zero, then this 1 / K. Let's this XI increase.",
            "Otherwise it XR becomes large in this XI takes over.",
            "So I mean there are various ways you can play around with these things.",
            "OK. Yeah, so if you just do a multiplicative update like this, this gives your weighted paging algorithm and that's it.",
            "It's log competitive.",
            "Now, once you see this algorithm, you can ask.",
            "OK, so ultimately we solve this fancy primal dual framework, but ultimately what we're doing is just increasing variables multiplicatively, right?",
            "That's the key inside.",
            "And again, if you're familiar with sort of multiplicative update methods in machine learning and so on, that's what they also do.",
            "Like this whole technology of multiplicative updates.",
            "But now it's also another algorithm paradigm.",
            "So can we just so is this method just telling us that OK multiplicative update is the thing to do and it's?",
            "Not telling us much more so do we need?",
            "We need all this LP business.",
            "Now I want to argue that no, so this LP is still sort of important, so for this weighted paging maybe I could have done without the LP, right?",
            "I could have just given you this multiplicative update algorithm and analyzed it directly, but let me give you another example where you really see the power of this LP coming in."
        ],
        [
            "So let's look at this generalized caching setting, which is the setting of caching where now pages have both arbitrary sizes instead of unit size, and also arbitrary weights.",
            "And here is a Canonical bad example for weighted caching.",
            "So we have a cache of size K, so we can only store K size worth of pages.",
            "Now suppose you just had two pages which were of size roughly slightly more than K / 2.",
            "OK. And suppose you were getting requests alternately 121212 and so on.",
            "Now in any real solution or integral solution, you have to have a cache miss at each step, right?",
            "Because you can only afford to keep one page in your cache 'cause they 2 pages do not fit.",
            "So you must pay.",
            "A cache miss at every step, but if you write any kind of naive LP.",
            "That can cheat 'cause you know these pages are slightly more than K / 2, so in fractional sense it can fit in 2 pages right?",
            "So it so any kind of reasonable LP that you try to write it will pay very little.",
            "Ann will get a large integrality gap, so one way to fix this is to add water, called knapsack.",
            "Cover inequality is an again for those of you haven't seen this.",
            "So these are sort of relatively standard way by now, where you strengthen this naive LP that we wrote in the previous step by adding exponentially many inequalities at each step, and this sort of kills this integrality gap and makes it just two, but the point is you can write like an exponential size LP.",
            "And.",
            "And then you can apply this primal dual framework.",
            "To this LP and give it gives you a very different algorithms, so it's again sort of multiplicative update type algorithm, But the weights that are coming are coming based on these knapsack over inequalities which.",
            "So it would be very unintuitive if you didn't go via this route, like at least I would never be able to think how you could come up with such an algorithm where right like in the previous step, we're doing multiplicative updates along this, but now these W's could be totally different depending on these knapsack inequalities.",
            "So I think that's where this power of this technique comes in, because you can use all the machinery that's developed for linear programming and throw it here and use it together with this multiplicative update method.",
            "OK."
        ],
        [
            "OK, so there is one other aspect, so we so we saw how to do this multiplicative update type of thing and it gives you a fractional solution.",
            "So there is a second step when you try to apply this framework, which is what I call the rounding step.",
            "So what do I mean by this?",
            "So Primal technique gives you a fractional solution or these exercise are sort of some numbers between zero and one.",
            "Now this may not make sense for your problem.",
            "Like maybe you want to 01 solution or.",
            "Or even if you want to interpret these fractions as a randomized algorithm, it might.",
            "You might still need to do some work, can show unisec what it means, so let's look at the ski rental problem, which is our easiest problem.",
            "So recall we had this variable X which was tracking what what's the probability you have bought this ski so far, right?",
            "We had this exposi I at least one, so if X was half, it's essentially meaning that you have bought it with probability half.",
            "So if you come up with a primal dual algorithm, this fractional algorithm, which tells you how to update these X&Z's.",
            "You can view this as a randomized algorithm becausw, so you have some way of increasing these exercise.",
            "I'll interpret it as a. Randomized algorithm in the following way because at time T if your algorithm bumps up XT minus 12X T, then think of it as your algorithm is buying.",
            "This key at that step with this probability right?",
            "Because one way I could describe a randomized algorithm for ski rental is P1.",
            "Is the probability I buy it at time, 1P2 and so on South.",
            "This increase in excise exactly your pies?",
            "So in fact this LP solution you can map exactly to this randomized algorithm in a simple way."
        ],
        [
            "But for many problems, it's not so obvious, so let me.",
            "With this caching setting that it's already requires some work.",
            "OK, good.",
            "So yeah, let me show you a picture.",
            "So I claim that if you come up with a fractional algorithm for caching right we're bumping up these variables exercise so you can think of this exercise being the probability that yeah and we were interpreting this exercise as the probability that page is missing from your cache, right?",
            "And we have this X greater than N -- K, but to come up with a randomized algorithm that's not enough.",
            "What we really need is a probability distribution on cash states.",
            "So let me give an example.",
            "So suppose you had four pages.",
            "And your cache size was two.",
            "Now your LP could have something like OK, each page is missing with probability half or its president.",
            "Let's say with probability half.",
            "So this sum up to two.",
            "But when you come up with a randomized algorithm, you really need to specify the state of a randomized algorithm is OK. Have this cash with this probability.",
            "This cash state with this probability and so on.",
            "So you need somehow a way to map this to this.",
            "So one way we could maybe maintain online map is that OK if you have this LP solution will maintain the corresponding state on cash is like this.",
            "So with probability half we maintain this with probability half we maintain this state.",
            "So this just means that OK have page one and page 2 in my cash with probability half.",
            "And Page 3 and Page 4 with probability half.",
            "And here is the crucial thing that we need to do.",
            "Because when we have a fractional algorithm, we update these variables XYZ, right?",
            "So maybe in the next step these variables get updated from half of two point 6.4.",
            "Or in other words, it's like checking out this Page 1 little bit more and increasing.",
            "Page 2 so.",
            "So then.",
            "You would want again to map now this distribution to be consistent with this, but you want to do it in a way so that you don't pay too much here, right?",
            "Because in LP you are paying like .1 'cause you're doing .1 units of eviction, so you want to be competitive here, so you need to prove some kind of a mapping theorem that OK if the LP is paying this much in a fractional sense, I can sort of update the distribution on my integral states in online manner to not pay too much.",
            "So for caching we could do it by losing a factor of two, which I will not tell you how we do it.",
            "It's not that hard, but for many problems it's tricky.",
            "So for generalized cashing in our original paper we were losing a log K additional low key factor in this rounding, so maintaining a map from fractional to integral.",
            "And this was actually improved removed in a recent paper loss order by Adam.",
            "Check at all using very complicated techniques, so so this is often yeah, this is so.",
            "This is sort of the ugly part, so the primal dual fractional was the clean cute part, but here sometimes you have to really do some dirty."
        ],
        [
            "To that, sort of.",
            "OK, so in the next 5 minutes let me just give you a very quick view of what's beyond this packing a basic."
        ],
        [
            "Uncovering framework so.",
            "So notice in this previous framework we only had covering or packing LP's, and variables could only increase right and I kind of previously argued that oh, increase was a natural thing because you cannot undo your decisions.",
            "That's what this monotonicity was modeling.",
            "But it's a bit annoying.",
            "So for example, because you have only covering or packing LP, you cannot even have very simple constraints of this type, because the way you would write this constraint is a -- B greater than zero.",
            "So you have both positive and negative terms, so you can't put something like this.",
            "And again, monotone City can be often restrictive, so one place where it's restrictive is like this expert learning in the machine learning setting.",
            "So again, if you haven't seen this typically in machine learning, you have several experts giving their opinions whether it's going to rain or shine, and you want to form your opinion based on their opinion.",
            "So you kind of maintain a probability distribution on these experts based on who you think is good, and so if you want to write an LP for this for these probabilities of what you think.",
            "Experts, then these probabilities you want to go up and down right?",
            "Because they should sum up to one so this monotonicity sort of does not allow you to capture this.",
            "So again, there might be reasons to sort of do away with this monotonicity.",
            "Once out, yeah, one can handle these types of things, but we still don't have a very general framework like for covering and packing.",
            "I could tell you this very generic result, right?",
            "Any covering problem?",
            "You have a log D, But here sort of more.",
            "Ad hoc, at least at this stage."
        ],
        [
            "So just to give you an example for the weighted paging problem, one could write yet another LP and not maybe go in detail what this means, but notice here we have a non covering or packing constraint.",
            "It's sort of a little bit uglier LP for the same caching problem that we saw earlier, but one can show that OK, you can use this LP combined with the previous insights of this multiplicative type update to come up with a good algorithm an.",
            "For example, using this, so this LP is sort of convenient to work with for different reasons, which previous LP the covering LP was not, and using that we could prove what's called finally competitive paging, which is a refinement of paging, and this was useful in the case server problem.",
            "So the point of the whole thing is OK. You could still use these previous insights to handle sort of more complicated things which are not directly captured by the previous setting, right?",
            "Yeah, so one way we could do this was for the case server.",
            "Let me skip this is."
        ],
        [
            "But somehow yeah, so the result was that we could get a polylogarithmic competitive algorithm for K server on metric space."
        ],
        [
            "10 points and the idea was roughly to do.",
            "What's the standard approach by now.",
            "So you have any metric space you approximately an HST.",
            "Again, those of you don't know what agencies are.",
            "That's fine, and you lose roughly log in factor, but you can now think of your metric space as being some kind of hierarchical nice metric, and you can solve case are on this metric using insights from the paging algorithm, because case around uniform metric is the paging problem, an essentially looks like a hierarchical uniform metric.",
            "Right, so again, I will not make precise what this means, but we could use previous insights."
        ],
        [
            "Hard to solve this.",
            "And yet another thing we could do so in our paper we actually give a potential function based analysis of this case or problem.",
            "But again, this potential function is inspired by Primal Dual, so somehow.",
            "Yeah, So what these recent works do is they take this basic primal dual multiplicative inside type of method, but sort of you applied to a more general setting, maybe a positive negative constraints.",
            "Or you can use that to come up with a potential function.",
            "Again.",
            "Yeah, I don't have time to give details for this so.",
            "OK, so let me just."
        ],
        [
            "Include with some further extensions so.",
            "So here, so we saw in this basic primal dual method that I told you that.",
            "So how was it going right?",
            "So you bumped up these dual variables and based on that somehow you decided how to update the primal variables based on this multiplicative rule.",
            "Now you might ask, OK, but why do I only have to increase the dual variable?",
            "Like can't I be more sophisticated?",
            "Right or in some sense, so notice these duals are only for analysis purposes, right?",
            "So maybe you could come up with a more clever rule instead of just doing increasing their dual variables.",
            "Maybe go back and change somehow, so keep your primal still increasing, but maybe have their duals nor non monotone, so there is a very nice paper of Gupta, Nagarajan and I call this recent icalp where they actually do this so they come up with a very clever sort of much more sophisticated way to update the duals.",
            "Wells can go up and down, and they show very general result that if you have a sparse covering online problem.",
            "So again, sort of discovering setting, but it's sparse, so it has a cane on 00 and L nonzeros in any column.",
            "They can give this algorithm this much competitive, and that's also tight an here they allow duels to change up and down, and they actually show that previous framework is 2 week, like if you don't.",
            "If you only allow increasing the duals then you cannot get such a guarantee.",
            "So somehow this gives you much more power and this I think very wide open area which we haven't quite explored.",
            "Should be a lot more here.",
            "Another very nice again.",
            "Recent result I guess involve a today was group Krishnaswamy and proofs where they apply the primal dual framework to nonlinear programs.",
            "And again here it's more complicated because somehow instead of LP duality have to use convex programming duality and it's more involved.",
            "Another direction where this LP connection has come up in online setting is what I called dual fitting.",
            "This was a paper in recent soda.",
            "Again, that I do explore this connection between potential functions and LP's sort of more carefully so they show that for a very natural problem in scheduling.",
            "Previously, where are very complicated potential function proof or a magical sort of potential function proof.",
            "They show that you can demystify that proof by.",
            "Sort of giving a dual fitting argument so it makes.",
            "So it gives us sort of much better insight on what's the connection between potentials and LP."
        ],
        [
            "So I guess just to conclude.",
            "So we saw this very general primal dual framework and it's been quite influential to both unify various things and to solve problems, and I think our understanding is still very limited, like how we're doing.",
            "It seems very basic, so we don't know too much more than sort of the framework I described.",
            "You just minor extension.",
            "It seems there should be a. Yeah, much more extension of this possible and more unified theory, so I guess I'll."
        ],
        [
            "Stop at this.",
            "Thank you."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So I'll be talking about this primal dual approach for online problems, so let me begin.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "What's the outline going to be?",
                    "label": 0
                },
                {
                    "sent": "So I'll just give a very quick introduction about what online algorithms are.",
                    "label": 1
                },
                {
                    "sent": "I assume most of you know this already, but just so that everybody's on the same page, then I'll spend most of the time on this primal dual approach and I'll sort of develop it very slowly, so I'll first give you sort of very basic intuition about LP duality and what this basic method is, and then sort of the key idea of the proof without going in all the details.",
                    "label": 1
                },
                {
                    "sent": "And then we look at some case studies of two problems where how this is applied, and then if you have some time in the end, I'll mention about some recent.",
                    "label": 0
                },
                {
                    "sent": "Extensions of this.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Turn.",
                    "label": 0
                },
                {
                    "sent": "So yeah, what are online algorithms?",
                    "label": 1
                },
                {
                    "sent": "Again, as we all know it's the setting where your data is coming over time you don't know everything in upfront.",
                    "label": 0
                },
                {
                    "sent": "Things are only coming over time and still you would want to do something reasonable.",
                    "label": 1
                },
                {
                    "sent": "Particular algorithm has to make its current decision without knowing what's going to happen in the future, right so?",
                    "label": 0
                },
                {
                    "sent": "These kinds of settings arrives very naturally, like in scheduling is a very common example.",
                    "label": 0
                },
                {
                    "sent": "Or say if you're investing in the stock market, you don't know what's going to happen tomorrow, but you have to assign your portfolio somehow.",
                    "label": 0
                },
                {
                    "sent": "And again, there are various ways in the literature of looking at it.",
                    "label": 0
                },
                {
                    "sent": "You can do average case analysis which is like queuing theory various other ways.",
                    "label": 0
                },
                {
                    "sent": "But in computer science we look at mostly what's called competitive analysis or sort of the worst case ratio type of thing.",
                    "label": 0
                },
                {
                    "sent": "So what is competitive ratio for an algorithm?",
                    "label": 0
                },
                {
                    "sent": "So if you're given some online algorithm, let's call it on so competitive ratio is just.",
                    "label": 0
                },
                {
                    "sent": "If you look at the worst case ratio over all possible instances of how your online algorithm does versus had you known all the input in advance, what would have been the best?",
                    "label": 0
                },
                {
                    "sent": "Optimum offline solution and this number is called the competitive ratio, so the smaller it is, the better your algorithm is.",
                    "label": 0
                },
                {
                    "sent": "If it's one, it means you're optimal, but usually that's not the case, so you try to make this small one alternate view, which is often very useful in thinking about online algorithms is that you can think of this as a game with an adversary.",
                    "label": 0
                },
                {
                    "sent": "So what do I mean by this?",
                    "label": 0
                },
                {
                    "sent": "So suppose you have some kind of algorithm.",
                    "label": 0
                },
                {
                    "sent": "Now the adversary knows your strategy, right?",
                    "label": 0
                },
                {
                    "sent": "Like he knows this code, so he tried to come up with the worst case example, which will make your.",
                    "label": 0
                },
                {
                    "sent": "Algorithm do as bad as possible, so you can think of it.",
                    "label": 0
                },
                {
                    "sent": "OK, I've come up with some algorithm and I want to analyze its competitive ratio, so there is some malicious adversary out there who's trying to make your life as hard as possible.",
                    "label": 1
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Now often in online algorithms we also allow randomization in our algorithms and so this just means that your algorithm can toss some coins during its execution, and then we talk of expected competitive ratio.",
                    "label": 0
                },
                {
                    "sent": "So instead of the online cost, now an expected costs.",
                    "label": 0
                },
                {
                    "sent": "So one thing to notice is this is still like a worst case setting right?",
                    "label": 0
                },
                {
                    "sent": "So I am taking maximum overall input instances, so it's not some kind of average case, so the only randomization is sort of in my algorithm.",
                    "label": 0
                },
                {
                    "sent": "So already here, when you allow randomization, there are sort of two subtleties.",
                    "label": 0
                },
                {
                    "sent": "There are two notions, so one is what's called an oblivious adversary, and this is important.",
                    "label": 0
                },
                {
                    "sent": "So let me go a little bit slowly over this.",
                    "label": 0
                },
                {
                    "sent": "So in this setting, so this adversary that we talked about previously, so he knows what the algorithm is, what the randomized algorithm is doing, but he cannot see your random coin tosses, so he knows, like your code, exactly when you will toss a coin, what you do, but he cannot see the outcome of these coins.",
                    "label": 0
                },
                {
                    "sent": "So, so one way to think of these algorithms in this obvious setting is that you have some kind of randomized algorithm and at anytime adversary only knows sort of an expectation over what state your algorithm is in.",
                    "label": 0
                },
                {
                    "sent": "It does not know precisely what state it is in, right?",
                    "label": 0
                },
                {
                    "sent": "So you could have crossed some coins in the past and you are in some convex combination of states, so that's usually a good way of thinking about such algorithms in this oblivious setting.",
                    "label": 0
                },
                {
                    "sent": "Another sort of stronger adversaries.",
                    "label": 0
                },
                {
                    "sent": "What's called adaptive adversary.",
                    "label": 0
                },
                {
                    "sent": "So here again, your algorithm is randomized, so at each time step it might do something random so the adversary does not know what random step is taking, but in the next step it will know right?",
                    "label": 0
                },
                {
                    "sent": "So if algorithm does something random that adversaries knows, oh, you did this in the next time, so then I'll give you some other requests.",
                    "label": 0
                },
                {
                    "sent": "OK, so these algorithms are more almost like deterministic algorithms because you're giving the adversary too much power right?",
                    "label": 0
                },
                {
                    "sent": "Somehow it kills randomness.",
                    "label": 0
                },
                {
                    "sent": "So typically in this talk will be focusing on this oblivious adversary.",
                    "label": 0
                },
                {
                    "sent": "Things are most interesting in this setting, and in particular adaptive adversary mostly is like deterministic algorithms, and I won't make this precise what this means, but.",
                    "label": 0
                },
                {
                    "sent": "Yeah, results are not usually so intra.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Sting in this setting.",
                    "label": 0
                },
                {
                    "sent": "OK, so let's just begin with some classic problems and online settings to get a feel for what kind of problems will be looking.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So perhaps the most basic problem?",
                    "label": 0
                },
                {
                    "sent": "Again, most of you have probably seen this is the ski rental problem.",
                    "label": 1
                },
                {
                    "sent": "So here you want to go skiing an if you want to buy skis.",
                    "label": 1
                },
                {
                    "sent": "It costs some dollar B and let's say renting costs $1.",
                    "label": 0
                },
                {
                    "sent": "And the problem is you don't know how many skis days you'll be going to ski.",
                    "label": 0
                },
                {
                    "sent": "Maybe you go the first day and you break your leg and you never want to go again.",
                    "label": 0
                },
                {
                    "sent": "Or maybe you love it so much you go every week, so it's not known and maybe an adversary will decide this and the question is whether you should rent or buy.",
                    "label": 0
                },
                {
                    "sent": "Like every time you go skiing.",
                    "label": 0
                },
                {
                    "sent": "And the goal, of course, is to minimize the total cost.",
                    "label": 1
                },
                {
                    "sent": "So if you think about it for like 10 seconds, you'll realize the right thing is to not buy right away.",
                    "label": 0
                },
                {
                    "sent": "But maybe rent for the first B times or B -- 1 times, and then on the birth time when you go.",
                    "label": 0
                },
                {
                    "sent": "Then you buy it right?",
                    "label": 1
                },
                {
                    "sent": "So you'll never be more than Factor 2 off, because maybe then the adversary say OK, you exactly Gobi time skiing and never more, so you paid for the rental and then you paid for the binding factor 2 off, and this deterministic algorithm.",
                    "label": 0
                },
                {
                    "sent": "This simple algorithm is sort of type.",
                    "label": 0
                },
                {
                    "sent": "And it's also known in the randomized setting.",
                    "label": 0
                },
                {
                    "sent": "You can beat this too, so the there is an algorithm which achieves the ratio of y / y -- 1, which is roughly 1.58, and this is also tight.",
                    "label": 0
                },
                {
                    "sent": "Now you might wonder why this particular number, so we'll get some intuition for this later when we go in the talk, and this number particularly comes up often in online algorithms and will see there is a kind of fundamental reason for this.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "So let's look at another sort of maybe more complex.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "The problem, which is called the online virtual circuit routing.",
                    "label": 1
                },
                {
                    "sent": "So here you are given some network graph and I'll show you a picture in the next slide.",
                    "label": 0
                },
                {
                    "sent": "So there are capacities on the edges and you're getting requests overtime, right?",
                    "label": 0
                },
                {
                    "sent": "So requests is like a source and a sink.",
                    "label": 0
                },
                {
                    "sent": "And let's say you want to route some bandwidth from S2T over some path in the network.",
                    "label": 0
                },
                {
                    "sent": "Is here it's, let's say all of them have bandwidth one, so when I request arrives you can choose either you want to accept this request or reject it.",
                    "label": 1
                },
                {
                    "sent": "And if you choose to accept it, you have to find a path in your network.",
                    "label": 0
                },
                {
                    "sent": "But once you choose a path, you cannot re route it like once more requests come, you can't go back and change your decision.",
                    "label": 0
                },
                {
                    "sent": "So it's sort of online in the sense, and your goal is to minimize congestion.",
                    "label": 0
                },
                {
                    "sent": "So let's.",
                    "label": 0
                },
                {
                    "sent": "So so edges have some capacities and you're so you want to respect these edge capacities and you want to accept as many as you can, right?",
                    "label": 0
                },
                {
                    "sent": "So let's look at an example.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So say this was your network, and let's say all edges have capacity 5.",
                    "label": 0
                },
                {
                    "sent": "You get maybe one request an, so you decide to route it like this along this path so your congestion is 1 / 5 because edge is at capacity 5 and all these edges are one load.",
                    "label": 0
                },
                {
                    "sent": "Then maybe you get a second request.",
                    "label": 0
                },
                {
                    "sent": "You decide to route it like this, so this edge has congestion two or five and sort of discontinuous, so you get.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Other request you wrote it like this and so on.",
                    "label": 0
                },
                {
                    "sent": "So in these kinds of problems there are various kinds of questions you can look at, so there is this congestion parameter and throughput parameter, right?",
                    "label": 0
                },
                {
                    "sent": "And you can play with these.",
                    "label": 0
                },
                {
                    "sent": "And the key decision where that comes up in these problems is like when a request comes whether you want to reject it or accept it.",
                    "label": 1
                },
                {
                    "sent": "And if you choose to accept it, how do you route it right?",
                    "label": 0
                },
                {
                    "sent": "So these are sort of the two key questions.",
                    "label": 0
                },
                {
                    "sent": "And there has been in fact in the 90s there were like bunch of papers on this problem and they achieve various kinds of tradeoffs on these two things.",
                    "label": 0
                },
                {
                    "sent": "So one classic result is you can get order log and congestion and roughly constant throughput.",
                    "label": 0
                },
                {
                    "sent": "OK, and again, sort of at a very high level.",
                    "label": 1
                },
                {
                    "sent": "The main idea in these algorithms, the previous algorithms was you kind of assign a cost to an edge, which is an exponential function in its congestion.",
                    "label": 0
                },
                {
                    "sent": "So if Edge gets more and more congested like the penalty grows exponentially.",
                    "label": 0
                },
                {
                    "sent": "And now when you get a new request from S2 T you sort of compute, say the shortest path according to these penalties and make your decision along them.",
                    "label": 0
                },
                {
                    "sent": "So this is how sort of these algorithms roughly worked, and this name approach even has a name like exponential penalty approach.",
                    "label": 1
                },
                {
                    "sent": "And if you look at the analysis, they're sort of very slick, like just seems like magic when you look at these things.",
                    "label": 0
                },
                {
                    "sent": "OK, so this is how these problems work, so let me introduce.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "One more problem.",
                    "label": 0
                },
                {
                    "sent": "Which is again the classical paging or caching problem.",
                    "label": 0
                },
                {
                    "sent": "So here you have a universe of end pages.",
                    "label": 0
                },
                {
                    "sent": "Let's say they're all of unit size.",
                    "label": 0
                },
                {
                    "sent": "So think of these as some pages one through N sitting on your hard disk.",
                    "label": 0
                },
                {
                    "sent": "And there is a cache of size K which is think of it as being much less than North, right?",
                    "label": 1
                },
                {
                    "sent": "The size of your hard disk and you get.",
                    "label": 0
                },
                {
                    "sent": "So you're running a program maybe, and it requests pages overtime, so maybe there is a request sequence for these pages, and in this idealized theoretical model we think of it like this.",
                    "label": 0
                },
                {
                    "sent": "So if a page is requested.",
                    "label": 0
                },
                {
                    "sent": "If it's already in your cash, if it's sitting in this fast memory, it's like for free.",
                    "label": 0
                },
                {
                    "sent": "You don't pay anything.",
                    "label": 0
                },
                {
                    "sent": "Otherwise if it's not there in your cache, then it's a cache miss and you load this page from the memory in your cache.",
                    "label": 0
                },
                {
                    "sent": "And let's say you incur one unit of penalty.",
                    "label": 0
                },
                {
                    "sent": "And then you serve it, right?",
                    "label": 0
                },
                {
                    "sent": "So typically when you fetch some page, you have to decide what do you have to evict, because usually your cash will be full and so to bring something, you have to probably throw out something.",
                    "label": 0
                },
                {
                    "sent": "And this is where sort of the cleverness comes in, and the goal of course is to minimize the total number of cache misses, right?",
                    "label": 1
                },
                {
                    "sent": "You don't know what's going to come in the future, but you still want to come up with the algorithm, which does good, and the key decision is which page to evacuate.",
                    "label": 0
                },
                {
                    "sent": "When you get a request.",
                    "label": 0
                },
                {
                    "sent": "So what's known for this problem?",
                    "label": 0
                },
                {
                    "sent": "So this is a very classic problem.",
                    "label": 0
                },
                {
                    "sent": "Again, probably most of you have seen it already in the 1st paper by Sleater Tarjan, which introduced competitive analysis.",
                    "label": 0
                },
                {
                    "sent": "This sort of analyze the deterministic case.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Completely, so it's known that any deterministic algorithm is at least K competitive.",
                    "label": 0
                },
                {
                    "sent": "You can't beat K, and they also gave various K competitive algorithms in particular least recently used and also some other ones.",
                    "label": 0
                },
                {
                    "sent": "Now it turns out if you allow randomization in your algorithm, then you can do exponentially better.",
                    "label": 0
                },
                {
                    "sent": "So again, there was this classical result by Fiat at all, which showed that you can get the order log K competitive ratio, and this is also tight, so you cannot be this long, K. Which is this harmonic number, which is roughly 1K, and in fact now people even know how to achieve this exactly up to the constant.",
                    "label": 0
                },
                {
                    "sent": "So this problem is sort of very well understood.",
                    "label": 0
                },
                {
                    "sent": "You know we understand both the randomized under deterministic case, but it's in a classical sort of testbed for coming up with new algorithms.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "So so I showed you three different problems.",
                    "label": 0
                },
                {
                    "sent": "Key rental, virtual circuit routing and cashing in on the surface.",
                    "label": 0
                },
                {
                    "sent": "They sort of look very different, maybe OK, they're all online problems, so that's similar.",
                    "label": 0
                },
                {
                    "sent": "But other than that they seem.",
                    "label": 0
                },
                {
                    "sent": "Quite different, So what do they have in?",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Common.",
                    "label": 0
                },
                {
                    "sent": "There was a very nice insight by Buchbinder and or in 2005, which I'll elaborate a bit more later, so that insight was all these problems can be thought of as a special case of our abstract online problem.",
                    "label": 1
                },
                {
                    "sent": "Online linear programming problem.",
                    "label": 0
                },
                {
                    "sent": "So what is this abstract problem?",
                    "label": 0
                },
                {
                    "sent": "So here, so say you are given, so I assume everybody knows linear program, so it's just some linear objective function with a bunch of linear constraints and you want to optimize it.",
                    "label": 0
                },
                {
                    "sent": "So in this online setting, the game is the following.",
                    "label": 0
                },
                {
                    "sent": "So in the beginning you are just given, say some objective function.",
                    "label": 0
                },
                {
                    "sent": "Not any constraints, and let's say at time one you get some constraint that you want to satisfy, right?",
                    "label": 0
                },
                {
                    "sent": "So what we will do now, you'll pick some values for these X one X3X6 so that you satisfy this and then when you do that then at mikes time step maybe you get another constraint right?",
                    "label": 0
                },
                {
                    "sent": "And if your solution already satisfies this constraint then you don't do anything.",
                    "label": 0
                },
                {
                    "sent": "Otherwise you bump up the values a bit more to satisfy this and so on right?",
                    "label": 0
                },
                {
                    "sent": "So this continues.",
                    "label": 1
                },
                {
                    "sent": "And one thing will assume here that it's a covering LP, so by covering LP we just mean that all the constraints are of this type, that something something is greater than something.",
                    "label": 0
                },
                {
                    "sent": "So you would cover the right hand side and all the coefficients are non negative.",
                    "label": 0
                },
                {
                    "sent": "These are called covering LP's.",
                    "label": 0
                },
                {
                    "sent": "And these are sort of the simplest objects to work with.",
                    "label": 0
                },
                {
                    "sent": "OK, and your goal is to find a solution with sort of the minimum cost and what are the requirements.",
                    "label": 0
                },
                {
                    "sent": "So the key thing is, once a constraint arrives, you must satisfy it.",
                    "label": 0
                },
                {
                    "sent": "You can't say OK, I'll wait for 10 more steps and then I'll go back and satisfied.",
                    "label": 1
                },
                {
                    "sent": "You have to do it right then and the second sort of key issue is you cannot decrease the variable once you have set it to something.",
                    "label": 0
                },
                {
                    "sent": "OK, so this sort of models online nature that once I've decided in the past I'll go this high.",
                    "label": 0
                },
                {
                    "sent": "You can't sort of go back and change it otherwise.",
                    "label": 0
                },
                {
                    "sent": "Of course you could resolve the problem optimally.",
                    "label": 0
                },
                {
                    "sent": "In the end, right?",
                    "label": 0
                },
                {
                    "sent": "So so that's not allowed, so you cannot.",
                    "label": 0
                },
                {
                    "sent": "Decrease you can't sort of.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Do your decisions.",
                    "label": 0
                },
                {
                    "sent": "OK, so let's look at an example just to be on the same page.",
                    "label": 0
                },
                {
                    "sent": "So suppose yeah, initially there are no constraints.",
                    "label": 0
                },
                {
                    "sent": "And let's say this was your objective function.",
                    "label": 0
                },
                {
                    "sent": "You get a constraint like this.",
                    "label": 0
                },
                {
                    "sent": "So what's maybe a natural thing to do?",
                    "label": 0
                },
                {
                    "sent": "Let's set all the variables to one over North.",
                    "label": 1
                },
                {
                    "sent": "So this satisfies this, so that's great.",
                    "label": 0
                },
                {
                    "sent": "But now maybe you get a constraint like this.",
                    "label": 0
                },
                {
                    "sent": "So this particular solution that I had so far is not quite satisfying this, because it doesn't come up to one.",
                    "label": 0
                },
                {
                    "sent": "So what will I do?",
                    "label": 0
                },
                {
                    "sent": "Maybe the natural thing is to bump up all these X 2X and 1 / N -- 1.",
                    "label": 0
                },
                {
                    "sent": "So you satisfy this also and so on right?",
                    "label": 0
                },
                {
                    "sent": "So maybe the adversary gives you a sequence like this?",
                    "label": 0
                },
                {
                    "sent": "And what did our algorithm do so it kept bumping up?",
                    "label": 0
                },
                {
                    "sent": "Like when this constraint came it bumped up these variables and so on.",
                    "label": 0
                },
                {
                    "sent": "Now notice in hindsight, whatever had I known that this would be the linear program, the optimum thing would have been to just set this accent to one, right then you would have satisfied everything and you pay only one in your objective function.",
                    "label": 0
                },
                {
                    "sent": "But the way what is online paying?",
                    "label": 0
                },
                {
                    "sent": "So I claim online is paying roughly log North.",
                    "label": 1
                },
                {
                    "sent": "Becaused notice this X1 variable was set to 1 / N and then it was never changed.",
                    "label": 0
                },
                {
                    "sent": "This guy will be set to 1 / N -- 1 one over N -- 2 and so on all the way to 1 right?",
                    "label": 0
                },
                {
                    "sent": "So this harmonic sum which is roughly log an.",
                    "label": 0
                },
                {
                    "sent": "That's what online pays in at least this way of doing things.",
                    "label": 0
                },
                {
                    "sent": "And it turns out it's not too hard to show that this is really the best you can do.",
                    "label": 0
                },
                {
                    "sent": "I mean, I can convert this argument into also a lower bound proof, because what we were doing was sort of the reasonable thing to do.",
                    "label": 0
                },
                {
                    "sent": "OK, so yeah, so you cannot hope to be quite log North, but as we'll see you can basically get logarithm guarantees, but we'll come to that.",
                    "label": 0
                },
                {
                    "sent": "OK, so this was for the cover.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Linear programs, so one can also look at the dual setting.",
                    "label": 1
                },
                {
                    "sent": "I won't talk much about the dual setting in this talk, but I just want to give the problem formulation so you know that there is a notion out there.",
                    "label": 0
                },
                {
                    "sent": "So in the dual.",
                    "label": 0
                },
                {
                    "sent": "So in the covering what was happening like constraints were coming one at a time and you have to satisfy right now in the dual setting you get these variables one at a time.",
                    "label": 0
                },
                {
                    "sent": "OK, an instead of a covering LP you have a packing LP, so you have something something is less than something really the dual and the game looks like this, yeah?",
                    "label": 0
                },
                {
                    "sent": "Time one you get some constraint, I mean some variable like this so you know so you know all the constraints up front.",
                    "label": 0
                },
                {
                    "sent": "You know how it looks, but you don't know which what's going to happen with other variables.",
                    "label": 0
                },
                {
                    "sent": "And maybe you have to decide what value to pick.",
                    "label": 0
                },
                {
                    "sent": "Four Y one.",
                    "label": 0
                },
                {
                    "sent": "Then once you do that, maybe white shoes are revealed and so on.",
                    "label": 0
                },
                {
                    "sent": "Again, you can only you cannot decrease things once you have set up set them to some value and you can ask the same question that how well can I do.",
                    "label": 0
                },
                {
                    "sent": "OK. OK, good so.",
                    "label": 0
                },
                {
                    "sent": "And again this is a maximization problem now because it's a packing problem.",
                    "label": 0
                },
                {
                    "sent": "So to maximize because you could otherwise always just because zero solution right that would satisfy everything.",
                    "label": 0
                },
                {
                    "sent": "OK, yeah, so variables arrive sequentially and you can only modify or increase YT.",
                    "label": 1
                },
                {
                    "sent": "So pretty much the theory I'll only talk about the theory for covering LP's and things can be sort of in a straightforward way.",
                    "label": 0
                },
                {
                    "sent": "Map to the packing case.",
                    "label": 0
                },
                {
                    "sent": "Yeah, so turns out.",
                    "label": 0
                },
                {
                    "sent": "Why is this framework so powerful?",
                    "label": 1
                },
                {
                    "sent": "So as I mentioned, all these previous problems we saw earlier and much more can be expressed as special cases of this setting.",
                    "label": 0
                },
                {
                    "sent": "So let's just maybe.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "The ski rental problem.",
                    "label": 0
                },
                {
                    "sent": "So I can think of this as the following.",
                    "label": 0
                },
                {
                    "sent": "Online linear program.",
                    "label": 0
                },
                {
                    "sent": "So I have variables X, which means whether I buy my skis or not, so it's a 01 variable.",
                    "label": 0
                },
                {
                    "sent": "And I have a variable ZI, which means whether I rent on day or not OK. Now what are my constraints?",
                    "label": 0
                },
                {
                    "sent": "When each day I go skiing, I should either buy or rent, right?",
                    "label": 1
                },
                {
                    "sent": "So X plus size at least one?",
                    "label": 0
                },
                {
                    "sent": "And your objective function is this.",
                    "label": 0
                },
                {
                    "sent": "You pay before buying and everyday you rent, you pay one right.",
                    "label": 0
                },
                {
                    "sent": "So you can think exactly like every day you are going and you get a constraint like this which you should satisfy.",
                    "label": 0
                },
                {
                    "sent": "Yeah, so you model this prob.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Like this, so let's look at the routing linear program.",
                    "label": 1
                },
                {
                    "sent": "So this is a bit more complicated.",
                    "label": 0
                },
                {
                    "sent": "Here you have exponentially many variables.",
                    "label": 0
                },
                {
                    "sent": "So what?",
                    "label": 0
                },
                {
                    "sent": "So again, this is a standard routing LP.",
                    "label": 1
                },
                {
                    "sent": "If you have seen this so for every request RI write an for every possible path from SITI can have a variable.",
                    "label": 0
                },
                {
                    "sent": "How much of this request you route along this path, right?",
                    "label": 0
                },
                {
                    "sent": "So it could be exponentially many and then you just put the usual constraints.",
                    "label": 1
                },
                {
                    "sent": "So for each request I should.",
                    "label": 0
                },
                {
                    "sent": "Actually you can assign at most one unit of paths and it's at most because maybe you could have chosen to reject this right so, but at most you can get only one unit of credit and you should respect the congestion constraints, right?",
                    "label": 0
                },
                {
                    "sent": "So again, you don't need to see exactly what it is, so this is just.",
                    "label": 0
                },
                {
                    "sent": "If you sum up over all the load over the edges, you should satisfy the capacities.",
                    "label": 0
                },
                {
                    "sent": "OK, so again, you can think of it when the requests arrive.",
                    "label": 0
                },
                {
                    "sent": "You get sort of these variables online, so it's a packing online LP.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And let's look at our third page example.",
                    "label": 0
                },
                {
                    "sent": "So this is a little bit more complicated on the ski rental problems, so again, we have a covering LP, but.",
                    "label": 0
                },
                {
                    "sent": "It may be useful to see how one models paging and paging is also an example.",
                    "label": 0
                },
                {
                    "sent": "Will be looking at it in more detail later, so let's go over it a bit carefully.",
                    "label": 0
                },
                {
                    "sent": "OK, so in paging recall what was happening right?",
                    "label": 0
                },
                {
                    "sent": "Like at every time step you were getting a request for a page and if it was in your cash you don't pay anything.",
                    "label": 0
                },
                {
                    "sent": "Otherwise you pay something.",
                    "label": 0
                },
                {
                    "sent": "So let's first try to write a offline LP for this problem.",
                    "label": 0
                },
                {
                    "sent": "And it's a little bit tricky, so it's not the most obvious help you would think at the first side.",
                    "label": 0
                },
                {
                    "sent": "So here is how you do it.",
                    "label": 0
                },
                {
                    "sent": "So this is my timeline and look at all the times when, say, a particular page I was requested.",
                    "label": 0
                },
                {
                    "sent": "OK, so maybe it was requested here, then here then here, so on.",
                    "label": 0
                },
                {
                    "sent": "Now for every two consecutive requests of page, I let me associate the interval.",
                    "label": 0
                },
                {
                    "sent": "So let me call this interval I one I2 for the second consecutive requests and so on.",
                    "label": 0
                },
                {
                    "sent": "And the key observation is that.",
                    "label": 0
                },
                {
                    "sent": "OK, so suppose you when this page I was requested here and you did not incur a cache miss.",
                    "label": 0
                },
                {
                    "sent": "What does it mean?",
                    "label": 0
                },
                {
                    "sent": "Right?",
                    "label": 0
                },
                {
                    "sent": "So it must mean that.",
                    "label": 0
                },
                {
                    "sent": "This page I must have been sitting in your cache.",
                    "label": 0
                },
                {
                    "sent": "Since its previous requests until now, because if you ever evicted in the middle then you have to fetch it again.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "And you can actually argue that if you evict at once, you know there is no sense in fetching it unless it's requested.",
                    "label": 0
                },
                {
                    "sent": "I mean you can only be suboptimal, yeah, so if you did not incur a cache miss here, then I was sitting forever.",
                    "label": 0
                },
                {
                    "sent": "So it was kind of this interval was sitting in your cash.",
                    "label": 0
                },
                {
                    "sent": "So that gives us a nice way to capture this problem.",
                    "label": 0
                },
                {
                    "sent": "Yeah, so this is for page I then you do this for every other page right?",
                    "label": 0
                },
                {
                    "sent": "So for every page I prime I would have these intervals and so on.",
                    "label": 0
                },
                {
                    "sent": "And what is our constraint?",
                    "label": 0
                },
                {
                    "sent": "So I know that our cache has capacity K. Or in other words, if I look at anytime T. You can at most have case such intervals sitting in your cache, right?",
                    "label": 0
                },
                {
                    "sent": "I mean.",
                    "label": 0
                },
                {
                    "sent": "Or in other words, at least minor scale intervals must be missing.",
                    "label": 1
                },
                {
                    "sent": "The call end was the total number of pages and you can have at most K in your cache.",
                    "label": 1
                },
                {
                    "sent": "So N -- K at least N -- K must be missing, right?",
                    "label": 0
                },
                {
                    "sent": "And this is the view will adapt.",
                    "label": 0
                },
                {
                    "sent": "So here is the.",
                    "label": 0
                },
                {
                    "sent": "LP we can think of.",
                    "label": 0
                },
                {
                    "sent": "So let XIJ and again I hear is the index for the page is kind of the jet consecutive, so this kind of notation.",
                    "label": 0
                },
                {
                    "sent": "So let's have a variable XI J, which means at a particular time how much this interval IJ is missing from my cash.",
                    "label": 0
                },
                {
                    "sent": "OK. And by this argument previously that we have at least minus K intervals should be missing at anytime.",
                    "label": 1
                },
                {
                    "sent": "You just have the following constraint that if I look at anytime T. Right, if I sum up over all the pages and this right here just denotes the index for the.",
                    "label": 0
                },
                {
                    "sent": "A request at time T right?",
                    "label": 0
                },
                {
                    "sent": "So it's just a way of saying that yeah, if I sum up over all the pages, at least minus K must be missing and the objective function is this right?",
                    "label": 0
                },
                {
                    "sent": "Because every time you are missing a page, you pay one in the cache.",
                    "label": 0
                },
                {
                    "sent": "So again, maybe if you got lost, the point is yes, you can write it as a simple covering LP of this form that anytime you have minus K sort of pages missing from your cache.",
                    "label": 0
                },
                {
                    "sent": "So we saw all these problems can be written as this abstract program.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Problem, So what can you say about this problem?",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So in the 1st paper by Buchbinder right now or where they introduced this framework, they showed the following results.",
                    "label": 0
                },
                {
                    "sent": "So if you have a 01 covering or packing matrix, all your entries AIJ in your axe less than equal to BL PR01, and I showed you can get a competitive ratio of log D where these sort of the maximum non zero entries in any constraints.",
                    "label": 1
                },
                {
                    "sent": "So it's kind of sparse.",
                    "label": 0
                },
                {
                    "sent": "You get something better, and if it's a very dense LP then you can get logged at worst.",
                    "label": 1
                },
                {
                    "sent": "And for many other problems where you have two variables in any constraints, so ski rental was of this type because I had X + Y I less than equal to 1.",
                    "label": 0
                },
                {
                    "sent": "So they showed for many such problems you can get a / E -- 1.",
                    "label": 0
                },
                {
                    "sent": "And this was sort of nice because for this gives a intuitive explanation why this number pops up often in online algorithms, right?",
                    "label": 0
                },
                {
                    "sent": "So it's more like a combinatorial.",
                    "label": 0
                },
                {
                    "sent": "Sort of, yeah, it's a nice unifying result in that way.",
                    "label": 0
                },
                {
                    "sent": "So this was 1 result.",
                    "label": 0
                },
                {
                    "sent": "Now just some quick remarks.",
                    "label": 0
                },
                {
                    "sent": "So as we'll see, when you solve this sort of linear program, it gives you a fractional solution and later we'll see how to interpret this fractional solution as a randomized algorithm and I'll come to this if it doesn't make sense right now what this means?",
                    "label": 1
                },
                {
                    "sent": "But already this framework is quite flexible 'cause you know you could do the same things that you do with LP's sort of all the time.",
                    "label": 0
                },
                {
                    "sent": "So often you can solve LP's when you exponential number of constraints or variables by going to the dual or using ellipsoid.",
                    "label": 0
                },
                {
                    "sent": "So you could do the same thing here.",
                    "label": 0
                },
                {
                    "sent": "Or you can sort of play around with how much you are paying in the objective versus how much you are violating in the constraints right?",
                    "label": 0
                },
                {
                    "sent": "So maybe you can have an Alpha approximate solution with some beta feasibility so you can do all kinds of tricks that you do in approximation.",
                    "label": 0
                },
                {
                    "sent": "So so once you've formulated in this framework, you can use all kinds of tools that we have developed in approximation.",
                    "label": 0
                },
                {
                    "sent": "So this turned out to be very nice.",
                    "label": 0
                },
                {
                    "sent": "And so this showed some more things also.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So the previous results for work for a 01 matrix.",
                    "label": 1
                },
                {
                    "sent": "Now for a general covering and packing matrix where you could have arbitrary entries AIJ in your constraints they showed for recovering case, you can get a log N where N is the number of variables.",
                    "label": 1
                },
                {
                    "sent": "And for packing you get slightly more ugly things, so you get a log N plus something that depends on your number, but it's logarithmic in that.",
                    "label": 0
                },
                {
                    "sent": "OK, so it's roughly a log rhythmic approximation and these results are also tight, so you can't really hope to do much better, at least in this setting.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "But so why was this nice?",
                    "label": 0
                },
                {
                    "sent": "So it was like a very.",
                    "label": 0
                },
                {
                    "sent": "Universal and powerful framework and sort of unified and improved various previous results.",
                    "label": 1
                },
                {
                    "sent": "And as I'll discuss now, we could use these ideas to further so these results that I mentioned previously were already proved in 2005 and sort of.",
                    "label": 0
                },
                {
                    "sent": "They gave very general results, but we could use these ideas to sort of nail various problems that were open for a long time and I'll define these problems later as we go along.",
                    "label": 0
                },
                {
                    "sent": "So one of these was the weighted paging problem.",
                    "label": 0
                },
                {
                    "sent": "So this problem if you haven't heard about this before, so this.",
                    "label": 0
                },
                {
                    "sent": "Is just the first generalization you would think of the paging or caching problem, so in caching if you had a cache miss and you wanted to fetch a page you paid one in your cash penalty of your time, right?",
                    "label": 0
                },
                {
                    "sent": "So in waiting weighted paging, Now let's say each page has a different fetching cost, right?",
                    "label": 1
                },
                {
                    "sent": "So you pay W I4 page.",
                    "label": 0
                },
                {
                    "sent": "I so just the slightest weighted extension of caching, but surprisingly nothing was known for this before, so there were various special cases.",
                    "label": 0
                },
                {
                    "sent": "So like if you have two different types of weights.",
                    "label": 1
                },
                {
                    "sent": "There was some like polylogarithmic guarantee, and so on, but nothing was known.",
                    "label": 0
                },
                {
                    "sent": "Even sub linear in K for case of three weights.",
                    "label": 0
                },
                {
                    "sent": "So what we could do?",
                    "label": 0
                },
                {
                    "sent": "The 1st result an will actually see this algorithm later in the talk?",
                    "label": 0
                },
                {
                    "sent": "Could get us very simple logarithmic approximation.",
                    "label": 0
                },
                {
                    "sent": "And then even for a more general problem where you could have arbitrary weights and sizes in the caching setting, we could get a log squared K, then this was open because this is of course generalizing this problem and nothing was known for this already.",
                    "label": 0
                },
                {
                    "sent": "And this was further improved recently to the right log K. And of course you cannot beat log K because even for unit paging lock is the lower bound.",
                    "label": 0
                },
                {
                    "sent": "Yep.",
                    "label": 0
                },
                {
                    "sent": "And more recently we could use this kind of techniques for obtaining a polylogarithmic approximation for the K server problem, and again, if you don't know what this problem is, I'll define it a bit later.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, so for the rest of the talk, the plan is the following, so I want to give you sort of a very brief introduction to what linear programming duality is and how the primal technique primal dual technique is used in the offline setting.",
                    "label": 0
                },
                {
                    "sent": "If you haven't seen that before and then we look at how you adapted to the online case and I won't give you the full proof, but I'll basically give you the whole intuition and you'll see that it follows in a very natural way.",
                    "label": 0
                },
                {
                    "sent": "Once we set up sort of the machinery and then sort of will look at these particular problems and some extensions so.",
                    "label": 0
                },
                {
                    "sent": "So that's the plan for the rest of the talk and.",
                    "label": 1
                },
                {
                    "sent": "So maybe this is a good time if you have any questions or.",
                    "label": 0
                },
                {
                    "sent": "Something.",
                    "label": 0
                },
                {
                    "sent": "So now we'll go into the more technical stuff.",
                    "label": 0
                },
                {
                    "sent": "Cancel.",
                    "label": 0
                },
                {
                    "sent": "OK, So what is?",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Ality so let's begin with a simple puzzle type of thing.",
                    "label": 0
                },
                {
                    "sent": "So suppose you have some linear program, right?",
                    "label": 0
                },
                {
                    "sent": "So just two constraints on some objective function, and somebody gave you this linear program and you wanted to convince somebody that there is a solution of value less than equal to 12.",
                    "label": 1
                },
                {
                    "sent": "OK, so I wanted to convince you this was the case.",
                    "label": 0
                },
                {
                    "sent": "Now how would we do it?",
                    "label": 0
                },
                {
                    "sent": "So it's simple.",
                    "label": 1
                },
                {
                    "sent": "One way you could convince somebody's actually demonstrates such a solution, right?",
                    "label": 0
                },
                {
                    "sent": "So, so for example.",
                    "label": 0
                },
                {
                    "sent": "In this case, if I set X2 equal to three, then you see that.",
                    "label": 0
                },
                {
                    "sent": "Both these constraints are satisfied, so this is obviously satisfied, and two X2 is 6, so this is true and then you see that this objective function is 12.",
                    "label": 0
                },
                {
                    "sent": "So clearly this is a solution and maybe there is something better out there, right?",
                    "label": 0
                },
                {
                    "sent": "So there is a very simple witness that optimum is now.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "More than 12 no how about?",
                    "label": 0
                },
                {
                    "sent": "Slightly more harder question.",
                    "label": 0
                },
                {
                    "sent": "So suppose you wanted to convince someone that there is no solution of value 10.",
                    "label": 1
                },
                {
                    "sent": "Right, so notice this is a bit more tricky.",
                    "label": 0
                },
                {
                    "sent": "If you first see some time, because now you want to show that you, no matter what values of X one X2 you take, there is no way you can get this.",
                    "label": 0
                },
                {
                    "sent": "Right, so so if you haven't seen this before, it's yeah it's not obvious.",
                    "label": 0
                },
                {
                    "sent": "I mean, how do you?",
                    "label": 0
                },
                {
                    "sent": "It's like a Co NP witness right?",
                    "label": 0
                },
                {
                    "sent": "Yeah, so how would you do this?",
                    "label": 0
                },
                {
                    "sent": "Now let's look at this particular example.",
                    "label": 0
                },
                {
                    "sent": "Now, here is an ad hoc trick which works at least for this example.",
                    "label": 0
                },
                {
                    "sent": "So suppose I take the first constraint for the first equation multiplied by a factor of two.",
                    "label": 0
                },
                {
                    "sent": "So take this multiply by two and add it to the second constraint.",
                    "label": 0
                },
                {
                    "sent": "Right, So what do I get so 2 * X one plus X one is 3X1 and this would be 4X2 is at least 11 right which is 2 * 3 + 5, right?",
                    "label": 0
                },
                {
                    "sent": "And the reason we multiplied with this by two and one was notice what we have now.",
                    "label": 0
                },
                {
                    "sent": "This is exactly what we had in the objective function.",
                    "label": 0
                },
                {
                    "sent": "So you have shown by sort of doing this funny multiplication and adding them that.",
                    "label": 0
                },
                {
                    "sent": "This is at least 11.",
                    "label": 0
                },
                {
                    "sent": "And what this basically says is that no matter what X one X2 I take, I can never go below 11.",
                    "label": 0
                },
                {
                    "sent": "Right, so this is your witness.",
                    "label": 0
                },
                {
                    "sent": "So one way you could convince somebody is to give them these multipliers, two and one, and they can convince themselves.",
                    "label": 1
                },
                {
                    "sent": "And LP duality theorem is basically this that this seemingly ad hoc trick that fitted here always works no matter what your linear program is.",
                    "label": 0
                },
                {
                    "sent": "You can always come up with these multipliers and that will do the job.",
                    "label": 0
                },
                {
                    "sent": "So, so let's just formalize this a little bit.",
                    "label": 0
                },
                {
                    "sent": "And yeah, we'll see.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Some actually a formal proof of this.",
                    "label": 0
                },
                {
                    "sent": "So you can say you are given some linear program like this and I can always write it in this form.",
                    "label": 0
                },
                {
                    "sent": "Something is greater than equal to something, because if it was less than equal to something, I can negate both sides on.",
                    "label": 0
                },
                {
                    "sent": "The sign will change, right?",
                    "label": 0
                },
                {
                    "sent": "OK, so now in duality we take some linear combination of these constraints, let's say weighted by yjs.",
                    "label": 0
                },
                {
                    "sent": "And we do exactly what we did before, so we choose these multipliers in such a way.",
                    "label": 0
                },
                {
                    "sent": "That you're right, if you sum up these multiplied constraints, they are less than equal to the objective function.",
                    "label": 0
                },
                {
                    "sent": "OK, and so if you do that you can easily check by very small computation that it will give you a witness of this type that if you look at this objective function CJXJ.",
                    "label": 0
                },
                {
                    "sent": "Yeah, there should be a summation here, which I guess I'm missing, but yeah, so if you look at this objective function then this by I will be a lower bound.",
                    "label": 0
                },
                {
                    "sent": "For the optimum, just like in the previous example, and where is this buyer coming from?",
                    "label": 0
                },
                {
                    "sent": "Notices just some of these buys multiplied with wireless.",
                    "label": 0
                },
                {
                    "sent": "So what we do is we call this a dual.",
                    "label": 0
                },
                {
                    "sent": "We call this whole thing a dual LP, so these are what are called dual constraints.",
                    "label": 0
                },
                {
                    "sent": "So you want to come up with my eyes with satisfy this and this is your dual objective so you can write this dual LP.",
                    "label": 0
                },
                {
                    "sent": "And what's known?",
                    "label": 0
                },
                {
                    "sent": "So there is this strong LP duality which says that actually you can come up with these wise where this equality is achieved, right?",
                    "label": 0
                },
                {
                    "sent": "And in fact, so just a small calculation, which I'll skip here.",
                    "label": 0
                },
                {
                    "sent": "You can also show that for this equality to be achieved, basically all the inequalities here should have been tight, so there should be an equality.",
                    "label": 0
                },
                {
                    "sent": "And here you should have an equality and this gives rise to what are called complementary slackness conditions.",
                    "label": 0
                },
                {
                    "sent": "So what this means is that if this dual variable Yi, which corresponds to the Earth primal constraint is non negative, then this primal constraint is tight and vice versa right?",
                    "label": 1
                },
                {
                    "sent": "So if some XC0 then the Earth dual constraint is tight and actually let me give a.",
                    "label": 0
                },
                {
                    "sent": "Very nice proof of this complementary slackness, which I think should be more well known, but somehow so the usual way you prove all this is we are this far cash lemma and some complicated stuff.",
                    "label": 0
                },
                {
                    "sent": "But here is a very sort of intuitive way to see this.",
                    "label": 0
                },
                {
                    "sent": "So let's see what's a linear program, right?",
                    "label": 0
                },
                {
                    "sent": "So we all know this.",
                    "label": 0
                },
                {
                    "sent": "So in linear program you somehow have a direction given by this C where you want to optimize and you have some linear constraints right given by these.",
                    "label": 0
                },
                {
                    "sent": "Hyperplanes so this is in the A One Direction, a direction and so on.",
                    "label": 0
                },
                {
                    "sent": "So we have some polytope and you want to maximize in some direction.",
                    "label": 0
                },
                {
                    "sent": "OK, and we OK.",
                    "label": 0
                },
                {
                    "sent": "So we know like in this case if these were your constraints then optimum 'cause this is our objective direction.",
                    "label": 0
                },
                {
                    "sent": "It would be somewhere here.",
                    "label": 0
                },
                {
                    "sent": "So let's look at this following physical proof.",
                    "label": 0
                },
                {
                    "sent": "So imagine this was like a particle, some small particle, and this was a force acting on this particle.",
                    "label": 0
                },
                {
                    "sent": "And this was the barriers.",
                    "label": 0
                },
                {
                    "sent": "So this particle cannot escape.",
                    "label": 0
                },
                {
                    "sent": "Sort of these.",
                    "label": 0
                },
                {
                    "sent": "Hyperplanes so we know that.",
                    "label": 0
                },
                {
                    "sent": "OK, so say this particle starts here, then maybe it would hit here.",
                    "label": 0
                },
                {
                    "sent": "Then this forces acting so it would stabilize here, right?",
                    "label": 0
                },
                {
                    "sent": "Now at this equilibrium, if I think of physical particle, so there is this 4th C acting on it.",
                    "label": 0
                },
                {
                    "sent": "And what is the force balancing it?",
                    "label": 0
                },
                {
                    "sent": "So this force must come from?",
                    "label": 0
                },
                {
                    "sent": "Something along by one direct a One Direction and something along a two direction right?",
                    "label": 0
                },
                {
                    "sent": "And these forces.",
                    "label": 0
                },
                {
                    "sent": "So imagine this hyperplane applying a force of 1 along the direction A1 and this hyperplane applying a force of Y 2 units along the direction A to write the normal direction and at equilibrium because this is a stable system, these things should balance out.",
                    "label": 0
                },
                {
                    "sent": "So this 4C should be cancelled by these.",
                    "label": 0
                },
                {
                    "sent": "Other forces that are applying right?",
                    "label": 0
                },
                {
                    "sent": "And this is exactly what LP duality says, so there are these combinations yiz such that this exactly holds, so in some sense you can think of the dual as.",
                    "label": 0
                },
                {
                    "sent": "So, So what does this picture tell us, right?",
                    "label": 0
                },
                {
                    "sent": "Like so this already conveys us a lot.",
                    "label": 0
                },
                {
                    "sent": "So if this was the optimum achieved at this vertex, then you know that the only forces that are being applied are by the hyperplanes that touch at this vertex, right?",
                    "label": 0
                },
                {
                    "sent": "Like this, a 3 does not need to apply any force, it has no effect.",
                    "label": 0
                },
                {
                    "sent": "So this exactly translates to complementary slackness, and in fact sort of the more force.",
                    "label": 0
                },
                {
                    "sent": "A constraint is applying, which means the dual is high.",
                    "label": 1
                },
                {
                    "sent": "Sort of means how likely that constraint is being pushed in some sense, so this is sort of maybe more physical intuition for the dual, which is maybe useful to keep in mind.",
                    "label": 0
                },
                {
                    "sent": "OK, so this was sort of the bit about LP duality.",
                    "label": 0
                },
                {
                    "sent": "And how does how?",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "LP duality, very useful in approximation, so here is how a generic primal dual offline algorithm works.",
                    "label": 1
                },
                {
                    "sent": "So suppose you are given some primal problem or problem that you want to solve.",
                    "label": 0
                },
                {
                    "sent": "So using Primal Dual the way you would do it is you look at the dual which looks like this right?",
                    "label": 1
                },
                {
                    "sent": "And you start with the solution says 00, so everything is.",
                    "label": 0
                },
                {
                    "sent": "Kind of yeah.",
                    "label": 0
                },
                {
                    "sent": "So the primal is unfeasible.",
                    "label": 0
                },
                {
                    "sent": "You haven't satisfied anything and the dual is feasible and what you try to come up in a primal dual algorithm is the following.",
                    "label": 0
                },
                {
                    "sent": "And this is where the ingenuity lies.",
                    "label": 0
                },
                {
                    "sent": "So you try to come up with some way of increasing the primal and dual variables together such that.",
                    "label": 0
                },
                {
                    "sent": "With the following property, right?",
                    "label": 0
                },
                {
                    "sent": "So if the dual increases by say one if the dual objective function, then somehow if you could guarantee that the primal increases by some at most C. And of course it's not obvious how to do this.",
                    "label": 1
                },
                {
                    "sent": "It depends on the problem, involves a lot of creativity, but suppose you could do this and you end up with some feasible solutions.",
                    "label": 0
                },
                {
                    "sent": "So you kept increasing the dual and primal so that this became feasible, and this also remains feasible.",
                    "label": 0
                },
                {
                    "sent": "Yeah, then this implies you ever see approximate solution because the dual was a lower bound and whenever I increase the dual, one primal at most increased by some C times.",
                    "label": 0
                },
                {
                    "sent": "So that's my C approximation right there.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So here is, so we'll follow a similar idea for our online primal dual setting.",
                    "label": 1
                },
                {
                    "sent": "Write an so this is perhaps maybe the most important slide of the talk, so let's let me run slowly through it.",
                    "label": 0
                },
                {
                    "sent": "So again, recall the Primal Online primal dual setting.",
                    "label": 0
                },
                {
                    "sent": "What was happening there, right?",
                    "label": 0
                },
                {
                    "sent": "So at each time step T you are getting some constraint at that time and you had some objective function.",
                    "label": 0
                },
                {
                    "sent": "So let's do the following thought experiment.",
                    "label": 0
                },
                {
                    "sent": "So suppose at time T you end up with the following.",
                    "label": 0
                },
                {
                    "sent": "This constraint arrives.",
                    "label": 0
                },
                {
                    "sent": "Now, of course, if your current values of X is already satisfy this, then.",
                    "label": 0
                },
                {
                    "sent": "You don't need to do anything.",
                    "label": 0
                },
                {
                    "sent": "You can move on to the next step, so let's say it's not satisfied, right?",
                    "label": 0
                },
                {
                    "sent": "So this constraint is currently being violated, so I have to bump up these exercise to kind of satisfy this.",
                    "label": 0
                },
                {
                    "sent": "So let's see what's happening in the dual right now in the dual we have a variable for every constraint out there, right?",
                    "label": 0
                },
                {
                    "sent": "This was the multiplier variable.",
                    "label": 0
                },
                {
                    "sent": "So at time T, when the tiered constraints arrives in the primal, you have some dual variable YT and again the way the dual objective was constructed.",
                    "label": 0
                },
                {
                    "sent": "So because this right hand side in the primal becomes the objective in the dual.",
                    "label": 0
                },
                {
                    "sent": "So you would get this variable white in the dual and this in the dual objective BT YT term.",
                    "label": 0
                },
                {
                    "sent": "So so far it's nothing special is going on.",
                    "label": 0
                },
                {
                    "sent": "Now let's think of at the following.",
                    "label": 0
                },
                {
                    "sent": "Suppose I bump up YT by one, so I'm trying to bump up my do a little bit.",
                    "label": 0
                },
                {
                    "sent": "And the question is.",
                    "label": 0
                },
                {
                    "sent": "How much should I bump up these excise right?",
                    "label": 0
                },
                {
                    "sent": "Because this constraint is not satisfied so I have to come up with a rule for this.",
                    "label": 0
                },
                {
                    "sent": "Yeah, so let's bump up YT by one.",
                    "label": 0
                },
                {
                    "sent": "So what happens if I bump up Whitey by one now because my dual objective was BT YT, my dual cost will increase by BT bumping up my YT by 1.",
                    "label": 0
                },
                {
                    "sent": "An If I bump up these excise by some Delta XI which I don't know quite yet, how to do this, but I'm trying to figure out by this thought experiment.",
                    "label": 0
                },
                {
                    "sent": "So suppose I bump up Zi by Delta XI, then my primal cost will increase by CI times Delta XI, right?",
                    "label": 0
                },
                {
                    "sent": "Because this was my objective function and that's the change in the primal cost an in a primal dual algorithm.",
                    "label": 0
                },
                {
                    "sent": "What did you want to do?",
                    "label": 0
                },
                {
                    "sent": "We want to relate the dual to the primal.",
                    "label": 0
                },
                {
                    "sent": "If you could connect them, then we have given our primal dual algorithm.",
                    "label": 0
                },
                {
                    "sent": "So somehow we want to.",
                    "label": 0
                },
                {
                    "sent": "Come up with these Delta's eyes.",
                    "label": 0
                },
                {
                    "sent": "So that the increase in primal cost is, say, roughly the same or within some small factor of the increase in the dual cost OK?",
                    "label": 0
                },
                {
                    "sent": "So how can we do this now?",
                    "label": 0
                },
                {
                    "sent": "I know the dual cost when I increase YT by one, is it increases by BT?",
                    "label": 0
                },
                {
                    "sent": "But what do I know about this BT?",
                    "label": 0
                },
                {
                    "sent": "So the only thing I know about this BT.",
                    "label": 0
                },
                {
                    "sent": "It was the right hand side of this constraint, right?",
                    "label": 0
                },
                {
                    "sent": "And we know.",
                    "label": 0
                },
                {
                    "sent": "That this constraint was not satisfied.",
                    "label": 0
                },
                {
                    "sent": "That's the whole reason I'm increasing my variables.",
                    "label": 0
                },
                {
                    "sent": "If so, I know that this summation, AIX I hear, is less than equal to BT.",
                    "label": 0
                },
                {
                    "sent": "OK, so this much I know so far.",
                    "label": 0
                },
                {
                    "sent": "OK, so my problem is somehow I want to relate this thing to this thing.",
                    "label": 0
                },
                {
                    "sent": "OK Anne, how can we do it?",
                    "label": 0
                },
                {
                    "sent": "So one way is just to do a pattern matching right?",
                    "label": 0
                },
                {
                    "sent": "So I want to do this to this.",
                    "label": 0
                },
                {
                    "sent": "So what I'll do?",
                    "label": 0
                },
                {
                    "sent": "So suppose I set my Delta XI to be Aix.",
                    "label": 0
                },
                {
                    "sent": "I oversee I let's just do a blind substitution.",
                    "label": 0
                },
                {
                    "sent": "The notice that this some CCI cancels and shows this.",
                    "label": 0
                },
                {
                    "sent": "Alright, so.",
                    "label": 0
                },
                {
                    "sent": "Yeah, so it's just I don't have much choice here, right?",
                    "label": 0
                },
                {
                    "sent": "Like OK, I wanted to relate this thing to this thing and so it's kind of forced upon me.",
                    "label": 0
                },
                {
                    "sent": "So that's what I'll do.",
                    "label": 0
                },
                {
                    "sent": "So I'll set up my rule as being whenever I increase the dual by 1 unit I will increase the primal variables XI by something like this.",
                    "label": 0
                },
                {
                    "sent": "Now let's stare at this bit what it means.",
                    "label": 0
                },
                {
                    "sent": "And you'll see it's a very intuitive thing, so I'm increasing XI.",
                    "label": 0
                },
                {
                    "sent": "By proportional to this right?",
                    "label": 0
                },
                {
                    "sent": "So my Delta XI is this.",
                    "label": 0
                },
                {
                    "sent": "And so the numerator is AI, right?",
                    "label": 0
                },
                {
                    "sent": "And what does this mean that if my I was big, then I'm increasing this variable by a lot and a big big big means that this variable was helping a lot covering this constraint, right?",
                    "label": 0
                },
                {
                    "sent": "Like if some a let's say it was very, very big, then I'm trying to increase this variable abit more because it helps me a lot even if I increase it a bit to cover it and in the denominator you have CI right?",
                    "label": 0
                },
                {
                    "sent": "Which means and what does big CI mean?",
                    "label": 0
                },
                {
                    "sent": "So if my CI was large, it means that every time we increase this variable I pay a lot in my primal, so I don't want to increase this variable.",
                    "label": 0
                },
                {
                    "sent": "So roughly you should be inversely proportional to the cost, right?",
                    "label": 0
                },
                {
                    "sent": "So it's kind of doing the right thing, so here I should be in the numerator, see and the nominator, and this is a formal proof for why I mean this whole chain of inequalities that this is sort of the right thing to do.",
                    "label": 0
                },
                {
                    "sent": "So this gives us a very generic rule.",
                    "label": 0
                },
                {
                    "sent": "That yeah, so currently have some solution you want to raise it so you do it in a way such that if.",
                    "label": 0
                },
                {
                    "sent": "The rate of increase of X as a function of the dual is proportional to X, and this proportionality is a overseer and let's forget about that.",
                    "label": 0
                },
                {
                    "sent": "Let's assume all these are one, but the key point is that.",
                    "label": 1
                },
                {
                    "sent": "DX over device sort of proportional to X.",
                    "label": 0
                },
                {
                    "sent": "It's the rate at which I increase X already depends on the value X.",
                    "label": 0
                },
                {
                    "sent": "And if you recall from your basic calculus or whatever, if you have a differential equation like this where you are increasing a variable at a rate that proportional to X, then it will vary as some exponent of Y.",
                    "label": 0
                },
                {
                    "sent": "So this variable will sort of start growing exponentially.",
                    "label": 0
                },
                {
                    "sent": "And this is essentially the whole insight of the primal dual method.",
                    "label": 0
                },
                {
                    "sent": "OK go.",
                    "label": 0
                },
                {
                    "sent": "Yeah, it just came directly at us, right?",
                    "label": 0
                },
                {
                    "sent": "We didn't do.",
                    "label": 0
                },
                {
                    "sent": "We just tried to relate the primal and dual and it just fell in our laps.",
                    "label": 0
                },
                {
                    "sent": "So let's make this a bit more precise and then we have a complete algorithm.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So one problem, so I said in the previous slide.",
                    "label": 0
                },
                {
                    "sent": "OK, we should increase the variable proportional to its current value.",
                    "label": 1
                },
                {
                    "sent": "That's what the previous thing told us.",
                    "label": 0
                },
                {
                    "sent": "But of course there is one trivial sort of technicality that we need to take care of because we start with all zero solution, typically in the beginning.",
                    "label": 0
                },
                {
                    "sent": "So if we try to apply this rule and you know you'll stay at 0 right like your rate of change is still 0 because X is 0.",
                    "label": 0
                },
                {
                    "sent": "So one thing is OK. At some point you want to bump it like give it a seeding right?",
                    "label": 0
                },
                {
                    "sent": "So instead of zero give us something very slightly more than zero.",
                    "label": 0
                },
                {
                    "sent": "So typically you would initialize it to one over North.",
                    "label": 0
                },
                {
                    "sent": "So think of 1 / N as some very small number.",
                    "label": 0
                },
                {
                    "sent": "Another question is OK when should I bump up my variable from zero to this tiny seed and again, complementary slackness tells us when to do this and this was the reason was sort of why I went a bit more into this complementary slackness, so recall that complementary slackness says that in any optimum solution a variable should be non negative only if the corresponding dual is tight.",
                    "label": 0
                },
                {
                    "sent": "Right?",
                    "label": 0
                },
                {
                    "sent": "So this is exactly what we do.",
                    "label": 0
                },
                {
                    "sent": "Will bump up this variable from zero to one over nor some small number when its corresponding dual constraint becomes tight.",
                    "label": 1
                },
                {
                    "sent": "'cause this sort of the right thing to do by complementary slackness.",
                    "label": 0
                },
                {
                    "sent": "And I'm being a bit vague here on purpose because if you try to write it notationally it becomes a bit pain.",
                    "label": 0
                },
                {
                    "sent": "But hopefully the idea is clear that it's sort of the right time to update a variable right when it's two list, right?",
                    "label": 0
                },
                {
                    "sent": "OK, and also so this is not the only way to do this.",
                    "label": 0
                },
                {
                    "sent": "There are also some other ways which work in some other problems and I will see all of this in the next slide or so.",
                    "label": 0
                },
                {
                    "sent": "Yeah, so so this is sort of the algorithm, so you bump up a variable from zero to some small value when.",
                    "label": 0
                },
                {
                    "sent": "The dual tells you that it's time to bump it up and its dual constraint becomes tight and once it start becomes nonzero, you started increasing it according to that exponential rule that we saw in the previous slide.",
                    "label": 0
                },
                {
                    "sent": "So this is sort of the only thing you need to remember at a high level.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Yeah, OK, maybe I.",
                    "label": 0
                },
                {
                    "sent": "Say this OK, so let's summarize this.",
                    "label": 0
                },
                {
                    "sent": "So yeah, when the earth constraint arrives right in the primal.",
                    "label": 0
                },
                {
                    "sent": "OK, so you initialize the dual.",
                    "label": 0
                },
                {
                    "sent": "So for this constraint there is a corresponding dual variable.",
                    "label": 0
                },
                {
                    "sent": "Initially you set it to 0.",
                    "label": 0
                },
                {
                    "sent": "If this constraint was already satisfied.",
                    "label": 0
                },
                {
                    "sent": "Of course you don't need to do anything.",
                    "label": 0
                },
                {
                    "sent": "So let's assume it's unsatisfied, so we'll start gradually increasing the dual.",
                    "label": 0
                },
                {
                    "sent": "Variable Yi corresponding to that constraint.",
                    "label": 0
                },
                {
                    "sent": "And we'll set this variable XJ to say 1 / N if it's dual constraint becomes tight, right?",
                    "label": 0
                },
                {
                    "sent": "Because once this why increases.",
                    "label": 0
                },
                {
                    "sent": "At some point, this dual constraint corresponding to this variable will be tight, so we set it to small number and then we sort of update it multiplicatively.",
                    "label": 0
                },
                {
                    "sent": "Proportional to XI with AI over CI.",
                    "label": 0
                },
                {
                    "sent": "So that's sort of the algorithm and what we can show.",
                    "label": 0
                },
                {
                    "sent": "Is that this update in this update rule?",
                    "label": 0
                },
                {
                    "sent": "Remember this slide couple of couple of slides ago, right?",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I was ensuring that my primal cost increase is bounded by the increase in the dual.",
                    "label": 0
                }
            ]
        },
        "clip_31": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So I've ensured this so that ensures that yeah, so I'm always satisfying this according to my rule.",
                    "label": 0
                },
                {
                    "sent": "And we can also show by a small calculation that the dual solution is violated by at most log in factor and roughly.",
                    "label": 1
                },
                {
                    "sent": "This is because you start to ramp up things exponentially, right?",
                    "label": 0
                },
                {
                    "sent": "So you won't have to increase your dual by too much, roughly logarithmic, and then your variable becomes so large that your primal will be satisfied.",
                    "label": 0
                },
                {
                    "sent": "And again, this can be made formal with the calculation, but.",
                    "label": 0
                },
                {
                    "sent": "Avoiding it for because that would make a bit of a mess, but it's not hard to work it out.",
                    "label": 0
                },
                {
                    "sent": "OK, so let's look.",
                    "label": 0
                }
            ]
        },
        "clip_32": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Running example so this weighted caching problem which I already mentioned was open for a long time, but we'll see how it follows very easily from this setting.",
                    "label": 0
                },
                {
                    "sent": "So again, there's a very simple way to think of this weighted caching problem as we saw at anytime.",
                    "label": 0
                },
                {
                    "sent": "Right, we know that there can be at most K pages in our cache, so at least N -- K pages must be missing.",
                    "label": 0
                },
                {
                    "sent": "So let XI denote how much pages missing from my cache.",
                    "label": 0
                },
                {
                    "sent": "And I'm maintaining that summation XI should be at least minus K. Now at time T, suppose some page piece requested.",
                    "label": 0
                },
                {
                    "sent": "So when a page is requested, I know this page must be completely in my cache, right?",
                    "label": 0
                },
                {
                    "sent": "Or in other words, the amount that page is missing from my cache should be 0, because if it's completely present.",
                    "label": 0
                },
                {
                    "sent": "So I should set XP to be 0 if P is requested, but now maybe setting XP-20 violates this right?",
                    "label": 0
                },
                {
                    "sent": "Because I currently maintain this nice frontier that everything sum up sums up to more than N -- K I. I'm forced to set something down to zero.",
                    "label": 0
                },
                {
                    "sent": "So now again maintain this.",
                    "label": 0
                },
                {
                    "sent": "I have to bump up some other variables.",
                    "label": 0
                },
                {
                    "sent": "Or in other words, it means I have to bring pee in my cash so I have to make room by bumping out, like evicting out some other variables.",
                    "label": 0
                },
                {
                    "sent": "That's what it means.",
                    "label": 0
                },
                {
                    "sent": "'cause if you increase excite means you are sort of throwing things away.",
                    "label": 0
                },
                {
                    "sent": "And what this previous slide tells us that the increase in your variable should be.",
                    "label": 0
                },
                {
                    "sent": "Yeah, so if you just write the LP in the objective function, we have these weights WS so it should be inversely proportional to WI and this multiplicative rule.",
                    "label": 0
                },
                {
                    "sent": "Right and notice here I'm adding this instead of just one over W * X. I have added this so this is sort of another way to see it.",
                    "label": 0
                },
                {
                    "sent": "Right, yeah?",
                    "label": 0
                },
                {
                    "sent": "So if this doesn't make sense, never mind.",
                    "label": 0
                },
                {
                    "sent": "So essentially we're doing a multiplicative rule together with seeding combined in it.",
                    "label": 0
                },
                {
                    "sent": "So if X is basically zero, then this 1 / K. Let's this XI increase.",
                    "label": 0
                },
                {
                    "sent": "Otherwise it XR becomes large in this XI takes over.",
                    "label": 0
                },
                {
                    "sent": "So I mean there are various ways you can play around with these things.",
                    "label": 0
                },
                {
                    "sent": "OK. Yeah, so if you just do a multiplicative update like this, this gives your weighted paging algorithm and that's it.",
                    "label": 0
                },
                {
                    "sent": "It's log competitive.",
                    "label": 0
                },
                {
                    "sent": "Now, once you see this algorithm, you can ask.",
                    "label": 0
                },
                {
                    "sent": "OK, so ultimately we solve this fancy primal dual framework, but ultimately what we're doing is just increasing variables multiplicatively, right?",
                    "label": 0
                },
                {
                    "sent": "That's the key inside.",
                    "label": 0
                },
                {
                    "sent": "And again, if you're familiar with sort of multiplicative update methods in machine learning and so on, that's what they also do.",
                    "label": 0
                },
                {
                    "sent": "Like this whole technology of multiplicative updates.",
                    "label": 0
                },
                {
                    "sent": "But now it's also another algorithm paradigm.",
                    "label": 0
                },
                {
                    "sent": "So can we just so is this method just telling us that OK multiplicative update is the thing to do and it's?",
                    "label": 0
                },
                {
                    "sent": "Not telling us much more so do we need?",
                    "label": 0
                },
                {
                    "sent": "We need all this LP business.",
                    "label": 0
                },
                {
                    "sent": "Now I want to argue that no, so this LP is still sort of important, so for this weighted paging maybe I could have done without the LP, right?",
                    "label": 0
                },
                {
                    "sent": "I could have just given you this multiplicative update algorithm and analyzed it directly, but let me give you another example where you really see the power of this LP coming in.",
                    "label": 0
                }
            ]
        },
        "clip_33": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So let's look at this generalized caching setting, which is the setting of caching where now pages have both arbitrary sizes instead of unit size, and also arbitrary weights.",
                    "label": 0
                },
                {
                    "sent": "And here is a Canonical bad example for weighted caching.",
                    "label": 0
                },
                {
                    "sent": "So we have a cache of size K, so we can only store K size worth of pages.",
                    "label": 0
                },
                {
                    "sent": "Now suppose you just had two pages which were of size roughly slightly more than K / 2.",
                    "label": 0
                },
                {
                    "sent": "OK. And suppose you were getting requests alternately 121212 and so on.",
                    "label": 0
                },
                {
                    "sent": "Now in any real solution or integral solution, you have to have a cache miss at each step, right?",
                    "label": 0
                },
                {
                    "sent": "Because you can only afford to keep one page in your cache 'cause they 2 pages do not fit.",
                    "label": 0
                },
                {
                    "sent": "So you must pay.",
                    "label": 0
                },
                {
                    "sent": "A cache miss at every step, but if you write any kind of naive LP.",
                    "label": 0
                },
                {
                    "sent": "That can cheat 'cause you know these pages are slightly more than K / 2, so in fractional sense it can fit in 2 pages right?",
                    "label": 0
                },
                {
                    "sent": "So it so any kind of reasonable LP that you try to write it will pay very little.",
                    "label": 0
                },
                {
                    "sent": "Ann will get a large integrality gap, so one way to fix this is to add water, called knapsack.",
                    "label": 0
                },
                {
                    "sent": "Cover inequality is an again for those of you haven't seen this.",
                    "label": 0
                },
                {
                    "sent": "So these are sort of relatively standard way by now, where you strengthen this naive LP that we wrote in the previous step by adding exponentially many inequalities at each step, and this sort of kills this integrality gap and makes it just two, but the point is you can write like an exponential size LP.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "And then you can apply this primal dual framework.",
                    "label": 0
                },
                {
                    "sent": "To this LP and give it gives you a very different algorithms, so it's again sort of multiplicative update type algorithm, But the weights that are coming are coming based on these knapsack over inequalities which.",
                    "label": 0
                },
                {
                    "sent": "So it would be very unintuitive if you didn't go via this route, like at least I would never be able to think how you could come up with such an algorithm where right like in the previous step, we're doing multiplicative updates along this, but now these W's could be totally different depending on these knapsack inequalities.",
                    "label": 0
                },
                {
                    "sent": "So I think that's where this power of this technique comes in, because you can use all the machinery that's developed for linear programming and throw it here and use it together with this multiplicative update method.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_34": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, so there is one other aspect, so we so we saw how to do this multiplicative update type of thing and it gives you a fractional solution.",
                    "label": 0
                },
                {
                    "sent": "So there is a second step when you try to apply this framework, which is what I call the rounding step.",
                    "label": 0
                },
                {
                    "sent": "So what do I mean by this?",
                    "label": 0
                },
                {
                    "sent": "So Primal technique gives you a fractional solution or these exercise are sort of some numbers between zero and one.",
                    "label": 0
                },
                {
                    "sent": "Now this may not make sense for your problem.",
                    "label": 0
                },
                {
                    "sent": "Like maybe you want to 01 solution or.",
                    "label": 0
                },
                {
                    "sent": "Or even if you want to interpret these fractions as a randomized algorithm, it might.",
                    "label": 0
                },
                {
                    "sent": "You might still need to do some work, can show unisec what it means, so let's look at the ski rental problem, which is our easiest problem.",
                    "label": 0
                },
                {
                    "sent": "So recall we had this variable X which was tracking what what's the probability you have bought this ski so far, right?",
                    "label": 0
                },
                {
                    "sent": "We had this exposi I at least one, so if X was half, it's essentially meaning that you have bought it with probability half.",
                    "label": 0
                },
                {
                    "sent": "So if you come up with a primal dual algorithm, this fractional algorithm, which tells you how to update these X&Z's.",
                    "label": 0
                },
                {
                    "sent": "You can view this as a randomized algorithm becausw, so you have some way of increasing these exercise.",
                    "label": 0
                },
                {
                    "sent": "I'll interpret it as a. Randomized algorithm in the following way because at time T if your algorithm bumps up XT minus 12X T, then think of it as your algorithm is buying.",
                    "label": 1
                },
                {
                    "sent": "This key at that step with this probability right?",
                    "label": 0
                },
                {
                    "sent": "Because one way I could describe a randomized algorithm for ski rental is P1.",
                    "label": 0
                },
                {
                    "sent": "Is the probability I buy it at time, 1P2 and so on South.",
                    "label": 0
                },
                {
                    "sent": "This increase in excise exactly your pies?",
                    "label": 0
                },
                {
                    "sent": "So in fact this LP solution you can map exactly to this randomized algorithm in a simple way.",
                    "label": 0
                }
            ]
        },
        "clip_35": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "But for many problems, it's not so obvious, so let me.",
                    "label": 0
                },
                {
                    "sent": "With this caching setting that it's already requires some work.",
                    "label": 0
                },
                {
                    "sent": "OK, good.",
                    "label": 0
                },
                {
                    "sent": "So yeah, let me show you a picture.",
                    "label": 0
                },
                {
                    "sent": "So I claim that if you come up with a fractional algorithm for caching right we're bumping up these variables exercise so you can think of this exercise being the probability that yeah and we were interpreting this exercise as the probability that page is missing from your cache, right?",
                    "label": 0
                },
                {
                    "sent": "And we have this X greater than N -- K, but to come up with a randomized algorithm that's not enough.",
                    "label": 0
                },
                {
                    "sent": "What we really need is a probability distribution on cash states.",
                    "label": 0
                },
                {
                    "sent": "So let me give an example.",
                    "label": 0
                },
                {
                    "sent": "So suppose you had four pages.",
                    "label": 0
                },
                {
                    "sent": "And your cache size was two.",
                    "label": 0
                },
                {
                    "sent": "Now your LP could have something like OK, each page is missing with probability half or its president.",
                    "label": 0
                },
                {
                    "sent": "Let's say with probability half.",
                    "label": 0
                },
                {
                    "sent": "So this sum up to two.",
                    "label": 0
                },
                {
                    "sent": "But when you come up with a randomized algorithm, you really need to specify the state of a randomized algorithm is OK. Have this cash with this probability.",
                    "label": 0
                },
                {
                    "sent": "This cash state with this probability and so on.",
                    "label": 0
                },
                {
                    "sent": "So you need somehow a way to map this to this.",
                    "label": 0
                },
                {
                    "sent": "So one way we could maybe maintain online map is that OK if you have this LP solution will maintain the corresponding state on cash is like this.",
                    "label": 0
                },
                {
                    "sent": "So with probability half we maintain this with probability half we maintain this state.",
                    "label": 0
                },
                {
                    "sent": "So this just means that OK have page one and page 2 in my cash with probability half.",
                    "label": 0
                },
                {
                    "sent": "And Page 3 and Page 4 with probability half.",
                    "label": 0
                },
                {
                    "sent": "And here is the crucial thing that we need to do.",
                    "label": 0
                },
                {
                    "sent": "Because when we have a fractional algorithm, we update these variables XYZ, right?",
                    "label": 0
                },
                {
                    "sent": "So maybe in the next step these variables get updated from half of two point 6.4.",
                    "label": 0
                },
                {
                    "sent": "Or in other words, it's like checking out this Page 1 little bit more and increasing.",
                    "label": 0
                },
                {
                    "sent": "Page 2 so.",
                    "label": 0
                },
                {
                    "sent": "So then.",
                    "label": 0
                },
                {
                    "sent": "You would want again to map now this distribution to be consistent with this, but you want to do it in a way so that you don't pay too much here, right?",
                    "label": 0
                },
                {
                    "sent": "Because in LP you are paying like .1 'cause you're doing .1 units of eviction, so you want to be competitive here, so you need to prove some kind of a mapping theorem that OK if the LP is paying this much in a fractional sense, I can sort of update the distribution on my integral states in online manner to not pay too much.",
                    "label": 0
                },
                {
                    "sent": "So for caching we could do it by losing a factor of two, which I will not tell you how we do it.",
                    "label": 0
                },
                {
                    "sent": "It's not that hard, but for many problems it's tricky.",
                    "label": 0
                },
                {
                    "sent": "So for generalized cashing in our original paper we were losing a log K additional low key factor in this rounding, so maintaining a map from fractional to integral.",
                    "label": 0
                },
                {
                    "sent": "And this was actually improved removed in a recent paper loss order by Adam.",
                    "label": 0
                },
                {
                    "sent": "Check at all using very complicated techniques, so so this is often yeah, this is so.",
                    "label": 0
                },
                {
                    "sent": "This is sort of the ugly part, so the primal dual fractional was the clean cute part, but here sometimes you have to really do some dirty.",
                    "label": 0
                }
            ]
        },
        "clip_36": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "To that, sort of.",
                    "label": 0
                },
                {
                    "sent": "OK, so in the next 5 minutes let me just give you a very quick view of what's beyond this packing a basic.",
                    "label": 0
                }
            ]
        },
        "clip_37": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Uncovering framework so.",
                    "label": 0
                },
                {
                    "sent": "So notice in this previous framework we only had covering or packing LP's, and variables could only increase right and I kind of previously argued that oh, increase was a natural thing because you cannot undo your decisions.",
                    "label": 0
                },
                {
                    "sent": "That's what this monotonicity was modeling.",
                    "label": 0
                },
                {
                    "sent": "But it's a bit annoying.",
                    "label": 0
                },
                {
                    "sent": "So for example, because you have only covering or packing LP, you cannot even have very simple constraints of this type, because the way you would write this constraint is a -- B greater than zero.",
                    "label": 1
                },
                {
                    "sent": "So you have both positive and negative terms, so you can't put something like this.",
                    "label": 0
                },
                {
                    "sent": "And again, monotone City can be often restrictive, so one place where it's restrictive is like this expert learning in the machine learning setting.",
                    "label": 0
                },
                {
                    "sent": "So again, if you haven't seen this typically in machine learning, you have several experts giving their opinions whether it's going to rain or shine, and you want to form your opinion based on their opinion.",
                    "label": 0
                },
                {
                    "sent": "So you kind of maintain a probability distribution on these experts based on who you think is good, and so if you want to write an LP for this for these probabilities of what you think.",
                    "label": 0
                },
                {
                    "sent": "Experts, then these probabilities you want to go up and down right?",
                    "label": 0
                },
                {
                    "sent": "Because they should sum up to one so this monotonicity sort of does not allow you to capture this.",
                    "label": 0
                },
                {
                    "sent": "So again, there might be reasons to sort of do away with this monotonicity.",
                    "label": 0
                },
                {
                    "sent": "Once out, yeah, one can handle these types of things, but we still don't have a very general framework like for covering and packing.",
                    "label": 0
                },
                {
                    "sent": "I could tell you this very generic result, right?",
                    "label": 0
                },
                {
                    "sent": "Any covering problem?",
                    "label": 0
                },
                {
                    "sent": "You have a log D, But here sort of more.",
                    "label": 0
                },
                {
                    "sent": "Ad hoc, at least at this stage.",
                    "label": 0
                }
            ]
        },
        "clip_38": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So just to give you an example for the weighted paging problem, one could write yet another LP and not maybe go in detail what this means, but notice here we have a non covering or packing constraint.",
                    "label": 0
                },
                {
                    "sent": "It's sort of a little bit uglier LP for the same caching problem that we saw earlier, but one can show that OK, you can use this LP combined with the previous insights of this multiplicative type update to come up with a good algorithm an.",
                    "label": 0
                },
                {
                    "sent": "For example, using this, so this LP is sort of convenient to work with for different reasons, which previous LP the covering LP was not, and using that we could prove what's called finally competitive paging, which is a refinement of paging, and this was useful in the case server problem.",
                    "label": 0
                },
                {
                    "sent": "So the point of the whole thing is OK. You could still use these previous insights to handle sort of more complicated things which are not directly captured by the previous setting, right?",
                    "label": 0
                },
                {
                    "sent": "Yeah, so one way we could do this was for the case server.",
                    "label": 0
                },
                {
                    "sent": "Let me skip this is.",
                    "label": 0
                }
            ]
        },
        "clip_39": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "But somehow yeah, so the result was that we could get a polylogarithmic competitive algorithm for K server on metric space.",
                    "label": 0
                }
            ]
        },
        "clip_40": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "10 points and the idea was roughly to do.",
                    "label": 0
                },
                {
                    "sent": "What's the standard approach by now.",
                    "label": 0
                },
                {
                    "sent": "So you have any metric space you approximately an HST.",
                    "label": 1
                },
                {
                    "sent": "Again, those of you don't know what agencies are.",
                    "label": 0
                },
                {
                    "sent": "That's fine, and you lose roughly log in factor, but you can now think of your metric space as being some kind of hierarchical nice metric, and you can solve case are on this metric using insights from the paging algorithm, because case around uniform metric is the paging problem, an essentially looks like a hierarchical uniform metric.",
                    "label": 0
                },
                {
                    "sent": "Right, so again, I will not make precise what this means, but we could use previous insights.",
                    "label": 0
                }
            ]
        },
        "clip_41": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Hard to solve this.",
                    "label": 0
                },
                {
                    "sent": "And yet another thing we could do so in our paper we actually give a potential function based analysis of this case or problem.",
                    "label": 0
                },
                {
                    "sent": "But again, this potential function is inspired by Primal Dual, so somehow.",
                    "label": 1
                },
                {
                    "sent": "Yeah, So what these recent works do is they take this basic primal dual multiplicative inside type of method, but sort of you applied to a more general setting, maybe a positive negative constraints.",
                    "label": 0
                },
                {
                    "sent": "Or you can use that to come up with a potential function.",
                    "label": 0
                },
                {
                    "sent": "Again.",
                    "label": 0
                },
                {
                    "sent": "Yeah, I don't have time to give details for this so.",
                    "label": 0
                },
                {
                    "sent": "OK, so let me just.",
                    "label": 0
                }
            ]
        },
        "clip_42": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Include with some further extensions so.",
                    "label": 1
                },
                {
                    "sent": "So here, so we saw in this basic primal dual method that I told you that.",
                    "label": 0
                },
                {
                    "sent": "So how was it going right?",
                    "label": 0
                },
                {
                    "sent": "So you bumped up these dual variables and based on that somehow you decided how to update the primal variables based on this multiplicative rule.",
                    "label": 0
                },
                {
                    "sent": "Now you might ask, OK, but why do I only have to increase the dual variable?",
                    "label": 0
                },
                {
                    "sent": "Like can't I be more sophisticated?",
                    "label": 0
                },
                {
                    "sent": "Right or in some sense, so notice these duals are only for analysis purposes, right?",
                    "label": 0
                },
                {
                    "sent": "So maybe you could come up with a more clever rule instead of just doing increasing their dual variables.",
                    "label": 0
                },
                {
                    "sent": "Maybe go back and change somehow, so keep your primal still increasing, but maybe have their duals nor non monotone, so there is a very nice paper of Gupta, Nagarajan and I call this recent icalp where they actually do this so they come up with a very clever sort of much more sophisticated way to update the duals.",
                    "label": 0
                },
                {
                    "sent": "Wells can go up and down, and they show very general result that if you have a sparse covering online problem.",
                    "label": 1
                },
                {
                    "sent": "So again, sort of discovering setting, but it's sparse, so it has a cane on 00 and L nonzeros in any column.",
                    "label": 0
                },
                {
                    "sent": "They can give this algorithm this much competitive, and that's also tight an here they allow duels to change up and down, and they actually show that previous framework is 2 week, like if you don't.",
                    "label": 0
                },
                {
                    "sent": "If you only allow increasing the duals then you cannot get such a guarantee.",
                    "label": 0
                },
                {
                    "sent": "So somehow this gives you much more power and this I think very wide open area which we haven't quite explored.",
                    "label": 0
                },
                {
                    "sent": "Should be a lot more here.",
                    "label": 0
                },
                {
                    "sent": "Another very nice again.",
                    "label": 0
                },
                {
                    "sent": "Recent result I guess involve a today was group Krishnaswamy and proofs where they apply the primal dual framework to nonlinear programs.",
                    "label": 1
                },
                {
                    "sent": "And again here it's more complicated because somehow instead of LP duality have to use convex programming duality and it's more involved.",
                    "label": 0
                },
                {
                    "sent": "Another direction where this LP connection has come up in online setting is what I called dual fitting.",
                    "label": 0
                },
                {
                    "sent": "This was a paper in recent soda.",
                    "label": 1
                },
                {
                    "sent": "Again, that I do explore this connection between potential functions and LP's sort of more carefully so they show that for a very natural problem in scheduling.",
                    "label": 0
                },
                {
                    "sent": "Previously, where are very complicated potential function proof or a magical sort of potential function proof.",
                    "label": 1
                },
                {
                    "sent": "They show that you can demystify that proof by.",
                    "label": 0
                },
                {
                    "sent": "Sort of giving a dual fitting argument so it makes.",
                    "label": 0
                },
                {
                    "sent": "So it gives us sort of much better insight on what's the connection between potentials and LP.",
                    "label": 0
                }
            ]
        },
        "clip_43": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So I guess just to conclude.",
                    "label": 0
                },
                {
                    "sent": "So we saw this very general primal dual framework and it's been quite influential to both unify various things and to solve problems, and I think our understanding is still very limited, like how we're doing.",
                    "label": 0
                },
                {
                    "sent": "It seems very basic, so we don't know too much more than sort of the framework I described.",
                    "label": 0
                },
                {
                    "sent": "You just minor extension.",
                    "label": 0
                },
                {
                    "sent": "It seems there should be a. Yeah, much more extension of this possible and more unified theory, so I guess I'll.",
                    "label": 0
                }
            ]
        },
        "clip_44": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Stop at this.",
                    "label": 0
                },
                {
                    "sent": "Thank you.",
                    "label": 0
                }
            ]
        }
    }
}