{
    "id": "dinz6bpa3r34zmdtk47vvwtlx2onxkm2",
    "title": "List.MID: A MIDI-Based Benchmark for Evaluating RDF Lists",
    "info": {
        "author": [
            "Albert Mero\u00f1o-Pe\u00f1uela, Department of Computer Science, Vrije Universiteit Amsterdam (VU)"
        ],
        "published": "Dec. 10, 2019",
        "recorded": "October 2019",
        "category": [
            "Top->Computer Science->Semantic Web"
        ]
    },
    "url": "http://videolectures.net/iswc2019_penuela_RDF_lists/",
    "segmentation": [
        [
            "Thank you all for being here.",
            "I'm a bad today.",
            "I want to talk a bit about benchmarking data and specifically I want to present you a mini based benchmark for RDF lists, so this is joint work between the frame number stating Amsterdam on the on the Open University so."
        ],
        [
            "Anne.",
            "Both in Beacon IR grade enthusiasts and are participating in a lot of lean, open data publishing projects, as probably many of you are.",
            "Um?",
            "And we realize that this knowledge engineers there is a lot of subjective choice that happens when you model datasets before publishing them.",
            "In the linked open data Cloud, and we are often a bit lost in what are the best practice and what are the consequences of choosing certain modeling practices in terms of performance of querying, which has ultimate consequences in availability and Accessibility of the data.",
            "So we stumbled upon this case of.",
            "List so lists are everywhere, right?",
            "You have lists in coauthors.",
            "In papers you have timelines, media, you name it.",
            "Anne."
        ],
        [
            "You have list in music, so we've been involved in number of knowledge, graph construction projects dealing with with music notation in particularly denotation and immediate any song is specified as a very, very long list of of musical events, right?",
            "So if you if you try to build applications on top of such a knowledge graph with this intensive use of lists, you really want the list management and retrieval to be very, very.",
            "Efficient, so these modeling decision on how to model lists is very relevant and has ultimate consequences an we ask ourselves what do we know about performance of different RDF list models?",
            "I'm.",
            "OK, this doesn't work anymore."
        ],
        [
            "Other girl, so this would be found.",
            "We looked at the RDF and RDF standards and we found the usual suspects, so RDF bag allows you to specify an order collection of elements or give all this for alternatives from which one has to be picked up.",
            "Are they have sequence is for ordered collections, but for also for open collections, so not strictly lists.",
            "For close collections, we have the famous RDF list class that specifies RV first rest and Neil attributes for defining lists more or less in a list style.",
            "Then we have Jason, LD and Turtle, which add some sort of like syntactic sugar on top of that, you can specify lists as Jason arrays, which of course if you make use of Jason infrastructure facilitates a lot working with them and.",
            "We have analogous indexes in in Turtle, and then we also looked at ontology design patterns, in particular in the sequence ontology pattern.",
            "The collections in Polish for specifying lists.",
            "So of course the sparkle of benchmarking is also very relevant here.",
            "Relevant work is the Berlin benchmark, Lillys Espita Bank, PPT, sparkle.",
            "What's true, diversity?",
            "So all these tests sparkle in different settings and from a different of different from a number of different perspectives.",
            "LSQ specifies sparkle as a graph, but we couldn't find specific tests on RDF lists and then you have all these meta frameworks, like Iguana and the Link Data Benchmark Council for.",
            "For brother approaches."
        ],
        [
            "So the research question we're trying to address here is what RDF list models are frequent frequently used in in practice.",
            "An how can we generate a good benchmark.",
            "So how can we generate data and queries to test the impact and consequences of choosing one of these models in.",
            "Systematic and principled way.",
            "So the contributions of the paper are three.",
            "First, we serve a common list modeling practices.",
            "We go out there, see what people use and do.",
            "The second is to propose this benchmark.",
            "We call list at MIT and I'll talk a little bit about it and 30 to present evidence of present and future use for the benchmark."
        ],
        [
            "So to list the patterns that are commonly used in an open data besides the W. 3C standards that already mentioned, and the ontology design patterns portal, we took a look at different resource papers accepted here in this conference.",
            "Now is that you see in recent years we found some datasets making use of lists.",
            "We took a look at linked open vocabularies and also the lovalot file which is this proficient.",
            "Sterilization of the Lord Laundromat crawl and we found various practices that we sort of can sort of generalize into six different list modeling patterns, and."
        ],
        [
            "The first tool relate to what we actually find in the standards, so the first is what we call the RDF sequence.",
            "So you can essentially specify that something is a member of of RDF sack and then make use of all these RDF_1_2_N properties that specify the elements of the list and our use of property of container membership property.",
            "So then we have RDF list in RDF.",
            "Please specify lists and can in the kind of an elegant list style are the first always points to the actual element of the list and then RDF.",
            "Rest is a pointer to a list.",
            "Which in terms you know recursively defines further elements until you find RDF Neil, and that's the end of the list."
        ],
        [
            "So then we found the number of different practices that are not particularly elegant, but there are quite widespread.",
            "The first we call it the UI pattern.",
            "So in the UI pattern you have this star publishing model in which everything is sort of attached to one node and then there is one domain predicate linking to all the elements of the list and then the order of the element is established by one primary key in.",
            "In the in the various elements.",
            "So not very elegant, but people use this.",
            "And then number and timestamp essentially related every element of the list to a an additional property, making use of A of another domain predicate.",
            "And in the case of number there is just a literal.",
            "In this case, a integer that establish is the order of the elements of the list, and in time this time you have an analogous situation with with the time data type."
        ],
        [
            "And last but not least, there were a number of practices that could be summarized into these sequence ontology patterns.",
            "So basically this is this is a double linked list that goes in direct and reverse order with sequence proceeds in sequence follows predicates.",
            "And here you know which the 1st and the last elements of the list R, because the first has no sequence follows pointer and the last has no sequence proceeds pointer."
        ],
        [
            "So taking this into consideration, we wanted to build a good benchmark for testing these different models and we came up with list.net which is based on a collaborative GitHub effort we put into and what are called awesome lists in which several collaborators are sort of found, like different web sources where media files can be found.",
            "And thanks to those, we grab a collection of more than 300,000 media files from the web, and this led to a different publication represented here at ISU C two years ago.",
            "In which we build a 10 billion triple knowledge graph based on that.",
            "But the benchmark itself consists of an RDF list data generator.",
            "On the basis of this.",
            "On the basis of the contents of this media data set and then a collection of extensively sparkle list retrieval queries that relate to the different models I just described."
        ],
        [
            "So the data generator is based on a custom version of the media to RDF algorithm.",
            "Basically this algorithm turns any file into into RDF and this customization controls the least pattern that's being used for specifying the various musical events in this case, but the various elements of the list.",
            "Then put me file controls the size of the list to be generated and the source data.",
            "The you can also specify the least pattern to use according to these different list modeling practices and then you have other resources to specify the RDF specific RDF serialization you want the list to to come up as an whether you want the results in a compressed format or not."
        ],
        [
            "So that was the data generator for the queries themselves.",
            "We took a look at our specific use case, very much focused on retrieval.",
            "We are very aware, very well aware that this is this doesn't cover a full list manipulation API.",
            "Think of you know the Java list maybe list API.",
            "But we had to start somewhere, so we focused on these publishing use case with three different competency questions.",
            "The first is the full list.",
            "Look up, so retrieve all the elements of the listing in an ordered manner.",
            "The second is the look up of the NTH element.",
            "This is in array jargon.",
            "This is also called random access and then the retrieve all the elements between an M. And as I said, this is this doesn't cover cases like you know, list management cases like editing the list, splitting the latest, merging lists, adding elements to the list, but wanted to focus on this minimal and atomic operation."
        ],
        [
            "Straight.",
            "So here are the sparkle patterns for each different list model.",
            "In practice, we have three different sparkle patterns for the.",
            "For the full list and element and range.",
            "What's interesting here is that there are a number of patterns like SAC noontime and your eye that are very much focused on extracting the indexes from the lists from either the subject predicate or the object depending on the on the pattern and then using that for retrieving the ordered elements of the list and then for retrieving one specific element or the range we use offset and limit to set the set, the appropriate ranges and then for list and.",
            "Sequence ontology pattern.",
            "We obviously make use of the links connecting the elements of the list for list.",
            "For the.",
            "List.",
            "For the RDF list structure.",
            "This is not as simple as simply using the sparkle property paths because they projection can alter the order of the elements.",
            "So for this we need to sort of workout intermediate and indexes for the ordering.",
            "Um, we can.",
            "We couldn't also confuse the curly bracket syntax because that's not really part of the standard, even if most superstores supported."
        ],
        [
            "Alright, so the.",
            "So like a number of evaluation approaches that we took, the first was a an experiment in which we use these benchmarks to evaluate.",
            "This different RDF list modeling practices in in a number of different triple stores, so this was work presented here just two days ago at the clearing the web of Data Workshop.",
            "We tried the benchmarking, four different triple stores for different settings.",
            "Blazegraph virtuoso, whose achy memory an physique ET.",
            "Um and we got some results.",
            "So here in this slide you cannot.",
            "You can only see Blaze government doors or for the for the random access use case.",
            "The full set of results you can find in the paper, but basically the the takeaways here are that the results are clearing among different triple stores, which we didn't do any sort of triple store optimization.",
            "We run everything.",
            "It comes out of the box, but we did find different results according to the different modeling practices.",
            "So there is definitely a critical impact of choosing one model or another in terms of performance of retrieval.",
            "I'm.",
            "Interestingly enough, RDF list has poor performance in all the superstores in which we tried it.",
            "Especially in infancy.",
            "Key all RDF list related queries timed out and for blaze up in proposal were clearly the most underperforming.",
            "At least under the least performing, are they at least model the best ones?",
            "Were the so-called inelegant ones, so the ones that use properties or specific explicit literals for for ordering and RDF sequence is sort of a nice trade off, so it's it's.",
            "It's not as efficient as using the properties, but definitely more efficient at using RDF list or or.",
            "The sequence Ontology pattern we need to take into account here is that in RDF SEK we are not strictly modeling lists because they are.",
            "Sequences can be open and also there is no strict semantics attaching to the whole possible holes in the list, so calling for the RDF_an element not necessarily returns you the end element element.",
            "If somebody has removed an intermediate one.",
            "So maybe this is something to think about for future versions of of the Sparkle standard."
        ],
        [
            "The second experiment was relevant for the for the future use of the benchmark, so we run a questionnaire over the semantic web.",
            "Public cloud mailing lists of the W 3C and also at our own universities and departments, and we found a couple of interesting findings.",
            "People in general.",
            "Agree that there is.",
            "There is an impact in there might be an impact in different modeling solutions in terms of querying that.",
            "That there is no real benchmark up to list of mid covering RDF lists appropriately.",
            "There is this sort of lukewarm interest in terms of people being aware that lists exist and whether lists are relevant in the data sets of people, but definitely the Community things that such a benchmark would be beneficial for.",
            "For the community and for the practice, and for benchmarking."
        ],
        [
            "So here are the conclusions.",
            "I just hope the pain came across the we think lists are important, but it's really, really difficult to assess the impact of their models and so far there was no so much work on it.",
            "So what we did was to grab these six common list patterns in frequently used in RDF and we came up with this benchmark.",
            "Please submit which contains real world use K in this case media based RDF Lynch list, benchmark data generator and a set of basic retrieval operations that you sparkle to retrieve the contents of the list.",
            "And then we did this first experiments with with some for results and survey the interest of the Community.",
            "So for the words left for future work is to expand the list of supported operations.",
            "The performance results showed are strictly based on retrieval.",
            "It could well be that RDF list is very efficient for say, adding one new element to the list.",
            "That wouldn't be surprising.",
            "We also want to extend to other least models because in the survey we possibly left some out and we just hope to come up with out of this with good recommendations for for triple store optimization implementations and algorithms."
        ],
        [
            "So thanks.",
            "We have a few minutes for questions.",
            "OK, I'll start with one question.",
            "So I was wondering, right you you looked at different models for lists.",
            "And how that has an impact.",
            "So I was wondering how what would be the impact of the length of lists on the different operations like data generations or the list merge operations that you mentioned."
        ],
        [
            "Yeah thanks, thanks for the question.",
            "So size is definitely scalability is definitely very important issue.",
            "One of the dimensions we tried in this first.",
            "Set of experiments.",
            "I didn't spend much time on it, but essentially the the growth, so the cost of increasing size on lists is linear with the size of the list, so that's kind of some kind of good news.",
            "But the but of course the this is strictly based on the use case of retrieval, such as retrieving the contents of the list.",
            "We didn't do any practical experimentation yet with other operations.",
            "I think there is.",
            "There is hope and there is a lot of thinking we need to do in terms of what will happen when we add, you know, add operations or merge operations.",
            "Split operations because it could well be.",
            "Actually, it's kind of easy to see that in models like RDF list is going to be very, very easy.",
            "It's going to have like constant cost to just add an element to.",
            "To the list, just changing a couple of pointers while in property.",
            "Basically list you have to do a lot of bookkeeping and and updating in the in the whole list.",
            "But but definitely this is.",
            "This is the obvious next step that we need to take.",
            "Thanks any other question from the audience up there.",
            "Well.",
            "I guess it would depend on the specific implementation.",
            "I think in some, at least in the two groups of patterns that we identified, so the ones based on links and the ones based on attributes.",
            "It wouldn't be difficult as long as you stay with one of these two paradigms because the queries sort of defer, but not very, very much.",
            "Essentially, one of 1, one of them used sparkled property paths to sort of traverse the list so it wouldn't be difficult to change the specific predicates and the and the patterns we used for retrieval.",
            "But definitely more sort of an agnostic approach for retrieving the contents of the list you know, independently of of how they are specifically serialized in in the in.",
            "The original encoding would be something very interesting to look into, thanks.",
            "Let's thank our speaker again."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Thank you all for being here.",
                    "label": 0
                },
                {
                    "sent": "I'm a bad today.",
                    "label": 0
                },
                {
                    "sent": "I want to talk a bit about benchmarking data and specifically I want to present you a mini based benchmark for RDF lists, so this is joint work between the frame number stating Amsterdam on the on the Open University so.",
                    "label": 1
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Anne.",
                    "label": 0
                },
                {
                    "sent": "Both in Beacon IR grade enthusiasts and are participating in a lot of lean, open data publishing projects, as probably many of you are.",
                    "label": 0
                },
                {
                    "sent": "Um?",
                    "label": 0
                },
                {
                    "sent": "And we realize that this knowledge engineers there is a lot of subjective choice that happens when you model datasets before publishing them.",
                    "label": 0
                },
                {
                    "sent": "In the linked open data Cloud, and we are often a bit lost in what are the best practice and what are the consequences of choosing certain modeling practices in terms of performance of querying, which has ultimate consequences in availability and Accessibility of the data.",
                    "label": 0
                },
                {
                    "sent": "So we stumbled upon this case of.",
                    "label": 0
                },
                {
                    "sent": "List so lists are everywhere, right?",
                    "label": 1
                },
                {
                    "sent": "You have lists in coauthors.",
                    "label": 1
                },
                {
                    "sent": "In papers you have timelines, media, you name it.",
                    "label": 0
                },
                {
                    "sent": "Anne.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "You have list in music, so we've been involved in number of knowledge, graph construction projects dealing with with music notation in particularly denotation and immediate any song is specified as a very, very long list of of musical events, right?",
                    "label": 0
                },
                {
                    "sent": "So if you if you try to build applications on top of such a knowledge graph with this intensive use of lists, you really want the list management and retrieval to be very, very.",
                    "label": 0
                },
                {
                    "sent": "Efficient, so these modeling decision on how to model lists is very relevant and has ultimate consequences an we ask ourselves what do we know about performance of different RDF list models?",
                    "label": 1
                },
                {
                    "sent": "I'm.",
                    "label": 0
                },
                {
                    "sent": "OK, this doesn't work anymore.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Other girl, so this would be found.",
                    "label": 0
                },
                {
                    "sent": "We looked at the RDF and RDF standards and we found the usual suspects, so RDF bag allows you to specify an order collection of elements or give all this for alternatives from which one has to be picked up.",
                    "label": 0
                },
                {
                    "sent": "Are they have sequence is for ordered collections, but for also for open collections, so not strictly lists.",
                    "label": 0
                },
                {
                    "sent": "For close collections, we have the famous RDF list class that specifies RV first rest and Neil attributes for defining lists more or less in a list style.",
                    "label": 0
                },
                {
                    "sent": "Then we have Jason, LD and Turtle, which add some sort of like syntactic sugar on top of that, you can specify lists as Jason arrays, which of course if you make use of Jason infrastructure facilitates a lot working with them and.",
                    "label": 0
                },
                {
                    "sent": "We have analogous indexes in in Turtle, and then we also looked at ontology design patterns, in particular in the sequence ontology pattern.",
                    "label": 1
                },
                {
                    "sent": "The collections in Polish for specifying lists.",
                    "label": 0
                },
                {
                    "sent": "So of course the sparkle of benchmarking is also very relevant here.",
                    "label": 0
                },
                {
                    "sent": "Relevant work is the Berlin benchmark, Lillys Espita Bank, PPT, sparkle.",
                    "label": 0
                },
                {
                    "sent": "What's true, diversity?",
                    "label": 0
                },
                {
                    "sent": "So all these tests sparkle in different settings and from a different of different from a number of different perspectives.",
                    "label": 1
                },
                {
                    "sent": "LSQ specifies sparkle as a graph, but we couldn't find specific tests on RDF lists and then you have all these meta frameworks, like Iguana and the Link Data Benchmark Council for.",
                    "label": 0
                },
                {
                    "sent": "For brother approaches.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So the research question we're trying to address here is what RDF list models are frequent frequently used in in practice.",
                    "label": 1
                },
                {
                    "sent": "An how can we generate a good benchmark.",
                    "label": 0
                },
                {
                    "sent": "So how can we generate data and queries to test the impact and consequences of choosing one of these models in.",
                    "label": 1
                },
                {
                    "sent": "Systematic and principled way.",
                    "label": 0
                },
                {
                    "sent": "So the contributions of the paper are three.",
                    "label": 0
                },
                {
                    "sent": "First, we serve a common list modeling practices.",
                    "label": 0
                },
                {
                    "sent": "We go out there, see what people use and do.",
                    "label": 0
                },
                {
                    "sent": "The second is to propose this benchmark.",
                    "label": 1
                },
                {
                    "sent": "We call list at MIT and I'll talk a little bit about it and 30 to present evidence of present and future use for the benchmark.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So to list the patterns that are commonly used in an open data besides the W. 3C standards that already mentioned, and the ontology design patterns portal, we took a look at different resource papers accepted here in this conference.",
                    "label": 1
                },
                {
                    "sent": "Now is that you see in recent years we found some datasets making use of lists.",
                    "label": 1
                },
                {
                    "sent": "We took a look at linked open vocabularies and also the lovalot file which is this proficient.",
                    "label": 0
                },
                {
                    "sent": "Sterilization of the Lord Laundromat crawl and we found various practices that we sort of can sort of generalize into six different list modeling patterns, and.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "The first tool relate to what we actually find in the standards, so the first is what we call the RDF sequence.",
                    "label": 0
                },
                {
                    "sent": "So you can essentially specify that something is a member of of RDF sack and then make use of all these RDF_1_2_N properties that specify the elements of the list and our use of property of container membership property.",
                    "label": 0
                },
                {
                    "sent": "So then we have RDF list in RDF.",
                    "label": 1
                },
                {
                    "sent": "Please specify lists and can in the kind of an elegant list style are the first always points to the actual element of the list and then RDF.",
                    "label": 0
                },
                {
                    "sent": "Rest is a pointer to a list.",
                    "label": 0
                },
                {
                    "sent": "Which in terms you know recursively defines further elements until you find RDF Neil, and that's the end of the list.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So then we found the number of different practices that are not particularly elegant, but there are quite widespread.",
                    "label": 0
                },
                {
                    "sent": "The first we call it the UI pattern.",
                    "label": 0
                },
                {
                    "sent": "So in the UI pattern you have this star publishing model in which everything is sort of attached to one node and then there is one domain predicate linking to all the elements of the list and then the order of the element is established by one primary key in.",
                    "label": 0
                },
                {
                    "sent": "In the in the various elements.",
                    "label": 0
                },
                {
                    "sent": "So not very elegant, but people use this.",
                    "label": 0
                },
                {
                    "sent": "And then number and timestamp essentially related every element of the list to a an additional property, making use of A of another domain predicate.",
                    "label": 0
                },
                {
                    "sent": "And in the case of number there is just a literal.",
                    "label": 0
                },
                {
                    "sent": "In this case, a integer that establish is the order of the elements of the list, and in time this time you have an analogous situation with with the time data type.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And last but not least, there were a number of practices that could be summarized into these sequence ontology patterns.",
                    "label": 1
                },
                {
                    "sent": "So basically this is this is a double linked list that goes in direct and reverse order with sequence proceeds in sequence follows predicates.",
                    "label": 0
                },
                {
                    "sent": "And here you know which the 1st and the last elements of the list R, because the first has no sequence follows pointer and the last has no sequence proceeds pointer.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So taking this into consideration, we wanted to build a good benchmark for testing these different models and we came up with list.net which is based on a collaborative GitHub effort we put into and what are called awesome lists in which several collaborators are sort of found, like different web sources where media files can be found.",
                    "label": 0
                },
                {
                    "sent": "And thanks to those, we grab a collection of more than 300,000 media files from the web, and this led to a different publication represented here at ISU C two years ago.",
                    "label": 1
                },
                {
                    "sent": "In which we build a 10 billion triple knowledge graph based on that.",
                    "label": 0
                },
                {
                    "sent": "But the benchmark itself consists of an RDF list data generator.",
                    "label": 1
                },
                {
                    "sent": "On the basis of this.",
                    "label": 0
                },
                {
                    "sent": "On the basis of the contents of this media data set and then a collection of extensively sparkle list retrieval queries that relate to the different models I just described.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So the data generator is based on a custom version of the media to RDF algorithm.",
                    "label": 1
                },
                {
                    "sent": "Basically this algorithm turns any file into into RDF and this customization controls the least pattern that's being used for specifying the various musical events in this case, but the various elements of the list.",
                    "label": 0
                },
                {
                    "sent": "Then put me file controls the size of the list to be generated and the source data.",
                    "label": 1
                },
                {
                    "sent": "The you can also specify the least pattern to use according to these different list modeling practices and then you have other resources to specify the RDF specific RDF serialization you want the list to to come up as an whether you want the results in a compressed format or not.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So that was the data generator for the queries themselves.",
                    "label": 0
                },
                {
                    "sent": "We took a look at our specific use case, very much focused on retrieval.",
                    "label": 0
                },
                {
                    "sent": "We are very aware, very well aware that this is this doesn't cover a full list manipulation API.",
                    "label": 0
                },
                {
                    "sent": "Think of you know the Java list maybe list API.",
                    "label": 0
                },
                {
                    "sent": "But we had to start somewhere, so we focused on these publishing use case with three different competency questions.",
                    "label": 0
                },
                {
                    "sent": "The first is the full list.",
                    "label": 1
                },
                {
                    "sent": "Look up, so retrieve all the elements of the listing in an ordered manner.",
                    "label": 0
                },
                {
                    "sent": "The second is the look up of the NTH element.",
                    "label": 1
                },
                {
                    "sent": "This is in array jargon.",
                    "label": 0
                },
                {
                    "sent": "This is also called random access and then the retrieve all the elements between an M. And as I said, this is this doesn't cover cases like you know, list management cases like editing the list, splitting the latest, merging lists, adding elements to the list, but wanted to focus on this minimal and atomic operation.",
                    "label": 1
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Straight.",
                    "label": 0
                },
                {
                    "sent": "So here are the sparkle patterns for each different list model.",
                    "label": 0
                },
                {
                    "sent": "In practice, we have three different sparkle patterns for the.",
                    "label": 0
                },
                {
                    "sent": "For the full list and element and range.",
                    "label": 0
                },
                {
                    "sent": "What's interesting here is that there are a number of patterns like SAC noontime and your eye that are very much focused on extracting the indexes from the lists from either the subject predicate or the object depending on the on the pattern and then using that for retrieving the ordered elements of the list and then for retrieving one specific element or the range we use offset and limit to set the set, the appropriate ranges and then for list and.",
                    "label": 0
                },
                {
                    "sent": "Sequence ontology pattern.",
                    "label": 0
                },
                {
                    "sent": "We obviously make use of the links connecting the elements of the list for list.",
                    "label": 0
                },
                {
                    "sent": "For the.",
                    "label": 0
                },
                {
                    "sent": "List.",
                    "label": 0
                },
                {
                    "sent": "For the RDF list structure.",
                    "label": 0
                },
                {
                    "sent": "This is not as simple as simply using the sparkle property paths because they projection can alter the order of the elements.",
                    "label": 0
                },
                {
                    "sent": "So for this we need to sort of workout intermediate and indexes for the ordering.",
                    "label": 0
                },
                {
                    "sent": "Um, we can.",
                    "label": 0
                },
                {
                    "sent": "We couldn't also confuse the curly bracket syntax because that's not really part of the standard, even if most superstores supported.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Alright, so the.",
                    "label": 0
                },
                {
                    "sent": "So like a number of evaluation approaches that we took, the first was a an experiment in which we use these benchmarks to evaluate.",
                    "label": 0
                },
                {
                    "sent": "This different RDF list modeling practices in in a number of different triple stores, so this was work presented here just two days ago at the clearing the web of Data Workshop.",
                    "label": 0
                },
                {
                    "sent": "We tried the benchmarking, four different triple stores for different settings.",
                    "label": 0
                },
                {
                    "sent": "Blazegraph virtuoso, whose achy memory an physique ET.",
                    "label": 0
                },
                {
                    "sent": "Um and we got some results.",
                    "label": 0
                },
                {
                    "sent": "So here in this slide you cannot.",
                    "label": 0
                },
                {
                    "sent": "You can only see Blaze government doors or for the for the random access use case.",
                    "label": 0
                },
                {
                    "sent": "The full set of results you can find in the paper, but basically the the takeaways here are that the results are clearing among different triple stores, which we didn't do any sort of triple store optimization.",
                    "label": 0
                },
                {
                    "sent": "We run everything.",
                    "label": 0
                },
                {
                    "sent": "It comes out of the box, but we did find different results according to the different modeling practices.",
                    "label": 0
                },
                {
                    "sent": "So there is definitely a critical impact of choosing one model or another in terms of performance of retrieval.",
                    "label": 1
                },
                {
                    "sent": "I'm.",
                    "label": 0
                },
                {
                    "sent": "Interestingly enough, RDF list has poor performance in all the superstores in which we tried it.",
                    "label": 1
                },
                {
                    "sent": "Especially in infancy.",
                    "label": 0
                },
                {
                    "sent": "Key all RDF list related queries timed out and for blaze up in proposal were clearly the most underperforming.",
                    "label": 0
                },
                {
                    "sent": "At least under the least performing, are they at least model the best ones?",
                    "label": 0
                },
                {
                    "sent": "Were the so-called inelegant ones, so the ones that use properties or specific explicit literals for for ordering and RDF sequence is sort of a nice trade off, so it's it's.",
                    "label": 0
                },
                {
                    "sent": "It's not as efficient as using the properties, but definitely more efficient at using RDF list or or.",
                    "label": 0
                },
                {
                    "sent": "The sequence Ontology pattern we need to take into account here is that in RDF SEK we are not strictly modeling lists because they are.",
                    "label": 0
                },
                {
                    "sent": "Sequences can be open and also there is no strict semantics attaching to the whole possible holes in the list, so calling for the RDF_an element not necessarily returns you the end element element.",
                    "label": 0
                },
                {
                    "sent": "If somebody has removed an intermediate one.",
                    "label": 0
                },
                {
                    "sent": "So maybe this is something to think about for future versions of of the Sparkle standard.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The second experiment was relevant for the for the future use of the benchmark, so we run a questionnaire over the semantic web.",
                    "label": 0
                },
                {
                    "sent": "Public cloud mailing lists of the W 3C and also at our own universities and departments, and we found a couple of interesting findings.",
                    "label": 0
                },
                {
                    "sent": "People in general.",
                    "label": 0
                },
                {
                    "sent": "Agree that there is.",
                    "label": 0
                },
                {
                    "sent": "There is an impact in there might be an impact in different modeling solutions in terms of querying that.",
                    "label": 0
                },
                {
                    "sent": "That there is no real benchmark up to list of mid covering RDF lists appropriately.",
                    "label": 0
                },
                {
                    "sent": "There is this sort of lukewarm interest in terms of people being aware that lists exist and whether lists are relevant in the data sets of people, but definitely the Community things that such a benchmark would be beneficial for.",
                    "label": 0
                },
                {
                    "sent": "For the community and for the practice, and for benchmarking.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So here are the conclusions.",
                    "label": 0
                },
                {
                    "sent": "I just hope the pain came across the we think lists are important, but it's really, really difficult to assess the impact of their models and so far there was no so much work on it.",
                    "label": 1
                },
                {
                    "sent": "So what we did was to grab these six common list patterns in frequently used in RDF and we came up with this benchmark.",
                    "label": 0
                },
                {
                    "sent": "Please submit which contains real world use K in this case media based RDF Lynch list, benchmark data generator and a set of basic retrieval operations that you sparkle to retrieve the contents of the list.",
                    "label": 0
                },
                {
                    "sent": "And then we did this first experiments with with some for results and survey the interest of the Community.",
                    "label": 0
                },
                {
                    "sent": "So for the words left for future work is to expand the list of supported operations.",
                    "label": 0
                },
                {
                    "sent": "The performance results showed are strictly based on retrieval.",
                    "label": 0
                },
                {
                    "sent": "It could well be that RDF list is very efficient for say, adding one new element to the list.",
                    "label": 0
                },
                {
                    "sent": "That wouldn't be surprising.",
                    "label": 0
                },
                {
                    "sent": "We also want to extend to other least models because in the survey we possibly left some out and we just hope to come up with out of this with good recommendations for for triple store optimization implementations and algorithms.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So thanks.",
                    "label": 0
                },
                {
                    "sent": "We have a few minutes for questions.",
                    "label": 0
                },
                {
                    "sent": "OK, I'll start with one question.",
                    "label": 0
                },
                {
                    "sent": "So I was wondering, right you you looked at different models for lists.",
                    "label": 0
                },
                {
                    "sent": "And how that has an impact.",
                    "label": 0
                },
                {
                    "sent": "So I was wondering how what would be the impact of the length of lists on the different operations like data generations or the list merge operations that you mentioned.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Yeah thanks, thanks for the question.",
                    "label": 0
                },
                {
                    "sent": "So size is definitely scalability is definitely very important issue.",
                    "label": 0
                },
                {
                    "sent": "One of the dimensions we tried in this first.",
                    "label": 0
                },
                {
                    "sent": "Set of experiments.",
                    "label": 0
                },
                {
                    "sent": "I didn't spend much time on it, but essentially the the growth, so the cost of increasing size on lists is linear with the size of the list, so that's kind of some kind of good news.",
                    "label": 0
                },
                {
                    "sent": "But the but of course the this is strictly based on the use case of retrieval, such as retrieving the contents of the list.",
                    "label": 0
                },
                {
                    "sent": "We didn't do any practical experimentation yet with other operations.",
                    "label": 0
                },
                {
                    "sent": "I think there is.",
                    "label": 0
                },
                {
                    "sent": "There is hope and there is a lot of thinking we need to do in terms of what will happen when we add, you know, add operations or merge operations.",
                    "label": 0
                },
                {
                    "sent": "Split operations because it could well be.",
                    "label": 0
                },
                {
                    "sent": "Actually, it's kind of easy to see that in models like RDF list is going to be very, very easy.",
                    "label": 0
                },
                {
                    "sent": "It's going to have like constant cost to just add an element to.",
                    "label": 0
                },
                {
                    "sent": "To the list, just changing a couple of pointers while in property.",
                    "label": 0
                },
                {
                    "sent": "Basically list you have to do a lot of bookkeeping and and updating in the in the whole list.",
                    "label": 0
                },
                {
                    "sent": "But but definitely this is.",
                    "label": 0
                },
                {
                    "sent": "This is the obvious next step that we need to take.",
                    "label": 0
                },
                {
                    "sent": "Thanks any other question from the audience up there.",
                    "label": 0
                },
                {
                    "sent": "Well.",
                    "label": 0
                },
                {
                    "sent": "I guess it would depend on the specific implementation.",
                    "label": 0
                },
                {
                    "sent": "I think in some, at least in the two groups of patterns that we identified, so the ones based on links and the ones based on attributes.",
                    "label": 0
                },
                {
                    "sent": "It wouldn't be difficult as long as you stay with one of these two paradigms because the queries sort of defer, but not very, very much.",
                    "label": 0
                },
                {
                    "sent": "Essentially, one of 1, one of them used sparkled property paths to sort of traverse the list so it wouldn't be difficult to change the specific predicates and the and the patterns we used for retrieval.",
                    "label": 0
                },
                {
                    "sent": "But definitely more sort of an agnostic approach for retrieving the contents of the list you know, independently of of how they are specifically serialized in in the in.",
                    "label": 0
                },
                {
                    "sent": "The original encoding would be something very interesting to look into, thanks.",
                    "label": 0
                },
                {
                    "sent": "Let's thank our speaker again.",
                    "label": 0
                }
            ]
        }
    }
}