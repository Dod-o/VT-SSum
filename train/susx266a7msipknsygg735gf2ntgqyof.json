{
    "id": "susx266a7msipknsygg735gf2ntgqyof",
    "title": "Querying Linked Data: SPARQL 101",
    "info": {
        "author": [
            "Irini Fundulaki, Foundation for Research and Technology - Hellas (FORTH)"
        ],
        "published": "Oct. 19, 2014",
        "recorded": "September 2014",
        "category": [
            "Top->Computer Science->Semantic Web"
        ]
    },
    "url": "http://videolectures.net/eswc2014_fundulaki_sparql/",
    "segmentation": [
        [
            "I'm coming from this digital computer science at 4th.",
            "It's one one of the main research centers in Greece Foundation of Research for computer science.",
            "Research and technology."
        ],
        [
            "So the talk today I'm going to actually the time that I have left to organize it in four different sections.",
            "First of all, I'm going to give a short introduction to spark.",
            "Well, I'm going to discuss about the Sparkle Basics, and if there's time left, we're going to talk about how to update with Sparkle and a little bit."
        ],
        [
            "About the special protocol."
        ],
        [
            "So let's let's talk about sparkling Sparkle is a specification is consists of different parts.",
            "The first part and they want that we're going to focus on is the Sparkle query language.",
            "So it's a declarative query language for RDF data.",
            "It means that if I want to ask for something, then I just write the query for it.",
            "I'm not going to tell the optimizer or the the RBF engine how to evaluate it, it comes in two specifications.",
            "The first one was released in 2008.",
            "It's punctual 1.0 and then the second one in 2013.",
            "Like one year ago.",
            "That also included some additional features that I'm going to highlight briefly later on.",
            "The second part is this particular update language that we're going briefly if time permits to discuss here, it's again at the Clara killed declarative language for manipulating RDS data.",
            "That means in order to perform some sort, all sorts of update operations on graphs and RDF triples.",
            "Second, the third part is Sparkle protocol that allows us actually to issue sparkle queries and obtain the results from sparkle endpoints and the 4th path part is our stand is a standard.",
            "Actually, how to get the data.",
            "The results of a sparkle query."
        ],
        [
            "But we're not going to talk about here.",
            "There are plenty of material out there as John said, so you can find that out.",
            "No, no special 1.0 allows only to access the data, so it's just a query language.",
            "Right?",
            "Sparkle 1.1 on the other hand introduces several advanced features such as query extensions, Foresters aggregates, you know what aggregates are right, how to compute the average, the sum, the count, etc.",
            "It also includes negation that was not there well in limited form of it was there in the circle 1.0 you have nested queries which are very powerful and a lot of set of expanded set of functions and operators that can be used in filters in sparkle.",
            "It also includes the updates and the Federation extension that will allow us when we write a query to write to write a query that can ask different."
        ],
        [
            "Idea of sources."
        ],
        [
            "So following up what Barry said before the data examples in this short presentation was factual is going to be the syntax of it is going to be in Turtle and.",
            "Mentioned and I would like to know this that Delta is also used for sparkle queries in the part of the triple patterns.",
            "OK so here are some few examples we're going to stick in the music industry in the music Department.",
            "My example is focused around either The Beatles or Tom Waits.",
            "Those two things OK to well, one artist and one group."
        ],
        [
            "Quickly back, RDF triple is a.",
            "Is it through practice of subject, predicate and object.",
            "So for instance, the first triple T1 actually has the subject is The Beatles.",
            "The predicate is the name is for name and the object is orbiting.",
            "So what this triple tells us is that I have an object that is denoted by UID pedia.",
            "The Beatles that has a property which is the name and the object of this property.",
            "Value of this property.",
            "Properties of it is the second triple tells me that I have a resource which is the Pedia help album, which is actually the album help of The Beatles and its artist.",
            "The artist of the Albemarle, the bishops, etc."
        ],
        [
            "So sparkwell.",
            "The ideal spot spanking this based on pattern matching right.",
            "RDF is a graph.",
            "I have triples that form a graph so I have pattern and so in order to query them I write sparkle queries that actually specify the patterns to match in this graph.",
            "So the queries do the queries describe the describe subgraphs of the query graph, and sparkle graph patterns are exactly describe exactly the subgraphs too much, right?",
            "So there are different flavors of sparkle graph patterns.",
            "The simplest one is the triple pattern, which is nothing more but triples with variables.",
            "The second one is.",
            "There is a group graph pattern, which is a composition of group craft patterns with different particle operators, or we will see we will discuss about later, including union, optional join, etc.",
            "No, the basic graph patterns are sets of triple patterns and this is they are interpreted in conjunction.",
            "So we have the conjunction there.",
            "The filters are complex conditions or expression of constraints.",
            "Actually that can can be used to limit the limit.",
            "The results that I have been in Sparkle query then I have union graph patterns and then I have optional graph patterns.",
            "There are also Patterson named graphs that we're not going to discuss here."
        ],
        [
            "No.",
            "What is the sparkle triple button?",
            "As I said before, it's a it's an RDF triple with variables in the place of the subject, predicate and object.",
            "Right and variable sub prefix with a question mark.",
            "So what does the first triple pattern TP?",
            "One tells me?",
            "It tells me that I have my subject is variable album.",
            "The predicate is DPD, our artists, which is a predicate from the pedia and the object is deep in the other businesses and other is actually an object here.",
            "This year I II triple pattern tells me that again I have a variable at the subject position of property at the predicate position and the value of the objects should be hello, whereas in the last triple pattern all my.",
            "Everything I have my body up close all my all the components of the triple pattern variables.",
            "So if I want to actually talk about what this to explain what those triple patterns tell me.",
            "The first one cells go into graph in the object graph and find me all the triples with predicate DPD, our artist and object dipity videos.",
            "That's what it says.",
            "The second one says going the art graph and find me all the triples that have.",
            "Object the string help and the last one says get me old doesn't restrict anything."
        ],
        [
            "No.",
            "The after the trip button, which is the most simple form of.",
            "Graph patterns is the basic graph button, which is actually a set of triple patterns, and these are understood as a conjunction of the triple patterns that it consists of.",
            "So let's let's go and see an example.",
            "So here are my two triple patterns.",
            "The first one that says go on, go ahead and find me all.",
            "All the triples in the in the RDF graph in the set of RBF strippers where the predicate is DPD.",
            "Our artist, that's the name of the predicate right.",
            "And the object is the resource DPT I help album.",
            "And go and get me the values of the object and putting a good those values in the variable.",
            "Artists II triple pattern says go ahead in the RDF graph and find me all those triples whose predicate is typically our gender, right?",
            "Now the basic triple pattern is nothing but a conjunction of both.",
            "So how do I?",
            "How do I write this basic basic graph pattern?",
            "So basically flat and I just concatenate those two different patterns together here?",
            "Here's how I have the basic attack pattern."
        ],
        [
            "OK, so a group group graph pattern.",
            "So now we are starting to build up the building block of the language.",
            "A group graph pattern is a set of graph patterns.",
            "The limited by by brackets and see here, here.",
            "I have three representations of three writings of the same group graph pattern, which are equivalent.",
            "So I have when a graph pattern now consists of only basic graph patterns, then these are all interpreted conjunctively.",
            "So for instance I have here I have one triple pattern, another triple pattern.",
            "So this is 1 basic graph pattern right here I have or here I have again two triple patterns that are concatenated.",
            "So I have one basic graph pattern and the last one is that I have one graph pattern.",
            "Sorry one basic graph pattern in another one.",
            "So I'm just going ahead and building up the language using conjunction."
        ],
        [
            "OK, so to sum up, the construction of the language, the group graph patterns are are built through inductive inductive construction.",
            "By combining smaller patterns to to construct larger ones.",
            "So it's very you have to note that the variables in the group graph pattern, they have global scope, so I might define them wherever I need whatever I want, but they are global to the query.",
            "We are not global, they are not local to the pattern where I defined him.",
            "So if I see for instance."
        ],
        [
            "So if I go here are these?",
            "I have this variable and this variable servicing right?",
            "So these are my points, the points that I have too much in the graph."
        ],
        [
            "Now I also have we have also a specific group graph pattern, which is the empty graph patterns, which actually more or less says.",
            "You know much everything and I have to note here that there is no keyword for conjunction is part well, I just need the dot right?",
            "So for instance here."
        ],
        [
            "This is the.",
            "This is my conjunction, right?",
            "So I have.",
            "This this graph pattern and this graph pattern and I could connect them with conjunction.",
            "This is what we mean that the graph pattern should be interpreted conjunctively and when do we see this?"
        ],
        [
            "We see that when we try to match the graph patterns with a basic within RDF graph.",
            "So first of all, I'm very sorry about this.",
            "It's very hot as the brain sometimes stops working when it's hot like this.",
            "OK, so let's talk about.",
            "Yeah, this particular query results OK, so we have a query.",
            "Find the tasks, something it asks a subset of the graph.",
            "That subject subset, sub graph of the of the RDF graphs.",
            "So the matching is based on what we call variable bindings or mappings.",
            "So what is so?",
            "I don't know whether you have taking the relational database course in your universities.",
            "Yes, OK, so actually.",
            "The same thing is talking about a valuation, right?",
            "So we have a query select query for instance and we say give me all the all the doubles that much this my query so the binding or the mapping is the substitution is nothing but the substitution of query variables with RDF terms.",
            "What is an RBF Thurman?",
            "Arbios tagging is a UI.",
            "Anna literal or blank nodes that we didn't discuss before, so binding automapping is perceived as a partial function from variable.",
            "Are you still OK when when you give me a triple pattern it's not necessary or a graph pattern or group graph pattern?",
            "It's not necessary that all variables are much to some to some value in the graph.",
            "And mapping represents one possible way of variable substitution, and This is why.",
            "Now solution we have a lot of mappings.",
            "We have all all possible ways of finding a matching the variables with with the nodes in the graph.",
            "And also not all variables need to be bound in a mapping and we will, and I guess you can understand why in the in the previous talks we were talking about the distributed and then the other genius nature of what we call the linked data.",
            "Or all these beautiful Web 2.0 three point zero 6.0 web.",
            "Well, not all information is available for different reasons, right?",
            "Either we don't know it.",
            "We don't want to give it or it's expressed in ways that we don't know how to.",
            "To ask for them right?",
            "So we may be asking a query on a schema that we do not really know how it is representative data.",
            "This is why when I write a triple pattern, let's say, when I write a sparkle query, I might use variables that are not bound to any mappings because I might go.",
            "I might say you know something in order to find the value for this variable across this link, and this link might not exist in the data that I have, right?",
            "So here is here is the reason why he's an example of why not all variables can be can be mapped.",
            "In order to represent the mapping so the solutions my query, we use tabular representations and this is a standard way to represent represent the solutions, especially when you when you read the 1st paper by Marcelo Renison, Claudio Gutierrez and.",
            "A colleague whose name I don't remember right now, they they use a tabular representation where.",
            "The variables that the trip is only the columns.",
            "The name of the of the other attributes in the table are nothing but the variables that are using my Queen right and each row in the table is 1 mapping, so this is the column and this is the mapping and the value one is the value for variable V1.",
            "No, the solution to Sparkle Query is abugov mappings right there are there are two.",
            "There are two ways of talking about the results of a sparkle created.",
            "The first one is the set is set theoretic perception or interpretation of sparkle results, but we are going to talk about here the bugs of markings.",
            "So for each for each solution that I found, all the solutions that I find or all the assignments or bindings or variables to.",
            "The values in the RDF graph they constitute my solution.",
            "OK."
        ],
        [
            "So more.",
            "Not so fast.",
            "So what does matching the match over triple pattern?",
            "The results are all the triples that match the variables in the triple partial.",
            "So here is an example.",
            "I had triple pattern TP one that asks for what it says.",
            "Give me back all triples in your graph whose predetonation over the predicate is the pedia owl artist, right?",
            "And here.",
            "Here are my my RDF triples T 125.",
            "So let's see which are the triples that match this triple pattern.",
            "The first 3 all all all three.",
            "All three, they have their predicates that the name of the predicate is exactly what I'm looking for, right?",
            "So I'm going to create three mappings.",
            "Work and artist other variables that I have in my triple butter and for each triple that I find I built around the table.",
            "Clear now.",
            "OK."
        ],
        [
            "No, in the case.",
            "How do I match basic graph patterns which are sets of triple patterns?",
            "OK, basically if pattern matches, if all the triple patterns in the basic graph Pattern match this is this is the essence of conjunction right of the end that we have and all variables must be bound?",
            "So here is my basic graph pattern.",
            "You basically have pattern has consists of 2 two triple patterns that says the first one.",
            "Go find me all the triples.",
            "In the yard of graph, where the predicate is DPT owl artist and the subject of the triple is dippity help, then go and find me all the triples.",
            "All the triples whose predicate is DPD, our general right, the kind of music.",
            "But be careful there because I use the same variable in both triple patterns.",
            "It means at the end what I'm going to get our all the triples that much not only on those those aspects the.",
            "Predicate and predicate, predicate and object or predicate here.",
            "But also that much on the artist value.",
            "This is the joint right in the relational context.",
            "This is what we call a John.",
            "So let's see.",
            "These are my triples.",
            "When I evaluate the first triple pattern, this is the triple that I get back, right?",
            "When I evaluate the second triple button, I get the last triple which is 3 three.",
            "If I if I see them separately, right, the first one will return only this because I do not.",
            "The first one will return only this and the second one.",
            "Yeah, the first one will return this and the second one will return this so it's the end.",
            "I'm going to get.",
            "This this mapping can you tell me why I'm not getting anymore?",
            "Or less for this junction.",
            "We're starting the second one here, so.",
            "Should I get only one or two?",
            "Why?",
            "Well, actually I should be getting also this one because when sorry no I'm sorry only one because the album on the album matches right?",
            "I have only one only one triple for the DPT help album right?",
            "OK"
        ],
        [
            "So let's see.",
            "It's the exactly the same query.",
            "Now I have changed a little bit my my my triples.",
            "I'm actually introducing another one, another one more triple about genre because a bit looser characterizes being pop, pop group or also a rock group.",
            "So again, the first triple pattern matches only T2 is marked by T2.",
            "The second triple pattern matches much by default, so I'm creating one mapping for this.",
            "For these two sets of triples in my in my graph.",
            "Now the thing also is that I have another match for my second triple pattern, which is this one, right?",
            "So I'm creating yet another mapping, so these are so these are my solutions.",
            "These are the solutions to my my credit."
        ],
        [
            "OK, no, except the group graph patterns I have also filters.",
            "We have also filters which are nothing but nothing but constraints on your graph patterns.",
            "Of course, things that I can write in order to filter out solutions, so these constraints involve arithmetic operator operations like addition, multiplication and division.",
            "Are there specific functions, comparisons, and logical connectives like negation, disjunction, conjunction and in order to express those?",
            "I'm using the keyword filter in the sparkle query, so here, here are my examples of filters, so if I want to.",
            "Name you know something the variable the variable for the value for variable name is a literal.",
            "This is how I'm going to write if I want to say that the name, the value of the name is The Beatles.",
            "This is how I'm going.",
            "One way of writing it.",
            "If I want to say that, well, I might have capital and lowercase and uppercase letters, then I'm going to use the disjunction in order to say go and get me all answers that satisfy.",
            "One of those conditions.",
            "Then I can write regular expressions, right?",
            "So go ahead and get me a return all the values for name that they contain some someplace in the string.",
            "They contain the substring bit, and here is a filter and numerical one that says the value for the variable runtime should be higher than 1720 and lower than 12,000.",
            "So the matching the idea of the matching is as I said before, is.",
            "Once you have the group graph pattern, compute the solutions and then you can filter out those that do not satisfy the constraints.",
            "OK, so let's."
        ],
        [
            "Go and see some examples.",
            "No, OK, so The thing is also that a group graph pattern have multiple feet filters, right?",
            "So again, these are interpreted as conjunction features, so I can just put them in one, write them as one filter.",
            "So here for instance I have.",
            "Two filters filter, one filter that checks the value of variable name and another filter that checks imposes constraints on the on the variable runtime and then I can write them together by the logical end.",
            "Just writing writing it here.",
            "So I just shorten my expressions like this.",
            "One possible.",
            "OK.",
            "So now the interesting thing is that sometimes in filters especially equality filters, you can substitute the value and put it in the triple pattern itself directly.",
            "So for here, here for instance, I have one triple pattern that says one triple pattern and here I have a filter that restricts the value of the variable name to be the business.",
            "But I can take this.",
            "I can take this value and put it here directly in the triple pattern, right?",
            "So then I simplify simplify.",
            "The food is more, but this is only the case of equality.",
            "Otherwise it doesn't work.",
            "Regarding this replacement, if the If The Beatles has actually kind of tag language, is it also included as a yes yeah so if not I think so.",
            "Yes, I think so.",
            "I think it is included as a source.",
            "Ian Doug, can I put it in the no OK?",
            "Attack and you want to do that match.",
            "There's a built-in called STR, which takes just screen part of that.",
            "But even if only be fine, you do not return with, no.",
            "It's that that will not match the people.",
            "OK, talk English.",
            "So then you have to write it like this.",
            "OK, thanks, STL brackets may also the case with the site, the text contact.",
            "It's also the same so the WhatsApp."
        ],
        [
            "Same with this.",
            "It's too any regression is very costly.",
            "It's much cheaper to use STR to split it into the string on the tag.",
            "OK, yeah.",
            "The only way.",
            "Is that the only way?",
            "I know there's something you.",
            "There's also the lung.",
            "This one.",
            "You can check the long one.",
            "So yeah, there are different ways but.",
            "Lanxi packages language pack and exploitation target.",
            "It's a data type tag, but there is some first class model for the two parts now, but I can't remember how to.",
            "I think also that it is important when I'm when you write a query to a little bit to understand how the engine below works.",
            "If you if you want to your query, I mean the purpose of querying is not only to get the data back, I mean there are applications where it is crucial to get them back very quickly, and if you cannot do that then there is.",
            "A big problem, so sometimes it's better.",
            "I don't know, it depends.",
            "There are some query language so sorry there are some engines of support.",
            "The tags are some others that do not.",
            "So you have.",
            "There is also always a tradeoff between expressiveness of the language and what the the back end does it.",
            "Even if you have support for the features, some of them might be optimized better than yes.",
            "Yeah yeah, you really find this with subqueries.",
            "With some Angels the order that you nest your subqueries makes a huge difference for execution time exactly.",
            "So why live there?",
            "We're writing a declarative language natural plaque.",
            "You tend to massage them for speed, but this is.",
            "This is also very interesting also for relational databases you write 1 query, you have one query and then you you give an equivalent version of the query rewriting of the query and all of a sudden you know the query plan is a Cartesian product.",
            "This is why you know it's a join.",
            "Why is it a Cartesian product?",
            "It's because the planner or the optimizer you know some place.",
            "This is what I meant with relation.",
            "Yeah the next step then is often to run a pseudo query called explains that.",
            "You see the fund I send up your database vendor and say why do you do this?",
            "This is crazy and the worst part is when they say I don't know."
        ],
        [
            "So for instance here look.",
            "Those two queries are equivalent.",
            "They're going to return exactly the same set of answers, but there are query engines.",
            "If you give them not query, but you know, like state of the art prototypes do not understand this and they understand this one, so they cannot rewrite or even they are not going to rewrite to give a good query plan when you give them this query, but they're going to give an excellent query plan when you give this, But this is.",
            "Things that people."
        ],
        [
            "Over the years?",
            "OK, so here is.",
            "Here are a list of filter expressions that we have.",
            "I'm not going to go into those.",
            "Most of them I don't know.",
            "I just when I need them I go ahead and read about them.",
            "So there are functional forms there, for instance not existing exists are very important.",
            "Important functions that you can use this partial in nothing also because they allow you to test whether a solution is in a set of solutions that you would like them to be.",
            "There are function of RDF terms, like.",
            "For instance is literal that we saw before or string and land B node is checks whether nodes is blank.",
            "Note OK, there's some unknown node there.",
            "Also functions on pneumatics like around floor.",
            "Weather"
        ],
        [
            "There are functions on strings.",
            "These are very important because most of our processing, some strings and functions on dates and times that are becoming more and more useful now that the temporal aspects of data is incorporated in the data set."
        ],
        [
            "OK, so let's see how the matching with string filter goes, and so here is my my query.",
            "OK so here is my here.",
            "My set of triples and the mappings.",
            "Then the columns of the attribute names of my table mapping table is album are all the variables that I see in my graph patterns, yes.",
            "That's part of this, so it's gonna be so you wouldn't really change to add those two queries inverted, so approaches assume at first artist drops.",
            "It depends independence this is.",
            "Hi, it depends on the operations.",
            "Now that I have conjunction conjunction is binary operator is commutative some fine.",
            "So you can do as you like.",
            "But there are other operators like union or optional but had not commutative so we have to be extremely extremely careful when how we write the queries.",
            "Because depending on how you write it you might get this completely different answers right?",
            "So yes I can write first.",
            "The second triple pattern, then the filter and then the sorry the the.",
            "Then the first triple button and then the filter.",
            "So here are my my triples.",
            "This is my mapping table and the first one is going to return.",
            "OK the DPT I helped in the artist is The Beatles and the name is the business.",
            "If you interpret this if you just take the triple patterns and forget about the name, these are the solutions that I'm going to get right.",
            "So I have my album.",
            "I have the information about the name and then here.",
            "Here are the steps that I get when I graph patterns right my right or wrong?",
            "Because dumb ways I still have.",
            "I have this one that the rain dogs that the album Rainbow Rain Dogs whose artist is Tom Waits and then I also have Tom Waits with problem.",
            "Tom Waits right yeah so I get this solution but when I go and evaluate the filter in the filter I see that the last one is advisor valid.",
            "So I do my matching and then I remove the stuff right, remove whatever it doesn't.",
            "It's just doing it step by step, yeah?"
        ],
        [
            "OK, so in the case of arithmetic filters and this is my my query.",
            "Now I have just one triple pattern and tasks for the albums and the runtimes, but the filter actually restricts the runtime for a specific set of values above 1720 and below 1200.",
            "So if I get my my triples here then these are the results that I'm going to get right.",
            "If I evaluate my triple pattern, I'm going to get all the results back, but when I evaluate the filter expression that I'm going to remove the last one.",
            "OK, sorry."
        ],
        [
            "OK, so.",
            "Up until now, conjunction the logical end or join in from database is the second form of graph patterns are union graph patterns.",
            "What do union graph patterns do?",
            "They allow the form the disjunction of of graph patterns.",
            "Why do we need that?",
            "Cause information is expressed in different ways.",
            "For instance variable saying that I can get information about music from Musicbrainz.",
            "There is also a very nice extra tonight.",
            "I don't remember the name right now.",
            "Very nice link data.",
            "Dataset brilliant, but it uses a different scheme out different names for the pulse then Musicbrainz or I even get my own.",
            "You know whatever RDF data with completely different name, so there are different ways of expressing the data, so This is why I need Union for I'm able to express alternative patterns.",
            "How do I write that in this particular query by using the Union keyword?",
            "So here I have.",
            "The union graph pattern that says get me all the triples that much.",
            "This triple pattern and the triples that match this not end in the sense of you know this.",
            "And this is just this or this right?",
            "So the matching is about more than one triple patterns match.",
            "And if one if more than one tricking patterns much, then all possibles or possible solutions are in turn and.",
            "And patterns are much independent.",
            "Leah results are combined using set set theoretic union.",
            "Well, some sort of set theoretic union because here is.",
            "I can actually Union triple actually Union the results of the mappings among the set of mappings, even though even if they have different different attributes, right?",
            "In that case, in this case we have the two triple bundles.",
            "They share the same variable so that the columns the column names are the same, but there are cases where they are now."
        ],
        [
            "But we're going to see to see like their own.",
            "So here is my union I get.",
            "I want all the artists to get back the artist whose kind of music that are playing is all I have.",
            "Pop music or rock music, right?",
            "So here are my triple patterns and again about The Beatles and Tom Waits.",
            "The first one matches the second triple pattern, the first one the first one, the T One matches the first triple pattern, so I get one mapping the second one matches the second triple pattern, so I get the second mapping and the 4th one mapping matches the.",
            "Sorry, the second triple pattern, so I get rock music there."
        ],
        [
            "OK, so.",
            "No, you see that I'm using the same variables for for my Union graph pattern.",
            "So again here I have.",
            "I have my triple bottom and I have my triples then I have my my mappings right.",
            "The value of the columns for my solutions for my mapping table are the variable names.",
            "So let's see the 1st first triple pattern.",
            "So here it is.",
            "The album on the album gets the bitters.",
            "Let me give you all.",
            "OK, how do I get the first triple pattern?",
            "The first triple pattern.",
            "So the first mapping I get it by evaluating the first triple pattern on my data set, right or wrong.",
            "M1 I get it from T3.",
            "This is OK. And so I get it from which, which one?",
            "Herbal.",
            "T1T1 and then the the third one.",
            "I get it from this one right?",
            "You can see here that even though I know you see that here I'm just leaving blanks right?",
            "I'm not there.",
            "Are there are variables that do not do not much when I evaluate the Union?",
            "I'm so sorry.",
            "This is a thing.",
            "Yes, the the artist is the same here, but here I'm not concatenating them like I say giving back all mappings either.",
            "Sorry, give me back all solutions that much.",
            "Either the first one or the second one in.",
            "If they match both then I just put together the values in one variable.",
            "Yes yeah if you put the dirt instead of union then you should only have the right one and it's actually if I put an adult instead of Union then I'm not going to get anything for Tom Waits because it doesn't have.",
            "An album in that in various datasets, right?",
            "This is the conjunction.",
            "It would be nice to have also a board here next time too, right?",
            "OK.",
            "The interpretation if you if you take the algebraic expression, the result of a union is if I have a triple pattern T one, sorry, a triple 31.",
            "Union triple pattern T2, then the result of the evaluation is are all the mappings M that are contained either in the valuation of the first or the valuation of the 2nd, and if they are contained in both and I just put them in my solution.",
            "That's what we call set theoretic union.",
            "Just put the mappings together.",
            "So sorry if you never returns because The Beatles is the same, but it will store this temporal entry because if I wrote it in different, sorry, The Beatles here is actually the same, right?",
            "Yes, yeah, yeah, because you differently then you put it as a separate entry.",
            "Yes, because it's actually this this entry.",
            "This one comes from the evaluation of the second different pattern, right?",
            "And this one from the valuation of the second triple butter.",
            "No, the yeah.",
            "The second triple pattern, but I don't have.",
            "A result that comes for Tom Waits for the evaluation of the first driven path, right?",
            "Yeah.",
            "Repeat the first triple pattern two times using the Union.",
            "Do I have two times the results?",
            "Well, I think it's one time only one should be eliminated.",
            "No, because then you need two occurrences you need to at least two triples to match the triple pattern, like I need twice too much is I'm not.",
            "I'm not sure about this.",
            "I can, I can look it up.",
            "You mean if I have album DBPR artist Dot album?",
            "Not the same thing.",
            "OK, in the in the bug semantics you will get all solutions in the set semantics they will get only one.",
            "OK, in the second set semantics of sparkle you will get only one solution in the bug semantics.",
            "You will get both because it's it's a multi set.",
            "Fuck baby.",
            "No, it's actually bug based, yes, but the the semantics that they have been attributed to sparkle are more.",
            "The basic ones are from this semantics and complexity of sparkle in 2008.",
            "I think the 1st paper not clarified the semantics.",
            "So there are two specifications now.",
            "The standard level, this one specification.",
            "But if you see there are two, there are actually there are bugs semantics for the results.",
            "This is why you have solution modifyers that says give eliminate me the duplicates.",
            "But exactly, but The thing is that if you if I give a query to an engine then it will get get me give me back all results even if there are duplicates.",
            "That's why Sparkle has put an additional keyword that's called district as you have in SQL as well.",
            "That actually will eliminate the duplicates and will turn unique results.",
            "OK."
        ],
        [
            "Now the interesting part about the Union graph patterns is that I can use the user variables in the alternative or the triple patterns that the Union graph pattern consists of is depends on what we want to compute, so get this.",
            "OK so here is.",
            "A union graph pattern.",
            "And ideally this is talks about the same things as the one before, but here I'm using a different different variable for artist, right?",
            "So what happens here is that I completely separate.",
            "The things I do not want to merge anything together, I just say go there.",
            "Bring me what you have about this and then go some other place and get me what you want about this one.",
            "So here I have.",
            "This is The Beatles and this is The Beatles with pop music etc.",
            "So I don't I just I have four variables instead of three.",
            "I do not do any merge."
        ],
        [
            "So the Union is Union is a binary operator.",
            "It is a commutative one.",
            "OK, we know that it's left associated.",
            "In the sense that then it's left associated with access that everything is applied on the right part has higher precedence of conjunction, but they join right first to the Union and then I do the joint.",
            "So and then I have.",
            "It's associated with the sense that if I want it associated, you know I don't need to explain more."
        ],
        [
            "OK, so now optional graph patterns optional is very important in the sense that gives us and give us the possibility to retrieve to specify things that we're not really sure about.",
            "You know, get me back things and get me back some others, but even they do not exist.",
            "I don't care.",
            "This is what the optional is about, so.",
            "Allows the specification of optional parts of the query.",
            "Why?",
            "Because I cannot assume that the my graphs that contain a regular all competing for information at all times, right?",
            "So how do I express this by using the optional keywords?",
            "So I say GPU.",
            "An optional GP2 says.",
            "Evaluate this, evaluate that, but if I do not get any bindings from this, I don't care, right?",
            "OK, so for instance.",
            "How do I read this is get me all get me the albums and their artists through this path and optionally get me also the images for the albums if they have find.",
            "If they don't, I don't care.",
            "So here it is.",
            "If the optional part for the matching is not matched, then no solutions are produced.",
            "But the solutions that I've already computed by the other parts are not eliminated.",
            "If I had to join, if there would be all eliminating or eliminated."
        ],
        [
            "But the optional part is interpreted as a conjunction.",
            "No, it's a it's left out outer join.",
            "Actually, in the relational database.",
            "In the in algebra relation, algebra left outer joins.",
            "Is gay?",
            "How can I say that is get me whatever you have?",
            "And try to find me trying to find the things that I specify here.",
            "If you don't then I don't care.",
            "Leave them out.",
            "If they do bring them also as well.",
            "Yeah, this is how it's interpreted.",
            "Or did I get your question?",
            "Here, yeah, examples."
        ],
        [
            "OK, that's OK.",
            "So I also started 10 minutes later.",
            "15 minutes, OK?",
            "So here is my my optional graph button.",
            "As I you know I presented before and here are my triples.",
            "Again, I would say give me back all albums with artists for sure.",
            "I want albums and their artist.",
            "I cannot.",
            "I definitely need their artists and optionally get me back the images for the albums.",
            "So here I get again my three variables.",
            "For my mappings I get the 1st.",
            "The first mapping is this right?",
            "Do I have?",
            "Do I have for help?",
            "Do I have an image for the album?",
            "Help?",
            "OK, but here.",
            "But I have any much for rain dogs.",
            "I have both Tom Waits, the artist and image, so I'm fine.",
            "OK if I didn't have Tom Waits answering the artist what would be?",
            "What would be the case?",
            "No results whatever comes before is definitely yes.",
            "More than one optional pattern that's interesting."
        ],
        [
            "OK, it's interesting in the sense that we don't know.",
            "It's always you start from the rightmost and then you go forward.",
            "Yeah, this is what left associative is right.",
            "But be careful now when you are going to write your queries.",
            "Be sure because precedents because you have union you have optional and then you have joined precedents.",
            "An associativity is is very important on how you formulate your query so it's better when you have in your mind the query I want to union those things and then join those things just to write directly bracket it.",
            "It's like putting parentheses.",
            "Right in in numeric expressions just put parentheses.",
            "It's much easier than trying to.",
            "Oh yes, multiplication and whatever division, etc.",
            "Just write brackets.",
            "OK, the optional is a binary operator and it is left associative.",
            "So imagine that I have three group graph patterns GP, one optional GP2 optional GP 3.",
            "Then what will happen is that optional will be applied on the last one and the part first 1st I'm going to.",
            "I'm going to evaluate GP one optional GP2 and then I'm going on this.",
            "I'm going to apply the second option.",
            "I know it's not.",
            "So you see, since it's left associated, these two are not equivalent.",
            "Once I have this then it's not equivalent to this one because you are optional example.",
            "I'd on GP2 only, not on this.",
            "The result of GP.",
            "One optional GP two, it's definitely not commutative, so be careful when you write your code."
        ],
        [
            "This.",
            "So now I have also.",
            "Option lots and filter, so I'm going to go very quickly here.",
            "Look at here.",
            "I have one optional graph pattern where I have my what I need are the albums and there are artists and then I have an optional on the runtime and then I have a filter associated with the runtime, so the optional pattern does not generate any bindings.",
            "I do not get any results back when two things occur when either either things OK, one.",
            "There is no runtime property.",
            "Album right, this is the optional part, or if there is a runtime property, the value the constraint is not satisfied.",
            "So it means that the value of runtime is below 1720.",
            "Is it OK?",
            "Yes no, maybe OK."
        ],
        [
            "So in the case of multiple options, here is your question.",
            "So here I say give me back the albums and their artists and optionally the runtime and optionally the image, right?",
            "So what happens is I'm going to get there on time for DP pedia.",
            "For help the album?",
            "Help I'm going to get back The Beatles and I'm going to get back the runtime.",
            "But because all this information exists but I don't have the information on image.",
            "But I'm not going to get it back.",
            "I'm fine.",
            "On the other hand regarding raindrops, Tom Waits.",
            "I have all information.",
            "Except runtime, so I'm still going to get back a solution for this, OK?"
        ],
        [
            "OK, so if I if I need to combine union and optional, so let's say so.",
            "I have this query.",
            "I have a union of two patterns with an optional.",
            "So the question is what is what does this how?",
            "I'm going to interpret this query is I'm going to.",
            "I'm going to interpret it as a union of two patterns with an optional condition or a union of two patterns where the second one has an optional condition.",
            "But the solution here is the first one I'm going to interpret it.",
            "As a union of two buttons, I'm going to find the Union because it has higher precedence on junction and then I'm going to put the option along the Union, right?",
            "Because I I read it like this optional on this then and then I have a big one but contains conjunction and union.",
            "So I'm going to put together Union and then I'm going to put outside conjunction."
        ],
        [
            "Sorry, I know.",
            "Sorry.",
            "The option not no, no, it's not going to be syntactically correct.",
            "When you write things like queries like this if you write them correctly, there are two cases.",
            "Either you write them syntactic, the connecting syntax, but they give you different answers from what you are expecting.",
            "So so so the first one.",
            "But then you don't know if it's syntactically correct.",
            "You do not know whether it's semantically correct.",
            "OK, so.",
            "The general loose when you combine those is that optional refers exactly to one group groups pattern to the right.",
            "Optional and union refer to alter their expressions at the left since they are left associative and union and optional have the same precedents and union and Union has higher precedence than conjunction but optional has smaller percentage in conjunction.",
            "So right in brackets, right brackets, bracket expressions.",
            "It's much easier question but I may be wrong but.",
            "And logic isn't living contradiction.",
            "Yes, yes yes, but but OK, but Sparkle was not written by let's say by magicians or database people.",
            "It was written by people who actually had data before them, like RDF data, and they wanted to query them so they figured out sparkle right they constructed sparkle which is a beauty.",
            "It's a night.",
            "It's a nice language, but then the semantics were not very clear.",
            "So then you had the people.",
            "You know database people, theoreticians that came and they gave the semantics.",
            "Yes, I know, but it's not written in that perfect question is why this versatility is better suited for.",
            "I don't know.",
            "I don't know.",
            "Seriously, I do not know.",
            "I don't know.",
            "Seriously, I don't know.",
            "I would have liked to, but I don't OK.",
            "So for instance if I get this this example, I have a union between two patterns, an optional with the third one.",
            "So if I follow those general rules that I'm going to union those guys 1st and then optional do an optional with the third one, because optional refers only to this one only, whatever is on its right and then then I put the expressions on the left.",
            "OK."
        ],
        [
            "So when I combine conjunction with Union, since Union has a higher precedence than, this is how I'm going to write it."
        ],
        [
            "And then there is.",
            "Then he rebody it starts the the part where I have my spot in my sparkle queries.",
            "OK, so up until now we have been seeing how to write the basic part of Spartan queries, right?",
            "What is the part of the queries that gives me the solutions that find solutions at goals?",
            "But I specify a pattern and I say go in the graph and find solutions for those variables.",
            "Then the point is how do I do?",
            "What do I do with those things right?",
            "How do I express it in some machine readable format that an agent can understand?",
            "So in general and sparkle query you have prefixes.",
            "Barry wrote said that before."
        ],
        [
            "You have what we call query forms is what how do you?",
            "What kind of answers do I want to get to get back so you have select?",
            "Select select form actually says go and get me back those variables in the graph patterns you might have, you know thousands know times less, hopefully variables select it says give me back the values give me back the mappings that actually project out the the from the mappings.",
            "The columns from the tabular forms the columns that refer to the variables artisan genre.",
            "I ask says is this pattern through?",
            "Does this solution exist in my graph pattern describe says take a variable and sorry take a resource and tell me everything you know about it.",
            "So get the graph around this resource and construct says evaluate this pattern and then construct the sub graph of it.",
            "Or it might be a completely new graph right?",
            "If I want to create views for instance in databases you create views.",
            "You say I have I have a path of length.",
            "I don't know then, but I want just to say just to get back to the source and the target of this long path.",
            "So this is how you you can write construct close for this purpose."
        ],
        [
            "You have also the possibility of specifying the graphs that you can go ahead and evaluate the."
        ],
        [
            "The query on.",
            "There's nowhere close up until now.",
            "We have been discussing about the work closed group Group graph patterns are specified in the workload, right?",
            "And there is.",
            "This is the place where the computer."
        ],
        [
            "Of the bindings and mappings are done.",
            "There are solution modifyers like order by.",
            "In order to get back in order the results limit and offset limit up until 10 offset.",
            "Give me the 10 but starting from a specific point in the result, set the group by OK SQL Combine there is."
        ],
        [
            "Odds and this thing to eliminate duplicates.",
            "So a very very very quick quick course on the basics of spark well.",
            "And then we can just go in the hands on an advance on that, OK."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "I'm coming from this digital computer science at 4th.",
                    "label": 1
                },
                {
                    "sent": "It's one one of the main research centers in Greece Foundation of Research for computer science.",
                    "label": 0
                },
                {
                    "sent": "Research and technology.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So the talk today I'm going to actually the time that I have left to organize it in four different sections.",
                    "label": 0
                },
                {
                    "sent": "First of all, I'm going to give a short introduction to spark.",
                    "label": 1
                },
                {
                    "sent": "Well, I'm going to discuss about the Sparkle Basics, and if there's time left, we're going to talk about how to update with Sparkle and a little bit.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "About the special protocol.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So let's let's talk about sparkling Sparkle is a specification is consists of different parts.",
                    "label": 0
                },
                {
                    "sent": "The first part and they want that we're going to focus on is the Sparkle query language.",
                    "label": 0
                },
                {
                    "sent": "So it's a declarative query language for RDF data.",
                    "label": 1
                },
                {
                    "sent": "It means that if I want to ask for something, then I just write the query for it.",
                    "label": 0
                },
                {
                    "sent": "I'm not going to tell the optimizer or the the RBF engine how to evaluate it, it comes in two specifications.",
                    "label": 0
                },
                {
                    "sent": "The first one was released in 2008.",
                    "label": 0
                },
                {
                    "sent": "It's punctual 1.0 and then the second one in 2013.",
                    "label": 0
                },
                {
                    "sent": "Like one year ago.",
                    "label": 0
                },
                {
                    "sent": "That also included some additional features that I'm going to highlight briefly later on.",
                    "label": 0
                },
                {
                    "sent": "The second part is this particular update language that we're going briefly if time permits to discuss here, it's again at the Clara killed declarative language for manipulating RDS data.",
                    "label": 0
                },
                {
                    "sent": "That means in order to perform some sort, all sorts of update operations on graphs and RDF triples.",
                    "label": 0
                },
                {
                    "sent": "Second, the third part is Sparkle protocol that allows us actually to issue sparkle queries and obtain the results from sparkle endpoints and the 4th path part is our stand is a standard.",
                    "label": 0
                },
                {
                    "sent": "Actually, how to get the data.",
                    "label": 0
                },
                {
                    "sent": "The results of a sparkle query.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "But we're not going to talk about here.",
                    "label": 0
                },
                {
                    "sent": "There are plenty of material out there as John said, so you can find that out.",
                    "label": 0
                },
                {
                    "sent": "No, no special 1.0 allows only to access the data, so it's just a query language.",
                    "label": 1
                },
                {
                    "sent": "Right?",
                    "label": 0
                },
                {
                    "sent": "Sparkle 1.1 on the other hand introduces several advanced features such as query extensions, Foresters aggregates, you know what aggregates are right, how to compute the average, the sum, the count, etc.",
                    "label": 0
                },
                {
                    "sent": "It also includes negation that was not there well in limited form of it was there in the circle 1.0 you have nested queries which are very powerful and a lot of set of expanded set of functions and operators that can be used in filters in sparkle.",
                    "label": 1
                },
                {
                    "sent": "It also includes the updates and the Federation extension that will allow us when we write a query to write to write a query that can ask different.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Idea of sources.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So following up what Barry said before the data examples in this short presentation was factual is going to be the syntax of it is going to be in Turtle and.",
                    "label": 0
                },
                {
                    "sent": "Mentioned and I would like to know this that Delta is also used for sparkle queries in the part of the triple patterns.",
                    "label": 1
                },
                {
                    "sent": "OK so here are some few examples we're going to stick in the music industry in the music Department.",
                    "label": 0
                },
                {
                    "sent": "My example is focused around either The Beatles or Tom Waits.",
                    "label": 0
                },
                {
                    "sent": "Those two things OK to well, one artist and one group.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Quickly back, RDF triple is a.",
                    "label": 0
                },
                {
                    "sent": "Is it through practice of subject, predicate and object.",
                    "label": 0
                },
                {
                    "sent": "So for instance, the first triple T1 actually has the subject is The Beatles.",
                    "label": 0
                },
                {
                    "sent": "The predicate is the name is for name and the object is orbiting.",
                    "label": 0
                },
                {
                    "sent": "So what this triple tells us is that I have an object that is denoted by UID pedia.",
                    "label": 0
                },
                {
                    "sent": "The Beatles that has a property which is the name and the object of this property.",
                    "label": 0
                },
                {
                    "sent": "Value of this property.",
                    "label": 0
                },
                {
                    "sent": "Properties of it is the second triple tells me that I have a resource which is the Pedia help album, which is actually the album help of The Beatles and its artist.",
                    "label": 1
                },
                {
                    "sent": "The artist of the Albemarle, the bishops, etc.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So sparkwell.",
                    "label": 0
                },
                {
                    "sent": "The ideal spot spanking this based on pattern matching right.",
                    "label": 1
                },
                {
                    "sent": "RDF is a graph.",
                    "label": 0
                },
                {
                    "sent": "I have triples that form a graph so I have pattern and so in order to query them I write sparkle queries that actually specify the patterns to match in this graph.",
                    "label": 0
                },
                {
                    "sent": "So the queries do the queries describe the describe subgraphs of the query graph, and sparkle graph patterns are exactly describe exactly the subgraphs too much, right?",
                    "label": 1
                },
                {
                    "sent": "So there are different flavors of sparkle graph patterns.",
                    "label": 0
                },
                {
                    "sent": "The simplest one is the triple pattern, which is nothing more but triples with variables.",
                    "label": 0
                },
                {
                    "sent": "The second one is.",
                    "label": 0
                },
                {
                    "sent": "There is a group graph pattern, which is a composition of group craft patterns with different particle operators, or we will see we will discuss about later, including union, optional join, etc.",
                    "label": 1
                },
                {
                    "sent": "No, the basic graph patterns are sets of triple patterns and this is they are interpreted in conjunction.",
                    "label": 0
                },
                {
                    "sent": "So we have the conjunction there.",
                    "label": 1
                },
                {
                    "sent": "The filters are complex conditions or expression of constraints.",
                    "label": 0
                },
                {
                    "sent": "Actually that can can be used to limit the limit.",
                    "label": 0
                },
                {
                    "sent": "The results that I have been in Sparkle query then I have union graph patterns and then I have optional graph patterns.",
                    "label": 0
                },
                {
                    "sent": "There are also Patterson named graphs that we're not going to discuss here.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "No.",
                    "label": 0
                },
                {
                    "sent": "What is the sparkle triple button?",
                    "label": 0
                },
                {
                    "sent": "As I said before, it's a it's an RDF triple with variables in the place of the subject, predicate and object.",
                    "label": 1
                },
                {
                    "sent": "Right and variable sub prefix with a question mark.",
                    "label": 0
                },
                {
                    "sent": "So what does the first triple pattern TP?",
                    "label": 0
                },
                {
                    "sent": "One tells me?",
                    "label": 0
                },
                {
                    "sent": "It tells me that I have my subject is variable album.",
                    "label": 0
                },
                {
                    "sent": "The predicate is DPD, our artists, which is a predicate from the pedia and the object is deep in the other businesses and other is actually an object here.",
                    "label": 0
                },
                {
                    "sent": "This year I II triple pattern tells me that again I have a variable at the subject position of property at the predicate position and the value of the objects should be hello, whereas in the last triple pattern all my.",
                    "label": 0
                },
                {
                    "sent": "Everything I have my body up close all my all the components of the triple pattern variables.",
                    "label": 0
                },
                {
                    "sent": "So if I want to actually talk about what this to explain what those triple patterns tell me.",
                    "label": 0
                },
                {
                    "sent": "The first one cells go into graph in the object graph and find me all the triples with predicate DPD, our artist and object dipity videos.",
                    "label": 0
                },
                {
                    "sent": "That's what it says.",
                    "label": 0
                },
                {
                    "sent": "The second one says going the art graph and find me all the triples that have.",
                    "label": 0
                },
                {
                    "sent": "Object the string help and the last one says get me old doesn't restrict anything.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "No.",
                    "label": 0
                },
                {
                    "sent": "The after the trip button, which is the most simple form of.",
                    "label": 0
                },
                {
                    "sent": "Graph patterns is the basic graph button, which is actually a set of triple patterns, and these are understood as a conjunction of the triple patterns that it consists of.",
                    "label": 1
                },
                {
                    "sent": "So let's let's go and see an example.",
                    "label": 0
                },
                {
                    "sent": "So here are my two triple patterns.",
                    "label": 0
                },
                {
                    "sent": "The first one that says go on, go ahead and find me all.",
                    "label": 0
                },
                {
                    "sent": "All the triples in the in the RDF graph in the set of RBF strippers where the predicate is DPD.",
                    "label": 0
                },
                {
                    "sent": "Our artist, that's the name of the predicate right.",
                    "label": 0
                },
                {
                    "sent": "And the object is the resource DPT I help album.",
                    "label": 0
                },
                {
                    "sent": "And go and get me the values of the object and putting a good those values in the variable.",
                    "label": 0
                },
                {
                    "sent": "Artists II triple pattern says go ahead in the RDF graph and find me all those triples whose predicate is typically our gender, right?",
                    "label": 0
                },
                {
                    "sent": "Now the basic triple pattern is nothing but a conjunction of both.",
                    "label": 0
                },
                {
                    "sent": "So how do I?",
                    "label": 1
                },
                {
                    "sent": "How do I write this basic basic graph pattern?",
                    "label": 0
                },
                {
                    "sent": "So basically flat and I just concatenate those two different patterns together here?",
                    "label": 0
                },
                {
                    "sent": "Here's how I have the basic attack pattern.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, so a group group graph pattern.",
                    "label": 1
                },
                {
                    "sent": "So now we are starting to build up the building block of the language.",
                    "label": 0
                },
                {
                    "sent": "A group graph pattern is a set of graph patterns.",
                    "label": 1
                },
                {
                    "sent": "The limited by by brackets and see here, here.",
                    "label": 0
                },
                {
                    "sent": "I have three representations of three writings of the same group graph pattern, which are equivalent.",
                    "label": 0
                },
                {
                    "sent": "So I have when a graph pattern now consists of only basic graph patterns, then these are all interpreted conjunctively.",
                    "label": 1
                },
                {
                    "sent": "So for instance I have here I have one triple pattern, another triple pattern.",
                    "label": 0
                },
                {
                    "sent": "So this is 1 basic graph pattern right here I have or here I have again two triple patterns that are concatenated.",
                    "label": 0
                },
                {
                    "sent": "So I have one basic graph pattern and the last one is that I have one graph pattern.",
                    "label": 0
                },
                {
                    "sent": "Sorry one basic graph pattern in another one.",
                    "label": 0
                },
                {
                    "sent": "So I'm just going ahead and building up the language using conjunction.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, so to sum up, the construction of the language, the group graph patterns are are built through inductive inductive construction.",
                    "label": 1
                },
                {
                    "sent": "By combining smaller patterns to to construct larger ones.",
                    "label": 1
                },
                {
                    "sent": "So it's very you have to note that the variables in the group graph pattern, they have global scope, so I might define them wherever I need whatever I want, but they are global to the query.",
                    "label": 0
                },
                {
                    "sent": "We are not global, they are not local to the pattern where I defined him.",
                    "label": 0
                },
                {
                    "sent": "So if I see for instance.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So if I go here are these?",
                    "label": 0
                },
                {
                    "sent": "I have this variable and this variable servicing right?",
                    "label": 0
                },
                {
                    "sent": "So these are my points, the points that I have too much in the graph.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Now I also have we have also a specific group graph pattern, which is the empty graph patterns, which actually more or less says.",
                    "label": 1
                },
                {
                    "sent": "You know much everything and I have to note here that there is no keyword for conjunction is part well, I just need the dot right?",
                    "label": 1
                },
                {
                    "sent": "So for instance here.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "This is the.",
                    "label": 0
                },
                {
                    "sent": "This is my conjunction, right?",
                    "label": 0
                },
                {
                    "sent": "So I have.",
                    "label": 0
                },
                {
                    "sent": "This this graph pattern and this graph pattern and I could connect them with conjunction.",
                    "label": 1
                },
                {
                    "sent": "This is what we mean that the graph pattern should be interpreted conjunctively and when do we see this?",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": []
        },
        "clip_17": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We see that when we try to match the graph patterns with a basic within RDF graph.",
                    "label": 0
                },
                {
                    "sent": "So first of all, I'm very sorry about this.",
                    "label": 0
                },
                {
                    "sent": "It's very hot as the brain sometimes stops working when it's hot like this.",
                    "label": 0
                },
                {
                    "sent": "OK, so let's talk about.",
                    "label": 0
                },
                {
                    "sent": "Yeah, this particular query results OK, so we have a query.",
                    "label": 0
                },
                {
                    "sent": "Find the tasks, something it asks a subset of the graph.",
                    "label": 0
                },
                {
                    "sent": "That subject subset, sub graph of the of the RDF graphs.",
                    "label": 0
                },
                {
                    "sent": "So the matching is based on what we call variable bindings or mappings.",
                    "label": 0
                },
                {
                    "sent": "So what is so?",
                    "label": 0
                },
                {
                    "sent": "I don't know whether you have taking the relational database course in your universities.",
                    "label": 0
                },
                {
                    "sent": "Yes, OK, so actually.",
                    "label": 0
                },
                {
                    "sent": "The same thing is talking about a valuation, right?",
                    "label": 0
                },
                {
                    "sent": "So we have a query select query for instance and we say give me all the all the doubles that much this my query so the binding or the mapping is the substitution is nothing but the substitution of query variables with RDF terms.",
                    "label": 1
                },
                {
                    "sent": "What is an RBF Thurman?",
                    "label": 0
                },
                {
                    "sent": "Arbios tagging is a UI.",
                    "label": 0
                },
                {
                    "sent": "Anna literal or blank nodes that we didn't discuss before, so binding automapping is perceived as a partial function from variable.",
                    "label": 0
                },
                {
                    "sent": "Are you still OK when when you give me a triple pattern it's not necessary or a graph pattern or group graph pattern?",
                    "label": 0
                },
                {
                    "sent": "It's not necessary that all variables are much to some to some value in the graph.",
                    "label": 0
                },
                {
                    "sent": "And mapping represents one possible way of variable substitution, and This is why.",
                    "label": 1
                },
                {
                    "sent": "Now solution we have a lot of mappings.",
                    "label": 0
                },
                {
                    "sent": "We have all all possible ways of finding a matching the variables with with the nodes in the graph.",
                    "label": 0
                },
                {
                    "sent": "And also not all variables need to be bound in a mapping and we will, and I guess you can understand why in the in the previous talks we were talking about the distributed and then the other genius nature of what we call the linked data.",
                    "label": 1
                },
                {
                    "sent": "Or all these beautiful Web 2.0 three point zero 6.0 web.",
                    "label": 0
                },
                {
                    "sent": "Well, not all information is available for different reasons, right?",
                    "label": 0
                },
                {
                    "sent": "Either we don't know it.",
                    "label": 0
                },
                {
                    "sent": "We don't want to give it or it's expressed in ways that we don't know how to.",
                    "label": 0
                },
                {
                    "sent": "To ask for them right?",
                    "label": 0
                },
                {
                    "sent": "So we may be asking a query on a schema that we do not really know how it is representative data.",
                    "label": 0
                },
                {
                    "sent": "This is why when I write a triple pattern, let's say, when I write a sparkle query, I might use variables that are not bound to any mappings because I might go.",
                    "label": 0
                },
                {
                    "sent": "I might say you know something in order to find the value for this variable across this link, and this link might not exist in the data that I have, right?",
                    "label": 0
                },
                {
                    "sent": "So here is here is the reason why he's an example of why not all variables can be can be mapped.",
                    "label": 0
                },
                {
                    "sent": "In order to represent the mapping so the solutions my query, we use tabular representations and this is a standard way to represent represent the solutions, especially when you when you read the 1st paper by Marcelo Renison, Claudio Gutierrez and.",
                    "label": 0
                },
                {
                    "sent": "A colleague whose name I don't remember right now, they they use a tabular representation where.",
                    "label": 0
                },
                {
                    "sent": "The variables that the trip is only the columns.",
                    "label": 0
                },
                {
                    "sent": "The name of the of the other attributes in the table are nothing but the variables that are using my Queen right and each row in the table is 1 mapping, so this is the column and this is the mapping and the value one is the value for variable V1.",
                    "label": 0
                },
                {
                    "sent": "No, the solution to Sparkle Query is abugov mappings right there are there are two.",
                    "label": 0
                },
                {
                    "sent": "There are two ways of talking about the results of a sparkle created.",
                    "label": 0
                },
                {
                    "sent": "The first one is the set is set theoretic perception or interpretation of sparkle results, but we are going to talk about here the bugs of markings.",
                    "label": 0
                },
                {
                    "sent": "So for each for each solution that I found, all the solutions that I find or all the assignments or bindings or variables to.",
                    "label": 0
                },
                {
                    "sent": "The values in the RDF graph they constitute my solution.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So more.",
                    "label": 0
                },
                {
                    "sent": "Not so fast.",
                    "label": 0
                },
                {
                    "sent": "So what does matching the match over triple pattern?",
                    "label": 0
                },
                {
                    "sent": "The results are all the triples that match the variables in the triple partial.",
                    "label": 1
                },
                {
                    "sent": "So here is an example.",
                    "label": 0
                },
                {
                    "sent": "I had triple pattern TP one that asks for what it says.",
                    "label": 0
                },
                {
                    "sent": "Give me back all triples in your graph whose predetonation over the predicate is the pedia owl artist, right?",
                    "label": 0
                },
                {
                    "sent": "And here.",
                    "label": 1
                },
                {
                    "sent": "Here are my my RDF triples T 125.",
                    "label": 0
                },
                {
                    "sent": "So let's see which are the triples that match this triple pattern.",
                    "label": 0
                },
                {
                    "sent": "The first 3 all all all three.",
                    "label": 0
                },
                {
                    "sent": "All three, they have their predicates that the name of the predicate is exactly what I'm looking for, right?",
                    "label": 0
                },
                {
                    "sent": "So I'm going to create three mappings.",
                    "label": 0
                },
                {
                    "sent": "Work and artist other variables that I have in my triple butter and for each triple that I find I built around the table.",
                    "label": 0
                },
                {
                    "sent": "Clear now.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "No, in the case.",
                    "label": 0
                },
                {
                    "sent": "How do I match basic graph patterns which are sets of triple patterns?",
                    "label": 1
                },
                {
                    "sent": "OK, basically if pattern matches, if all the triple patterns in the basic graph Pattern match this is this is the essence of conjunction right of the end that we have and all variables must be bound?",
                    "label": 1
                },
                {
                    "sent": "So here is my basic graph pattern.",
                    "label": 0
                },
                {
                    "sent": "You basically have pattern has consists of 2 two triple patterns that says the first one.",
                    "label": 0
                },
                {
                    "sent": "Go find me all the triples.",
                    "label": 0
                },
                {
                    "sent": "In the yard of graph, where the predicate is DPT owl artist and the subject of the triple is dippity help, then go and find me all the triples.",
                    "label": 0
                },
                {
                    "sent": "All the triples whose predicate is DPD, our general right, the kind of music.",
                    "label": 0
                },
                {
                    "sent": "But be careful there because I use the same variable in both triple patterns.",
                    "label": 0
                },
                {
                    "sent": "It means at the end what I'm going to get our all the triples that much not only on those those aspects the.",
                    "label": 0
                },
                {
                    "sent": "Predicate and predicate, predicate and object or predicate here.",
                    "label": 0
                },
                {
                    "sent": "But also that much on the artist value.",
                    "label": 0
                },
                {
                    "sent": "This is the joint right in the relational context.",
                    "label": 0
                },
                {
                    "sent": "This is what we call a John.",
                    "label": 0
                },
                {
                    "sent": "So let's see.",
                    "label": 0
                },
                {
                    "sent": "These are my triples.",
                    "label": 0
                },
                {
                    "sent": "When I evaluate the first triple pattern, this is the triple that I get back, right?",
                    "label": 0
                },
                {
                    "sent": "When I evaluate the second triple button, I get the last triple which is 3 three.",
                    "label": 0
                },
                {
                    "sent": "If I if I see them separately, right, the first one will return only this because I do not.",
                    "label": 0
                },
                {
                    "sent": "The first one will return only this and the second one.",
                    "label": 0
                },
                {
                    "sent": "Yeah, the first one will return this and the second one will return this so it's the end.",
                    "label": 0
                },
                {
                    "sent": "I'm going to get.",
                    "label": 0
                },
                {
                    "sent": "This this mapping can you tell me why I'm not getting anymore?",
                    "label": 0
                },
                {
                    "sent": "Or less for this junction.",
                    "label": 1
                },
                {
                    "sent": "We're starting the second one here, so.",
                    "label": 0
                },
                {
                    "sent": "Should I get only one or two?",
                    "label": 0
                },
                {
                    "sent": "Why?",
                    "label": 0
                },
                {
                    "sent": "Well, actually I should be getting also this one because when sorry no I'm sorry only one because the album on the album matches right?",
                    "label": 0
                },
                {
                    "sent": "I have only one only one triple for the DPT help album right?",
                    "label": 0
                },
                {
                    "sent": "OK",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So let's see.",
                    "label": 0
                },
                {
                    "sent": "It's the exactly the same query.",
                    "label": 0
                },
                {
                    "sent": "Now I have changed a little bit my my my triples.",
                    "label": 0
                },
                {
                    "sent": "I'm actually introducing another one, another one more triple about genre because a bit looser characterizes being pop, pop group or also a rock group.",
                    "label": 0
                },
                {
                    "sent": "So again, the first triple pattern matches only T2 is marked by T2.",
                    "label": 0
                },
                {
                    "sent": "The second triple pattern matches much by default, so I'm creating one mapping for this.",
                    "label": 0
                },
                {
                    "sent": "For these two sets of triples in my in my graph.",
                    "label": 0
                },
                {
                    "sent": "Now the thing also is that I have another match for my second triple pattern, which is this one, right?",
                    "label": 0
                },
                {
                    "sent": "So I'm creating yet another mapping, so these are so these are my solutions.",
                    "label": 0
                },
                {
                    "sent": "These are the solutions to my my credit.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, no, except the group graph patterns I have also filters.",
                    "label": 0
                },
                {
                    "sent": "We have also filters which are nothing but nothing but constraints on your graph patterns.",
                    "label": 1
                },
                {
                    "sent": "Of course, things that I can write in order to filter out solutions, so these constraints involve arithmetic operator operations like addition, multiplication and division.",
                    "label": 0
                },
                {
                    "sent": "Are there specific functions, comparisons, and logical connectives like negation, disjunction, conjunction and in order to express those?",
                    "label": 1
                },
                {
                    "sent": "I'm using the keyword filter in the sparkle query, so here, here are my examples of filters, so if I want to.",
                    "label": 0
                },
                {
                    "sent": "Name you know something the variable the variable for the value for variable name is a literal.",
                    "label": 0
                },
                {
                    "sent": "This is how I'm going to write if I want to say that the name, the value of the name is The Beatles.",
                    "label": 0
                },
                {
                    "sent": "This is how I'm going.",
                    "label": 0
                },
                {
                    "sent": "One way of writing it.",
                    "label": 0
                },
                {
                    "sent": "If I want to say that, well, I might have capital and lowercase and uppercase letters, then I'm going to use the disjunction in order to say go and get me all answers that satisfy.",
                    "label": 0
                },
                {
                    "sent": "One of those conditions.",
                    "label": 0
                },
                {
                    "sent": "Then I can write regular expressions, right?",
                    "label": 0
                },
                {
                    "sent": "So go ahead and get me a return all the values for name that they contain some someplace in the string.",
                    "label": 0
                },
                {
                    "sent": "They contain the substring bit, and here is a filter and numerical one that says the value for the variable runtime should be higher than 1720 and lower than 12,000.",
                    "label": 0
                },
                {
                    "sent": "So the matching the idea of the matching is as I said before, is.",
                    "label": 0
                },
                {
                    "sent": "Once you have the group graph pattern, compute the solutions and then you can filter out those that do not satisfy the constraints.",
                    "label": 1
                },
                {
                    "sent": "OK, so let's.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Go and see some examples.",
                    "label": 0
                },
                {
                    "sent": "No, OK, so The thing is also that a group graph pattern have multiple feet filters, right?",
                    "label": 1
                },
                {
                    "sent": "So again, these are interpreted as conjunction features, so I can just put them in one, write them as one filter.",
                    "label": 0
                },
                {
                    "sent": "So here for instance I have.",
                    "label": 0
                },
                {
                    "sent": "Two filters filter, one filter that checks the value of variable name and another filter that checks imposes constraints on the on the variable runtime and then I can write them together by the logical end.",
                    "label": 0
                },
                {
                    "sent": "Just writing writing it here.",
                    "label": 0
                },
                {
                    "sent": "So I just shorten my expressions like this.",
                    "label": 0
                },
                {
                    "sent": "One possible.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "So now the interesting thing is that sometimes in filters especially equality filters, you can substitute the value and put it in the triple pattern itself directly.",
                    "label": 0
                },
                {
                    "sent": "So for here, here for instance, I have one triple pattern that says one triple pattern and here I have a filter that restricts the value of the variable name to be the business.",
                    "label": 0
                },
                {
                    "sent": "But I can take this.",
                    "label": 0
                },
                {
                    "sent": "I can take this value and put it here directly in the triple pattern, right?",
                    "label": 0
                },
                {
                    "sent": "So then I simplify simplify.",
                    "label": 0
                },
                {
                    "sent": "The food is more, but this is only the case of equality.",
                    "label": 0
                },
                {
                    "sent": "Otherwise it doesn't work.",
                    "label": 0
                },
                {
                    "sent": "Regarding this replacement, if the If The Beatles has actually kind of tag language, is it also included as a yes yeah so if not I think so.",
                    "label": 0
                },
                {
                    "sent": "Yes, I think so.",
                    "label": 1
                },
                {
                    "sent": "I think it is included as a source.",
                    "label": 0
                },
                {
                    "sent": "Ian Doug, can I put it in the no OK?",
                    "label": 0
                },
                {
                    "sent": "Attack and you want to do that match.",
                    "label": 0
                },
                {
                    "sent": "There's a built-in called STR, which takes just screen part of that.",
                    "label": 0
                },
                {
                    "sent": "But even if only be fine, you do not return with, no.",
                    "label": 0
                },
                {
                    "sent": "It's that that will not match the people.",
                    "label": 0
                },
                {
                    "sent": "OK, talk English.",
                    "label": 0
                },
                {
                    "sent": "So then you have to write it like this.",
                    "label": 0
                },
                {
                    "sent": "OK, thanks, STL brackets may also the case with the site, the text contact.",
                    "label": 0
                },
                {
                    "sent": "It's also the same so the WhatsApp.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Same with this.",
                    "label": 0
                },
                {
                    "sent": "It's too any regression is very costly.",
                    "label": 0
                },
                {
                    "sent": "It's much cheaper to use STR to split it into the string on the tag.",
                    "label": 0
                },
                {
                    "sent": "OK, yeah.",
                    "label": 0
                },
                {
                    "sent": "The only way.",
                    "label": 0
                },
                {
                    "sent": "Is that the only way?",
                    "label": 0
                },
                {
                    "sent": "I know there's something you.",
                    "label": 0
                },
                {
                    "sent": "There's also the lung.",
                    "label": 0
                },
                {
                    "sent": "This one.",
                    "label": 0
                },
                {
                    "sent": "You can check the long one.",
                    "label": 0
                },
                {
                    "sent": "So yeah, there are different ways but.",
                    "label": 0
                },
                {
                    "sent": "Lanxi packages language pack and exploitation target.",
                    "label": 0
                },
                {
                    "sent": "It's a data type tag, but there is some first class model for the two parts now, but I can't remember how to.",
                    "label": 0
                },
                {
                    "sent": "I think also that it is important when I'm when you write a query to a little bit to understand how the engine below works.",
                    "label": 0
                },
                {
                    "sent": "If you if you want to your query, I mean the purpose of querying is not only to get the data back, I mean there are applications where it is crucial to get them back very quickly, and if you cannot do that then there is.",
                    "label": 0
                },
                {
                    "sent": "A big problem, so sometimes it's better.",
                    "label": 0
                },
                {
                    "sent": "I don't know, it depends.",
                    "label": 0
                },
                {
                    "sent": "There are some query language so sorry there are some engines of support.",
                    "label": 0
                },
                {
                    "sent": "The tags are some others that do not.",
                    "label": 0
                },
                {
                    "sent": "So you have.",
                    "label": 0
                },
                {
                    "sent": "There is also always a tradeoff between expressiveness of the language and what the the back end does it.",
                    "label": 0
                },
                {
                    "sent": "Even if you have support for the features, some of them might be optimized better than yes.",
                    "label": 0
                },
                {
                    "sent": "Yeah yeah, you really find this with subqueries.",
                    "label": 0
                },
                {
                    "sent": "With some Angels the order that you nest your subqueries makes a huge difference for execution time exactly.",
                    "label": 0
                },
                {
                    "sent": "So why live there?",
                    "label": 0
                },
                {
                    "sent": "We're writing a declarative language natural plaque.",
                    "label": 0
                },
                {
                    "sent": "You tend to massage them for speed, but this is.",
                    "label": 0
                },
                {
                    "sent": "This is also very interesting also for relational databases you write 1 query, you have one query and then you you give an equivalent version of the query rewriting of the query and all of a sudden you know the query plan is a Cartesian product.",
                    "label": 0
                },
                {
                    "sent": "This is why you know it's a join.",
                    "label": 0
                },
                {
                    "sent": "Why is it a Cartesian product?",
                    "label": 0
                },
                {
                    "sent": "It's because the planner or the optimizer you know some place.",
                    "label": 0
                },
                {
                    "sent": "This is what I meant with relation.",
                    "label": 0
                },
                {
                    "sent": "Yeah the next step then is often to run a pseudo query called explains that.",
                    "label": 0
                },
                {
                    "sent": "You see the fund I send up your database vendor and say why do you do this?",
                    "label": 0
                },
                {
                    "sent": "This is crazy and the worst part is when they say I don't know.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So for instance here look.",
                    "label": 0
                },
                {
                    "sent": "Those two queries are equivalent.",
                    "label": 0
                },
                {
                    "sent": "They're going to return exactly the same set of answers, but there are query engines.",
                    "label": 0
                },
                {
                    "sent": "If you give them not query, but you know, like state of the art prototypes do not understand this and they understand this one, so they cannot rewrite or even they are not going to rewrite to give a good query plan when you give them this query, but they're going to give an excellent query plan when you give this, But this is.",
                    "label": 0
                },
                {
                    "sent": "Things that people.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Over the years?",
                    "label": 0
                },
                {
                    "sent": "OK, so here is.",
                    "label": 0
                },
                {
                    "sent": "Here are a list of filter expressions that we have.",
                    "label": 0
                },
                {
                    "sent": "I'm not going to go into those.",
                    "label": 0
                },
                {
                    "sent": "Most of them I don't know.",
                    "label": 0
                },
                {
                    "sent": "I just when I need them I go ahead and read about them.",
                    "label": 0
                },
                {
                    "sent": "So there are functional forms there, for instance not existing exists are very important.",
                    "label": 0
                },
                {
                    "sent": "Important functions that you can use this partial in nothing also because they allow you to test whether a solution is in a set of solutions that you would like them to be.",
                    "label": 0
                },
                {
                    "sent": "There are function of RDF terms, like.",
                    "label": 0
                },
                {
                    "sent": "For instance is literal that we saw before or string and land B node is checks whether nodes is blank.",
                    "label": 0
                },
                {
                    "sent": "Note OK, there's some unknown node there.",
                    "label": 0
                },
                {
                    "sent": "Also functions on pneumatics like around floor.",
                    "label": 0
                },
                {
                    "sent": "Weather",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "There are functions on strings.",
                    "label": 0
                },
                {
                    "sent": "These are very important because most of our processing, some strings and functions on dates and times that are becoming more and more useful now that the temporal aspects of data is incorporated in the data set.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so let's see how the matching with string filter goes, and so here is my my query.",
                    "label": 0
                },
                {
                    "sent": "OK so here is my here.",
                    "label": 0
                },
                {
                    "sent": "My set of triples and the mappings.",
                    "label": 0
                },
                {
                    "sent": "Then the columns of the attribute names of my table mapping table is album are all the variables that I see in my graph patterns, yes.",
                    "label": 0
                },
                {
                    "sent": "That's part of this, so it's gonna be so you wouldn't really change to add those two queries inverted, so approaches assume at first artist drops.",
                    "label": 0
                },
                {
                    "sent": "It depends independence this is.",
                    "label": 0
                },
                {
                    "sent": "Hi, it depends on the operations.",
                    "label": 0
                },
                {
                    "sent": "Now that I have conjunction conjunction is binary operator is commutative some fine.",
                    "label": 0
                },
                {
                    "sent": "So you can do as you like.",
                    "label": 0
                },
                {
                    "sent": "But there are other operators like union or optional but had not commutative so we have to be extremely extremely careful when how we write the queries.",
                    "label": 0
                },
                {
                    "sent": "Because depending on how you write it you might get this completely different answers right?",
                    "label": 0
                },
                {
                    "sent": "So yes I can write first.",
                    "label": 0
                },
                {
                    "sent": "The second triple pattern, then the filter and then the sorry the the.",
                    "label": 0
                },
                {
                    "sent": "Then the first triple button and then the filter.",
                    "label": 0
                },
                {
                    "sent": "So here are my my triples.",
                    "label": 0
                },
                {
                    "sent": "This is my mapping table and the first one is going to return.",
                    "label": 0
                },
                {
                    "sent": "OK the DPT I helped in the artist is The Beatles and the name is the business.",
                    "label": 0
                },
                {
                    "sent": "If you interpret this if you just take the triple patterns and forget about the name, these are the solutions that I'm going to get right.",
                    "label": 0
                },
                {
                    "sent": "So I have my album.",
                    "label": 0
                },
                {
                    "sent": "I have the information about the name and then here.",
                    "label": 0
                },
                {
                    "sent": "Here are the steps that I get when I graph patterns right my right or wrong?",
                    "label": 0
                },
                {
                    "sent": "Because dumb ways I still have.",
                    "label": 0
                },
                {
                    "sent": "I have this one that the rain dogs that the album Rainbow Rain Dogs whose artist is Tom Waits and then I also have Tom Waits with problem.",
                    "label": 0
                },
                {
                    "sent": "Tom Waits right yeah so I get this solution but when I go and evaluate the filter in the filter I see that the last one is advisor valid.",
                    "label": 0
                },
                {
                    "sent": "So I do my matching and then I remove the stuff right, remove whatever it doesn't.",
                    "label": 0
                },
                {
                    "sent": "It's just doing it step by step, yeah?",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so in the case of arithmetic filters and this is my my query.",
                    "label": 0
                },
                {
                    "sent": "Now I have just one triple pattern and tasks for the albums and the runtimes, but the filter actually restricts the runtime for a specific set of values above 1720 and below 1200.",
                    "label": 0
                },
                {
                    "sent": "So if I get my my triples here then these are the results that I'm going to get right.",
                    "label": 0
                },
                {
                    "sent": "If I evaluate my triple pattern, I'm going to get all the results back, but when I evaluate the filter expression that I'm going to remove the last one.",
                    "label": 0
                },
                {
                    "sent": "OK, sorry.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, so.",
                    "label": 0
                },
                {
                    "sent": "Up until now, conjunction the logical end or join in from database is the second form of graph patterns are union graph patterns.",
                    "label": 0
                },
                {
                    "sent": "What do union graph patterns do?",
                    "label": 1
                },
                {
                    "sent": "They allow the form the disjunction of of graph patterns.",
                    "label": 1
                },
                {
                    "sent": "Why do we need that?",
                    "label": 0
                },
                {
                    "sent": "Cause information is expressed in different ways.",
                    "label": 1
                },
                {
                    "sent": "For instance variable saying that I can get information about music from Musicbrainz.",
                    "label": 0
                },
                {
                    "sent": "There is also a very nice extra tonight.",
                    "label": 0
                },
                {
                    "sent": "I don't remember the name right now.",
                    "label": 0
                },
                {
                    "sent": "Very nice link data.",
                    "label": 0
                },
                {
                    "sent": "Dataset brilliant, but it uses a different scheme out different names for the pulse then Musicbrainz or I even get my own.",
                    "label": 0
                },
                {
                    "sent": "You know whatever RDF data with completely different name, so there are different ways of expressing the data, so This is why I need Union for I'm able to express alternative patterns.",
                    "label": 0
                },
                {
                    "sent": "How do I write that in this particular query by using the Union keyword?",
                    "label": 0
                },
                {
                    "sent": "So here I have.",
                    "label": 0
                },
                {
                    "sent": "The union graph pattern that says get me all the triples that much.",
                    "label": 0
                },
                {
                    "sent": "This triple pattern and the triples that match this not end in the sense of you know this.",
                    "label": 0
                },
                {
                    "sent": "And this is just this or this right?",
                    "label": 0
                },
                {
                    "sent": "So the matching is about more than one triple patterns match.",
                    "label": 1
                },
                {
                    "sent": "And if one if more than one tricking patterns much, then all possibles or possible solutions are in turn and.",
                    "label": 0
                },
                {
                    "sent": "And patterns are much independent.",
                    "label": 0
                },
                {
                    "sent": "Leah results are combined using set set theoretic union.",
                    "label": 1
                },
                {
                    "sent": "Well, some sort of set theoretic union because here is.",
                    "label": 0
                },
                {
                    "sent": "I can actually Union triple actually Union the results of the mappings among the set of mappings, even though even if they have different different attributes, right?",
                    "label": 0
                },
                {
                    "sent": "In that case, in this case we have the two triple bundles.",
                    "label": 0
                },
                {
                    "sent": "They share the same variable so that the columns the column names are the same, but there are cases where they are now.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "But we're going to see to see like their own.",
                    "label": 0
                },
                {
                    "sent": "So here is my union I get.",
                    "label": 0
                },
                {
                    "sent": "I want all the artists to get back the artist whose kind of music that are playing is all I have.",
                    "label": 0
                },
                {
                    "sent": "Pop music or rock music, right?",
                    "label": 0
                },
                {
                    "sent": "So here are my triple patterns and again about The Beatles and Tom Waits.",
                    "label": 0
                },
                {
                    "sent": "The first one matches the second triple pattern, the first one the first one, the T One matches the first triple pattern, so I get one mapping the second one matches the second triple pattern, so I get the second mapping and the 4th one mapping matches the.",
                    "label": 0
                },
                {
                    "sent": "Sorry, the second triple pattern, so I get rock music there.",
                    "label": 0
                }
            ]
        },
        "clip_31": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so.",
                    "label": 0
                },
                {
                    "sent": "No, you see that I'm using the same variables for for my Union graph pattern.",
                    "label": 0
                },
                {
                    "sent": "So again here I have.",
                    "label": 0
                },
                {
                    "sent": "I have my triple bottom and I have my triples then I have my my mappings right.",
                    "label": 0
                },
                {
                    "sent": "The value of the columns for my solutions for my mapping table are the variable names.",
                    "label": 0
                },
                {
                    "sent": "So let's see the 1st first triple pattern.",
                    "label": 0
                },
                {
                    "sent": "So here it is.",
                    "label": 0
                },
                {
                    "sent": "The album on the album gets the bitters.",
                    "label": 0
                },
                {
                    "sent": "Let me give you all.",
                    "label": 0
                },
                {
                    "sent": "OK, how do I get the first triple pattern?",
                    "label": 0
                },
                {
                    "sent": "The first triple pattern.",
                    "label": 0
                },
                {
                    "sent": "So the first mapping I get it by evaluating the first triple pattern on my data set, right or wrong.",
                    "label": 0
                },
                {
                    "sent": "M1 I get it from T3.",
                    "label": 0
                },
                {
                    "sent": "This is OK. And so I get it from which, which one?",
                    "label": 0
                },
                {
                    "sent": "Herbal.",
                    "label": 0
                },
                {
                    "sent": "T1T1 and then the the third one.",
                    "label": 0
                },
                {
                    "sent": "I get it from this one right?",
                    "label": 0
                },
                {
                    "sent": "You can see here that even though I know you see that here I'm just leaving blanks right?",
                    "label": 0
                },
                {
                    "sent": "I'm not there.",
                    "label": 0
                },
                {
                    "sent": "Are there are variables that do not do not much when I evaluate the Union?",
                    "label": 0
                },
                {
                    "sent": "I'm so sorry.",
                    "label": 0
                },
                {
                    "sent": "This is a thing.",
                    "label": 0
                },
                {
                    "sent": "Yes, the the artist is the same here, but here I'm not concatenating them like I say giving back all mappings either.",
                    "label": 0
                },
                {
                    "sent": "Sorry, give me back all solutions that much.",
                    "label": 0
                },
                {
                    "sent": "Either the first one or the second one in.",
                    "label": 0
                },
                {
                    "sent": "If they match both then I just put together the values in one variable.",
                    "label": 0
                },
                {
                    "sent": "Yes yeah if you put the dirt instead of union then you should only have the right one and it's actually if I put an adult instead of Union then I'm not going to get anything for Tom Waits because it doesn't have.",
                    "label": 0
                },
                {
                    "sent": "An album in that in various datasets, right?",
                    "label": 0
                },
                {
                    "sent": "This is the conjunction.",
                    "label": 0
                },
                {
                    "sent": "It would be nice to have also a board here next time too, right?",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "The interpretation if you if you take the algebraic expression, the result of a union is if I have a triple pattern T one, sorry, a triple 31.",
                    "label": 0
                },
                {
                    "sent": "Union triple pattern T2, then the result of the evaluation is are all the mappings M that are contained either in the valuation of the first or the valuation of the 2nd, and if they are contained in both and I just put them in my solution.",
                    "label": 0
                },
                {
                    "sent": "That's what we call set theoretic union.",
                    "label": 0
                },
                {
                    "sent": "Just put the mappings together.",
                    "label": 0
                },
                {
                    "sent": "So sorry if you never returns because The Beatles is the same, but it will store this temporal entry because if I wrote it in different, sorry, The Beatles here is actually the same, right?",
                    "label": 0
                },
                {
                    "sent": "Yes, yeah, yeah, because you differently then you put it as a separate entry.",
                    "label": 0
                },
                {
                    "sent": "Yes, because it's actually this this entry.",
                    "label": 0
                },
                {
                    "sent": "This one comes from the evaluation of the second different pattern, right?",
                    "label": 0
                },
                {
                    "sent": "And this one from the valuation of the second triple butter.",
                    "label": 0
                },
                {
                    "sent": "No, the yeah.",
                    "label": 0
                },
                {
                    "sent": "The second triple pattern, but I don't have.",
                    "label": 0
                },
                {
                    "sent": "A result that comes for Tom Waits for the evaluation of the first driven path, right?",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "Repeat the first triple pattern two times using the Union.",
                    "label": 0
                },
                {
                    "sent": "Do I have two times the results?",
                    "label": 0
                },
                {
                    "sent": "Well, I think it's one time only one should be eliminated.",
                    "label": 0
                },
                {
                    "sent": "No, because then you need two occurrences you need to at least two triples to match the triple pattern, like I need twice too much is I'm not.",
                    "label": 0
                },
                {
                    "sent": "I'm not sure about this.",
                    "label": 0
                },
                {
                    "sent": "I can, I can look it up.",
                    "label": 0
                },
                {
                    "sent": "You mean if I have album DBPR artist Dot album?",
                    "label": 0
                },
                {
                    "sent": "Not the same thing.",
                    "label": 0
                },
                {
                    "sent": "OK, in the in the bug semantics you will get all solutions in the set semantics they will get only one.",
                    "label": 0
                },
                {
                    "sent": "OK, in the second set semantics of sparkle you will get only one solution in the bug semantics.",
                    "label": 0
                },
                {
                    "sent": "You will get both because it's it's a multi set.",
                    "label": 0
                },
                {
                    "sent": "Fuck baby.",
                    "label": 0
                },
                {
                    "sent": "No, it's actually bug based, yes, but the the semantics that they have been attributed to sparkle are more.",
                    "label": 0
                },
                {
                    "sent": "The basic ones are from this semantics and complexity of sparkle in 2008.",
                    "label": 0
                },
                {
                    "sent": "I think the 1st paper not clarified the semantics.",
                    "label": 0
                },
                {
                    "sent": "So there are two specifications now.",
                    "label": 0
                },
                {
                    "sent": "The standard level, this one specification.",
                    "label": 0
                },
                {
                    "sent": "But if you see there are two, there are actually there are bugs semantics for the results.",
                    "label": 0
                },
                {
                    "sent": "This is why you have solution modifyers that says give eliminate me the duplicates.",
                    "label": 0
                },
                {
                    "sent": "But exactly, but The thing is that if you if I give a query to an engine then it will get get me give me back all results even if there are duplicates.",
                    "label": 0
                },
                {
                    "sent": "That's why Sparkle has put an additional keyword that's called district as you have in SQL as well.",
                    "label": 0
                },
                {
                    "sent": "That actually will eliminate the duplicates and will turn unique results.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_32": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Now the interesting part about the Union graph patterns is that I can use the user variables in the alternative or the triple patterns that the Union graph pattern consists of is depends on what we want to compute, so get this.",
                    "label": 1
                },
                {
                    "sent": "OK so here is.",
                    "label": 0
                },
                {
                    "sent": "A union graph pattern.",
                    "label": 0
                },
                {
                    "sent": "And ideally this is talks about the same things as the one before, but here I'm using a different different variable for artist, right?",
                    "label": 0
                },
                {
                    "sent": "So what happens here is that I completely separate.",
                    "label": 0
                },
                {
                    "sent": "The things I do not want to merge anything together, I just say go there.",
                    "label": 0
                },
                {
                    "sent": "Bring me what you have about this and then go some other place and get me what you want about this one.",
                    "label": 0
                },
                {
                    "sent": "So here I have.",
                    "label": 0
                },
                {
                    "sent": "This is The Beatles and this is The Beatles with pop music etc.",
                    "label": 0
                },
                {
                    "sent": "So I don't I just I have four variables instead of three.",
                    "label": 0
                },
                {
                    "sent": "I do not do any merge.",
                    "label": 0
                }
            ]
        },
        "clip_33": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So the Union is Union is a binary operator.",
                    "label": 1
                },
                {
                    "sent": "It is a commutative one.",
                    "label": 0
                },
                {
                    "sent": "OK, we know that it's left associated.",
                    "label": 0
                },
                {
                    "sent": "In the sense that then it's left associated with access that everything is applied on the right part has higher precedence of conjunction, but they join right first to the Union and then I do the joint.",
                    "label": 1
                },
                {
                    "sent": "So and then I have.",
                    "label": 0
                },
                {
                    "sent": "It's associated with the sense that if I want it associated, you know I don't need to explain more.",
                    "label": 0
                }
            ]
        },
        "clip_34": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, so now optional graph patterns optional is very important in the sense that gives us and give us the possibility to retrieve to specify things that we're not really sure about.",
                    "label": 0
                },
                {
                    "sent": "You know, get me back things and get me back some others, but even they do not exist.",
                    "label": 0
                },
                {
                    "sent": "I don't care.",
                    "label": 0
                },
                {
                    "sent": "This is what the optional is about, so.",
                    "label": 0
                },
                {
                    "sent": "Allows the specification of optional parts of the query.",
                    "label": 1
                },
                {
                    "sent": "Why?",
                    "label": 0
                },
                {
                    "sent": "Because I cannot assume that the my graphs that contain a regular all competing for information at all times, right?",
                    "label": 0
                },
                {
                    "sent": "So how do I express this by using the optional keywords?",
                    "label": 0
                },
                {
                    "sent": "So I say GPU.",
                    "label": 0
                },
                {
                    "sent": "An optional GP2 says.",
                    "label": 0
                },
                {
                    "sent": "Evaluate this, evaluate that, but if I do not get any bindings from this, I don't care, right?",
                    "label": 0
                },
                {
                    "sent": "OK, so for instance.",
                    "label": 0
                },
                {
                    "sent": "How do I read this is get me all get me the albums and their artists through this path and optionally get me also the images for the albums if they have find.",
                    "label": 0
                },
                {
                    "sent": "If they don't, I don't care.",
                    "label": 0
                },
                {
                    "sent": "So here it is.",
                    "label": 1
                },
                {
                    "sent": "If the optional part for the matching is not matched, then no solutions are produced.",
                    "label": 0
                },
                {
                    "sent": "But the solutions that I've already computed by the other parts are not eliminated.",
                    "label": 0
                },
                {
                    "sent": "If I had to join, if there would be all eliminating or eliminated.",
                    "label": 0
                }
            ]
        },
        "clip_35": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "But the optional part is interpreted as a conjunction.",
                    "label": 0
                },
                {
                    "sent": "No, it's a it's left out outer join.",
                    "label": 0
                },
                {
                    "sent": "Actually, in the relational database.",
                    "label": 0
                },
                {
                    "sent": "In the in algebra relation, algebra left outer joins.",
                    "label": 0
                },
                {
                    "sent": "Is gay?",
                    "label": 0
                },
                {
                    "sent": "How can I say that is get me whatever you have?",
                    "label": 0
                },
                {
                    "sent": "And try to find me trying to find the things that I specify here.",
                    "label": 0
                },
                {
                    "sent": "If you don't then I don't care.",
                    "label": 0
                },
                {
                    "sent": "Leave them out.",
                    "label": 0
                },
                {
                    "sent": "If they do bring them also as well.",
                    "label": 0
                },
                {
                    "sent": "Yeah, this is how it's interpreted.",
                    "label": 0
                },
                {
                    "sent": "Or did I get your question?",
                    "label": 0
                },
                {
                    "sent": "Here, yeah, examples.",
                    "label": 0
                }
            ]
        },
        "clip_36": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, that's OK.",
                    "label": 0
                },
                {
                    "sent": "So I also started 10 minutes later.",
                    "label": 0
                },
                {
                    "sent": "15 minutes, OK?",
                    "label": 0
                },
                {
                    "sent": "So here is my my optional graph button.",
                    "label": 0
                },
                {
                    "sent": "As I you know I presented before and here are my triples.",
                    "label": 0
                },
                {
                    "sent": "Again, I would say give me back all albums with artists for sure.",
                    "label": 0
                },
                {
                    "sent": "I want albums and their artist.",
                    "label": 0
                },
                {
                    "sent": "I cannot.",
                    "label": 0
                },
                {
                    "sent": "I definitely need their artists and optionally get me back the images for the albums.",
                    "label": 0
                },
                {
                    "sent": "So here I get again my three variables.",
                    "label": 0
                },
                {
                    "sent": "For my mappings I get the 1st.",
                    "label": 0
                },
                {
                    "sent": "The first mapping is this right?",
                    "label": 0
                },
                {
                    "sent": "Do I have?",
                    "label": 0
                },
                {
                    "sent": "Do I have for help?",
                    "label": 0
                },
                {
                    "sent": "Do I have an image for the album?",
                    "label": 0
                },
                {
                    "sent": "Help?",
                    "label": 0
                },
                {
                    "sent": "OK, but here.",
                    "label": 0
                },
                {
                    "sent": "But I have any much for rain dogs.",
                    "label": 0
                },
                {
                    "sent": "I have both Tom Waits, the artist and image, so I'm fine.",
                    "label": 0
                },
                {
                    "sent": "OK if I didn't have Tom Waits answering the artist what would be?",
                    "label": 0
                },
                {
                    "sent": "What would be the case?",
                    "label": 0
                },
                {
                    "sent": "No results whatever comes before is definitely yes.",
                    "label": 0
                },
                {
                    "sent": "More than one optional pattern that's interesting.",
                    "label": 0
                }
            ]
        },
        "clip_37": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, it's interesting in the sense that we don't know.",
                    "label": 0
                },
                {
                    "sent": "It's always you start from the rightmost and then you go forward.",
                    "label": 0
                },
                {
                    "sent": "Yeah, this is what left associative is right.",
                    "label": 0
                },
                {
                    "sent": "But be careful now when you are going to write your queries.",
                    "label": 0
                },
                {
                    "sent": "Be sure because precedents because you have union you have optional and then you have joined precedents.",
                    "label": 0
                },
                {
                    "sent": "An associativity is is very important on how you formulate your query so it's better when you have in your mind the query I want to union those things and then join those things just to write directly bracket it.",
                    "label": 0
                },
                {
                    "sent": "It's like putting parentheses.",
                    "label": 0
                },
                {
                    "sent": "Right in in numeric expressions just put parentheses.",
                    "label": 0
                },
                {
                    "sent": "It's much easier than trying to.",
                    "label": 0
                },
                {
                    "sent": "Oh yes, multiplication and whatever division, etc.",
                    "label": 0
                },
                {
                    "sent": "Just write brackets.",
                    "label": 0
                },
                {
                    "sent": "OK, the optional is a binary operator and it is left associative.",
                    "label": 1
                },
                {
                    "sent": "So imagine that I have three group graph patterns GP, one optional GP2 optional GP 3.",
                    "label": 0
                },
                {
                    "sent": "Then what will happen is that optional will be applied on the last one and the part first 1st I'm going to.",
                    "label": 0
                },
                {
                    "sent": "I'm going to evaluate GP one optional GP2 and then I'm going on this.",
                    "label": 0
                },
                {
                    "sent": "I'm going to apply the second option.",
                    "label": 0
                },
                {
                    "sent": "I know it's not.",
                    "label": 0
                },
                {
                    "sent": "So you see, since it's left associated, these two are not equivalent.",
                    "label": 0
                },
                {
                    "sent": "Once I have this then it's not equivalent to this one because you are optional example.",
                    "label": 0
                },
                {
                    "sent": "I'd on GP2 only, not on this.",
                    "label": 0
                },
                {
                    "sent": "The result of GP.",
                    "label": 0
                },
                {
                    "sent": "One optional GP two, it's definitely not commutative, so be careful when you write your code.",
                    "label": 0
                }
            ]
        },
        "clip_38": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "This.",
                    "label": 0
                },
                {
                    "sent": "So now I have also.",
                    "label": 0
                },
                {
                    "sent": "Option lots and filter, so I'm going to go very quickly here.",
                    "label": 0
                },
                {
                    "sent": "Look at here.",
                    "label": 0
                },
                {
                    "sent": "I have one optional graph pattern where I have my what I need are the albums and there are artists and then I have an optional on the runtime and then I have a filter associated with the runtime, so the optional pattern does not generate any bindings.",
                    "label": 1
                },
                {
                    "sent": "I do not get any results back when two things occur when either either things OK, one.",
                    "label": 1
                },
                {
                    "sent": "There is no runtime property.",
                    "label": 0
                },
                {
                    "sent": "Album right, this is the optional part, or if there is a runtime property, the value the constraint is not satisfied.",
                    "label": 1
                },
                {
                    "sent": "So it means that the value of runtime is below 1720.",
                    "label": 0
                },
                {
                    "sent": "Is it OK?",
                    "label": 0
                },
                {
                    "sent": "Yes no, maybe OK.",
                    "label": 0
                }
            ]
        },
        "clip_39": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So in the case of multiple options, here is your question.",
                    "label": 0
                },
                {
                    "sent": "So here I say give me back the albums and their artists and optionally the runtime and optionally the image, right?",
                    "label": 0
                },
                {
                    "sent": "So what happens is I'm going to get there on time for DP pedia.",
                    "label": 0
                },
                {
                    "sent": "For help the album?",
                    "label": 0
                },
                {
                    "sent": "Help I'm going to get back The Beatles and I'm going to get back the runtime.",
                    "label": 0
                },
                {
                    "sent": "But because all this information exists but I don't have the information on image.",
                    "label": 0
                },
                {
                    "sent": "But I'm not going to get it back.",
                    "label": 0
                },
                {
                    "sent": "I'm fine.",
                    "label": 0
                },
                {
                    "sent": "On the other hand regarding raindrops, Tom Waits.",
                    "label": 0
                },
                {
                    "sent": "I have all information.",
                    "label": 0
                },
                {
                    "sent": "Except runtime, so I'm still going to get back a solution for this, OK?",
                    "label": 0
                }
            ]
        },
        "clip_40": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, so if I if I need to combine union and optional, so let's say so.",
                    "label": 0
                },
                {
                    "sent": "I have this query.",
                    "label": 0
                },
                {
                    "sent": "I have a union of two patterns with an optional.",
                    "label": 0
                },
                {
                    "sent": "So the question is what is what does this how?",
                    "label": 0
                },
                {
                    "sent": "I'm going to interpret this query is I'm going to.",
                    "label": 0
                },
                {
                    "sent": "I'm going to interpret it as a union of two patterns with an optional condition or a union of two patterns where the second one has an optional condition.",
                    "label": 1
                },
                {
                    "sent": "But the solution here is the first one I'm going to interpret it.",
                    "label": 0
                },
                {
                    "sent": "As a union of two buttons, I'm going to find the Union because it has higher precedence on junction and then I'm going to put the option along the Union, right?",
                    "label": 0
                },
                {
                    "sent": "Because I I read it like this optional on this then and then I have a big one but contains conjunction and union.",
                    "label": 0
                },
                {
                    "sent": "So I'm going to put together Union and then I'm going to put outside conjunction.",
                    "label": 0
                }
            ]
        },
        "clip_41": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Sorry, I know.",
                    "label": 0
                },
                {
                    "sent": "Sorry.",
                    "label": 0
                },
                {
                    "sent": "The option not no, no, it's not going to be syntactically correct.",
                    "label": 0
                },
                {
                    "sent": "When you write things like queries like this if you write them correctly, there are two cases.",
                    "label": 0
                },
                {
                    "sent": "Either you write them syntactic, the connecting syntax, but they give you different answers from what you are expecting.",
                    "label": 0
                },
                {
                    "sent": "So so so the first one.",
                    "label": 0
                },
                {
                    "sent": "But then you don't know if it's syntactically correct.",
                    "label": 0
                },
                {
                    "sent": "You do not know whether it's semantically correct.",
                    "label": 0
                },
                {
                    "sent": "OK, so.",
                    "label": 0
                },
                {
                    "sent": "The general loose when you combine those is that optional refers exactly to one group groups pattern to the right.",
                    "label": 1
                },
                {
                    "sent": "Optional and union refer to alter their expressions at the left since they are left associative and union and optional have the same precedents and union and Union has higher precedence than conjunction but optional has smaller percentage in conjunction.",
                    "label": 1
                },
                {
                    "sent": "So right in brackets, right brackets, bracket expressions.",
                    "label": 0
                },
                {
                    "sent": "It's much easier question but I may be wrong but.",
                    "label": 0
                },
                {
                    "sent": "And logic isn't living contradiction.",
                    "label": 0
                },
                {
                    "sent": "Yes, yes yes, but but OK, but Sparkle was not written by let's say by magicians or database people.",
                    "label": 0
                },
                {
                    "sent": "It was written by people who actually had data before them, like RDF data, and they wanted to query them so they figured out sparkle right they constructed sparkle which is a beauty.",
                    "label": 0
                },
                {
                    "sent": "It's a night.",
                    "label": 0
                },
                {
                    "sent": "It's a nice language, but then the semantics were not very clear.",
                    "label": 0
                },
                {
                    "sent": "So then you had the people.",
                    "label": 0
                },
                {
                    "sent": "You know database people, theoreticians that came and they gave the semantics.",
                    "label": 0
                },
                {
                    "sent": "Yes, I know, but it's not written in that perfect question is why this versatility is better suited for.",
                    "label": 0
                },
                {
                    "sent": "I don't know.",
                    "label": 0
                },
                {
                    "sent": "I don't know.",
                    "label": 0
                },
                {
                    "sent": "Seriously, I do not know.",
                    "label": 0
                },
                {
                    "sent": "I don't know.",
                    "label": 0
                },
                {
                    "sent": "Seriously, I don't know.",
                    "label": 0
                },
                {
                    "sent": "I would have liked to, but I don't OK.",
                    "label": 0
                },
                {
                    "sent": "So for instance if I get this this example, I have a union between two patterns, an optional with the third one.",
                    "label": 0
                },
                {
                    "sent": "So if I follow those general rules that I'm going to union those guys 1st and then optional do an optional with the third one, because optional refers only to this one only, whatever is on its right and then then I put the expressions on the left.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_42": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So when I combine conjunction with Union, since Union has a higher precedence than, this is how I'm going to write it.",
                    "label": 0
                }
            ]
        },
        "clip_43": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And then there is.",
                    "label": 0
                },
                {
                    "sent": "Then he rebody it starts the the part where I have my spot in my sparkle queries.",
                    "label": 0
                },
                {
                    "sent": "OK, so up until now we have been seeing how to write the basic part of Spartan queries, right?",
                    "label": 0
                },
                {
                    "sent": "What is the part of the queries that gives me the solutions that find solutions at goals?",
                    "label": 0
                },
                {
                    "sent": "But I specify a pattern and I say go in the graph and find solutions for those variables.",
                    "label": 0
                },
                {
                    "sent": "Then the point is how do I do?",
                    "label": 0
                },
                {
                    "sent": "What do I do with those things right?",
                    "label": 0
                },
                {
                    "sent": "How do I express it in some machine readable format that an agent can understand?",
                    "label": 0
                },
                {
                    "sent": "So in general and sparkle query you have prefixes.",
                    "label": 0
                },
                {
                    "sent": "Barry wrote said that before.",
                    "label": 0
                }
            ]
        },
        "clip_44": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "You have what we call query forms is what how do you?",
                    "label": 0
                },
                {
                    "sent": "What kind of answers do I want to get to get back so you have select?",
                    "label": 0
                },
                {
                    "sent": "Select select form actually says go and get me back those variables in the graph patterns you might have, you know thousands know times less, hopefully variables select it says give me back the values give me back the mappings that actually project out the the from the mappings.",
                    "label": 0
                },
                {
                    "sent": "The columns from the tabular forms the columns that refer to the variables artisan genre.",
                    "label": 0
                },
                {
                    "sent": "I ask says is this pattern through?",
                    "label": 0
                },
                {
                    "sent": "Does this solution exist in my graph pattern describe says take a variable and sorry take a resource and tell me everything you know about it.",
                    "label": 0
                },
                {
                    "sent": "So get the graph around this resource and construct says evaluate this pattern and then construct the sub graph of it.",
                    "label": 0
                },
                {
                    "sent": "Or it might be a completely new graph right?",
                    "label": 0
                },
                {
                    "sent": "If I want to create views for instance in databases you create views.",
                    "label": 0
                },
                {
                    "sent": "You say I have I have a path of length.",
                    "label": 0
                },
                {
                    "sent": "I don't know then, but I want just to say just to get back to the source and the target of this long path.",
                    "label": 0
                },
                {
                    "sent": "So this is how you you can write construct close for this purpose.",
                    "label": 0
                }
            ]
        },
        "clip_45": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "You have also the possibility of specifying the graphs that you can go ahead and evaluate the.",
                    "label": 0
                }
            ]
        },
        "clip_46": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The query on.",
                    "label": 0
                },
                {
                    "sent": "There's nowhere close up until now.",
                    "label": 0
                },
                {
                    "sent": "We have been discussing about the work closed group Group graph patterns are specified in the workload, right?",
                    "label": 0
                },
                {
                    "sent": "And there is.",
                    "label": 0
                },
                {
                    "sent": "This is the place where the computer.",
                    "label": 0
                }
            ]
        },
        "clip_47": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Of the bindings and mappings are done.",
                    "label": 0
                },
                {
                    "sent": "There are solution modifyers like order by.",
                    "label": 1
                },
                {
                    "sent": "In order to get back in order the results limit and offset limit up until 10 offset.",
                    "label": 0
                },
                {
                    "sent": "Give me the 10 but starting from a specific point in the result, set the group by OK SQL Combine there is.",
                    "label": 1
                }
            ]
        },
        "clip_48": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Odds and this thing to eliminate duplicates.",
                    "label": 0
                },
                {
                    "sent": "So a very very very quick quick course on the basics of spark well.",
                    "label": 0
                },
                {
                    "sent": "And then we can just go in the hands on an advance on that, OK.",
                    "label": 0
                }
            ]
        }
    }
}