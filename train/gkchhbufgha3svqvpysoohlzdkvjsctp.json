{
    "id": "gkchhbufgha3svqvpysoohlzdkvjsctp",
    "title": "Real-time texture boundary detection from ridges in the standard deviation space",
    "info": {
        "author": [
            "Ray Hidayat, Department of Computer Science and Software Engineering, College of Engineering, University of Canterbury"
        ],
        "published": "Dec. 1, 2009",
        "recorded": "September 2009",
        "category": [
            "Top->Computer Science->Computer Vision"
        ]
    },
    "url": "http://videolectures.net/bmvc09_hidayat_rttbd/",
    "segmentation": [
        [
            "Hi everyone, my name is Ray.",
            "I'm working with Doctor Richard Greene.",
            "He's my supervisor and where from the University of Canterbury in New Zealand and let me tell you New Zealand has an 11 hour time difference so it's about 11:00 PM right now.",
            "So if I fall asleep it's not your fault.",
            "OK let's get going boundary detection boundary detection is sometimes used as an essential for."
        ],
        [
            "Step 2 image and tip protection fact.",
            "There are many computer vision algorithms which rely on boundary detection.",
            "Now this here the global probability of boundary detector is one of the best boundary detectors right now, and so that's what a boundary detector looks like."
        ],
        [
            "So what is a boundary?",
            "I'm sure it's common sense to all of you this here.",
            "That's what humans think is where the boundaries are for that image boundary separates different areas of an image, so that simple the way a computer, the way a boundary detector works as it tries to find boundaries by finding significant differences between neighboring areas of the same image.",
            "So what that would look like?",
            "Is it look at one particular region and then it would look at a region next to it and it would say oh things this significantly different.",
            "There must be a boundary between them.",
            "And so that is how a boundary detector works.",
            "But it's not that simple because in the real world, saying these two areas are significantly different is not simple.",
            "Why not?"
        ],
        [
            "Texture most images in the real world contain texture.",
            "Texture is made up of repeating variations, and these variations are what make boundary detection quite difficult.",
            "And so this here.",
            "This is a little example of why how that might look like.",
            "The Kenny Edge detector does not consider texture information, and so when it's done as it's looked at the fair and the.",
            "And the bevern's face, and it's decided all those little variations are significant and so a naive boundary detector like this can easily confuse these repeating variations for significant differences.",
            "So that's a problem, but."
        ],
        [
            "That has been quite pretty much solved.",
            "Most images contain texture for a boundary to boundary detector to be good on most images.",
            "Therefore it must utilize texture information.",
            "So this is very important and right here this is a boundary detector which does consider texture and so you can see how it's improved.",
            "The result greatly.",
            "Now this actually happens to be our particular algorithm, so I'll go along and I'll tell you about that today.",
            "Now.",
            "Although texture people have found ways of handling it, the main problem right now is that texture is slow.",
            "Marth ticks are boundary detectors are too slow to."
        ],
        [
            "Any use in real time, so generally they take more than 10 seconds and sometimes even 3 minutes per image, so it's not even an option for a real time algorithm.",
            "Alot of the time to use a texture boundary detector.",
            "There are a few texture boundary detectors which through work in real time, but they are quite low quality.",
            "This is too.",
            "You may have heard of.",
            "I consider these to be the state of the art.",
            "The second moment matrix and surround suppression.",
            "So real time texture boundary detectors like this they're low quality.",
            "They can be improved a lot and So what we need is we need a texture boundary detector which can work in real time and so our proposed solution.",
            "Is the standard."
        ],
        [
            "Aviation Ridge detector.",
            "So this detector is capable of three things.",
            "It can detect boundaries.",
            "It can ignore variations in texture.",
            "And most importantly, it can do all of this in real time.",
            "So how have we managed to do this?"
        ],
        [
            "Wow, this algorithm that works by finding ridges in the standard deviation space.",
            "So there are four steps to the algorithm and I'm going to go through them right after this slide.",
            "But keep in mind the biggest difficulty is how can you ignore these variations and texture in real time?",
            "It's quite difficult, so let's see how it's done."
        ],
        [
            "OK, step one quite simple.",
            "The standard deviation transform for each pixel calculate the standard deviation of the local area.",
            "And then repeat for all pixels.",
            "Showing."
        ],
        [
            "We can follow that much OK, but.",
            "You're probably wondering why don't we do this?",
            "Wow, I'm raising one.",
            "There are two reasons I'll tell you reason 1 right now.",
            "Standard deviation is approximately equal for different areas of the same texture.",
            "If we look at this standard deviation transform for this baboon image, you'll see this is quite true.",
            "In this case, the fair has approximately the same standard deviation throughout, and so if we can design an algorithm which can detect this, then we can find a way to suppress the variations and."
        ],
        [
            "Texture.",
            "How do we do that?",
            "Wow, that is the next step.",
            "Sir, that Step 2 the gradient transform looks at each pixel individually.",
            "So let's say we're looking at this particular pixel.",
            "I'll call it the point of interest.",
            "So what happens is the surrounding pixels pull the point of interest in their direction.",
            "Now we set up the system so that pixels with a higher standard deviation have a stronger pull.",
            "And so if all these pixels on the left have greater standard deviation, then they'll have more pull.",
            "Now of course you can probably see what we do next.",
            "We take this sum of all those forces and so that's the gradient.",
            "So the overall gradient is calculated for each pixel.",
            "So naturally the gradient will point to the area of strongest standard deviation.",
            "Now that's all good, but the real magic of the algorithm is this situation, because remember within the same texture, standard deviation tends to be equal, and so if you have a situation like this, all the forces will be approximately equal and so therefore they will cancel out and so this way.",
            "Texture is eliminated from the algorithm.",
            "So that's where the real magic of this algorithm is."
        ],
        [
            "OK. Second reason why we use standard deviation standard deviation peaks on boundaries.",
            "So if you just look at this.",
            "On all the areas between the different textured regions, the standard deviation has picked.",
            "So why does that happen?",
            "Well, if you think about it within a texture, but the standard deviation only has to encapsulate the intraclass variation of that texture.",
            "But whenever the standard deviation crosses two textured areas and has to also include the interclass variation, and so naturally adding interclass variation to this will increase the standard deviation, and there are exceptions to this, of course, but.",
            "In general, standard deviation does peak between on boundaries where textures meet, and so if we can design an algorithm that can detect when standard deviation peaks.",
            "Then we can have a boundary detector and so that is what we do in the."
        ],
        [
            "Next step.",
            "Sir, this here.",
            "This is what the gradient transform of that image looks like.",
            "In this image the Hue represents the orientation of the gradient.",
            "Now you'll probably notice something very interesting about the gradient.",
            "Just think for a moment if you have a 1 dimensional function.",
            "A pic, you have a pic.",
            "A pic will have a positive gradient on one side and it will have a negative gradient on the other, and so that's basically exactly what's happening here.",
            "One gradient is pointing towards that way, and the other gradient is pointing in the opposite direction, so we have this pattern where the standard deviation peaks the gradient points towards each other, and So what we need is we need to detect this pattern to be able to detect boundaries so.",
            "How do we do that?",
            "Well, OK, that's the standard deviation image.",
            "If you wanted to see it.",
            "That's what we do instead."
        ],
        [
            "3.",
            "Sir festival.",
            "You can probably imagine the best way to figure out of two vectors of pointing towards each other is to use the dot product, so we use the dot product, But the question is what do we product?",
            "Well, the way we do it, I'll draw it on here for you.",
            "Um?",
            "If we want to find.",
            "How, how strong is the Ridge at this point?",
            "Then we will compare the points at particular offsets.",
            "From that point of interest, so we'll find the response here will take the dot product of this in this.",
            "So naturally these are opposites, so you will get a strong response here.",
            "So we repeat this at different orientations.",
            "So that that would be the horizontal orientation and then we take the maximum.",
            "So if I just sum."
        ],
        [
            "We do this with four orientations, Zero, 4590 and 135 degrees, and then would take the strongest response from all of the offsets and the result of this is the Ridge transform.",
            "And so this is what it looks like.",
            "We have an image here.",
            "And this is the Ridge transform.",
            "You'll notice all the textured grass has not appeared in the boundary detection, and so that's what we want.",
            "We want it to ignore texture, so that's quite good.",
            "There's one more thing we can do to improve this."
        ],
        [
            "That is what Step 4 is about, Sir.",
            "But if we take the Ridge transform.",
            "And we subtract the gradient transform which was step two.",
            "We can get a nice final result right at the end there.",
            "And so why does this work?",
            "Honestly, why do we do this for the start?",
            "And the previous step, we only compare two points at a time, and so we only take a very small sample and so often it will miss locate the boundaries.",
            "And so that's basically it, cleans it up and it does it very fast, and so it works because a peak must have a negative gradient on one side and a positive gradient on the other.",
            "So it will always and will basically work as a very fast thinning algorithm.",
            "So that is our final final result.",
            "Looks like that Sir."
        ],
        [
            "Results wow, I've objectively measured work.",
            "I've got 2 main conclusions for you.",
            "The first one is this algorithm found is able to execute at 43.29 frames per second.",
            "And so this is orders of magnitude faster than most non real time text to boundary detectors which take 10 seconds for image.",
            "So it's about 500 times faster, so it's a lot more useful for a real time algorithm.",
            "If you're willing to accept a trade off in quality that can run it up to 125 frames per second.",
            "And this supports our claim that this is a real time algorithm, Sir at all, so I've tested this algorithm on the Berkeley Segmentation benchmark.",
            "So that is a publicly available system which objectively ranks the world's best boundary detectors, and so on.",
            "This objective benchmark our algorithms score 0.62, and the important point about that is that that's the current state of the art, which is the 2nd moment matrix.",
            "Let's get 0.57.",
            "And so this supports our claim that the algorithm is a texture boundary detector.",
            "So we do have an algorithm which can suppress the texture variations and it can do it all in real time.",
            "So in conclusion, the standard deviation."
        ],
        [
            "And is a standard deviation.",
            "Ridge Detector is able to detect boundaries using texture information.",
            "It is orders of magnitude faster than non real time boundary detectors.",
            "It produces higher quality results compared to all existing real real time texture boundary detectors and our objective scientific measurements fully support this.",
            "These claims now because boundary detection is so important, these positive results could allow improvements to many real time computer vision applications.",
            "So thank you very much, that's my thought."
        ],
        [
            "I'm not sure how to answer that one actually ticks turets.",
            "I believe Tom Drummond's work you're talking about.",
            "He has work where you track an object to 3D model.",
            "And and he can locate.",
            "He takes the edges and then it searches for the edges in.",
            "Texture.",
            "Weather edge yeah I see OK.",
            "I think there's a few things like this festival.",
            "This doesn't have a learning stage, so perhaps perhaps that could be more useful.",
            "I'm not sure.",
            "Also that particular work.",
            "At at searches for distribution linearly an it's actually it's very similar in the way that.",
            "And though it's similar, it comes up with similar results are found to this particular work actually just because of the way that it it does.",
            "A distribution comparison.",
            "Essentially it's quite similar to this.",
            "Yep.",
            "OK, well the first part of the question.",
            "They size the window size is a parameter, so it's up to the user to choose actually hopefully.",
            "They'll know what kind of appropriate window sizes will work for them, and the second question is it a factor of speed?",
            "It's not as much as you think it is.",
            "This uses constant constant boundary, constant box blurs.",
            "Do you know what I mean?",
            "So it just uses the box blur and so the.",
            "There's not a lot of extra processing which needs to be done when when you're using a box flow.",
            "If you make the box bigger so that speed does not too affected by the window size."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Hi everyone, my name is Ray.",
                    "label": 0
                },
                {
                    "sent": "I'm working with Doctor Richard Greene.",
                    "label": 0
                },
                {
                    "sent": "He's my supervisor and where from the University of Canterbury in New Zealand and let me tell you New Zealand has an 11 hour time difference so it's about 11:00 PM right now.",
                    "label": 1
                },
                {
                    "sent": "So if I fall asleep it's not your fault.",
                    "label": 0
                },
                {
                    "sent": "OK let's get going boundary detection boundary detection is sometimes used as an essential for.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Step 2 image and tip protection fact.",
                    "label": 0
                },
                {
                    "sent": "There are many computer vision algorithms which rely on boundary detection.",
                    "label": 1
                },
                {
                    "sent": "Now this here the global probability of boundary detector is one of the best boundary detectors right now, and so that's what a boundary detector looks like.",
                    "label": 1
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So what is a boundary?",
                    "label": 1
                },
                {
                    "sent": "I'm sure it's common sense to all of you this here.",
                    "label": 0
                },
                {
                    "sent": "That's what humans think is where the boundaries are for that image boundary separates different areas of an image, so that simple the way a computer, the way a boundary detector works as it tries to find boundaries by finding significant differences between neighboring areas of the same image.",
                    "label": 1
                },
                {
                    "sent": "So what that would look like?",
                    "label": 0
                },
                {
                    "sent": "Is it look at one particular region and then it would look at a region next to it and it would say oh things this significantly different.",
                    "label": 0
                },
                {
                    "sent": "There must be a boundary between them.",
                    "label": 0
                },
                {
                    "sent": "And so that is how a boundary detector works.",
                    "label": 1
                },
                {
                    "sent": "But it's not that simple because in the real world, saying these two areas are significantly different is not simple.",
                    "label": 0
                },
                {
                    "sent": "Why not?",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Texture most images in the real world contain texture.",
                    "label": 1
                },
                {
                    "sent": "Texture is made up of repeating variations, and these variations are what make boundary detection quite difficult.",
                    "label": 1
                },
                {
                    "sent": "And so this here.",
                    "label": 0
                },
                {
                    "sent": "This is a little example of why how that might look like.",
                    "label": 0
                },
                {
                    "sent": "The Kenny Edge detector does not consider texture information, and so when it's done as it's looked at the fair and the.",
                    "label": 0
                },
                {
                    "sent": "And the bevern's face, and it's decided all those little variations are significant and so a naive boundary detector like this can easily confuse these repeating variations for significant differences.",
                    "label": 1
                },
                {
                    "sent": "So that's a problem, but.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "That has been quite pretty much solved.",
                    "label": 0
                },
                {
                    "sent": "Most images contain texture for a boundary to boundary detector to be good on most images.",
                    "label": 1
                },
                {
                    "sent": "Therefore it must utilize texture information.",
                    "label": 0
                },
                {
                    "sent": "So this is very important and right here this is a boundary detector which does consider texture and so you can see how it's improved.",
                    "label": 0
                },
                {
                    "sent": "The result greatly.",
                    "label": 0
                },
                {
                    "sent": "Now this actually happens to be our particular algorithm, so I'll go along and I'll tell you about that today.",
                    "label": 0
                },
                {
                    "sent": "Now.",
                    "label": 0
                },
                {
                    "sent": "Although texture people have found ways of handling it, the main problem right now is that texture is slow.",
                    "label": 0
                },
                {
                    "sent": "Marth ticks are boundary detectors are too slow to.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Any use in real time, so generally they take more than 10 seconds and sometimes even 3 minutes per image, so it's not even an option for a real time algorithm.",
                    "label": 1
                },
                {
                    "sent": "Alot of the time to use a texture boundary detector.",
                    "label": 0
                },
                {
                    "sent": "There are a few texture boundary detectors which through work in real time, but they are quite low quality.",
                    "label": 1
                },
                {
                    "sent": "This is too.",
                    "label": 0
                },
                {
                    "sent": "You may have heard of.",
                    "label": 0
                },
                {
                    "sent": "I consider these to be the state of the art.",
                    "label": 1
                },
                {
                    "sent": "The second moment matrix and surround suppression.",
                    "label": 0
                },
                {
                    "sent": "So real time texture boundary detectors like this they're low quality.",
                    "label": 0
                },
                {
                    "sent": "They can be improved a lot and So what we need is we need a texture boundary detector which can work in real time and so our proposed solution.",
                    "label": 0
                },
                {
                    "sent": "Is the standard.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Aviation Ridge detector.",
                    "label": 0
                },
                {
                    "sent": "So this detector is capable of three things.",
                    "label": 0
                },
                {
                    "sent": "It can detect boundaries.",
                    "label": 0
                },
                {
                    "sent": "It can ignore variations in texture.",
                    "label": 1
                },
                {
                    "sent": "And most importantly, it can do all of this in real time.",
                    "label": 0
                },
                {
                    "sent": "So how have we managed to do this?",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Wow, this algorithm that works by finding ridges in the standard deviation space.",
                    "label": 1
                },
                {
                    "sent": "So there are four steps to the algorithm and I'm going to go through them right after this slide.",
                    "label": 1
                },
                {
                    "sent": "But keep in mind the biggest difficulty is how can you ignore these variations and texture in real time?",
                    "label": 0
                },
                {
                    "sent": "It's quite difficult, so let's see how it's done.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, step one quite simple.",
                    "label": 0
                },
                {
                    "sent": "The standard deviation transform for each pixel calculate the standard deviation of the local area.",
                    "label": 1
                },
                {
                    "sent": "And then repeat for all pixels.",
                    "label": 0
                },
                {
                    "sent": "Showing.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We can follow that much OK, but.",
                    "label": 0
                },
                {
                    "sent": "You're probably wondering why don't we do this?",
                    "label": 0
                },
                {
                    "sent": "Wow, I'm raising one.",
                    "label": 0
                },
                {
                    "sent": "There are two reasons I'll tell you reason 1 right now.",
                    "label": 0
                },
                {
                    "sent": "Standard deviation is approximately equal for different areas of the same texture.",
                    "label": 1
                },
                {
                    "sent": "If we look at this standard deviation transform for this baboon image, you'll see this is quite true.",
                    "label": 0
                },
                {
                    "sent": "In this case, the fair has approximately the same standard deviation throughout, and so if we can design an algorithm which can detect this, then we can find a way to suppress the variations and.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Texture.",
                    "label": 0
                },
                {
                    "sent": "How do we do that?",
                    "label": 0
                },
                {
                    "sent": "Wow, that is the next step.",
                    "label": 0
                },
                {
                    "sent": "Sir, that Step 2 the gradient transform looks at each pixel individually.",
                    "label": 0
                },
                {
                    "sent": "So let's say we're looking at this particular pixel.",
                    "label": 0
                },
                {
                    "sent": "I'll call it the point of interest.",
                    "label": 0
                },
                {
                    "sent": "So what happens is the surrounding pixels pull the point of interest in their direction.",
                    "label": 1
                },
                {
                    "sent": "Now we set up the system so that pixels with a higher standard deviation have a stronger pull.",
                    "label": 0
                },
                {
                    "sent": "And so if all these pixels on the left have greater standard deviation, then they'll have more pull.",
                    "label": 0
                },
                {
                    "sent": "Now of course you can probably see what we do next.",
                    "label": 0
                },
                {
                    "sent": "We take this sum of all those forces and so that's the gradient.",
                    "label": 1
                },
                {
                    "sent": "So the overall gradient is calculated for each pixel.",
                    "label": 1
                },
                {
                    "sent": "So naturally the gradient will point to the area of strongest standard deviation.",
                    "label": 0
                },
                {
                    "sent": "Now that's all good, but the real magic of the algorithm is this situation, because remember within the same texture, standard deviation tends to be equal, and so if you have a situation like this, all the forces will be approximately equal and so therefore they will cancel out and so this way.",
                    "label": 1
                },
                {
                    "sent": "Texture is eliminated from the algorithm.",
                    "label": 0
                },
                {
                    "sent": "So that's where the real magic of this algorithm is.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK. Second reason why we use standard deviation standard deviation peaks on boundaries.",
                    "label": 1
                },
                {
                    "sent": "So if you just look at this.",
                    "label": 0
                },
                {
                    "sent": "On all the areas between the different textured regions, the standard deviation has picked.",
                    "label": 0
                },
                {
                    "sent": "So why does that happen?",
                    "label": 0
                },
                {
                    "sent": "Well, if you think about it within a texture, but the standard deviation only has to encapsulate the intraclass variation of that texture.",
                    "label": 0
                },
                {
                    "sent": "But whenever the standard deviation crosses two textured areas and has to also include the interclass variation, and so naturally adding interclass variation to this will increase the standard deviation, and there are exceptions to this, of course, but.",
                    "label": 0
                },
                {
                    "sent": "In general, standard deviation does peak between on boundaries where textures meet, and so if we can design an algorithm that can detect when standard deviation peaks.",
                    "label": 0
                },
                {
                    "sent": "Then we can have a boundary detector and so that is what we do in the.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Next step.",
                    "label": 0
                },
                {
                    "sent": "Sir, this here.",
                    "label": 0
                },
                {
                    "sent": "This is what the gradient transform of that image looks like.",
                    "label": 0
                },
                {
                    "sent": "In this image the Hue represents the orientation of the gradient.",
                    "label": 0
                },
                {
                    "sent": "Now you'll probably notice something very interesting about the gradient.",
                    "label": 0
                },
                {
                    "sent": "Just think for a moment if you have a 1 dimensional function.",
                    "label": 0
                },
                {
                    "sent": "A pic, you have a pic.",
                    "label": 0
                },
                {
                    "sent": "A pic will have a positive gradient on one side and it will have a negative gradient on the other, and so that's basically exactly what's happening here.",
                    "label": 1
                },
                {
                    "sent": "One gradient is pointing towards that way, and the other gradient is pointing in the opposite direction, so we have this pattern where the standard deviation peaks the gradient points towards each other, and So what we need is we need to detect this pattern to be able to detect boundaries so.",
                    "label": 0
                },
                {
                    "sent": "How do we do that?",
                    "label": 1
                },
                {
                    "sent": "Well, OK, that's the standard deviation image.",
                    "label": 0
                },
                {
                    "sent": "If you wanted to see it.",
                    "label": 0
                },
                {
                    "sent": "That's what we do instead.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "3.",
                    "label": 0
                },
                {
                    "sent": "Sir festival.",
                    "label": 0
                },
                {
                    "sent": "You can probably imagine the best way to figure out of two vectors of pointing towards each other is to use the dot product, so we use the dot product, But the question is what do we product?",
                    "label": 1
                },
                {
                    "sent": "Well, the way we do it, I'll draw it on here for you.",
                    "label": 0
                },
                {
                    "sent": "Um?",
                    "label": 0
                },
                {
                    "sent": "If we want to find.",
                    "label": 0
                },
                {
                    "sent": "How, how strong is the Ridge at this point?",
                    "label": 1
                },
                {
                    "sent": "Then we will compare the points at particular offsets.",
                    "label": 0
                },
                {
                    "sent": "From that point of interest, so we'll find the response here will take the dot product of this in this.",
                    "label": 0
                },
                {
                    "sent": "So naturally these are opposites, so you will get a strong response here.",
                    "label": 0
                },
                {
                    "sent": "So we repeat this at different orientations.",
                    "label": 0
                },
                {
                    "sent": "So that that would be the horizontal orientation and then we take the maximum.",
                    "label": 0
                },
                {
                    "sent": "So if I just sum.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We do this with four orientations, Zero, 4590 and 135 degrees, and then would take the strongest response from all of the offsets and the result of this is the Ridge transform.",
                    "label": 1
                },
                {
                    "sent": "And so this is what it looks like.",
                    "label": 0
                },
                {
                    "sent": "We have an image here.",
                    "label": 0
                },
                {
                    "sent": "And this is the Ridge transform.",
                    "label": 0
                },
                {
                    "sent": "You'll notice all the textured grass has not appeared in the boundary detection, and so that's what we want.",
                    "label": 0
                },
                {
                    "sent": "We want it to ignore texture, so that's quite good.",
                    "label": 0
                },
                {
                    "sent": "There's one more thing we can do to improve this.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "That is what Step 4 is about, Sir.",
                    "label": 0
                },
                {
                    "sent": "But if we take the Ridge transform.",
                    "label": 0
                },
                {
                    "sent": "And we subtract the gradient transform which was step two.",
                    "label": 0
                },
                {
                    "sent": "We can get a nice final result right at the end there.",
                    "label": 0
                },
                {
                    "sent": "And so why does this work?",
                    "label": 0
                },
                {
                    "sent": "Honestly, why do we do this for the start?",
                    "label": 0
                },
                {
                    "sent": "And the previous step, we only compare two points at a time, and so we only take a very small sample and so often it will miss locate the boundaries.",
                    "label": 0
                },
                {
                    "sent": "And so that's basically it, cleans it up and it does it very fast, and so it works because a peak must have a negative gradient on one side and a positive gradient on the other.",
                    "label": 1
                },
                {
                    "sent": "So it will always and will basically work as a very fast thinning algorithm.",
                    "label": 1
                },
                {
                    "sent": "So that is our final final result.",
                    "label": 0
                },
                {
                    "sent": "Looks like that Sir.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Results wow, I've objectively measured work.",
                    "label": 0
                },
                {
                    "sent": "I've got 2 main conclusions for you.",
                    "label": 0
                },
                {
                    "sent": "The first one is this algorithm found is able to execute at 43.29 frames per second.",
                    "label": 1
                },
                {
                    "sent": "And so this is orders of magnitude faster than most non real time text to boundary detectors which take 10 seconds for image.",
                    "label": 1
                },
                {
                    "sent": "So it's about 500 times faster, so it's a lot more useful for a real time algorithm.",
                    "label": 0
                },
                {
                    "sent": "If you're willing to accept a trade off in quality that can run it up to 125 frames per second.",
                    "label": 1
                },
                {
                    "sent": "And this supports our claim that this is a real time algorithm, Sir at all, so I've tested this algorithm on the Berkeley Segmentation benchmark.",
                    "label": 0
                },
                {
                    "sent": "So that is a publicly available system which objectively ranks the world's best boundary detectors, and so on.",
                    "label": 1
                },
                {
                    "sent": "This objective benchmark our algorithms score 0.62, and the important point about that is that that's the current state of the art, which is the 2nd moment matrix.",
                    "label": 0
                },
                {
                    "sent": "Let's get 0.57.",
                    "label": 1
                },
                {
                    "sent": "And so this supports our claim that the algorithm is a texture boundary detector.",
                    "label": 0
                },
                {
                    "sent": "So we do have an algorithm which can suppress the texture variations and it can do it all in real time.",
                    "label": 0
                },
                {
                    "sent": "So in conclusion, the standard deviation.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And is a standard deviation.",
                    "label": 0
                },
                {
                    "sent": "Ridge Detector is able to detect boundaries using texture information.",
                    "label": 1
                },
                {
                    "sent": "It is orders of magnitude faster than non real time boundary detectors.",
                    "label": 0
                },
                {
                    "sent": "It produces higher quality results compared to all existing real real time texture boundary detectors and our objective scientific measurements fully support this.",
                    "label": 1
                },
                {
                    "sent": "These claims now because boundary detection is so important, these positive results could allow improvements to many real time computer vision applications.",
                    "label": 1
                },
                {
                    "sent": "So thank you very much, that's my thought.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I'm not sure how to answer that one actually ticks turets.",
                    "label": 0
                },
                {
                    "sent": "I believe Tom Drummond's work you're talking about.",
                    "label": 0
                },
                {
                    "sent": "He has work where you track an object to 3D model.",
                    "label": 0
                },
                {
                    "sent": "And and he can locate.",
                    "label": 0
                },
                {
                    "sent": "He takes the edges and then it searches for the edges in.",
                    "label": 0
                },
                {
                    "sent": "Texture.",
                    "label": 0
                },
                {
                    "sent": "Weather edge yeah I see OK.",
                    "label": 0
                },
                {
                    "sent": "I think there's a few things like this festival.",
                    "label": 0
                },
                {
                    "sent": "This doesn't have a learning stage, so perhaps perhaps that could be more useful.",
                    "label": 0
                },
                {
                    "sent": "I'm not sure.",
                    "label": 0
                },
                {
                    "sent": "Also that particular work.",
                    "label": 0
                },
                {
                    "sent": "At at searches for distribution linearly an it's actually it's very similar in the way that.",
                    "label": 0
                },
                {
                    "sent": "And though it's similar, it comes up with similar results are found to this particular work actually just because of the way that it it does.",
                    "label": 0
                },
                {
                    "sent": "A distribution comparison.",
                    "label": 0
                },
                {
                    "sent": "Essentially it's quite similar to this.",
                    "label": 0
                },
                {
                    "sent": "Yep.",
                    "label": 0
                },
                {
                    "sent": "OK, well the first part of the question.",
                    "label": 0
                },
                {
                    "sent": "They size the window size is a parameter, so it's up to the user to choose actually hopefully.",
                    "label": 0
                },
                {
                    "sent": "They'll know what kind of appropriate window sizes will work for them, and the second question is it a factor of speed?",
                    "label": 0
                },
                {
                    "sent": "It's not as much as you think it is.",
                    "label": 0
                },
                {
                    "sent": "This uses constant constant boundary, constant box blurs.",
                    "label": 0
                },
                {
                    "sent": "Do you know what I mean?",
                    "label": 0
                },
                {
                    "sent": "So it just uses the box blur and so the.",
                    "label": 0
                },
                {
                    "sent": "There's not a lot of extra processing which needs to be done when when you're using a box flow.",
                    "label": 0
                },
                {
                    "sent": "If you make the box bigger so that speed does not too affected by the window size.",
                    "label": 0
                }
            ]
        }
    }
}