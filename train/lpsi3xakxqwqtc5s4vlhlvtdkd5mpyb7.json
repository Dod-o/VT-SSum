{
    "id": "lpsi3xakxqwqtc5s4vlhlvtdkd5mpyb7",
    "title": "Fast Estimation of Relational Pattern Coverage through Randomization and Maximum Likelihood",
    "info": {
        "author": [
            "Ond\u0159ej Ku\u017eelka, Czech Technical University in Prague"
        ],
        "published": "July 28, 2008",
        "recorded": "July 2008",
        "category": [
            "Top->Computer Science->Machine Learning"
        ]
    },
    "url": "http://videolectures.net/icml08_kuzelka_fer/",
    "segmentation": [
        [
            "OK, thanks for your help.",
            "Alright, this work is on faster estimation of 1st or the close coverage.",
            "It is joint work of my student on J and who has done most of the work and myself."
        ],
        [
            "Since this is probably the only pure LP talk in this conference, let me remind the basics.",
            "In RP we try to induce or learn 1st order logic rules such as component is mutagenic.",
            "If it has, let's say two atoms connected by a bond, which hopefully is not the case.",
            "From examples now, examples may take different forms in IO P, But one one of the, let's say, Canonical form is again clauses which usually are horn ground clauses.",
            "So we know about the particular compound that contains that it is multigenic and it contains these atoms that are carbon hydrogen and there are some bones etc.",
            "And so we want to generalize from a set.",
            "Such examples.",
            "Towards the more general rule or gloss here.",
            "So obviously as you could imagine the basically the core of the TPR algorithm is that we search in the space of clauses for those that cover many positive examples, and that cover very few negative examples so.",
            "What is this covering relation more precisely?"
        ],
        [
            "So overall, the class coverage on a set of examples is obviously the number of examples that are covered now.",
            "Clause is covered by another one if it logically entails it.",
            "Of course the 1st all the order entailment relation is undecidable.",
            "So for example in the case of no recursion if we don't allow recursion in the rules, then we can happily substitute the.",
            "Entailment relation with Theta subsumption, which is a syntactical test.",
            "Here is the definition so close D is subsumed by C with you right this way if there is a substitution for variables in C such that the literals in C are all contained in the literals in D, so that clearly is the case in."
        ],
        [
            "This example.",
            "Now.",
            "Since we want to improve on the basic algorithm of subsumption checking, so we implemented very basic.",
            "Algorithm.",
            "For checking subsumption.",
            "Which is based on CSP ideas.",
            "I don't want to go into details about this baseline algorithm.",
            "It is enough to know that it is a backtracking complete search that uses a heuristic which tries to pick variables for instantiation that are most constraint.",
            "Now when there is a tie in this heuristic scoring for variables to choose, then a random choice is made.",
            "Now this randomness element is important.",
            "So this."
        ],
        [
            "This study that we want to present here was originally motivated by.",
            "Testing how I restarted strategy for subsumption testing can help to boost performance.",
            "So many of you may be familiar with.",
            "Be the stream of research in the combinatorial optimization where they try to restart randomized algorithms on a given schedule.",
            "For example, dynamic restart policy and it really shows that.",
            "Not this often helps speed up the algorithm by orders of magnitude.",
            "Briefly.",
            "Why is that?",
            "Well, that is big cause if you have non zero chance that you will solve the problem.",
            "The one single restart, then the sequence of restarts is a sequence of independent trials, and the runtime distribution for this entire sequence is by definition exponential, right?",
            "Whereas if you stick to a single search path with no restart, the runtime the expected runtime may often be infinite because you have no guarantee that the runtime distribution is exponential.",
            "So that was the origin of our work.",
            "We tested the previously shown basic algorithm with restarts and we discovered that the blue distributions are really.",
            "Well favorable, those are there.",
            "We started ones.",
            "So what do the figures actually show where they show the log of probability that no solution is achieved in time shown on the X axis?",
            "So what we want from these guys is to decay fast.",
            "Now they restarted.",
            "Strategy really decays faster than the basic non restarting so that was a nice finding however.",
            "What we saw was that.",
            "It is much harder on average, to prove to refutes assumption to work with the examples that are not subsumed by by the clause in question.",
            "That is quite natural, because when you work with.",
            "One thing important to say here is that the restart regime in the algorithm was as follows.",
            "Every restart every try in the sequence of trials was.",
            "Was had a length that was twice as the previous one, so it is still even if you randomize and restart the basic algorithm, it is still complete because eventually you will arrive at a trial that is long enough to refutes assumption in that your words actually search the whole finite search space.",
            "The problem is that for the closest that are hard to refute.",
            "You will have to restart a lot of times before you arrived at along Erycina try long enough to refute the subsumption, so we want to somehow cope with this problem."
        ],
        [
            "Now our initial ideas were so if we implement the subsumption checking in the LP system, what we do?",
            "You know in the?",
            "Traditional LP way is that we actually try.",
            "The subscription for the hypothesized clause and every example, so we eventually end up with deciding subsumption.",
            "For example, for every examples.",
            "Now obviously this is telling us much more than we will need to know what we want to do is rank the clauses according to their quality, and for that we don't need to know which particular examples they really cover.",
            "We just want to know how many examples each of them covers.",
            "Right, and Furthermore, even this number stating how many examples are covered, we don't really need to know it precisely because we eventually what we what we need is a ranking right?",
            "So for ranking we can go quite happy with an estimate of the A so.",
            "Are basic.",
            "Improvement of the previous algorithm is a restarted coverage tester or to recover, which proceeds in the following way.",
            "I run the baseline algorithm with bound resources with a limited number of steps on every example.",
            "In my example set.",
            "For some examples that actually are subsumed, I succeed to show that they are subsumed for some of them that are subsumed.",
            "I don't succeed.",
            "So in this first trial I succeeded to prove the subsumption for M1 examples, and then I repeat this whole loop again.",
            "Of course, all the previously proved examples I removed from the from the example set, and similarly I get the number M2, which is probably smaller than M1.",
            "I run this.",
            "K * K is integer and I end up with this sequence and the basic question of this work is what does this sequence, which obviously is obtained fast well in constant time in bounded time?",
            "What does this sequence tell us about the number 8 about the coverage of the cause?",
            "So before before I confuse you with the math that will come like in every ice email paper.",
            "I have a undergraduate level where he'll be explaining, you know, our approach to answering this question, so don't be offended.",
            "And it seems that I'll have to stick to the underg."
        ],
        [
            "Duet partner so.",
            "This is the number of examples proved in tryone."
        ],
        [
            "OK, and this is the actual number of examples that are covered.",
            "They don't so."
        ],
        [
            "In try #2.",
            "Where is it?",
            "OK, I still have the M1 from the previous try but I.",
            "Succeeded to prove some more OK."
        ],
        [
            "My goal like."
        ],
        [
            "Yes.",
            "And what I know is that this sequence forms.",
            "A function is a discrete function, but for convenience let's view it as as a continuous one.",
            "What do I know about this function?",
            "Well, so far not much.",
            "I only know that it has a limit and that limit is what I want to know.",
            "The actual number are subject examples, so our motivation is can we from these first points.",
            "They interpolate and then extrapolate.",
            "Dysfunction."
        ],
        [
            "To eventually yield a limit now."
        ],
        [
            "The assumption on which we were able to mathematically, let's say, extrapolate this to achieve the limit is as follows we.",
            "I assume that given.",
            "Try length you know restart but are the probability for every subset example that it will be.",
            "The proven to be subsumed by the baseline algorithm is constant for all of these examples, so there is some more discussion in the in the proceedings on how this assumption is.",
            "Not to which extent it is violated and how much influence it has on the performance on the algae."
        ],
        [
            "Rhythm, which I'll skip here.",
            "OK, so I'll be very fast about the mathematical derivation.",
            "So basically what we?",
            "Optimize or what we calculate is the probability of obtaining our sequence and want to MK.",
            "That is dependent on the probability P of being able to prove a single example.",
            "They proved this assumption for a single sample and the L number which we want, which is what we want to estimate, right?"
        ],
        [
            "We maximize the.",
            "Probability of obtaining the sequence on this conditions."
        ],
        [
            "And what we you know, the point of all these slides is that it can be done relatively easily by differ."
        ],
        [
            "Ciation.",
            "Now following the method just arrived, we tested the estimation precision on randomly generated clauses and examples.",
            "The.",
            "As to the generation of them.",
            "At here to a graph formalism which was included into the 1st Order Logic language.",
            "So all of the clauses and examples are actually representations of graphs that are in one category scale free and we also tried another category of uniform random graphs of limited size.",
            "So what?",
            "We see here is that the this.",
            "The method with with.",
            "Cut off set to 100 nodes.",
            "When plugged it in.",
            "In a distribution of the rental counter and pounds of the subsequent examples and the estimated is relatively of low precision.",
            "But as we increase the puddle, the precision increases, so this is to say that most of these marks are closer to the diagonal, which is the the correct estimate, right?",
            "And now the best news.",
            "Is.",
            "The runtimes, So what we compare ourselves to is a state of the art algorithm for testing.",
            "Subsumption is a deterministic complete algorithm called.",
            "The jungle is inspired by the.",
            "Constraint satisfaction framework and so far it has been shown to be the fastest subsumption tester.",
            "So while we for these estimates are somewhere in the order of seven or 12 seconds for the same.",
            "For the same task for this same randomly generated.",
            "Classes and examples.",
            "Jangra mounted two or more five almost 500 seconds so.",
            "Now the obvious question would be OK.",
            "So given the fact that we are imprecise, we're just estimating what effect does this have on learning.",
            "So of course we're able to learn faster, but how accurate our results will be so."
        ],
        [
            "That was subject to another set of experiments where we constructed a simple bottom up learner.",
            "And this test, which employed our algorithm and jungle.",
            "We tested it on three versions of the mutagenesis data set, which you probably are aware of, and a further data set that describes the cat structures in engineering.",
            "I don't have enough time to describe the exact differences in the representations of the three versions of the Motor Genesis task, but the important thing is with growing number with grown number.",
            "Here the complexity rises, the complexity in representing the examples.",
            "So the examples in the version three of mutagenesis had thousands of literals, so.",
            "Working with this, this large examples is it's practically impossible in the standard LP settings, so using recover in all of these versions, we were able to work in, let's say reasoning."
        ],
        [
            "Run times and.",
            "What was particularly surprising is that even with the imprecise, with the only estimate, this is the last line.",
            "With only the estimates of coverage, the ranking of clauses was good enough to produce the testing.",
            "I mean, training, training, precision, and recall with no significant.",
            "Difference from the version which uses jungle, the precise estimates.",
            "Why training accuracy?",
            "Because this is we are not concerned with with generalization ability, right?",
            "With this practical this is more or less optimization task, thanks.",
            "So.",
            "We need to test iteration of David Uof.",
            "The correct me if I'm wrong that the basic algorithm is that you do not change any.",
            "So what kind of loop are you refering to so?",
            "You test.",
            "Each example one, so the restart length is bound by a constant.",
            "It doesn't change, is that correct?",
            "Yeah.",
            "So how does this compare with previous sampling based methods for subsumption testing?",
            "Yes, there is this work by Ashwin Srinivasan which is based on the idea that you sample a few examples from the from the test and.",
            "Run the full subscription test on it.",
            "The we are different in that.",
            "For examples which are not subsumed by the clause, it is often very difficult to refute the subsumption.",
            "It takes you a lot of computational time, so for Ashwin's work this problem remains right.",
            "Even if you stick to a subsample a small sample of the training examples, some of them may be very difficult to refute from being subsumed.",
            "And that raises the computational time.",
            "Of course, you might argue can always you know, brutally curtailed the computations after some bounding runtime and say it's not.",
            "It's not subsumed, but then you lose all the statistical guarantees.",
            "Then you know all the statistics around it.",
            "The computations are.",
            "What about so?",
            "We instead wanted to still be able to curtail.",
            "So to say these difficult computations but still have those statistical reasoning behind it.",
            "The guarantees also, Ashwin's approach was using the standard Prolog engine to prove.",
            "As the power.",
            "So for these for these testing problems it was unusable because you just cannot use product to test subsumption with thousands of literals, so there was no way we could compare ourselves.",
            "Experimenting where about the work.",
            "By Michelle seaberg.",
            "Well Jango is is oh you mean that the different work that that?",
            "Is that uses a stochastic algorithm.",
            "Well, maybe one day.",
            "Maybe I can give you the answer so so the baseline restarted algorithm that we use not for the coverage computation, just for the single something check, unlike the Michelle's stochastic test that one is complete.",
            "So using only this if we are interested whether one particular example is covered.",
            "Then the restart algorithm."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, thanks for your help.",
                    "label": 0
                },
                {
                    "sent": "Alright, this work is on faster estimation of 1st or the close coverage.",
                    "label": 0
                },
                {
                    "sent": "It is joint work of my student on J and who has done most of the work and myself.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Since this is probably the only pure LP talk in this conference, let me remind the basics.",
                    "label": 0
                },
                {
                    "sent": "In RP we try to induce or learn 1st order logic rules such as component is mutagenic.",
                    "label": 1
                },
                {
                    "sent": "If it has, let's say two atoms connected by a bond, which hopefully is not the case.",
                    "label": 0
                },
                {
                    "sent": "From examples now, examples may take different forms in IO P, But one one of the, let's say, Canonical form is again clauses which usually are horn ground clauses.",
                    "label": 0
                },
                {
                    "sent": "So we know about the particular compound that contains that it is multigenic and it contains these atoms that are carbon hydrogen and there are some bones etc.",
                    "label": 0
                },
                {
                    "sent": "And so we want to generalize from a set.",
                    "label": 0
                },
                {
                    "sent": "Such examples.",
                    "label": 0
                },
                {
                    "sent": "Towards the more general rule or gloss here.",
                    "label": 1
                },
                {
                    "sent": "So obviously as you could imagine the basically the core of the TPR algorithm is that we search in the space of clauses for those that cover many positive examples, and that cover very few negative examples so.",
                    "label": 0
                },
                {
                    "sent": "What is this covering relation more precisely?",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So overall, the class coverage on a set of examples is obviously the number of examples that are covered now.",
                    "label": 1
                },
                {
                    "sent": "Clause is covered by another one if it logically entails it.",
                    "label": 1
                },
                {
                    "sent": "Of course the 1st all the order entailment relation is undecidable.",
                    "label": 0
                },
                {
                    "sent": "So for example in the case of no recursion if we don't allow recursion in the rules, then we can happily substitute the.",
                    "label": 0
                },
                {
                    "sent": "Entailment relation with Theta subsumption, which is a syntactical test.",
                    "label": 0
                },
                {
                    "sent": "Here is the definition so close D is subsumed by C with you right this way if there is a substitution for variables in C such that the literals in C are all contained in the literals in D, so that clearly is the case in.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This example.",
                    "label": 0
                },
                {
                    "sent": "Now.",
                    "label": 0
                },
                {
                    "sent": "Since we want to improve on the basic algorithm of subsumption checking, so we implemented very basic.",
                    "label": 0
                },
                {
                    "sent": "Algorithm.",
                    "label": 0
                },
                {
                    "sent": "For checking subsumption.",
                    "label": 0
                },
                {
                    "sent": "Which is based on CSP ideas.",
                    "label": 0
                },
                {
                    "sent": "I don't want to go into details about this baseline algorithm.",
                    "label": 0
                },
                {
                    "sent": "It is enough to know that it is a backtracking complete search that uses a heuristic which tries to pick variables for instantiation that are most constraint.",
                    "label": 0
                },
                {
                    "sent": "Now when there is a tie in this heuristic scoring for variables to choose, then a random choice is made.",
                    "label": 0
                },
                {
                    "sent": "Now this randomness element is important.",
                    "label": 0
                },
                {
                    "sent": "So this.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "This study that we want to present here was originally motivated by.",
                    "label": 0
                },
                {
                    "sent": "Testing how I restarted strategy for subsumption testing can help to boost performance.",
                    "label": 0
                },
                {
                    "sent": "So many of you may be familiar with.",
                    "label": 0
                },
                {
                    "sent": "Be the stream of research in the combinatorial optimization where they try to restart randomized algorithms on a given schedule.",
                    "label": 0
                },
                {
                    "sent": "For example, dynamic restart policy and it really shows that.",
                    "label": 0
                },
                {
                    "sent": "Not this often helps speed up the algorithm by orders of magnitude.",
                    "label": 0
                },
                {
                    "sent": "Briefly.",
                    "label": 0
                },
                {
                    "sent": "Why is that?",
                    "label": 0
                },
                {
                    "sent": "Well, that is big cause if you have non zero chance that you will solve the problem.",
                    "label": 0
                },
                {
                    "sent": "The one single restart, then the sequence of restarts is a sequence of independent trials, and the runtime distribution for this entire sequence is by definition exponential, right?",
                    "label": 0
                },
                {
                    "sent": "Whereas if you stick to a single search path with no restart, the runtime the expected runtime may often be infinite because you have no guarantee that the runtime distribution is exponential.",
                    "label": 0
                },
                {
                    "sent": "So that was the origin of our work.",
                    "label": 0
                },
                {
                    "sent": "We tested the previously shown basic algorithm with restarts and we discovered that the blue distributions are really.",
                    "label": 0
                },
                {
                    "sent": "Well favorable, those are there.",
                    "label": 0
                },
                {
                    "sent": "We started ones.",
                    "label": 0
                },
                {
                    "sent": "So what do the figures actually show where they show the log of probability that no solution is achieved in time shown on the X axis?",
                    "label": 0
                },
                {
                    "sent": "So what we want from these guys is to decay fast.",
                    "label": 0
                },
                {
                    "sent": "Now they restarted.",
                    "label": 0
                },
                {
                    "sent": "Strategy really decays faster than the basic non restarting so that was a nice finding however.",
                    "label": 0
                },
                {
                    "sent": "What we saw was that.",
                    "label": 0
                },
                {
                    "sent": "It is much harder on average, to prove to refutes assumption to work with the examples that are not subsumed by by the clause in question.",
                    "label": 0
                },
                {
                    "sent": "That is quite natural, because when you work with.",
                    "label": 0
                },
                {
                    "sent": "One thing important to say here is that the restart regime in the algorithm was as follows.",
                    "label": 1
                },
                {
                    "sent": "Every restart every try in the sequence of trials was.",
                    "label": 0
                },
                {
                    "sent": "Was had a length that was twice as the previous one, so it is still even if you randomize and restart the basic algorithm, it is still complete because eventually you will arrive at a trial that is long enough to refutes assumption in that your words actually search the whole finite search space.",
                    "label": 0
                },
                {
                    "sent": "The problem is that for the closest that are hard to refute.",
                    "label": 0
                },
                {
                    "sent": "You will have to restart a lot of times before you arrived at along Erycina try long enough to refute the subsumption, so we want to somehow cope with this problem.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Now our initial ideas were so if we implement the subsumption checking in the LP system, what we do?",
                    "label": 0
                },
                {
                    "sent": "You know in the?",
                    "label": 0
                },
                {
                    "sent": "Traditional LP way is that we actually try.",
                    "label": 0
                },
                {
                    "sent": "The subscription for the hypothesized clause and every example, so we eventually end up with deciding subsumption.",
                    "label": 0
                },
                {
                    "sent": "For example, for every examples.",
                    "label": 1
                },
                {
                    "sent": "Now obviously this is telling us much more than we will need to know what we want to do is rank the clauses according to their quality, and for that we don't need to know which particular examples they really cover.",
                    "label": 1
                },
                {
                    "sent": "We just want to know how many examples each of them covers.",
                    "label": 0
                },
                {
                    "sent": "Right, and Furthermore, even this number stating how many examples are covered, we don't really need to know it precisely because we eventually what we what we need is a ranking right?",
                    "label": 1
                },
                {
                    "sent": "So for ranking we can go quite happy with an estimate of the A so.",
                    "label": 0
                },
                {
                    "sent": "Are basic.",
                    "label": 1
                },
                {
                    "sent": "Improvement of the previous algorithm is a restarted coverage tester or to recover, which proceeds in the following way.",
                    "label": 0
                },
                {
                    "sent": "I run the baseline algorithm with bound resources with a limited number of steps on every example.",
                    "label": 0
                },
                {
                    "sent": "In my example set.",
                    "label": 0
                },
                {
                    "sent": "For some examples that actually are subsumed, I succeed to show that they are subsumed for some of them that are subsumed.",
                    "label": 0
                },
                {
                    "sent": "I don't succeed.",
                    "label": 0
                },
                {
                    "sent": "So in this first trial I succeeded to prove the subsumption for M1 examples, and then I repeat this whole loop again.",
                    "label": 0
                },
                {
                    "sent": "Of course, all the previously proved examples I removed from the from the example set, and similarly I get the number M2, which is probably smaller than M1.",
                    "label": 0
                },
                {
                    "sent": "I run this.",
                    "label": 0
                },
                {
                    "sent": "K * K is integer and I end up with this sequence and the basic question of this work is what does this sequence, which obviously is obtained fast well in constant time in bounded time?",
                    "label": 0
                },
                {
                    "sent": "What does this sequence tell us about the number 8 about the coverage of the cause?",
                    "label": 1
                },
                {
                    "sent": "So before before I confuse you with the math that will come like in every ice email paper.",
                    "label": 0
                },
                {
                    "sent": "I have a undergraduate level where he'll be explaining, you know, our approach to answering this question, so don't be offended.",
                    "label": 0
                },
                {
                    "sent": "And it seems that I'll have to stick to the underg.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Duet partner so.",
                    "label": 0
                },
                {
                    "sent": "This is the number of examples proved in tryone.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, and this is the actual number of examples that are covered.",
                    "label": 0
                },
                {
                    "sent": "They don't so.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "In try #2.",
                    "label": 0
                },
                {
                    "sent": "Where is it?",
                    "label": 0
                },
                {
                    "sent": "OK, I still have the M1 from the previous try but I.",
                    "label": 0
                },
                {
                    "sent": "Succeeded to prove some more OK.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "My goal like.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Yes.",
                    "label": 0
                },
                {
                    "sent": "And what I know is that this sequence forms.",
                    "label": 0
                },
                {
                    "sent": "A function is a discrete function, but for convenience let's view it as as a continuous one.",
                    "label": 0
                },
                {
                    "sent": "What do I know about this function?",
                    "label": 0
                },
                {
                    "sent": "Well, so far not much.",
                    "label": 0
                },
                {
                    "sent": "I only know that it has a limit and that limit is what I want to know.",
                    "label": 0
                },
                {
                    "sent": "The actual number are subject examples, so our motivation is can we from these first points.",
                    "label": 0
                },
                {
                    "sent": "They interpolate and then extrapolate.",
                    "label": 0
                },
                {
                    "sent": "Dysfunction.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "To eventually yield a limit now.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The assumption on which we were able to mathematically, let's say, extrapolate this to achieve the limit is as follows we.",
                    "label": 0
                },
                {
                    "sent": "I assume that given.",
                    "label": 0
                },
                {
                    "sent": "Try length you know restart but are the probability for every subset example that it will be.",
                    "label": 0
                },
                {
                    "sent": "The proven to be subsumed by the baseline algorithm is constant for all of these examples, so there is some more discussion in the in the proceedings on how this assumption is.",
                    "label": 0
                },
                {
                    "sent": "Not to which extent it is violated and how much influence it has on the performance on the algae.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Rhythm, which I'll skip here.",
                    "label": 0
                },
                {
                    "sent": "OK, so I'll be very fast about the mathematical derivation.",
                    "label": 0
                },
                {
                    "sent": "So basically what we?",
                    "label": 0
                },
                {
                    "sent": "Optimize or what we calculate is the probability of obtaining our sequence and want to MK.",
                    "label": 0
                },
                {
                    "sent": "That is dependent on the probability P of being able to prove a single example.",
                    "label": 0
                },
                {
                    "sent": "They proved this assumption for a single sample and the L number which we want, which is what we want to estimate, right?",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We maximize the.",
                    "label": 0
                },
                {
                    "sent": "Probability of obtaining the sequence on this conditions.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And what we you know, the point of all these slides is that it can be done relatively easily by differ.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Ciation.",
                    "label": 0
                },
                {
                    "sent": "Now following the method just arrived, we tested the estimation precision on randomly generated clauses and examples.",
                    "label": 0
                },
                {
                    "sent": "The.",
                    "label": 0
                },
                {
                    "sent": "As to the generation of them.",
                    "label": 0
                },
                {
                    "sent": "At here to a graph formalism which was included into the 1st Order Logic language.",
                    "label": 0
                },
                {
                    "sent": "So all of the clauses and examples are actually representations of graphs that are in one category scale free and we also tried another category of uniform random graphs of limited size.",
                    "label": 0
                },
                {
                    "sent": "So what?",
                    "label": 0
                },
                {
                    "sent": "We see here is that the this.",
                    "label": 0
                },
                {
                    "sent": "The method with with.",
                    "label": 0
                },
                {
                    "sent": "Cut off set to 100 nodes.",
                    "label": 0
                },
                {
                    "sent": "When plugged it in.",
                    "label": 0
                },
                {
                    "sent": "In a distribution of the rental counter and pounds of the subsequent examples and the estimated is relatively of low precision.",
                    "label": 0
                },
                {
                    "sent": "But as we increase the puddle, the precision increases, so this is to say that most of these marks are closer to the diagonal, which is the the correct estimate, right?",
                    "label": 0
                },
                {
                    "sent": "And now the best news.",
                    "label": 0
                },
                {
                    "sent": "Is.",
                    "label": 0
                },
                {
                    "sent": "The runtimes, So what we compare ourselves to is a state of the art algorithm for testing.",
                    "label": 0
                },
                {
                    "sent": "Subsumption is a deterministic complete algorithm called.",
                    "label": 0
                },
                {
                    "sent": "The jungle is inspired by the.",
                    "label": 0
                },
                {
                    "sent": "Constraint satisfaction framework and so far it has been shown to be the fastest subsumption tester.",
                    "label": 0
                },
                {
                    "sent": "So while we for these estimates are somewhere in the order of seven or 12 seconds for the same.",
                    "label": 0
                },
                {
                    "sent": "For the same task for this same randomly generated.",
                    "label": 0
                },
                {
                    "sent": "Classes and examples.",
                    "label": 0
                },
                {
                    "sent": "Jangra mounted two or more five almost 500 seconds so.",
                    "label": 0
                },
                {
                    "sent": "Now the obvious question would be OK.",
                    "label": 0
                },
                {
                    "sent": "So given the fact that we are imprecise, we're just estimating what effect does this have on learning.",
                    "label": 0
                },
                {
                    "sent": "So of course we're able to learn faster, but how accurate our results will be so.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "That was subject to another set of experiments where we constructed a simple bottom up learner.",
                    "label": 0
                },
                {
                    "sent": "And this test, which employed our algorithm and jungle.",
                    "label": 0
                },
                {
                    "sent": "We tested it on three versions of the mutagenesis data set, which you probably are aware of, and a further data set that describes the cat structures in engineering.",
                    "label": 0
                },
                {
                    "sent": "I don't have enough time to describe the exact differences in the representations of the three versions of the Motor Genesis task, but the important thing is with growing number with grown number.",
                    "label": 0
                },
                {
                    "sent": "Here the complexity rises, the complexity in representing the examples.",
                    "label": 0
                },
                {
                    "sent": "So the examples in the version three of mutagenesis had thousands of literals, so.",
                    "label": 0
                },
                {
                    "sent": "Working with this, this large examples is it's practically impossible in the standard LP settings, so using recover in all of these versions, we were able to work in, let's say reasoning.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Run times and.",
                    "label": 0
                },
                {
                    "sent": "What was particularly surprising is that even with the imprecise, with the only estimate, this is the last line.",
                    "label": 0
                },
                {
                    "sent": "With only the estimates of coverage, the ranking of clauses was good enough to produce the testing.",
                    "label": 0
                },
                {
                    "sent": "I mean, training, training, precision, and recall with no significant.",
                    "label": 0
                },
                {
                    "sent": "Difference from the version which uses jungle, the precise estimates.",
                    "label": 0
                },
                {
                    "sent": "Why training accuracy?",
                    "label": 0
                },
                {
                    "sent": "Because this is we are not concerned with with generalization ability, right?",
                    "label": 0
                },
                {
                    "sent": "With this practical this is more or less optimization task, thanks.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "We need to test iteration of David Uof.",
                    "label": 0
                },
                {
                    "sent": "The correct me if I'm wrong that the basic algorithm is that you do not change any.",
                    "label": 0
                },
                {
                    "sent": "So what kind of loop are you refering to so?",
                    "label": 0
                },
                {
                    "sent": "You test.",
                    "label": 0
                },
                {
                    "sent": "Each example one, so the restart length is bound by a constant.",
                    "label": 0
                },
                {
                    "sent": "It doesn't change, is that correct?",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "So how does this compare with previous sampling based methods for subsumption testing?",
                    "label": 0
                },
                {
                    "sent": "Yes, there is this work by Ashwin Srinivasan which is based on the idea that you sample a few examples from the from the test and.",
                    "label": 0
                },
                {
                    "sent": "Run the full subscription test on it.",
                    "label": 0
                },
                {
                    "sent": "The we are different in that.",
                    "label": 0
                },
                {
                    "sent": "For examples which are not subsumed by the clause, it is often very difficult to refute the subsumption.",
                    "label": 0
                },
                {
                    "sent": "It takes you a lot of computational time, so for Ashwin's work this problem remains right.",
                    "label": 0
                },
                {
                    "sent": "Even if you stick to a subsample a small sample of the training examples, some of them may be very difficult to refute from being subsumed.",
                    "label": 0
                },
                {
                    "sent": "And that raises the computational time.",
                    "label": 0
                },
                {
                    "sent": "Of course, you might argue can always you know, brutally curtailed the computations after some bounding runtime and say it's not.",
                    "label": 0
                },
                {
                    "sent": "It's not subsumed, but then you lose all the statistical guarantees.",
                    "label": 0
                },
                {
                    "sent": "Then you know all the statistics around it.",
                    "label": 0
                },
                {
                    "sent": "The computations are.",
                    "label": 0
                },
                {
                    "sent": "What about so?",
                    "label": 0
                },
                {
                    "sent": "We instead wanted to still be able to curtail.",
                    "label": 0
                },
                {
                    "sent": "So to say these difficult computations but still have those statistical reasoning behind it.",
                    "label": 0
                },
                {
                    "sent": "The guarantees also, Ashwin's approach was using the standard Prolog engine to prove.",
                    "label": 0
                },
                {
                    "sent": "As the power.",
                    "label": 0
                },
                {
                    "sent": "So for these for these testing problems it was unusable because you just cannot use product to test subsumption with thousands of literals, so there was no way we could compare ourselves.",
                    "label": 0
                },
                {
                    "sent": "Experimenting where about the work.",
                    "label": 0
                },
                {
                    "sent": "By Michelle seaberg.",
                    "label": 0
                },
                {
                    "sent": "Well Jango is is oh you mean that the different work that that?",
                    "label": 0
                },
                {
                    "sent": "Is that uses a stochastic algorithm.",
                    "label": 0
                },
                {
                    "sent": "Well, maybe one day.",
                    "label": 0
                },
                {
                    "sent": "Maybe I can give you the answer so so the baseline restarted algorithm that we use not for the coverage computation, just for the single something check, unlike the Michelle's stochastic test that one is complete.",
                    "label": 0
                },
                {
                    "sent": "So using only this if we are interested whether one particular example is covered.",
                    "label": 0
                },
                {
                    "sent": "Then the restart algorithm.",
                    "label": 0
                }
            ]
        }
    }
}