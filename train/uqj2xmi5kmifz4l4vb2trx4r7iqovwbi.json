{
    "id": "uqj2xmi5kmifz4l4vb2trx4r7iqovwbi",
    "title": "Efficiently Solving Convex Relaxations for MAP Estimation",
    "info": {
        "author": [
            "Pawan Kumar Mudigonda, Department of Engineering Science, University of Oxford"
        ],
        "published": "Aug. 29, 2008",
        "recorded": "July 2008",
        "category": [
            "Top->Computer Science->Machine Learning",
            "Top->Mathematics->Operations Research"
        ]
    },
    "url": "http://videolectures.net/icml08_mudigonda_escr/",
    "segmentation": [
        [
            "Great sorry bout that but so the aim of our work is to solve convex relaxations to get accurate maximum a posterior estimation.",
            "So for example we have this random field here.",
            "It has four random variables A to D and it's connected up.",
            "In this case we just form a very simple chain and each one of these random variables is going to take one of two labels.",
            "So either zero or one and given this random field, there are certain unary and pairwise costs associated with it.",
            "So the unit cost of.",
            "Assigning a label zero is 5.",
            "This number shown in the side of the trailers assigning ETA one is going to be a unit cost of two and similarly for B you have two four and so on.",
            "And you also have these pairwise costs for the random field, so if you have a equal to 0 and be equal to 0, then you have a pairwise close to 0 equal to 0 equal 1.",
            "Your Periscope one and so on.",
            "And these are the numbers shown in between the trellises.",
            "Now, given this random field at a particular labeling of it, say the one that is shown in red here equals zero Bo equals one, B = 0, and so on.",
            "I have a cost associated with my with my."
        ],
        [
            "And that cost is given by the sum of the unary and the pairwise course for the path that goes through that labeling.",
            "So in this case it's going to be 2 + 1 + 2 + 1 + 3 + 1 to 3, so that's going to be 13 and all.",
            "And my problem is actually to find out the minimum cost labeling and in general it turns out to be NP hard even though for this case it's going to be very simple because it's a chain and in fact any tree you can solve it quite easily.",
            "So one way of getting some sort of an approximate solution is to resort to convex relaxations for this problem."
        ],
        [
            "And our objective would be to try and solve relaxations which are tighter than the ones that are being used at this point of time and to solve them in such a way that you can actually handle the large number of variables.",
            "So we're talking about variables that correspond to image pixels, or in other words, like millions of."
        ],
        [
            "These variables.",
            "So here's an outline of the talk.",
            "Will first see how Mapu estimate is an integer program.",
            "This will allow us to look at the standard linear programming relaxation, and then we're going to add some constraints to these linear programming.",
            "Relaxation get tighter relaxation and then solve it to get better results."
        ],
        [
            "Try to obtain the integer program that start with another simple example.",
            "So we have two random variables A&B connected together and you have your unit cost associated with this random field, which I'll represent as a vector.",
            "So this vector is going to start off with this element 5, which is nothing but the cost of a taking a label 0.",
            "So that's that five there.",
            "Followed by the cost of a taking a label, one which is 2 and if I.",
            "Do this for me.",
            "I get 2 four and I can do this for any random field by just arbitrarily ordering my random variables.",
            "Now see I was given a labeling for this random variable random field.",
            "I have a taking a label, one an be taking Label 0."
        ],
        [
            "Now I'm going to try and represent this particular labeling using an overcomplete representation, so I'll have a label vector X and it's going to start off with the urban minus one where minus one always means that a is not taking that particular label, so it does not take a label 0.",
            "Followed by a one, which means that it does take a label one.",
            "And similarly for B, which does take a label 0 but does not take a label one.",
            "Right so MLP estimate was to find out the optimal label vector X."
        ],
        [
            "So let's try and formulate everything in terms of the label vector X.",
            "Now the first step to do that would be to write the sum of the unit costs and they will be given by this very simple formula.",
            "Here to verify you can see that this product is product is going to be non zero only if XI is equal 1 and in that case this too and these two cancel out and you get the unit cost that you were looking for."
        ],
        [
            "OK, you also have pairwise scores for your labeling, so let's represent that by a matrix P. That's going to start off with a lot of zero elements, which is the pairwise cost of A and itself, and of course, by definition, that's that's not going to exist in our random field.",
            "The more interesting case would be between two neighboring random variables, so a taking a label zero and be taking label zero is 0, so I'll fill that element up with zero.",
            "Followed by the cost of a taking a label 0 be Taking label, one which is 3."
        ],
        [
            "He and so on.",
            "If I if I go go on like this, I can fill up the entire entire table.",
            "OK, so the sum of the unit cost is going to be given by another very simple formula in terms of X.",
            "It's going to be this."
        ],
        [
            "And if I expand that as expected, I get a term which is quadratic in X.",
            "So let me just rewrite this using another variable, upper case X, which is going to be given by this lower case X * X transpose.",
            "Or in other words, X is equal to XIJOX I * X, so these two are equivalent."
        ],
        [
            "OK, so just a brief recap.",
            "We introduced this this label vector X which is either minus one or plus one, and then we introduce this uppercase X matrix which is given by XX transpose.",
            "An implicit in my in my definitions were.",
            "Was this constraint that every random variable is going to take only one label and that's going to turn out to be this simple linear equation?"
        ],
        [
            "So I put this all together.",
            "I'm going to minimize the sum of Union pairwise course such that all these constraints are just spoken about hold true.",
            "So if I look at this green part here, it's nothing but a linear objective function.",
            "In lower case X in upper case X, and this constraint is a linear constraint in NX again.",
            "So in that sense it's like the convex part of my integer program.",
            "But I also do have a non convex part and that is defining a non non convex feasibility region for me made up of of integer points only.",
            "And this is what is going to make my problem.",
            "How to solve?",
            "So what we've done is we've started off with an NP hard problem, maybe estimation.",
            "We end up with a hard problem which is an integer program."
        ],
        [
            "But the good thing about it is that we can now start relaxing our program to get some approximate solution."
        ],
        [
            "And the most standard of relaxations is a linear program which was first proposed by slashing and then it was later used by Wainwright and others.",
            "For example, for tree related message passing.",
            "And So what it does is it starts off by retaining the convex part, because it's something we can actually handle."
        ],
        [
            "And then it replaces my non convex constraints by a bunch of linear constraints such that I get any linear program.",
            "Now again the form of this these constraints is not important for the talk, we just simply note that it is actually in your program."
        ],
        [
            "So what is so special about this particular linear program where it turns out that it has a very?",
            "It's about another very interesting dual an to see what that jewel is.",
            "Let's take another simple example so you have 9 random variables here and this random field is going to have a variable vector Theta which is made up of my unit costs in my pairwise so those are going to define my conditional random field.",
            "Now let me take subgraphs of this particular graph, which are trees, or in this case they're either horizontal or vertical chains, and I have some fixed probability distribution over them which is denoted by this rule here.",
            "But already the parameters of this these subgraphs very, so I have blue rose which are fixed probability distributions and Red Peters, which are variables for the para meters of my of my trees.",
            "No, not let my parameters vary arbitrarily.",
            "I'm going to ensure that the expectation of these parameters is the original para meter that had been given to me.",
            "OK or or not?",
            "Not not really equal, but the parameterization of it, which means that the energy for any particular labeling for this particular para meter is going to be the same as the energy for the labeling for this particular parameter.",
            "So sort of equal length in some."
        ],
        [
            "OK, because I'm letting my my para meters very.",
            "I'm letting my AP estimate for each one of these trees very as well.",
            "So I have value for the MAP value for this particular tree, which I'm going to denote by Q of Theta one and so on.",
            "And I'll try to maximize the expectation of this particular.",
            "Expectation of the MLP estimate of these trees.",
            "I know what I'll end up with isn't.",
            "Is another programming problem which is going to be nothing but the dual of the standard LP that we saw and the proof is given by Wainwright and maybe even this late in the paper.",
            "Now what is it?",
            "What is good about this particular deal?",
            "Is that we first started off with the problem which we can solve, so we couldn't actually get the MLP estimate of this thing, But what we ended up ending up getting here are terms which he can compute.",
            "So Q of Theta, I being the MP estimate of a tree is going to involve just say simple BP or dynamic programming.",
            "What are you getting?",
            "Is A is a deal that he can handle now."
        ],
        [
            "And in fact there are a lot of algorithms proposed to solve this deal.",
            "We're going to focus on only one of them by Kolmogorov called Tree related message passing sequential.",
            "So what it does is it starts off with the trees that we that we got from our original random field.",
            "And it has its variable Theta para meters.",
            "Now it's going to pick up any variable from this particular random field.",
            "So I have say a.",
            "And then once I picked up a, I'm going to use all the trees that contain that variable A.",
            "Then I would re parameterized these trees such that the unary costs of a is nothing but it's min marginals an even though that sounds may be complicated, it's only one passive belief propagation, so I'm going to pass messages from C2A for this tree Ann from G2A for this tree, and then U1U2U3 and U4 are going to be the corresponding min marginals for that tree."
        ],
        [
            "Now the second step is equally simple.",
            "We're going to average out these Unicode.",
            "So instead of having a U-1 here in EU 3 here, allow you one plus you three by two and a UN plus you three by two here and.",
            "I'll just keep continuing this for all the variables until I actually come to a point where I can't go any further.",
            "And because we're going to do this in a sequential manner of picking up variables, this algorithm is called tree related, sequential or TWS for so short."
        ],
        [
            "Right, so that's that's the standard linear program.",
            "The standard dual for it, and a good way of actually solving solving this particular deal.",
            "But what if you want to now get to a better relaxation?",
            "Can we actually get to better relaxation?",
            "And is it really going to help us in practice?"
        ],
        [
            "Well, it turns out that you actually can't get to a better relaxation by just adding some of these initial constraints that people have been working on before, and one of them is cycle inequalities.",
            "So to explain that again, I take a simple random field and choose a subgraph of it, which forms a cycle.",
            "So in this case I've chosen AD&E and using that I pick up three elements of my X vector.",
            "So I have XI corresponding to this label for a XJ and XK.",
            "Now these need not be the same labels, and it may not be just two labels for the random field.",
            "It can be any arbitrary one.",
            "Now because I have XIXJNXK and all of them are going to take either minus one or plus one, I know two of them are going to be equal.",
            "Which means I let's take their pairwise products and then simplify using X = X X transpose.",
            "So I get these three terms here.",
            "Now I know that.",
            "Becausw 2 of them had were equal at least one of these terms is actually going to be equal to 1.",
            "So if I add them up, I should get a number which is greater than or equal to minus one.",
            "So I have to say this guy is minus one.",
            "This guy is minus one that would imply that this guy is 1.",
            "So if I actually take this summation that you're going to get a number greater than equal minus one."
        ],
        [
            "Right, so I don't need to restrict myself to say A3 cycle.",
            "I can choose a four cycle, for example, choose these four elements and get another linear inequality.",
            "And of course, this generalizes to all possible cycles, so if I can actually add these to my AP estimation linear program, I get a much tighter linear programming relaxation, which our goal LPC where C stands for cycles."
        ],
        [
            "OK, I don't need to restrict myself to just just linear inequalities.",
            "I can go for 2nd order cone constraints and some of these we proposed in our in our earlier work.",
            "So say again, pick up a 3 cycle.",
            "And this is going to give me a sub vector of my vector X which is which is going to be made up of XI XJ and XK, and I'm going to get a submatrix of X which is going to be diagonal and one because minus 1 + 1 ^2 is going to be equal 1.",
            "By my constraints, I know that this IXI matrix is going to be XYXY transpose, which means I can then get a semidefinite relaxation for it.",
            "And I can relax it even further by taking the difference between these two matrices, which is positive semidefinite.",
            "Multiply that or do in a product of that with a matrix of all ones.",
            "And because this is going to be positive definite as well, I get a non negative number.",
            "So let me just expand that and what I get is a second order cone constraint, which is quite similar to the one that we were seeing before with the cycle inequalities.",
            "But the good thing about all, sorry.",
            "So if I if I were to add this into my linear program, I get a second order cone programming problem, which I call socc again CS4."
        ],
        [
            "Michaels.",
            "The good thing about second order cone program code constraints is that you don't need to restrict yourself to cycles, so I say I take a four clique.",
            "Hi again, get some some vector answer matrix for this Ann.",
            "I can again simplify that by taking its inner product with another process, semi definite matrix and.",
            "And get another relaxation.",
            "So I called this particular laxation SoC BQ, where Q stands for clicks."
        ],
        [
            "Right, so it can be shown that if you actually add these extra constraints into your standard linear program, you get a much better relaxation.",
            "But better just means that it's going to be more accurate.",
            "We also obviously need a way to solve these relaxation."
        ],
        [
            "And the way we're going to do it is we will modify the dual to begin with.",
            "So first I had some trees and some some probability distribution rule over them.",
            "And that gave me my module for the linear program.",
            "Now I also have these cycles or cliques or any other subgraphs, and I have some other probability distribution mu over them.",
            "And the way it's going to modify the dual is that it's going to add this extra term in my objective function for every one of these cycles, and this extra term in my constraint for every one of these cycles or clicks or whatever it is that you are chosen."
        ],
        [
            "And using that you will be now going to extend TRW S so that we can actually solve it approximately.",
            "So now we have our trees and cycles.",
            "Again, like the obvious, we're going to pick up only one variable at a time.",
            "And using that, we're going to pick up a cycle.",
            "So in this case we only have one cycle, which which contains a, which is that.",
            "OK, so once you've picked up that particular cycle.",
            "Once we picked up that particular cycle, we have also picked up some subtrees which we have defined for TRW S becausw weaken.",
            "It contained a BADDE&B.",
            "We're going to pick up those subtrees there.",
            "And using that, we're going to define a much smaller objective.",
            "Much smaller programming problem.",
            "Which we can solve quite efficiently.",
            "So because it is made up of just one cycle, we just give it safe to an interior point algorithm and we get the solution back in a matter of seconds.",
            "And once we've done that, we can run TWS for the trees are contained A and in some sense we're going to do this coordinate descent and keep repeating till we do not end up at till we end up at a place where we can."
        ],
        [
            "Any further?",
            "Right so briefly, there's some properties of the algorithm.",
            "It always satisfies all the constraints that we had in our dual.",
            "The value of the dual never decreases, which means becauses bounded problem.",
            "It's going to converge.",
            "The solution is going to satisfy the constraint that TRW S requires for convergence, which is known as weekly agreement.",
            "But that is not going to be sufficient for convergence, so where where TRW stops, our algorithm would still go forward, or in other words, it's going to be more accurate than DWS."
        ],
        [
            "Now, the proofs of these these things are sort of given in our tech."
        ],
        [
            "Code but.",
            "Just to conclude, with some results we have say a great graph made up of these four cycles here.",
            "Which means we can now define some linear constraints and 2nd order constraints on this on this particular graph.",
            "So he generated 30 such 50 such random fields of size 30 by 30.",
            "We got some unique potentials made up of normal distributions.",
            "Various potentials again normally."
        ],
        [
            "Solutions, which means that what we end up with is a non submodular problem with a lot of frustrated cycles.",
            "And it turns out that TRW is not even going to do as well as BP in problems like these.",
            "But if we add some extra constraints on our cycles, say linear programming or second order cone programming, then we actually beat BP in this case.",
            "I'm looking at the dual.",
            "It also turns out that cycle inequalities are actually going to be much better than second order cone constraints, so we have some empirical evidence that linear programming dominates 2nd order cone programming in this case."
        ],
        [
            "Now you can also do this for eight cycles and you know because we have cliques.",
            "Now we can.",
            "We can test 2nd order cone programming Q.",
            "Again, is it?"
        ],
        [
            "A similar set up an.",
            "It turns out again that TRW will actually be beaten by BP because of all a lot of frustrated cycles, but we're going to do better when we use the LP or SDP.",
            "And in fact, looking at the dual, it turns out that SCP would be slightly better than LP as well, and this kind of gives some empirical proof.",
            "Maybe that that second order cone programming can sometimes do better than cycle."
        ],
        [
            "Qualities.",
            "OK, so on that note, let me conclude we modified the LP dual to include more constraints.",
            "We extended the RWS to solve this tighter dual and experiment show that you get some results.",
            "You get some better results and more more such."
        ],
        [
            "Is also given in our poster.",
            "Finally, some future work we would actually like to use some more efficient subroutines instead of just using a standard interior point for program programming algorithm for cycles and clicks.",
            "This is going to speed up the subroutine in our.",
            "In our work we would also like to use some more accurate LP solvers, like approximate projections that was talked about in the in the morning and finally some theoretical analysis of 2nd order cones versus cycle inequalities."
        ],
        [
            "Be interesting as well.",
            "So if there are any questions, I'd be happy to answer.",
            "Yeah, the click web inequalities actually would.",
            "Steps.",
            "For all the sorry.",
            "So.",
            "This summer Yep.",
            "We did actually.",
            "We did actually put in click web inequalities, linear click web inequalities into our program as well, and that would do better than second order cone constraints.",
            "And those are faster defining defining.",
            "Well, that's that's exactly going to be.",
            "That's exactly what we tried.",
            "Like I said, and it does better than second order cone constraints.",
            "But there is somewhere in between where we are.",
            "Second order cone constraints would do better than cycle inequalities.",
            "Not as good as clique.",
            "Should be interesting to find out what those are, I guess."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Great sorry bout that but so the aim of our work is to solve convex relaxations to get accurate maximum a posterior estimation.",
                    "label": 1
                },
                {
                    "sent": "So for example we have this random field here.",
                    "label": 1
                },
                {
                    "sent": "It has four random variables A to D and it's connected up.",
                    "label": 0
                },
                {
                    "sent": "In this case we just form a very simple chain and each one of these random variables is going to take one of two labels.",
                    "label": 0
                },
                {
                    "sent": "So either zero or one and given this random field, there are certain unary and pairwise costs associated with it.",
                    "label": 0
                },
                {
                    "sent": "So the unit cost of.",
                    "label": 0
                },
                {
                    "sent": "Assigning a label zero is 5.",
                    "label": 0
                },
                {
                    "sent": "This number shown in the side of the trailers assigning ETA one is going to be a unit cost of two and similarly for B you have two four and so on.",
                    "label": 0
                },
                {
                    "sent": "And you also have these pairwise costs for the random field, so if you have a equal to 0 and be equal to 0, then you have a pairwise close to 0 equal to 0 equal 1.",
                    "label": 0
                },
                {
                    "sent": "Your Periscope one and so on.",
                    "label": 0
                },
                {
                    "sent": "And these are the numbers shown in between the trellises.",
                    "label": 0
                },
                {
                    "sent": "Now, given this random field at a particular labeling of it, say the one that is shown in red here equals zero Bo equals one, B = 0, and so on.",
                    "label": 0
                },
                {
                    "sent": "I have a cost associated with my with my.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And that cost is given by the sum of the unary and the pairwise course for the path that goes through that labeling.",
                    "label": 0
                },
                {
                    "sent": "So in this case it's going to be 2 + 1 + 2 + 1 + 3 + 1 to 3, so that's going to be 13 and all.",
                    "label": 1
                },
                {
                    "sent": "And my problem is actually to find out the minimum cost labeling and in general it turns out to be NP hard even though for this case it's going to be very simple because it's a chain and in fact any tree you can solve it quite easily.",
                    "label": 0
                },
                {
                    "sent": "So one way of getting some sort of an approximate solution is to resort to convex relaxations for this problem.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And our objective would be to try and solve relaxations which are tighter than the ones that are being used at this point of time and to solve them in such a way that you can actually handle the large number of variables.",
                    "label": 0
                },
                {
                    "sent": "So we're talking about variables that correspond to image pixels, or in other words, like millions of.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "These variables.",
                    "label": 0
                },
                {
                    "sent": "So here's an outline of the talk.",
                    "label": 0
                },
                {
                    "sent": "Will first see how Mapu estimate is an integer program.",
                    "label": 0
                },
                {
                    "sent": "This will allow us to look at the standard linear programming relaxation, and then we're going to add some constraints to these linear programming.",
                    "label": 1
                },
                {
                    "sent": "Relaxation get tighter relaxation and then solve it to get better results.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Try to obtain the integer program that start with another simple example.",
                    "label": 0
                },
                {
                    "sent": "So we have two random variables A&B connected together and you have your unit cost associated with this random field, which I'll represent as a vector.",
                    "label": 0
                },
                {
                    "sent": "So this vector is going to start off with this element 5, which is nothing but the cost of a taking a label 0.",
                    "label": 1
                },
                {
                    "sent": "So that's that five there.",
                    "label": 1
                },
                {
                    "sent": "Followed by the cost of a taking a label, one which is 2 and if I.",
                    "label": 0
                },
                {
                    "sent": "Do this for me.",
                    "label": 0
                },
                {
                    "sent": "I get 2 four and I can do this for any random field by just arbitrarily ordering my random variables.",
                    "label": 0
                },
                {
                    "sent": "Now see I was given a labeling for this random variable random field.",
                    "label": 0
                },
                {
                    "sent": "I have a taking a label, one an be taking Label 0.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Now I'm going to try and represent this particular labeling using an overcomplete representation, so I'll have a label vector X and it's going to start off with the urban minus one where minus one always means that a is not taking that particular label, so it does not take a label 0.",
                    "label": 0
                },
                {
                    "sent": "Followed by a one, which means that it does take a label one.",
                    "label": 0
                },
                {
                    "sent": "And similarly for B, which does take a label 0 but does not take a label one.",
                    "label": 0
                },
                {
                    "sent": "Right so MLP estimate was to find out the optimal label vector X.",
                    "label": 1
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So let's try and formulate everything in terms of the label vector X.",
                    "label": 1
                },
                {
                    "sent": "Now the first step to do that would be to write the sum of the unit costs and they will be given by this very simple formula.",
                    "label": 0
                },
                {
                    "sent": "Here to verify you can see that this product is product is going to be non zero only if XI is equal 1 and in that case this too and these two cancel out and you get the unit cost that you were looking for.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, you also have pairwise scores for your labeling, so let's represent that by a matrix P. That's going to start off with a lot of zero elements, which is the pairwise cost of A and itself, and of course, by definition, that's that's not going to exist in our random field.",
                    "label": 1
                },
                {
                    "sent": "The more interesting case would be between two neighboring random variables, so a taking a label zero and be taking label zero is 0, so I'll fill that element up with zero.",
                    "label": 0
                },
                {
                    "sent": "Followed by the cost of a taking a label 0 be Taking label, one which is 3.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "He and so on.",
                    "label": 0
                },
                {
                    "sent": "If I if I go go on like this, I can fill up the entire entire table.",
                    "label": 0
                },
                {
                    "sent": "OK, so the sum of the unit cost is going to be given by another very simple formula in terms of X.",
                    "label": 0
                },
                {
                    "sent": "It's going to be this.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And if I expand that as expected, I get a term which is quadratic in X.",
                    "label": 0
                },
                {
                    "sent": "So let me just rewrite this using another variable, upper case X, which is going to be given by this lower case X * X transpose.",
                    "label": 0
                },
                {
                    "sent": "Or in other words, X is equal to XIJOX I * X, so these two are equivalent.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so just a brief recap.",
                    "label": 0
                },
                {
                    "sent": "We introduced this this label vector X which is either minus one or plus one, and then we introduce this uppercase X matrix which is given by XX transpose.",
                    "label": 0
                },
                {
                    "sent": "An implicit in my in my definitions were.",
                    "label": 0
                },
                {
                    "sent": "Was this constraint that every random variable is going to take only one label and that's going to turn out to be this simple linear equation?",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So I put this all together.",
                    "label": 0
                },
                {
                    "sent": "I'm going to minimize the sum of Union pairwise course such that all these constraints are just spoken about hold true.",
                    "label": 0
                },
                {
                    "sent": "So if I look at this green part here, it's nothing but a linear objective function.",
                    "label": 0
                },
                {
                    "sent": "In lower case X in upper case X, and this constraint is a linear constraint in NX again.",
                    "label": 0
                },
                {
                    "sent": "So in that sense it's like the convex part of my integer program.",
                    "label": 0
                },
                {
                    "sent": "But I also do have a non convex part and that is defining a non non convex feasibility region for me made up of of integer points only.",
                    "label": 0
                },
                {
                    "sent": "And this is what is going to make my problem.",
                    "label": 0
                },
                {
                    "sent": "How to solve?",
                    "label": 0
                },
                {
                    "sent": "So what we've done is we've started off with an NP hard problem, maybe estimation.",
                    "label": 0
                },
                {
                    "sent": "We end up with a hard problem which is an integer program.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "But the good thing about it is that we can now start relaxing our program to get some approximate solution.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And the most standard of relaxations is a linear program which was first proposed by slashing and then it was later used by Wainwright and others.",
                    "label": 0
                },
                {
                    "sent": "For example, for tree related message passing.",
                    "label": 0
                },
                {
                    "sent": "And So what it does is it starts off by retaining the convex part, because it's something we can actually handle.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And then it replaces my non convex constraints by a bunch of linear constraints such that I get any linear program.",
                    "label": 0
                },
                {
                    "sent": "Now again the form of this these constraints is not important for the talk, we just simply note that it is actually in your program.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So what is so special about this particular linear program where it turns out that it has a very?",
                    "label": 0
                },
                {
                    "sent": "It's about another very interesting dual an to see what that jewel is.",
                    "label": 0
                },
                {
                    "sent": "Let's take another simple example so you have 9 random variables here and this random field is going to have a variable vector Theta which is made up of my unit costs in my pairwise so those are going to define my conditional random field.",
                    "label": 0
                },
                {
                    "sent": "Now let me take subgraphs of this particular graph, which are trees, or in this case they're either horizontal or vertical chains, and I have some fixed probability distribution over them which is denoted by this rule here.",
                    "label": 0
                },
                {
                    "sent": "But already the parameters of this these subgraphs very, so I have blue rose which are fixed probability distributions and Red Peters, which are variables for the para meters of my of my trees.",
                    "label": 0
                },
                {
                    "sent": "No, not let my parameters vary arbitrarily.",
                    "label": 0
                },
                {
                    "sent": "I'm going to ensure that the expectation of these parameters is the original para meter that had been given to me.",
                    "label": 0
                },
                {
                    "sent": "OK or or not?",
                    "label": 0
                },
                {
                    "sent": "Not not really equal, but the parameterization of it, which means that the energy for any particular labeling for this particular para meter is going to be the same as the energy for the labeling for this particular parameter.",
                    "label": 0
                },
                {
                    "sent": "So sort of equal length in some.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, because I'm letting my my para meters very.",
                    "label": 0
                },
                {
                    "sent": "I'm letting my AP estimate for each one of these trees very as well.",
                    "label": 0
                },
                {
                    "sent": "So I have value for the MAP value for this particular tree, which I'm going to denote by Q of Theta one and so on.",
                    "label": 0
                },
                {
                    "sent": "And I'll try to maximize the expectation of this particular.",
                    "label": 0
                },
                {
                    "sent": "Expectation of the MLP estimate of these trees.",
                    "label": 0
                },
                {
                    "sent": "I know what I'll end up with isn't.",
                    "label": 0
                },
                {
                    "sent": "Is another programming problem which is going to be nothing but the dual of the standard LP that we saw and the proof is given by Wainwright and maybe even this late in the paper.",
                    "label": 0
                },
                {
                    "sent": "Now what is it?",
                    "label": 0
                },
                {
                    "sent": "What is good about this particular deal?",
                    "label": 0
                },
                {
                    "sent": "Is that we first started off with the problem which we can solve, so we couldn't actually get the MLP estimate of this thing, But what we ended up ending up getting here are terms which he can compute.",
                    "label": 0
                },
                {
                    "sent": "So Q of Theta, I being the MP estimate of a tree is going to involve just say simple BP or dynamic programming.",
                    "label": 0
                },
                {
                    "sent": "What are you getting?",
                    "label": 0
                },
                {
                    "sent": "Is A is a deal that he can handle now.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And in fact there are a lot of algorithms proposed to solve this deal.",
                    "label": 0
                },
                {
                    "sent": "We're going to focus on only one of them by Kolmogorov called Tree related message passing sequential.",
                    "label": 1
                },
                {
                    "sent": "So what it does is it starts off with the trees that we that we got from our original random field.",
                    "label": 0
                },
                {
                    "sent": "And it has its variable Theta para meters.",
                    "label": 0
                },
                {
                    "sent": "Now it's going to pick up any variable from this particular random field.",
                    "label": 0
                },
                {
                    "sent": "So I have say a.",
                    "label": 0
                },
                {
                    "sent": "And then once I picked up a, I'm going to use all the trees that contain that variable A.",
                    "label": 1
                },
                {
                    "sent": "Then I would re parameterized these trees such that the unary costs of a is nothing but it's min marginals an even though that sounds may be complicated, it's only one passive belief propagation, so I'm going to pass messages from C2A for this tree Ann from G2A for this tree, and then U1U2U3 and U4 are going to be the corresponding min marginals for that tree.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Now the second step is equally simple.",
                    "label": 0
                },
                {
                    "sent": "We're going to average out these Unicode.",
                    "label": 0
                },
                {
                    "sent": "So instead of having a U-1 here in EU 3 here, allow you one plus you three by two and a UN plus you three by two here and.",
                    "label": 0
                },
                {
                    "sent": "I'll just keep continuing this for all the variables until I actually come to a point where I can't go any further.",
                    "label": 0
                },
                {
                    "sent": "And because we're going to do this in a sequential manner of picking up variables, this algorithm is called tree related, sequential or TWS for so short.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Right, so that's that's the standard linear program.",
                    "label": 0
                },
                {
                    "sent": "The standard dual for it, and a good way of actually solving solving this particular deal.",
                    "label": 0
                },
                {
                    "sent": "But what if you want to now get to a better relaxation?",
                    "label": 0
                },
                {
                    "sent": "Can we actually get to better relaxation?",
                    "label": 0
                },
                {
                    "sent": "And is it really going to help us in practice?",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Well, it turns out that you actually can't get to a better relaxation by just adding some of these initial constraints that people have been working on before, and one of them is cycle inequalities.",
                    "label": 1
                },
                {
                    "sent": "So to explain that again, I take a simple random field and choose a subgraph of it, which forms a cycle.",
                    "label": 0
                },
                {
                    "sent": "So in this case I've chosen AD&E and using that I pick up three elements of my X vector.",
                    "label": 0
                },
                {
                    "sent": "So I have XI corresponding to this label for a XJ and XK.",
                    "label": 0
                },
                {
                    "sent": "Now these need not be the same labels, and it may not be just two labels for the random field.",
                    "label": 0
                },
                {
                    "sent": "It can be any arbitrary one.",
                    "label": 0
                },
                {
                    "sent": "Now because I have XIXJNXK and all of them are going to take either minus one or plus one, I know two of them are going to be equal.",
                    "label": 0
                },
                {
                    "sent": "Which means I let's take their pairwise products and then simplify using X = X X transpose.",
                    "label": 0
                },
                {
                    "sent": "So I get these three terms here.",
                    "label": 0
                },
                {
                    "sent": "Now I know that.",
                    "label": 0
                },
                {
                    "sent": "Becausw 2 of them had were equal at least one of these terms is actually going to be equal to 1.",
                    "label": 1
                },
                {
                    "sent": "So if I add them up, I should get a number which is greater than or equal to minus one.",
                    "label": 1
                },
                {
                    "sent": "So I have to say this guy is minus one.",
                    "label": 0
                },
                {
                    "sent": "This guy is minus one that would imply that this guy is 1.",
                    "label": 0
                },
                {
                    "sent": "So if I actually take this summation that you're going to get a number greater than equal minus one.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Right, so I don't need to restrict myself to say A3 cycle.",
                    "label": 0
                },
                {
                    "sent": "I can choose a four cycle, for example, choose these four elements and get another linear inequality.",
                    "label": 0
                },
                {
                    "sent": "And of course, this generalizes to all possible cycles, so if I can actually add these to my AP estimation linear program, I get a much tighter linear programming relaxation, which our goal LPC where C stands for cycles.",
                    "label": 1
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, I don't need to restrict myself to just just linear inequalities.",
                    "label": 0
                },
                {
                    "sent": "I can go for 2nd order cone constraints and some of these we proposed in our in our earlier work.",
                    "label": 0
                },
                {
                    "sent": "So say again, pick up a 3 cycle.",
                    "label": 0
                },
                {
                    "sent": "And this is going to give me a sub vector of my vector X which is which is going to be made up of XI XJ and XK, and I'm going to get a submatrix of X which is going to be diagonal and one because minus 1 + 1 ^2 is going to be equal 1.",
                    "label": 0
                },
                {
                    "sent": "By my constraints, I know that this IXI matrix is going to be XYXY transpose, which means I can then get a semidefinite relaxation for it.",
                    "label": 0
                },
                {
                    "sent": "And I can relax it even further by taking the difference between these two matrices, which is positive semidefinite.",
                    "label": 0
                },
                {
                    "sent": "Multiply that or do in a product of that with a matrix of all ones.",
                    "label": 0
                },
                {
                    "sent": "And because this is going to be positive definite as well, I get a non negative number.",
                    "label": 0
                },
                {
                    "sent": "So let me just expand that and what I get is a second order cone constraint, which is quite similar to the one that we were seeing before with the cycle inequalities.",
                    "label": 0
                },
                {
                    "sent": "But the good thing about all, sorry.",
                    "label": 0
                },
                {
                    "sent": "So if I if I were to add this into my linear program, I get a second order cone programming problem, which I call socc again CS4.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Michaels.",
                    "label": 0
                },
                {
                    "sent": "The good thing about second order cone program code constraints is that you don't need to restrict yourself to cycles, so I say I take a four clique.",
                    "label": 0
                },
                {
                    "sent": "Hi again, get some some vector answer matrix for this Ann.",
                    "label": 0
                },
                {
                    "sent": "I can again simplify that by taking its inner product with another process, semi definite matrix and.",
                    "label": 0
                },
                {
                    "sent": "And get another relaxation.",
                    "label": 0
                },
                {
                    "sent": "So I called this particular laxation SoC BQ, where Q stands for clicks.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Right, so it can be shown that if you actually add these extra constraints into your standard linear program, you get a much better relaxation.",
                    "label": 0
                },
                {
                    "sent": "But better just means that it's going to be more accurate.",
                    "label": 0
                },
                {
                    "sent": "We also obviously need a way to solve these relaxation.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And the way we're going to do it is we will modify the dual to begin with.",
                    "label": 0
                },
                {
                    "sent": "So first I had some trees and some some probability distribution rule over them.",
                    "label": 0
                },
                {
                    "sent": "And that gave me my module for the linear program.",
                    "label": 0
                },
                {
                    "sent": "Now I also have these cycles or cliques or any other subgraphs, and I have some other probability distribution mu over them.",
                    "label": 0
                },
                {
                    "sent": "And the way it's going to modify the dual is that it's going to add this extra term in my objective function for every one of these cycles, and this extra term in my constraint for every one of these cycles or clicks or whatever it is that you are chosen.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And using that you will be now going to extend TRW S so that we can actually solve it approximately.",
                    "label": 0
                },
                {
                    "sent": "So now we have our trees and cycles.",
                    "label": 0
                },
                {
                    "sent": "Again, like the obvious, we're going to pick up only one variable at a time.",
                    "label": 0
                },
                {
                    "sent": "And using that, we're going to pick up a cycle.",
                    "label": 0
                },
                {
                    "sent": "So in this case we only have one cycle, which which contains a, which is that.",
                    "label": 0
                },
                {
                    "sent": "OK, so once you've picked up that particular cycle.",
                    "label": 0
                },
                {
                    "sent": "Once we picked up that particular cycle, we have also picked up some subtrees which we have defined for TRW S becausw weaken.",
                    "label": 0
                },
                {
                    "sent": "It contained a BADDE&B.",
                    "label": 0
                },
                {
                    "sent": "We're going to pick up those subtrees there.",
                    "label": 0
                },
                {
                    "sent": "And using that, we're going to define a much smaller objective.",
                    "label": 0
                },
                {
                    "sent": "Much smaller programming problem.",
                    "label": 0
                },
                {
                    "sent": "Which we can solve quite efficiently.",
                    "label": 0
                },
                {
                    "sent": "So because it is made up of just one cycle, we just give it safe to an interior point algorithm and we get the solution back in a matter of seconds.",
                    "label": 0
                },
                {
                    "sent": "And once we've done that, we can run TWS for the trees are contained A and in some sense we're going to do this coordinate descent and keep repeating till we do not end up at till we end up at a place where we can.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Any further?",
                    "label": 0
                },
                {
                    "sent": "Right so briefly, there's some properties of the algorithm.",
                    "label": 1
                },
                {
                    "sent": "It always satisfies all the constraints that we had in our dual.",
                    "label": 0
                },
                {
                    "sent": "The value of the dual never decreases, which means becauses bounded problem.",
                    "label": 1
                },
                {
                    "sent": "It's going to converge.",
                    "label": 0
                },
                {
                    "sent": "The solution is going to satisfy the constraint that TRW S requires for convergence, which is known as weekly agreement.",
                    "label": 0
                },
                {
                    "sent": "But that is not going to be sufficient for convergence, so where where TRW stops, our algorithm would still go forward, or in other words, it's going to be more accurate than DWS.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Now, the proofs of these these things are sort of given in our tech.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Code but.",
                    "label": 0
                },
                {
                    "sent": "Just to conclude, with some results we have say a great graph made up of these four cycles here.",
                    "label": 0
                },
                {
                    "sent": "Which means we can now define some linear constraints and 2nd order constraints on this on this particular graph.",
                    "label": 0
                },
                {
                    "sent": "So he generated 30 such 50 such random fields of size 30 by 30.",
                    "label": 1
                },
                {
                    "sent": "We got some unique potentials made up of normal distributions.",
                    "label": 0
                },
                {
                    "sent": "Various potentials again normally.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Solutions, which means that what we end up with is a non submodular problem with a lot of frustrated cycles.",
                    "label": 0
                },
                {
                    "sent": "And it turns out that TRW is not even going to do as well as BP in problems like these.",
                    "label": 0
                },
                {
                    "sent": "But if we add some extra constraints on our cycles, say linear programming or second order cone programming, then we actually beat BP in this case.",
                    "label": 0
                },
                {
                    "sent": "I'm looking at the dual.",
                    "label": 0
                },
                {
                    "sent": "It also turns out that cycle inequalities are actually going to be much better than second order cone constraints, so we have some empirical evidence that linear programming dominates 2nd order cone programming in this case.",
                    "label": 0
                }
            ]
        },
        "clip_31": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Now you can also do this for eight cycles and you know because we have cliques.",
                    "label": 0
                },
                {
                    "sent": "Now we can.",
                    "label": 0
                },
                {
                    "sent": "We can test 2nd order cone programming Q.",
                    "label": 0
                },
                {
                    "sent": "Again, is it?",
                    "label": 0
                }
            ]
        },
        "clip_32": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "A similar set up an.",
                    "label": 0
                },
                {
                    "sent": "It turns out again that TRW will actually be beaten by BP because of all a lot of frustrated cycles, but we're going to do better when we use the LP or SDP.",
                    "label": 0
                },
                {
                    "sent": "And in fact, looking at the dual, it turns out that SCP would be slightly better than LP as well, and this kind of gives some empirical proof.",
                    "label": 0
                },
                {
                    "sent": "Maybe that that second order cone programming can sometimes do better than cycle.",
                    "label": 0
                }
            ]
        },
        "clip_33": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Qualities.",
                    "label": 0
                },
                {
                    "sent": "OK, so on that note, let me conclude we modified the LP dual to include more constraints.",
                    "label": 1
                },
                {
                    "sent": "We extended the RWS to solve this tighter dual and experiment show that you get some results.",
                    "label": 0
                },
                {
                    "sent": "You get some better results and more more such.",
                    "label": 0
                }
            ]
        },
        "clip_34": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Is also given in our poster.",
                    "label": 0
                },
                {
                    "sent": "Finally, some future work we would actually like to use some more efficient subroutines instead of just using a standard interior point for program programming algorithm for cycles and clicks.",
                    "label": 0
                },
                {
                    "sent": "This is going to speed up the subroutine in our.",
                    "label": 0
                },
                {
                    "sent": "In our work we would also like to use some more accurate LP solvers, like approximate projections that was talked about in the in the morning and finally some theoretical analysis of 2nd order cones versus cycle inequalities.",
                    "label": 1
                }
            ]
        },
        "clip_35": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Be interesting as well.",
                    "label": 0
                },
                {
                    "sent": "So if there are any questions, I'd be happy to answer.",
                    "label": 0
                },
                {
                    "sent": "Yeah, the click web inequalities actually would.",
                    "label": 0
                },
                {
                    "sent": "Steps.",
                    "label": 0
                },
                {
                    "sent": "For all the sorry.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "This summer Yep.",
                    "label": 0
                },
                {
                    "sent": "We did actually.",
                    "label": 0
                },
                {
                    "sent": "We did actually put in click web inequalities, linear click web inequalities into our program as well, and that would do better than second order cone constraints.",
                    "label": 0
                },
                {
                    "sent": "And those are faster defining defining.",
                    "label": 0
                },
                {
                    "sent": "Well, that's that's exactly going to be.",
                    "label": 0
                },
                {
                    "sent": "That's exactly what we tried.",
                    "label": 0
                },
                {
                    "sent": "Like I said, and it does better than second order cone constraints.",
                    "label": 0
                },
                {
                    "sent": "But there is somewhere in between where we are.",
                    "label": 0
                },
                {
                    "sent": "Second order cone constraints would do better than cycle inequalities.",
                    "label": 0
                },
                {
                    "sent": "Not as good as clique.",
                    "label": 0
                },
                {
                    "sent": "Should be interesting to find out what those are, I guess.",
                    "label": 0
                }
            ]
        }
    }
}