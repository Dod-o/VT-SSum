{
    "id": "ixweo7kt2bl75b4yng56y7e7juu7xb3r",
    "title": "A Quadratic Programming Approach to the Graph Edit Distance Problem",
    "info": {
        "author": [
            "Horst Bunke, University of Bern"
        ],
        "published": "July 12, 2007",
        "recorded": "June 2007",
        "category": [
            "Top->Computer Science->Algorithms and Data Structures",
            "Top->Mathematics->Graph Theory",
            "Top->Mathematics->Operations Research"
        ]
    },
    "url": "http://videolectures.net/gbr07_bunke_aqpa/",
    "segmentation": [
        [
            "OK.",
            "So this is work that was done by my previous PhD student, Michelle Neuhaus.",
            "OK, yes, and this is again about the graph edit distance problem."
        ],
        [
            "And S we have heard today already.",
            "So measuring the distance or the similarity of graphs is a very important task in pattern recognition and related areas.",
            "And graph any distance is one of the most general graph distance measures where there are a number of distance measures.",
            "But graph Edit distance is in particular interesting because first of all it can be applied to virtually any type of graphs.",
            "You can have unlabeled graphs or labeled graphs if we have labeled graphs, the label can be of any kind.",
            "It can be symbolic labels.",
            "It can be numerical labels.",
            "It can be whole attribute vectors attached to the notes or the edges, or both the notes and the edges.",
            "And also we can introduce a problem specific knowledge through the cost of the edit operations.",
            "And if we don't have such knowledge, we can automatically infer.",
            "From a training set of graphs, appropriate cost functions.",
            "So anyway, graph edit distance measures the distance of a pair of graphs in terms of the minimum number of edit operations that are required to transform one graph into the other.",
            "So assume we have this graph and we want to measure the distance to that graph, so we keep track of the possible edit operations.",
            "So for example, deleting a couple of edges.",
            "Then deleting notes, inserting notes, inserting edges, and changing some of the labels.",
            "We can assign a cost of each of these operations in the minimum cost that is required to transform one graph into the other.",
            "This is the end."
        ],
        [
            "Distance and as you probably know, several approaches to graph edit distance have been proposed in the past, so we have heard about one approach this morning and this was by Caspar Reason, the first talk in this conference and the main purpose was to speed up the computation.",
            "So here the objective is a little bit different.",
            "It's not the speeding up as the main priority, but we just want to have an alternative formulation.",
            "Off the graph edit distance problem in such a way that we can apply quadratic programming and I will not go into any details for traditionary in graph edit distance computation.",
            "We always consider one to one correspondences.",
            "So one note in the one graph and we look for one correspondence for one note in the other graph.",
            "In this is relaxed here in this new formulation where we consider one to end correspondences.",
            "So for each node in the one graph is simultaneousness.",
            "Consider all the notes in the other graph as potential matching partners, and we do the same thing in the way back, and this makes it possible to formulate.",
            "The problem is a quadratic programming problem, and so we have implemented this and evaluated on us on a couple of databases and we could show that on some of these databases we can achieve a significantly a statistically significantly improvement over the classical.",
            "Graph edit distance.",
            "So I think this was long enough and offer the details you can get at the poster."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "So this is work that was done by my previous PhD student, Michelle Neuhaus.",
                    "label": 0
                },
                {
                    "sent": "OK, yes, and this is again about the graph edit distance problem.",
                    "label": 1
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And S we have heard today already.",
                    "label": 0
                },
                {
                    "sent": "So measuring the distance or the similarity of graphs is a very important task in pattern recognition and related areas.",
                    "label": 1
                },
                {
                    "sent": "And graph any distance is one of the most general graph distance measures where there are a number of distance measures.",
                    "label": 0
                },
                {
                    "sent": "But graph Edit distance is in particular interesting because first of all it can be applied to virtually any type of graphs.",
                    "label": 0
                },
                {
                    "sent": "You can have unlabeled graphs or labeled graphs if we have labeled graphs, the label can be of any kind.",
                    "label": 0
                },
                {
                    "sent": "It can be symbolic labels.",
                    "label": 0
                },
                {
                    "sent": "It can be numerical labels.",
                    "label": 0
                },
                {
                    "sent": "It can be whole attribute vectors attached to the notes or the edges, or both the notes and the edges.",
                    "label": 0
                },
                {
                    "sent": "And also we can introduce a problem specific knowledge through the cost of the edit operations.",
                    "label": 0
                },
                {
                    "sent": "And if we don't have such knowledge, we can automatically infer.",
                    "label": 0
                },
                {
                    "sent": "From a training set of graphs, appropriate cost functions.",
                    "label": 0
                },
                {
                    "sent": "So anyway, graph edit distance measures the distance of a pair of graphs in terms of the minimum number of edit operations that are required to transform one graph into the other.",
                    "label": 1
                },
                {
                    "sent": "So assume we have this graph and we want to measure the distance to that graph, so we keep track of the possible edit operations.",
                    "label": 0
                },
                {
                    "sent": "So for example, deleting a couple of edges.",
                    "label": 0
                },
                {
                    "sent": "Then deleting notes, inserting notes, inserting edges, and changing some of the labels.",
                    "label": 0
                },
                {
                    "sent": "We can assign a cost of each of these operations in the minimum cost that is required to transform one graph into the other.",
                    "label": 0
                },
                {
                    "sent": "This is the end.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Distance and as you probably know, several approaches to graph edit distance have been proposed in the past, so we have heard about one approach this morning and this was by Caspar Reason, the first talk in this conference and the main purpose was to speed up the computation.",
                    "label": 1
                },
                {
                    "sent": "So here the objective is a little bit different.",
                    "label": 1
                },
                {
                    "sent": "It's not the speeding up as the main priority, but we just want to have an alternative formulation.",
                    "label": 1
                },
                {
                    "sent": "Off the graph edit distance problem in such a way that we can apply quadratic programming and I will not go into any details for traditionary in graph edit distance computation.",
                    "label": 0
                },
                {
                    "sent": "We always consider one to one correspondences.",
                    "label": 0
                },
                {
                    "sent": "So one note in the one graph and we look for one correspondence for one note in the other graph.",
                    "label": 0
                },
                {
                    "sent": "In this is relaxed here in this new formulation where we consider one to end correspondences.",
                    "label": 0
                },
                {
                    "sent": "So for each node in the one graph is simultaneousness.",
                    "label": 0
                },
                {
                    "sent": "Consider all the notes in the other graph as potential matching partners, and we do the same thing in the way back, and this makes it possible to formulate.",
                    "label": 0
                },
                {
                    "sent": "The problem is a quadratic programming problem, and so we have implemented this and evaluated on us on a couple of databases and we could show that on some of these databases we can achieve a significantly a statistically significantly improvement over the classical.",
                    "label": 0
                },
                {
                    "sent": "Graph edit distance.",
                    "label": 0
                },
                {
                    "sent": "So I think this was long enough and offer the details you can get at the poster.",
                    "label": 0
                }
            ]
        }
    }
}