{
    "id": "p2waewo22vu6ugtnb2j7fvlgueob3i54",
    "title": "Graph Kernels Between Point Clouds",
    "info": {
        "author": [
            "Francis R. Bach, INRIA - SIERRA project-team"
        ],
        "published": "Aug. 1, 2008",
        "recorded": "July 2008",
        "category": [
            "Top->Computer Science->Machine Learning->Kernel Methods"
        ]
    },
    "url": "http://videolectures.net/icml08_bach_bpc/",
    "segmentation": [
        [
            "So that, uh, gateway today is a typical kernel design talk.",
            "Or you take a object and you build a kernel top of it, and the object of interest."
        ],
        [
            "Today bunk clouds in my palm clouds is just a set, a set of labeled points in R2 or three.",
            "But of course this could be applicable to larger dimensions, and the main thing is that you don't know any pre ordering of the other points.",
            "So points in one cloud or not already matched two points from another cloud.",
            "This has many applications.",
            "Imagine learning plus you can sleep on.",
            "Clouds are simple, some distribution and this has been used a lot to compare distributions.",
            "But the main motivating examples or computer vision."
        ],
        [
            "And buried, Valentina says computer vision and image Orlando is that that is exactly the point.",
            "Cloud, where essentially you have.",
            "Orlando is no labels, just positions in R2 or you can also do this."
        ],
        [
            "Same thing with the with images.",
            "Well, so each pixel is a point in our two mislabels like pixel or region around the pixel and this will be the motivating examples for the talk.",
            "But he could also be applicable."
        ],
        [
            "So to put over, you could also do it for after you have selected corners and use a shift representation which introduced a lot innovision right now."
        ],
        [
            "This could be also applied to put in 3D structures.",
            "This has been shown that predicting the function of protein can not only be done from the amino acid sequence and people are starting to look at using these 3 dimensional structure to predict permit.",
            "This is also one motivating example, although I won't do it in this talk."
        ],
        [
            "So what is the simplest approach is to deal with one cloud, so the simplest one is to consider implicitly that the point clouds are just samples from ID samples from the distribution, and many people are redefining kernels based on moments.",
            "OK, you take a large set one or large set of functions and your commitments and you get you compute kernels based on those moments and you have many many approaches to that corner bracket you're in there and all the other ones.",
            "With one problems with that.",
            "To apply that to a form class.",
            "With that you have a lack of.",
            "Don't take into account the spatial geometry of the point clouds, and this is the main goal of the talk is to take into account that special geometry, and in particular you want to ensure that you are Colonel, will be invariant by rotation and translation of the band Club, which is very important in computer vision, for example, and a woman assumption would be to define pun clouds as graphs and of course to go from listed above on class to graph in somebody's subject by itself.",
            "And you could care nearest neighbor graph if you want, but since in this talk we only."
        ],
        [
            "Cedarland drawings Orlando Wings is automatic because Landry itself graph when you start.",
            "When you when you start, so we consider Langevin's as a as a graph like that where you have one node for classes and courses are connected together.",
            "So now we thank you, Bunk."
        ],
        [
            "So that graph and this is how do we take 2 two labeled graphs and try to complete the kernel between them?",
            "So this is our definition.",
            "So labeled graph defined by edge set vertex set in F and a set of labeling functions.",
            "So here the main difference between the usual work on labor graphs is that I have two sets of labels, the usual attributes that you have, an old label graphs which we consider as regular attributes both so set of positions and the main topic of the talk is to make a difference between attributes.",
            "At position and if it becomes more clear at the end of the talk, just reminder for larger wings issues on our two, and we also use the position as an attribute just to take into account the fact that when you compare language wings, you want some invariants but not totally invariant, so it's good to use also the attributes their positions attribute level."
        ],
        [
            "So if I said I'd be user graph kernels to compare graph, so there are many a lot of work on graphical and at least for me they can be divided into many classes.",
            "The first class will use existing graph matching techniques from the graph graph theory literature and get a similarity matrix and then try to apply post processing to make it to make it positive.",
            "So you can use it.",
            "For example edit distance like Neuhausen Bank.",
            "But they will what will focus on in that talk is on other."
        ],
        [
            "The class of of kernels which will essentially compare directly substructures of the graph and this has been launched with a simple random walk kernels.",
            "We can we compare all the work of the graph which was initially ordered.",
            "Substrings on the graph, and the nice thing that if you some if you compare all possible works of all possible lengths, then you confirm that.",
            "You can compute the kernel by solving a sparse in our system as done by Kashima and regret, but you can also do it even more efficiently as wish when I turn and has been doing in 2007 and what we'll do instead is considered fixed length works and travels, so we believe.",
            "That something overall length will make fidget best feature space, which is a far far too big and we plan we prefer to sum over only fixed length works, entry works, and then I think that you can essentially derive dynamic programming recursion's in that case as well.",
            "This will be the focus of the talk.",
            "Compare fixed length structure instead of all."
        ],
        [
            "Poland.",
            "So let's define more precisely the set of structure that we're considering in the talk.",
            "So what we have to do is first to consider path to party.",
            "The sequence of distinct neighboring distant vertices, given examples over there.",
            "But those are very hard to consider, even they're hard to immigrate.",
            "Instead, people consider works which also sequence of neighboring vertices which can be equal in the sense this.",
            "This is a.",
            "This is a.",
            "This is a work, but it's not a part because you go back to that to that vertex.",
            "We also need to extend it a little bit.",
            "The notion of of work, what I call the better.",
            "But I work where you want to make sure that the work is not going back and forth like that, and the notion of better work is simply a work where you assume that any better plus one successive vertices are distinct.",
            "So to make things clear, this is a one work but not to work because we go back and forth to work but not at three world because you go back after three vertice is this is a forward.",
            "Another notion which is used a lot in the graphical literature is the."
        ],
        [
            "Notion of Tree Box introduced by Hand and Gartner, which were essentially try to extend the difference between path and walks to the subtree.",
            "Well, so it becomes a bit more complicated because you cannot edit more complicated.",
            "So Alpha are a better framework of depth.",
            "Gamma is different essentially through given me you need to be given a tree structure of which is a Alpha are intrigued at the gamma, which is independent from the original graph, and then you will put labels on that tree and labels on the tree.",
            "Will be exactly vertices of your original graph and essentially what you require is that if your neighbor the labels of neighbors in the tree should be neighbors as well in the graph.",
            "And the nice thing is that it can be easily represented on top of the original graph.",
            "So you be the tree structure like that directed tree structure like that an over the graph and label of that node on the on the tree structure is simply the nodes of the graph which is underneath the tree structure.",
            "And similarly, we need to make sure that we don't go or always back to the same vertices image, reduce the notion of battery works, which is simply say that node is different from all its.",
            "All these children up to better generation.",
            "So essentially, if you wish, let's say that we compare all subtrees, but we can't do it.",
            "So we have to do this trick trick of Hamilton got now.",
            "So."
        ],
        [
            "Once you have that.",
            "We can consider.",
            "Notation given a tree structure T of Alpha.",
            "Entry of gamma.",
            "Because all the set of possible labeling.",
            "So I called them consistent.",
            "It means that both are nodes which are neighbors."
        ],
        [
            "In the original graph.",
            "So the main idea between the graph kernels and three works introduced by Herman Gardner is to sum that reworks of graphs auditory works of the other graph and compare all of them together.",
            "So here I sum over all possible tree structure and all possible consistent labeling of local kernel.",
            "Essentially add a penalty on the on the shape of the tree, because if you don't have it doesn't work.",
            "In particular, we have to penalize by the LFT, which is the number of leaves in the graph, which is essentially to me too.",
            "Down the way, the way the Bush graph, if you don't, if you don't do that, doesn't work at all.",
            "So simple trick to make it work by Marion there.",
            "And of course, if the local kernel cutie is positive definite demographic and is also positive definite, where many issue of the talk is hard to chew."
        ],
        [
            "The local kernel.",
            "And before that, let's look at the example is a direct kernel.",
            "You assume that you have a discrete labels, and you say that the local color is 1.",
            "If you have a exactly equal and 0 otherwise, you graph G graph edge.",
            "This order set of possible tree works of binary tree blocks of length two I guess.",
            "And you compare all of them and only two are matching.",
            "So the value of the kernel here will be exactly 1 because you have only one one tree work.",
            "So of course we want to go beyond the direct kernel."
        ],
        [
            "And if you consider setting we have attributes, we have labels which are attributes labels which are positions we want to use a product of kernels for attributes and a kernel proposition for tributes.",
            "As I told you, we consider them as as usual, where when you compare 2 three words, we just simply compare one by one or the matching vertice is and you get this nice simple things.",
            "So why did so important?",
            "Is that because of you have this fully factorized form, you can compute the kernel either using dynamic programming, recursion as we do.",
            "With the data showe or or you can design the linear system that has been used before.",
            "When you sum over all possible lengths of the graph.",
            "So this is very important to be fully factorized.",
            "Many claim here is that if you want to do porn class for computer vision, you cannot have a fully factorized form.",
            "And the reason why you want to keep some invariants."
        ],
        [
            "So for example.",
            "Let's result let's be done in terms of position, so you have four subgraphs here.",
            "Which one should be similar to each other?",
            "If you want translation invariance so and rings.",
            "So you want this one to be similar to that one, and this one is similar to that one as well.",
            "However, if you compare the coordinates one by one, they look very similar, so you want to be able to include all positions in your local kernel, and you want all of them to be, let's say, equal and different from the black one."
        ],
        [
            "Essentially, this means that you need to consider all coordinates together and not simply pairs of coordinates which are which are matched an.",
            "If you want to be translation invariant then you can easily be convinced that you should only look at the differences between between positions from within one cloud, and similarly if you want and in addition certain invariants, you should only consider distances between points in the class.",
            "So if you consider all those distances forgiven, three work is almost like a kernel matrix.",
            "And what we what we essentially do instead of considering all the persistency, we consider the exponential of minus all the power distances.",
            "Or"
        ],
        [
            "The world we consider we reduce all those two accounting metrics with the only credit that people use, which is a custom kernel like that which is both translation and rotation invariant.",
            "So at the end, but we end up doing is we take all the positions in our graph and reduce them to a big kernel matrix and we want to compute the local kernel.",
            "We reduce them to the smoking metrics and we compare Kermit receipts together.",
            "OK, I will be there in matrices.",
            "Examples are given free work."
        ],
        [
            "So now we know we need to define the kernels kernel and positive matrices, so this has been done before, especially by Code Orange Bar which introduces the bike Rider kernel, which will be a product of determinants like that.",
            "This is a well defined kernel an, but the problem is the following is that it does not depend in, it does not depend yet on the tree structure, T doesn't appear in that formula and if we want to have efficient recursion we need to use T, and the question is how would you use the graph.",
            "To help you compute the local kernel so there is."
        ],
        [
            "Magic, you have graphs.",
            "You have pretty matrices.",
            "Then you must use graphical models to do that.",
            "OK, at least it's natural to me to use graphical models."
        ],
        [
            "And what would be the trick would be considered symmetric matrices as covariance matrices, and we consider probabilistic graphical models define or the Gaussian vector associated with the covariance matrix and the main idea is simply to do what to project the current metrics onto the graphical model and use your proximation to compute the local kernel an if you know a bit about graphical models, computing determinants of the projection of a graphical model, prediction of occurrence matrix onto a graphical model is simple.",
            "The graph is decomposable because the log determinant of the projection is simply the sum of determinants.",
            "So for more detail you can see either paper or the poster for the cool thing that we can do, you have approximations of blockchain using only local local kernels."
        ],
        [
            "So now we have to choose.",
            "We have to choose the graphical model.",
            "So here we have a natural graph which is underlying graph of the problem.",
            "So this will be the tree work defined on the graph and then you could use that graph.",
            "We essentially since we use better framework where we assume that some vertices are different, is a graphical model framework.",
            "It seemed to use potentials that are defined over node in all these descendants.",
            "So it means that we should use clicks that include a load in all its descendants, which is exactly what we do.",
            "So this will be the display is too simple because we don't connect node to his descendants here.",
            "And if we use like 1 three works, we have to cook to connect those and if we use a 2 three works we have to connect an ode to its children up to the second generation and innocence.",
            "The nice thing is if you think about it or you can, we can talk about this at the poster.",
            "This is the densest possible graph that you can consider with our framework.",
            "And why do you want to be dense?",
            "Because then so you are the less approximate you become when you compute the.",
            "So at the end we compute the better kayak Yarnall between the factor at approximation, so there are more subtleties here because you cannot do that, because if you do that, you don't get the kernel, so you have to place a little bit of tricks which I think are also applicable to other settings as well.",
            "But you look at the paper for the subtleties about that."
        ],
        [
            "So at the end I've made everything so that the kernel should be local.",
            "The local kernel can be computed recursively, so now we have to do exactly the right direction.",
            "So the main trick that we use is a search recused bye bye.",
            "Which is to consider to notice that if she want to compare better tree box, so beta means that you want all vertices which are better part to be different.",
            "It's equivalent to consider what we work on exploiting graph where you consider all subtrees of size beta.",
            "So essentially here this is the example we take.",
            "Photograph is the set of all works directed works of size 2 and to define look at all possible.",
            "Both of all possible 2 works on that graph.",
            "You need to consider all possible one works or digraph, and people have know how to design recursion on for one walk.",
            "So essentially we struggle that photograph expand it a bit and then we can compute the recursion and the recursion."
        ],
        [
            "Looks.",
            "Like that's that's pretty awful, so I won't explain it.",
            "It's when you play with graph kernels it is pretty natural.",
            "An essentially will confuse the kernel between graph G&H starting with the subtrees ausiello at zero progressively, so the tree at depths gamma will be computed from the trees from the kernel.",
            "At Debs government is 1 and if you iterate that recursion then you will.",
            "You will exactly get the good Colonel.",
            "And of course this will surely do a sense of OK.",
            "It's too complicated.",
            "It's going to work.",
            "You're going to take forever.",
            "So let's convince you that this is not."
        ],
        [
            "The case, but just look at computational complexity.",
            "So first everything is in gamma of this was meant for it because we have recursion in gamma.",
            "But its kinetic in the size of the expecting graph.",
            "But of course the problem is the following.",
            "The size of the expected graph is exponential in Alpha and beta beta is order and Alpha ality of the graph.",
            "So for Alpha the problem because usually consider Alpha equals 1, two or three with or better could be a problem.",
            "And let's look at the average quality of that graph.",
            "GF Alphabet A as a time you need to compute one kernel.",
            "OK, so this is honest where the original graph size is 18 and we consider 24 as a total depth of the tree works and you look at the time first you see that we go from 18 nodes in the original graph to up to 17 nodes in the expanding graph.",
            "So this this bigger but not so much bigger.",
            "And at the end the time to compute is decent, OK?",
            "Depends whether you want to evaluate on one million images, but at least to me a few minutes against the computer kernel is enough just to show that those portions are not so inefficient.",
            "But our political time in gamma, but at the end are not so."
        ],
        [
            "Patient so let's look at some simulations and so we use a handwritten digits without any class season 100 examples for classes and to the two Chinese characters where we use the five hardest characters to the distinguished, so I don't know what this means, but I'm sure it means something nice, and so we.",
            "So first I put this in reverse order and does not believe that we speak.",
            "Chinese told me to put it in the right or in the right direction, so anyway, so we can compare those."
        ],
        [
            "Anna, so one thing which is important when you use kernel source shorted objects is you have many many parameters.",
            "So it was a problem and here at least I'm assuming that fact you have parameters linked to the graphs to the graph, the Arity, the order, the depth, how much you penalize the leaf nodes, and the number of nodes, and you have kernels on which are based only on your problem and the main thing is that this talk will reduce that to the minimal amount you need a few parameters to characterize all possible.",
            "Allergies of graph.",
            "Instead of considering each topology one at a time.",
            "These are the parameters that we select by 5."
        ],
        [
            "For cross validation.",
            "And we compared to a simple kernel so further Gaussian the gas and kernel, which looks very dumb to that problem, but which had been applied to that I said was quite success when you have a lot of data but the random walk kernel, which will essentially some overall possible work length and the pyramid match kernel which is used a lot in computer vision.",
            "Here is the type of business that we get, so of course we beat all the competing methods.",
            "Interesting part is that is to analyze which value of Alpha and beta are best for the problem.",
            "Was only data sets.",
            "The best is obtained for works in the center is not surprising because.",
            "Dijiste are mostly linear.",
            "You only have a few junctions, while in Chinese characters have a lot of disjunctions and considering them, which is essentially considering that you have that reason, networks is a is a is useful."
        ],
        [
            "To conclude, I presented the kernel between point point clouds where we compare local structures using factorized local kernels and also have drawn a link between another link between kernels of graphical models.",
            "Essentially to build the kernels on covenant matrices that arise in graphical models.",
            "So there you have the current work is trying to apply to Putin's OK.",
            "This is hard work and also to look at what we lose when we approximate color matrix with this projection and the graphical models in the line of Work of Catan.",
            "Or it'll thank you for your attention.",
            "My surprise to see you have Chinese characters there 'cause I don't remember any Chinese when I was in Berkeley.",
            "Anyway, that's nice talk.",
            "Any questions from the audience.",
            "Actually began one.",
            "I lost something.",
            "When you use the graphical models, do you assume the models to be always on continuous graphical model or they also allow discrete graphical models?",
            "So here we consider matrices covariance matrices, so I use Gaussian graphical models to be able to compute permanence.",
            "So if you have discrete graph model, what do you do?",
            "I don't know.",
            "I don't know here the goal, we just use the graphical models.",
            "Roblox inmates are given covariance matrix, so since we played with governance matrices we don't need to go to discrete OK. Other question.",
            "I have a question about the translation and rotation invariants.",
            "So the the invariances we should deal with seem to be only relative to two nodes.",
            "Can you deal with for example whole subgraphs or paths being translate translations or rotations of each other?",
            "We know that if we size of subgraphs of size beta, so when beta is one of solid pair pairs of node, or if you have a tree, it would be like 3 nodes, But my better increases.",
            "If I got three which I use and benefit, she works, then we use like maybe 8 nodes to compare to each other, and in fact, what what works better is to go exactly from one node to compare with each other.",
            "And going from Mondo to 8 nodes will increase performance by a lot, which was shown is here.",
            "OK, not here."
        ],
        [
            "Yes, we the differences between here you go here.",
            "You compare only two nodes together at every step and you compare at least four or five nodes together.",
            "So going from comparing 12 nodes 25 nodes, we will help a lot."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So that, uh, gateway today is a typical kernel design talk.",
                    "label": 0
                },
                {
                    "sent": "Or you take a object and you build a kernel top of it, and the object of interest.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Today bunk clouds in my palm clouds is just a set, a set of labeled points in R2 or three.",
                    "label": 1
                },
                {
                    "sent": "But of course this could be applicable to larger dimensions, and the main thing is that you don't know any pre ordering of the other points.",
                    "label": 0
                },
                {
                    "sent": "So points in one cloud or not already matched two points from another cloud.",
                    "label": 0
                },
                {
                    "sent": "This has many applications.",
                    "label": 0
                },
                {
                    "sent": "Imagine learning plus you can sleep on.",
                    "label": 0
                },
                {
                    "sent": "Clouds are simple, some distribution and this has been used a lot to compare distributions.",
                    "label": 0
                },
                {
                    "sent": "But the main motivating examples or computer vision.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And buried, Valentina says computer vision and image Orlando is that that is exactly the point.",
                    "label": 1
                },
                {
                    "sent": "Cloud, where essentially you have.",
                    "label": 0
                },
                {
                    "sent": "Orlando is no labels, just positions in R2 or you can also do this.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Same thing with the with images.",
                    "label": 0
                },
                {
                    "sent": "Well, so each pixel is a point in our two mislabels like pixel or region around the pixel and this will be the motivating examples for the talk.",
                    "label": 0
                },
                {
                    "sent": "But he could also be applicable.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So to put over, you could also do it for after you have selected corners and use a shift representation which introduced a lot innovision right now.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "This could be also applied to put in 3D structures.",
                    "label": 1
                },
                {
                    "sent": "This has been shown that predicting the function of protein can not only be done from the amino acid sequence and people are starting to look at using these 3 dimensional structure to predict permit.",
                    "label": 0
                },
                {
                    "sent": "This is also one motivating example, although I won't do it in this talk.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So what is the simplest approach is to deal with one cloud, so the simplest one is to consider implicitly that the point clouds are just samples from ID samples from the distribution, and many people are redefining kernels based on moments.",
                    "label": 1
                },
                {
                    "sent": "OK, you take a large set one or large set of functions and your commitments and you get you compute kernels based on those moments and you have many many approaches to that corner bracket you're in there and all the other ones.",
                    "label": 0
                },
                {
                    "sent": "With one problems with that.",
                    "label": 0
                },
                {
                    "sent": "To apply that to a form class.",
                    "label": 0
                },
                {
                    "sent": "With that you have a lack of.",
                    "label": 1
                },
                {
                    "sent": "Don't take into account the spatial geometry of the point clouds, and this is the main goal of the talk is to take into account that special geometry, and in particular you want to ensure that you are Colonel, will be invariant by rotation and translation of the band Club, which is very important in computer vision, for example, and a woman assumption would be to define pun clouds as graphs and of course to go from listed above on class to graph in somebody's subject by itself.",
                    "label": 0
                },
                {
                    "sent": "And you could care nearest neighbor graph if you want, but since in this talk we only.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Cedarland drawings Orlando Wings is automatic because Landry itself graph when you start.",
                    "label": 0
                },
                {
                    "sent": "When you when you start, so we consider Langevin's as a as a graph like that where you have one node for classes and courses are connected together.",
                    "label": 0
                },
                {
                    "sent": "So now we thank you, Bunk.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So that graph and this is how do we take 2 two labeled graphs and try to complete the kernel between them?",
                    "label": 0
                },
                {
                    "sent": "So this is our definition.",
                    "label": 0
                },
                {
                    "sent": "So labeled graph defined by edge set vertex set in F and a set of labeling functions.",
                    "label": 0
                },
                {
                    "sent": "So here the main difference between the usual work on labor graphs is that I have two sets of labels, the usual attributes that you have, an old label graphs which we consider as regular attributes both so set of positions and the main topic of the talk is to make a difference between attributes.",
                    "label": 0
                },
                {
                    "sent": "At position and if it becomes more clear at the end of the talk, just reminder for larger wings issues on our two, and we also use the position as an attribute just to take into account the fact that when you compare language wings, you want some invariants but not totally invariant, so it's good to use also the attributes their positions attribute level.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So if I said I'd be user graph kernels to compare graph, so there are many a lot of work on graphical and at least for me they can be divided into many classes.",
                    "label": 0
                },
                {
                    "sent": "The first class will use existing graph matching techniques from the graph graph theory literature and get a similarity matrix and then try to apply post processing to make it to make it positive.",
                    "label": 0
                },
                {
                    "sent": "So you can use it.",
                    "label": 0
                },
                {
                    "sent": "For example edit distance like Neuhausen Bank.",
                    "label": 0
                },
                {
                    "sent": "But they will what will focus on in that talk is on other.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The class of of kernels which will essentially compare directly substructures of the graph and this has been launched with a simple random walk kernels.",
                    "label": 0
                },
                {
                    "sent": "We can we compare all the work of the graph which was initially ordered.",
                    "label": 0
                },
                {
                    "sent": "Substrings on the graph, and the nice thing that if you some if you compare all possible works of all possible lengths, then you confirm that.",
                    "label": 0
                },
                {
                    "sent": "You can compute the kernel by solving a sparse in our system as done by Kashima and regret, but you can also do it even more efficiently as wish when I turn and has been doing in 2007 and what we'll do instead is considered fixed length works and travels, so we believe.",
                    "label": 0
                },
                {
                    "sent": "That something overall length will make fidget best feature space, which is a far far too big and we plan we prefer to sum over only fixed length works, entry works, and then I think that you can essentially derive dynamic programming recursion's in that case as well.",
                    "label": 0
                },
                {
                    "sent": "This will be the focus of the talk.",
                    "label": 0
                },
                {
                    "sent": "Compare fixed length structure instead of all.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Poland.",
                    "label": 0
                },
                {
                    "sent": "So let's define more precisely the set of structure that we're considering in the talk.",
                    "label": 0
                },
                {
                    "sent": "So what we have to do is first to consider path to party.",
                    "label": 0
                },
                {
                    "sent": "The sequence of distinct neighboring distant vertices, given examples over there.",
                    "label": 1
                },
                {
                    "sent": "But those are very hard to consider, even they're hard to immigrate.",
                    "label": 1
                },
                {
                    "sent": "Instead, people consider works which also sequence of neighboring vertices which can be equal in the sense this.",
                    "label": 0
                },
                {
                    "sent": "This is a.",
                    "label": 0
                },
                {
                    "sent": "This is a.",
                    "label": 0
                },
                {
                    "sent": "This is a work, but it's not a part because you go back to that to that vertex.",
                    "label": 0
                },
                {
                    "sent": "We also need to extend it a little bit.",
                    "label": 0
                },
                {
                    "sent": "The notion of of work, what I call the better.",
                    "label": 0
                },
                {
                    "sent": "But I work where you want to make sure that the work is not going back and forth like that, and the notion of better work is simply a work where you assume that any better plus one successive vertices are distinct.",
                    "label": 0
                },
                {
                    "sent": "So to make things clear, this is a one work but not to work because we go back and forth to work but not at three world because you go back after three vertice is this is a forward.",
                    "label": 0
                },
                {
                    "sent": "Another notion which is used a lot in the graphical literature is the.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Notion of Tree Box introduced by Hand and Gartner, which were essentially try to extend the difference between path and walks to the subtree.",
                    "label": 1
                },
                {
                    "sent": "Well, so it becomes a bit more complicated because you cannot edit more complicated.",
                    "label": 0
                },
                {
                    "sent": "So Alpha are a better framework of depth.",
                    "label": 0
                },
                {
                    "sent": "Gamma is different essentially through given me you need to be given a tree structure of which is a Alpha are intrigued at the gamma, which is independent from the original graph, and then you will put labels on that tree and labels on the tree.",
                    "label": 0
                },
                {
                    "sent": "Will be exactly vertices of your original graph and essentially what you require is that if your neighbor the labels of neighbors in the tree should be neighbors as well in the graph.",
                    "label": 1
                },
                {
                    "sent": "And the nice thing is that it can be easily represented on top of the original graph.",
                    "label": 0
                },
                {
                    "sent": "So you be the tree structure like that directed tree structure like that an over the graph and label of that node on the on the tree structure is simply the nodes of the graph which is underneath the tree structure.",
                    "label": 0
                },
                {
                    "sent": "And similarly, we need to make sure that we don't go or always back to the same vertices image, reduce the notion of battery works, which is simply say that node is different from all its.",
                    "label": 0
                },
                {
                    "sent": "All these children up to better generation.",
                    "label": 0
                },
                {
                    "sent": "So essentially, if you wish, let's say that we compare all subtrees, but we can't do it.",
                    "label": 0
                },
                {
                    "sent": "So we have to do this trick trick of Hamilton got now.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Once you have that.",
                    "label": 0
                },
                {
                    "sent": "We can consider.",
                    "label": 0
                },
                {
                    "sent": "Notation given a tree structure T of Alpha.",
                    "label": 0
                },
                {
                    "sent": "Entry of gamma.",
                    "label": 0
                },
                {
                    "sent": "Because all the set of possible labeling.",
                    "label": 0
                },
                {
                    "sent": "So I called them consistent.",
                    "label": 0
                },
                {
                    "sent": "It means that both are nodes which are neighbors.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "In the original graph.",
                    "label": 0
                },
                {
                    "sent": "So the main idea between the graph kernels and three works introduced by Herman Gardner is to sum that reworks of graphs auditory works of the other graph and compare all of them together.",
                    "label": 1
                },
                {
                    "sent": "So here I sum over all possible tree structure and all possible consistent labeling of local kernel.",
                    "label": 0
                },
                {
                    "sent": "Essentially add a penalty on the on the shape of the tree, because if you don't have it doesn't work.",
                    "label": 0
                },
                {
                    "sent": "In particular, we have to penalize by the LFT, which is the number of leaves in the graph, which is essentially to me too.",
                    "label": 0
                },
                {
                    "sent": "Down the way, the way the Bush graph, if you don't, if you don't do that, doesn't work at all.",
                    "label": 0
                },
                {
                    "sent": "So simple trick to make it work by Marion there.",
                    "label": 0
                },
                {
                    "sent": "And of course, if the local kernel cutie is positive definite demographic and is also positive definite, where many issue of the talk is hard to chew.",
                    "label": 1
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The local kernel.",
                    "label": 0
                },
                {
                    "sent": "And before that, let's look at the example is a direct kernel.",
                    "label": 0
                },
                {
                    "sent": "You assume that you have a discrete labels, and you say that the local color is 1.",
                    "label": 0
                },
                {
                    "sent": "If you have a exactly equal and 0 otherwise, you graph G graph edge.",
                    "label": 0
                },
                {
                    "sent": "This order set of possible tree works of binary tree blocks of length two I guess.",
                    "label": 0
                },
                {
                    "sent": "And you compare all of them and only two are matching.",
                    "label": 0
                },
                {
                    "sent": "So the value of the kernel here will be exactly 1 because you have only one one tree work.",
                    "label": 0
                },
                {
                    "sent": "So of course we want to go beyond the direct kernel.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And if you consider setting we have attributes, we have labels which are attributes labels which are positions we want to use a product of kernels for attributes and a kernel proposition for tributes.",
                    "label": 1
                },
                {
                    "sent": "As I told you, we consider them as as usual, where when you compare 2 three words, we just simply compare one by one or the matching vertice is and you get this nice simple things.",
                    "label": 0
                },
                {
                    "sent": "So why did so important?",
                    "label": 1
                },
                {
                    "sent": "Is that because of you have this fully factorized form, you can compute the kernel either using dynamic programming, recursion as we do.",
                    "label": 0
                },
                {
                    "sent": "With the data showe or or you can design the linear system that has been used before.",
                    "label": 0
                },
                {
                    "sent": "When you sum over all possible lengths of the graph.",
                    "label": 0
                },
                {
                    "sent": "So this is very important to be fully factorized.",
                    "label": 1
                },
                {
                    "sent": "Many claim here is that if you want to do porn class for computer vision, you cannot have a fully factorized form.",
                    "label": 0
                },
                {
                    "sent": "And the reason why you want to keep some invariants.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So for example.",
                    "label": 0
                },
                {
                    "sent": "Let's result let's be done in terms of position, so you have four subgraphs here.",
                    "label": 1
                },
                {
                    "sent": "Which one should be similar to each other?",
                    "label": 1
                },
                {
                    "sent": "If you want translation invariance so and rings.",
                    "label": 0
                },
                {
                    "sent": "So you want this one to be similar to that one, and this one is similar to that one as well.",
                    "label": 0
                },
                {
                    "sent": "However, if you compare the coordinates one by one, they look very similar, so you want to be able to include all positions in your local kernel, and you want all of them to be, let's say, equal and different from the black one.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Essentially, this means that you need to consider all coordinates together and not simply pairs of coordinates which are which are matched an.",
                    "label": 0
                },
                {
                    "sent": "If you want to be translation invariant then you can easily be convinced that you should only look at the differences between between positions from within one cloud, and similarly if you want and in addition certain invariants, you should only consider distances between points in the class.",
                    "label": 0
                },
                {
                    "sent": "So if you consider all those distances forgiven, three work is almost like a kernel matrix.",
                    "label": 0
                },
                {
                    "sent": "And what we what we essentially do instead of considering all the persistency, we consider the exponential of minus all the power distances.",
                    "label": 0
                },
                {
                    "sent": "Or",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The world we consider we reduce all those two accounting metrics with the only credit that people use, which is a custom kernel like that which is both translation and rotation invariant.",
                    "label": 0
                },
                {
                    "sent": "So at the end, but we end up doing is we take all the positions in our graph and reduce them to a big kernel matrix and we want to compute the local kernel.",
                    "label": 0
                },
                {
                    "sent": "We reduce them to the smoking metrics and we compare Kermit receipts together.",
                    "label": 0
                },
                {
                    "sent": "OK, I will be there in matrices.",
                    "label": 0
                },
                {
                    "sent": "Examples are given free work.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So now we know we need to define the kernels kernel and positive matrices, so this has been done before, especially by Code Orange Bar which introduces the bike Rider kernel, which will be a product of determinants like that.",
                    "label": 0
                },
                {
                    "sent": "This is a well defined kernel an, but the problem is the following is that it does not depend in, it does not depend yet on the tree structure, T doesn't appear in that formula and if we want to have efficient recursion we need to use T, and the question is how would you use the graph.",
                    "label": 1
                },
                {
                    "sent": "To help you compute the local kernel so there is.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Magic, you have graphs.",
                    "label": 0
                },
                {
                    "sent": "You have pretty matrices.",
                    "label": 0
                },
                {
                    "sent": "Then you must use graphical models to do that.",
                    "label": 0
                },
                {
                    "sent": "OK, at least it's natural to me to use graphical models.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And what would be the trick would be considered symmetric matrices as covariance matrices, and we consider probabilistic graphical models define or the Gaussian vector associated with the covariance matrix and the main idea is simply to do what to project the current metrics onto the graphical model and use your proximation to compute the local kernel an if you know a bit about graphical models, computing determinants of the projection of a graphical model, prediction of occurrence matrix onto a graphical model is simple.",
                    "label": 1
                },
                {
                    "sent": "The graph is decomposable because the log determinant of the projection is simply the sum of determinants.",
                    "label": 0
                },
                {
                    "sent": "So for more detail you can see either paper or the poster for the cool thing that we can do, you have approximations of blockchain using only local local kernels.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So now we have to choose.",
                    "label": 0
                },
                {
                    "sent": "We have to choose the graphical model.",
                    "label": 1
                },
                {
                    "sent": "So here we have a natural graph which is underlying graph of the problem.",
                    "label": 0
                },
                {
                    "sent": "So this will be the tree work defined on the graph and then you could use that graph.",
                    "label": 0
                },
                {
                    "sent": "We essentially since we use better framework where we assume that some vertices are different, is a graphical model framework.",
                    "label": 0
                },
                {
                    "sent": "It seemed to use potentials that are defined over node in all these descendants.",
                    "label": 0
                },
                {
                    "sent": "So it means that we should use clicks that include a load in all its descendants, which is exactly what we do.",
                    "label": 0
                },
                {
                    "sent": "So this will be the display is too simple because we don't connect node to his descendants here.",
                    "label": 0
                },
                {
                    "sent": "And if we use like 1 three works, we have to cook to connect those and if we use a 2 three works we have to connect an ode to its children up to the second generation and innocence.",
                    "label": 1
                },
                {
                    "sent": "The nice thing is if you think about it or you can, we can talk about this at the poster.",
                    "label": 0
                },
                {
                    "sent": "This is the densest possible graph that you can consider with our framework.",
                    "label": 1
                },
                {
                    "sent": "And why do you want to be dense?",
                    "label": 0
                },
                {
                    "sent": "Because then so you are the less approximate you become when you compute the.",
                    "label": 0
                },
                {
                    "sent": "So at the end we compute the better kayak Yarnall between the factor at approximation, so there are more subtleties here because you cannot do that, because if you do that, you don't get the kernel, so you have to place a little bit of tricks which I think are also applicable to other settings as well.",
                    "label": 0
                },
                {
                    "sent": "But you look at the paper for the subtleties about that.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So at the end I've made everything so that the kernel should be local.",
                    "label": 0
                },
                {
                    "sent": "The local kernel can be computed recursively, so now we have to do exactly the right direction.",
                    "label": 0
                },
                {
                    "sent": "So the main trick that we use is a search recused bye bye.",
                    "label": 0
                },
                {
                    "sent": "Which is to consider to notice that if she want to compare better tree box, so beta means that you want all vertices which are better part to be different.",
                    "label": 0
                },
                {
                    "sent": "It's equivalent to consider what we work on exploiting graph where you consider all subtrees of size beta.",
                    "label": 1
                },
                {
                    "sent": "So essentially here this is the example we take.",
                    "label": 0
                },
                {
                    "sent": "Photograph is the set of all works directed works of size 2 and to define look at all possible.",
                    "label": 0
                },
                {
                    "sent": "Both of all possible 2 works on that graph.",
                    "label": 1
                },
                {
                    "sent": "You need to consider all possible one works or digraph, and people have know how to design recursion on for one walk.",
                    "label": 0
                },
                {
                    "sent": "So essentially we struggle that photograph expand it a bit and then we can compute the recursion and the recursion.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Looks.",
                    "label": 0
                },
                {
                    "sent": "Like that's that's pretty awful, so I won't explain it.",
                    "label": 0
                },
                {
                    "sent": "It's when you play with graph kernels it is pretty natural.",
                    "label": 0
                },
                {
                    "sent": "An essentially will confuse the kernel between graph G&H starting with the subtrees ausiello at zero progressively, so the tree at depths gamma will be computed from the trees from the kernel.",
                    "label": 0
                },
                {
                    "sent": "At Debs government is 1 and if you iterate that recursion then you will.",
                    "label": 0
                },
                {
                    "sent": "You will exactly get the good Colonel.",
                    "label": 0
                },
                {
                    "sent": "And of course this will surely do a sense of OK.",
                    "label": 0
                },
                {
                    "sent": "It's too complicated.",
                    "label": 0
                },
                {
                    "sent": "It's going to work.",
                    "label": 0
                },
                {
                    "sent": "You're going to take forever.",
                    "label": 0
                },
                {
                    "sent": "So let's convince you that this is not.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "The case, but just look at computational complexity.",
                    "label": 1
                },
                {
                    "sent": "So first everything is in gamma of this was meant for it because we have recursion in gamma.",
                    "label": 0
                },
                {
                    "sent": "But its kinetic in the size of the expecting graph.",
                    "label": 1
                },
                {
                    "sent": "But of course the problem is the following.",
                    "label": 0
                },
                {
                    "sent": "The size of the expected graph is exponential in Alpha and beta beta is order and Alpha ality of the graph.",
                    "label": 1
                },
                {
                    "sent": "So for Alpha the problem because usually consider Alpha equals 1, two or three with or better could be a problem.",
                    "label": 0
                },
                {
                    "sent": "And let's look at the average quality of that graph.",
                    "label": 0
                },
                {
                    "sent": "GF Alphabet A as a time you need to compute one kernel.",
                    "label": 0
                },
                {
                    "sent": "OK, so this is honest where the original graph size is 18 and we consider 24 as a total depth of the tree works and you look at the time first you see that we go from 18 nodes in the original graph to up to 17 nodes in the expanding graph.",
                    "label": 0
                },
                {
                    "sent": "So this this bigger but not so much bigger.",
                    "label": 0
                },
                {
                    "sent": "And at the end the time to compute is decent, OK?",
                    "label": 0
                },
                {
                    "sent": "Depends whether you want to evaluate on one million images, but at least to me a few minutes against the computer kernel is enough just to show that those portions are not so inefficient.",
                    "label": 0
                },
                {
                    "sent": "But our political time in gamma, but at the end are not so.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Patient so let's look at some simulations and so we use a handwritten digits without any class season 100 examples for classes and to the two Chinese characters where we use the five hardest characters to the distinguished, so I don't know what this means, but I'm sure it means something nice, and so we.",
                    "label": 1
                },
                {
                    "sent": "So first I put this in reverse order and does not believe that we speak.",
                    "label": 0
                },
                {
                    "sent": "Chinese told me to put it in the right or in the right direction, so anyway, so we can compare those.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Anna, so one thing which is important when you use kernel source shorted objects is you have many many parameters.",
                    "label": 0
                },
                {
                    "sent": "So it was a problem and here at least I'm assuming that fact you have parameters linked to the graphs to the graph, the Arity, the order, the depth, how much you penalize the leaf nodes, and the number of nodes, and you have kernels on which are based only on your problem and the main thing is that this talk will reduce that to the minimal amount you need a few parameters to characterize all possible.",
                    "label": 0
                },
                {
                    "sent": "Allergies of graph.",
                    "label": 0
                },
                {
                    "sent": "Instead of considering each topology one at a time.",
                    "label": 0
                },
                {
                    "sent": "These are the parameters that we select by 5.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "For cross validation.",
                    "label": 0
                },
                {
                    "sent": "And we compared to a simple kernel so further Gaussian the gas and kernel, which looks very dumb to that problem, but which had been applied to that I said was quite success when you have a lot of data but the random walk kernel, which will essentially some overall possible work length and the pyramid match kernel which is used a lot in computer vision.",
                    "label": 1
                },
                {
                    "sent": "Here is the type of business that we get, so of course we beat all the competing methods.",
                    "label": 0
                },
                {
                    "sent": "Interesting part is that is to analyze which value of Alpha and beta are best for the problem.",
                    "label": 0
                },
                {
                    "sent": "Was only data sets.",
                    "label": 0
                },
                {
                    "sent": "The best is obtained for works in the center is not surprising because.",
                    "label": 0
                },
                {
                    "sent": "Dijiste are mostly linear.",
                    "label": 0
                },
                {
                    "sent": "You only have a few junctions, while in Chinese characters have a lot of disjunctions and considering them, which is essentially considering that you have that reason, networks is a is a is useful.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "To conclude, I presented the kernel between point point clouds where we compare local structures using factorized local kernels and also have drawn a link between another link between kernels of graphical models.",
                    "label": 1
                },
                {
                    "sent": "Essentially to build the kernels on covenant matrices that arise in graphical models.",
                    "label": 0
                },
                {
                    "sent": "So there you have the current work is trying to apply to Putin's OK.",
                    "label": 0
                },
                {
                    "sent": "This is hard work and also to look at what we lose when we approximate color matrix with this projection and the graphical models in the line of Work of Catan.",
                    "label": 0
                },
                {
                    "sent": "Or it'll thank you for your attention.",
                    "label": 0
                },
                {
                    "sent": "My surprise to see you have Chinese characters there 'cause I don't remember any Chinese when I was in Berkeley.",
                    "label": 0
                },
                {
                    "sent": "Anyway, that's nice talk.",
                    "label": 0
                },
                {
                    "sent": "Any questions from the audience.",
                    "label": 0
                },
                {
                    "sent": "Actually began one.",
                    "label": 0
                },
                {
                    "sent": "I lost something.",
                    "label": 0
                },
                {
                    "sent": "When you use the graphical models, do you assume the models to be always on continuous graphical model or they also allow discrete graphical models?",
                    "label": 0
                },
                {
                    "sent": "So here we consider matrices covariance matrices, so I use Gaussian graphical models to be able to compute permanence.",
                    "label": 0
                },
                {
                    "sent": "So if you have discrete graph model, what do you do?",
                    "label": 0
                },
                {
                    "sent": "I don't know.",
                    "label": 0
                },
                {
                    "sent": "I don't know here the goal, we just use the graphical models.",
                    "label": 0
                },
                {
                    "sent": "Roblox inmates are given covariance matrix, so since we played with governance matrices we don't need to go to discrete OK. Other question.",
                    "label": 0
                },
                {
                    "sent": "I have a question about the translation and rotation invariants.",
                    "label": 0
                },
                {
                    "sent": "So the the invariances we should deal with seem to be only relative to two nodes.",
                    "label": 0
                },
                {
                    "sent": "Can you deal with for example whole subgraphs or paths being translate translations or rotations of each other?",
                    "label": 0
                },
                {
                    "sent": "We know that if we size of subgraphs of size beta, so when beta is one of solid pair pairs of node, or if you have a tree, it would be like 3 nodes, But my better increases.",
                    "label": 0
                },
                {
                    "sent": "If I got three which I use and benefit, she works, then we use like maybe 8 nodes to compare to each other, and in fact, what what works better is to go exactly from one node to compare with each other.",
                    "label": 0
                },
                {
                    "sent": "And going from Mondo to 8 nodes will increase performance by a lot, which was shown is here.",
                    "label": 0
                },
                {
                    "sent": "OK, not here.",
                    "label": 0
                }
            ]
        },
        "clip_31": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Yes, we the differences between here you go here.",
                    "label": 0
                },
                {
                    "sent": "You compare only two nodes together at every step and you compare at least four or five nodes together.",
                    "label": 0
                },
                {
                    "sent": "So going from comparing 12 nodes 25 nodes, we will help a lot.",
                    "label": 0
                }
            ]
        }
    }
}