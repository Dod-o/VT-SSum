{
    "id": "5jauus2do3aasmbw7fdhqdatvctft2uj",
    "title": "Nuance Reasoning Framework",
    "info": {
        "author": [
            "Prateek Jain, Nuance Communications, Inc."
        ],
        "published": "Nov. 28, 2017",
        "recorded": "November 2017",
        "category": [
            "Top->Computer Science->Semantic Web"
        ]
    },
    "url": "http://videolectures.net/iswc2017_jain_reasoning/",
    "segmentation": [
        [
            "My name is Kristi, Jen and this is joint work with my colleagues.",
            "A asra.",
            "Julian David Martin, who's here in the back and then Bill Gerald so."
        ],
        [
            "We give a bit of introduction about the organization, just single slide.",
            "So I work at a principle research engineer at new ones research lab in Sunnyvale.",
            "The group which I work on, the group which I'm part of.",
            "It works on topics which are in the area of knowledge representation and reasoning.",
            "There are other groups which are doing more stuff in the area of speech to text and things along those lines.",
            "The Sunnyvale lab.",
            "It does a lot of work in both applied as well as foundational research in the area of things like artificial intelligence and natural language processing over group consists of about 15 people that were's backgrounds.",
            "Some come from semantic web, some have a natural language processing background, some dialogue, and then of course knowledge representation and so on.",
            "So the."
        ],
        [
            "Work which I'm presenting the main motivation behind that is, imagine that you have an automotive assistant which is embedded in your car nowadays.",
            "You don't even have to imagine, because if you're carrying a smartphone, you have one of those assistants in your phone.",
            "But if you can imagine there's one in your car which can assist you with either finding parking or finding gas station, finding restaurants, finding movies, whatever things you are looking for, so you're driving on a rainy day and you are trying to find.",
            "Parking near downtown or city centre roughly around 5:00 o'clock.",
            "So one can imagine like if you ask this question to a simple automotive assistant, you would think like why do you even need a sophisticated framework like this?",
            "You can just send the query to Google and you know you might be able to get the information back, but to process requests which are along these lines you have to consider a whole bunch of different requests, different factors.",
            "One of them is that time.",
            "What time are you asking this question?",
            "What is the time at which the request is supposed to be fulfilled?",
            "What is the location at which you are and any other preferences which you might have?",
            "So for example, you may prefer parking spots which are.",
            "In a safer area compared to something else, or which are not dimly lit.",
            "So for each of the factors which I mentioned earlier, space, time, location, and any other contextual information, you need a specialized reason."
        ],
        [
            "Module.",
            "So the work which I'm presenting here today, it provides a framework which allows you to plug in different reasoners which each can do specific task.",
            "The framework further allows you to identify which are the right set of reasoners to invoke given a particular challenge.",
            "So it's possible that the query which you are asking it does not involve any temporal component.",
            "All it is is a simple fact based query.",
            "So in that case you don't need to invoke all the reasoners.",
            "So you have to identify the best set of reasoners to utilize, and then once you have the different reasoners up and running and you send the query to them, they give you the response back.",
            "Then eventually you have to provide a consistent response back to the user.",
            "So the framework which we have over."
        ],
        [
            "Here it allows you to essentially do these three things, which is identify the best set of reasoners, merge the, merge their responses back from them, and at the same time plug in these reasoners as and when they are required.",
            "So this is roughly the stack which we guys are working with.",
            "So nuanced reasoning framework and I'll get into more details related to this later on, but you have different specialized reasoners, so you have one which is a contextual reason are you can have spatial reasoners.",
            "You can have temporal reasoners.",
            "If you wanted to have special reason, there's four different domains, like movies or anything like that you can plug that in as well.",
            "Once the reasoners are done doing their task, and you have, let's say, a query or something which can be utilized by a knowledge graph, something like a DB pedia or wiki data, then what you can do is you can take the responses back from the reasoner and you can try to put it.",
            "Or you can try to utilize one of these knowledge graphs and get the responses back and presented back to the user."
        ],
        [
            "So some of the key features which are included as part of the nuanced reasoning framework.",
            "First of all, it's flexible.",
            "It's flexible in the sense that you can plug in a wide range of reasoning techniques you can plug in a rule based reasoner if you would like.",
            "We already have a few different rules based reasoners which are part of this.",
            "If you would like, you can also plug in a statistical module which can take information, process it and give the response back.",
            "Or if there is something else that you would like to work with, you can do the same thing with this as well.",
            "The other key feature is reasonable arbitration, so as I mentioned earlier, for a given request you may not require all the different reasoning modules or reasoning components, so this allows you to identify which is the right reasoning component to utilize for a given query.",
            "And even this is plug-in based component, so if you wanted to use one arbitration technique, so if you wanted to utilize all of them, you can utilize a greedy technique versus if you wanted to utilize.",
            "A more sophisticated technique.",
            "Let's say you have a measure using which you can identify.",
            "These are the reasons I trust for this kind of query.",
            "I'm only going to use those.",
            "You can do that consistency checker.",
            "Again, this is also a framework which you can plug in and remove.",
            "So this merges responses from different reasoners once they have returned it back to you and even over here you can give priority.",
            "So you can give higher priority to a special reason or which you have developed versus higher priority to something else which is always up and running.",
            "An RF has a number of different reason.",
            "There's which are built in, so there is a special spatial reasoning which is already part of it.",
            "There's a temporal reasoner and a contextual reasoner as well.",
            "So there are different reasoners and all of these reasons they can be configured as well by changing the rules or the.",
            "The other handlers which are associated with it.",
            "So an example related to what NRF can do is.",
            "So let's say you receive query saying find parking near the stadium.",
            "So the very first thing which NRF does is it tries to convert it into a logical form.",
            "So tries to identify the different components like the user is looking for parking.",
            "It's near it's near another point of interest in that point of interest happens to be a stadium.",
            "Once that query is fed into an RF, the different reasoners are invoked.",
            "They can be invoked in parallel, or they can be invoked one by one, and once their responses are received back an are full, merge them together and then it will return the final query back to the user.",
            "The other important component related to NRF is, let's say if you're working in automobile domain, then contextual information is a big part.",
            "Contextual information in this case means the information which is coming from the car itself.",
            "So for example, if the windshield wipers are on, and so on.",
            "So NRF is also able to consume any additional information besides the input query which the user has given.",
            "So if you're using an automotive assistant in a car, it can consume engine related parameters and so on."
        ],
        [
            "So this is the processing flow, so you have NRF NRF before it utilizes the different reasons it actually works by using reasoner handlers.",
            "So the advantage which we get as a result of it is that everybody or anybody can develop and you reasoner and they can plug it in without having to modify the core NRF code.",
            "These reasons are handlers.",
            "In turn, they communicate with the different reasoners.",
            "So new developer who's trying to create a new reasoning component.",
            "They have to just develop the reason handler and reason, and then they can plug it in.",
            "The input information to the NRF consists of the query as well as the contextual information, so the query in this case could be give me parking or find parking related information for me and then the context could be that the car height is 7 feet.",
            "This information is fed into NRF, which then invokes the different reason air handlers, which can be relevant for this query and contextual information.",
            "The reason their handlers can then take this query, transform it into a way which can be consumed by the different reasoners, and then once the reasoners, whether they're using rule based techniques or statistical techniques, they can work with it and then return the information back to the reasoner handlers, who in turn then send it back to NRF.",
            "Oops.",
            "Sorry.",
            "Once the information is returned from NRF, returned back to NRF NRF, and then merge the different responses together using a variety of techniques, and then it provides the output query as well as any modified contextual information.",
            "So for example, the reasoners might change that 7 feet in car translates to actually a car which is high, so they can alter that information, and then in our full send it back as well.",
            "Once this query is generated.",
            "Like I mentioned before, it can be sent to a knowledge graph or a knowledge repository like DB pedia or wiki data.",
            "To get the information."
        ],
        [
            "So."
        ],
        [
            "This is something which is an ongoing work.",
            "We have some of the components already developed up and running, but we are always trying to."
        ],
        [
            "To improve these components so there's an ongoing development work going on in developing additional reasoners and reasoning strategies, then we are also investigating utilization of some of the machine learning based arbitration and mediation techniques so.",
            "Being able to utilize for example, based on previous information which reasoners delivered the best response.",
            "If we can utilize that to identify in for a future query what will be the best reason there we're trying to utilize some of that information and then also right now the contextual information is in a very simple key value format, so we're trying to also look at some of the richer representation of contextual information as well.",
            "If you have any questions, I'll be happy to answer this."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "My name is Kristi, Jen and this is joint work with my colleagues.",
                    "label": 0
                },
                {
                    "sent": "A asra.",
                    "label": 0
                },
                {
                    "sent": "Julian David Martin, who's here in the back and then Bill Gerald so.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We give a bit of introduction about the organization, just single slide.",
                    "label": 0
                },
                {
                    "sent": "So I work at a principle research engineer at new ones research lab in Sunnyvale.",
                    "label": 1
                },
                {
                    "sent": "The group which I work on, the group which I'm part of.",
                    "label": 0
                },
                {
                    "sent": "It works on topics which are in the area of knowledge representation and reasoning.",
                    "label": 1
                },
                {
                    "sent": "There are other groups which are doing more stuff in the area of speech to text and things along those lines.",
                    "label": 0
                },
                {
                    "sent": "The Sunnyvale lab.",
                    "label": 0
                },
                {
                    "sent": "It does a lot of work in both applied as well as foundational research in the area of things like artificial intelligence and natural language processing over group consists of about 15 people that were's backgrounds.",
                    "label": 0
                },
                {
                    "sent": "Some come from semantic web, some have a natural language processing background, some dialogue, and then of course knowledge representation and so on.",
                    "label": 0
                },
                {
                    "sent": "So the.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Work which I'm presenting the main motivation behind that is, imagine that you have an automotive assistant which is embedded in your car nowadays.",
                    "label": 0
                },
                {
                    "sent": "You don't even have to imagine, because if you're carrying a smartphone, you have one of those assistants in your phone.",
                    "label": 0
                },
                {
                    "sent": "But if you can imagine there's one in your car which can assist you with either finding parking or finding gas station, finding restaurants, finding movies, whatever things you are looking for, so you're driving on a rainy day and you are trying to find.",
                    "label": 1
                },
                {
                    "sent": "Parking near downtown or city centre roughly around 5:00 o'clock.",
                    "label": 0
                },
                {
                    "sent": "So one can imagine like if you ask this question to a simple automotive assistant, you would think like why do you even need a sophisticated framework like this?",
                    "label": 0
                },
                {
                    "sent": "You can just send the query to Google and you know you might be able to get the information back, but to process requests which are along these lines you have to consider a whole bunch of different requests, different factors.",
                    "label": 0
                },
                {
                    "sent": "One of them is that time.",
                    "label": 0
                },
                {
                    "sent": "What time are you asking this question?",
                    "label": 0
                },
                {
                    "sent": "What is the time at which the request is supposed to be fulfilled?",
                    "label": 0
                },
                {
                    "sent": "What is the location at which you are and any other preferences which you might have?",
                    "label": 0
                },
                {
                    "sent": "So for example, you may prefer parking spots which are.",
                    "label": 0
                },
                {
                    "sent": "In a safer area compared to something else, or which are not dimly lit.",
                    "label": 0
                },
                {
                    "sent": "So for each of the factors which I mentioned earlier, space, time, location, and any other contextual information, you need a specialized reason.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Module.",
                    "label": 0
                },
                {
                    "sent": "So the work which I'm presenting here today, it provides a framework which allows you to plug in different reasoners which each can do specific task.",
                    "label": 1
                },
                {
                    "sent": "The framework further allows you to identify which are the right set of reasoners to invoke given a particular challenge.",
                    "label": 0
                },
                {
                    "sent": "So it's possible that the query which you are asking it does not involve any temporal component.",
                    "label": 0
                },
                {
                    "sent": "All it is is a simple fact based query.",
                    "label": 0
                },
                {
                    "sent": "So in that case you don't need to invoke all the reasoners.",
                    "label": 0
                },
                {
                    "sent": "So you have to identify the best set of reasoners to utilize, and then once you have the different reasoners up and running and you send the query to them, they give you the response back.",
                    "label": 0
                },
                {
                    "sent": "Then eventually you have to provide a consistent response back to the user.",
                    "label": 0
                },
                {
                    "sent": "So the framework which we have over.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Here it allows you to essentially do these three things, which is identify the best set of reasoners, merge the, merge their responses back from them, and at the same time plug in these reasoners as and when they are required.",
                    "label": 0
                },
                {
                    "sent": "So this is roughly the stack which we guys are working with.",
                    "label": 0
                },
                {
                    "sent": "So nuanced reasoning framework and I'll get into more details related to this later on, but you have different specialized reasoners, so you have one which is a contextual reason are you can have spatial reasoners.",
                    "label": 0
                },
                {
                    "sent": "You can have temporal reasoners.",
                    "label": 0
                },
                {
                    "sent": "If you wanted to have special reason, there's four different domains, like movies or anything like that you can plug that in as well.",
                    "label": 0
                },
                {
                    "sent": "Once the reasoners are done doing their task, and you have, let's say, a query or something which can be utilized by a knowledge graph, something like a DB pedia or wiki data, then what you can do is you can take the responses back from the reasoner and you can try to put it.",
                    "label": 0
                },
                {
                    "sent": "Or you can try to utilize one of these knowledge graphs and get the responses back and presented back to the user.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So some of the key features which are included as part of the nuanced reasoning framework.",
                    "label": 1
                },
                {
                    "sent": "First of all, it's flexible.",
                    "label": 0
                },
                {
                    "sent": "It's flexible in the sense that you can plug in a wide range of reasoning techniques you can plug in a rule based reasoner if you would like.",
                    "label": 1
                },
                {
                    "sent": "We already have a few different rules based reasoners which are part of this.",
                    "label": 0
                },
                {
                    "sent": "If you would like, you can also plug in a statistical module which can take information, process it and give the response back.",
                    "label": 0
                },
                {
                    "sent": "Or if there is something else that you would like to work with, you can do the same thing with this as well.",
                    "label": 0
                },
                {
                    "sent": "The other key feature is reasonable arbitration, so as I mentioned earlier, for a given request you may not require all the different reasoning modules or reasoning components, so this allows you to identify which is the right reasoning component to utilize for a given query.",
                    "label": 0
                },
                {
                    "sent": "And even this is plug-in based component, so if you wanted to use one arbitration technique, so if you wanted to utilize all of them, you can utilize a greedy technique versus if you wanted to utilize.",
                    "label": 0
                },
                {
                    "sent": "A more sophisticated technique.",
                    "label": 0
                },
                {
                    "sent": "Let's say you have a measure using which you can identify.",
                    "label": 1
                },
                {
                    "sent": "These are the reasons I trust for this kind of query.",
                    "label": 0
                },
                {
                    "sent": "I'm only going to use those.",
                    "label": 0
                },
                {
                    "sent": "You can do that consistency checker.",
                    "label": 0
                },
                {
                    "sent": "Again, this is also a framework which you can plug in and remove.",
                    "label": 0
                },
                {
                    "sent": "So this merges responses from different reasoners once they have returned it back to you and even over here you can give priority.",
                    "label": 0
                },
                {
                    "sent": "So you can give higher priority to a special reason or which you have developed versus higher priority to something else which is always up and running.",
                    "label": 0
                },
                {
                    "sent": "An RF has a number of different reason.",
                    "label": 0
                },
                {
                    "sent": "There's which are built in, so there is a special spatial reasoning which is already part of it.",
                    "label": 0
                },
                {
                    "sent": "There's a temporal reasoner and a contextual reasoner as well.",
                    "label": 0
                },
                {
                    "sent": "So there are different reasoners and all of these reasons they can be configured as well by changing the rules or the.",
                    "label": 0
                },
                {
                    "sent": "The other handlers which are associated with it.",
                    "label": 0
                },
                {
                    "sent": "So an example related to what NRF can do is.",
                    "label": 1
                },
                {
                    "sent": "So let's say you receive query saying find parking near the stadium.",
                    "label": 0
                },
                {
                    "sent": "So the very first thing which NRF does is it tries to convert it into a logical form.",
                    "label": 0
                },
                {
                    "sent": "So tries to identify the different components like the user is looking for parking.",
                    "label": 0
                },
                {
                    "sent": "It's near it's near another point of interest in that point of interest happens to be a stadium.",
                    "label": 0
                },
                {
                    "sent": "Once that query is fed into an RF, the different reasoners are invoked.",
                    "label": 0
                },
                {
                    "sent": "They can be invoked in parallel, or they can be invoked one by one, and once their responses are received back an are full, merge them together and then it will return the final query back to the user.",
                    "label": 0
                },
                {
                    "sent": "The other important component related to NRF is, let's say if you're working in automobile domain, then contextual information is a big part.",
                    "label": 0
                },
                {
                    "sent": "Contextual information in this case means the information which is coming from the car itself.",
                    "label": 0
                },
                {
                    "sent": "So for example, if the windshield wipers are on, and so on.",
                    "label": 0
                },
                {
                    "sent": "So NRF is also able to consume any additional information besides the input query which the user has given.",
                    "label": 0
                },
                {
                    "sent": "So if you're using an automotive assistant in a car, it can consume engine related parameters and so on.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So this is the processing flow, so you have NRF NRF before it utilizes the different reasons it actually works by using reasoner handlers.",
                    "label": 1
                },
                {
                    "sent": "So the advantage which we get as a result of it is that everybody or anybody can develop and you reasoner and they can plug it in without having to modify the core NRF code.",
                    "label": 0
                },
                {
                    "sent": "These reasons are handlers.",
                    "label": 0
                },
                {
                    "sent": "In turn, they communicate with the different reasoners.",
                    "label": 0
                },
                {
                    "sent": "So new developer who's trying to create a new reasoning component.",
                    "label": 0
                },
                {
                    "sent": "They have to just develop the reason handler and reason, and then they can plug it in.",
                    "label": 0
                },
                {
                    "sent": "The input information to the NRF consists of the query as well as the contextual information, so the query in this case could be give me parking or find parking related information for me and then the context could be that the car height is 7 feet.",
                    "label": 1
                },
                {
                    "sent": "This information is fed into NRF, which then invokes the different reason air handlers, which can be relevant for this query and contextual information.",
                    "label": 0
                },
                {
                    "sent": "The reason their handlers can then take this query, transform it into a way which can be consumed by the different reasoners, and then once the reasoners, whether they're using rule based techniques or statistical techniques, they can work with it and then return the information back to the reasoner handlers, who in turn then send it back to NRF.",
                    "label": 0
                },
                {
                    "sent": "Oops.",
                    "label": 0
                },
                {
                    "sent": "Sorry.",
                    "label": 0
                },
                {
                    "sent": "Once the information is returned from NRF, returned back to NRF NRF, and then merge the different responses together using a variety of techniques, and then it provides the output query as well as any modified contextual information.",
                    "label": 0
                },
                {
                    "sent": "So for example, the reasoners might change that 7 feet in car translates to actually a car which is high, so they can alter that information, and then in our full send it back as well.",
                    "label": 0
                },
                {
                    "sent": "Once this query is generated.",
                    "label": 0
                },
                {
                    "sent": "Like I mentioned before, it can be sent to a knowledge graph or a knowledge repository like DB pedia or wiki data.",
                    "label": 0
                },
                {
                    "sent": "To get the information.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This is something which is an ongoing work.",
                    "label": 0
                },
                {
                    "sent": "We have some of the components already developed up and running, but we are always trying to.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "To improve these components so there's an ongoing development work going on in developing additional reasoners and reasoning strategies, then we are also investigating utilization of some of the machine learning based arbitration and mediation techniques so.",
                    "label": 1
                },
                {
                    "sent": "Being able to utilize for example, based on previous information which reasoners delivered the best response.",
                    "label": 0
                },
                {
                    "sent": "If we can utilize that to identify in for a future query what will be the best reason there we're trying to utilize some of that information and then also right now the contextual information is in a very simple key value format, so we're trying to also look at some of the richer representation of contextual information as well.",
                    "label": 0
                },
                {
                    "sent": "If you have any questions, I'll be happy to answer this.",
                    "label": 0
                }
            ]
        }
    }
}