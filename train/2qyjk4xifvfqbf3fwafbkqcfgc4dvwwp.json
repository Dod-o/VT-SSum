{
    "id": "2qyjk4xifvfqbf3fwafbkqcfgc4dvwwp",
    "title": "Submodularity in Machine Learning and Vision",
    "info": {
        "author": [
            "Andreas Krause, Department of Computer Science, ETH Zurich"
        ],
        "published": "April 3, 2014",
        "recorded": "September 2013",
        "category": [
            "Top->Computer Science->Computer Vision",
            "Top->Computer Science->Machine Learning"
        ]
    },
    "url": "http://videolectures.net/bmvc2013_krause_machine_learning/",
    "segmentation": [
        [
            "Welcome to this tutorial on submodularity in machine learning.",
            "Envision a couple of disclaimers in announcements for starters.",
            "So first of all, this is based on some earlier tutorials I've given at ICL this year together with Steffi Galka and some earlier tutorials together with Carlos Guestrin second announcement myself.",
            "I'm not really computer vision researcher, so I picked a couple of examples from machine vision and applications of modularity in this field.",
            "But please excuse my naivete even talking about vision and its terminology.",
            "And Lastly, there's some bad news, just not going to be any cats in this tutorial.",
            "OK, so."
        ],
        [
            "So let's start the first applications.",
            "Actually something that I've worked in myself and it's in network inference.",
            "Suppose we listen to the pulse of the blogosphere, the millions of blogs and mainstream media that are out there as they discuss events by listening to what these people have to say, can we infer something about how information flows and propagates online?",
            "Can we find out who say that most influential flog bloggers?",
            "Can we use that to make recommendations?"
        ],
        [
            "Next application is actually from vision.",
            "It's an object detection that's clearly one of the classical applications of computer vision.",
            "You give an image and you would like to say what's on that image.",
            "For example pedestrians.",
            "But in an image like this one, but as multiple occurrences of these objects, it's sometimes that are partly occluding each other.",
            "This can actually be quite a challenging task.",
            "The question is where those objects and how many are there.",
            "The last ones also."
        ],
        [
            "Vision problem I very classical, one segmentation and more general problems in vision.",
            "So like segmentation be given an image like this one and we'd like to figure out what's foreground and what's background.",
            "Or maybe what objects are, where the boundaries and so on.",
            "And oftentimes you can write those problems as inference problems in probabilistic graphical models, in particular discrete graphical models, and you would like to find configurations of the hidden variables in those graphical models that are most likely given the data.",
            "The question is in which certain circumstances can be solved those problems efficiently.",
            "OK, these are a couple of motivating applications, sort of setting the frame of what we're going to talk about today."
        ],
        [
            "And what do they have in common?",
            "So first of all, they can all be understood as combinatorial optimization problems, in particular subset selection problems.",
            "They've given some function F that takes sets of elements and quantifiers.",
            "The utility or their cost, and we would like to maximize utility or minimize costs subject to some constraints.",
            "Now that inside alone is not very helpful yet.",
            "So generally such problems can be very hard, right?",
            "But Fortunately a lot of those problems actually have some nice structure.",
            "In particular, lot of those applications can be understood.",
            ", in a way that's such that the objective function that you care about, except it's a structural property called submodularity and not inside turns out to be very, very useful for various purposes.",
            "So for example, we can solve a number of quite challenging optimization problems involving submodular functions subject to various constraints and still prove something about how good the solutions are and the resulting solutions can be very useful in various types of learning problems.",
            "And there's a number of domains where techniques based on submodular optimization.",
            "Not really achieve state of the art performance.",
            "OK."
        ],
        [
            "So here is our plan for today, so we're going to start to talk about what is submodularity, what are submodular functions for those properties?",
            "How do I show that the given problem is submodular and so on?",
            "And then for most part of today's tutorial, we're going to focus on optimization, so we're going to focus both on minimization and maximization of submodular function, subject to various constraints, and turns out that one can see interesting things both about minimizing and maximizing functions, and they have different applications.",
            "So all over this tutorial.",
            "You talked quite a bit about applications.",
            "I tried to motivate it from the computer vision angle so we will talk about vision applications, but also some other learning applications and towards the end I'd like to give you some outlook of other current research interests involving submodular functions and the intersection with learning problems.",
            "OK, so another quick point."
        ],
        [
            "After so, that's a community resourcecalledsubmodularity.org, and that collects a number of interesting materials.",
            "For example, there's a bunch of slides, tutorials, code for optimization packages, references, annotated bibliography, links to workshops, and so on.",
            "So if you would like to learn more about submodular functions, I'd like to encourage you take a look at that reference.",
            "OK, so let's start with."
        ],
        [
            "A motivating example and try to make it more concrete to illustrate some of the key concepts and application is sensor placement.",
            "So suppose we have a building and we'd like to deploy a couple of sensors in this building to monitor the temperature.",
            "For example, would like to figure out if there's a fire or not.",
            "Now we want to cast this somehow as an optimization problem and we want to think about this."
        ],
        [
            "As problems will be given, some finite ground sets V in general containing elements and this you can think of as the locations they can possibly consider to put the sensor OK. And then we also have some function F that is going to take a subset of those elements from the and tells us the utility or their costs right?",
            "And if its utility would like to maximize it.",
            "Of course we'd like to minimize it.",
            "OK, I'll give more examples of how these functions look in a second.",
            "But we also do without loss of generality, we will assume that the empty set has no customer utility, so that usually is without loss of generality.",
            "OK, so picking nothing cost us nothing.",
            "Another technical point I'd like to quickly get to is how are those functions represented so clearly?",
            "You can write down a set function by just listing all the numbers, but all the values for all possible sets, But that's not a very compact coefficient representation.",
            "So in general, just assume that there is some sort of black box that we have that we can give except and it will evaluate the function for us.",
            "Maybe it will evaluate only up to some noise.",
            "There's some applications of that.",
            "And it turns out not to be too much of a problem.",
            "So for now, we'll just basically assume there's this black box that can evaluate this function for any set.",
            "OK, now what could this utility function measure?"
        ],
        [
            "For example, in the sensor placement application, well, we'd like it's to express things such as if you place the sensors shown maybe here at the informative locations, we get much higher utility's.",
            "If you place those sensors very close together where they all measure the same thing and we got lots of redundancy, very limited information, that's sort of like the characteristics that we would like to encourage.",
            "OK, so I'm going to talk about a property of a set function.",
            "Then we submodularity and that in order to do that we need one key notion that's associated with set functions, namely the."
        ],
        [
            "The marginal gain.",
            "So if you have a set function that measures for example informativeness or utility of sets of sensor locations, then we can look at how much the cell function increase by adding an element to the set.",
            "So let's call the marginal gain.",
            "We use the instrumentation Delta F of X given A and it just means how much the function increases if I add elements to set a.",
            "So it's really some sort of discrete derivative, right?",
            "How much this function increase if you add an element to the set right then or?",
            "Sort of cartoon illustration here.",
            "You could imagine it's sort of blue area that will cover if we add the sensor S. Given that we already have picked the two locations before.",
            "OK, now with this notion of marginal gain, we can say what is a submodular function."
        ],
        [
            "And it's a very simple idea.",
            "So let's consider two situations, Eplacement a that we've already deployed two sensors, one at locations, one in two, and a placement be then addition.",
            "We have deployed a couple more sensors, 3, four, and five.",
            "OK, and let's think what happens if you were to add a new sensor to some location S in either of those cases.",
            "If you add the sensor to this location in the first placement, begin a lot of additional coverage.",
            "A lot of additional information, but if you add the sensor to the same location in the second case in the second placement you only get a little bit of additional information, so adding the sensor there won't help us so much.",
            "OK, so in mathematical notation we have two sets.",
            "A&BA is a subset of B and we consider what happens if we add an element South that's not yet contained in set B.",
            "To either of those sets, and we look at what happens to this marginal gain, how to solve function value change if we add this element to either of those sets and submodularity just says that adding this element to the small set a.",
            "Increases the function at least as much.",
            "As if you were to add the same element S to this larger set B. OK, so it's a very natural notion of diminishing returns, right?",
            "If you already have lots of sensors, adding another one doesn't help us.",
            "Maybe as much as if we have few sensors right?",
            "And that really captures sort of this notion of economies of scale.",
            "And that explains why submodularity has been extremely useful and well studied in game theory in economics, for example.",
            "OK, and so here, just in terms of our marginal gain.",
            "Notation just says that marginal gain of adding S to a is greater than or equal to the marginal gain of adding S to be.",
            "OK, there's some alternative characterizations of submodular functions, and here's one."
        ],
        [
            "That also is very, very useful, so we just talked about this diminishing returns characterization in the previous slide, and that's not alternative one that's often called the Union intersection characterization of submodular functions.",
            "And that's mathematically maybe a little bit more elegant, but uses a little bit fewer symbols, and it just says the following.",
            "So if you take 2 arbitrary sets in general position A&B.",
            "Then if they evaluate A&B separately from each other and sum up the values of those functions at those sets, so FA plus FB, then that must be at least as much.",
            "Ask what we get if we evaluate the union and intersection separately and add those values together.",
            "OK so FA plus FP is greater than or equal to F of the Union of ANB plus F of the intersection of A&B.",
            "OK, and these two are equivalent.",
            "You can derive fun from the other and vice versa.",
            "OK, now if they are submodular."
        ],
        [
            "This is also something called supermodular functions, so function F is called super modular.",
            "If minus that function S of modular function.",
            "Right, it's a little bit like convex and concave functions, and we will talk a bit about the relation to convex and concave functions.",
            "Just a couple slides down the road, yes.",
            "Yeah, so it's maybe slightly less intuitive, but mathematically you show that one condition implies the other and vice versa.",
            "OK, so both of those interpretations are very useful and sometimes one is easier to prove than the other.",
            "And sometimes the other.",
            "OK, so these are super modular functions and a function that is both submodular and supermodular is called a modular function OK, and so by taking again this analogy from convex and concave functions, if a function is both convex and concave.",
            "Then it's a linear function, right?",
            "And sort of the same thing that happens here by the function.",
            "If it's both submodular and supermodular, then it's called a modular function, and it turns out it looks like a linear function basically.",
            "OK, it's basically a sum of weights.",
            "You can interpret it as an inner product.",
            "OK.",
            "But so."
        ],
        [
            "Now is a good time to ask a couple of questions.",
            "First, yes.",
            "Once again.",
            "For a hello, yeah, for a concave function to you would have a global maximum, but for super modular also would you get?",
            "I also do the same thing.",
            "Hold up, hold that thought we will talk about optimization for most part of this tutorial.",
            "Any other questions for now for the definitions?",
            "No, OK, there should be at least a couple of questions.",
            "So first of all, well given the problem, how do I know it's whether it's modular or not, right?",
            "How do I prove submodularity?",
            "Maybe for some simple examples and second well, why should I care?",
            "Why are submodular functions useful?",
            "OK, and so this is what we're going to talk about for the remaining of this tutorial.",
            "OK, so let's start with the first one."
        ],
        [
            "Given a problem, how do I show that it's submodular?",
            "OK, let's take again this cartoon of placing sensors in the building, and here's a very, very simplistic model of placing sensors in the building.",
            "OK, So what I can do is I can say if I have a sensor at some location, it's going to be able to measure something around it.",
            "OK, maybe in some radius OK, and everything in that radius can perfectly observe everything outside account observe.",
            "OK, now our placement problem.",
            "Well would be sort of to try to cover a floor plan with those sensing regions with those disks, right?",
            "So if this is the ground set of locations so you can pick.",
            "Then a placement just consists of a subset of those locations and we can define the value of that set just to be the total area covered by the regions associated with those sensors.",
            "OK, that's a very simplistic example.",
            "Mathematical notation.",
            "We can do something like this so we can see it as a separate set W. That's what we'd like to cover.",
            "Some of the area.",
            "The floorplan of this building, and with each sensor location I out of this ground set V we associate some set SI.",
            "And the value of the placement by collection of locations I the total value is just the total number of elements contained in the Union of those sets that depict.",
            "OK, so that's a very, very simplistic example of a function that still turns out to be extremely useful in practice.",
            "OK, so that's often called the set cover function or Max cover function, and so let's show that it's submodular."
        ],
        [
            "And it's quite easy to show and we show it by this diminishing returns characterization.",
            "Just decreasing marginal gains characterization.",
            "So, to do that, we have to take a set A let's contain in some super Set B and we have to consider what happens if we add an element, right?",
            "If we had element S prime on where to add it to either of those sets.",
            "So what you have to do is we have to find out what's the additional utility that we get right?",
            "The additional area that we haven't yet covered, and in this cartoon picture here it's just this yellow area.",
            "OK, and now it's pretty easy to see.",
            "That as we sort of have already placed more and more sensors, the additional area that any new sensor can cover can only decrease.",
            "Why does we add elements to offset a this yellow area can only get smaller.",
            "OK, and that just says that the marginal gain of adding as prime to this set A is greater than or equal to.",
            "Adding it to set B which prove submodularity.",
            "OK, so that's proof by picture.",
            "OK, so the rest is just to write that down and mathematical notation.",
            "OK, but now that's a very simplistic model, but the nice thing about submodular functions is that they actually capture much richer phenomena, so here's."
        ],
        [
            "More sophisticated one that involves graphical models.",
            "So for example, what we could do is we would like to somehow reason about our uncertainty about the temperature.",
            "So what we could do is we could have at any location in our building a random variable Yi that expresses the value of the temperature at that location.",
            "OK, and we have some prior model may be expressed as a probabilistic model that tells us our prior assumptions on how those temperature values are correlated, But the temperature itself is unobservable, it's latent.",
            "But what we can do is we can try to put some sensors.",
            "For example, if you have a sensor at some location S. Done, it may provide us with a noisy estimate, excess of the temperature at the same location YS.",
            "OK, so this is just YS plus some noise and then our probabilistic model would just tell us sort of our prior assumptions about spatial correlation as well as anything we know about say signal to noise characteristics of the sensors.",
            "Now, once we have this model, we can use it to gauge the."
        ],
        [
            "Benefit of having sensors at a set of locations.",
            "So for example, if what we can do is, we can define as the utility of the placement as the utility of the set a just the reduction in uncertainty that I get by having access to measurements to those variables X indexed by the city.",
            "OK, so I can define it as difference between the prior entropy of the of the latent variables, so my uncertainty before I know anything minus the uncertainty that's left after I've made the observations.",
            "OK, now that's quite complex definition, right?",
            "So the mutual information between variables Y, intercept, XA just to evaluate it I have to do Bayesian inference.",
            "Right, so that's where you see where this black box slide, which may itself be a PR problem, right?",
            "So where things get get quite challenging, so there's certainly a much richer model.",
            "OK, now we can ask and what sort of circumstances is this objective function is submodular.",
            "OK, so he."
        ],
        [
            "So we can think about it.",
            "So if you have these latent variables Y one through YM, which we would like to infer, and we can choose among these variables X one through XN.",
            "Is a discrete random variables and we measure this mutual information.",
            "Now it turns out in general this function is not submodular, but under some very natural conditions.",
            "So for example, if these variables XI that we can pick are conditionally independent, given what you try to infer, then this function F is is submodular.",
            "Now what does this mean when it basically means that those sensors have independent measurement noise, right?",
            "Which is certainly often the case in the sensing applications.",
            "OK, now this is a fairly rich model, right?",
            "Sort of to valuate the utility.",
            "We do Bayesian inference in this in this complex model, right?",
            "But the objective function is submodular.",
            "And we talk about why that's useful in a second right?",
            "But sort of at least.",
            "It's a nice example of this module function.",
            "Now these are both examples of utility functions that we'd like to maximize, but submodularity is also a very natural notion of cost.",
            "OK here."
        ],
        [
            "Sort of a classical example that's used quite a bit in vision.",
            "They need to cut function.",
            "And it goes as follows.",
            "So here we have a graph on 8 vertices and the edges of this graph associated with with mates.",
            "And now what we can do is we can define a set function that takes a set of vertices, maybe those.",
            "And tells us the total weight of all the edges that connect the vertices in the set A.",
            "And the vertices that are not in that city.",
            "OK, just an example.",
            "In this particular example of the cut function, what would be the value of that set a?",
            "Any guesses, suggestions 2?",
            "Right, so there's these two edges here, right?",
            "So the one connecting CT and D2F, right?",
            "So that's the edges?",
            "OK, the value here would be 2, and now it turns out that this cat function is in fact a submodular function.",
            "And it's actually quite easy to show and the proof is sort of nice and show some interesting properties that I like to do with."
        ],
        [
            "So how can we show it?",
            "Well, the idea is to actually break this cut function apart into much simpler parts.",
            "So let's look at the cut function of the simplest or almost the simple scratch that you can imagine.",
            "OK, so what's that graph wells graph on two vertices A&B?",
            "OK, now for that simple graph.",
            "What we can do is we can enumerate.",
            "We can write down the value.",
            "Off the function for any set right, the set containing nothing set containing a containing B containing both.",
            "Again by the way we defined it, if you pick nothing, we cut nothing.",
            "If you pick both, we cut nothing.",
            "But if you cut either A or B, we cut the edge.",
            "So we encourage cost of W. OK, now what you can do is you can try to prove that this function is so marginal and true that we now use this union intersection property.",
            "OK the other one so we can look at those sets right?",
            "We just define a be the set containing little A&B is the set containing it'll be, so the intersection is empty.",
            "The union that contains in B.",
            "And now what we have to ensure is that the sum of FA plus FP is greater than or equal to F of the intersection plus F of the Union.",
            "And for this inequality to hold, what do we require of this?",
            "The parameters of this graph, but assault for this edge weights W?",
            "Greater than zero, exactly right?",
            "So whenever this W is greater than or equal, excuse me to 0.",
            "Dennis is in fact the submodular function.",
            "OK, now we know that cut functions for two nodes are submodular.",
            "Now, can you do it for general graphs?",
            "And here's sort of the cute insight.",
            "So what we can do is we can understand the cut function of an arbitrary graph just as the sum of cut functions of all pairs of nodes in that graph.",
            "OK, we can write it down as a big sum that we have one term for each of those pairs of elements.",
            "Of a separate function fij that just measures the value of the cuts restricted to that pair of edges.",
            "OK. And now that means that each of those terms fij is a cut function.",
            "Sort of.",
            "This two nodes up graph I, J.",
            "And that we already know is submodular, assuming all the weights are non negative.",
            "And so now the question is, does that already imply that the function F of X is so modular or not, and it turns out that in fact does imply that, and the reason for that is a very, very nice and extremely useful property of submodular functions."
        ],
        [
            "That sums of submodular functions still remains submodular.",
            "It's pretty easy to see into proof on the inequality.",
            "In fact, not just sums, but any convex combinations are non negative linear combinations of functions of submodular functions, so they form a cone.",
            "OK, so that's quite nice.",
            "It's very useful, so it's very useful.",
            "For example, for Bayesians, if you have a model that has some parameters in it, and you have a prior of those parameters, then sort of the expected utility according to your prior.",
            "Is a convex combination is going to be submodular, so that is very useful if you have different criteria you'd like to optimize.",
            "Well, any scalar isation is going to be.",
            "Still submodular, and that's maybe even the most important is that it's sort of a basic proof technique so that the functions of this form arise over and over again.",
            "OK, some softball similar functions arrive arise many times.",
            "So that's sort of a nice property of submodular functions.",
            "We already alluded to the fact that submodular function is sort of related both to convex and concave functions."
        ],
        [
            "Might stop, but the question is what are they more like?",
            "What are they really more like convex functions or more like concave functions?",
            "So oftentimes you read in the literature that submodular functions as sort of often viewed as the discrete analogue of convex functions, and that's good arguments for."
        ],
        [
            "So, for example, Convexity admits a very nice duality theory, so the submodularity.",
            "And and maybe that's most crucial as one can minimize convex functions efficiently at least most convex functions.",
            "Or many one can minimize submodular functions efficiently.",
            "And that goes via very interesting and useful quantity that's associated with this submodular set function, namely an extension of the set function, and I'm going to talk about that and this extension terms would be convex, so there's some very good connections to convexity, so we'll get back to that in just a couple minutes.",
            "But there's also, this is really only half of the story, so submodular functions are really also very closely connected."
        ],
        [
            "To concave functions.",
            "OK, and so that's actually very easy to see.",
            "So let's take the definition.",
            "So this is this diminishing returns characterization reminder.",
            "Adding an element to the small set increases our utility by at least as much as adding it to the Super set.",
            "OK, now let's contrast that to the definition of concave functions in one dimension.",
            "Well, here's one way of how you can characterize concave functions.",
            "Well, you can see whenever I take a number a that's less than or equal to a number B and I add some other non negative positive number S. To either of those.",
            "Then it must hold that F increases more if I add S to a then if I add S to be.",
            "OK, so that's sort of very, very similar to that in if definition of submodularity.",
            "Right, so that's sort of also very useful picture to have in mind, but it looks like it could function just some other very nice connections that also turns out to be very power."
        ],
        [
            "So from a modeling standpoint.",
            "Which is the following.",
            "So suppose the.",
            "So here's a very simple way of constructing set functions.",
            "So one thing we can do.",
            "Is we can just.",
            "Given a set, count how many elements are in that set.",
            "And then apply some scalar function to that number.",
            "OK right, so for example, the square root of the log, or exponentiated or something like that, right?",
            "So formally, we basically construct the set function F of a.",
            "It takes us at a.",
            "By counting how many elements are in A and applying some function G. Twit OK, and now for those functions constructed in this way, it holds that there submodular if and only if can you make a guess G is.",
            "Has to satisfy this diminishing returns property, but adding element to small sets helps more, right?",
            "That's the concavity.",
            "Right, those functions are submodular if and only if G is concave.",
            "So those functions look like this.",
            "OK, now that's actually very useful for modeling.",
            "We'll see examples of that later, but also some other interesting consequences."
        ],
        [
            "So here's an interesting concept.",
            "So let's take two submodular functions F1 and F2.",
            "And construct a new function out of it F. That is just the pointwise maximum.",
            "OK, so any set a we just evaluate F1 of A and F2 of A and take the bigger of those two numbers that's on you function, right?",
            "Very easy, very well defined.",
            "OK, now the question is if F1 and F2 are submodular, does it mean that also F is submodular?",
            "Who votes for yes?",
            "OK, so there's a couple of votes for yes votes for no.",
            "OK, so has a majority is for yes.",
            "OK, so in fact unfortunately it turns out the answer is wrong, and so in fact the answer is no.",
            "And so here is a very simple example for this and we can be constructed from this previous slide and basically works as follows.",
            "So let's construct this modular function by applying a concave function to the cardinality and do it again.",
            "So we have those two functions, the pointwise Max function is the screen function.",
            "Still a function of the cardinality, right?",
            "But the Max of concave functions is not submodule anymore, it's not concave anymore, so the resulting function is not so much.",
            "OK, so this can go wrong.",
            "And also the other way around.",
            "So let's say."
        ],
        [
            "The the minimum point vice minimum right.",
            "We know concave functions.",
            "It actually told that if you take the minimum of concave functions, they get a concave function back, so I may think that maybe the same thing happens for submodular functions.",
            "But in fact the answer is no, even for modular functions.",
            "Answers now.",
            "OK, so in a sense submodular functions are both related, so."
        ],
        [
            "Convex functions and so concave functions and sort of this relationship causes both of those closest properties to fail in for me.",
            "So that's maybe an insertion.",
            "OK, so it really sort of has these two faces.",
            "These two flavors, and that sort of permeates submodular analysis.",
            "And there's a lot of really interesting things to be said about both the convex aspects, and they turn out to be very useful for numinus minimization.",
            "Well, as we can minimize convex function, sufficiently turns out we can minimize the modular functions efficiently.",
            "And concave functions right?",
            "So this relationship to contact concave functions and this one can maximize concave functions officially on can't actually quite get the exact answer for submodular maximization, but one can get very good results.",
            "With some very nice theoretical guarantees that one can state a problem.",
            "OK, so really these two phases of the of the coin that are very important to remember they're going to talk about both of those."
        ],
        [
            "OK, so now what can one do with submodular functions?",
            "There's quite a bit that one can do, so this is sort of the machine learning sort of focused few and submodular functions.",
            "There's quite a bit of work on optimization and applications to different learning problems, and I sort of if one talks about machine learning just very natural questions can learn submodular functions from data.",
            "Yes, I'm very nice applications of this and I'll talk a little bit about that and then some interesting questions.",
            "Sort of intersection of learning and optimization.",
            "You're talking a little bit about that towards the end of the tutorial.",
            "OK for most."
        ],
        [
            "Art will focus on optimization, and as he said, there's both these convex and concave aspects which are both useful for minimization and maximization.",
            "So the first question is sort of why are minimization and maximization not really the same thing, right?",
            "So if I have an algorithm for submodular minimization, right?",
            "So that takes any function F, any submodular function FN produces its minimum.",
            "Well, why can't I reduce maximization by just feeding minus F to the minimization algorithm?",
            "Well, general is not going to work right because minus F is general, not submodular anymore.",
            "Right minus F is is super modular.",
            "OK, so these are really two different things and also the techniques for minimization maximization are really quite different.",
            "OK, let's talk about men."
        ],
        [
            "Station is a number of interesting applications, will talk about some of those and for those."
        ],
        [
            "As I mentioned, the connection to convexity is very useful."
        ],
        [
            "So here's one very important aspect that I'd like to make explicit.",
            "So in computer vision one often talks about energy functions, and sort of usually what are at least from what I can tell.",
            "What one understands is functions that are defined sort of on binary vectors, right?",
            "Or at least screen configurations, and one can interpret set functions that act as subsets as functions that act on binary vectors in a very natural way, right?",
            "Set some binary vector size amorphic?",
            "Right, so we can just say if you take any sort of 1 vector right we just associated with the sets that we picked the elements that we set to one and we do not pick the elements that we set to 0, right?",
            "If we have our ground set contains N, F = 4 elements ABC and D. Right then the one inside you can think about.",
            "For example, the value of set containing a be right.",
            "On the other hand, we can think about the function that's defined on 01 vectors.",
            "And just evaluate F on the incidence vector of that set, right?",
            "Just the indicator vector that sets all the coefficients to one that we pick in the set and all the others to zero.",
            "OK, so those are often also called pseudo Boolean functions, so there's this very important connection to make that I'd like to put up here.",
            "OK, so let's see."
        ],
        [
            "About those, and now, once we what we can do is we can take such a function, write a set function or suitable in function and that is defined in general on those 01 vectors.",
            "Now what are those vectors?",
            "These are corners of the unit cube and end dimensions, right?",
            "So I think about this.",
            "N dimensional cube and I can basically think about the function as defined on its vertices on its corners.",
            "OK, so now one thing I can try to do is I can try to look at how does the function actually not just look at the corners, but look inside so I can try to extend the function to the interior of this unit.",
            "OK, and all there's many different ways of how one can do it.",
            "Turns out so modular functions admit actually a number of interesting extensions that all of their role but for minimization.",
            "One is maybe most important, and that's what's often called the last extension, which can be defined in the following way.",
            "So basically it can be defined.",
            "This is a little bit of a complicated expression, essentially as the optimal value of a certain linear program.",
            "OK, I'm going to talk about what that is in just a second, so if you take any vector X, there's just some point.",
            "Inside this and dementia unit cube, then what we can do is we can just look at what is the maximum value by taking any vector Y that's contained in some polyhedron PF that's associated with this function F. Let's say what is in just a second and just take the biggest of those vectors.",
            "OK. Now that's the way it's defined.",
            "This already clear that it's a convex function, right?",
            "So we have a bunch of linear functions for each value of why we have a linear function, so there's a bunch of those, and the Max of linear functions is always convex.",
            "Alright, so that's pretty clear.",
            "So the function is convex, but it turns out that essentially the minimum of F little F. The extension is also a minimum of the original function capital F. That means I can reduce the problem of minimizing.",
            "The set function F to the problem of minimizing its extension.",
            "Alright, so that means I want now minimize a convex function.",
            "Insight the unit cube, which is a convex set, just sort of standard convex minimization problem.",
            "And it turns out that was the crucial insight that actually allowed to show that submodule minimization can be solved as a convex minimization problem, which can be done in polynomial time using the ellipsoid method.",
            "But that's quite a bunch.",
            "I'll say more about other algorithms in just a second, but that sort of was very very important insight."
        ],
        [
            "Now to understand this more, let's look at this object PF and that really."
        ],
        [
            "Yes, one of the most important combinatorial quantities associated with the submodular function is called the submodular polyhedron and what it is.",
            "It's just a subset of RN, then dimensional real vectors, and it's all vectors X that satisfy a bunch of inequalities.",
            "That's going to be one inequality for every set a.",
            "And the inequality for any given set a just says take all the coefficients indexed by Dot.",
            "Set A and sum them up.",
            "And that must be less than the value of the set function.",
            "Less than or equal to.",
            "OK, so here's a picture, so this is a function.",
            "Trust me, it's modular, and let's look at this polyhedron PF.",
            "So what you can do is we can take look at all these inequality's.",
            "The first one just says the empty set of several something.",
            "Nothing is.",
            "So that's also the reason for normalization.",
            "So the first one is trivial, but the more interesting one is.",
            "Let's pick little element, little A and it just says the component of X associated with elements little a.",
            "So one of those two access.",
            "Must be less than or equal to the value of that element minus one.",
            "OK, so that's this yellow area here.",
            "OK.",
            "But same thing for the 2nd element, so that's what's left and the last inequality Now basically says that the sum of both components to one norm of the vector must be less than or equal to the value of the full set, which is 0, right?",
            "So this line is connect with server here.",
            "OK, so that's the set PF.",
            "OK, good, so that's pretty easy to write down."
        ],
        [
            "And now that means that in order to evaluate this function F of X, we basically need to solve an LP with us over the set.",
            "OK easy right?",
            "So that's the problem with just applying standard sort of LP solvers to this problem.",
            "How many inequality's do we have?",
            "Many rights.",
            "For every single set A.",
            "There's going to be an inequality, right?",
            "But in general that's going to be exponentially many inequality's.",
            "So pretty darn big LP.",
            "I don't want to write this down exactly now.",
            "It turns out, so this is exponentially many constraints.",
            "But amazingly, this LP can be solved in near linear time.",
            "OK, time ON log in.",
            "OK, that's really one of the fundamental results about submodular functions.",
            "In fact, innovate characterize system.",
            "OK, and here the optimal solution is basically just a closed form solution, so the most complicated operation one has to do is sorting.",
            "OK, so all you have to do is you sort the sum of the audios.",
            "A bit loud I think.",
            "OK, so you take the vector X sort coefficients and decreasing magnitudes that defines a sequence of sets that we get by adding elements according to the sort order and then can read off the value of the optimal solution to this LP from this sorted order.",
            "OK, so it's really in time N log many functional valuations.",
            "OK, and that's very useful.",
            "Immediately gives you a subgradient.",
            "So if you want to do convex optimization, gives you what you need.",
            "I can use it as a separation Oracle for the ellipsoid method and so on.",
            "So this is all you basically need for optimization.",
            "OK."
        ],
        [
            "So here is how the lowest extension looks like.",
            "Basically on this on the simple example, as this is the extension.",
            "OK, so it's piecewise linear.",
            "OK, so."
        ],
        [
            "What can be said about minimization?",
            "So in general, we've seen that these functions have these nice convex extensions, and as work that tries to minimize submodular functions via this convex extension.",
            "Right this one can use the ellipsoid algorithm.",
            "That's not very practical in general, but works in polynomial time.",
            "For a long time, and this is actually open.",
            "Whether it's possible to to construct explicitly combinatorial algorithms, system, modular function minimization that only sort of get to look at values or sets and so on.",
            "So not try to work why it is convex relaxation.",
            "OK, and that was a really long open question and its solution was awarded a major mathematical price to focus on price for this solved in the early 2000s, and since then there's been quite a bit of work but the best, tutorial algorithms are still somewhat slower, so they basically the number function evaluations depending on which one of them uses on the order to enter the four into the five.",
            "Writing for very large problems that's not really practical.",
            "Now on the convex side, there also has been some work using other techniques.",
            "For example, one can try to lift modern results from convex analysis, see accelerated gradient methods after certain types of submodular functions, and one very important algorithm that's based on context minimization is called the minimum norm algorithm in that space that is fundamentally relying on duality, and I just want to give the idea because it's a very very useful algorithm."
        ],
        [
            "And it works like like this.",
            "So we set the basic submodular minimization problem essentially requires to solve problems of this format.",
            "You want to minimize all vectors X.",
            "This function F of X subject dots.",
            "These vectors are contained in this in this unit, and it turns out that one can rewrite this optimization problem.",
            "It's not obvious, but it's a theorem in the following way, so this problem is equivalent to trying to minimize over all vectors X of FX.",
            "Now this is unconstrained.",
            "So we don't restrict X to be in the unit cube, but we ensure that sort of X is regularised.",
            "OK, X remains small.",
            "OK, so that's a pretty interesting result to sugar and all one can do is we can look at the norm.",
            "One can look at the dual of this optimization problem.",
            "And that has a pretty interesting form.",
            "So the dual of this optimization problem essentially is what's called the minimum norm point problem.",
            "OK, and goes like this.",
            "It says find me the vector U that's closest to the origin.",
            "OK, now not any vector but a vector that's contained in some set PDF and what is the set PDF?",
            "The set PF is what's called the base polytope.",
            "It's a particular part of the submodular polyhedron, namely this green facet up here.",
            "OK, and what is this?",
            "It's basically just the facet of this polyhedron where the last inequality is tight.",
            "OK, by the way, the L1 norm of the vector sum to the value of the full set.",
            "OK, so now here's the algorithm.",
            "Find the point close to the origin there this.",
            "Coordinates on minus one, one.",
            "And then read off the optimal solution.",
            "OK, turns out you can just read out the optimal solution by it.",
            "By just looking at all the coefficients that are non positive.",
            "And retain them.",
            "OK, that makes up your solution.",
            "Astar just the set of all industries I.",
            "Such that the coefficient entry is non positive.",
            "OK, so let's try it right, so it's minus one, one, so it says the first element here is belonging to little a right?",
            "So that's non positive.",
            "So we should pick it.",
            "So let's pick little A and the second one right corresponding to B.",
            "Has a positive coefficient is 1, so that means let's not pick B. OK, it means a star.",
            "It's the set containing only little A and right as it happens, this actually turns out to be the minimal solution.",
            "OK, and that's not just coincidence, but the theorem right?",
            "So basically this solution minimizes F overall sets.",
            "OK, so that is a very useful insight, and it turns out that of course one question that one has to have to solve this one.",
            "This one find this point closest to the origin.",
            "How does one solve this minimum algorithm?",
            "There's an algorithm due to Wolf that solves it."
        ],
        [
            "And then applies it when gets an algorithm that actually works really quite well.",
            "So that's currently considered sort of the best general purpose submodular minimization problem.",
            "If you don't know anything about your problem besides its modular minimization problem, then there's a good chance that this algorithm is going to.",
            "Worked really well on it and be a lot faster than any of those.",
            "Amatoriale algorithms OK, The catch is that no one actually knows how fast this algorithm.",
            "OK, so it's in practice usually orders of magnitude faster, but no one knows.",
            "It's known to terminate, and at most that's exponentially many iterations, but no one actually knows if there is an instance where it takes exponentially, many iterations, OK, could be like the simplex method, where it could actually happen.",
            "In practice.",
            "It basically never happens, but it's in principle no one knows.",
            "OK, so this is very useful algorithm, so if you don't know so one takeaway message about minimization so far.",
            "So if you don't know anything about the problem beside.",
            "As submodularity and you want to minimize it, then this is an algorithm to try.",
            "And estimations of that available."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Welcome to this tutorial on submodularity in machine learning.",
                    "label": 1
                },
                {
                    "sent": "Envision a couple of disclaimers in announcements for starters.",
                    "label": 0
                },
                {
                    "sent": "So first of all, this is based on some earlier tutorials I've given at ICL this year together with Steffi Galka and some earlier tutorials together with Carlos Guestrin second announcement myself.",
                    "label": 0
                },
                {
                    "sent": "I'm not really computer vision researcher, so I picked a couple of examples from machine vision and applications of modularity in this field.",
                    "label": 0
                },
                {
                    "sent": "But please excuse my naivete even talking about vision and its terminology.",
                    "label": 0
                },
                {
                    "sent": "And Lastly, there's some bad news, just not going to be any cats in this tutorial.",
                    "label": 0
                },
                {
                    "sent": "OK, so.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So let's start the first applications.",
                    "label": 0
                },
                {
                    "sent": "Actually something that I've worked in myself and it's in network inference.",
                    "label": 1
                },
                {
                    "sent": "Suppose we listen to the pulse of the blogosphere, the millions of blogs and mainstream media that are out there as they discuss events by listening to what these people have to say, can we infer something about how information flows and propagates online?",
                    "label": 0
                },
                {
                    "sent": "Can we find out who say that most influential flog bloggers?",
                    "label": 0
                },
                {
                    "sent": "Can we use that to make recommendations?",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Next application is actually from vision.",
                    "label": 0
                },
                {
                    "sent": "It's an object detection that's clearly one of the classical applications of computer vision.",
                    "label": 1
                },
                {
                    "sent": "You give an image and you would like to say what's on that image.",
                    "label": 0
                },
                {
                    "sent": "For example pedestrians.",
                    "label": 0
                },
                {
                    "sent": "But in an image like this one, but as multiple occurrences of these objects, it's sometimes that are partly occluding each other.",
                    "label": 1
                },
                {
                    "sent": "This can actually be quite a challenging task.",
                    "label": 0
                },
                {
                    "sent": "The question is where those objects and how many are there.",
                    "label": 0
                },
                {
                    "sent": "The last ones also.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Vision problem I very classical, one segmentation and more general problems in vision.",
                    "label": 0
                },
                {
                    "sent": "So like segmentation be given an image like this one and we'd like to figure out what's foreground and what's background.",
                    "label": 0
                },
                {
                    "sent": "Or maybe what objects are, where the boundaries and so on.",
                    "label": 0
                },
                {
                    "sent": "And oftentimes you can write those problems as inference problems in probabilistic graphical models, in particular discrete graphical models, and you would like to find configurations of the hidden variables in those graphical models that are most likely given the data.",
                    "label": 1
                },
                {
                    "sent": "The question is in which certain circumstances can be solved those problems efficiently.",
                    "label": 0
                },
                {
                    "sent": "OK, these are a couple of motivating applications, sort of setting the frame of what we're going to talk about today.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And what do they have in common?",
                    "label": 0
                },
                {
                    "sent": "So first of all, they can all be understood as combinatorial optimization problems, in particular subset selection problems.",
                    "label": 0
                },
                {
                    "sent": "They've given some function F that takes sets of elements and quantifiers.",
                    "label": 0
                },
                {
                    "sent": "The utility or their cost, and we would like to maximize utility or minimize costs subject to some constraints.",
                    "label": 0
                },
                {
                    "sent": "Now that inside alone is not very helpful yet.",
                    "label": 0
                },
                {
                    "sent": "So generally such problems can be very hard, right?",
                    "label": 1
                },
                {
                    "sent": "But Fortunately a lot of those problems actually have some nice structure.",
                    "label": 0
                },
                {
                    "sent": "In particular, lot of those applications can be understood.",
                    "label": 0
                },
                {
                    "sent": ", in a way that's such that the objective function that you care about, except it's a structural property called submodularity and not inside turns out to be very, very useful for various purposes.",
                    "label": 0
                },
                {
                    "sent": "So for example, we can solve a number of quite challenging optimization problems involving submodular functions subject to various constraints and still prove something about how good the solutions are and the resulting solutions can be very useful in various types of learning problems.",
                    "label": 1
                },
                {
                    "sent": "And there's a number of domains where techniques based on submodular optimization.",
                    "label": 0
                },
                {
                    "sent": "Not really achieve state of the art performance.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So here is our plan for today, so we're going to start to talk about what is submodularity, what are submodular functions for those properties?",
                    "label": 1
                },
                {
                    "sent": "How do I show that the given problem is submodular and so on?",
                    "label": 0
                },
                {
                    "sent": "And then for most part of today's tutorial, we're going to focus on optimization, so we're going to focus both on minimization and maximization of submodular function, subject to various constraints, and turns out that one can see interesting things both about minimizing and maximizing functions, and they have different applications.",
                    "label": 0
                },
                {
                    "sent": "So all over this tutorial.",
                    "label": 0
                },
                {
                    "sent": "You talked quite a bit about applications.",
                    "label": 0
                },
                {
                    "sent": "I tried to motivate it from the computer vision angle so we will talk about vision applications, but also some other learning applications and towards the end I'd like to give you some outlook of other current research interests involving submodular functions and the intersection with learning problems.",
                    "label": 0
                },
                {
                    "sent": "OK, so another quick point.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "After so, that's a community resourcecalledsubmodularity.org, and that collects a number of interesting materials.",
                    "label": 0
                },
                {
                    "sent": "For example, there's a bunch of slides, tutorials, code for optimization packages, references, annotated bibliography, links to workshops, and so on.",
                    "label": 0
                },
                {
                    "sent": "So if you would like to learn more about submodular functions, I'd like to encourage you take a look at that reference.",
                    "label": 0
                },
                {
                    "sent": "OK, so let's start with.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "A motivating example and try to make it more concrete to illustrate some of the key concepts and application is sensor placement.",
                    "label": 0
                },
                {
                    "sent": "So suppose we have a building and we'd like to deploy a couple of sensors in this building to monitor the temperature.",
                    "label": 0
                },
                {
                    "sent": "For example, would like to figure out if there's a fire or not.",
                    "label": 0
                },
                {
                    "sent": "Now we want to cast this somehow as an optimization problem and we want to think about this.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "As problems will be given, some finite ground sets V in general containing elements and this you can think of as the locations they can possibly consider to put the sensor OK. And then we also have some function F that is going to take a subset of those elements from the and tells us the utility or their costs right?",
                    "label": 0
                },
                {
                    "sent": "And if its utility would like to maximize it.",
                    "label": 0
                },
                {
                    "sent": "Of course we'd like to minimize it.",
                    "label": 0
                },
                {
                    "sent": "OK, I'll give more examples of how these functions look in a second.",
                    "label": 0
                },
                {
                    "sent": "But we also do without loss of generality, we will assume that the empty set has no customer utility, so that usually is without loss of generality.",
                    "label": 0
                },
                {
                    "sent": "OK, so picking nothing cost us nothing.",
                    "label": 0
                },
                {
                    "sent": "Another technical point I'd like to quickly get to is how are those functions represented so clearly?",
                    "label": 0
                },
                {
                    "sent": "You can write down a set function by just listing all the numbers, but all the values for all possible sets, But that's not a very compact coefficient representation.",
                    "label": 0
                },
                {
                    "sent": "So in general, just assume that there is some sort of black box that we have that we can give except and it will evaluate the function for us.",
                    "label": 0
                },
                {
                    "sent": "Maybe it will evaluate only up to some noise.",
                    "label": 0
                },
                {
                    "sent": "There's some applications of that.",
                    "label": 0
                },
                {
                    "sent": "And it turns out not to be too much of a problem.",
                    "label": 0
                },
                {
                    "sent": "So for now, we'll just basically assume there's this black box that can evaluate this function for any set.",
                    "label": 1
                },
                {
                    "sent": "OK, now what could this utility function measure?",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "For example, in the sensor placement application, well, we'd like it's to express things such as if you place the sensors shown maybe here at the informative locations, we get much higher utility's.",
                    "label": 0
                },
                {
                    "sent": "If you place those sensors very close together where they all measure the same thing and we got lots of redundancy, very limited information, that's sort of like the characteristics that we would like to encourage.",
                    "label": 0
                },
                {
                    "sent": "OK, so I'm going to talk about a property of a set function.",
                    "label": 0
                },
                {
                    "sent": "Then we submodularity and that in order to do that we need one key notion that's associated with set functions, namely the.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "The marginal gain.",
                    "label": 0
                },
                {
                    "sent": "So if you have a set function that measures for example informativeness or utility of sets of sensor locations, then we can look at how much the cell function increase by adding an element to the set.",
                    "label": 0
                },
                {
                    "sent": "So let's call the marginal gain.",
                    "label": 1
                },
                {
                    "sent": "We use the instrumentation Delta F of X given A and it just means how much the function increases if I add elements to set a.",
                    "label": 0
                },
                {
                    "sent": "So it's really some sort of discrete derivative, right?",
                    "label": 0
                },
                {
                    "sent": "How much this function increase if you add an element to the set right then or?",
                    "label": 0
                },
                {
                    "sent": "Sort of cartoon illustration here.",
                    "label": 0
                },
                {
                    "sent": "You could imagine it's sort of blue area that will cover if we add the sensor S. Given that we already have picked the two locations before.",
                    "label": 1
                },
                {
                    "sent": "OK, now with this notion of marginal gain, we can say what is a submodular function.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And it's a very simple idea.",
                    "label": 0
                },
                {
                    "sent": "So let's consider two situations, Eplacement a that we've already deployed two sensors, one at locations, one in two, and a placement be then addition.",
                    "label": 0
                },
                {
                    "sent": "We have deployed a couple more sensors, 3, four, and five.",
                    "label": 0
                },
                {
                    "sent": "OK, and let's think what happens if you were to add a new sensor to some location S in either of those cases.",
                    "label": 0
                },
                {
                    "sent": "If you add the sensor to this location in the first placement, begin a lot of additional coverage.",
                    "label": 0
                },
                {
                    "sent": "A lot of additional information, but if you add the sensor to the same location in the second case in the second placement you only get a little bit of additional information, so adding the sensor there won't help us so much.",
                    "label": 0
                },
                {
                    "sent": "OK, so in mathematical notation we have two sets.",
                    "label": 0
                },
                {
                    "sent": "A&BA is a subset of B and we consider what happens if we add an element South that's not yet contained in set B.",
                    "label": 0
                },
                {
                    "sent": "To either of those sets, and we look at what happens to this marginal gain, how to solve function value change if we add this element to either of those sets and submodularity just says that adding this element to the small set a.",
                    "label": 0
                },
                {
                    "sent": "Increases the function at least as much.",
                    "label": 0
                },
                {
                    "sent": "As if you were to add the same element S to this larger set B. OK, so it's a very natural notion of diminishing returns, right?",
                    "label": 0
                },
                {
                    "sent": "If you already have lots of sensors, adding another one doesn't help us.",
                    "label": 0
                },
                {
                    "sent": "Maybe as much as if we have few sensors right?",
                    "label": 0
                },
                {
                    "sent": "And that really captures sort of this notion of economies of scale.",
                    "label": 0
                },
                {
                    "sent": "And that explains why submodularity has been extremely useful and well studied in game theory in economics, for example.",
                    "label": 0
                },
                {
                    "sent": "OK, and so here, just in terms of our marginal gain.",
                    "label": 0
                },
                {
                    "sent": "Notation just says that marginal gain of adding S to a is greater than or equal to the marginal gain of adding S to be.",
                    "label": 1
                },
                {
                    "sent": "OK, there's some alternative characterizations of submodular functions, and here's one.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "That also is very, very useful, so we just talked about this diminishing returns characterization in the previous slide, and that's not alternative one that's often called the Union intersection characterization of submodular functions.",
                    "label": 0
                },
                {
                    "sent": "And that's mathematically maybe a little bit more elegant, but uses a little bit fewer symbols, and it just says the following.",
                    "label": 0
                },
                {
                    "sent": "So if you take 2 arbitrary sets in general position A&B.",
                    "label": 0
                },
                {
                    "sent": "Then if they evaluate A&B separately from each other and sum up the values of those functions at those sets, so FA plus FB, then that must be at least as much.",
                    "label": 0
                },
                {
                    "sent": "Ask what we get if we evaluate the union and intersection separately and add those values together.",
                    "label": 0
                },
                {
                    "sent": "OK so FA plus FP is greater than or equal to F of the Union of ANB plus F of the intersection of A&B.",
                    "label": 0
                },
                {
                    "sent": "OK, and these two are equivalent.",
                    "label": 0
                },
                {
                    "sent": "You can derive fun from the other and vice versa.",
                    "label": 0
                },
                {
                    "sent": "OK, now if they are submodular.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "This is also something called supermodular functions, so function F is called super modular.",
                    "label": 1
                },
                {
                    "sent": "If minus that function S of modular function.",
                    "label": 0
                },
                {
                    "sent": "Right, it's a little bit like convex and concave functions, and we will talk a bit about the relation to convex and concave functions.",
                    "label": 0
                },
                {
                    "sent": "Just a couple slides down the road, yes.",
                    "label": 0
                },
                {
                    "sent": "Yeah, so it's maybe slightly less intuitive, but mathematically you show that one condition implies the other and vice versa.",
                    "label": 0
                },
                {
                    "sent": "OK, so both of those interpretations are very useful and sometimes one is easier to prove than the other.",
                    "label": 0
                },
                {
                    "sent": "And sometimes the other.",
                    "label": 0
                },
                {
                    "sent": "OK, so these are super modular functions and a function that is both submodular and supermodular is called a modular function OK, and so by taking again this analogy from convex and concave functions, if a function is both convex and concave.",
                    "label": 0
                },
                {
                    "sent": "Then it's a linear function, right?",
                    "label": 0
                },
                {
                    "sent": "And sort of the same thing that happens here by the function.",
                    "label": 0
                },
                {
                    "sent": "If it's both submodular and supermodular, then it's called a modular function, and it turns out it looks like a linear function basically.",
                    "label": 0
                },
                {
                    "sent": "OK, it's basically a sum of weights.",
                    "label": 0
                },
                {
                    "sent": "You can interpret it as an inner product.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "But so.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Now is a good time to ask a couple of questions.",
                    "label": 0
                },
                {
                    "sent": "First, yes.",
                    "label": 0
                },
                {
                    "sent": "Once again.",
                    "label": 0
                },
                {
                    "sent": "For a hello, yeah, for a concave function to you would have a global maximum, but for super modular also would you get?",
                    "label": 0
                },
                {
                    "sent": "I also do the same thing.",
                    "label": 0
                },
                {
                    "sent": "Hold up, hold that thought we will talk about optimization for most part of this tutorial.",
                    "label": 0
                },
                {
                    "sent": "Any other questions for now for the definitions?",
                    "label": 0
                },
                {
                    "sent": "No, OK, there should be at least a couple of questions.",
                    "label": 0
                },
                {
                    "sent": "So first of all, well given the problem, how do I know it's whether it's modular or not, right?",
                    "label": 0
                },
                {
                    "sent": "How do I prove submodularity?",
                    "label": 1
                },
                {
                    "sent": "Maybe for some simple examples and second well, why should I care?",
                    "label": 0
                },
                {
                    "sent": "Why are submodular functions useful?",
                    "label": 0
                },
                {
                    "sent": "OK, and so this is what we're going to talk about for the remaining of this tutorial.",
                    "label": 0
                },
                {
                    "sent": "OK, so let's start with the first one.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Given a problem, how do I show that it's submodular?",
                    "label": 0
                },
                {
                    "sent": "OK, let's take again this cartoon of placing sensors in the building, and here's a very, very simplistic model of placing sensors in the building.",
                    "label": 1
                },
                {
                    "sent": "OK, So what I can do is I can say if I have a sensor at some location, it's going to be able to measure something around it.",
                    "label": 0
                },
                {
                    "sent": "OK, maybe in some radius OK, and everything in that radius can perfectly observe everything outside account observe.",
                    "label": 1
                },
                {
                    "sent": "OK, now our placement problem.",
                    "label": 0
                },
                {
                    "sent": "Well would be sort of to try to cover a floor plan with those sensing regions with those disks, right?",
                    "label": 0
                },
                {
                    "sent": "So if this is the ground set of locations so you can pick.",
                    "label": 0
                },
                {
                    "sent": "Then a placement just consists of a subset of those locations and we can define the value of that set just to be the total area covered by the regions associated with those sensors.",
                    "label": 1
                },
                {
                    "sent": "OK, that's a very simplistic example.",
                    "label": 0
                },
                {
                    "sent": "Mathematical notation.",
                    "label": 0
                },
                {
                    "sent": "We can do something like this so we can see it as a separate set W. That's what we'd like to cover.",
                    "label": 0
                },
                {
                    "sent": "Some of the area.",
                    "label": 0
                },
                {
                    "sent": "The floorplan of this building, and with each sensor location I out of this ground set V we associate some set SI.",
                    "label": 0
                },
                {
                    "sent": "And the value of the placement by collection of locations I the total value is just the total number of elements contained in the Union of those sets that depict.",
                    "label": 1
                },
                {
                    "sent": "OK, so that's a very, very simplistic example of a function that still turns out to be extremely useful in practice.",
                    "label": 0
                },
                {
                    "sent": "OK, so that's often called the set cover function or Max cover function, and so let's show that it's submodular.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And it's quite easy to show and we show it by this diminishing returns characterization.",
                    "label": 0
                },
                {
                    "sent": "Just decreasing marginal gains characterization.",
                    "label": 0
                },
                {
                    "sent": "So, to do that, we have to take a set A let's contain in some super Set B and we have to consider what happens if we add an element, right?",
                    "label": 0
                },
                {
                    "sent": "If we had element S prime on where to add it to either of those sets.",
                    "label": 0
                },
                {
                    "sent": "So what you have to do is we have to find out what's the additional utility that we get right?",
                    "label": 0
                },
                {
                    "sent": "The additional area that we haven't yet covered, and in this cartoon picture here it's just this yellow area.",
                    "label": 0
                },
                {
                    "sent": "OK, and now it's pretty easy to see.",
                    "label": 0
                },
                {
                    "sent": "That as we sort of have already placed more and more sensors, the additional area that any new sensor can cover can only decrease.",
                    "label": 0
                },
                {
                    "sent": "Why does we add elements to offset a this yellow area can only get smaller.",
                    "label": 0
                },
                {
                    "sent": "OK, and that just says that the marginal gain of adding as prime to this set A is greater than or equal to.",
                    "label": 0
                },
                {
                    "sent": "Adding it to set B which prove submodularity.",
                    "label": 0
                },
                {
                    "sent": "OK, so that's proof by picture.",
                    "label": 0
                },
                {
                    "sent": "OK, so the rest is just to write that down and mathematical notation.",
                    "label": 0
                },
                {
                    "sent": "OK, but now that's a very simplistic model, but the nice thing about submodular functions is that they actually capture much richer phenomena, so here's.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "More sophisticated one that involves graphical models.",
                    "label": 0
                },
                {
                    "sent": "So for example, what we could do is we would like to somehow reason about our uncertainty about the temperature.",
                    "label": 0
                },
                {
                    "sent": "So what we could do is we could have at any location in our building a random variable Yi that expresses the value of the temperature at that location.",
                    "label": 0
                },
                {
                    "sent": "OK, and we have some prior model may be expressed as a probabilistic model that tells us our prior assumptions on how those temperature values are correlated, But the temperature itself is unobservable, it's latent.",
                    "label": 0
                },
                {
                    "sent": "But what we can do is we can try to put some sensors.",
                    "label": 0
                },
                {
                    "sent": "For example, if you have a sensor at some location S. Done, it may provide us with a noisy estimate, excess of the temperature at the same location YS.",
                    "label": 1
                },
                {
                    "sent": "OK, so this is just YS plus some noise and then our probabilistic model would just tell us sort of our prior assumptions about spatial correlation as well as anything we know about say signal to noise characteristics of the sensors.",
                    "label": 0
                },
                {
                    "sent": "Now, once we have this model, we can use it to gauge the.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Benefit of having sensors at a set of locations.",
                    "label": 1
                },
                {
                    "sent": "So for example, if what we can do is, we can define as the utility of the placement as the utility of the set a just the reduction in uncertainty that I get by having access to measurements to those variables X indexed by the city.",
                    "label": 0
                },
                {
                    "sent": "OK, so I can define it as difference between the prior entropy of the of the latent variables, so my uncertainty before I know anything minus the uncertainty that's left after I've made the observations.",
                    "label": 0
                },
                {
                    "sent": "OK, now that's quite complex definition, right?",
                    "label": 0
                },
                {
                    "sent": "So the mutual information between variables Y, intercept, XA just to evaluate it I have to do Bayesian inference.",
                    "label": 0
                },
                {
                    "sent": "Right, so that's where you see where this black box slide, which may itself be a PR problem, right?",
                    "label": 0
                },
                {
                    "sent": "So where things get get quite challenging, so there's certainly a much richer model.",
                    "label": 0
                },
                {
                    "sent": "OK, now we can ask and what sort of circumstances is this objective function is submodular.",
                    "label": 0
                },
                {
                    "sent": "OK, so he.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So we can think about it.",
                    "label": 0
                },
                {
                    "sent": "So if you have these latent variables Y one through YM, which we would like to infer, and we can choose among these variables X one through XN.",
                    "label": 0
                },
                {
                    "sent": "Is a discrete random variables and we measure this mutual information.",
                    "label": 1
                },
                {
                    "sent": "Now it turns out in general this function is not submodular, but under some very natural conditions.",
                    "label": 0
                },
                {
                    "sent": "So for example, if these variables XI that we can pick are conditionally independent, given what you try to infer, then this function F is is submodular.",
                    "label": 1
                },
                {
                    "sent": "Now what does this mean when it basically means that those sensors have independent measurement noise, right?",
                    "label": 0
                },
                {
                    "sent": "Which is certainly often the case in the sensing applications.",
                    "label": 0
                },
                {
                    "sent": "OK, now this is a fairly rich model, right?",
                    "label": 0
                },
                {
                    "sent": "Sort of to valuate the utility.",
                    "label": 0
                },
                {
                    "sent": "We do Bayesian inference in this in this complex model, right?",
                    "label": 0
                },
                {
                    "sent": "But the objective function is submodular.",
                    "label": 0
                },
                {
                    "sent": "And we talk about why that's useful in a second right?",
                    "label": 0
                },
                {
                    "sent": "But sort of at least.",
                    "label": 0
                },
                {
                    "sent": "It's a nice example of this module function.",
                    "label": 0
                },
                {
                    "sent": "Now these are both examples of utility functions that we'd like to maximize, but submodularity is also a very natural notion of cost.",
                    "label": 0
                },
                {
                    "sent": "OK here.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Sort of a classical example that's used quite a bit in vision.",
                    "label": 0
                },
                {
                    "sent": "They need to cut function.",
                    "label": 1
                },
                {
                    "sent": "And it goes as follows.",
                    "label": 0
                },
                {
                    "sent": "So here we have a graph on 8 vertices and the edges of this graph associated with with mates.",
                    "label": 0
                },
                {
                    "sent": "And now what we can do is we can define a set function that takes a set of vertices, maybe those.",
                    "label": 0
                },
                {
                    "sent": "And tells us the total weight of all the edges that connect the vertices in the set A.",
                    "label": 0
                },
                {
                    "sent": "And the vertices that are not in that city.",
                    "label": 0
                },
                {
                    "sent": "OK, just an example.",
                    "label": 0
                },
                {
                    "sent": "In this particular example of the cut function, what would be the value of that set a?",
                    "label": 0
                },
                {
                    "sent": "Any guesses, suggestions 2?",
                    "label": 0
                },
                {
                    "sent": "Right, so there's these two edges here, right?",
                    "label": 0
                },
                {
                    "sent": "So the one connecting CT and D2F, right?",
                    "label": 0
                },
                {
                    "sent": "So that's the edges?",
                    "label": 1
                },
                {
                    "sent": "OK, the value here would be 2, and now it turns out that this cat function is in fact a submodular function.",
                    "label": 0
                },
                {
                    "sent": "And it's actually quite easy to show and the proof is sort of nice and show some interesting properties that I like to do with.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So how can we show it?",
                    "label": 0
                },
                {
                    "sent": "Well, the idea is to actually break this cut function apart into much simpler parts.",
                    "label": 0
                },
                {
                    "sent": "So let's look at the cut function of the simplest or almost the simple scratch that you can imagine.",
                    "label": 0
                },
                {
                    "sent": "OK, so what's that graph wells graph on two vertices A&B?",
                    "label": 0
                },
                {
                    "sent": "OK, now for that simple graph.",
                    "label": 0
                },
                {
                    "sent": "What we can do is we can enumerate.",
                    "label": 0
                },
                {
                    "sent": "We can write down the value.",
                    "label": 0
                },
                {
                    "sent": "Off the function for any set right, the set containing nothing set containing a containing B containing both.",
                    "label": 0
                },
                {
                    "sent": "Again by the way we defined it, if you pick nothing, we cut nothing.",
                    "label": 0
                },
                {
                    "sent": "If you pick both, we cut nothing.",
                    "label": 0
                },
                {
                    "sent": "But if you cut either A or B, we cut the edge.",
                    "label": 0
                },
                {
                    "sent": "So we encourage cost of W. OK, now what you can do is you can try to prove that this function is so marginal and true that we now use this union intersection property.",
                    "label": 0
                },
                {
                    "sent": "OK the other one so we can look at those sets right?",
                    "label": 0
                },
                {
                    "sent": "We just define a be the set containing little A&B is the set containing it'll be, so the intersection is empty.",
                    "label": 0
                },
                {
                    "sent": "The union that contains in B.",
                    "label": 0
                },
                {
                    "sent": "And now what we have to ensure is that the sum of FA plus FP is greater than or equal to F of the intersection plus F of the Union.",
                    "label": 0
                },
                {
                    "sent": "And for this inequality to hold, what do we require of this?",
                    "label": 0
                },
                {
                    "sent": "The parameters of this graph, but assault for this edge weights W?",
                    "label": 0
                },
                {
                    "sent": "Greater than zero, exactly right?",
                    "label": 0
                },
                {
                    "sent": "So whenever this W is greater than or equal, excuse me to 0.",
                    "label": 0
                },
                {
                    "sent": "Dennis is in fact the submodular function.",
                    "label": 0
                },
                {
                    "sent": "OK, now we know that cut functions for two nodes are submodular.",
                    "label": 0
                },
                {
                    "sent": "Now, can you do it for general graphs?",
                    "label": 0
                },
                {
                    "sent": "And here's sort of the cute insight.",
                    "label": 0
                },
                {
                    "sent": "So what we can do is we can understand the cut function of an arbitrary graph just as the sum of cut functions of all pairs of nodes in that graph.",
                    "label": 1
                },
                {
                    "sent": "OK, we can write it down as a big sum that we have one term for each of those pairs of elements.",
                    "label": 0
                },
                {
                    "sent": "Of a separate function fij that just measures the value of the cuts restricted to that pair of edges.",
                    "label": 0
                },
                {
                    "sent": "OK. And now that means that each of those terms fij is a cut function.",
                    "label": 0
                },
                {
                    "sent": "Sort of.",
                    "label": 0
                },
                {
                    "sent": "This two nodes up graph I, J.",
                    "label": 0
                },
                {
                    "sent": "And that we already know is submodular, assuming all the weights are non negative.",
                    "label": 0
                },
                {
                    "sent": "And so now the question is, does that already imply that the function F of X is so modular or not, and it turns out that in fact does imply that, and the reason for that is a very, very nice and extremely useful property of submodular functions.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "That sums of submodular functions still remains submodular.",
                    "label": 0
                },
                {
                    "sent": "It's pretty easy to see into proof on the inequality.",
                    "label": 0
                },
                {
                    "sent": "In fact, not just sums, but any convex combinations are non negative linear combinations of functions of submodular functions, so they form a cone.",
                    "label": 1
                },
                {
                    "sent": "OK, so that's quite nice.",
                    "label": 0
                },
                {
                    "sent": "It's very useful, so it's very useful.",
                    "label": 0
                },
                {
                    "sent": "For example, for Bayesians, if you have a model that has some parameters in it, and you have a prior of those parameters, then sort of the expected utility according to your prior.",
                    "label": 0
                },
                {
                    "sent": "Is a convex combination is going to be submodular, so that is very useful if you have different criteria you'd like to optimize.",
                    "label": 0
                },
                {
                    "sent": "Well, any scalar isation is going to be.",
                    "label": 0
                },
                {
                    "sent": "Still submodular, and that's maybe even the most important is that it's sort of a basic proof technique so that the functions of this form arise over and over again.",
                    "label": 1
                },
                {
                    "sent": "OK, some softball similar functions arrive arise many times.",
                    "label": 0
                },
                {
                    "sent": "So that's sort of a nice property of submodular functions.",
                    "label": 0
                },
                {
                    "sent": "We already alluded to the fact that submodular function is sort of related both to convex and concave functions.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Might stop, but the question is what are they more like?",
                    "label": 0
                },
                {
                    "sent": "What are they really more like convex functions or more like concave functions?",
                    "label": 0
                },
                {
                    "sent": "So oftentimes you read in the literature that submodular functions as sort of often viewed as the discrete analogue of convex functions, and that's good arguments for.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So, for example, Convexity admits a very nice duality theory, so the submodularity.",
                    "label": 0
                },
                {
                    "sent": "And and maybe that's most crucial as one can minimize convex functions efficiently at least most convex functions.",
                    "label": 0
                },
                {
                    "sent": "Or many one can minimize submodular functions efficiently.",
                    "label": 0
                },
                {
                    "sent": "And that goes via very interesting and useful quantity that's associated with this submodular set function, namely an extension of the set function, and I'm going to talk about that and this extension terms would be convex, so there's some very good connections to convexity, so we'll get back to that in just a couple minutes.",
                    "label": 0
                },
                {
                    "sent": "But there's also, this is really only half of the story, so submodular functions are really also very closely connected.",
                    "label": 1
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "To concave functions.",
                    "label": 0
                },
                {
                    "sent": "OK, and so that's actually very easy to see.",
                    "label": 0
                },
                {
                    "sent": "So let's take the definition.",
                    "label": 0
                },
                {
                    "sent": "So this is this diminishing returns characterization reminder.",
                    "label": 0
                },
                {
                    "sent": "Adding an element to the small set increases our utility by at least as much as adding it to the Super set.",
                    "label": 0
                },
                {
                    "sent": "OK, now let's contrast that to the definition of concave functions in one dimension.",
                    "label": 0
                },
                {
                    "sent": "Well, here's one way of how you can characterize concave functions.",
                    "label": 0
                },
                {
                    "sent": "Well, you can see whenever I take a number a that's less than or equal to a number B and I add some other non negative positive number S. To either of those.",
                    "label": 0
                },
                {
                    "sent": "Then it must hold that F increases more if I add S to a then if I add S to be.",
                    "label": 0
                },
                {
                    "sent": "OK, so that's sort of very, very similar to that in if definition of submodularity.",
                    "label": 0
                },
                {
                    "sent": "Right, so that's sort of also very useful picture to have in mind, but it looks like it could function just some other very nice connections that also turns out to be very power.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So from a modeling standpoint.",
                    "label": 0
                },
                {
                    "sent": "Which is the following.",
                    "label": 0
                },
                {
                    "sent": "So suppose the.",
                    "label": 0
                },
                {
                    "sent": "So here's a very simple way of constructing set functions.",
                    "label": 0
                },
                {
                    "sent": "So one thing we can do.",
                    "label": 0
                },
                {
                    "sent": "Is we can just.",
                    "label": 0
                },
                {
                    "sent": "Given a set, count how many elements are in that set.",
                    "label": 0
                },
                {
                    "sent": "And then apply some scalar function to that number.",
                    "label": 0
                },
                {
                    "sent": "OK right, so for example, the square root of the log, or exponentiated or something like that, right?",
                    "label": 0
                },
                {
                    "sent": "So formally, we basically construct the set function F of a.",
                    "label": 0
                },
                {
                    "sent": "It takes us at a.",
                    "label": 0
                },
                {
                    "sent": "By counting how many elements are in A and applying some function G. Twit OK, and now for those functions constructed in this way, it holds that there submodular if and only if can you make a guess G is.",
                    "label": 0
                },
                {
                    "sent": "Has to satisfy this diminishing returns property, but adding element to small sets helps more, right?",
                    "label": 0
                },
                {
                    "sent": "That's the concavity.",
                    "label": 0
                },
                {
                    "sent": "Right, those functions are submodular if and only if G is concave.",
                    "label": 1
                },
                {
                    "sent": "So those functions look like this.",
                    "label": 0
                },
                {
                    "sent": "OK, now that's actually very useful for modeling.",
                    "label": 0
                },
                {
                    "sent": "We'll see examples of that later, but also some other interesting consequences.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So here's an interesting concept.",
                    "label": 0
                },
                {
                    "sent": "So let's take two submodular functions F1 and F2.",
                    "label": 1
                },
                {
                    "sent": "And construct a new function out of it F. That is just the pointwise maximum.",
                    "label": 0
                },
                {
                    "sent": "OK, so any set a we just evaluate F1 of A and F2 of A and take the bigger of those two numbers that's on you function, right?",
                    "label": 0
                },
                {
                    "sent": "Very easy, very well defined.",
                    "label": 0
                },
                {
                    "sent": "OK, now the question is if F1 and F2 are submodular, does it mean that also F is submodular?",
                    "label": 0
                },
                {
                    "sent": "Who votes for yes?",
                    "label": 0
                },
                {
                    "sent": "OK, so there's a couple of votes for yes votes for no.",
                    "label": 0
                },
                {
                    "sent": "OK, so has a majority is for yes.",
                    "label": 0
                },
                {
                    "sent": "OK, so in fact unfortunately it turns out the answer is wrong, and so in fact the answer is no.",
                    "label": 0
                },
                {
                    "sent": "And so here is a very simple example for this and we can be constructed from this previous slide and basically works as follows.",
                    "label": 0
                },
                {
                    "sent": "So let's construct this modular function by applying a concave function to the cardinality and do it again.",
                    "label": 0
                },
                {
                    "sent": "So we have those two functions, the pointwise Max function is the screen function.",
                    "label": 0
                },
                {
                    "sent": "Still a function of the cardinality, right?",
                    "label": 0
                },
                {
                    "sent": "But the Max of concave functions is not submodule anymore, it's not concave anymore, so the resulting function is not so much.",
                    "label": 0
                },
                {
                    "sent": "OK, so this can go wrong.",
                    "label": 0
                },
                {
                    "sent": "And also the other way around.",
                    "label": 0
                },
                {
                    "sent": "So let's say.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "The the minimum point vice minimum right.",
                    "label": 0
                },
                {
                    "sent": "We know concave functions.",
                    "label": 0
                },
                {
                    "sent": "It actually told that if you take the minimum of concave functions, they get a concave function back, so I may think that maybe the same thing happens for submodular functions.",
                    "label": 1
                },
                {
                    "sent": "But in fact the answer is no, even for modular functions.",
                    "label": 0
                },
                {
                    "sent": "Answers now.",
                    "label": 0
                },
                {
                    "sent": "OK, so in a sense submodular functions are both related, so.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Convex functions and so concave functions and sort of this relationship causes both of those closest properties to fail in for me.",
                    "label": 0
                },
                {
                    "sent": "So that's maybe an insertion.",
                    "label": 0
                },
                {
                    "sent": "OK, so it really sort of has these two faces.",
                    "label": 1
                },
                {
                    "sent": "These two flavors, and that sort of permeates submodular analysis.",
                    "label": 0
                },
                {
                    "sent": "And there's a lot of really interesting things to be said about both the convex aspects, and they turn out to be very useful for numinus minimization.",
                    "label": 0
                },
                {
                    "sent": "Well, as we can minimize convex function, sufficiently turns out we can minimize the modular functions efficiently.",
                    "label": 0
                },
                {
                    "sent": "And concave functions right?",
                    "label": 0
                },
                {
                    "sent": "So this relationship to contact concave functions and this one can maximize concave functions officially on can't actually quite get the exact answer for submodular maximization, but one can get very good results.",
                    "label": 0
                },
                {
                    "sent": "With some very nice theoretical guarantees that one can state a problem.",
                    "label": 0
                },
                {
                    "sent": "OK, so really these two phases of the of the coin that are very important to remember they're going to talk about both of those.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, so now what can one do with submodular functions?",
                    "label": 1
                },
                {
                    "sent": "There's quite a bit that one can do, so this is sort of the machine learning sort of focused few and submodular functions.",
                    "label": 0
                },
                {
                    "sent": "There's quite a bit of work on optimization and applications to different learning problems, and I sort of if one talks about machine learning just very natural questions can learn submodular functions from data.",
                    "label": 0
                },
                {
                    "sent": "Yes, I'm very nice applications of this and I'll talk a little bit about that and then some interesting questions.",
                    "label": 0
                },
                {
                    "sent": "Sort of intersection of learning and optimization.",
                    "label": 0
                },
                {
                    "sent": "You're talking a little bit about that towards the end of the tutorial.",
                    "label": 0
                },
                {
                    "sent": "OK for most.",
                    "label": 0
                }
            ]
        },
        "clip_31": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Art will focus on optimization, and as he said, there's both these convex and concave aspects which are both useful for minimization and maximization.",
                    "label": 0
                },
                {
                    "sent": "So the first question is sort of why are minimization and maximization not really the same thing, right?",
                    "label": 1
                },
                {
                    "sent": "So if I have an algorithm for submodular minimization, right?",
                    "label": 0
                },
                {
                    "sent": "So that takes any function F, any submodular function FN produces its minimum.",
                    "label": 0
                },
                {
                    "sent": "Well, why can't I reduce maximization by just feeding minus F to the minimization algorithm?",
                    "label": 0
                },
                {
                    "sent": "Well, general is not going to work right because minus F is general, not submodular anymore.",
                    "label": 0
                },
                {
                    "sent": "Right minus F is is super modular.",
                    "label": 0
                },
                {
                    "sent": "OK, so these are really two different things and also the techniques for minimization maximization are really quite different.",
                    "label": 0
                },
                {
                    "sent": "OK, let's talk about men.",
                    "label": 0
                }
            ]
        },
        "clip_32": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Station is a number of interesting applications, will talk about some of those and for those.",
                    "label": 0
                }
            ]
        },
        "clip_33": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "As I mentioned, the connection to convexity is very useful.",
                    "label": 0
                }
            ]
        },
        "clip_34": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So here's one very important aspect that I'd like to make explicit.",
                    "label": 0
                },
                {
                    "sent": "So in computer vision one often talks about energy functions, and sort of usually what are at least from what I can tell.",
                    "label": 1
                },
                {
                    "sent": "What one understands is functions that are defined sort of on binary vectors, right?",
                    "label": 0
                },
                {
                    "sent": "Or at least screen configurations, and one can interpret set functions that act as subsets as functions that act on binary vectors in a very natural way, right?",
                    "label": 1
                },
                {
                    "sent": "Set some binary vector size amorphic?",
                    "label": 0
                },
                {
                    "sent": "Right, so we can just say if you take any sort of 1 vector right we just associated with the sets that we picked the elements that we set to one and we do not pick the elements that we set to 0, right?",
                    "label": 0
                },
                {
                    "sent": "If we have our ground set contains N, F = 4 elements ABC and D. Right then the one inside you can think about.",
                    "label": 0
                },
                {
                    "sent": "For example, the value of set containing a be right.",
                    "label": 0
                },
                {
                    "sent": "On the other hand, we can think about the function that's defined on 01 vectors.",
                    "label": 0
                },
                {
                    "sent": "And just evaluate F on the incidence vector of that set, right?",
                    "label": 0
                },
                {
                    "sent": "Just the indicator vector that sets all the coefficients to one that we pick in the set and all the others to zero.",
                    "label": 0
                },
                {
                    "sent": "OK, so those are often also called pseudo Boolean functions, so there's this very important connection to make that I'd like to put up here.",
                    "label": 0
                },
                {
                    "sent": "OK, so let's see.",
                    "label": 0
                }
            ]
        },
        "clip_35": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "About those, and now, once we what we can do is we can take such a function, write a set function or suitable in function and that is defined in general on those 01 vectors.",
                    "label": 0
                },
                {
                    "sent": "Now what are those vectors?",
                    "label": 0
                },
                {
                    "sent": "These are corners of the unit cube and end dimensions, right?",
                    "label": 0
                },
                {
                    "sent": "So I think about this.",
                    "label": 0
                },
                {
                    "sent": "N dimensional cube and I can basically think about the function as defined on its vertices on its corners.",
                    "label": 0
                },
                {
                    "sent": "OK, so now one thing I can try to do is I can try to look at how does the function actually not just look at the corners, but look inside so I can try to extend the function to the interior of this unit.",
                    "label": 0
                },
                {
                    "sent": "OK, and all there's many different ways of how one can do it.",
                    "label": 0
                },
                {
                    "sent": "Turns out so modular functions admit actually a number of interesting extensions that all of their role but for minimization.",
                    "label": 0
                },
                {
                    "sent": "One is maybe most important, and that's what's often called the last extension, which can be defined in the following way.",
                    "label": 0
                },
                {
                    "sent": "So basically it can be defined.",
                    "label": 0
                },
                {
                    "sent": "This is a little bit of a complicated expression, essentially as the optimal value of a certain linear program.",
                    "label": 0
                },
                {
                    "sent": "OK, I'm going to talk about what that is in just a second, so if you take any vector X, there's just some point.",
                    "label": 0
                },
                {
                    "sent": "Inside this and dementia unit cube, then what we can do is we can just look at what is the maximum value by taking any vector Y that's contained in some polyhedron PF that's associated with this function F. Let's say what is in just a second and just take the biggest of those vectors.",
                    "label": 0
                },
                {
                    "sent": "OK. Now that's the way it's defined.",
                    "label": 0
                },
                {
                    "sent": "This already clear that it's a convex function, right?",
                    "label": 0
                },
                {
                    "sent": "So we have a bunch of linear functions for each value of why we have a linear function, so there's a bunch of those, and the Max of linear functions is always convex.",
                    "label": 0
                },
                {
                    "sent": "Alright, so that's pretty clear.",
                    "label": 0
                },
                {
                    "sent": "So the function is convex, but it turns out that essentially the minimum of F little F. The extension is also a minimum of the original function capital F. That means I can reduce the problem of minimizing.",
                    "label": 1
                },
                {
                    "sent": "The set function F to the problem of minimizing its extension.",
                    "label": 0
                },
                {
                    "sent": "Alright, so that means I want now minimize a convex function.",
                    "label": 1
                },
                {
                    "sent": "Insight the unit cube, which is a convex set, just sort of standard convex minimization problem.",
                    "label": 0
                },
                {
                    "sent": "And it turns out that was the crucial insight that actually allowed to show that submodule minimization can be solved as a convex minimization problem, which can be done in polynomial time using the ellipsoid method.",
                    "label": 0
                },
                {
                    "sent": "But that's quite a bunch.",
                    "label": 0
                },
                {
                    "sent": "I'll say more about other algorithms in just a second, but that sort of was very very important insight.",
                    "label": 0
                }
            ]
        },
        "clip_36": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Now to understand this more, let's look at this object PF and that really.",
                    "label": 0
                }
            ]
        },
        "clip_37": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Yes, one of the most important combinatorial quantities associated with the submodular function is called the submodular polyhedron and what it is.",
                    "label": 1
                },
                {
                    "sent": "It's just a subset of RN, then dimensional real vectors, and it's all vectors X that satisfy a bunch of inequalities.",
                    "label": 0
                },
                {
                    "sent": "That's going to be one inequality for every set a.",
                    "label": 0
                },
                {
                    "sent": "And the inequality for any given set a just says take all the coefficients indexed by Dot.",
                    "label": 0
                },
                {
                    "sent": "Set A and sum them up.",
                    "label": 0
                },
                {
                    "sent": "And that must be less than the value of the set function.",
                    "label": 0
                },
                {
                    "sent": "Less than or equal to.",
                    "label": 0
                },
                {
                    "sent": "OK, so here's a picture, so this is a function.",
                    "label": 1
                },
                {
                    "sent": "Trust me, it's modular, and let's look at this polyhedron PF.",
                    "label": 0
                },
                {
                    "sent": "So what you can do is we can take look at all these inequality's.",
                    "label": 0
                },
                {
                    "sent": "The first one just says the empty set of several something.",
                    "label": 0
                },
                {
                    "sent": "Nothing is.",
                    "label": 0
                },
                {
                    "sent": "So that's also the reason for normalization.",
                    "label": 0
                },
                {
                    "sent": "So the first one is trivial, but the more interesting one is.",
                    "label": 0
                },
                {
                    "sent": "Let's pick little element, little A and it just says the component of X associated with elements little a.",
                    "label": 0
                },
                {
                    "sent": "So one of those two access.",
                    "label": 0
                },
                {
                    "sent": "Must be less than or equal to the value of that element minus one.",
                    "label": 0
                },
                {
                    "sent": "OK, so that's this yellow area here.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "But same thing for the 2nd element, so that's what's left and the last inequality Now basically says that the sum of both components to one norm of the vector must be less than or equal to the value of the full set, which is 0, right?",
                    "label": 0
                },
                {
                    "sent": "So this line is connect with server here.",
                    "label": 0
                },
                {
                    "sent": "OK, so that's the set PF.",
                    "label": 0
                },
                {
                    "sent": "OK, good, so that's pretty easy to write down.",
                    "label": 0
                }
            ]
        },
        "clip_38": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And now that means that in order to evaluate this function F of X, we basically need to solve an LP with us over the set.",
                    "label": 0
                },
                {
                    "sent": "OK easy right?",
                    "label": 0
                },
                {
                    "sent": "So that's the problem with just applying standard sort of LP solvers to this problem.",
                    "label": 0
                },
                {
                    "sent": "How many inequality's do we have?",
                    "label": 0
                },
                {
                    "sent": "Many rights.",
                    "label": 0
                },
                {
                    "sent": "For every single set A.",
                    "label": 0
                },
                {
                    "sent": "There's going to be an inequality, right?",
                    "label": 0
                },
                {
                    "sent": "But in general that's going to be exponentially many inequality's.",
                    "label": 0
                },
                {
                    "sent": "So pretty darn big LP.",
                    "label": 0
                },
                {
                    "sent": "I don't want to write this down exactly now.",
                    "label": 0
                },
                {
                    "sent": "It turns out, so this is exponentially many constraints.",
                    "label": 0
                },
                {
                    "sent": "But amazingly, this LP can be solved in near linear time.",
                    "label": 0
                },
                {
                    "sent": "OK, time ON log in.",
                    "label": 0
                },
                {
                    "sent": "OK, that's really one of the fundamental results about submodular functions.",
                    "label": 0
                },
                {
                    "sent": "In fact, innovate characterize system.",
                    "label": 0
                },
                {
                    "sent": "OK, and here the optimal solution is basically just a closed form solution, so the most complicated operation one has to do is sorting.",
                    "label": 0
                },
                {
                    "sent": "OK, so all you have to do is you sort the sum of the audios.",
                    "label": 0
                },
                {
                    "sent": "A bit loud I think.",
                    "label": 0
                },
                {
                    "sent": "OK, so you take the vector X sort coefficients and decreasing magnitudes that defines a sequence of sets that we get by adding elements according to the sort order and then can read off the value of the optimal solution to this LP from this sorted order.",
                    "label": 0
                },
                {
                    "sent": "OK, so it's really in time N log many functional valuations.",
                    "label": 0
                },
                {
                    "sent": "OK, and that's very useful.",
                    "label": 0
                },
                {
                    "sent": "Immediately gives you a subgradient.",
                    "label": 0
                },
                {
                    "sent": "So if you want to do convex optimization, gives you what you need.",
                    "label": 0
                },
                {
                    "sent": "I can use it as a separation Oracle for the ellipsoid method and so on.",
                    "label": 0
                },
                {
                    "sent": "So this is all you basically need for optimization.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_39": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So here is how the lowest extension looks like.",
                    "label": 0
                },
                {
                    "sent": "Basically on this on the simple example, as this is the extension.",
                    "label": 0
                },
                {
                    "sent": "OK, so it's piecewise linear.",
                    "label": 0
                },
                {
                    "sent": "OK, so.",
                    "label": 0
                }
            ]
        },
        "clip_40": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "What can be said about minimization?",
                    "label": 0
                },
                {
                    "sent": "So in general, we've seen that these functions have these nice convex extensions, and as work that tries to minimize submodular functions via this convex extension.",
                    "label": 1
                },
                {
                    "sent": "Right this one can use the ellipsoid algorithm.",
                    "label": 1
                },
                {
                    "sent": "That's not very practical in general, but works in polynomial time.",
                    "label": 1
                },
                {
                    "sent": "For a long time, and this is actually open.",
                    "label": 0
                },
                {
                    "sent": "Whether it's possible to to construct explicitly combinatorial algorithms, system, modular function minimization that only sort of get to look at values or sets and so on.",
                    "label": 0
                },
                {
                    "sent": "So not try to work why it is convex relaxation.",
                    "label": 0
                },
                {
                    "sent": "OK, and that was a really long open question and its solution was awarded a major mathematical price to focus on price for this solved in the early 2000s, and since then there's been quite a bit of work but the best, tutorial algorithms are still somewhat slower, so they basically the number function evaluations depending on which one of them uses on the order to enter the four into the five.",
                    "label": 0
                },
                {
                    "sent": "Writing for very large problems that's not really practical.",
                    "label": 0
                },
                {
                    "sent": "Now on the convex side, there also has been some work using other techniques.",
                    "label": 0
                },
                {
                    "sent": "For example, one can try to lift modern results from convex analysis, see accelerated gradient methods after certain types of submodular functions, and one very important algorithm that's based on context minimization is called the minimum norm algorithm in that space that is fundamentally relying on duality, and I just want to give the idea because it's a very very useful algorithm.",
                    "label": 0
                }
            ]
        },
        "clip_41": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And it works like like this.",
                    "label": 0
                },
                {
                    "sent": "So we set the basic submodular minimization problem essentially requires to solve problems of this format.",
                    "label": 0
                },
                {
                    "sent": "You want to minimize all vectors X.",
                    "label": 0
                },
                {
                    "sent": "This function F of X subject dots.",
                    "label": 0
                },
                {
                    "sent": "These vectors are contained in this in this unit, and it turns out that one can rewrite this optimization problem.",
                    "label": 0
                },
                {
                    "sent": "It's not obvious, but it's a theorem in the following way, so this problem is equivalent to trying to minimize over all vectors X of FX.",
                    "label": 0
                },
                {
                    "sent": "Now this is unconstrained.",
                    "label": 0
                },
                {
                    "sent": "So we don't restrict X to be in the unit cube, but we ensure that sort of X is regularised.",
                    "label": 0
                },
                {
                    "sent": "OK, X remains small.",
                    "label": 0
                },
                {
                    "sent": "OK, so that's a pretty interesting result to sugar and all one can do is we can look at the norm.",
                    "label": 0
                },
                {
                    "sent": "One can look at the dual of this optimization problem.",
                    "label": 0
                },
                {
                    "sent": "And that has a pretty interesting form.",
                    "label": 0
                },
                {
                    "sent": "So the dual of this optimization problem essentially is what's called the minimum norm point problem.",
                    "label": 0
                },
                {
                    "sent": "OK, and goes like this.",
                    "label": 0
                },
                {
                    "sent": "It says find me the vector U that's closest to the origin.",
                    "label": 0
                },
                {
                    "sent": "OK, now not any vector but a vector that's contained in some set PDF and what is the set PDF?",
                    "label": 0
                },
                {
                    "sent": "The set PF is what's called the base polytope.",
                    "label": 0
                },
                {
                    "sent": "It's a particular part of the submodular polyhedron, namely this green facet up here.",
                    "label": 0
                },
                {
                    "sent": "OK, and what is this?",
                    "label": 0
                },
                {
                    "sent": "It's basically just the facet of this polyhedron where the last inequality is tight.",
                    "label": 0
                },
                {
                    "sent": "OK, by the way, the L1 norm of the vector sum to the value of the full set.",
                    "label": 0
                },
                {
                    "sent": "OK, so now here's the algorithm.",
                    "label": 0
                },
                {
                    "sent": "Find the point close to the origin there this.",
                    "label": 0
                },
                {
                    "sent": "Coordinates on minus one, one.",
                    "label": 0
                },
                {
                    "sent": "And then read off the optimal solution.",
                    "label": 0
                },
                {
                    "sent": "OK, turns out you can just read out the optimal solution by it.",
                    "label": 0
                },
                {
                    "sent": "By just looking at all the coefficients that are non positive.",
                    "label": 0
                },
                {
                    "sent": "And retain them.",
                    "label": 0
                },
                {
                    "sent": "OK, that makes up your solution.",
                    "label": 0
                },
                {
                    "sent": "Astar just the set of all industries I.",
                    "label": 0
                },
                {
                    "sent": "Such that the coefficient entry is non positive.",
                    "label": 0
                },
                {
                    "sent": "OK, so let's try it right, so it's minus one, one, so it says the first element here is belonging to little a right?",
                    "label": 0
                },
                {
                    "sent": "So that's non positive.",
                    "label": 0
                },
                {
                    "sent": "So we should pick it.",
                    "label": 0
                },
                {
                    "sent": "So let's pick little A and the second one right corresponding to B.",
                    "label": 0
                },
                {
                    "sent": "Has a positive coefficient is 1, so that means let's not pick B. OK, it means a star.",
                    "label": 0
                },
                {
                    "sent": "It's the set containing only little A and right as it happens, this actually turns out to be the minimal solution.",
                    "label": 0
                },
                {
                    "sent": "OK, and that's not just coincidence, but the theorem right?",
                    "label": 0
                },
                {
                    "sent": "So basically this solution minimizes F overall sets.",
                    "label": 0
                },
                {
                    "sent": "OK, so that is a very useful insight, and it turns out that of course one question that one has to have to solve this one.",
                    "label": 0
                },
                {
                    "sent": "This one find this point closest to the origin.",
                    "label": 0
                },
                {
                    "sent": "How does one solve this minimum algorithm?",
                    "label": 0
                },
                {
                    "sent": "There's an algorithm due to Wolf that solves it.",
                    "label": 0
                }
            ]
        },
        "clip_42": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And then applies it when gets an algorithm that actually works really quite well.",
                    "label": 0
                },
                {
                    "sent": "So that's currently considered sort of the best general purpose submodular minimization problem.",
                    "label": 0
                },
                {
                    "sent": "If you don't know anything about your problem besides its modular minimization problem, then there's a good chance that this algorithm is going to.",
                    "label": 0
                },
                {
                    "sent": "Worked really well on it and be a lot faster than any of those.",
                    "label": 0
                },
                {
                    "sent": "Amatoriale algorithms OK, The catch is that no one actually knows how fast this algorithm.",
                    "label": 0
                },
                {
                    "sent": "OK, so it's in practice usually orders of magnitude faster, but no one knows.",
                    "label": 1
                },
                {
                    "sent": "It's known to terminate, and at most that's exponentially many iterations, but no one actually knows if there is an instance where it takes exponentially, many iterations, OK, could be like the simplex method, where it could actually happen.",
                    "label": 0
                },
                {
                    "sent": "In practice.",
                    "label": 0
                },
                {
                    "sent": "It basically never happens, but it's in principle no one knows.",
                    "label": 0
                },
                {
                    "sent": "OK, so this is very useful algorithm, so if you don't know so one takeaway message about minimization so far.",
                    "label": 0
                },
                {
                    "sent": "So if you don't know anything about the problem beside.",
                    "label": 0
                },
                {
                    "sent": "As submodularity and you want to minimize it, then this is an algorithm to try.",
                    "label": 0
                },
                {
                    "sent": "And estimations of that available.",
                    "label": 0
                }
            ]
        }
    }
}