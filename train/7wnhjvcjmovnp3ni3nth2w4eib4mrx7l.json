{
    "id": "7wnhjvcjmovnp3ni3nth2w4eib4mrx7l",
    "title": "Dynamic composition of communication services",
    "info": {
        "author": [
            "Carolina Fortuna, Department of Communications Systems, Jo\u017eef Stefan Institute"
        ],
        "published": "July 19, 2013",
        "recorded": "March 2013",
        "category": [
            "Top->Technology->Systems and Cybernetics"
        ]
    },
    "url": "http://videolectures.net/single_fortuna_communication_services/",
    "segmentation": [
        [
            "First, I would like to thank everybody for taking time and coming to listen to this talk, so I'll be presenting my thesis that I'm entitled, dynamic composition of communication services.",
            "So this work was carried out while I was studying at the user Stephen International Postgraduate School and while working at the Department of Communication Systems that you just define Institute."
        ],
        [
            "So I have structured the talk as follows, so first I'll give a little bit of overview of.",
            "A couple of concepts that you're that are good to know in order to understand the thesis.",
            "Then I'll focus on the four contributions of this thesis.",
            "The first one is the framework for dynamic composition of communication services.",
            "The second one is the module library, which is one of the components of the framework.",
            "The third one is a declarative language, which is another component of the framework.",
            "And finally, I'll discuss the 4th contribution refers to the reference implementation of the framework, and by summarizing my work."
        ],
        [
            "So what do we understand by communication service?",
            "So, communication service is actually a form of a set of primitives which provide communication functionality.",
            "So this service uses these primitives for for sending and receiving messages, implementation of communication services can form protocols."
        ],
        [
            "And what do we understand by the phrase dynamic composition?",
            "So what we understand by this is that assuming that you have a set of services providing various network functionality, these services can be composed to form more complex service or sometimes also referred to as a stack, and this can be done either at compile time, either at runtime."
        ],
        [
            "So the purpose of this thesis is to propose, develop, implement and evaluate a framework for the dynamic composition of communication services that can speed up design and experimentation with new protocols, and that can support research on cognitive and service oriented networks."
        ],
        [
            "We claim for major scientific contributions in this thesis.",
            "The first one refers to the definition of the generic framework for the dynamic composition of services.",
            "The second one is the module library for composable communication services.",
            "The third one is a declarative language that enables service and interface descriptions, and the 4th one is the reference implementation.",
            "This contribution, this work has resulted in a 3 original scientific articles and around 15 scientific conference.",
            "Contributions."
        ],
        [
            "There are also some other contributions, minor, which is the fact that the framework implementation of the framework approach tech tool enables logic logic reasoning about communication services.",
            "It also enables a set of cognitive networking use cases.",
            "It favors practical component reuse or code reuse.",
            "And it enables repeatable and remote experimentation."
        ],
        [
            "So now I'll focus on the 1st contribution, which is the framework itself."
        ],
        [
            "So the framework is composed of 4 four components forming blocks.",
            "The first one is the physical test bed, so by physical test, but we refer above reffered to a set of machines that can be used to run experiments.",
            "The second one is the module library, which is consists of the source code of the modules or the implementation of the services.",
            "The third one is a declarative language, which is actually a level of abstraction between the user and the load.",
            "The module library, which is typical returning in a low level language.",
            "And finally, the workbench which is a panel for configuring, starting, running, sometimes also visualizing the results of experiments."
        ],
        [
            "So.",
            "In order for this for this framework, we identified 55 main requirements.",
            "So the first requirement addressed by the framework regards modularity, so the communication services have to have a modular design and implementation in order to allow composing more complex, more complex services.",
            "So if this is the module."
        ],
        [
            "The requirement is fulfilled.",
            "Then we can assume that we have a set of services and out of this set we can."
        ],
        [
            "Select a subset and form a complex service or a stack.",
            "This deck"
        ],
        [
            "Is then."
        ],
        [
            "Able to send."
        ],
        [
            "Images occur."
        ],
        [
            "Several devices."
        ],
        [
            "Now what the advantage of modularity is that, assuming, assuming that you would like to switch the sequence of the services so we would like service I to.",
            "To become something else.",
            "So to switch the places between I and two."
        ],
        [
            "This should be easily."
        ],
        [
            "Symbol it should also be very easily possible to act."
        ],
        [
            "Introduce additional services or remove services from the stack.",
            "This is not possible with traditional implementations."
        ],
        [
            "The second requirement refers to flexibility, so.",
            "The components of the framework should be designed and implemented in a way that people where users can interact with them at different levels, so I."
        ],
        [
            "Really, they could interact at module library level at declarative language level editor, Workbench level, and it should also be designed in such a way that it should support extension of."
        ],
        [
            "Different of the different components independently."
        ],
        [
            "The search requirement refers to easy programming, so if you want to use the tool if you want to extend like extend it for various research purposes, you should be able to do this as having different different skills.",
            "For instance, if you have.",
            "If you know how to write embedded software, then you should be able to interact with the module library and deployer experiments.",
            "If you just like to use graphical user interfaces then you should be able to interact with the work bench and so on."
        ],
        [
            "The 4th requirement refers to reproducibility of experiments, so the framework should support re running and reproducing experiments in an easy way, for instance by saving are old experiment exceptions so."
        ],
        [
            "So a researcher should be able to."
        ],
        [
            "Design.",
            "Configure and deploy an experiment for the paper that he or she are currently writing, right?"
        ],
        [
            "Then using this experiment on some physical testbed, and."
        ],
        [
            "Save the description of the experiment and the configuration at a later time when some results have to be rerun, or when the researcher would like to.",
            "Try to try to experiment on different testbed.",
            "This should be."
        ],
        [
            "Easy to do by just taking the description and deploying it on other other testbeds."
        ],
        [
            "The 5th requirement refers to remote experimentation, so currently there are several testbed several beds that can support experimentation with community communication protocols and communication services around the world."
        ],
        [
            "Probably the most well known."
        ],
        [
            "Margin in the US and fire in the in Europe and."
        ],
        [
            "The idea would be that somebody is sitting somewhere in the world, can employ its work, employees, experiment in any of these testbeds."
        ],
        [
            "The second contributor, the second contribution of this thesis, refers to the module library for composable communication services.",
            "So this is the second block of the framework that we proposed."
        ],
        [
            "So for the module library, we propose composable right module library, which is inspired by the rhyme communication stack.",
            "The run communication architecture that is available under the Kentucky Operation Operating System, this operating system and this stack or specific for.",
            "Or network or constrained devices?",
            "There are three major differences between the composable rhyme architecture in the rime architecture.",
            "The first one is that serum introduces three abstractions that enabled modularity.",
            "These abstractions are not present here.",
            "I'm the second one.",
            "Is the serum further generalizes existing rhyme communication functionality?",
            "And the third one is that, of course theorem is designed to encourage code reuse through the modular approach."
        ],
        [
            "So the first main abstraction of serum is the abstract module, which is a generic building block that can wrap different functionalities.",
            "So if you can."
        ],
        [
            "Imagine you have like a given communication service, like for instance broadcast or unit cost that has some interfaces.",
            "These are like this implementation.",
            "Is this.",
            "This architecture is specific for for a given service."
        ],
        [
            "But then you can actually wrap it in like something more generic or and and provide standard interfaces to it.",
            "If you can do this, then."
        ],
        [
            "It's easy to compose several of these kind of modules.",
            "This is the role of abstract module."
        ],
        [
            "The second abstraction is the pipe that is a vertical data structure that can be accessed by any of the modules in the compose stack.",
            "So the pipe contains data structures corresponding to parameters that are used by the stack, so this abstraction was introduced mainly to support help.",
            "Instantiate the concept of vertical layer.",
            "That is is required by cognitive networks.",
            "How this is the way serum is designed is that each pipe is uniquely assigned to channel."
        ],
        [
            "So this is how an illustration would be.",
            "You would have a complex communication service and each of these services is able to interact with the pipe."
        ],
        [
            "The third abstraction is the stack, so the stack is a structure that contains a meaningful sequence of abstract modules and a pipe, so it actually contains a complex service Anna pipe, and it behaves as a container for these elements and enables composition of more complex commune."
        ],
        [
            "Services, so for instance, this is like a simple one stack communication service."
        ],
        [
            "This would be like A3 stack one, so each of them running independently on one channel.",
            "So this design is specific for for a mesh network for instance."
        ],
        [
            "So now I'll provide a quick example of the advantages of serum you to compose ability.",
            "So on the left side there is a dependency graph that is characteristic to rhyme and on the right hand side there is a dependency graph characteristic to see RAM.",
            "So you can see that there are four components, polite, unicast, broadcast, ABC that are that are common to the two to the two dependency graphs.",
            "What actually?",
            "Two components that are."
        ],
        [
            "Appear in rhyme that are not necessary in the serum design because.",
            "Because of the generalization that it provides, so the same basic functionality that you would like to achieve with Prime needs 6 service implementation, while with serum it needs 4."
        ],
        [
            "Another advantage is that with serum 11, complex services are possible thanks to the flexibility while we try only six or possible."
        ],
        [
            "So of course, as I said, OK, let's see.",
            "Time enables modularity.",
            "You can play with blocks and you can interconnect them, but this adds some overhead and this overhead has some costs, so the service implementations themselves are similar as in rhyme, so they don't take.",
            "They don't take more memory or they don't take longer to execute on the device.",
            "However, an application of fully compiled application that actually includes this overhead is about 60% larger with the rhyme.",
            "The execution time for, for instance, for a sequence of operation, opens and close, open, send, receive, close.",
            "It's 2524 higher in rank in serum Danny Rhyme.",
            "And see it, I'm also obviously consumes more energy, so it consumes 1.6% more energy.",
            "So this means that if you have a device running serum application it it will be able to only run 360 days out of 365 in a year, so five days less, which in general.",
            "Might be an issue, but for experimentation purposes I think it's not such a high cost."
        ],
        [
            "So even though it's from some performance parameters, serum is slower.",
            "It brings freedom to easily compose and text, test new combinations and in this sense it instantiates through the pipe abstraction.",
            "The concept of vertical layer."
        ],
        [
            "The third contribution refers to the declarative language.",
            "That enables service and.",
            "Interface descriptions so."
        ],
        [
            "The declarative language is a natural intermediate step natural intermediate step between the user or the user interface and a program code, so such languages are typically used for describing what the program should do, how it should do it to perform validity, checking to provide interoperability with other systems, or to support particular types of research."
        ],
        [
            "We identified for our purposes 5 requirements for selecting or for designing such language.",
            "So we would like it to be as simple as possible because it's used to annotate the modules it used to annotate services.",
            "So we would like to actually lower the barriers such as far as much as possible, to enable developers of embedded embedded programs to actually annotate what they're doing.",
            "Then it should be machine readable.",
            "It should use as much as possible.",
            "Standardized standardized language is already there, it should support interoperability and knowledge representation for logic, reasoning about communication services."
        ],
        [
            "So taking into account this requirement, we created the process.",
            "We designed the prototype declarative language and.",
            "The declarative language uses a subject, predicate object model that is widely popular in the semantic web area, particularly the RDF standard.",
            "So for instance, using this language, we can say that module, in this case the ABC module with this version of broadcasting we can tell what type it is and what kind of primitives it has.",
            "What kind of functions?"
        ],
        [
            "And this kind of languages typically use a standard vocabulary.",
            "In our case, we decided to use an ontology.",
            "So we created our own ontology reflecting the the serum module library so.",
            "So called Serum world model.",
            "Um?",
            "And just in by.",
            "By taking these design choices, and by doing this selection."
        ],
        [
            "We actually satisfy four out of five requirements, so so far the requirement regarding reasoning with Community communication services is not satisfied."
        ],
        [
            "In order to do that.",
            "One has to add a reasoning engine that can support, for instance, rules.",
            "So once you give it rules then then it.",
            "It can do some reasoning, for instance like reasoning on transitivity relationships.",
            "And then if you want to do more, if a researcher wants to do more, one way of going ahead is to employ more and more powerful reasoning engines.",
            "An one option would be for instance, to map the serum ontology into more complex ontologies and populate more complex knowledge bases that support that.",
            "Come with more powerful reasoners.",
            "So what we did for this purpose, we mapped the serum concepts into the cycle ontology.",
            "Into the South to corresponding to psych concept, and then we inserted some more complex rules that were able to reason like to say that for instance, you are able to express that you cannot put single hop services on top of multi hop services.",
            "So this is like the type of rules or the type of constraints that are possible with this.",
            "This is.",
            "They can be increasingly complex and they can help automate the system."
        ],
        [
            "The 4th contribution of the thesis is the reference implementation of the framework, so the reference implementation."
        ],
        [
            "Is called Proto Stack and it uses Vesna sensor nodes.",
            "As for the physical test bed, it uses the serum or composable rhyme module library that I presented before the declarative language.",
            "The prototype declarative language and it just uses a standard library that for the for the Workbench an which is tightly integrated with the language with a declarative language."
        ],
        [
            "And this is how Protoss Tech works, so.",
            "Assuming you have a set of communicate of implementations of the communication services or the module library that are annotated."
        ],
        [
            "What it does, it parses this annotations.",
            "An admin and knowledge base then."
        ],
        [
            "Is on everything that is on the knowledge base and automatically a workbench is generated.",
            "Using this workbench."
        ],
        [
            "Up a user can compose a complex service, and this complex service can then be."
        ],
        [
            "Is validated for consistency, so it makes sure that the service the interfaces of the services you compose their match and that the sequence is correct."
        ],
        [
            "And then some little bit of C code is auto generated and the images."
        ],
        [
            "Finally, diploid on the test, but then you can run your experiment."
        ],
        [
            "And this tool enables several use cases, so it enables describing, publishing and querying services for service oriented networks.",
            "It can guide the user in composing more complex services, and it enables several cognitive networking prototypes of various complexities.",
            "So for instance, testing of cognitive loops with cross layer informations with information is coming from cognitive radio from radio environmental Maps and also implementations of some of the functionality of the connectivity broker."
        ],
        [
            "So, just to summarize, we proposing we proposing this thesis for major contributions, the first one is the generic framework for the dynamic composition of communication services.",
            "The second one is the module library for composable communication services, the serum library.",
            "The third one is a declarative language that enables service and interface descriptions.",
            "So this is the Pro tech language and together with the vocabulary, the serum ontology and finally the Protoss tech, which is the reference implemented.",
            "The work resulted in three Journal and several conference papers."
        ],
        [
            "And of course, we also have plans to future work the.",
            "The most important is to extend the serum module library with learning functionality.",
            "And to add over their programming features so to be able to actually run this.",
            "Teulon logis testbed.",
            "Then we would like to investigate tradeoffs in offering distributed versus centralized brokerage functionality in cognitive networks.",
            "And we would also like to increase the degree of automation of complex service composition.",
            "So more or less to based on some set of services that you already selected.",
            "We would like to suggest additional services.",
            "Of course, this last last part is dependent on the first one, so you need more services in order to for these suggestions to make sense."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "First, I would like to thank everybody for taking time and coming to listen to this talk, so I'll be presenting my thesis that I'm entitled, dynamic composition of communication services.",
                    "label": 0
                },
                {
                    "sent": "So this work was carried out while I was studying at the user Stephen International Postgraduate School and while working at the Department of Communication Systems that you just define Institute.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So I have structured the talk as follows, so first I'll give a little bit of overview of.",
                    "label": 0
                },
                {
                    "sent": "A couple of concepts that you're that are good to know in order to understand the thesis.",
                    "label": 0
                },
                {
                    "sent": "Then I'll focus on the four contributions of this thesis.",
                    "label": 0
                },
                {
                    "sent": "The first one is the framework for dynamic composition of communication services.",
                    "label": 1
                },
                {
                    "sent": "The second one is the module library, which is one of the components of the framework.",
                    "label": 0
                },
                {
                    "sent": "The third one is a declarative language, which is another component of the framework.",
                    "label": 0
                },
                {
                    "sent": "And finally, I'll discuss the 4th contribution refers to the reference implementation of the framework, and by summarizing my work.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So what do we understand by communication service?",
                    "label": 0
                },
                {
                    "sent": "So, communication service is actually a form of a set of primitives which provide communication functionality.",
                    "label": 1
                },
                {
                    "sent": "So this service uses these primitives for for sending and receiving messages, implementation of communication services can form protocols.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And what do we understand by the phrase dynamic composition?",
                    "label": 0
                },
                {
                    "sent": "So what we understand by this is that assuming that you have a set of services providing various network functionality, these services can be composed to form more complex service or sometimes also referred to as a stack, and this can be done either at compile time, either at runtime.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So the purpose of this thesis is to propose, develop, implement and evaluate a framework for the dynamic composition of communication services that can speed up design and experimentation with new protocols, and that can support research on cognitive and service oriented networks.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We claim for major scientific contributions in this thesis.",
                    "label": 1
                },
                {
                    "sent": "The first one refers to the definition of the generic framework for the dynamic composition of services.",
                    "label": 1
                },
                {
                    "sent": "The second one is the module library for composable communication services.",
                    "label": 0
                },
                {
                    "sent": "The third one is a declarative language that enables service and interface descriptions, and the 4th one is the reference implementation.",
                    "label": 1
                },
                {
                    "sent": "This contribution, this work has resulted in a 3 original scientific articles and around 15 scientific conference.",
                    "label": 0
                },
                {
                    "sent": "Contributions.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "There are also some other contributions, minor, which is the fact that the framework implementation of the framework approach tech tool enables logic logic reasoning about communication services.",
                    "label": 1
                },
                {
                    "sent": "It also enables a set of cognitive networking use cases.",
                    "label": 0
                },
                {
                    "sent": "It favors practical component reuse or code reuse.",
                    "label": 1
                },
                {
                    "sent": "And it enables repeatable and remote experimentation.",
                    "label": 1
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So now I'll focus on the 1st contribution, which is the framework itself.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So the framework is composed of 4 four components forming blocks.",
                    "label": 0
                },
                {
                    "sent": "The first one is the physical test bed, so by physical test, but we refer above reffered to a set of machines that can be used to run experiments.",
                    "label": 0
                },
                {
                    "sent": "The second one is the module library, which is consists of the source code of the modules or the implementation of the services.",
                    "label": 1
                },
                {
                    "sent": "The third one is a declarative language, which is actually a level of abstraction between the user and the load.",
                    "label": 0
                },
                {
                    "sent": "The module library, which is typical returning in a low level language.",
                    "label": 0
                },
                {
                    "sent": "And finally, the workbench which is a panel for configuring, starting, running, sometimes also visualizing the results of experiments.",
                    "label": 1
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "In order for this for this framework, we identified 55 main requirements.",
                    "label": 0
                },
                {
                    "sent": "So the first requirement addressed by the framework regards modularity, so the communication services have to have a modular design and implementation in order to allow composing more complex, more complex services.",
                    "label": 1
                },
                {
                    "sent": "So if this is the module.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The requirement is fulfilled.",
                    "label": 0
                },
                {
                    "sent": "Then we can assume that we have a set of services and out of this set we can.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Select a subset and form a complex service or a stack.",
                    "label": 0
                },
                {
                    "sent": "This deck",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Is then.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Able to send.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Images occur.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Several devices.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Now what the advantage of modularity is that, assuming, assuming that you would like to switch the sequence of the services so we would like service I to.",
                    "label": 0
                },
                {
                    "sent": "To become something else.",
                    "label": 0
                },
                {
                    "sent": "So to switch the places between I and two.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This should be easily.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Symbol it should also be very easily possible to act.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Introduce additional services or remove services from the stack.",
                    "label": 0
                },
                {
                    "sent": "This is not possible with traditional implementations.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The second requirement refers to flexibility, so.",
                    "label": 0
                },
                {
                    "sent": "The components of the framework should be designed and implemented in a way that people where users can interact with them at different levels, so I.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Really, they could interact at module library level at declarative language level editor, Workbench level, and it should also be designed in such a way that it should support extension of.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Different of the different components independently.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The search requirement refers to easy programming, so if you want to use the tool if you want to extend like extend it for various research purposes, you should be able to do this as having different different skills.",
                    "label": 0
                },
                {
                    "sent": "For instance, if you have.",
                    "label": 0
                },
                {
                    "sent": "If you know how to write embedded software, then you should be able to interact with the module library and deployer experiments.",
                    "label": 0
                },
                {
                    "sent": "If you just like to use graphical user interfaces then you should be able to interact with the work bench and so on.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The 4th requirement refers to reproducibility of experiments, so the framework should support re running and reproducing experiments in an easy way, for instance by saving are old experiment exceptions so.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So a researcher should be able to.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Design.",
                    "label": 0
                },
                {
                    "sent": "Configure and deploy an experiment for the paper that he or she are currently writing, right?",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Then using this experiment on some physical testbed, and.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Save the description of the experiment and the configuration at a later time when some results have to be rerun, or when the researcher would like to.",
                    "label": 0
                },
                {
                    "sent": "Try to try to experiment on different testbed.",
                    "label": 0
                },
                {
                    "sent": "This should be.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Easy to do by just taking the description and deploying it on other other testbeds.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The 5th requirement refers to remote experimentation, so currently there are several testbed several beds that can support experimentation with community communication protocols and communication services around the world.",
                    "label": 0
                }
            ]
        },
        "clip_31": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Probably the most well known.",
                    "label": 0
                }
            ]
        },
        "clip_32": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Margin in the US and fire in the in Europe and.",
                    "label": 0
                }
            ]
        },
        "clip_33": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The idea would be that somebody is sitting somewhere in the world, can employ its work, employees, experiment in any of these testbeds.",
                    "label": 0
                }
            ]
        },
        "clip_34": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The second contributor, the second contribution of this thesis, refers to the module library for composable communication services.",
                    "label": 0
                },
                {
                    "sent": "So this is the second block of the framework that we proposed.",
                    "label": 0
                }
            ]
        },
        "clip_35": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So for the module library, we propose composable right module library, which is inspired by the rhyme communication stack.",
                    "label": 0
                },
                {
                    "sent": "The run communication architecture that is available under the Kentucky Operation Operating System, this operating system and this stack or specific for.",
                    "label": 0
                },
                {
                    "sent": "Or network or constrained devices?",
                    "label": 0
                },
                {
                    "sent": "There are three major differences between the composable rhyme architecture in the rime architecture.",
                    "label": 0
                },
                {
                    "sent": "The first one is that serum introduces three abstractions that enabled modularity.",
                    "label": 0
                },
                {
                    "sent": "These abstractions are not present here.",
                    "label": 0
                },
                {
                    "sent": "I'm the second one.",
                    "label": 0
                },
                {
                    "sent": "Is the serum further generalizes existing rhyme communication functionality?",
                    "label": 0
                },
                {
                    "sent": "And the third one is that, of course theorem is designed to encourage code reuse through the modular approach.",
                    "label": 0
                }
            ]
        },
        "clip_36": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So the first main abstraction of serum is the abstract module, which is a generic building block that can wrap different functionalities.",
                    "label": 0
                },
                {
                    "sent": "So if you can.",
                    "label": 0
                }
            ]
        },
        "clip_37": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Imagine you have like a given communication service, like for instance broadcast or unit cost that has some interfaces.",
                    "label": 0
                },
                {
                    "sent": "These are like this implementation.",
                    "label": 0
                },
                {
                    "sent": "Is this.",
                    "label": 0
                },
                {
                    "sent": "This architecture is specific for for a given service.",
                    "label": 0
                }
            ]
        },
        "clip_38": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "But then you can actually wrap it in like something more generic or and and provide standard interfaces to it.",
                    "label": 0
                },
                {
                    "sent": "If you can do this, then.",
                    "label": 0
                }
            ]
        },
        "clip_39": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "It's easy to compose several of these kind of modules.",
                    "label": 0
                },
                {
                    "sent": "This is the role of abstract module.",
                    "label": 0
                }
            ]
        },
        "clip_40": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The second abstraction is the pipe that is a vertical data structure that can be accessed by any of the modules in the compose stack.",
                    "label": 0
                },
                {
                    "sent": "So the pipe contains data structures corresponding to parameters that are used by the stack, so this abstraction was introduced mainly to support help.",
                    "label": 0
                },
                {
                    "sent": "Instantiate the concept of vertical layer.",
                    "label": 0
                },
                {
                    "sent": "That is is required by cognitive networks.",
                    "label": 0
                },
                {
                    "sent": "How this is the way serum is designed is that each pipe is uniquely assigned to channel.",
                    "label": 0
                }
            ]
        },
        "clip_41": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So this is how an illustration would be.",
                    "label": 0
                },
                {
                    "sent": "You would have a complex communication service and each of these services is able to interact with the pipe.",
                    "label": 0
                }
            ]
        },
        "clip_42": {
            "is_summarization_sample": false,
            "summarization_data": []
        },
        "clip_43": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The third abstraction is the stack, so the stack is a structure that contains a meaningful sequence of abstract modules and a pipe, so it actually contains a complex service Anna pipe, and it behaves as a container for these elements and enables composition of more complex commune.",
                    "label": 0
                }
            ]
        },
        "clip_44": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Services, so for instance, this is like a simple one stack communication service.",
                    "label": 0
                }
            ]
        },
        "clip_45": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This would be like A3 stack one, so each of them running independently on one channel.",
                    "label": 0
                },
                {
                    "sent": "So this design is specific for for a mesh network for instance.",
                    "label": 0
                }
            ]
        },
        "clip_46": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So now I'll provide a quick example of the advantages of serum you to compose ability.",
                    "label": 0
                },
                {
                    "sent": "So on the left side there is a dependency graph that is characteristic to rhyme and on the right hand side there is a dependency graph characteristic to see RAM.",
                    "label": 0
                },
                {
                    "sent": "So you can see that there are four components, polite, unicast, broadcast, ABC that are that are common to the two to the two dependency graphs.",
                    "label": 0
                },
                {
                    "sent": "What actually?",
                    "label": 0
                },
                {
                    "sent": "Two components that are.",
                    "label": 0
                }
            ]
        },
        "clip_47": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Appear in rhyme that are not necessary in the serum design because.",
                    "label": 0
                },
                {
                    "sent": "Because of the generalization that it provides, so the same basic functionality that you would like to achieve with Prime needs 6 service implementation, while with serum it needs 4.",
                    "label": 0
                }
            ]
        },
        "clip_48": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Another advantage is that with serum 11, complex services are possible thanks to the flexibility while we try only six or possible.",
                    "label": 0
                }
            ]
        },
        "clip_49": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So of course, as I said, OK, let's see.",
                    "label": 0
                },
                {
                    "sent": "Time enables modularity.",
                    "label": 0
                },
                {
                    "sent": "You can play with blocks and you can interconnect them, but this adds some overhead and this overhead has some costs, so the service implementations themselves are similar as in rhyme, so they don't take.",
                    "label": 0
                },
                {
                    "sent": "They don't take more memory or they don't take longer to execute on the device.",
                    "label": 0
                },
                {
                    "sent": "However, an application of fully compiled application that actually includes this overhead is about 60% larger with the rhyme.",
                    "label": 0
                },
                {
                    "sent": "The execution time for, for instance, for a sequence of operation, opens and close, open, send, receive, close.",
                    "label": 0
                },
                {
                    "sent": "It's 2524 higher in rank in serum Danny Rhyme.",
                    "label": 0
                },
                {
                    "sent": "And see it, I'm also obviously consumes more energy, so it consumes 1.6% more energy.",
                    "label": 0
                },
                {
                    "sent": "So this means that if you have a device running serum application it it will be able to only run 360 days out of 365 in a year, so five days less, which in general.",
                    "label": 0
                },
                {
                    "sent": "Might be an issue, but for experimentation purposes I think it's not such a high cost.",
                    "label": 0
                }
            ]
        },
        "clip_50": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So even though it's from some performance parameters, serum is slower.",
                    "label": 0
                },
                {
                    "sent": "It brings freedom to easily compose and text, test new combinations and in this sense it instantiates through the pipe abstraction.",
                    "label": 0
                },
                {
                    "sent": "The concept of vertical layer.",
                    "label": 0
                }
            ]
        },
        "clip_51": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The third contribution refers to the declarative language.",
                    "label": 0
                },
                {
                    "sent": "That enables service and.",
                    "label": 0
                },
                {
                    "sent": "Interface descriptions so.",
                    "label": 0
                }
            ]
        },
        "clip_52": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The declarative language is a natural intermediate step natural intermediate step between the user or the user interface and a program code, so such languages are typically used for describing what the program should do, how it should do it to perform validity, checking to provide interoperability with other systems, or to support particular types of research.",
                    "label": 0
                }
            ]
        },
        "clip_53": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We identified for our purposes 5 requirements for selecting or for designing such language.",
                    "label": 0
                },
                {
                    "sent": "So we would like it to be as simple as possible because it's used to annotate the modules it used to annotate services.",
                    "label": 0
                },
                {
                    "sent": "So we would like to actually lower the barriers such as far as much as possible, to enable developers of embedded embedded programs to actually annotate what they're doing.",
                    "label": 0
                },
                {
                    "sent": "Then it should be machine readable.",
                    "label": 0
                },
                {
                    "sent": "It should use as much as possible.",
                    "label": 0
                },
                {
                    "sent": "Standardized standardized language is already there, it should support interoperability and knowledge representation for logic, reasoning about communication services.",
                    "label": 1
                }
            ]
        },
        "clip_54": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So taking into account this requirement, we created the process.",
                    "label": 0
                },
                {
                    "sent": "We designed the prototype declarative language and.",
                    "label": 0
                },
                {
                    "sent": "The declarative language uses a subject, predicate object model that is widely popular in the semantic web area, particularly the RDF standard.",
                    "label": 0
                },
                {
                    "sent": "So for instance, using this language, we can say that module, in this case the ABC module with this version of broadcasting we can tell what type it is and what kind of primitives it has.",
                    "label": 0
                },
                {
                    "sent": "What kind of functions?",
                    "label": 0
                }
            ]
        },
        "clip_55": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And this kind of languages typically use a standard vocabulary.",
                    "label": 0
                },
                {
                    "sent": "In our case, we decided to use an ontology.",
                    "label": 0
                },
                {
                    "sent": "So we created our own ontology reflecting the the serum module library so.",
                    "label": 0
                },
                {
                    "sent": "So called Serum world model.",
                    "label": 0
                },
                {
                    "sent": "Um?",
                    "label": 0
                },
                {
                    "sent": "And just in by.",
                    "label": 0
                },
                {
                    "sent": "By taking these design choices, and by doing this selection.",
                    "label": 0
                }
            ]
        },
        "clip_56": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We actually satisfy four out of five requirements, so so far the requirement regarding reasoning with Community communication services is not satisfied.",
                    "label": 0
                }
            ]
        },
        "clip_57": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "In order to do that.",
                    "label": 0
                },
                {
                    "sent": "One has to add a reasoning engine that can support, for instance, rules.",
                    "label": 0
                },
                {
                    "sent": "So once you give it rules then then it.",
                    "label": 0
                },
                {
                    "sent": "It can do some reasoning, for instance like reasoning on transitivity relationships.",
                    "label": 0
                },
                {
                    "sent": "And then if you want to do more, if a researcher wants to do more, one way of going ahead is to employ more and more powerful reasoning engines.",
                    "label": 0
                },
                {
                    "sent": "An one option would be for instance, to map the serum ontology into more complex ontologies and populate more complex knowledge bases that support that.",
                    "label": 0
                },
                {
                    "sent": "Come with more powerful reasoners.",
                    "label": 0
                },
                {
                    "sent": "So what we did for this purpose, we mapped the serum concepts into the cycle ontology.",
                    "label": 0
                },
                {
                    "sent": "Into the South to corresponding to psych concept, and then we inserted some more complex rules that were able to reason like to say that for instance, you are able to express that you cannot put single hop services on top of multi hop services.",
                    "label": 0
                },
                {
                    "sent": "So this is like the type of rules or the type of constraints that are possible with this.",
                    "label": 0
                },
                {
                    "sent": "This is.",
                    "label": 0
                },
                {
                    "sent": "They can be increasingly complex and they can help automate the system.",
                    "label": 0
                }
            ]
        },
        "clip_58": {
            "is_summarization_sample": false,
            "summarization_data": []
        },
        "clip_59": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The 4th contribution of the thesis is the reference implementation of the framework, so the reference implementation.",
                    "label": 0
                }
            ]
        },
        "clip_60": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Is called Proto Stack and it uses Vesna sensor nodes.",
                    "label": 0
                },
                {
                    "sent": "As for the physical test bed, it uses the serum or composable rhyme module library that I presented before the declarative language.",
                    "label": 0
                },
                {
                    "sent": "The prototype declarative language and it just uses a standard library that for the for the Workbench an which is tightly integrated with the language with a declarative language.",
                    "label": 0
                }
            ]
        },
        "clip_61": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And this is how Protoss Tech works, so.",
                    "label": 0
                },
                {
                    "sent": "Assuming you have a set of communicate of implementations of the communication services or the module library that are annotated.",
                    "label": 0
                }
            ]
        },
        "clip_62": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "What it does, it parses this annotations.",
                    "label": 0
                },
                {
                    "sent": "An admin and knowledge base then.",
                    "label": 0
                }
            ]
        },
        "clip_63": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Is on everything that is on the knowledge base and automatically a workbench is generated.",
                    "label": 0
                },
                {
                    "sent": "Using this workbench.",
                    "label": 0
                }
            ]
        },
        "clip_64": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Up a user can compose a complex service, and this complex service can then be.",
                    "label": 0
                }
            ]
        },
        "clip_65": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Is validated for consistency, so it makes sure that the service the interfaces of the services you compose their match and that the sequence is correct.",
                    "label": 0
                }
            ]
        },
        "clip_66": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And then some little bit of C code is auto generated and the images.",
                    "label": 0
                }
            ]
        },
        "clip_67": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Finally, diploid on the test, but then you can run your experiment.",
                    "label": 0
                }
            ]
        },
        "clip_68": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And this tool enables several use cases, so it enables describing, publishing and querying services for service oriented networks.",
                    "label": 0
                },
                {
                    "sent": "It can guide the user in composing more complex services, and it enables several cognitive networking prototypes of various complexities.",
                    "label": 0
                },
                {
                    "sent": "So for instance, testing of cognitive loops with cross layer informations with information is coming from cognitive radio from radio environmental Maps and also implementations of some of the functionality of the connectivity broker.",
                    "label": 0
                }
            ]
        },
        "clip_69": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So, just to summarize, we proposing we proposing this thesis for major contributions, the first one is the generic framework for the dynamic composition of communication services.",
                    "label": 1
                },
                {
                    "sent": "The second one is the module library for composable communication services, the serum library.",
                    "label": 0
                },
                {
                    "sent": "The third one is a declarative language that enables service and interface descriptions.",
                    "label": 0
                },
                {
                    "sent": "So this is the Pro tech language and together with the vocabulary, the serum ontology and finally the Protoss tech, which is the reference implemented.",
                    "label": 0
                },
                {
                    "sent": "The work resulted in three Journal and several conference papers.",
                    "label": 0
                }
            ]
        },
        "clip_70": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And of course, we also have plans to future work the.",
                    "label": 0
                },
                {
                    "sent": "The most important is to extend the serum module library with learning functionality.",
                    "label": 0
                },
                {
                    "sent": "And to add over their programming features so to be able to actually run this.",
                    "label": 0
                },
                {
                    "sent": "Teulon logis testbed.",
                    "label": 0
                },
                {
                    "sent": "Then we would like to investigate tradeoffs in offering distributed versus centralized brokerage functionality in cognitive networks.",
                    "label": 0
                },
                {
                    "sent": "And we would also like to increase the degree of automation of complex service composition.",
                    "label": 0
                },
                {
                    "sent": "So more or less to based on some set of services that you already selected.",
                    "label": 1
                },
                {
                    "sent": "We would like to suggest additional services.",
                    "label": 1
                },
                {
                    "sent": "Of course, this last last part is dependent on the first one, so you need more services in order to for these suggestions to make sense.",
                    "label": 0
                }
            ]
        },
        "clip_71": {
            "is_summarization_sample": false,
            "summarization_data": []
        }
    }
}