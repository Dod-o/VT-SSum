{
    "id": "cglhumxizmyyxr25n72zarhpk3lsljnx",
    "title": "Bag Semantics of DL-Lite with Functionality Axioms",
    "info": {
        "author": [
            "Egor V. Kostylev, Department of Computer Science, University of Oxford"
        ],
        "published": "Dec. 10, 2019",
        "recorded": "October 2019",
        "category": [
            "Top->Computer Science->Semantic Web"
        ]
    },
    "url": "http://videolectures.net/iswc2019_kostylev_bag_semantics/",
    "segmentation": [
        [
            "And yes, my name is yoga and I'm presenting a work with a bunch of people from Oxford or people who used to be in Oxford like Gianluca Bobbies or Haralambos, Mark Knock Door and Ian and this is a work about back semantics of daylight with functionality axioms."
        ],
        [
            "So let me start with a little bit of motivation, and in particular with.",
            "Brief introduction to Obediah Ontology based data access.",
            "Actually like who knows what it is.",
            "OK. Not everyone.",
            "OK. Let's very quickly explain what it is.",
            "So let's say we have some database.",
            "Then we have some mappings which sent our database to some a box, which is usually just virtual, so it's not materialized.",
            "And then on top of this a box.",
            "We have also some ontology, meaning some T box in some kind of description logic, maybe dialight or.",
            "It's instantiation like or or something like this.",
            "And then a user poses queries over the vocabulary of the ontology, meaning that over the key box and a box.",
            "But since the inbox is not usually materialized, we are interested to rewrite this queries to evaluate them over the original database rather than over the virtual a box and key box.",
            "But this materialization step is usually considered as simple and.",
            "That's why it's usually in theory.",
            "Consider that, OK, we have this a box materialization of the database with the mappings and.",
            "What we're interested in is to rewrite queries so that they work just over there box without the axioms in the box, and this is called the rewriting.",
            "OK, so."
        ],
        [
            "But let's look at an example and let's we have some database which consists of just one relation are about some bands and albums and their years.",
            "And then we have a mapping.",
            "We just uses some maybe SQL Query which just projects to the.",
            "Be name.",
            "Attribute and we have our."
        ],
        [
            "That materialized in this case?",
            "It's much harder about our a box over band concept band.",
            "Unary relation, right?",
            "So this is like pretty much standard query, but here you may notice that actually sparkle or sorry sequel works a little bit, not as in this example."
        ],
        [
            "Because the query which underlies our mapping.",
            "Is a SQL query and it preserves multiplicities, right?",
            "So if you know?",
            "SQL queries they may have may give the same answer, not just once but several times.",
            "And in this case of course if we just project on the B name attribute we will have Pink Floyd twice, right?",
            "This is usually considered as a minor thing like and we just ignore this thing and our a box is a set of facts as in this example, but."
        ],
        [
            "Sometimes multiplicities matter, and this happens when we have, for example, aggregate queries when our queries over the ontology is actually not just this simple.",
            "Maybe conjunctive query, but something where we need to take care about multiplicities, right?",
            "And this is actually quite important situation when we really want to do something like an analytical queries.",
            "Well, all of us sometimes use aggregate queries.",
            "When we want to count something.",
            "And so basically, this mismatch is usually hidden under the carpet, but it is important and we want to study what actually happens if we want to preserve multiplicities.",
            "OK."
        ],
        [
            "So.",
            "Roughly speaking, let's start with some overview.",
            "Start continue with an overview what we want to do.",
            "So we want to consider.",
            "Query answering over oncologist, where ontologies are expressed in a popular ontology language.",
            "Dear light F meaning that it is a simple ontology language, but it uses some functionality axioms.",
            "We will see a couple of examples, but we want to take care about multiplicities.",
            "In this case our a box.",
            "Our set of facts is now not just a set but a bag of assertions.",
            "Also interpretations, logical interpretations, they assign backs rather than.",
            "Sets 2 concepts in holes.",
            "And we will introduce two variants of semantics for this.",
            "This extension of description logics and study the proper."
        ],
        [
            "In particular, we will study query answering.",
            "Which places like, takes care about multiplicities, and we will also see when we can do rewriting as I just described when we can rewrite over the air box preserving multiplicities.",
            "In this case we will rewrite to.",
            "Sequel to the language which really cares about multiplicities.",
            "OK, so let's."
        ],
        [
            "Briefly, look at the existing language dialight F. And this is an ontology language.",
            "We have fun.",
            "We start with atomic concepts and holes, unary and binary binary relations.",
            "Then we construct more complex concepts and goals which are either like as.",
            "On the slide, I hope.",
            "More or less, everyone's seen something like this in their lives.",
            "Then we have tee boxes which sets up inclusions.",
            "Or disjointness axioms or functionality?",
            "It seems like the last one is probably the most important for us in this one, because we want this is the precisely what differs this work from the previous works?",
            "And then a box is just a set of facts over this concept and troll names and then an ontology is a set of is a pair of T box axioms and a box assertions.",
            "Well, the semantics I don't want to stop on it.",
            "It's pretty much straightforward.",
            "We have interpretations of atomic concepts, and then they propagate, and then they either hold or doesn't hold.",
            "Satisfier doesn't satisfy a box and T box.",
            "Social send axioms."
        ],
        [
            "Alright then we have conjunctive query answering.",
            "This is just standard conjunctions in logical or form unions of conjunctive queries.",
            "And then we can talk about certain answers of conjunctive queries over ontologies.",
            "This means that.",
            "A query for some couple holes in the ontology if it calls in all the logical models of the key box and a box.",
            "This is pretty much standard and then a rewriting of a query over 80 books is another query either in the same language as a secure you secure, or maybe since some more expressive language.",
            "But the important property is that we can evaluate.",
            "This new query just over there, a box just over the facts we have kind of rewriting out the tee box.",
            "Importantly this rewriting it depends only on the tee box so it should work for all their boxes for all the data.",
            "Kind of.",
            "In dependently right, so I hope.",
            "More or less if you are here, you may know what I'm talking about, right?"
        ],
        [
            "No.",
            "Well we want to generalize this picture to bags.",
            "Fine, So what is a bag we just now we care about multiplicities, right?",
            "So we assign maybe to some facts in, well to some assertions in Air Box we may assign some multiplicities we may assign.",
            "Multiplicity is to statements in their interpretation.",
            "But just in general, that bag is it or a multiset is a function from some object to some numbers.",
            "Then we can generalize subpopulation.",
            "Generalized include subset relation to bags.",
            "Then we have some operations like Union, Max, Union arithmetic, Union, intersection or this is intuitively pretty much straightforward.",
            "Then duplicate elimination and so on.",
            "And just as an example, we may have a a bag, a box which is actually now a bag of assertions rather than a set of assertions.",
            "Alright."
        ],
        [
            "So.",
            "In the case without functionality assumes this was studied before and already we have deer light core.",
            "The back version of Dialight Core, meaning the same language but without functionality axioms.",
            "And this was introduced in previous work here.",
            "As I said, the a box may have multiplicities, but the tee box may have more is the same as it was before.",
            "Then we can say what is the semantics for interpretation?",
            "Pretty much in a straightforward way.",
            "The only question is how to interpret exists.",
            "Our concept, meaning that we want to project to just one argument of a role.",
            "But here we take back projection.",
            "So we basically sum up all the multiplicities when we basically project the second argument as it is written on this slide.",
            "The.",
            "Then we can say that.",
            "And interpretation satisfy axioms, OK inclusion.",
            "Straightforward disjointness, again, straightforward here the.",
            "Subset relation and intersection are for bags as on the previous slide, and then we can say that the interpretation satisfies a bag a box if the multiplicity in the interpretation is greater than their multiplicity.",
            "In there a box."
        ],
        [
            "OK, but now what to do with the functionality axioms?",
            "So just as a simple example, maybe we have this inclusion exists B implies exists S, But S is functional and maybe in the air box we have two copies of P402 outcoming peer relations.",
            "So we need somehow to satisfy it.",
            "We need to outcoming S roles, but S is functional."
        ],
        [
            "So an obvious idea would be OK. Let's add one more S from OC, so that's how I at least.",
            "Intuitively, trying to preserve functionality axiom right so saying that there exists just one C such that always connected to see maybe with several copies, but still just one."
        ],
        [
            "And we have a choice.",
            "Is this interpretation Satis?",
            "Does it?",
            "Does this interpretation satisfy the tee box or in a box or not?",
            "If we follow standard approach of SQL and saying that functionality exams are actually key constraints, primary key constraints, then we have to say that.",
            "This interpretation does not satisfy our.",
            "Our knowledge base and Moreover, of course, we just don't have any model and we are not satisfy oball at all.",
            "And this is one way to deal with this functionality Axiom and now."
        ],
        [
            "Always saying OK, it's fine and we have this satisfaction.",
            "This situation is OK."
        ],
        [
            "Alright, so we have two semantics.",
            "Either SQL or are semantics for bag interpretation.",
            "And they pretty much the rest is as it was."
        ],
        [
            "Default so.",
            "Now we study this ontology language for satisfiability.",
            "Apparently well, we have two semantics, 2 languages for satisfiability.",
            "We have this first semantics, isql semantics or is.",
            "Pretty much the same for satisfiability as the bad version of it, like Theorem 2.1.",
            "Well, of course, proposition one is just the formula of the definitions, but for satisfiability of the second semantics, we have that.",
            "Oh oh sorry, I said role for for the second semantics.",
            "It's just the standard set semantics satisfiability, but for SQL semantics is different and we have that the complexity is slightly different because of these things."
        ],
        [
            "OK, now."
        ],
        [
            "For query answering, well I do."
        ],
        [
            "Have much time but come back semantics of query answering is pretty much as in SQL."
        ],
        [
            "For example."
        ],
        [
            "This we have said."
        ],
        [
            "And copies of the query.",
            "So the answer is 7."
        ],
        [
            "And we can.",
            "Define certain answers in a kind of straightforward way.",
            "The only important thing that we care about well, we have many models right and we want to say what is this certain answer for many models of a query.",
            "And here our we commit to this kind of idea that the certain answer is the minimum over all possible models.",
            "The minimum number of answers in all possible models.",
            "And this is our semantics of query answering and then OK we have this.",
            "Decision problem is.",
            "The number of answers to this query is precise, is more than a specific number we ask about, so we need to turn it to decision problem.",
            "And this is a natural way to do it and."
        ],
        [
            "Well, we stopped to study it.",
            "Unfortunately, we already know that.",
            "We have bad complexity going pee hardness even for the case with our functionality axioms and this of course propagates for there.",
            "Both of our semantics."
        ],
        [
            "But we also know that if we restrict our queries little bit and talk about.",
            "Rooted queries and these are very mild restriction where we consider the case when we each connected component or well forget about connected components.",
            "Just think that every query has an answer variable non Boolean.",
            "Then we actually have this like good results like heritability, intractability of query answering.",
            "Even OK, without functionality axioms, but also."
        ],
        [
            "Or we can extend these."
        ],
        [
            "Results 2 SQL semantics in a straightforward way.",
            "We have writability and we have TCO.",
            "Complexity for query answering, however for this."
        ],
        [
            "And semantics, these results don't propagate that nicely because we can show that even for rooted queries for this restricted queries we have log space hardness in data complexity, and this implies that we don't have the right ability.",
            "However, if we restrict our.",
            "Functional like interaction or functionality axioms with.",
            "But in the tee box, like globally, if we don't have any cycles from functional roles in the tee box then we can recover both irritability and good complexity of query answering.",
            "Alright, so."
        ],
        [
            "Let's sum up what we have.",
            "We studied.",
            "An extension of.",
            "Query answering.",
            "All were of ontologies with back semantics and particular intelligence with functional excellence.",
            "This is motivated by aggregation.",
            "Then we introduce two semantics for functional axioms.",
            "SQL, NMR semantics.",
            "Both of them have their own person quotes.",
            "Overall, we know that query answering is hot, but if we impose some small restrictions then we become actually tractable and rewriteable.",
            "For the future work, of course we want to consider more ontology languages such as Datalog, plus minus for example, or AL2RL.",
            "Also, we want to know the same for other query languages, so not just conjunctive query over like our as our user queries, but also maybe Sparkle.",
            "And of course we're interested in implementing these things and yeah, so to see how it works in real life.",
            "OK, that's it.",
            "Thank you.",
            "Thank you for that, any questions?",
            "So thank you for presentation.",
            "Just a question can we can we compare embark cement?",
            "It's with the standard semantics.",
            "I mean that if we take ontology and we check it if it consistency.",
            "Understand our schematics for example.",
            "Easy consistent yeah.",
            "OK so now we check the same mythology.",
            "Under back Cementless, so it is is consistent on.",
            "Yeah OK, sorry if I rushed through it because it was by I didn't want OK I wanted to focus on the setting rather than on the result.",
            "So yes we can compare and this is reflected in say for satisfiability where it is.",
            "Yes, of course, and actually this is the result.",
            "So for one of our semantics.",
            "For our semantics, satisfiability is the same as in the set semantics under set semantics.",
            "So if we can satisfy under back semantics then we can satisfy in the set semantics and other way around for the other semantics.",
            "For SQL semantics, just One Direction holds so satisfiability under.",
            "SQL implies satisfiability on the back semantics.",
            "Of course.",
            "When I'm saying this, I talk about doubling like when I don't care about duplicates in my a box, right, so?",
            "Sagun or not well.",
            "OK, to compare them we need to match these things right?",
            "Because if we have, we have multiplicities in the a box.",
            "If we forget about multiplicities in the air box, then we can compare them and pretty much one of our semantics will be precisely the same in terms of satisfiability.",
            "They are.",
            "The semantics will be stronger.",
            "Yes, you are right.",
            "But for query answering, it becomes like much more difficult.",
            "Because.",
            "You can.",
            "Set semantics, but then generate multiple issues because of the functionality.",
            "Well, yeah, of course, if we start in the set semantics in the A box then.",
            "In the data or in the a box, I don't think how can you.",
            "How can you generate?",
            "Yeah, you are right, it is possible, yes.",
            "Multiplicity is yes.",
            "But it doesn't affect the satisfiability.",
            "It affects query answering and query rewriting."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And yes, my name is yoga and I'm presenting a work with a bunch of people from Oxford or people who used to be in Oxford like Gianluca Bobbies or Haralambos, Mark Knock Door and Ian and this is a work about back semantics of daylight with functionality axioms.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So let me start with a little bit of motivation, and in particular with.",
                    "label": 0
                },
                {
                    "sent": "Brief introduction to Obediah Ontology based data access.",
                    "label": 0
                },
                {
                    "sent": "Actually like who knows what it is.",
                    "label": 0
                },
                {
                    "sent": "OK. Not everyone.",
                    "label": 0
                },
                {
                    "sent": "OK. Let's very quickly explain what it is.",
                    "label": 0
                },
                {
                    "sent": "So let's say we have some database.",
                    "label": 0
                },
                {
                    "sent": "Then we have some mappings which sent our database to some a box, which is usually just virtual, so it's not materialized.",
                    "label": 0
                },
                {
                    "sent": "And then on top of this a box.",
                    "label": 0
                },
                {
                    "sent": "We have also some ontology, meaning some T box in some kind of description logic, maybe dialight or.",
                    "label": 0
                },
                {
                    "sent": "It's instantiation like or or something like this.",
                    "label": 0
                },
                {
                    "sent": "And then a user poses queries over the vocabulary of the ontology, meaning that over the key box and a box.",
                    "label": 0
                },
                {
                    "sent": "But since the inbox is not usually materialized, we are interested to rewrite this queries to evaluate them over the original database rather than over the virtual a box and key box.",
                    "label": 0
                },
                {
                    "sent": "But this materialization step is usually considered as simple and.",
                    "label": 0
                },
                {
                    "sent": "That's why it's usually in theory.",
                    "label": 0
                },
                {
                    "sent": "Consider that, OK, we have this a box materialization of the database with the mappings and.",
                    "label": 0
                },
                {
                    "sent": "What we're interested in is to rewrite queries so that they work just over there box without the axioms in the box, and this is called the rewriting.",
                    "label": 0
                },
                {
                    "sent": "OK, so.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "But let's look at an example and let's we have some database which consists of just one relation are about some bands and albums and their years.",
                    "label": 0
                },
                {
                    "sent": "And then we have a mapping.",
                    "label": 0
                },
                {
                    "sent": "We just uses some maybe SQL Query which just projects to the.",
                    "label": 0
                },
                {
                    "sent": "Be name.",
                    "label": 0
                },
                {
                    "sent": "Attribute and we have our.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "That materialized in this case?",
                    "label": 0
                },
                {
                    "sent": "It's much harder about our a box over band concept band.",
                    "label": 0
                },
                {
                    "sent": "Unary relation, right?",
                    "label": 0
                },
                {
                    "sent": "So this is like pretty much standard query, but here you may notice that actually sparkle or sorry sequel works a little bit, not as in this example.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Because the query which underlies our mapping.",
                    "label": 0
                },
                {
                    "sent": "Is a SQL query and it preserves multiplicities, right?",
                    "label": 0
                },
                {
                    "sent": "So if you know?",
                    "label": 0
                },
                {
                    "sent": "SQL queries they may have may give the same answer, not just once but several times.",
                    "label": 0
                },
                {
                    "sent": "And in this case of course if we just project on the B name attribute we will have Pink Floyd twice, right?",
                    "label": 0
                },
                {
                    "sent": "This is usually considered as a minor thing like and we just ignore this thing and our a box is a set of facts as in this example, but.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Sometimes multiplicities matter, and this happens when we have, for example, aggregate queries when our queries over the ontology is actually not just this simple.",
                    "label": 0
                },
                {
                    "sent": "Maybe conjunctive query, but something where we need to take care about multiplicities, right?",
                    "label": 0
                },
                {
                    "sent": "And this is actually quite important situation when we really want to do something like an analytical queries.",
                    "label": 0
                },
                {
                    "sent": "Well, all of us sometimes use aggregate queries.",
                    "label": 0
                },
                {
                    "sent": "When we want to count something.",
                    "label": 0
                },
                {
                    "sent": "And so basically, this mismatch is usually hidden under the carpet, but it is important and we want to study what actually happens if we want to preserve multiplicities.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "Roughly speaking, let's start with some overview.",
                    "label": 0
                },
                {
                    "sent": "Start continue with an overview what we want to do.",
                    "label": 0
                },
                {
                    "sent": "So we want to consider.",
                    "label": 0
                },
                {
                    "sent": "Query answering over oncologist, where ontologies are expressed in a popular ontology language.",
                    "label": 0
                },
                {
                    "sent": "Dear light F meaning that it is a simple ontology language, but it uses some functionality axioms.",
                    "label": 0
                },
                {
                    "sent": "We will see a couple of examples, but we want to take care about multiplicities.",
                    "label": 0
                },
                {
                    "sent": "In this case our a box.",
                    "label": 0
                },
                {
                    "sent": "Our set of facts is now not just a set but a bag of assertions.",
                    "label": 0
                },
                {
                    "sent": "Also interpretations, logical interpretations, they assign backs rather than.",
                    "label": 0
                },
                {
                    "sent": "Sets 2 concepts in holes.",
                    "label": 0
                },
                {
                    "sent": "And we will introduce two variants of semantics for this.",
                    "label": 0
                },
                {
                    "sent": "This extension of description logics and study the proper.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "In particular, we will study query answering.",
                    "label": 0
                },
                {
                    "sent": "Which places like, takes care about multiplicities, and we will also see when we can do rewriting as I just described when we can rewrite over the air box preserving multiplicities.",
                    "label": 0
                },
                {
                    "sent": "In this case we will rewrite to.",
                    "label": 0
                },
                {
                    "sent": "Sequel to the language which really cares about multiplicities.",
                    "label": 0
                },
                {
                    "sent": "OK, so let's.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Briefly, look at the existing language dialight F. And this is an ontology language.",
                    "label": 0
                },
                {
                    "sent": "We have fun.",
                    "label": 0
                },
                {
                    "sent": "We start with atomic concepts and holes, unary and binary binary relations.",
                    "label": 1
                },
                {
                    "sent": "Then we construct more complex concepts and goals which are either like as.",
                    "label": 0
                },
                {
                    "sent": "On the slide, I hope.",
                    "label": 0
                },
                {
                    "sent": "More or less, everyone's seen something like this in their lives.",
                    "label": 0
                },
                {
                    "sent": "Then we have tee boxes which sets up inclusions.",
                    "label": 0
                },
                {
                    "sent": "Or disjointness axioms or functionality?",
                    "label": 0
                },
                {
                    "sent": "It seems like the last one is probably the most important for us in this one, because we want this is the precisely what differs this work from the previous works?",
                    "label": 0
                },
                {
                    "sent": "And then a box is just a set of facts over this concept and troll names and then an ontology is a set of is a pair of T box axioms and a box assertions.",
                    "label": 0
                },
                {
                    "sent": "Well, the semantics I don't want to stop on it.",
                    "label": 0
                },
                {
                    "sent": "It's pretty much straightforward.",
                    "label": 0
                },
                {
                    "sent": "We have interpretations of atomic concepts, and then they propagate, and then they either hold or doesn't hold.",
                    "label": 1
                },
                {
                    "sent": "Satisfier doesn't satisfy a box and T box.",
                    "label": 0
                },
                {
                    "sent": "Social send axioms.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Alright then we have conjunctive query answering.",
                    "label": 1
                },
                {
                    "sent": "This is just standard conjunctions in logical or form unions of conjunctive queries.",
                    "label": 0
                },
                {
                    "sent": "And then we can talk about certain answers of conjunctive queries over ontologies.",
                    "label": 1
                },
                {
                    "sent": "This means that.",
                    "label": 0
                },
                {
                    "sent": "A query for some couple holes in the ontology if it calls in all the logical models of the key box and a box.",
                    "label": 0
                },
                {
                    "sent": "This is pretty much standard and then a rewriting of a query over 80 books is another query either in the same language as a secure you secure, or maybe since some more expressive language.",
                    "label": 1
                },
                {
                    "sent": "But the important property is that we can evaluate.",
                    "label": 0
                },
                {
                    "sent": "This new query just over there, a box just over the facts we have kind of rewriting out the tee box.",
                    "label": 0
                },
                {
                    "sent": "Importantly this rewriting it depends only on the tee box so it should work for all their boxes for all the data.",
                    "label": 0
                },
                {
                    "sent": "Kind of.",
                    "label": 0
                },
                {
                    "sent": "In dependently right, so I hope.",
                    "label": 0
                },
                {
                    "sent": "More or less if you are here, you may know what I'm talking about, right?",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "No.",
                    "label": 0
                },
                {
                    "sent": "Well we want to generalize this picture to bags.",
                    "label": 0
                },
                {
                    "sent": "Fine, So what is a bag we just now we care about multiplicities, right?",
                    "label": 0
                },
                {
                    "sent": "So we assign maybe to some facts in, well to some assertions in Air Box we may assign some multiplicities we may assign.",
                    "label": 0
                },
                {
                    "sent": "Multiplicity is to statements in their interpretation.",
                    "label": 0
                },
                {
                    "sent": "But just in general, that bag is it or a multiset is a function from some object to some numbers.",
                    "label": 0
                },
                {
                    "sent": "Then we can generalize subpopulation.",
                    "label": 0
                },
                {
                    "sent": "Generalized include subset relation to bags.",
                    "label": 0
                },
                {
                    "sent": "Then we have some operations like Union, Max, Union arithmetic, Union, intersection or this is intuitively pretty much straightforward.",
                    "label": 1
                },
                {
                    "sent": "Then duplicate elimination and so on.",
                    "label": 1
                },
                {
                    "sent": "And just as an example, we may have a a bag, a box which is actually now a bag of assertions rather than a set of assertions.",
                    "label": 1
                },
                {
                    "sent": "Alright.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "In the case without functionality assumes this was studied before and already we have deer light core.",
                    "label": 0
                },
                {
                    "sent": "The back version of Dialight Core, meaning the same language but without functionality axioms.",
                    "label": 1
                },
                {
                    "sent": "And this was introduced in previous work here.",
                    "label": 0
                },
                {
                    "sent": "As I said, the a box may have multiplicities, but the tee box may have more is the same as it was before.",
                    "label": 1
                },
                {
                    "sent": "Then we can say what is the semantics for interpretation?",
                    "label": 1
                },
                {
                    "sent": "Pretty much in a straightforward way.",
                    "label": 0
                },
                {
                    "sent": "The only question is how to interpret exists.",
                    "label": 0
                },
                {
                    "sent": "Our concept, meaning that we want to project to just one argument of a role.",
                    "label": 0
                },
                {
                    "sent": "But here we take back projection.",
                    "label": 0
                },
                {
                    "sent": "So we basically sum up all the multiplicities when we basically project the second argument as it is written on this slide.",
                    "label": 0
                },
                {
                    "sent": "The.",
                    "label": 0
                },
                {
                    "sent": "Then we can say that.",
                    "label": 0
                },
                {
                    "sent": "And interpretation satisfy axioms, OK inclusion.",
                    "label": 0
                },
                {
                    "sent": "Straightforward disjointness, again, straightforward here the.",
                    "label": 0
                },
                {
                    "sent": "Subset relation and intersection are for bags as on the previous slide, and then we can say that the interpretation satisfies a bag a box if the multiplicity in the interpretation is greater than their multiplicity.",
                    "label": 0
                },
                {
                    "sent": "In there a box.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, but now what to do with the functionality axioms?",
                    "label": 0
                },
                {
                    "sent": "So just as a simple example, maybe we have this inclusion exists B implies exists S, But S is functional and maybe in the air box we have two copies of P402 outcoming peer relations.",
                    "label": 0
                },
                {
                    "sent": "So we need somehow to satisfy it.",
                    "label": 0
                },
                {
                    "sent": "We need to outcoming S roles, but S is functional.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So an obvious idea would be OK. Let's add one more S from OC, so that's how I at least.",
                    "label": 0
                },
                {
                    "sent": "Intuitively, trying to preserve functionality axiom right so saying that there exists just one C such that always connected to see maybe with several copies, but still just one.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And we have a choice.",
                    "label": 0
                },
                {
                    "sent": "Is this interpretation Satis?",
                    "label": 0
                },
                {
                    "sent": "Does it?",
                    "label": 0
                },
                {
                    "sent": "Does this interpretation satisfy the tee box or in a box or not?",
                    "label": 0
                },
                {
                    "sent": "If we follow standard approach of SQL and saying that functionality exams are actually key constraints, primary key constraints, then we have to say that.",
                    "label": 0
                },
                {
                    "sent": "This interpretation does not satisfy our.",
                    "label": 0
                },
                {
                    "sent": "Our knowledge base and Moreover, of course, we just don't have any model and we are not satisfy oball at all.",
                    "label": 0
                },
                {
                    "sent": "And this is one way to deal with this functionality Axiom and now.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Always saying OK, it's fine and we have this satisfaction.",
                    "label": 0
                },
                {
                    "sent": "This situation is OK.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Alright, so we have two semantics.",
                    "label": 0
                },
                {
                    "sent": "Either SQL or are semantics for bag interpretation.",
                    "label": 1
                },
                {
                    "sent": "And they pretty much the rest is as it was.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Default so.",
                    "label": 0
                },
                {
                    "sent": "Now we study this ontology language for satisfiability.",
                    "label": 0
                },
                {
                    "sent": "Apparently well, we have two semantics, 2 languages for satisfiability.",
                    "label": 0
                },
                {
                    "sent": "We have this first semantics, isql semantics or is.",
                    "label": 0
                },
                {
                    "sent": "Pretty much the same for satisfiability as the bad version of it, like Theorem 2.1.",
                    "label": 0
                },
                {
                    "sent": "Well, of course, proposition one is just the formula of the definitions, but for satisfiability of the second semantics, we have that.",
                    "label": 0
                },
                {
                    "sent": "Oh oh sorry, I said role for for the second semantics.",
                    "label": 0
                },
                {
                    "sent": "It's just the standard set semantics satisfiability, but for SQL semantics is different and we have that the complexity is slightly different because of these things.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, now.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "For query answering, well I do.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Have much time but come back semantics of query answering is pretty much as in SQL.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "For example.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This we have said.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And copies of the query.",
                    "label": 0
                },
                {
                    "sent": "So the answer is 7.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And we can.",
                    "label": 0
                },
                {
                    "sent": "Define certain answers in a kind of straightforward way.",
                    "label": 1
                },
                {
                    "sent": "The only important thing that we care about well, we have many models right and we want to say what is this certain answer for many models of a query.",
                    "label": 0
                },
                {
                    "sent": "And here our we commit to this kind of idea that the certain answer is the minimum over all possible models.",
                    "label": 1
                },
                {
                    "sent": "The minimum number of answers in all possible models.",
                    "label": 0
                },
                {
                    "sent": "And this is our semantics of query answering and then OK we have this.",
                    "label": 0
                },
                {
                    "sent": "Decision problem is.",
                    "label": 0
                },
                {
                    "sent": "The number of answers to this query is precise, is more than a specific number we ask about, so we need to turn it to decision problem.",
                    "label": 0
                },
                {
                    "sent": "And this is a natural way to do it and.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Well, we stopped to study it.",
                    "label": 0
                },
                {
                    "sent": "Unfortunately, we already know that.",
                    "label": 0
                },
                {
                    "sent": "We have bad complexity going pee hardness even for the case with our functionality axioms and this of course propagates for there.",
                    "label": 0
                },
                {
                    "sent": "Both of our semantics.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "But we also know that if we restrict our queries little bit and talk about.",
                    "label": 0
                },
                {
                    "sent": "Rooted queries and these are very mild restriction where we consider the case when we each connected component or well forget about connected components.",
                    "label": 1
                },
                {
                    "sent": "Just think that every query has an answer variable non Boolean.",
                    "label": 1
                },
                {
                    "sent": "Then we actually have this like good results like heritability, intractability of query answering.",
                    "label": 0
                },
                {
                    "sent": "Even OK, without functionality axioms, but also.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Or we can extend these.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Results 2 SQL semantics in a straightforward way.",
                    "label": 0
                },
                {
                    "sent": "We have writability and we have TCO.",
                    "label": 0
                },
                {
                    "sent": "Complexity for query answering, however for this.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And semantics, these results don't propagate that nicely because we can show that even for rooted queries for this restricted queries we have log space hardness in data complexity, and this implies that we don't have the right ability.",
                    "label": 0
                },
                {
                    "sent": "However, if we restrict our.",
                    "label": 0
                },
                {
                    "sent": "Functional like interaction or functionality axioms with.",
                    "label": 0
                },
                {
                    "sent": "But in the tee box, like globally, if we don't have any cycles from functional roles in the tee box then we can recover both irritability and good complexity of query answering.",
                    "label": 0
                },
                {
                    "sent": "Alright, so.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Let's sum up what we have.",
                    "label": 0
                },
                {
                    "sent": "We studied.",
                    "label": 0
                },
                {
                    "sent": "An extension of.",
                    "label": 0
                },
                {
                    "sent": "Query answering.",
                    "label": 0
                },
                {
                    "sent": "All were of ontologies with back semantics and particular intelligence with functional excellence.",
                    "label": 0
                },
                {
                    "sent": "This is motivated by aggregation.",
                    "label": 1
                },
                {
                    "sent": "Then we introduce two semantics for functional axioms.",
                    "label": 0
                },
                {
                    "sent": "SQL, NMR semantics.",
                    "label": 1
                },
                {
                    "sent": "Both of them have their own person quotes.",
                    "label": 1
                },
                {
                    "sent": "Overall, we know that query answering is hot, but if we impose some small restrictions then we become actually tractable and rewriteable.",
                    "label": 0
                },
                {
                    "sent": "For the future work, of course we want to consider more ontology languages such as Datalog, plus minus for example, or AL2RL.",
                    "label": 0
                },
                {
                    "sent": "Also, we want to know the same for other query languages, so not just conjunctive query over like our as our user queries, but also maybe Sparkle.",
                    "label": 0
                },
                {
                    "sent": "And of course we're interested in implementing these things and yeah, so to see how it works in real life.",
                    "label": 0
                },
                {
                    "sent": "OK, that's it.",
                    "label": 0
                },
                {
                    "sent": "Thank you.",
                    "label": 0
                },
                {
                    "sent": "Thank you for that, any questions?",
                    "label": 0
                },
                {
                    "sent": "So thank you for presentation.",
                    "label": 0
                },
                {
                    "sent": "Just a question can we can we compare embark cement?",
                    "label": 0
                },
                {
                    "sent": "It's with the standard semantics.",
                    "label": 0
                },
                {
                    "sent": "I mean that if we take ontology and we check it if it consistency.",
                    "label": 0
                },
                {
                    "sent": "Understand our schematics for example.",
                    "label": 0
                },
                {
                    "sent": "Easy consistent yeah.",
                    "label": 0
                },
                {
                    "sent": "OK so now we check the same mythology.",
                    "label": 0
                },
                {
                    "sent": "Under back Cementless, so it is is consistent on.",
                    "label": 0
                },
                {
                    "sent": "Yeah OK, sorry if I rushed through it because it was by I didn't want OK I wanted to focus on the setting rather than on the result.",
                    "label": 0
                },
                {
                    "sent": "So yes we can compare and this is reflected in say for satisfiability where it is.",
                    "label": 0
                },
                {
                    "sent": "Yes, of course, and actually this is the result.",
                    "label": 0
                },
                {
                    "sent": "So for one of our semantics.",
                    "label": 0
                },
                {
                    "sent": "For our semantics, satisfiability is the same as in the set semantics under set semantics.",
                    "label": 0
                },
                {
                    "sent": "So if we can satisfy under back semantics then we can satisfy in the set semantics and other way around for the other semantics.",
                    "label": 0
                },
                {
                    "sent": "For SQL semantics, just One Direction holds so satisfiability under.",
                    "label": 0
                },
                {
                    "sent": "SQL implies satisfiability on the back semantics.",
                    "label": 0
                },
                {
                    "sent": "Of course.",
                    "label": 0
                },
                {
                    "sent": "When I'm saying this, I talk about doubling like when I don't care about duplicates in my a box, right, so?",
                    "label": 0
                },
                {
                    "sent": "Sagun or not well.",
                    "label": 0
                },
                {
                    "sent": "OK, to compare them we need to match these things right?",
                    "label": 0
                },
                {
                    "sent": "Because if we have, we have multiplicities in the a box.",
                    "label": 0
                },
                {
                    "sent": "If we forget about multiplicities in the air box, then we can compare them and pretty much one of our semantics will be precisely the same in terms of satisfiability.",
                    "label": 0
                },
                {
                    "sent": "They are.",
                    "label": 0
                },
                {
                    "sent": "The semantics will be stronger.",
                    "label": 0
                },
                {
                    "sent": "Yes, you are right.",
                    "label": 0
                },
                {
                    "sent": "But for query answering, it becomes like much more difficult.",
                    "label": 0
                },
                {
                    "sent": "Because.",
                    "label": 0
                },
                {
                    "sent": "You can.",
                    "label": 0
                },
                {
                    "sent": "Set semantics, but then generate multiple issues because of the functionality.",
                    "label": 0
                },
                {
                    "sent": "Well, yeah, of course, if we start in the set semantics in the A box then.",
                    "label": 1
                },
                {
                    "sent": "In the data or in the a box, I don't think how can you.",
                    "label": 0
                },
                {
                    "sent": "How can you generate?",
                    "label": 0
                },
                {
                    "sent": "Yeah, you are right, it is possible, yes.",
                    "label": 0
                },
                {
                    "sent": "Multiplicity is yes.",
                    "label": 0
                },
                {
                    "sent": "But it doesn't affect the satisfiability.",
                    "label": 0
                },
                {
                    "sent": "It affects query answering and query rewriting.",
                    "label": 0
                }
            ]
        }
    }
}