{
    "id": "std7j7czxo3h4maz75lz3ycwndyjq76s",
    "title": "Handling Inconsistencies due to Class Disjointness in SPAR QL Updates",
    "info": {
        "author": [
            "Axel Polleres, Institute for Information Business, Vienna University of Economics and Business"
        ],
        "published": "July 28, 2016",
        "recorded": "June 2016",
        "category": [
            "Top->Computer Science->Big Data",
            "Top->Computer Science->Semantic Web"
        ]
    },
    "url": "http://videolectures.net/eswc2016_polleres_handling_inconsistencies/",
    "segmentation": [
        [
            "I think I want to present to you the."
        ],
        [
            "West of the hobbits.",
            "We also had a Hobbit session at the conference.",
            "The quest is to do something which is which was not done in the specs of W3C to basically find unified semantics for sparkle updates and sparkle entailment regimes.",
            "As you might know, their sparkle spec has these two parts in the now not so new anymore.",
            "New Sparkle 1.1 specification, which is where you have a language for data manipulation on sparkle updates to allow.",
            "Updates of RDF graphs and you have a language for defining answers of queries to sparkle queries under entailment regimes like RDF and OWL.",
            "So the question is how to bring those together?",
            "Because actually the spec is silent about the interaction of these two.",
            "Or the problem there is for instance what does it mean to update, insert, delete or whatever implicit triples?",
            "So if there's something is in implicit purpose, it means to delete it?",
            "Or what does it mean to insert something which is implicitly already there, etc.",
            "So in this particular paper we deal with also how to handle inconsistencies in such a case?",
            "To give you an example why we think this is important, I give you a web page."
        ],
        [
            "From Wikipedia, which is I mocked up the example of it, so I don't know whether the Library of Columbia of Columbia has of Columbia.",
            "Has the Lord of the Rings to rent.",
            "But anyway here, so we're looking for a library to rent this book, and we find on Wikipedia at this library, which is the National Library of Columbia that tell you later why I took this library and we have some facts in the BP."
        ],
        [
            "I extracted on this library, which is that this library has some Geo coordinates.",
            "It's a library, it's in Colombia and the Lord of the Rings can be rented.",
            "Their rights in this catalog.",
            "So if I want to pose this."
        ],
        [
            "Oracle query on this says we all know on DB pedia.",
            "You can do this.",
            "You can then ask for some L which is a library which has this book in its catalog.",
            "OK so and we have this protocol Sparkle protocol to reveal results in some arbitrary formats.",
            "And let's assume DB Pedia returns made these."
        ],
        [
            "Libraries, so these are not the libraries where the Lord of the Rings is available.",
            "I think it's the libraries in Columbia, but anyway, yeah, so now the problem that comes into place as we know what sparkle entailment regime solved."
        ],
        [
            "If I ask for libraries, then everything is fine, but if I ask for another concept, like for instance I come from schema or dark and I think this is the schema which everybody should use and I ask these two pedia.",
            "It might not answer or might not give the correct answers.",
            "Actually infected Pedia who tool because TV pedia knows the subclass of inference is that the library is a subclass of an organization and the library is a subclass of schema.org library.",
            "So if I ask for the schema.org libraries, I also get the answers."
        ],
        [
            "What basically entailment regimes solve in fact?"
        ],
        [
            "DB Pedia doesn't need that because DB pedia materializes these inferences.",
            "So you basically have that materialized in the store already.",
            "But I'll get to that also a bit later in more detail.",
            "So now the question.",
            "What we have is basically that the semantic web is or basically Peter is all about updates right so?"
        ],
        [
            "With the question is basically, I mean usually we have in Wikipedia this edit function and these facts can change.",
            "I could for instance insert that the National Library of Columbia is actually a place, not only a library because it has this year coordinates.",
            "Everything which has a Geo coordinate is a place actually.",
            "And I could maybe also say no.",
            "I wanted to be just a place, not an organization, so I could have a delete statement in Sparks update.",
            "In fact, Sparkle update has this kind of structure.",
            "You can do delete, insert where statements where you have a where clause, which determines some bindings.",
            "And based on these bindings you can delete certain facts and insert other facts based on the same bindings.",
            "So the reason why it was put in this way was basically to allow things to be changed based on the same state of the graph.",
            "Where you have the on the same state of the graph, you can evaluate these insert and delete statements.",
            "One of the of 1 after another.",
            "Now the tricky thing about this is what?",
            "How does this interact with entailment regimes?",
            "So what do these updates mean in RDF stores, for instance?"
        ],
        [
            "If I store if what this actually means is I would change places or organizations to places, right?",
            "So I don't have I.",
            "What do I do now with the fact that the National Library of Colombia is a library and not organized?",
            "So which is a subclass of an organization?",
            "So in this regard we have some previous work."
        ],
        [
            "So the pre story of the whole thing which we published in ISWC 2014 where we had some initial ideas on this.",
            "So we basically had some very simplifying assumptions there.",
            "We just wanted to deal with RDF's and we thought about what can we do with sparkle updates with our DFS mainly on a box reasoning and we also had some ideas there on T box reasoning, But let's stick with aprox reasoning for this talk and.",
            "Further on so."
        ],
        [
            "The initial assumptions we had in this in this paper, which we based on in this in the paper for the SWC, is basically we haven't materialized sore.",
            "So as I told you already this reflects some practical use case in deep data is like that, so you have all the implicit knowledge there in terms of a box reasoning, and we assume a very low expressivity, so we assume the very low expressivity ontology language RDF's domain range, subclass of property of.",
            "So what requirements did we put on the semantics?",
            "Was that if we have such a materialized store, we want the semantics to be materialization preserving so the next state of the update should again be materialized and it shouldn't leave traces.",
            "So what I mean by shouldn't leave traces.",
            "I'll explain you in a second.",
            "So basically OK.",
            "So together with this, what do we mean with shouldn't leave traces and preserve materialization?",
            "We have to find one particular semantics which we.",
            "Seemed the most intuitive.",
            "Unfortunately, no semantics we defined there was intuitive for all use cases, but this is the most intuitive we got it, which the idea is that you basically keep the materialized state by rewriting an update.",
            "So whenever you have such a delete, insert where updates.",
            "What you do is in the rewrite the insert statement to insert all the."
        ],
        [
            "Instantiation's of the pattern P which is this insert pattern plus all their effects.",
            "So you basically extend this pattern play also materializing the effects and for the delete clause you delete all the instantiation's plus all their causes which is.",
            "Nicely possible in RDF SBIC 'cause you can get basically all the courses without getting into ambiguities.",
            "Good, so this is kind of just the formalisation that the updated state of store would be exactly this rewriting, so which we cause P 'cause D&P if effects P?",
            "Even if you can't read it, it's basically just restates what you see there on the slide, so it's better shown by an example I guess."
        ],
        [
            "So here we have these updates which you've seen before.",
            "We want to change the organizations to places whenever there is a Ciolek sortie along.",
            "Property present and So what this would do.",
            "It would rewrite the update to basically also delete that X is a library and then basically insert also that accesses schema place based on the ontology.",
            "We have to hear that place is a subclass of Schema Org place in libraries in subclass of libraryschema.org library.",
            "OK so we have this updated states.",
            "So we remove these two statements and add these other two statements.",
            "And for many or most use cases, we found these false.",
            "Basically the most reasonable semantics to do OK Now let's revisit these assumptions we had."
        ],
        [
            "So we assume the materialized storm I said already.",
            "This fits nicely with the TV pedia use case, where all ebox inferences are materialized or most of them.",
            "Basically, I think not all of their the ones which refer to outside ontologies, but basically the links to outside ontologies and all inferences within the DB Pedia ontology are materialized.",
            "We have originally assumed the very low expressivity Ontology language RDF's, but this does not quite fit to DB pedia.",
            "In fact, DB Pedia uses all of the green stuff RDF's plus essentially uses 2 or features only.",
            "In essence of our which is inverse, often disjoint with.",
            "So how this inverse off nicely fits with what we have.",
            "We just have to do the rule at the rule to reverse basically triples.",
            "But what do we do with inconsistencies?",
            "So this adds another requirement to the semantics for updates, which is basically that if we assume a consistent materialized store, we want the update semantics also to preserve consistency.",
            "Just as a remark, and this is getting back to why I showed you this example of the National Library of Columbia.",
            "Is that unfair?"
        ],
        [
            "Trinity, actually there are inconsistencies in DB pedia.",
            "Yeah, so if you look at this Library of Columbia you find that the Library of Colombia is actually indeed given this effect in DB Pedia, an organization and the place and organizations and places are disjoint.",
            "So in fact from DB pedia under entailment regimes you can infer everything.",
            "But we don't.",
            "We have a more paraconsistent view of the world and we basically.",
            "Don't do this.",
            "Usually when query answering now the question is.",
            "How do you spell Kurt?",
            "And our assumption is that this is probably occur due to uncautious updates respectively.",
            "The real reason might be also the flexibility you have in the DB pedia mapping language or in this mapping which Maps from the infoboxes to DB pedia as RDF.",
            "OK, so now the question is how do we deal with inconsistencies in updates?",
            "And there are.",
            "Basically we make a distinction between 2 forms of inconsistencies when we have a sparkle update, we distinguish between intrinsic inconsistencies within updates which are basically inconsistencies which are only affect the new knowledge.",
            "So basically, if you have an insert which basically an insert only without referring to the previous state, which basically creates an inconsistency in itself.",
            "Versus"
        ],
        [
            "Inconsistencies with respect to the old state of the Sparkle database of the Sparkle Triple Store, so we have their different solution strategies.",
            "One we called brave semantics one causes and one is somewhere in between.",
            "We didn't find a better name, so we called it faint hearted semantics.",
            "So let's have a look at these inconsistencies, different types of inconsistencies.",
            "First, because the first one is more or less a prerequisite for solving the overall problem.",
            "So these intrinsic inconsistencies we solve with what we call a safe rewriting, and for illustrating this, let's get back to an example again."
        ],
        [
            "We have here the this ontology which we've seen before already.",
            "We have a place which is disjoint with an organization and then we have a base near property which has domain organization and range place.",
            "So you already figure it if we basically have the same variable binding on both as a subject or predicate of this base near we run into a problem because then we would create an inconsistency and if we look at an update.",
            "Very simple one, which is also kind of motivated by the use case we had before where."
        ],
        [
            "Basically insert this based near property for everything where we have a located in property.",
            "Then we actually might run into this problem, particularly when we look into this example here.",
            "Not taking into account that the National Library of Colombia is already inconsistent, let's assume this is not there in DB pedia.",
            "But we still have these two effects that the National Library of Colombia is located in Bogota and focus the Bogota is located in Columbia so more or less if you have different bindings of these located in close you would more or less create overtime both subject and object position of the base here and you would get an inconsistency by the inference that it's both a place in an organization.",
            "So how can we fix this?"
        ],
        [
            "We can fix this by what we call a safe rewriting of the where clause and the trick of this safe rewriting is basically to remove from the where clause bindings.",
            "That would create this bogus bogus inconsistencies in the insert clause, so it requires essentially some form of unification.",
            "But what you would get is this.",
            "Here you would get basically a where clause where you look at it in the subject possession for why you have no other dangling located in predicate, and the same for the object position position that you have no other tangling located in.",
            "Property matching there and this basically would avoid that any bindings would be propagated that that basically together would cause an inconsistency in the new knowledge, but this is all independent of the old knowledge.",
            "So, but this is more or less a preprocessing step.",
            "OK, So what we do is basically we have a copy here of the where clause where the variables are renamed, the ones which basically don't refer to the original 1.",
            "So we need some variable renaming there.",
            "Now let's have another look on this because this is quite peculiar.",
            "Why we use minus here?",
            "So for the sparkle fence they know that there is two ways to express negation minus and not exists.",
            "And you might ask yourself, why don't we do this with filter not exists so."
        ],
        [
            "Here is another example which has kind of a arbitrarily edit delete clause, so we have here a union in the body and the Union and the.",
            "So these bodies 2 union branches have independent variables from another and from one we don't want to do, and in certain from the other one we want to do delete.",
            "So if we now would do the same trick.",
            "So these disjoint sets of variables here, if you now would do the same trick we did before with not exists with the filter.",
            "So with two filter not exists for these two possible other bindings.",
            "The problem is that these would always whenever there is a binding for the where clause, they would be satisfied and they would remove everything.",
            "Yeah, the semantics of minus is actually different because it only removes bindings from the from the prior pattern, so that's why that's why the simple renaming of the whole where clause is not possible with filter not exists, whereas it works with minus."
        ],
        [
            "Yeah, OK, so this is actually fine.",
            "But if you have these two minus clauses for this one, so this is more or less the same, but we had before with two minus clauses.",
            "So if you were looking for a use case for minus versions not exist here you got it OK, good.",
            "So then OK some.",
            "Some details on that, but I told you this already, so minus we removes only the variable bindings from a set of variable bindings where is not exists.",
            "Basically compositional independent of the prior part of the first operand of the minus.",
            "OK, so this is how we deal with this safe rewriting, so this solves the first problem.",
            "Inconsistencies in the new knowledge?",
            "Then how do we deal with inconsistencies in the?"
        ],
        [
            "So.",
            "Of the old knowledge versus the new knowledge.",
            "Basically here we have three solutions strategies.",
            "One is the brave semantics, one is the core semantics, one is the faint hearted semantics and I just want to briefly give you the ideas of this.",
            "So this is brave, cautious and faintheart.",
            "It's OK."
        ],
        [
            "Does the brave semantics too.",
            "So when the idea of the brave semantics is that basically whenever there is a conflict between the new and the old fact, then we prefer the new ones.",
            "So this is actually something which was done in a box.",
            "Updates for description logics already in this paper by Calvinism, who so Diego also called this paper with us.",
            "And the this is 1 approach to deal with this.",
            "The other approaches cautious basically what we do is.",
            "Whenever we find a conflict, we stop, so we don't do an update then.",
            "So we only want to allow variable bindings where there is no clash.",
            "And this faint hearted semantics is somehow in between.",
            "So we actually have some we more or less don't throw away the whole update but only a part of it."
        ],
        [
            "OK, So what do we do for the brave semantics for these brave semantics we have as a pre processing we have the safe rewriting.",
            "So this is our basis.",
            "Then"
        ],
        [
            "Well, then it's actually quite simple.",
            "So what we do is we do well.",
            "Not so simple.",
            "It gets a bit longer, but what we do is we do exactly this so we we add the extension of all the effects that the green stuff you see there for the insert clause and then actually be added delete clause which deletes all the conflicting knowledge with the with the.",
            "With the insert clause for some of these deletions of the conflict in knowledge, we have to add some additional bindings which we do with this which we catch with these optional clauses in the where clause, which we had OK, so that is the brave semantics.",
            "So the potential clashes are basically handled by these optional.",
            "If I delete clause which needs these optional bindings for the extra variables.",
            "The cost is semantics as we define it in the paper.",
            "Just more less asked is there any conflicts and if there is a conflict then you just do the brave semantics.",
            "So if there is no conflict there, so this is there any conflict we can just write as an ASK query?"
        ],
        [
            "And this task query looks like.",
            "This so basically we just ask for the where clause whether it would cause some conflict.",
            "So basically if there are any bindings which would eventually create the conflicts.",
            "So if there was an X which was a place or Y which was an organization which both would create a conflict.",
            "So, so this is very simple, particularly because we assume that we have a materialized or otherwise.",
            "We would need to do some rewriting here, but we don't need to rewrite the where clause or extended because we have that already given OK in a materialized.",
            "So so one thing we haven't caught there yet is basically which we see if we have to delete insert clause.",
            "If you have a delete insert clause, we might have the case that actually some of the clashes which are produced might be captured already by a delete clause.",
            "For instance, if I say that I remove the X is a place in this case here, then I don't need to check the X close, so I can basically remove this first part branch of the Union.",
            "The last, so this is basically the prerequisite and then we just combine it with the brave semantics.",
            "So we just do this only if there are no such clashes finally.",
            "OK, so yeah, so this is just like explaining what I said now so this is handled by the delete clause already displaced, so we remove it from the Union.",
            "Finally, the faint hearted semantics.",
            "So the idea there."
        ],
        [
            "Is basically that we do insert only with non clashing variable bindings and this we could do with another minus clause.",
            "Also DB two more or less.",
            "It's very similar to the to the Braves to the course semantics, but we pack this ask part in the minus there.",
            "So we basically just want to leave those out where a clash would be produced.",
            "Now if we look at that actually there is one problem here it might be.",
            "Two, it might still be too cautious.",
            "Yeah, we could even be a bit more brave cause the clashes could come."
        ],
        [
            "I'm from different, so let me see."
        ],
        [
            "The clashes could come from different bindings of the where clause and you see it with this instance here, so we assume that you have this atomic updates, right?",
            "So for each variable binding of the wear clothes, either both are delete, both delete and insert are done, or none of them so.",
            "But what we could have is that the clash could arise from the old states with just look at at the insert clause from a binding my one.",
            "But then from another.",
            "Finding by two there might be actually, so this set might be removed that clears the clash and these are two two different bindings.",
            "So what can we do about this?",
            "We actually, I don't.",
            "Can't explain it now because I'm also running out of time in detail, but in principle what we do is so we have to take care of these different bindings which which could produce this clash and the idea of what we do there is that we.",
            "That we give up on atomicity of these delete and insert clauses and separate them.",
            "So we rename variables and have this kind of union queries with separate separated variable names.",
            "As I said, I don't have time to go into the details, but you find more in the paper so."
        ],
        [
            "If you want to put all the pieces together, what you find in the paper is the general rewriting algorithms for these three semantics I presented to you for the brave courses and fainthearted update semantics for handling inconsistencies with this slightly extended RDF's language.",
            "Which disjointness we have some experiments and also a prototype for Lube, and it's not very peak.",
            "It's not very scalable yet, so optimizations for these are definitely on our agenda, but you have a prototype which does this rewritings.",
            "Which is available at this UI down there and we're happy for feedback to play around with."
        ],
        [
            "Just to conclude what I presented to you there is I want to go a bit further on that motivation with DB pedia.",
            "So we don't only want this one ring to have this unified semantics, but actually we're searching for the Holy Grail and the Holy Grail in this area of updates and entailments would be updates in ontology based data access in ontology based data access.",
            "You want not only have an ontology, you want to update, but you also have a database behind and mappings from this database.",
            "So this use case is quite nicely reflected in DB pedia itself because the DB pedia data is created by mappings which can be expressed as nested TTS actually.",
            "So tuple generating dependencies and we have some initial work of where we defined an update semantics for OBD a based on these T pedia semantics where which will be a sneak preview next week if anybody is in Panama by chance there is the Aperta Mendelssohn database.",
            "Foundations Workshop, which is where we will present this work as a short paper.",
            "And that concludes my talk, thanks.",
            "I'm more or less in time through."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I think I want to present to you the.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "West of the hobbits.",
                    "label": 0
                },
                {
                    "sent": "We also had a Hobbit session at the conference.",
                    "label": 0
                },
                {
                    "sent": "The quest is to do something which is which was not done in the specs of W3C to basically find unified semantics for sparkle updates and sparkle entailment regimes.",
                    "label": 0
                },
                {
                    "sent": "As you might know, their sparkle spec has these two parts in the now not so new anymore.",
                    "label": 0
                },
                {
                    "sent": "New Sparkle 1.1 specification, which is where you have a language for data manipulation on sparkle updates to allow.",
                    "label": 0
                },
                {
                    "sent": "Updates of RDF graphs and you have a language for defining answers of queries to sparkle queries under entailment regimes like RDF and OWL.",
                    "label": 0
                },
                {
                    "sent": "So the question is how to bring those together?",
                    "label": 0
                },
                {
                    "sent": "Because actually the spec is silent about the interaction of these two.",
                    "label": 1
                },
                {
                    "sent": "Or the problem there is for instance what does it mean to update, insert, delete or whatever implicit triples?",
                    "label": 1
                },
                {
                    "sent": "So if there's something is in implicit purpose, it means to delete it?",
                    "label": 0
                },
                {
                    "sent": "Or what does it mean to insert something which is implicitly already there, etc.",
                    "label": 1
                },
                {
                    "sent": "So in this particular paper we deal with also how to handle inconsistencies in such a case?",
                    "label": 0
                },
                {
                    "sent": "To give you an example why we think this is important, I give you a web page.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "From Wikipedia, which is I mocked up the example of it, so I don't know whether the Library of Columbia of Columbia has of Columbia.",
                    "label": 0
                },
                {
                    "sent": "Has the Lord of the Rings to rent.",
                    "label": 1
                },
                {
                    "sent": "But anyway here, so we're looking for a library to rent this book, and we find on Wikipedia at this library, which is the National Library of Columbia that tell you later why I took this library and we have some facts in the BP.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "I extracted on this library, which is that this library has some Geo coordinates.",
                    "label": 0
                },
                {
                    "sent": "It's a library, it's in Colombia and the Lord of the Rings can be rented.",
                    "label": 1
                },
                {
                    "sent": "Their rights in this catalog.",
                    "label": 0
                },
                {
                    "sent": "So if I want to pose this.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Oracle query on this says we all know on DB pedia.",
                    "label": 0
                },
                {
                    "sent": "You can do this.",
                    "label": 0
                },
                {
                    "sent": "You can then ask for some L which is a library which has this book in its catalog.",
                    "label": 0
                },
                {
                    "sent": "OK so and we have this protocol Sparkle protocol to reveal results in some arbitrary formats.",
                    "label": 0
                },
                {
                    "sent": "And let's assume DB Pedia returns made these.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Libraries, so these are not the libraries where the Lord of the Rings is available.",
                    "label": 0
                },
                {
                    "sent": "I think it's the libraries in Columbia, but anyway, yeah, so now the problem that comes into place as we know what sparkle entailment regime solved.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "If I ask for libraries, then everything is fine, but if I ask for another concept, like for instance I come from schema or dark and I think this is the schema which everybody should use and I ask these two pedia.",
                    "label": 0
                },
                {
                    "sent": "It might not answer or might not give the correct answers.",
                    "label": 0
                },
                {
                    "sent": "Actually infected Pedia who tool because TV pedia knows the subclass of inference is that the library is a subclass of an organization and the library is a subclass of schema.org library.",
                    "label": 0
                },
                {
                    "sent": "So if I ask for the schema.org libraries, I also get the answers.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "What basically entailment regimes solve in fact?",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "DB Pedia doesn't need that because DB pedia materializes these inferences.",
                    "label": 0
                },
                {
                    "sent": "So you basically have that materialized in the store already.",
                    "label": 0
                },
                {
                    "sent": "But I'll get to that also a bit later in more detail.",
                    "label": 0
                },
                {
                    "sent": "So now the question.",
                    "label": 0
                },
                {
                    "sent": "What we have is basically that the semantic web is or basically Peter is all about updates right so?",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "With the question is basically, I mean usually we have in Wikipedia this edit function and these facts can change.",
                    "label": 0
                },
                {
                    "sent": "I could for instance insert that the National Library of Columbia is actually a place, not only a library because it has this year coordinates.",
                    "label": 0
                },
                {
                    "sent": "Everything which has a Geo coordinate is a place actually.",
                    "label": 1
                },
                {
                    "sent": "And I could maybe also say no.",
                    "label": 0
                },
                {
                    "sent": "I wanted to be just a place, not an organization, so I could have a delete statement in Sparks update.",
                    "label": 0
                },
                {
                    "sent": "In fact, Sparkle update has this kind of structure.",
                    "label": 0
                },
                {
                    "sent": "You can do delete, insert where statements where you have a where clause, which determines some bindings.",
                    "label": 0
                },
                {
                    "sent": "And based on these bindings you can delete certain facts and insert other facts based on the same bindings.",
                    "label": 0
                },
                {
                    "sent": "So the reason why it was put in this way was basically to allow things to be changed based on the same state of the graph.",
                    "label": 0
                },
                {
                    "sent": "Where you have the on the same state of the graph, you can evaluate these insert and delete statements.",
                    "label": 0
                },
                {
                    "sent": "One of the of 1 after another.",
                    "label": 0
                },
                {
                    "sent": "Now the tricky thing about this is what?",
                    "label": 0
                },
                {
                    "sent": "How does this interact with entailment regimes?",
                    "label": 0
                },
                {
                    "sent": "So what do these updates mean in RDF stores, for instance?",
                    "label": 1
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "If I store if what this actually means is I would change places or organizations to places, right?",
                    "label": 0
                },
                {
                    "sent": "So I don't have I.",
                    "label": 0
                },
                {
                    "sent": "What do I do now with the fact that the National Library of Colombia is a library and not organized?",
                    "label": 0
                },
                {
                    "sent": "So which is a subclass of an organization?",
                    "label": 0
                },
                {
                    "sent": "So in this regard we have some previous work.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So the pre story of the whole thing which we published in ISWC 2014 where we had some initial ideas on this.",
                    "label": 0
                },
                {
                    "sent": "So we basically had some very simplifying assumptions there.",
                    "label": 0
                },
                {
                    "sent": "We just wanted to deal with RDF's and we thought about what can we do with sparkle updates with our DFS mainly on a box reasoning and we also had some ideas there on T box reasoning, But let's stick with aprox reasoning for this talk and.",
                    "label": 0
                },
                {
                    "sent": "Further on so.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "The initial assumptions we had in this in this paper, which we based on in this in the paper for the SWC, is basically we haven't materialized sore.",
                    "label": 0
                },
                {
                    "sent": "So as I told you already this reflects some practical use case in deep data is like that, so you have all the implicit knowledge there in terms of a box reasoning, and we assume a very low expressivity, so we assume the very low expressivity ontology language RDF's domain range, subclass of property of.",
                    "label": 1
                },
                {
                    "sent": "So what requirements did we put on the semantics?",
                    "label": 0
                },
                {
                    "sent": "Was that if we have such a materialized store, we want the semantics to be materialization preserving so the next state of the update should again be materialized and it shouldn't leave traces.",
                    "label": 0
                },
                {
                    "sent": "So what I mean by shouldn't leave traces.",
                    "label": 0
                },
                {
                    "sent": "I'll explain you in a second.",
                    "label": 0
                },
                {
                    "sent": "So basically OK.",
                    "label": 0
                },
                {
                    "sent": "So together with this, what do we mean with shouldn't leave traces and preserve materialization?",
                    "label": 0
                },
                {
                    "sent": "We have to find one particular semantics which we.",
                    "label": 0
                },
                {
                    "sent": "Seemed the most intuitive.",
                    "label": 0
                },
                {
                    "sent": "Unfortunately, no semantics we defined there was intuitive for all use cases, but this is the most intuitive we got it, which the idea is that you basically keep the materialized state by rewriting an update.",
                    "label": 0
                },
                {
                    "sent": "So whenever you have such a delete, insert where updates.",
                    "label": 0
                },
                {
                    "sent": "What you do is in the rewrite the insert statement to insert all the.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Instantiation's of the pattern P which is this insert pattern plus all their effects.",
                    "label": 1
                },
                {
                    "sent": "So you basically extend this pattern play also materializing the effects and for the delete clause you delete all the instantiation's plus all their causes which is.",
                    "label": 0
                },
                {
                    "sent": "Nicely possible in RDF SBIC 'cause you can get basically all the courses without getting into ambiguities.",
                    "label": 0
                },
                {
                    "sent": "Good, so this is kind of just the formalisation that the updated state of store would be exactly this rewriting, so which we cause P 'cause D&P if effects P?",
                    "label": 0
                },
                {
                    "sent": "Even if you can't read it, it's basically just restates what you see there on the slide, so it's better shown by an example I guess.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So here we have these updates which you've seen before.",
                    "label": 0
                },
                {
                    "sent": "We want to change the organizations to places whenever there is a Ciolek sortie along.",
                    "label": 0
                },
                {
                    "sent": "Property present and So what this would do.",
                    "label": 0
                },
                {
                    "sent": "It would rewrite the update to basically also delete that X is a library and then basically insert also that accesses schema place based on the ontology.",
                    "label": 1
                },
                {
                    "sent": "We have to hear that place is a subclass of Schema Org place in libraries in subclass of libraryschema.org library.",
                    "label": 0
                },
                {
                    "sent": "OK so we have this updated states.",
                    "label": 0
                },
                {
                    "sent": "So we remove these two statements and add these other two statements.",
                    "label": 0
                },
                {
                    "sent": "And for many or most use cases, we found these false.",
                    "label": 1
                },
                {
                    "sent": "Basically the most reasonable semantics to do OK Now let's revisit these assumptions we had.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So we assume the materialized storm I said already.",
                    "label": 0
                },
                {
                    "sent": "This fits nicely with the TV pedia use case, where all ebox inferences are materialized or most of them.",
                    "label": 0
                },
                {
                    "sent": "Basically, I think not all of their the ones which refer to outside ontologies, but basically the links to outside ontologies and all inferences within the DB Pedia ontology are materialized.",
                    "label": 0
                },
                {
                    "sent": "We have originally assumed the very low expressivity Ontology language RDF's, but this does not quite fit to DB pedia.",
                    "label": 1
                },
                {
                    "sent": "In fact, DB Pedia uses all of the green stuff RDF's plus essentially uses 2 or features only.",
                    "label": 0
                },
                {
                    "sent": "In essence of our which is inverse, often disjoint with.",
                    "label": 0
                },
                {
                    "sent": "So how this inverse off nicely fits with what we have.",
                    "label": 0
                },
                {
                    "sent": "We just have to do the rule at the rule to reverse basically triples.",
                    "label": 0
                },
                {
                    "sent": "But what do we do with inconsistencies?",
                    "label": 0
                },
                {
                    "sent": "So this adds another requirement to the semantics for updates, which is basically that if we assume a consistent materialized store, we want the update semantics also to preserve consistency.",
                    "label": 0
                },
                {
                    "sent": "Just as a remark, and this is getting back to why I showed you this example of the National Library of Columbia.",
                    "label": 0
                },
                {
                    "sent": "Is that unfair?",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Trinity, actually there are inconsistencies in DB pedia.",
                    "label": 1
                },
                {
                    "sent": "Yeah, so if you look at this Library of Columbia you find that the Library of Colombia is actually indeed given this effect in DB Pedia, an organization and the place and organizations and places are disjoint.",
                    "label": 0
                },
                {
                    "sent": "So in fact from DB pedia under entailment regimes you can infer everything.",
                    "label": 0
                },
                {
                    "sent": "But we don't.",
                    "label": 0
                },
                {
                    "sent": "We have a more paraconsistent view of the world and we basically.",
                    "label": 0
                },
                {
                    "sent": "Don't do this.",
                    "label": 0
                },
                {
                    "sent": "Usually when query answering now the question is.",
                    "label": 0
                },
                {
                    "sent": "How do you spell Kurt?",
                    "label": 1
                },
                {
                    "sent": "And our assumption is that this is probably occur due to uncautious updates respectively.",
                    "label": 0
                },
                {
                    "sent": "The real reason might be also the flexibility you have in the DB pedia mapping language or in this mapping which Maps from the infoboxes to DB pedia as RDF.",
                    "label": 0
                },
                {
                    "sent": "OK, so now the question is how do we deal with inconsistencies in updates?",
                    "label": 0
                },
                {
                    "sent": "And there are.",
                    "label": 0
                },
                {
                    "sent": "Basically we make a distinction between 2 forms of inconsistencies when we have a sparkle update, we distinguish between intrinsic inconsistencies within updates which are basically inconsistencies which are only affect the new knowledge.",
                    "label": 0
                },
                {
                    "sent": "So basically, if you have an insert which basically an insert only without referring to the previous state, which basically creates an inconsistency in itself.",
                    "label": 0
                },
                {
                    "sent": "Versus",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Inconsistencies with respect to the old state of the Sparkle database of the Sparkle Triple Store, so we have their different solution strategies.",
                    "label": 1
                },
                {
                    "sent": "One we called brave semantics one causes and one is somewhere in between.",
                    "label": 1
                },
                {
                    "sent": "We didn't find a better name, so we called it faint hearted semantics.",
                    "label": 0
                },
                {
                    "sent": "So let's have a look at these inconsistencies, different types of inconsistencies.",
                    "label": 1
                },
                {
                    "sent": "First, because the first one is more or less a prerequisite for solving the overall problem.",
                    "label": 0
                },
                {
                    "sent": "So these intrinsic inconsistencies we solve with what we call a safe rewriting, and for illustrating this, let's get back to an example again.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We have here the this ontology which we've seen before already.",
                    "label": 0
                },
                {
                    "sent": "We have a place which is disjoint with an organization and then we have a base near property which has domain organization and range place.",
                    "label": 0
                },
                {
                    "sent": "So you already figure it if we basically have the same variable binding on both as a subject or predicate of this base near we run into a problem because then we would create an inconsistency and if we look at an update.",
                    "label": 0
                },
                {
                    "sent": "Very simple one, which is also kind of motivated by the use case we had before where.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Basically insert this based near property for everything where we have a located in property.",
                    "label": 0
                },
                {
                    "sent": "Then we actually might run into this problem, particularly when we look into this example here.",
                    "label": 0
                },
                {
                    "sent": "Not taking into account that the National Library of Colombia is already inconsistent, let's assume this is not there in DB pedia.",
                    "label": 0
                },
                {
                    "sent": "But we still have these two effects that the National Library of Colombia is located in Bogota and focus the Bogota is located in Columbia so more or less if you have different bindings of these located in close you would more or less create overtime both subject and object position of the base here and you would get an inconsistency by the inference that it's both a place in an organization.",
                    "label": 0
                },
                {
                    "sent": "So how can we fix this?",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We can fix this by what we call a safe rewriting of the where clause and the trick of this safe rewriting is basically to remove from the where clause bindings.",
                    "label": 1
                },
                {
                    "sent": "That would create this bogus bogus inconsistencies in the insert clause, so it requires essentially some form of unification.",
                    "label": 0
                },
                {
                    "sent": "But what you would get is this.",
                    "label": 0
                },
                {
                    "sent": "Here you would get basically a where clause where you look at it in the subject possession for why you have no other dangling located in predicate, and the same for the object position position that you have no other tangling located in.",
                    "label": 0
                },
                {
                    "sent": "Property matching there and this basically would avoid that any bindings would be propagated that that basically together would cause an inconsistency in the new knowledge, but this is all independent of the old knowledge.",
                    "label": 0
                },
                {
                    "sent": "So, but this is more or less a preprocessing step.",
                    "label": 0
                },
                {
                    "sent": "OK, So what we do is basically we have a copy here of the where clause where the variables are renamed, the ones which basically don't refer to the original 1.",
                    "label": 0
                },
                {
                    "sent": "So we need some variable renaming there.",
                    "label": 0
                },
                {
                    "sent": "Now let's have another look on this because this is quite peculiar.",
                    "label": 0
                },
                {
                    "sent": "Why we use minus here?",
                    "label": 0
                },
                {
                    "sent": "So for the sparkle fence they know that there is two ways to express negation minus and not exists.",
                    "label": 0
                },
                {
                    "sent": "And you might ask yourself, why don't we do this with filter not exists so.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Here is another example which has kind of a arbitrarily edit delete clause, so we have here a union in the body and the Union and the.",
                    "label": 0
                },
                {
                    "sent": "So these bodies 2 union branches have independent variables from another and from one we don't want to do, and in certain from the other one we want to do delete.",
                    "label": 0
                },
                {
                    "sent": "So if we now would do the same trick.",
                    "label": 0
                },
                {
                    "sent": "So these disjoint sets of variables here, if you now would do the same trick we did before with not exists with the filter.",
                    "label": 1
                },
                {
                    "sent": "So with two filter not exists for these two possible other bindings.",
                    "label": 0
                },
                {
                    "sent": "The problem is that these would always whenever there is a binding for the where clause, they would be satisfied and they would remove everything.",
                    "label": 0
                },
                {
                    "sent": "Yeah, the semantics of minus is actually different because it only removes bindings from the from the prior pattern, so that's why that's why the simple renaming of the whole where clause is not possible with filter not exists, whereas it works with minus.",
                    "label": 1
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Yeah, OK, so this is actually fine.",
                    "label": 0
                },
                {
                    "sent": "But if you have these two minus clauses for this one, so this is more or less the same, but we had before with two minus clauses.",
                    "label": 0
                },
                {
                    "sent": "So if you were looking for a use case for minus versions not exist here you got it OK, good.",
                    "label": 0
                },
                {
                    "sent": "So then OK some.",
                    "label": 0
                },
                {
                    "sent": "Some details on that, but I told you this already, so minus we removes only the variable bindings from a set of variable bindings where is not exists.",
                    "label": 1
                },
                {
                    "sent": "Basically compositional independent of the prior part of the first operand of the minus.",
                    "label": 1
                },
                {
                    "sent": "OK, so this is how we deal with this safe rewriting, so this solves the first problem.",
                    "label": 0
                },
                {
                    "sent": "Inconsistencies in the new knowledge?",
                    "label": 0
                },
                {
                    "sent": "Then how do we deal with inconsistencies in the?",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "Of the old knowledge versus the new knowledge.",
                    "label": 1
                },
                {
                    "sent": "Basically here we have three solutions strategies.",
                    "label": 0
                },
                {
                    "sent": "One is the brave semantics, one is the core semantics, one is the faint hearted semantics and I just want to briefly give you the ideas of this.",
                    "label": 0
                },
                {
                    "sent": "So this is brave, cautious and faintheart.",
                    "label": 1
                },
                {
                    "sent": "It's OK.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Does the brave semantics too.",
                    "label": 0
                },
                {
                    "sent": "So when the idea of the brave semantics is that basically whenever there is a conflict between the new and the old fact, then we prefer the new ones.",
                    "label": 0
                },
                {
                    "sent": "So this is actually something which was done in a box.",
                    "label": 0
                },
                {
                    "sent": "Updates for description logics already in this paper by Calvinism, who so Diego also called this paper with us.",
                    "label": 0
                },
                {
                    "sent": "And the this is 1 approach to deal with this.",
                    "label": 1
                },
                {
                    "sent": "The other approaches cautious basically what we do is.",
                    "label": 0
                },
                {
                    "sent": "Whenever we find a conflict, we stop, so we don't do an update then.",
                    "label": 0
                },
                {
                    "sent": "So we only want to allow variable bindings where there is no clash.",
                    "label": 1
                },
                {
                    "sent": "And this faint hearted semantics is somehow in between.",
                    "label": 0
                },
                {
                    "sent": "So we actually have some we more or less don't throw away the whole update but only a part of it.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, So what do we do for the brave semantics for these brave semantics we have as a pre processing we have the safe rewriting.",
                    "label": 0
                },
                {
                    "sent": "So this is our basis.",
                    "label": 0
                },
                {
                    "sent": "Then",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Well, then it's actually quite simple.",
                    "label": 0
                },
                {
                    "sent": "So what we do is we do well.",
                    "label": 0
                },
                {
                    "sent": "Not so simple.",
                    "label": 0
                },
                {
                    "sent": "It gets a bit longer, but what we do is we do exactly this so we we add the extension of all the effects that the green stuff you see there for the insert clause and then actually be added delete clause which deletes all the conflicting knowledge with the with the.",
                    "label": 0
                },
                {
                    "sent": "With the insert clause for some of these deletions of the conflict in knowledge, we have to add some additional bindings which we do with this which we catch with these optional clauses in the where clause, which we had OK, so that is the brave semantics.",
                    "label": 0
                },
                {
                    "sent": "So the potential clashes are basically handled by these optional.",
                    "label": 0
                },
                {
                    "sent": "If I delete clause which needs these optional bindings for the extra variables.",
                    "label": 0
                },
                {
                    "sent": "The cost is semantics as we define it in the paper.",
                    "label": 0
                },
                {
                    "sent": "Just more less asked is there any conflicts and if there is a conflict then you just do the brave semantics.",
                    "label": 0
                },
                {
                    "sent": "So if there is no conflict there, so this is there any conflict we can just write as an ASK query?",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And this task query looks like.",
                    "label": 0
                },
                {
                    "sent": "This so basically we just ask for the where clause whether it would cause some conflict.",
                    "label": 0
                },
                {
                    "sent": "So basically if there are any bindings which would eventually create the conflicts.",
                    "label": 0
                },
                {
                    "sent": "So if there was an X which was a place or Y which was an organization which both would create a conflict.",
                    "label": 0
                },
                {
                    "sent": "So, so this is very simple, particularly because we assume that we have a materialized or otherwise.",
                    "label": 0
                },
                {
                    "sent": "We would need to do some rewriting here, but we don't need to rewrite the where clause or extended because we have that already given OK in a materialized.",
                    "label": 0
                },
                {
                    "sent": "So so one thing we haven't caught there yet is basically which we see if we have to delete insert clause.",
                    "label": 0
                },
                {
                    "sent": "If you have a delete insert clause, we might have the case that actually some of the clashes which are produced might be captured already by a delete clause.",
                    "label": 0
                },
                {
                    "sent": "For instance, if I say that I remove the X is a place in this case here, then I don't need to check the X close, so I can basically remove this first part branch of the Union.",
                    "label": 0
                },
                {
                    "sent": "The last, so this is basically the prerequisite and then we just combine it with the brave semantics.",
                    "label": 0
                },
                {
                    "sent": "So we just do this only if there are no such clashes finally.",
                    "label": 0
                },
                {
                    "sent": "OK, so yeah, so this is just like explaining what I said now so this is handled by the delete clause already displaced, so we remove it from the Union.",
                    "label": 0
                },
                {
                    "sent": "Finally, the faint hearted semantics.",
                    "label": 0
                },
                {
                    "sent": "So the idea there.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Is basically that we do insert only with non clashing variable bindings and this we could do with another minus clause.",
                    "label": 0
                },
                {
                    "sent": "Also DB two more or less.",
                    "label": 0
                },
                {
                    "sent": "It's very similar to the to the Braves to the course semantics, but we pack this ask part in the minus there.",
                    "label": 0
                },
                {
                    "sent": "So we basically just want to leave those out where a clash would be produced.",
                    "label": 0
                },
                {
                    "sent": "Now if we look at that actually there is one problem here it might be.",
                    "label": 0
                },
                {
                    "sent": "Two, it might still be too cautious.",
                    "label": 0
                },
                {
                    "sent": "Yeah, we could even be a bit more brave cause the clashes could come.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I'm from different, so let me see.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "The clashes could come from different bindings of the where clause and you see it with this instance here, so we assume that you have this atomic updates, right?",
                    "label": 1
                },
                {
                    "sent": "So for each variable binding of the wear clothes, either both are delete, both delete and insert are done, or none of them so.",
                    "label": 1
                },
                {
                    "sent": "But what we could have is that the clash could arise from the old states with just look at at the insert clause from a binding my one.",
                    "label": 0
                },
                {
                    "sent": "But then from another.",
                    "label": 0
                },
                {
                    "sent": "Finding by two there might be actually, so this set might be removed that clears the clash and these are two two different bindings.",
                    "label": 0
                },
                {
                    "sent": "So what can we do about this?",
                    "label": 0
                },
                {
                    "sent": "We actually, I don't.",
                    "label": 0
                },
                {
                    "sent": "Can't explain it now because I'm also running out of time in detail, but in principle what we do is so we have to take care of these different bindings which which could produce this clash and the idea of what we do there is that we.",
                    "label": 0
                },
                {
                    "sent": "That we give up on atomicity of these delete and insert clauses and separate them.",
                    "label": 0
                },
                {
                    "sent": "So we rename variables and have this kind of union queries with separate separated variable names.",
                    "label": 0
                },
                {
                    "sent": "As I said, I don't have time to go into the details, but you find more in the paper so.",
                    "label": 0
                }
            ]
        },
        "clip_31": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "If you want to put all the pieces together, what you find in the paper is the general rewriting algorithms for these three semantics I presented to you for the brave courses and fainthearted update semantics for handling inconsistencies with this slightly extended RDF's language.",
                    "label": 1
                },
                {
                    "sent": "Which disjointness we have some experiments and also a prototype for Lube, and it's not very peak.",
                    "label": 0
                },
                {
                    "sent": "It's not very scalable yet, so optimizations for these are definitely on our agenda, but you have a prototype which does this rewritings.",
                    "label": 0
                },
                {
                    "sent": "Which is available at this UI down there and we're happy for feedback to play around with.",
                    "label": 0
                }
            ]
        },
        "clip_32": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Just to conclude what I presented to you there is I want to go a bit further on that motivation with DB pedia.",
                    "label": 0
                },
                {
                    "sent": "So we don't only want this one ring to have this unified semantics, but actually we're searching for the Holy Grail and the Holy Grail in this area of updates and entailments would be updates in ontology based data access in ontology based data access.",
                    "label": 1
                },
                {
                    "sent": "You want not only have an ontology, you want to update, but you also have a database behind and mappings from this database.",
                    "label": 0
                },
                {
                    "sent": "So this use case is quite nicely reflected in DB pedia itself because the DB pedia data is created by mappings which can be expressed as nested TTS actually.",
                    "label": 0
                },
                {
                    "sent": "So tuple generating dependencies and we have some initial work of where we defined an update semantics for OBD a based on these T pedia semantics where which will be a sneak preview next week if anybody is in Panama by chance there is the Aperta Mendelssohn database.",
                    "label": 0
                },
                {
                    "sent": "Foundations Workshop, which is where we will present this work as a short paper.",
                    "label": 0
                },
                {
                    "sent": "And that concludes my talk, thanks.",
                    "label": 0
                },
                {
                    "sent": "I'm more or less in time through.",
                    "label": 0
                }
            ]
        }
    }
}