{
    "id": "r6we4gjzwpncyopc6pgd4ekr5onltusx",
    "title": "Towards an Agent-based Approach for Veri\ufb01cation of OWL-S Process Models",
    "info": {
        "author": [
            "Monika Solanki, Department of Computing, Imperial College London"
        ],
        "published": "July 28, 2009",
        "recorded": "June 2009",
        "category": [
            "Top->Computer Science->Semantic Web",
            "Top->Computer Science->Semantic Web->OWL - Web Ontology Language"
        ]
    },
    "url": "http://videolectures.net/eswc09_solanki_taaba/",
    "segmentation": [
        [
            "Thank you, good afternoon everyone.",
            "What are we talking about today is something that we've been doing within the framework of the FP 6 project called contract, and it was one of the problems that we came across when we were actually looking at how to automate Lee automatically extract contracts from service specification and then verify those contracts using a model checker.",
            "So this is joint work with Alisa Loomis at Imperial College London, and I was working.",
            "I was working with whenever their College London I was working with.",
            "So right now I am based at University of Leicester."
        ],
        [
            "So.",
            "I would like to start by motivating the.",
            "The reason behind doing this work on on developing a framework for automatically extracting.",
            "Verify verifiable specifications from service descriptions like our less.",
            "I present a case study which is really one of the examples taken from the outlet suite of examples.",
            "Then represent some preliminaries which raise basically sets the background of the different.",
            "Primitives that we need for this work.",
            "And finally we come to the mapping rules and then I can."
        ],
        [
            "So up.",
            "I don't need to talk a lot about web services.",
            "We are all familiar with it and now we know that it's getting more and more mainstream's even with the industrial applications.",
            "Web services are one of the leading paradigms underlying application integration.",
            "We are aware of some of the very popular standards for service specification.",
            "Which are the WSB pulls, a web service, choreography description, language and of course within the context of semantic web services, we are aware of our lesson.",
            "Also, we know about Wizmo, so one of the crucial things.",
            "That we need to do, which is really, which is really when we talk about developing systems, is actually making sure that the system specification specifies certain desired properties and the verification of web service behavior is an integral aspect of several frameworks.",
            "Now which are being implemented for developing services themselves.",
            "So one popular very popular technique for verification is model checking and.",
            "Bob I'm not sure if people are familiar, but just to give a brief overview of model checking so it is basically an algorithmic verification technique and the idea is to perform an exhaustive search of the state space of the system in order to establish whether a specification holds.",
            "So the there are two basic very popular ways in which you could model check.",
            "One is the explicit way of representing the state space where.",
            "Do you have a not very large systems and the problem with an explicit way of doing model checking is that you come across quite often the state explosion problem.",
            "An alternate way is to model check symbolically where the system and the specification that you want to check against.",
            "They are represented as Boolean formula and then encoded canonically as OBD.",
            "So coming back to the talk today.",
            "What we find is that model checkers typically use modeling languages which are different from what we used for specifying services.",
            "So for example, an explicit model checker is spin, which uses the language formula for as the input specification language.",
            "If you like, and a symbolic model checker is you SMB which uses SMB or the new assembly line."
        ],
        [
            "So what is the problem here now?",
            "What really happens is if you look at the general architecture for service verification at the very top level you have your services specified in one of these several web service specification standards and then you have something called a compiler or a preprocessor that takes that service description and makes a model out of it.",
            "Using some some means.",
            "This model is in a language which is typical to the model checker that you're going to use in order to verify your services.",
            "And finally you get an answer whether a particular specification which is written using some logical framework, for example as as an empty and specification of CTS specification, and now for the kind of model checker we're using epistemic or knowledge level specification, you get an answer from the model checker whether the system satisfies the specification."
        ],
        [
            "So.",
            "The challenge here is that.",
            "Developing a model which correctly captures all the behaviors that you over that you want to check the system for has to be abstracted from the service level description.",
            "Developing that and what is even more challenging is developing a tool that could automatically take this service description and give you a model that you can feed directly to the model checker and get an answer on whether the model actually satisfies your properties.",
            "So in order to do in order to make this task possible, the first step.",
            "It's true developed mapping rules or some kind of a framework that actually takes the constructs of the language in the in which are described your service and the parallel construct in your input language to the model checker and come up with and comes up with rules that can help you map between these two different levels of abstraction, so the rules and this rules.",
            "Or once you have these rules, then you can talk about building a tool or some kind of a preprocessor compiler.",
            "That can actually help you move from one system description system description to the other."
        ],
        [
            "So what we have tried to do in this paper is look at actually how we can come, how we can build this kind of a rule based framework and the the model checker that we use is something that has been used for quite some time in the domain of multi agent systems.",
            "So we take the view that a web service can be modeled as an agent and service compositions are basically looked at as multi agent systems.",
            "So multi agent systems serve as a useful metaphor.",
            "For reasoning about the services which are provided by autonomous agents, then we look at a particular approach that we have used for basically going from the LS or the outlets are semantic Web service description language to ISP L which is a language called the interpreter systems programming language and this language is the input language for the model Checker MC Mouse, which is a symbolic model checker.",
            "So as an illustrative example, what we do is we we take a an example from the outlet suite of examples.",
            "The flight booking on the Bravo Air and we show how we go from the outlets representation of Bravo air to the ISP representation, which MC Mask and then use to model check the service desk."
        ],
        [
            "Ception so this is this is some some work that we have to do because when the the the example that was provided within the outer specification was pretty small and we basically wanted to extend the state space to get a realistic idea of how.",
            "What are the kind?",
            "What are the number of variables we would need and how much time would it actually take to model check the the complete specification.",
            "So what we did was we actually extended the browser example BB examples at certain places.",
            "With the kind of constructs that we wanted to basically include in the in our rule based framework to develop the mapping.",
            "So one thing that we did was we first of all extended the.",
            "Book flight process.",
            "So now the book flight earlier was a was a sequential composition of log in and confirm reservation and we added two 2 separate atomique processes to it so the individual booking in the group booking.",
            "So the idea is that group booking can be done by again be done for a group of more than 10 people and then you have a certain discount offered on this kind of group booking and one of the specifications that we wanted to check or for which we wanted to design the system.",
            "Was when a group booking is cancelled, the cancellation fee is 15% rather than 10%.",
            "For individual bookings.",
            "We basically are including these kinds of properties to make the service description more expressive and so that we could analyze and verify more expressive properties.",
            "When we went to the model checker with us."
        ],
        [
            "To fication.",
            "Uh, the other thing, sorry so the other thing that we did was we then added another set of processes.",
            "This is a composite process called manage booking and which is composed of as you can see several small atomic processes, so it's composed as a choice between two seats and change booking and cancel booking further change booking is again a composition which is done using split and join so you have change card for economic book, charge card, economy booking, allocate.",
            "New booking for Club and business class bookings and send unavailability.",
            "When a change of booking is not possible so the outcome from a choice between the first 2 processes and is then again composed in sequence with send confirmation.",
            "And then you also have another complexity added where we invoke the change card when a booking is cancelled.",
            "So this this extension gave us enough atomic processes to basically model them and then see how the system behaves.",
            "And it helped us to write several."
        ],
        [
            "Interesting properties that we wanted to check.",
            "So now, given this extended Bravo Air example, what are some of the specifications that we would that we were interested in verifying?",
            "So, for example, now we were talking about epistemic logic, so I'll come to the model checker it's input language in a minute, but there are certain things which are not really possible.",
            "When we use conventional model checkers such as spin and USMV.",
            "So for example, what I would like to know is that if there is a request for confirmation of reservation.",
            "The confirm reservation agent or the service if you like, knows that the booking has been successful and payment has been made.",
            "So we're basically interesting in verifying apart from your regular CTL NTR properties, knowledge level properties or how much does an agent or a service no about the kind of behavior that is expected from the system.",
            "So whenever a booking changes requested it will always be confirmed.",
            "So this is a kind of a safety property that we would like to check if account is not charged when a booking is changed the change booking agent knows that.",
            "The reference is the business class booking, so these are just some of the properties I've outlined here.",
            "I'll refer you to the paper for a couple of more examples on certain interesting properties that we wanted to check."
        ],
        [
            "So now we come through outlets.",
            "I don't need to say much about our less.",
            "It is a web service ontology which basically provides you the capability to describe your services defined your process models and then show how it could be implemented using the grounding and certain features from the process model that we needed and which we were interested in in order to take it to ESPN worthy input output.",
            "The precondition and the results.",
            "The important parameters of the process model.",
            "And of course, the control constructs such as split sequence choice and if then is iteration so that we can, then we could.",
            "We could then show how you could also transform composite processes into an ISP agent."
        ],
        [
            "So now coming to the input language to the model checker we are mapping from outlets to this language.",
            "So this is really the whole thing that we're interested in so much."
        ],
        [
            "Legion systems, as I mentioned, that the model checker that we're using is a symbolic model checker, and it's called M CMOS.",
            "So really a model checker for multi agent systems, and in order to verify a system using encima we need to define a model and the language that we use to define this model is ispn.",
            "It's based on the formalism of interpreted systems and therefore the name interpret systems programming language.",
            "So the first class citizen within an ISP L program is an agent, so for us.",
            "If you take if you talk about the service and outlets we refer to as an agent in ispn that there are two kinds of agents, your standard agents, an environment agents now for environment agents.",
            "We were not really interested in because environment agents are really used for sharing information or for communication between standard agents.",
            "So are the first step that we wanted to model was the first thing that we wanted to model were standard agents.",
            "And then of course we could move to environment agents if you want to show synchronization between the different agents, or if the agents were sharing some kind of information.",
            "So environment agents are similar to standard agents, but they used to describe as I said, boundary conditions.",
            "An infrastructure which are.",
            "So for example, variables which are shared by standard agents, but they are not compulsory to be defined an when we did when we actually model this example for the initial part of the modeling, we.",
            "Did not model any environment agents and we were working with the standard agents which we derived from the atomic and decompose it processes of the."
        ],
        [
            "Unless process model.",
            "So now it's important to understand the language itself because we're trying to do a mapping from ispn to our S. So how it's important to understand how the primitive is not a primitives in ICL works.",
            "So then when we look at the mapping rules, we know that there is a one to one mapping between the constructs and outlets and the primitives in the interpreter in the hospital.",
            "So an agent as I said, the first class citizen within an ice field program is an agent, an every agent in Ispn.",
            "Is characterized or is defined in terms of a set of local states, so an agent has a set of local states.",
            "Local states are represented in terms of local variables, so currently I spell supports three basic kinds of variables.",
            "So you have Boolean integer integer variables are bounded integers, Boolean zan, the enum type now.",
            "No, we talk about states.",
            "We have an additional feature in ISP L which allows us to specify red and green states foreign agent.",
            "Now the green states simply mean that when an agent is in a green state, it is acting according to the desired specification.",
            "If it is, if it is in a red state, it means that something has gone wrong and some behavior has emerged in the system which has led to the red State in model checking.",
            "This is really useful because if your agent ends up in a red state, we know that.",
            "Some of the interesting properties that you that you wanted for the system to hold have not been satisfied, so it gives a really clear picture of if an agent ends up in a certain red State, what might have gone wrong.",
            "So the next thing that we have apart from local states are actions, so the actions are the events of the actions that an agent take when they, when something needs to be done, then you have a protocol in our protocol is nothing but.",
            "A rule that basically tells you at what state an agent is allowed to do what, so it is really a one to one mapping between certain things.",
            "That should be true.",
            "And if those propositions are true, then what?",
            "What actions are an agent is allowed to perform, and then you have an evolution function which basically says that if an agent is at a particular state and it takes a particular action, what is the next state it will be in?",
            "So all these things combined together basically.",
            "Allow agent to move from one state to the other by taking certain actions, and these are the.",
            "These are the core things that define an agent within the ISP."
        ],
        [
            "Program now, apart from that, what do you need?",
            "So once you have your individual agents specified, so if you have for example three atomique services which are communicating with each other, so you have three agents, three agents defined in as ISPL, and then when you want to define now interesting behaviors.",
            "So you want to evaluate the behavior overall when all these free agents are for example composed in sequence or composed in parallel, then you define something called and called a global.",
            "Evaluation function, so the global evaluation function basically says it basically talks about certain propositions that must hold at certain states.",
            "If the system is progressing correctly, or if it is not.",
            "So if you if you define a proposition that holds true when an undesirable behavior happens, then when you run in your system of using the model checker, this proposition should hold and then find that you have the local initial state.",
            "So you have to define the local initial state in order to tell.",
            "Tell the model checker from the point at which you want your system to start executing, and then they the specification or the exact behavior that you want to verify, which will specify in terms of your temporal formula epistemic.",
            "And also you can specify deontic formula, so this is basically about.",
            "This was basically about the Ispn language to which we are mapping from."
        ],
        [
            "Notice and now we come to the model checker itself, for which we have just defined the input language.",
            "So it's a symbolic model checker as I said, which is which was developed specifically for multi agent systems.",
            "It's it was basically written to verify CTL epistemic, deontic, an ATL formula and what it takes is a multi agent system specification or an ISP L program and it basically evaluates the truthfulness of these programs using algorithms based on will be.",
            "Abilities it's a symbolic model checking the database so."
        ],
        [
            "This is the thing.",
            "Now, what does how, what?",
            "What is the kind of support which is available to work with this model checker?",
            "So it provides variables so you can define your Boolean integer variables and enough you you can if if a particular specification doesn't hold the system the model checker generates counterexamples and it also generates witnesses for satisfying properties.",
            "It provides support for fairness constraints, and it supports it.",
            "Generally, when you see the model checker working, it provides you with interactive execution mode, so you can basically step through each and every state and see the model checker the way it performs a verification.",
            "And finally it is available as an Eclipse plug-in.",
            "Unfortunately, I cannot show this to you right now because I'm working in a different operating system to which the plug-in is available in the plugin is also available for Windows, but I don't have it installed in the windows over here.",
            "So the graphical it is provided as an eclipse plug-in and it includes an editor with syntax syntax recognition, Anna Graphical Simulator, and all these kinds of things that come with the MoD."
        ],
        [
            "Check up.",
            "This is the.",
            "This is the architecture of the model checker itself, so you have a graphical user interface.",
            "You have a finite state machine generator.",
            "You have an encoder.",
            "You have the model checking module and then finally you have your OBD libraries using which the."
        ],
        [
            "Verification is performed.",
            "This is the homepage from where it's available to be downloaded for free so you can experiment and try."
        ],
        [
            "You want to check it out and now we come to the actual mapping rules that we've defined between this ISP and language and the outlets process model.",
            "So for every automatic processor now less we define an agent which we qualify as the process name in ispn.",
            "So a service in our list is an agent in ISP and then an agent and I spell includes local states as we just mentioned.",
            "So you have a local state you have local states, a subset of the local states are your green states where everything is good and the remaining are the red state where.",
            "Some things may have gone wrong, then you have your actions which basically specify the kind of things an agent is allowed to perform the protocols and."
        ],
        [
            "The the evolution function.",
            "So the local states of an agent and I spell are defined in terms of the local variables which we extract from the inputs and the outputs of a service.",
            "As we will see.",
            "So and then there are several approaches available where you can basically transform object types to primitive data types.",
            "So we've used those approach that approach to go from your object representation of types to the primitive representations of integer, boolean and enough that are supported by M CMOS.",
            "So inbounds for integer variables are something which.",
            "The modern chicken needs, but which will probably not be available in your service description, so this will have to be interactively decided depending on the domain and the context of the service that is."
        ],
        [
            "So this is so you have your integer variables, Boolean variables and the variables of type enum.",
            "So you get your set of local variable."
        ],
        [
            "For an agent now.",
            "The set of local wave area below the set of local state foreign agent include this is your state transition diagram for anatomique process that takes you from the initial state to several result states.",
            "So you have an input or an initial state."
        ],
        [
            "Foreign agent and then you have several result states.",
            "So for and at the input state the agent can take several actions which will come through in a minute and that those actions can result in several result states.",
            "So these are."
        ],
        [
            "Result states apart from that as so an example of two result states would be.",
            "For example the credit card validating service, which could either result in a validation success or a validation failure state.",
            "So you."
        ],
        [
            "2 result states apart from the results, raise the final thing that you have is a failure state so your service could fail as well.",
            "So you have an initial state.",
            "Some result states where you expecting certain useful output and a state where the service has failed.",
            "So this gives you the."
        ],
        [
            "Full set of states for a service.",
            "Red states are again those states where something may have gone wrong with the service and you could define a proposition that basically tells us that basically the truthfulness of that tells you that the service if the service is in this state."
        ],
        [
            "It has failed.",
            "So now we talk about actions.",
            "So if a service is an initiative isn't in an initial state, it can take certain actions, and these actions are the actions which will lead to the to the."
        ],
        [
            "Allstate, then you have an action which would lead to failure.",
            "So for example, it could be validating a precondition or or any of these kind of operations that can actually."
        ],
        [
            "Lead to a failure state and then once you have reached those result states you have a set of actions.",
            "For example, sending something back to the to the client or basically sending a message that the precondition has failed or something is invalid within the inputs which are provided by the client so."
        ],
        [
            "These are the actions.",
            "And then you have the final action, which is to send a failure message to."
        ],
        [
            "Client so you get the total set of actions for the agent.",
            "Now we need all these sets if you want to develop an automated compiler that takes from the that takes you from around this process model to the SPL representation protocol.",
            "Basic protocols basically tell you about what what's, what are the propositions that need to hold in order for the agent to take certain actions.",
            "So if I give you an example, if the precondition holds, the agent is non deterministic, non deterministically allowed to choose.",
            "So this kind of non determinism is possible in M CMOS it's allowed to note it deterministically choose an action if the precondition fails, then obviously it takes the failure action.",
            "The action which is defined for failure of the service and then once the services in a result state and if a specific proposition holds then you then you have to take from this set of actions a certain action."
        ],
        [
            "No so so.",
            "So.",
            "Basically at execution time an agent takes an action and if the precondition holds."
        ],
        [
            "Then you go to the to the result states."
        ],
        [
            "So this transition happens and then if it doesn't hold then."
        ],
        [
            "Instead of action is taken.",
            "Now.",
            "The evolution function basically as I mentioned that the evolution function talks about the next state in which an agent should be.",
            "If it takes, if it is at a certain state and takes a certain action.",
            "So this evolution function which we define in the IPL program basically allows you to say what is the net."
        ],
        [
            "State of an agent.",
            "So the group booking processes anatomique process and we identified certain input, output, precondition and the results from the group booking atomique process."
        ],
        [
            "And then we generated an ISP and model for this group booking agent.",
            "So as you can see over here I have certain certain inputs which are defined as variables.",
            "For example is valid called Boolean.",
            "Is booking successful and the price the discounted price which are bounded integers.",
            "So this is the agent representation of the."
        ],
        [
            "Group booking service and here is the protocol which basically tells me what the Action Center agent is allowed to take if a specific proposition is true, and then you define the value."
        ],
        [
            "And function.",
            "So this was about the atomic process.",
            "Now we could also basically map composite processes, so the actual one example."
        ],
        [
            "Of how you could map to a sequence sequence of processes so you have book flight, which is basically a sequential composition of group booking and confirm reservation.",
            "Now it's interesting to note that when they are defining this kind of composition, the synchronization between agents is what we need to define in ESPN in order to actually do this kind of thing."
        ],
        [
            "Position and this this synchronization we define in terms of."
        ],
        [
            "Off the evolution function."
        ],
        [
            "So the evolution function basically says that if you if the agent is group booking and it takes this particular action, then it would be followed by the agent confirmed reservation with which takes a specific action.",
            "So value defining compositional processes.",
            "It's you don't have to really change or basically introduce a new parimeter within ispn just by manipulating the evolution function and basically defining where the control should pass.",
            "When you're moving from one service to the other, you can actually model these kind of composite processes.",
            "So we did this for the group booking for the book Flight Service, where we showed a competition between group booking and the the confirm reservation.",
            "I refer you to the paper for more details on this."
        ],
        [
            "I think I'm already running out of time, so similarly now the synchronization is a key part when you defining as I said composite processes, so I only show the synchronization over here.",
            "So several ways you can use to synchronize between different processes if you want to model split."
        ],
        [
            "Speak, please join and you can also synchronize between.",
            "I mean if you want to model it as a choice an if then else."
        ],
        [
            "You can manipulate the evaluation function and similarly you could also do it for iterate, repeat and repeat until."
        ],
        [
            "So this this kind of compositions are possible and they can be mapped easily through the ISP and language.",
            "Now once you've done all this, what is the final objective?",
            "Well, the the end goal is so that given a outlets service specification you are able to verify interesting properties.",
            "So for this particular example we saw some informal representation of properties.",
            "Now we formalize this using our temporal epistemic logic, and we verified these.",
            "These properties using the approach I've just mentioned and the results are available in the paper.",
            "They were more extensively presented at the at Amos at at last year's arm US.",
            "So if you're interested in looking at them in detail, this is the paper to refer to.",
            "And basically the motivation for this work emerged from there because developing a nice pair program is really not easy, especially if you have to write all the agents manually.",
            "It's it's a horrendous task and This is why we were looking for some ways in which we could part partially automate the process."
        ],
        [
            "Yes, so to conclude what we discovered through this process of exploring different ways of mapping out less process models to multi Agent system to ESPN was that multi agent systems are are useful if services can be viewed as agents and we what we tried to do in this paper was proposed certain rules to go from the outlets representation of a service to the ISP representation, which is the input language for the model checker MCM's.",
            "We've shown the mapping for atomic processes and certain control constructs.",
            "Obviously, if you define the synchronization, you could map more complex control constructs using the approach it provides.",
            "The basic steps this approach basically provides you the first steps to automate the compilation from the outlets process model to ispn.",
            "We have developed a primitive, semi automated kind of compiler which implements these rules and if you believe me, I.",
            "Really, use the RDF serialization of the Alice example and not the logic based one that I showed you earlier.",
            "It was just not possible to show the the RDF representation of the example for this for the slides so."
        ],
        [
            "So, uh, so one of the things that we have been critically looking at Anna.",
            "It's a very we recognize that this is a very important aspect that needs to be done in order to to basically establish the soundness the and the completeness of the mapping rules.",
            "These are rules which which we have just defined and now we're in the process of basically at a formal level trying to show the formal level that the mapping is correct.",
            "Also, we are working on enhancing and improving the existing basic compiler.",
            "We instead of having a kind of Java based framework for to compile from one representation to the other, we're trying to build up a rule based environment where the mapping rules are externally defined from the program that actually does the compilation, and finally, we're trying to integrate this compiler with the Eclipse plug-in because it would be really neat if you could give to your if the the model check is already available as an Eclipse plug-in and if it could be integrated with the compiler or.",
            "If the compiler could be integrated with this plugin, then it would be really nice to actually get some kind of an automated representation.",
            "Automatic representation of the SPL program from the outlets process model so.",
            "This is all I had to talk about today.",
            "Thank you for listening and I'm happy to take any questions if you have.",
            "Questions.",
            "Which is of course.",
            "Anymore checking.",
            "Sorry, could you just speak?",
            "Why do some more coming up with additional word site or you can solve for?",
            "Yeah yes yes yeah because the initial state for the model.",
            "Yeah so.",
            "So one of the things.",
            "That we have.",
            "Is the we haven't 17 defining the model.",
            "We actually have to define the local initial state.",
            "The initial state of the model.",
            "Yeah.",
            "Sorry.",
            "Well, this is a very tedious task to do or be poor service composition.",
            "Yes it is.",
            "It is it is.",
            "It is very time consuming.",
            "There's another question.",
            "I was wondering, you said you need all the result says often talking process to transform it and seems to be clear with for example project cloud service and no results are accepted or not accepted.",
            "But what is if you have a service like June 8 San import and modify the latitude, longitude don't know the specific space or so this was.",
            "I don't know how you can specify all these other states, no.",
            "Basically the mapping is strong analysis process model to ispn everything that is in the process model will be mapped."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Thank you, good afternoon everyone.",
                    "label": 0
                },
                {
                    "sent": "What are we talking about today is something that we've been doing within the framework of the FP 6 project called contract, and it was one of the problems that we came across when we were actually looking at how to automate Lee automatically extract contracts from service specification and then verify those contracts using a model checker.",
                    "label": 0
                },
                {
                    "sent": "So this is joint work with Alisa Loomis at Imperial College London, and I was working.",
                    "label": 1
                },
                {
                    "sent": "I was working with whenever their College London I was working with.",
                    "label": 0
                },
                {
                    "sent": "So right now I am based at University of Leicester.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "I would like to start by motivating the.",
                    "label": 0
                },
                {
                    "sent": "The reason behind doing this work on on developing a framework for automatically extracting.",
                    "label": 0
                },
                {
                    "sent": "Verify verifiable specifications from service descriptions like our less.",
                    "label": 0
                },
                {
                    "sent": "I present a case study which is really one of the examples taken from the outlet suite of examples.",
                    "label": 0
                },
                {
                    "sent": "Then represent some preliminaries which raise basically sets the background of the different.",
                    "label": 0
                },
                {
                    "sent": "Primitives that we need for this work.",
                    "label": 0
                },
                {
                    "sent": "And finally we come to the mapping rules and then I can.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So up.",
                    "label": 0
                },
                {
                    "sent": "I don't need to talk a lot about web services.",
                    "label": 0
                },
                {
                    "sent": "We are all familiar with it and now we know that it's getting more and more mainstream's even with the industrial applications.",
                    "label": 0
                },
                {
                    "sent": "Web services are one of the leading paradigms underlying application integration.",
                    "label": 1
                },
                {
                    "sent": "We are aware of some of the very popular standards for service specification.",
                    "label": 0
                },
                {
                    "sent": "Which are the WSB pulls, a web service, choreography description, language and of course within the context of semantic web services, we are aware of our lesson.",
                    "label": 0
                },
                {
                    "sent": "Also, we know about Wizmo, so one of the crucial things.",
                    "label": 1
                },
                {
                    "sent": "That we need to do, which is really, which is really when we talk about developing systems, is actually making sure that the system specification specifies certain desired properties and the verification of web service behavior is an integral aspect of several frameworks.",
                    "label": 1
                },
                {
                    "sent": "Now which are being implemented for developing services themselves.",
                    "label": 0
                },
                {
                    "sent": "So one popular very popular technique for verification is model checking and.",
                    "label": 0
                },
                {
                    "sent": "Bob I'm not sure if people are familiar, but just to give a brief overview of model checking so it is basically an algorithmic verification technique and the idea is to perform an exhaustive search of the state space of the system in order to establish whether a specification holds.",
                    "label": 0
                },
                {
                    "sent": "So the there are two basic very popular ways in which you could model check.",
                    "label": 0
                },
                {
                    "sent": "One is the explicit way of representing the state space where.",
                    "label": 0
                },
                {
                    "sent": "Do you have a not very large systems and the problem with an explicit way of doing model checking is that you come across quite often the state explosion problem.",
                    "label": 0
                },
                {
                    "sent": "An alternate way is to model check symbolically where the system and the specification that you want to check against.",
                    "label": 1
                },
                {
                    "sent": "They are represented as Boolean formula and then encoded canonically as OBD.",
                    "label": 0
                },
                {
                    "sent": "So coming back to the talk today.",
                    "label": 0
                },
                {
                    "sent": "What we find is that model checkers typically use modeling languages which are different from what we used for specifying services.",
                    "label": 0
                },
                {
                    "sent": "So for example, an explicit model checker is spin, which uses the language formula for as the input specification language.",
                    "label": 0
                },
                {
                    "sent": "If you like, and a symbolic model checker is you SMB which uses SMB or the new assembly line.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So what is the problem here now?",
                    "label": 0
                },
                {
                    "sent": "What really happens is if you look at the general architecture for service verification at the very top level you have your services specified in one of these several web service specification standards and then you have something called a compiler or a preprocessor that takes that service description and makes a model out of it.",
                    "label": 1
                },
                {
                    "sent": "Using some some means.",
                    "label": 0
                },
                {
                    "sent": "This model is in a language which is typical to the model checker that you're going to use in order to verify your services.",
                    "label": 0
                },
                {
                    "sent": "And finally you get an answer whether a particular specification which is written using some logical framework, for example as as an empty and specification of CTS specification, and now for the kind of model checker we're using epistemic or knowledge level specification, you get an answer from the model checker whether the system satisfies the specification.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "The challenge here is that.",
                    "label": 1
                },
                {
                    "sent": "Developing a model which correctly captures all the behaviors that you over that you want to check the system for has to be abstracted from the service level description.",
                    "label": 0
                },
                {
                    "sent": "Developing that and what is even more challenging is developing a tool that could automatically take this service description and give you a model that you can feed directly to the model checker and get an answer on whether the model actually satisfies your properties.",
                    "label": 1
                },
                {
                    "sent": "So in order to do in order to make this task possible, the first step.",
                    "label": 0
                },
                {
                    "sent": "It's true developed mapping rules or some kind of a framework that actually takes the constructs of the language in the in which are described your service and the parallel construct in your input language to the model checker and come up with and comes up with rules that can help you map between these two different levels of abstraction, so the rules and this rules.",
                    "label": 0
                },
                {
                    "sent": "Or once you have these rules, then you can talk about building a tool or some kind of a preprocessor compiler.",
                    "label": 1
                },
                {
                    "sent": "That can actually help you move from one system description system description to the other.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So what we have tried to do in this paper is look at actually how we can come, how we can build this kind of a rule based framework and the the model checker that we use is something that has been used for quite some time in the domain of multi agent systems.",
                    "label": 0
                },
                {
                    "sent": "So we take the view that a web service can be modeled as an agent and service compositions are basically looked at as multi agent systems.",
                    "label": 1
                },
                {
                    "sent": "So multi agent systems serve as a useful metaphor.",
                    "label": 0
                },
                {
                    "sent": "For reasoning about the services which are provided by autonomous agents, then we look at a particular approach that we have used for basically going from the LS or the outlets are semantic Web service description language to ISP L which is a language called the interpreter systems programming language and this language is the input language for the model Checker MC Mouse, which is a symbolic model checker.",
                    "label": 1
                },
                {
                    "sent": "So as an illustrative example, what we do is we we take a an example from the outlet suite of examples.",
                    "label": 0
                },
                {
                    "sent": "The flight booking on the Bravo Air and we show how we go from the outlets representation of Bravo air to the ISP representation, which MC Mask and then use to model check the service desk.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Ception so this is this is some some work that we have to do because when the the the example that was provided within the outer specification was pretty small and we basically wanted to extend the state space to get a realistic idea of how.",
                    "label": 0
                },
                {
                    "sent": "What are the kind?",
                    "label": 0
                },
                {
                    "sent": "What are the number of variables we would need and how much time would it actually take to model check the the complete specification.",
                    "label": 0
                },
                {
                    "sent": "So what we did was we actually extended the browser example BB examples at certain places.",
                    "label": 0
                },
                {
                    "sent": "With the kind of constructs that we wanted to basically include in the in our rule based framework to develop the mapping.",
                    "label": 0
                },
                {
                    "sent": "So one thing that we did was we first of all extended the.",
                    "label": 0
                },
                {
                    "sent": "Book flight process.",
                    "label": 0
                },
                {
                    "sent": "So now the book flight earlier was a was a sequential composition of log in and confirm reservation and we added two 2 separate atomique processes to it so the individual booking in the group booking.",
                    "label": 0
                },
                {
                    "sent": "So the idea is that group booking can be done by again be done for a group of more than 10 people and then you have a certain discount offered on this kind of group booking and one of the specifications that we wanted to check or for which we wanted to design the system.",
                    "label": 1
                },
                {
                    "sent": "Was when a group booking is cancelled, the cancellation fee is 15% rather than 10%.",
                    "label": 1
                },
                {
                    "sent": "For individual bookings.",
                    "label": 0
                },
                {
                    "sent": "We basically are including these kinds of properties to make the service description more expressive and so that we could analyze and verify more expressive properties.",
                    "label": 0
                },
                {
                    "sent": "When we went to the model checker with us.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "To fication.",
                    "label": 0
                },
                {
                    "sent": "Uh, the other thing, sorry so the other thing that we did was we then added another set of processes.",
                    "label": 0
                },
                {
                    "sent": "This is a composite process called manage booking and which is composed of as you can see several small atomic processes, so it's composed as a choice between two seats and change booking and cancel booking further change booking is again a composition which is done using split and join so you have change card for economic book, charge card, economy booking, allocate.",
                    "label": 0
                },
                {
                    "sent": "New booking for Club and business class bookings and send unavailability.",
                    "label": 1
                },
                {
                    "sent": "When a change of booking is not possible so the outcome from a choice between the first 2 processes and is then again composed in sequence with send confirmation.",
                    "label": 1
                },
                {
                    "sent": "And then you also have another complexity added where we invoke the change card when a booking is cancelled.",
                    "label": 0
                },
                {
                    "sent": "So this this extension gave us enough atomic processes to basically model them and then see how the system behaves.",
                    "label": 0
                },
                {
                    "sent": "And it helped us to write several.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Interesting properties that we wanted to check.",
                    "label": 0
                },
                {
                    "sent": "So now, given this extended Bravo Air example, what are some of the specifications that we would that we were interested in verifying?",
                    "label": 0
                },
                {
                    "sent": "So, for example, now we were talking about epistemic logic, so I'll come to the model checker it's input language in a minute, but there are certain things which are not really possible.",
                    "label": 0
                },
                {
                    "sent": "When we use conventional model checkers such as spin and USMV.",
                    "label": 0
                },
                {
                    "sent": "So for example, what I would like to know is that if there is a request for confirmation of reservation.",
                    "label": 1
                },
                {
                    "sent": "The confirm reservation agent or the service if you like, knows that the booking has been successful and payment has been made.",
                    "label": 1
                },
                {
                    "sent": "So we're basically interesting in verifying apart from your regular CTL NTR properties, knowledge level properties or how much does an agent or a service no about the kind of behavior that is expected from the system.",
                    "label": 1
                },
                {
                    "sent": "So whenever a booking changes requested it will always be confirmed.",
                    "label": 1
                },
                {
                    "sent": "So this is a kind of a safety property that we would like to check if account is not charged when a booking is changed the change booking agent knows that.",
                    "label": 0
                },
                {
                    "sent": "The reference is the business class booking, so these are just some of the properties I've outlined here.",
                    "label": 0
                },
                {
                    "sent": "I'll refer you to the paper for a couple of more examples on certain interesting properties that we wanted to check.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So now we come through outlets.",
                    "label": 0
                },
                {
                    "sent": "I don't need to say much about our less.",
                    "label": 0
                },
                {
                    "sent": "It is a web service ontology which basically provides you the capability to describe your services defined your process models and then show how it could be implemented using the grounding and certain features from the process model that we needed and which we were interested in in order to take it to ESPN worthy input output.",
                    "label": 0
                },
                {
                    "sent": "The precondition and the results.",
                    "label": 0
                },
                {
                    "sent": "The important parameters of the process model.",
                    "label": 0
                },
                {
                    "sent": "And of course, the control constructs such as split sequence choice and if then is iteration so that we can, then we could.",
                    "label": 0
                },
                {
                    "sent": "We could then show how you could also transform composite processes into an ISP agent.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So now coming to the input language to the model checker we are mapping from outlets to this language.",
                    "label": 0
                },
                {
                    "sent": "So this is really the whole thing that we're interested in so much.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Legion systems, as I mentioned, that the model checker that we're using is a symbolic model checker, and it's called M CMOS.",
                    "label": 0
                },
                {
                    "sent": "So really a model checker for multi agent systems, and in order to verify a system using encima we need to define a model and the language that we use to define this model is ispn.",
                    "label": 0
                },
                {
                    "sent": "It's based on the formalism of interpreted systems and therefore the name interpret systems programming language.",
                    "label": 1
                },
                {
                    "sent": "So the first class citizen within an ISP L program is an agent, so for us.",
                    "label": 1
                },
                {
                    "sent": "If you take if you talk about the service and outlets we refer to as an agent in ispn that there are two kinds of agents, your standard agents, an environment agents now for environment agents.",
                    "label": 0
                },
                {
                    "sent": "We were not really interested in because environment agents are really used for sharing information or for communication between standard agents.",
                    "label": 0
                },
                {
                    "sent": "So are the first step that we wanted to model was the first thing that we wanted to model were standard agents.",
                    "label": 1
                },
                {
                    "sent": "And then of course we could move to environment agents if you want to show synchronization between the different agents, or if the agents were sharing some kind of information.",
                    "label": 1
                },
                {
                    "sent": "So environment agents are similar to standard agents, but they used to describe as I said, boundary conditions.",
                    "label": 0
                },
                {
                    "sent": "An infrastructure which are.",
                    "label": 0
                },
                {
                    "sent": "So for example, variables which are shared by standard agents, but they are not compulsory to be defined an when we did when we actually model this example for the initial part of the modeling, we.",
                    "label": 0
                },
                {
                    "sent": "Did not model any environment agents and we were working with the standard agents which we derived from the atomic and decompose it processes of the.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Unless process model.",
                    "label": 0
                },
                {
                    "sent": "So now it's important to understand the language itself because we're trying to do a mapping from ispn to our S. So how it's important to understand how the primitive is not a primitives in ICL works.",
                    "label": 0
                },
                {
                    "sent": "So then when we look at the mapping rules, we know that there is a one to one mapping between the constructs and outlets and the primitives in the interpreter in the hospital.",
                    "label": 0
                },
                {
                    "sent": "So an agent as I said, the first class citizen within an ice field program is an agent, an every agent in Ispn.",
                    "label": 0
                },
                {
                    "sent": "Is characterized or is defined in terms of a set of local states, so an agent has a set of local states.",
                    "label": 1
                },
                {
                    "sent": "Local states are represented in terms of local variables, so currently I spell supports three basic kinds of variables.",
                    "label": 0
                },
                {
                    "sent": "So you have Boolean integer integer variables are bounded integers, Boolean zan, the enum type now.",
                    "label": 0
                },
                {
                    "sent": "No, we talk about states.",
                    "label": 0
                },
                {
                    "sent": "We have an additional feature in ISP L which allows us to specify red and green states foreign agent.",
                    "label": 0
                },
                {
                    "sent": "Now the green states simply mean that when an agent is in a green state, it is acting according to the desired specification.",
                    "label": 0
                },
                {
                    "sent": "If it is, if it is in a red state, it means that something has gone wrong and some behavior has emerged in the system which has led to the red State in model checking.",
                    "label": 0
                },
                {
                    "sent": "This is really useful because if your agent ends up in a red state, we know that.",
                    "label": 0
                },
                {
                    "sent": "Some of the interesting properties that you that you wanted for the system to hold have not been satisfied, so it gives a really clear picture of if an agent ends up in a certain red State, what might have gone wrong.",
                    "label": 0
                },
                {
                    "sent": "So the next thing that we have apart from local states are actions, so the actions are the events of the actions that an agent take when they, when something needs to be done, then you have a protocol in our protocol is nothing but.",
                    "label": 0
                },
                {
                    "sent": "A rule that basically tells you at what state an agent is allowed to do what, so it is really a one to one mapping between certain things.",
                    "label": 0
                },
                {
                    "sent": "That should be true.",
                    "label": 0
                },
                {
                    "sent": "And if those propositions are true, then what?",
                    "label": 0
                },
                {
                    "sent": "What actions are an agent is allowed to perform, and then you have an evolution function which basically says that if an agent is at a particular state and it takes a particular action, what is the next state it will be in?",
                    "label": 0
                },
                {
                    "sent": "So all these things combined together basically.",
                    "label": 0
                },
                {
                    "sent": "Allow agent to move from one state to the other by taking certain actions, and these are the.",
                    "label": 0
                },
                {
                    "sent": "These are the core things that define an agent within the ISP.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Program now, apart from that, what do you need?",
                    "label": 0
                },
                {
                    "sent": "So once you have your individual agents specified, so if you have for example three atomique services which are communicating with each other, so you have three agents, three agents defined in as ISPL, and then when you want to define now interesting behaviors.",
                    "label": 1
                },
                {
                    "sent": "So you want to evaluate the behavior overall when all these free agents are for example composed in sequence or composed in parallel, then you define something called and called a global.",
                    "label": 1
                },
                {
                    "sent": "Evaluation function, so the global evaluation function basically says it basically talks about certain propositions that must hold at certain states.",
                    "label": 1
                },
                {
                    "sent": "If the system is progressing correctly, or if it is not.",
                    "label": 0
                },
                {
                    "sent": "So if you if you define a proposition that holds true when an undesirable behavior happens, then when you run in your system of using the model checker, this proposition should hold and then find that you have the local initial state.",
                    "label": 0
                },
                {
                    "sent": "So you have to define the local initial state in order to tell.",
                    "label": 1
                },
                {
                    "sent": "Tell the model checker from the point at which you want your system to start executing, and then they the specification or the exact behavior that you want to verify, which will specify in terms of your temporal formula epistemic.",
                    "label": 0
                },
                {
                    "sent": "And also you can specify deontic formula, so this is basically about.",
                    "label": 0
                },
                {
                    "sent": "This was basically about the Ispn language to which we are mapping from.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Notice and now we come to the model checker itself, for which we have just defined the input language.",
                    "label": 0
                },
                {
                    "sent": "So it's a symbolic model checker as I said, which is which was developed specifically for multi agent systems.",
                    "label": 0
                },
                {
                    "sent": "It's it was basically written to verify CTL epistemic, deontic, an ATL formula and what it takes is a multi agent system specification or an ISP L program and it basically evaluates the truthfulness of these programs using algorithms based on will be.",
                    "label": 1
                },
                {
                    "sent": "Abilities it's a symbolic model checking the database so.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "This is the thing.",
                    "label": 0
                },
                {
                    "sent": "Now, what does how, what?",
                    "label": 0
                },
                {
                    "sent": "What is the kind of support which is available to work with this model checker?",
                    "label": 0
                },
                {
                    "sent": "So it provides variables so you can define your Boolean integer variables and enough you you can if if a particular specification doesn't hold the system the model checker generates counterexamples and it also generates witnesses for satisfying properties.",
                    "label": 0
                },
                {
                    "sent": "It provides support for fairness constraints, and it supports it.",
                    "label": 1
                },
                {
                    "sent": "Generally, when you see the model checker working, it provides you with interactive execution mode, so you can basically step through each and every state and see the model checker the way it performs a verification.",
                    "label": 0
                },
                {
                    "sent": "And finally it is available as an Eclipse plug-in.",
                    "label": 0
                },
                {
                    "sent": "Unfortunately, I cannot show this to you right now because I'm working in a different operating system to which the plug-in is available in the plugin is also available for Windows, but I don't have it installed in the windows over here.",
                    "label": 0
                },
                {
                    "sent": "So the graphical it is provided as an eclipse plug-in and it includes an editor with syntax syntax recognition, Anna Graphical Simulator, and all these kinds of things that come with the MoD.",
                    "label": 1
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Check up.",
                    "label": 0
                },
                {
                    "sent": "This is the.",
                    "label": 0
                },
                {
                    "sent": "This is the architecture of the model checker itself, so you have a graphical user interface.",
                    "label": 1
                },
                {
                    "sent": "You have a finite state machine generator.",
                    "label": 0
                },
                {
                    "sent": "You have an encoder.",
                    "label": 0
                },
                {
                    "sent": "You have the model checking module and then finally you have your OBD libraries using which the.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Verification is performed.",
                    "label": 0
                },
                {
                    "sent": "This is the homepage from where it's available to be downloaded for free so you can experiment and try.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "You want to check it out and now we come to the actual mapping rules that we've defined between this ISP and language and the outlets process model.",
                    "label": 0
                },
                {
                    "sent": "So for every automatic processor now less we define an agent which we qualify as the process name in ispn.",
                    "label": 1
                },
                {
                    "sent": "So a service in our list is an agent in ISP and then an agent and I spell includes local states as we just mentioned.",
                    "label": 0
                },
                {
                    "sent": "So you have a local state you have local states, a subset of the local states are your green states where everything is good and the remaining are the red state where.",
                    "label": 1
                },
                {
                    "sent": "Some things may have gone wrong, then you have your actions which basically specify the kind of things an agent is allowed to perform the protocols and.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "The the evolution function.",
                    "label": 0
                },
                {
                    "sent": "So the local states of an agent and I spell are defined in terms of the local variables which we extract from the inputs and the outputs of a service.",
                    "label": 1
                },
                {
                    "sent": "As we will see.",
                    "label": 0
                },
                {
                    "sent": "So and then there are several approaches available where you can basically transform object types to primitive data types.",
                    "label": 0
                },
                {
                    "sent": "So we've used those approach that approach to go from your object representation of types to the primitive representations of integer, boolean and enough that are supported by M CMOS.",
                    "label": 1
                },
                {
                    "sent": "So inbounds for integer variables are something which.",
                    "label": 0
                },
                {
                    "sent": "The modern chicken needs, but which will probably not be available in your service description, so this will have to be interactively decided depending on the domain and the context of the service that is.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So this is so you have your integer variables, Boolean variables and the variables of type enum.",
                    "label": 0
                },
                {
                    "sent": "So you get your set of local variable.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "For an agent now.",
                    "label": 0
                },
                {
                    "sent": "The set of local wave area below the set of local state foreign agent include this is your state transition diagram for anatomique process that takes you from the initial state to several result states.",
                    "label": 1
                },
                {
                    "sent": "So you have an input or an initial state.",
                    "label": 1
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Foreign agent and then you have several result states.",
                    "label": 0
                },
                {
                    "sent": "So for and at the input state the agent can take several actions which will come through in a minute and that those actions can result in several result states.",
                    "label": 0
                },
                {
                    "sent": "So these are.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Result states apart from that as so an example of two result states would be.",
                    "label": 0
                },
                {
                    "sent": "For example the credit card validating service, which could either result in a validation success or a validation failure state.",
                    "label": 1
                },
                {
                    "sent": "So you.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "2 result states apart from the results, raise the final thing that you have is a failure state so your service could fail as well.",
                    "label": 0
                },
                {
                    "sent": "So you have an initial state.",
                    "label": 0
                },
                {
                    "sent": "Some result states where you expecting certain useful output and a state where the service has failed.",
                    "label": 0
                },
                {
                    "sent": "So this gives you the.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Full set of states for a service.",
                    "label": 0
                },
                {
                    "sent": "Red states are again those states where something may have gone wrong with the service and you could define a proposition that basically tells us that basically the truthfulness of that tells you that the service if the service is in this state.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "It has failed.",
                    "label": 0
                },
                {
                    "sent": "So now we talk about actions.",
                    "label": 0
                },
                {
                    "sent": "So if a service is an initiative isn't in an initial state, it can take certain actions, and these actions are the actions which will lead to the to the.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Allstate, then you have an action which would lead to failure.",
                    "label": 0
                },
                {
                    "sent": "So for example, it could be validating a precondition or or any of these kind of operations that can actually.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Lead to a failure state and then once you have reached those result states you have a set of actions.",
                    "label": 0
                },
                {
                    "sent": "For example, sending something back to the to the client or basically sending a message that the precondition has failed or something is invalid within the inputs which are provided by the client so.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "These are the actions.",
                    "label": 0
                },
                {
                    "sent": "And then you have the final action, which is to send a failure message to.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Client so you get the total set of actions for the agent.",
                    "label": 0
                },
                {
                    "sent": "Now we need all these sets if you want to develop an automated compiler that takes from the that takes you from around this process model to the SPL representation protocol.",
                    "label": 0
                },
                {
                    "sent": "Basic protocols basically tell you about what what's, what are the propositions that need to hold in order for the agent to take certain actions.",
                    "label": 0
                },
                {
                    "sent": "So if I give you an example, if the precondition holds, the agent is non deterministic, non deterministically allowed to choose.",
                    "label": 0
                },
                {
                    "sent": "So this kind of non determinism is possible in M CMOS it's allowed to note it deterministically choose an action if the precondition fails, then obviously it takes the failure action.",
                    "label": 0
                },
                {
                    "sent": "The action which is defined for failure of the service and then once the services in a result state and if a specific proposition holds then you then you have to take from this set of actions a certain action.",
                    "label": 0
                }
            ]
        },
        "clip_31": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "No so so.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "Basically at execution time an agent takes an action and if the precondition holds.",
                    "label": 1
                }
            ]
        },
        "clip_32": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Then you go to the to the result states.",
                    "label": 0
                }
            ]
        },
        "clip_33": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So this transition happens and then if it doesn't hold then.",
                    "label": 0
                }
            ]
        },
        "clip_34": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Instead of action is taken.",
                    "label": 0
                },
                {
                    "sent": "Now.",
                    "label": 0
                },
                {
                    "sent": "The evolution function basically as I mentioned that the evolution function talks about the next state in which an agent should be.",
                    "label": 1
                },
                {
                    "sent": "If it takes, if it is at a certain state and takes a certain action.",
                    "label": 0
                },
                {
                    "sent": "So this evolution function which we define in the IPL program basically allows you to say what is the net.",
                    "label": 0
                }
            ]
        },
        "clip_35": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "State of an agent.",
                    "label": 0
                },
                {
                    "sent": "So the group booking processes anatomique process and we identified certain input, output, precondition and the results from the group booking atomique process.",
                    "label": 0
                }
            ]
        },
        "clip_36": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And then we generated an ISP and model for this group booking agent.",
                    "label": 0
                },
                {
                    "sent": "So as you can see over here I have certain certain inputs which are defined as variables.",
                    "label": 0
                },
                {
                    "sent": "For example is valid called Boolean.",
                    "label": 0
                },
                {
                    "sent": "Is booking successful and the price the discounted price which are bounded integers.",
                    "label": 0
                },
                {
                    "sent": "So this is the agent representation of the.",
                    "label": 0
                }
            ]
        },
        "clip_37": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Group booking service and here is the protocol which basically tells me what the Action Center agent is allowed to take if a specific proposition is true, and then you define the value.",
                    "label": 0
                }
            ]
        },
        "clip_38": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And function.",
                    "label": 0
                },
                {
                    "sent": "So this was about the atomic process.",
                    "label": 0
                },
                {
                    "sent": "Now we could also basically map composite processes, so the actual one example.",
                    "label": 0
                }
            ]
        },
        "clip_39": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Of how you could map to a sequence sequence of processes so you have book flight, which is basically a sequential composition of group booking and confirm reservation.",
                    "label": 0
                },
                {
                    "sent": "Now it's interesting to note that when they are defining this kind of composition, the synchronization between agents is what we need to define in ESPN in order to actually do this kind of thing.",
                    "label": 0
                }
            ]
        },
        "clip_40": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Position and this this synchronization we define in terms of.",
                    "label": 0
                }
            ]
        },
        "clip_41": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Off the evolution function.",
                    "label": 0
                }
            ]
        },
        "clip_42": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So the evolution function basically says that if you if the agent is group booking and it takes this particular action, then it would be followed by the agent confirmed reservation with which takes a specific action.",
                    "label": 0
                },
                {
                    "sent": "So value defining compositional processes.",
                    "label": 0
                },
                {
                    "sent": "It's you don't have to really change or basically introduce a new parimeter within ispn just by manipulating the evolution function and basically defining where the control should pass.",
                    "label": 0
                },
                {
                    "sent": "When you're moving from one service to the other, you can actually model these kind of composite processes.",
                    "label": 0
                },
                {
                    "sent": "So we did this for the group booking for the book Flight Service, where we showed a competition between group booking and the the confirm reservation.",
                    "label": 0
                },
                {
                    "sent": "I refer you to the paper for more details on this.",
                    "label": 0
                }
            ]
        },
        "clip_43": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I think I'm already running out of time, so similarly now the synchronization is a key part when you defining as I said composite processes, so I only show the synchronization over here.",
                    "label": 0
                },
                {
                    "sent": "So several ways you can use to synchronize between different processes if you want to model split.",
                    "label": 0
                }
            ]
        },
        "clip_44": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Speak, please join and you can also synchronize between.",
                    "label": 0
                },
                {
                    "sent": "I mean if you want to model it as a choice an if then else.",
                    "label": 0
                }
            ]
        },
        "clip_45": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "You can manipulate the evaluation function and similarly you could also do it for iterate, repeat and repeat until.",
                    "label": 0
                }
            ]
        },
        "clip_46": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So this this kind of compositions are possible and they can be mapped easily through the ISP and language.",
                    "label": 0
                },
                {
                    "sent": "Now once you've done all this, what is the final objective?",
                    "label": 0
                },
                {
                    "sent": "Well, the the end goal is so that given a outlets service specification you are able to verify interesting properties.",
                    "label": 0
                },
                {
                    "sent": "So for this particular example we saw some informal representation of properties.",
                    "label": 0
                },
                {
                    "sent": "Now we formalize this using our temporal epistemic logic, and we verified these.",
                    "label": 0
                },
                {
                    "sent": "These properties using the approach I've just mentioned and the results are available in the paper.",
                    "label": 0
                },
                {
                    "sent": "They were more extensively presented at the at Amos at at last year's arm US.",
                    "label": 0
                },
                {
                    "sent": "So if you're interested in looking at them in detail, this is the paper to refer to.",
                    "label": 0
                },
                {
                    "sent": "And basically the motivation for this work emerged from there because developing a nice pair program is really not easy, especially if you have to write all the agents manually.",
                    "label": 0
                },
                {
                    "sent": "It's it's a horrendous task and This is why we were looking for some ways in which we could part partially automate the process.",
                    "label": 0
                }
            ]
        },
        "clip_47": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Yes, so to conclude what we discovered through this process of exploring different ways of mapping out less process models to multi Agent system to ESPN was that multi agent systems are are useful if services can be viewed as agents and we what we tried to do in this paper was proposed certain rules to go from the outlets representation of a service to the ISP representation, which is the input language for the model checker MCM's.",
                    "label": 0
                },
                {
                    "sent": "We've shown the mapping for atomic processes and certain control constructs.",
                    "label": 1
                },
                {
                    "sent": "Obviously, if you define the synchronization, you could map more complex control constructs using the approach it provides.",
                    "label": 1
                },
                {
                    "sent": "The basic steps this approach basically provides you the first steps to automate the compilation from the outlets process model to ispn.",
                    "label": 0
                },
                {
                    "sent": "We have developed a primitive, semi automated kind of compiler which implements these rules and if you believe me, I.",
                    "label": 0
                },
                {
                    "sent": "Really, use the RDF serialization of the Alice example and not the logic based one that I showed you earlier.",
                    "label": 0
                },
                {
                    "sent": "It was just not possible to show the the RDF representation of the example for this for the slides so.",
                    "label": 0
                }
            ]
        },
        "clip_48": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So, uh, so one of the things that we have been critically looking at Anna.",
                    "label": 0
                },
                {
                    "sent": "It's a very we recognize that this is a very important aspect that needs to be done in order to to basically establish the soundness the and the completeness of the mapping rules.",
                    "label": 1
                },
                {
                    "sent": "These are rules which which we have just defined and now we're in the process of basically at a formal level trying to show the formal level that the mapping is correct.",
                    "label": 0
                },
                {
                    "sent": "Also, we are working on enhancing and improving the existing basic compiler.",
                    "label": 1
                },
                {
                    "sent": "We instead of having a kind of Java based framework for to compile from one representation to the other, we're trying to build up a rule based environment where the mapping rules are externally defined from the program that actually does the compilation, and finally, we're trying to integrate this compiler with the Eclipse plug-in because it would be really neat if you could give to your if the the model check is already available as an Eclipse plug-in and if it could be integrated with the compiler or.",
                    "label": 0
                },
                {
                    "sent": "If the compiler could be integrated with this plugin, then it would be really nice to actually get some kind of an automated representation.",
                    "label": 0
                },
                {
                    "sent": "Automatic representation of the SPL program from the outlets process model so.",
                    "label": 0
                },
                {
                    "sent": "This is all I had to talk about today.",
                    "label": 0
                },
                {
                    "sent": "Thank you for listening and I'm happy to take any questions if you have.",
                    "label": 0
                },
                {
                    "sent": "Questions.",
                    "label": 0
                },
                {
                    "sent": "Which is of course.",
                    "label": 0
                },
                {
                    "sent": "Anymore checking.",
                    "label": 0
                },
                {
                    "sent": "Sorry, could you just speak?",
                    "label": 0
                },
                {
                    "sent": "Why do some more coming up with additional word site or you can solve for?",
                    "label": 0
                },
                {
                    "sent": "Yeah yes yes yeah because the initial state for the model.",
                    "label": 0
                },
                {
                    "sent": "Yeah so.",
                    "label": 0
                },
                {
                    "sent": "So one of the things.",
                    "label": 0
                },
                {
                    "sent": "That we have.",
                    "label": 0
                },
                {
                    "sent": "Is the we haven't 17 defining the model.",
                    "label": 0
                },
                {
                    "sent": "We actually have to define the local initial state.",
                    "label": 0
                },
                {
                    "sent": "The initial state of the model.",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "Sorry.",
                    "label": 0
                },
                {
                    "sent": "Well, this is a very tedious task to do or be poor service composition.",
                    "label": 0
                },
                {
                    "sent": "Yes it is.",
                    "label": 0
                },
                {
                    "sent": "It is it is.",
                    "label": 0
                },
                {
                    "sent": "It is very time consuming.",
                    "label": 0
                },
                {
                    "sent": "There's another question.",
                    "label": 0
                },
                {
                    "sent": "I was wondering, you said you need all the result says often talking process to transform it and seems to be clear with for example project cloud service and no results are accepted or not accepted.",
                    "label": 0
                },
                {
                    "sent": "But what is if you have a service like June 8 San import and modify the latitude, longitude don't know the specific space or so this was.",
                    "label": 0
                },
                {
                    "sent": "I don't know how you can specify all these other states, no.",
                    "label": 0
                },
                {
                    "sent": "Basically the mapping is strong analysis process model to ispn everything that is in the process model will be mapped.",
                    "label": 0
                }
            ]
        }
    }
}