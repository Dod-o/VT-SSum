{
    "id": "5m4ummf7s53egszg36glbcc7itzf4hal",
    "title": "Algebraic Topology and Concurrency",
    "info": {
        "author": [
            "Lisbeth Fajstrup, Department of Mathematical Sciences, Aalborg University"
        ],
        "published": "Oct. 22, 2015",
        "recorded": "June 2015",
        "category": [
            "Top->Mathematics",
            "Top->Computer Science"
        ]
    },
    "url": "http://videolectures.net/solomon_fajstrup_topology_concurrency/",
    "segmentation": [
        [
            "I'm going to do what Prima said I'm going to tell you a little bit about how to politic.",
            "It's into these computer science areas and then I'm going to tell you a little bit.",
            "Also about what we've done, but not too much, because not too many proofs, because that will get me confused also."
        ],
        [
            "So I better not do that.",
            "So algebraic topology has always been applied or it was applied in the beginning.",
            "I mean this was why they started studying algebraic topology.",
            "I actually didn't know bout Maxwell that he has.",
            "He has talked about he, he thought you or he, sort of.",
            "Gave the ideas that led you to knot theory, and I know there are other ways of getting to knot theory, but I mean algebraic topology was.",
            "Meant to solve questions like that.",
            "Some of those questions turned out to be the wrong questions, but still.",
            "And of course Bunkeri started algebraic topology to study properties that came from physics, namely differential equations and things like that so.",
            "So algebraic topology is an applied subject except."
        ],
        [
            "Then for almost 100 years it was not.",
            "I mean this is not true.",
            "I mean this is not quite true, but I mean to what we usually call a curiosity driven subject and.",
            "Yeah, so it's not quite true, but it's more less true when, at least when I started studying it.",
            "It was not applied to anything which I didn't mind though."
        ],
        [
            "But in recent years things have happened.",
            "This is from Paris, I think maybe 2008 series of conferences, algebraic topological methods in computer science it was the was the translation of the acronym by then, or rather, this is what the acronym was.",
            "Made from and then.",
            "So these were methods in computer science and then the conference in 2010.",
            "The name changed, not the letters, because now it was not only computer science, it was algebraic topology, methods, computation, and science.",
            "So that meant that.",
            "There were other things you wanted to take into account so.",
            "Algebraic Topology is now this.",
            "Many years very theoretical subject is now used in computer science in statistics, in robotics, in, and what I'll talk about today in parallel computing and not so much.",
            "I'm sorry pretty much about distributed because I'm better with parallel then with distributed, not there.",
            "Sometimes I don't know what the differences but.",
            "So so there.",
            "So there are many applications of algebraic topology and."
        ],
        [
            "So in computer science, and these are the distributed people.",
            "This is Maurice Herlihy.",
            "Nir shavit.",
            "Then said your eyes bomb and Hurley and shove.",
            "It actually got the good price for.",
            "A result about computer asynchronous compute ability in from 1993.",
            "They got the I mean took some time for people to realize that this was a good theorem and it uses algebraic topology and they're still working using algebraic topology in distributed computing.",
            "So it's it's very much in there."
        ],
        [
            "And this is my main computer science collaborator, Google in 1992 he and Thomas Jensen, whom I don't have a picture of, started looking at homology of higher dimensional automata.",
            "And so that's sort of the beginning of the topic I'm looking at at topology to address problems in concurrency.",
            "So with Eric and other people, Fortunately now."
        ],
        [
            "And also of course, just to mention there are many many other applications.",
            "And since you're here, you've probably seen pretty much talk about some of these things, so you know about data analysis and and all these things, and I don't have pictures of all these guys, but you can look at people and Nisha so yeah.",
            "So so in many of these cases the.",
            "I mean so so So what what is."
        ],
        [
            "Common of these applications.",
            "Well, you need a geometric model, and usually you also need it to be combinatorial.",
            "If you want to come to calculate stuff.",
            "In many cases you apply existing algebraic topological methods, but also Fortunately, if you're on the math side, you sometimes have to make new math for this to work, you have to extend algebraic topology to answer these questions, so they give rise to new problems in mathematics, which is also fine.",
            "And some and so, and for this to be to work out, you need to give efficient algorithms.",
            "Otherwise nobody actually cares.",
            "And recently there's also combination with probabilistic methods, and so on.",
            "South end, as I said, my main example here is concurrency theory and.",
            "Directed topology, which I will tell you what is in it so."
        ],
        [
            "Concurrency, I don't know.",
            "Everybody probably knows what a concurrent program is, right?",
            "Or I mean, have you seen the dining philosophers know?",
            "Maybe not, these are the dining philosophers as I mean you can think about who they are if you.",
            "I should have printed them out.",
            "So the problem on this is a standard problem in concurrency theory.",
            "The dining philosophers.",
            "First, they want to eat.",
            "And here they want to eat spaghetti with two Forks.",
            "I don't know why and what they want to do is they want to pick up the right fork, pick up their left fork and then eat.",
            "And as we can all imagine, if everybody picks up the right fork, there is no lift fork.",
            "That's a deadlock.",
            "If everybody picks up their left foot, there's no right to pick up, and they said deadlock.",
            "So problems like that where?",
            "There's a.",
            "There's a task which is getting all everybody has to eat their spaghetti.",
            "That has to be solved by different in different processes or and they have to.",
            "They have to collaborate through shared media or shared resources.",
            "In this case the Forks that only allow a certain number of accesses at a time.",
            "Only one person can take each fork, so that's that's typical example of a concurrent program.",
            "So they dining philosophers.",
            "They use that to test whether algorithms work.",
            "How fast does it work?",
            "If you have 100 dining philosophers, and I mean which I hope you don't, but still."
        ],
        [
            "So non parallel programs.",
            "We have very good and established models here.",
            "This is a picture of a Turing machine.",
            "Apparently according to Wikipedia and so this is a tape.",
            "And here's the machine in the middle.",
            "So a Turing machine will describe a non sequential program.",
            "Or you could have an automaton.",
            "This is I think, some faints that opens and locks if you put a coin name or something like that.",
            "So so so these are well known models for.",
            "For when you have one process.",
            "An end."
        ],
        [
            "So now if you have parallel programs, well, I mean if you have five programs 12345.",
            "Well, could you just tab five of these things?",
            "Five Turing Machines, 55 graphs or automata?",
            "And it turns out that doesn't that doesn't work.",
            "And why doesn't it work?",
            "It's because these things are not alone in the world they're interacting with each other, like the philosophers later, they're not.",
            "I mean, they're sitting around this table so."
        ],
        [
            "We need something that's more complicated or more, I mean.",
            "Pro that somehow takes care of this interaction between the processes, and there are several models and their religious wars about which ones are good good and which ones are not.",
            "Which ones are the best ones?",
            "I mean, Petri Nets are the ones that.",
            "You may have seen where people move coins around graphs and they have a number of coins and.",
            "And interleaving semantics is another one.",
            "Higher dimensional automata is is a higher dimensional version of what you saw.",
            "The graph with the automaton.",
            "Here I'm going to the model I am going to talk about is.",
            "I think the one that gets you quickly too.",
            "To geometry and topology, but I could have taken higher dimensional automata.",
            "That's another one.",
            "It's just there's a little it takes a little longer, so you'll have to look that up afterwards.",
            "Maybe so.",
            "I'm going to sew the model."
        ],
        [
            "Going to use is this one.",
            "This is.",
            "I mean this is geometry less obvious, So what does it mean?",
            "It means along here I have one process along here.",
            "I have another process and you can think about this as is 2 dining philosophers if you wish.",
            "So what does this mean?",
            "This means that this one wants access to resources a then he wants to access to resource B release be release A and this one wants it in the opposite direction.",
            "So if is this guys right fork in this guys left work then I think it's the timing philosophers two people across from each other.",
            "And.",
            "The model here is that these resources allow only one.",
            "Thread or process to access them at a time.",
            "So this means that.",
            "So this means that this joint state where this guy is here and this one is here.",
            "That's a place where they both have a lock on this resource B and they cannot have that.",
            "So this means this state is just not this is forbidden or whatever you want to call.",
            "So this is a picture of.",
            "All the states that these this joint program.",
            "They do this.",
            "In a common setting, this joint program looks like it looks like this, and you can imagine more complicated geometrical geometric figures.",
            "You could also imagine that.",
            "Maybe T1 is a graph.",
            "It has loops and it has.",
            "It has choice, that is branchings and so on.",
            "I mean it could.",
            "It could be quite.",
            "Complicated, but this is this is the model."
        ],
        [
            "And the general model looks like this.",
            "So these are PV programs.",
            "It goes back to Dijkstra, Dutch computer scientist in the 60s, I think, maybe 70s.",
            "So in general there's a set of shared resources.",
            "They each have a capacity.",
            "The maximal number of locks that can be held on them, and a PV program is then a sequence of such.",
            "I want access to this resource if I can, and if I can, I will lock it and this is I will release this resource that I had and then you can.",
            "I mean, this is just that you could have them one following each other.",
            "You can run two in parallel and you can.",
            "You can have choice and then you can loop.",
            "So this is very very simple.",
            "Set of programs and the thread.",
            "I'll call it a thread.",
            "When I when I have no parallel operator and I will also assume that at the start and at the at the end I don't have any locks on anything.",
            "And that doesn't mean anything for what you do because it's just a question of you could you could change the capacity function if someone had already logged something at the beginning, but I mean there are various ways, so this is a general setting."
        ],
        [
            "So geometrically, if you have one thread, it's a graph.",
            "And if I have any threats, then it's not just in copies of graphs, it's a product of graphs and then I have holes in them.",
            "Or blue areas, so that's that's the model.",
            "Here I've taken a symmetric thing, so they want to do the same thing, and this is the kind of interaction there is, and this is these are the forbidden regions if the capacity is one that they can only cater for one at a time."
        ],
        [
            "And if the capacity is more than one, I mean these two can do whatever they want.",
            "They can get access to whatever they want, so so so the picture depends on also the capacity of these resources so."
        ],
        [
            "And execution is then a directed path from start to end.",
            "So here's one that goes from.",
            "So I'm thinking about start here in the end of their, so here's one that goes from there to there.",
            "And there's also this one, which is the sequential one, where first T1 goes then T two goals.",
            "And this.",
            "And similarly, I have here and then first two goals and then.",
            "T1 go so these are these are examples of directed paths and when I say directed, I mean that they have to be increasing or rather non decreasing in both coordinates.",
            "OK, time doesn't run backwards, so that's sort of for.",
            "For each of these things, OK, so this is.",
            "This is the start of the model, but it gets, but there's no topology here.",
            "I mean this is not topology, this is geometry on a good day, but it's not.",
            "It's certainly not topology yet."
        ],
        [
            "But Fortunately in this model of computer, scientists say that executions are equivalent.",
            "Well, this is a definition of equivalence in.",
            "I mean in general that they are equivalent if they given the same output, will give the same given the same input will give the same output.",
            "I mean that makes sense, but in this model that's the same thing as saying that the corresponding.",
            "Pass.",
            "Can be deformed into each other, so if you look at the picture I."
        ],
        [
            "Before this one.",
            "Is equivalent to that one.",
            "Because more or less the interaction they have with the shared objects are the same, so that's more than.",
            "Let's approve, not, not really, but something."
        ],
        [
            "That so once you have.",
            "That an equivalence relation that that has to do with continuously deforming things.",
            "Then you are in topology.",
            "This is what we're good at.",
            "This is what topology does."
        ],
        [
            "And because, well, I mean the mathematics or deformation of the mathematics of holes or whatever.",
            "I mean that's.",
            "That's topology, so here.",
            "So what does it mean to deform a path?",
            "It means the pictures here.",
            "So here's a green path.",
            "I think it runs from P to Q, and here's a blue path that also runs from.",
            "P2 Qi guess so.",
            "A deformation is a map from this.",
            "Rectangle which sends the law edge here into the green one.",
            "The top edge into the blue one sends everything here into what to that point.",
            "Everything here to that point and then is continuous.",
            "So this means that all along the way whenever I fix a point here, I or a time.",
            "A point here.",
            "This will be.",
            "This will correspond to a path over here, so this is a family of paths leading from the green one to the blue one over the blue one to the green one depending what you on what you want.",
            "So that's defamation and that is.",
            "I mean that's been known, I guess point continue that I'm sure."
        ],
        [
            "So in the plane here's this works very well in the plane.",
            "I mean, if you have an example in the plane, you homotopy equivalence will tell you that there are four.",
            "Executions for qualitatively different executions.",
            "Which is good, because if you want to verify that this program does what it is supposed to do, there are only four executions to verify and not all.",
            "I mean, you should imagine that this can be very complicated.",
            "They could between here there could be lots and lots and lots of steps, so there's already been some reduction in the state space just by by only looking at the piece in the vise.",
            "So so this looks very good.",
            "It looks like OK, so.",
            "Right topology does the job."
        ],
        [
            "But and here's my yeah, sorry bout that.",
            "I'm from Denmark.",
            "We do Lego so this is an example that that shows.",
            "So this is a 3D example.",
            "So what is the example you want to run from here?",
            "Two here, so the time direction is there there and up.",
            "And there's an obstruction here and obstruction here.",
            "And then there's one here that you can imagine is floating, which of course it isn't because it's Duplo block, but.",
            "And then.",
            "Op two if you want to.",
            "If you use Homer to be here, then this one that goes here goes this way and then that way around that one, you can move that over here and down here if you want to.",
            "But on the way you're going to go.",
            "Backwards in time.",
            "Can you see that?",
            "I mean, one of the paths you have on the way.",
            "If you try to deform this one to that one.",
            "Will go in front, go too much to this site.",
            "It has to go back to get back under that thing.",
            "Because this block is sort of sticking out.",
            "So, so why is that a problem?",
            "Well, that's a problem, because this means that homotopy is 2 course relation, because these executions, the one that goes there and the one that goes there and in front of this one and under this one.",
            "They are not equivalent executions, but they are homotopic paths, so we need something that that so we need to introduce some new some new stuff here.",
            "And this is, I mean, this is a good thing because this gives me the.",
            "This gives me a lot of new papers to write.",
            "So so this is where we introduce directed topology to study these things.",
            "So we only want to.",
            "We don't want to have homotopy, we want to have directed homotopy directed deformation."
        ],
        [
            "So directed topology.",
            "What is that well?",
            "AD space is a topological space, so this is a very general setting and much more general than what I had before, but I have a topological space and then I have taken some of the paths a subset of the set of paths.",
            "And so I've just pointed in some of them.",
            "Is that OK?",
            "You the directed paths?",
            "Anne and.",
            "Then this operation of of picking out which one I want to call direct, it has to be closed under concatenation.",
            "If I have a directed path and connected with a concatenated with another one, the whole thing is going to be be directed all the constant path so directed well, I mean that you could debate whether you want, but they are and then is closed under taking some path if it's directed.",
            "If this is a directed path in this piece is also directed path and you can reprogram it twice.",
            "In a directed way.",
            "So this opens a whole.",
            "This is a whole new world.",
            "You can start studying.",
            "What spaces do we have?",
            "I mean and what not?",
            "But what are the?"
        ],
        [
            "Samples.",
            "Well.",
            "The examples are, I mean the ones I showed you before.",
            "I like this you have RN or you have a subset of RN.",
            "And in these cases it's been R2 and R3.",
            "And then a directed path is 1, which is increasing in all coordinates or nondecreasing in all coordinates.",
            "Or you could take it a little further and say you have a product of direct directed graphs and then a directed path is again one which is a directed path for each coordinate.",
            "So so that's I mean, so that's at least these are the main examples, but you can of course.",
            "I mean you can find many really ugly examples if you want to, but let's leave that.",
            "So in general we want to have this sort of order structure, rather local order structure.",
            "If you think about a directed graph.",
            "If there's a loop you don't really have an order structure, you only have it locally.",
            "But still you know what it is to be a directed path in there, so we only.",
            "So we only have we only ask for local orders because otherwise well, otherwise we don't have loops, and yeah, so in this model we are.",
            "The SpaceX is the state space and these directed paths are the executions or the half way through executions.",
            "Parts of an execution.",
            "So this is the model.",
            "Or this is the new map.",
            "OK, so."
        ],
        [
            "Now directed homotopy is then just that you ask for.",
            "I mean the definition is the same as before, you just ask for all these image of all these to be directed path.",
            "So this should all be directed paths.",
            "I mean all along the way you should deform through directed paths.",
            "And clearly that's a stronger requirement.",
            "I mean in some cases then to perform just through path.",
            "So this is what it means because I put in an arrow up there.",
            "That's just notation."
        ],
        [
            "No.",
            "So now we get the.",
            "I mean, this is what it was made for.",
            "So clearly this works.",
            "Execution paths are directed homotopic if and only if they are well.",
            "Yeah, so there what I should have had something of well so execution path they are so this is equivalent.",
            "They're equivalent executions if and only if they die homotopic.",
            "I forgot that one and this is the same as being in the same connected component of the path space.",
            "If anybody wants to know that so.",
            "So we have.",
            "So we have a machine to look at this and we have new math to look at this right?",
            "So what if we?"
        ],
        [
            "So what did we do well?",
            "We can now if we have such.",
            "Model of a PV program.",
            "Then there is an algorithm that produces that gives a simplicial model or prod simplicial model, but it gives a combinatorial model of the of the space of executions and we've implemented it, or the French guys have and the output is.",
            "Well, the homology of the space of executions, and in particular you get it representative of each component.",
            "That is, you get.",
            "The execution paths on which you have to verify your program.",
            "So.",
            "So this I mean.",
            "So this is, I mean the French guys claim that this is a good thing.",
            "So let's say they say it's a good thing.",
            "Yeah, so you only need to verify your program on these.",
            "These paths.",
            "Yeah.",
            "The problem with this I should perhaps say is that this is not.",
            "I mean, the algorithm is.",
            "I mean it's.",
            "It's not very efficient and whether that's because it is combinatorially difficult, or whether it's because the algorithm isn't good and we haven't thought about it long enough that it's unclear to me.",
            "I don't know.",
            "I mean, I think in bad cases it will be bad, but.",
            "Well."
        ],
        [
            "In directed topology was I mean what can you study now?",
            "You have new math.",
            "Well, we can study die, homotopy di homology.",
            "We have some of each of these things.",
            "I mean, we don't have all of it we have.",
            "So directed homotopy, we have some definitions.",
            "We have some calculations, we have a fan company theorem and some other things that we want.",
            "Die homology is much more open.",
            "It's not clear really what that is.",
            "There are, I mean, they're different suggestions and different calculations on these things, but it's not.",
            "I mean they're not.",
            "Yeah, I think we're converging at what we mean by that.",
            "And so you can ask for algorithms.",
            "I mean, what algorithms can we get better algorithms?",
            "And right now my sink housing and other people are looking at connections who configuration spaces?",
            "Nothing I've been looking at is equivalent of programs which, on the computer Science site is supposed to spy simulation and I can.",
            "Formulate that also in the world of these directed spaces and give give some.",
            "Results on that so that branches call that part of directed topologies called eye coverings.",
            "And if they are in the homotopy theorists present, they will say, do you have a model structure?",
            "No, so, but maybe I don't know if we want one, but we don't have One South.",
            "But this, you're supposed to tell people that if you do homotopy theory."
        ],
        [
            "Yeah.",
            "So I'm going to tell you about 2 problems that we've tried to address other than the ones that.",
            "I mean the ones with the trace based algorithm that Martin has.",
            "So here's.",
            "Here's a question that some people ask me.",
            "That is, do you have some?",
            "Actually, they said do you have cut off results?",
            "And I said I don't know what a cut off theorem is, but maybe so here's one thing you might worry about, namely serializability.",
            "So serializability.",
            "So The thing is that.",
            "If you want to verify that a program does what you expect it to, it's quite easy.",
            "If all paths are all executions are in fact equivalent to.",
            "Serial executions.",
            "And then you can.",
            "Then you can ask.",
            "Well, why don't you just do it serially then?",
            "Well, because it's faster to do it in.",
            "I mean, it can still be faster because you might.",
            "I mean, it might be faster to go something like this.",
            "So so so this is one question you can ask, are all executions actually?",
            "Equivalent to.",
            "Exclusions at a serial, meaning that this one goes 1st and this one goes first.",
            "Well here they are.",
            "This green one can be deformed out to that one.",
            "This green one can be deformed out to that one an so.",
            "So that's a question you could ask."
        ],
        [
            "Another question you can ask in which we have we have algorithms for is.",
            "Ann is something that's also very clear to see when you look at these models.",
            "These are deadlocks.",
            "I mean, we also there was also one with the with dining philosophers, so these are deadlocks.",
            "These are these red areas.",
            "If you're in there, you don't get out.",
            "You're going to stay if you don't get to or you don't get to finish your.",
            "Program so we have an algorithm that tells you how to, how to avoid these or where they are and where the forbidden are where the associated red area is an even more.",
            "More interesting and more useful is that we can also find these things.",
            "So what is these?",
            "What are these things?",
            "Well, it's a symmetric thing in the sense that they are the ones from that you cannot reach if you go from here.",
            "The unreachable.",
            "Areas or regions?",
            "And why would it be good to to know where they are?",
            "Well, because if you've got it things behind, I mean there might be bad states in this.",
            "You might want to know about that.",
            "They're easy to find because it's just running the deadlock algorithm backward with the time direction going this way.",
            "These are then you find these areas.",
            "As the unreachable regions so and for that, we have.",
            "That algorithm is actually quite efficient, so yeah.",
            "So this we have."
        ],
        [
            "But back to serializability, so.",
            "If you have a parallel program, it's serializable if all the execution paths are equivalent or die homotopic as it is to a serial execution.",
            "And so this is a.",
            "This is a whole program.",
            "And what does it mean that if I if I have one thread, it's serializable, if any.",
            "Instance of running it in parallel with itself is serializable.",
            "So why would we care about that?",
            "Well, I mean you don't know how many are going to run whatever program you put out on the Internet.",
            "I mean how many are going to run that in.",
            "In the parallel, so this is apparently something they care about, so can you, so here's."
        ],
        [
            "Serializability for capacity one.",
            "This program is that T is not serializable because.",
            "Well, if I run it just together with itself, once that is I get a 2D thing, then it's not serializable.",
            "And in fact, it turns out."
        ],
        [
            "See, that's what I have here.",
            "If all resources have capacity one, then to see whether something is serializable, I only have to check the plain version, so this means that it's really easy to test for serializability of T to whatever end, because you only have to take T to the two.",
            "T running parallel with itself.",
            "So OK, so that's kind of.",
            "Nice.",
            "And this is a property of the symmetric case that I have running T in parallel with itself.",
            "I mean, since yeah, so I think I have a picture here."
        ],
        [
            "Yeah, so here are three programs and they share 12123 resources and the pairwise T1 parallel with TT3 is Paris serializable because there's only this whole T2 together with T1?",
            "Is this whole and T1 and T3?",
            "Is this whole, so they're they're serializable?",
            "There's only one choice below or above the whole, whatever below and above means.",
            "But if you look at them.",
            "Together, these three in parallel.",
            "Well then this path, which goes over this one and in front of this one and back.",
            "This one is is not serializable because it's sort of caught up in this combined problem.",
            "So in general it's not true that you can just check the pairwise even if this is a capacity one problem.",
            "But for the symmetric thing it is."
        ],
        [
            "So, and this is because in the symmetric case it looks like this.",
            "So what is that?",
            "Those are three cylinders, a goal through.",
            "Like this, so I also have one resource of capacity one and they all and they all want to do PVM.",
            "And this gives me that the forbidden area looks like this and there are three factorial 6 serial executions and they are pairwise inequivalent because they you cannot permute any of them because of because they correspond to.",
            "Choice is it at either this one or that one or that One South?",
            "So these are pairwise inequivalent and then the point is that.",
            "This is what it looks like in general."
        ],
        [
            "So in general, if I have a non trivial T, well nontrivial, otherwise it's really not interesting, then all the N factorial serial executions in T2 then it should say unknown equivalent.",
            "And if T2, the two is serializable, then these are the only choices you have go above or go below.",
            "So that means that all.",
            "That all die paths in T to the NR determined by this go above or below in the.",
            "Restriction to the two dimensional case or going above and below all these generalized cylinders.",
            "So this means that if T2, the two serializable in T2, the is serializable.",
            "So that's easy or."
        ],
        [
            "Well, so now you have to care about whether T to the two is serializable.",
            "Well, this one isn't, but what does it take?",
            "Well, that's actually well known from the 70s."
        ],
        [
            "Think.",
            "So well, I mean geometrically it is that if the choice at one of these sub rectangles implies the choice at other, all of the rectangles, then then you.",
            "Then you have serializable.",
            "So it looks like it's it's connected this region and also over here it looks like it's connected.",
            "But that's actually you don't need that."
        ],
        [
            "I mean, you can have that it's disconnected, it just has to be sort of.",
            "Hidden an yeah Cockies property immediately when komena paper in 1979.",
            "It even is says that what you have to do is look at the closure of the forbidden area and I don't.",
            "They don't say in that way, but this is what it translates to under adding unreachable and unsafe areas that this is connected and this is what happens here.",
            "If I close this off and I.",
            "Then I then it's connected, so this is the.",
            "The statement then it's quite easy to see why that has to be true so.",
            "Capacity 1 easy capacity, higher not so much."
        ],
        [
            "So yeah, so I think maybe I'll skip this.",
            "Well, yeah, no, this is just how I mean.",
            "How much easier is the symmetric case?",
            "I mean how in general how much easier is the symmetric case well?",
            "If you have a non symmetric key, so T1, parallel T2 parallel TNU can mimic that by taking T to be the sequential.",
            "These put sequentially and then taking taking that to the key in that thing to the K. You have copies of these.",
            "You actually have what?",
            "K factorial copies of these so.",
            "Whatever problems you can find in the in the non symmetric case, you can actually also find them in the symmetric case.",
            "If you think about dead logs and so on and so forth.",
            "It will also be there in some way, so it's I mean it can be quite complicated.",
            "Actually, even if it's symmetric, I think this if you think about it, it's pretty.",
            "It's not.",
            "It's not difficult, but it's well.",
            "You have to think about it so, so the symmetric cases.",
            "Yeah, it's not so I can't expect it to be easy.",
            "I mean I would like to know more about it.",
            "I do try to group actions and so on.",
            "It doesn't seem to give me so much, so maybe not."
        ],
        [
            "So what about fog at the capacity?",
            "More than One South?",
            "Then you are.",
            "I mean, if you look at it in well in them in the plane, you know they don't have any forbidden area in the.",
            "So here's another three, and here's an example that we always use.",
            "Just because we were surprised when we realized it.",
            "So this is an example in.",
            "Clearly if you have in dimension 3, you build sort of a circle by.",
            "Having these cubes you built that you can build a circle so that you get a real hole then.",
            "I mean, then then there's homotopy, and certainly also die homotopy.",
            "So there are things that cannot be deformed to the boundary because you have a real whole.",
            "Let it go through, but this thing is not a real hole.",
            "This is, this is supposed to be away July or sort of thing like this.",
            "And then the thing like this and they sit so that if you go under here and go out there.",
            "Well then you can.",
            "I mean, if you look at how much you can certainly get out of there.",
            "If you look at the RCT homotopy, you cannot, so that is this path that goes in the middle.",
            "There is non serializable so so so that tells you that the question is not you cannot answer just by saying that everything is generalizable well.",
            "A thing you can see, which I mean you can see it in this 3D example, but it holds all the way up.",
            "Is that all serial executions are in fact equivalent because all two sales on the boundary are are allowed there no, no forbidden area on the 2 dimensional subsets on the boundary.",
            "So.",
            "So this is one thing you can see.",
            "Another thing you can see is well, if you run the scheduling algorithm then the OR the algorithm that we have implemented then we can calculate the components of this space of paths or traces or whatever.",
            "And if there's more than one component then it's non serializable.",
            "Why?",
            "Well, because all the serious ones are equivalent.",
            "So they form a connected component.",
            "So there are ways you can get get to this, but if I want to.",
            "To say something about what happens when I run.",
            "One thread to hire two to the end.",
            "That is, I want to cut off theorem then."
        ],
        [
            "Gets more complicated.",
            "So I think I'll skip, so this is."
        ],
        [
            "It's just there is in fact we do know something.",
            "So first of all I mean to get a problem you need something like a witch and a witch.",
            "So this is more or less what this is.",
            "There has to be some local someplace where there is a choice that cannot be locali undone.",
            "So this means that there is a path running here, path running here and no matter how you try, you cannot connect these two up.",
            "If there is such a thing, if there are no such local place such places locally, then everything is homotopic to everything or die homotopic to everything.",
            "So that's what this local homotopy extension thing says, and it's more general than this.",
            "But I mean this is the consequence in in in my case here.",
            "So.",
            "I do know that these local local choices, if there aren't any of those, then all die paths are die homotopic, so that can at least tell me something because that name, namely that means that if there are no local choice points then everything is then it is serializable and here is a cut off theorem, namely that if there are no local choice points in T2, the.",
            "Where M is in this.",
            "So this is a lot worse than two.",
            "M is the sum of the capacities of all the resources I have.",
            "And then plus one if there are no local choices there, then there aren't any local choices anywhere, so that's worse.",
            "But still.",
            "I mean it means you check one place and then then you're done.",
            "So yeah, so that's.",
            "I mean, that's the kind of result.",
            "It's it's not perfect because it's because I because I don't have it the other way around.",
            "I don't know that if there is a local choice point then there is directed homotopy.",
            "If I only have one of these wedges, then everything is serializable.",
            "But there is a choice here in the beginning, so it's so it's not perfect, but it's what I have so far.",
            "I would like to have more."
        ],
        [
            "And why is the theorem true maybe?"
        ],
        [
            "I should skip that."
        ],
        [
            "But it is so well.",
            "Yeah, so that's proof by fast slides.",
            "So is this a sharp bound?",
            "I mean can I could I get it further down?",
            "Well I can.",
            "I have an example where I have a local obstruction at T to the N -- 2.",
            "So M was my cut off and there are no local obstructions before.",
            "So I can get to M -- 2 and this is So what is this?",
            "This is a program where.",
            "So I start by asking for the resource one, and then while I hold that I ask for Resource 2, then I release one ask for three release to ask for four, and so on and so forth.",
            "And in the end I asked for one and release and release the last one and then release one again.",
            "So that gives me a sort of.",
            "It gives me a cyclic dependence of these things.",
            "That's what that's what.",
            "That's what it's what I've cooked it up to to do.",
            "And actually I can see that if I.",
            "If I take a point.",
            "So this point is So what is that so this?",
            "So how many of these?",
            "I have these these these are have as many as the capacity of our sub K. So these are all at this place.",
            "They all asking for the resource one while holding Resource K Kappa to its full capacity.",
            "These are asking for resource #2 while holding resource number one and so on and so forth.",
            "So they're all holding things that all the other guys want.",
            "Right, so that's a deadlock.",
            "So now if I just take one of them and say this one doesn't hold it to its full capacity, well then that is infected Choicepoint.",
            "If you think about it, so that is so.",
            "That means at this point is where is it?",
            "How many copies of this mighty do I have?",
            "I have the sum of the capacities and then minus one, and my aim is actually the sum of the capacities.",
            "Plus ones are, so that's quite quite there, but.",
            "So, so it might be that I can bring him two down, but but it's not.",
            "It's not that big a problem because there if there is a choice point here then there's also one higher up because yeah, so we get to that.",
            "So it's not that big a problem, but.",
            "Yeah, and cooking up examples like that is sort of my 40I loved him.",
            "It's counter examples and examples.",
            "Let's."
        ],
        [
            "So here, So what about this example?",
            "Well, this is.",
            "This is of course not a. I mean, this is not symmetric, but I can make it symmetric by doing like this and then running this in parallel with itself and it gets a Choicepoint in T2, the three which is 2 + 2 -- 1, so it's again.",
            "Minus one, so it's not yeah.",
            "So again, maybe in minus.",
            "Two, yeah so.",
            "So I get the yeah so that's it.",
            "So again, it might be in minus two or I haven't thought hard enough about the example that might also be who knows so."
        ],
        [
            "Then so why is it a cut off?",
            "Why do I know?",
            "Well, if I had a local Choicepoint before lower?",
            "Then I just add the that all I add some extra copies of my my my thread and I assume that they have all at the top, which means that this will also be a local choice point because they cannot move.",
            "So there's still a local choice point there an if I have something that's above M, then I have removed all those where no process is locked.",
            "And then I read and so so how many are left?",
            "Well, the sum of the capacities, but maybe I need.",
            "Maybe then no one is asking for this resource are so This is why I get my plus.",
            "My plus one here because I yeah so well so.",
            "So it is so that's how the cut offs go."
        ],
        [
            "And I also had a avocado for deadlocks.",
            "I know where to look for deadlocks, and that is at the sum of the capacities and this I have.",
            "This is this is sharp.",
            "I know that this is sharp because for.",
            "For that process I had before or that thread I had before it said deadlock it at the cut off and not before so so I can realize that no matter what.",
            "See what resources what set of resources and what capacity function they have I can realize.",
            "I may have to go onto it all the way to T to them to find to find the deadlock, so that's so.",
            "That's a cut off, yeah?",
            "So I'm getting too."
        ],
        [
            "So there's more to do, Fortunately.",
            "Otherwise, we should all go home.",
            "Which should we should anyway?",
            "And so serialized, busy.",
            "So I'm not done, right?",
            "So serializability ability for Cabot greater than in.",
            "And then this thing that it doesn't.",
            "It only says something about local obstructions.",
            "Other cut off problems.",
            "And then I mean other problems in directed topology.",
            "There are lots of them, homology, homotopy, whatever.",
            "And there's also there.",
            "Many problems in.",
            "I mean in concurrency theory that you might try to address.",
            "This way we are by now trying to connect up this geometric description of of distributed computing, which on sort of on the face of it looks like it's very different.",
            "But we think it might not be.",
            "I mean there are some translations between the two, but I mean these are two groups and it's hard to.",
            "I mean, yeah, it's hard to connect these things up, but we believe that.",
            "That there is a connection between these two things and one might.",
            "Help the other one so so there's a lot more to do, and it's I mean it's a young subject director topology it's I mean we invented or discovered.",
            "I mean, that's discussion.",
            "I know in in back in 96 so it's well, it's that old for a math subject."
        ],
        [
            "And here's the commercial.",
            "We have a book, so it's that old.",
            "There's a book coming out at least, I hope because it depends on people like me doing something in within the next 2 weeks.",
            "But there's a book coming out in Springer briefs in mathematics by.",
            "So it's somewhere in my mom and Eric Ben\u00e9t, Manuel, who they already called pull technique in Paris.",
            "And then it's Martin Rowson, my colleague in Elbow, and then so long set of authors.",
            "And I put some well in front because he's done most of the work so clearly.",
            "So which is which is good for somebody had to.",
            "Otherwise there would be no book, that's for sure.",
            "So yeah, so thank you."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I'm going to do what Prima said I'm going to tell you a little bit about how to politic.",
                    "label": 0
                },
                {
                    "sent": "It's into these computer science areas and then I'm going to tell you a little bit.",
                    "label": 0
                },
                {
                    "sent": "Also about what we've done, but not too much, because not too many proofs, because that will get me confused also.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So I better not do that.",
                    "label": 0
                },
                {
                    "sent": "So algebraic topology has always been applied or it was applied in the beginning.",
                    "label": 0
                },
                {
                    "sent": "I mean this was why they started studying algebraic topology.",
                    "label": 0
                },
                {
                    "sent": "I actually didn't know bout Maxwell that he has.",
                    "label": 0
                },
                {
                    "sent": "He has talked about he, he thought you or he, sort of.",
                    "label": 0
                },
                {
                    "sent": "Gave the ideas that led you to knot theory, and I know there are other ways of getting to knot theory, but I mean algebraic topology was.",
                    "label": 1
                },
                {
                    "sent": "Meant to solve questions like that.",
                    "label": 0
                },
                {
                    "sent": "Some of those questions turned out to be the wrong questions, but still.",
                    "label": 0
                },
                {
                    "sent": "And of course Bunkeri started algebraic topology to study properties that came from physics, namely differential equations and things like that so.",
                    "label": 1
                },
                {
                    "sent": "So algebraic topology is an applied subject except.",
                    "label": 1
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Then for almost 100 years it was not.",
                    "label": 0
                },
                {
                    "sent": "I mean this is not true.",
                    "label": 0
                },
                {
                    "sent": "I mean this is not quite true, but I mean to what we usually call a curiosity driven subject and.",
                    "label": 0
                },
                {
                    "sent": "Yeah, so it's not quite true, but it's more less true when, at least when I started studying it.",
                    "label": 0
                },
                {
                    "sent": "It was not applied to anything which I didn't mind though.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "But in recent years things have happened.",
                    "label": 0
                },
                {
                    "sent": "This is from Paris, I think maybe 2008 series of conferences, algebraic topological methods in computer science it was the was the translation of the acronym by then, or rather, this is what the acronym was.",
                    "label": 0
                },
                {
                    "sent": "Made from and then.",
                    "label": 0
                },
                {
                    "sent": "So these were methods in computer science and then the conference in 2010.",
                    "label": 1
                },
                {
                    "sent": "The name changed, not the letters, because now it was not only computer science, it was algebraic topology, methods, computation, and science.",
                    "label": 1
                },
                {
                    "sent": "So that meant that.",
                    "label": 1
                },
                {
                    "sent": "There were other things you wanted to take into account so.",
                    "label": 0
                },
                {
                    "sent": "Algebraic Topology is now this.",
                    "label": 0
                },
                {
                    "sent": "Many years very theoretical subject is now used in computer science in statistics, in robotics, in, and what I'll talk about today in parallel computing and not so much.",
                    "label": 0
                },
                {
                    "sent": "I'm sorry pretty much about distributed because I'm better with parallel then with distributed, not there.",
                    "label": 0
                },
                {
                    "sent": "Sometimes I don't know what the differences but.",
                    "label": 0
                },
                {
                    "sent": "So so there.",
                    "label": 0
                },
                {
                    "sent": "So there are many applications of algebraic topology and.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So in computer science, and these are the distributed people.",
                    "label": 1
                },
                {
                    "sent": "This is Maurice Herlihy.",
                    "label": 0
                },
                {
                    "sent": "Nir shavit.",
                    "label": 0
                },
                {
                    "sent": "Then said your eyes bomb and Hurley and shove.",
                    "label": 0
                },
                {
                    "sent": "It actually got the good price for.",
                    "label": 0
                },
                {
                    "sent": "A result about computer asynchronous compute ability in from 1993.",
                    "label": 0
                },
                {
                    "sent": "They got the I mean took some time for people to realize that this was a good theorem and it uses algebraic topology and they're still working using algebraic topology in distributed computing.",
                    "label": 1
                },
                {
                    "sent": "So it's it's very much in there.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And this is my main computer science collaborator, Google in 1992 he and Thomas Jensen, whom I don't have a picture of, started looking at homology of higher dimensional automata.",
                    "label": 1
                },
                {
                    "sent": "And so that's sort of the beginning of the topic I'm looking at at topology to address problems in concurrency.",
                    "label": 0
                },
                {
                    "sent": "So with Eric and other people, Fortunately now.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And also of course, just to mention there are many many other applications.",
                    "label": 0
                },
                {
                    "sent": "And since you're here, you've probably seen pretty much talk about some of these things, so you know about data analysis and and all these things, and I don't have pictures of all these guys, but you can look at people and Nisha so yeah.",
                    "label": 0
                },
                {
                    "sent": "So so in many of these cases the.",
                    "label": 0
                },
                {
                    "sent": "I mean so so So what what is.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Common of these applications.",
                    "label": 0
                },
                {
                    "sent": "Well, you need a geometric model, and usually you also need it to be combinatorial.",
                    "label": 0
                },
                {
                    "sent": "If you want to come to calculate stuff.",
                    "label": 0
                },
                {
                    "sent": "In many cases you apply existing algebraic topological methods, but also Fortunately, if you're on the math side, you sometimes have to make new math for this to work, you have to extend algebraic topology to answer these questions, so they give rise to new problems in mathematics, which is also fine.",
                    "label": 1
                },
                {
                    "sent": "And some and so, and for this to be to work out, you need to give efficient algorithms.",
                    "label": 0
                },
                {
                    "sent": "Otherwise nobody actually cares.",
                    "label": 1
                },
                {
                    "sent": "And recently there's also combination with probabilistic methods, and so on.",
                    "label": 0
                },
                {
                    "sent": "South end, as I said, my main example here is concurrency theory and.",
                    "label": 0
                },
                {
                    "sent": "Directed topology, which I will tell you what is in it so.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Concurrency, I don't know.",
                    "label": 0
                },
                {
                    "sent": "Everybody probably knows what a concurrent program is, right?",
                    "label": 1
                },
                {
                    "sent": "Or I mean, have you seen the dining philosophers know?",
                    "label": 0
                },
                {
                    "sent": "Maybe not, these are the dining philosophers as I mean you can think about who they are if you.",
                    "label": 0
                },
                {
                    "sent": "I should have printed them out.",
                    "label": 0
                },
                {
                    "sent": "So the problem on this is a standard problem in concurrency theory.",
                    "label": 0
                },
                {
                    "sent": "The dining philosophers.",
                    "label": 0
                },
                {
                    "sent": "First, they want to eat.",
                    "label": 0
                },
                {
                    "sent": "And here they want to eat spaghetti with two Forks.",
                    "label": 0
                },
                {
                    "sent": "I don't know why and what they want to do is they want to pick up the right fork, pick up their left fork and then eat.",
                    "label": 0
                },
                {
                    "sent": "And as we can all imagine, if everybody picks up the right fork, there is no lift fork.",
                    "label": 0
                },
                {
                    "sent": "That's a deadlock.",
                    "label": 0
                },
                {
                    "sent": "If everybody picks up their left foot, there's no right to pick up, and they said deadlock.",
                    "label": 0
                },
                {
                    "sent": "So problems like that where?",
                    "label": 0
                },
                {
                    "sent": "There's a.",
                    "label": 0
                },
                {
                    "sent": "There's a task which is getting all everybody has to eat their spaghetti.",
                    "label": 0
                },
                {
                    "sent": "That has to be solved by different in different processes or and they have to.",
                    "label": 0
                },
                {
                    "sent": "They have to collaborate through shared media or shared resources.",
                    "label": 0
                },
                {
                    "sent": "In this case the Forks that only allow a certain number of accesses at a time.",
                    "label": 0
                },
                {
                    "sent": "Only one person can take each fork, so that's that's typical example of a concurrent program.",
                    "label": 0
                },
                {
                    "sent": "So they dining philosophers.",
                    "label": 0
                },
                {
                    "sent": "They use that to test whether algorithms work.",
                    "label": 0
                },
                {
                    "sent": "How fast does it work?",
                    "label": 0
                },
                {
                    "sent": "If you have 100 dining philosophers, and I mean which I hope you don't, but still.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So non parallel programs.",
                    "label": 0
                },
                {
                    "sent": "We have very good and established models here.",
                    "label": 0
                },
                {
                    "sent": "This is a picture of a Turing machine.",
                    "label": 1
                },
                {
                    "sent": "Apparently according to Wikipedia and so this is a tape.",
                    "label": 0
                },
                {
                    "sent": "And here's the machine in the middle.",
                    "label": 0
                },
                {
                    "sent": "So a Turing machine will describe a non sequential program.",
                    "label": 0
                },
                {
                    "sent": "Or you could have an automaton.",
                    "label": 0
                },
                {
                    "sent": "This is I think, some faints that opens and locks if you put a coin name or something like that.",
                    "label": 0
                },
                {
                    "sent": "So so so these are well known models for.",
                    "label": 0
                },
                {
                    "sent": "For when you have one process.",
                    "label": 0
                },
                {
                    "sent": "An end.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So now if you have parallel programs, well, I mean if you have five programs 12345.",
                    "label": 0
                },
                {
                    "sent": "Well, could you just tab five of these things?",
                    "label": 0
                },
                {
                    "sent": "Five Turing Machines, 55 graphs or automata?",
                    "label": 1
                },
                {
                    "sent": "And it turns out that doesn't that doesn't work.",
                    "label": 0
                },
                {
                    "sent": "And why doesn't it work?",
                    "label": 0
                },
                {
                    "sent": "It's because these things are not alone in the world they're interacting with each other, like the philosophers later, they're not.",
                    "label": 0
                },
                {
                    "sent": "I mean, they're sitting around this table so.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We need something that's more complicated or more, I mean.",
                    "label": 0
                },
                {
                    "sent": "Pro that somehow takes care of this interaction between the processes, and there are several models and their religious wars about which ones are good good and which ones are not.",
                    "label": 0
                },
                {
                    "sent": "Which ones are the best ones?",
                    "label": 0
                },
                {
                    "sent": "I mean, Petri Nets are the ones that.",
                    "label": 1
                },
                {
                    "sent": "You may have seen where people move coins around graphs and they have a number of coins and.",
                    "label": 0
                },
                {
                    "sent": "And interleaving semantics is another one.",
                    "label": 1
                },
                {
                    "sent": "Higher dimensional automata is is a higher dimensional version of what you saw.",
                    "label": 0
                },
                {
                    "sent": "The graph with the automaton.",
                    "label": 0
                },
                {
                    "sent": "Here I'm going to the model I am going to talk about is.",
                    "label": 0
                },
                {
                    "sent": "I think the one that gets you quickly too.",
                    "label": 0
                },
                {
                    "sent": "To geometry and topology, but I could have taken higher dimensional automata.",
                    "label": 1
                },
                {
                    "sent": "That's another one.",
                    "label": 0
                },
                {
                    "sent": "It's just there's a little it takes a little longer, so you'll have to look that up afterwards.",
                    "label": 0
                },
                {
                    "sent": "Maybe so.",
                    "label": 0
                },
                {
                    "sent": "I'm going to sew the model.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Going to use is this one.",
                    "label": 0
                },
                {
                    "sent": "This is.",
                    "label": 0
                },
                {
                    "sent": "I mean this is geometry less obvious, So what does it mean?",
                    "label": 0
                },
                {
                    "sent": "It means along here I have one process along here.",
                    "label": 0
                },
                {
                    "sent": "I have another process and you can think about this as is 2 dining philosophers if you wish.",
                    "label": 0
                },
                {
                    "sent": "So what does this mean?",
                    "label": 0
                },
                {
                    "sent": "This means that this one wants access to resources a then he wants to access to resource B release be release A and this one wants it in the opposite direction.",
                    "label": 0
                },
                {
                    "sent": "So if is this guys right fork in this guys left work then I think it's the timing philosophers two people across from each other.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "The model here is that these resources allow only one.",
                    "label": 0
                },
                {
                    "sent": "Thread or process to access them at a time.",
                    "label": 0
                },
                {
                    "sent": "So this means that.",
                    "label": 0
                },
                {
                    "sent": "So this means that this joint state where this guy is here and this one is here.",
                    "label": 0
                },
                {
                    "sent": "That's a place where they both have a lock on this resource B and they cannot have that.",
                    "label": 0
                },
                {
                    "sent": "So this means this state is just not this is forbidden or whatever you want to call.",
                    "label": 0
                },
                {
                    "sent": "So this is a picture of.",
                    "label": 0
                },
                {
                    "sent": "All the states that these this joint program.",
                    "label": 0
                },
                {
                    "sent": "They do this.",
                    "label": 0
                },
                {
                    "sent": "In a common setting, this joint program looks like it looks like this, and you can imagine more complicated geometrical geometric figures.",
                    "label": 0
                },
                {
                    "sent": "You could also imagine that.",
                    "label": 0
                },
                {
                    "sent": "Maybe T1 is a graph.",
                    "label": 0
                },
                {
                    "sent": "It has loops and it has.",
                    "label": 0
                },
                {
                    "sent": "It has choice, that is branchings and so on.",
                    "label": 0
                },
                {
                    "sent": "I mean it could.",
                    "label": 0
                },
                {
                    "sent": "It could be quite.",
                    "label": 0
                },
                {
                    "sent": "Complicated, but this is this is the model.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And the general model looks like this.",
                    "label": 0
                },
                {
                    "sent": "So these are PV programs.",
                    "label": 1
                },
                {
                    "sent": "It goes back to Dijkstra, Dutch computer scientist in the 60s, I think, maybe 70s.",
                    "label": 0
                },
                {
                    "sent": "So in general there's a set of shared resources.",
                    "label": 1
                },
                {
                    "sent": "They each have a capacity.",
                    "label": 0
                },
                {
                    "sent": "The maximal number of locks that can be held on them, and a PV program is then a sequence of such.",
                    "label": 0
                },
                {
                    "sent": "I want access to this resource if I can, and if I can, I will lock it and this is I will release this resource that I had and then you can.",
                    "label": 0
                },
                {
                    "sent": "I mean, this is just that you could have them one following each other.",
                    "label": 0
                },
                {
                    "sent": "You can run two in parallel and you can.",
                    "label": 0
                },
                {
                    "sent": "You can have choice and then you can loop.",
                    "label": 0
                },
                {
                    "sent": "So this is very very simple.",
                    "label": 0
                },
                {
                    "sent": "Set of programs and the thread.",
                    "label": 0
                },
                {
                    "sent": "I'll call it a thread.",
                    "label": 0
                },
                {
                    "sent": "When I when I have no parallel operator and I will also assume that at the start and at the at the end I don't have any locks on anything.",
                    "label": 0
                },
                {
                    "sent": "And that doesn't mean anything for what you do because it's just a question of you could you could change the capacity function if someone had already logged something at the beginning, but I mean there are various ways, so this is a general setting.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So geometrically, if you have one thread, it's a graph.",
                    "label": 1
                },
                {
                    "sent": "And if I have any threats, then it's not just in copies of graphs, it's a product of graphs and then I have holes in them.",
                    "label": 0
                },
                {
                    "sent": "Or blue areas, so that's that's the model.",
                    "label": 0
                },
                {
                    "sent": "Here I've taken a symmetric thing, so they want to do the same thing, and this is the kind of interaction there is, and this is these are the forbidden regions if the capacity is one that they can only cater for one at a time.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And if the capacity is more than one, I mean these two can do whatever they want.",
                    "label": 0
                },
                {
                    "sent": "They can get access to whatever they want, so so so the picture depends on also the capacity of these resources so.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And execution is then a directed path from start to end.",
                    "label": 1
                },
                {
                    "sent": "So here's one that goes from.",
                    "label": 0
                },
                {
                    "sent": "So I'm thinking about start here in the end of their, so here's one that goes from there to there.",
                    "label": 0
                },
                {
                    "sent": "And there's also this one, which is the sequential one, where first T1 goes then T two goals.",
                    "label": 0
                },
                {
                    "sent": "And this.",
                    "label": 0
                },
                {
                    "sent": "And similarly, I have here and then first two goals and then.",
                    "label": 0
                },
                {
                    "sent": "T1 go so these are these are examples of directed paths and when I say directed, I mean that they have to be increasing or rather non decreasing in both coordinates.",
                    "label": 0
                },
                {
                    "sent": "OK, time doesn't run backwards, so that's sort of for.",
                    "label": 0
                },
                {
                    "sent": "For each of these things, OK, so this is.",
                    "label": 0
                },
                {
                    "sent": "This is the start of the model, but it gets, but there's no topology here.",
                    "label": 0
                },
                {
                    "sent": "I mean this is not topology, this is geometry on a good day, but it's not.",
                    "label": 0
                },
                {
                    "sent": "It's certainly not topology yet.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "But Fortunately in this model of computer, scientists say that executions are equivalent.",
                    "label": 0
                },
                {
                    "sent": "Well, this is a definition of equivalence in.",
                    "label": 1
                },
                {
                    "sent": "I mean in general that they are equivalent if they given the same output, will give the same given the same input will give the same output.",
                    "label": 1
                },
                {
                    "sent": "I mean that makes sense, but in this model that's the same thing as saying that the corresponding.",
                    "label": 0
                },
                {
                    "sent": "Pass.",
                    "label": 0
                },
                {
                    "sent": "Can be deformed into each other, so if you look at the picture I.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Before this one.",
                    "label": 0
                },
                {
                    "sent": "Is equivalent to that one.",
                    "label": 0
                },
                {
                    "sent": "Because more or less the interaction they have with the shared objects are the same, so that's more than.",
                    "label": 0
                },
                {
                    "sent": "Let's approve, not, not really, but something.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "That so once you have.",
                    "label": 0
                },
                {
                    "sent": "That an equivalence relation that that has to do with continuously deforming things.",
                    "label": 0
                },
                {
                    "sent": "Then you are in topology.",
                    "label": 0
                },
                {
                    "sent": "This is what we're good at.",
                    "label": 0
                },
                {
                    "sent": "This is what topology does.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And because, well, I mean the mathematics or deformation of the mathematics of holes or whatever.",
                    "label": 1
                },
                {
                    "sent": "I mean that's.",
                    "label": 0
                },
                {
                    "sent": "That's topology, so here.",
                    "label": 0
                },
                {
                    "sent": "So what does it mean to deform a path?",
                    "label": 0
                },
                {
                    "sent": "It means the pictures here.",
                    "label": 0
                },
                {
                    "sent": "So here's a green path.",
                    "label": 0
                },
                {
                    "sent": "I think it runs from P to Q, and here's a blue path that also runs from.",
                    "label": 0
                },
                {
                    "sent": "P2 Qi guess so.",
                    "label": 1
                },
                {
                    "sent": "A deformation is a map from this.",
                    "label": 0
                },
                {
                    "sent": "Rectangle which sends the law edge here into the green one.",
                    "label": 0
                },
                {
                    "sent": "The top edge into the blue one sends everything here into what to that point.",
                    "label": 0
                },
                {
                    "sent": "Everything here to that point and then is continuous.",
                    "label": 0
                },
                {
                    "sent": "So this means that all along the way whenever I fix a point here, I or a time.",
                    "label": 0
                },
                {
                    "sent": "A point here.",
                    "label": 0
                },
                {
                    "sent": "This will be.",
                    "label": 0
                },
                {
                    "sent": "This will correspond to a path over here, so this is a family of paths leading from the green one to the blue one over the blue one to the green one depending what you on what you want.",
                    "label": 0
                },
                {
                    "sent": "So that's defamation and that is.",
                    "label": 0
                },
                {
                    "sent": "I mean that's been known, I guess point continue that I'm sure.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So in the plane here's this works very well in the plane.",
                    "label": 1
                },
                {
                    "sent": "I mean, if you have an example in the plane, you homotopy equivalence will tell you that there are four.",
                    "label": 0
                },
                {
                    "sent": "Executions for qualitatively different executions.",
                    "label": 0
                },
                {
                    "sent": "Which is good, because if you want to verify that this program does what it is supposed to do, there are only four executions to verify and not all.",
                    "label": 0
                },
                {
                    "sent": "I mean, you should imagine that this can be very complicated.",
                    "label": 0
                },
                {
                    "sent": "They could between here there could be lots and lots and lots of steps, so there's already been some reduction in the state space just by by only looking at the piece in the vise.",
                    "label": 0
                },
                {
                    "sent": "So so this looks very good.",
                    "label": 0
                },
                {
                    "sent": "It looks like OK, so.",
                    "label": 0
                },
                {
                    "sent": "Right topology does the job.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "But and here's my yeah, sorry bout that.",
                    "label": 0
                },
                {
                    "sent": "I'm from Denmark.",
                    "label": 0
                },
                {
                    "sent": "We do Lego so this is an example that that shows.",
                    "label": 0
                },
                {
                    "sent": "So this is a 3D example.",
                    "label": 0
                },
                {
                    "sent": "So what is the example you want to run from here?",
                    "label": 0
                },
                {
                    "sent": "Two here, so the time direction is there there and up.",
                    "label": 0
                },
                {
                    "sent": "And there's an obstruction here and obstruction here.",
                    "label": 0
                },
                {
                    "sent": "And then there's one here that you can imagine is floating, which of course it isn't because it's Duplo block, but.",
                    "label": 0
                },
                {
                    "sent": "And then.",
                    "label": 0
                },
                {
                    "sent": "Op two if you want to.",
                    "label": 0
                },
                {
                    "sent": "If you use Homer to be here, then this one that goes here goes this way and then that way around that one, you can move that over here and down here if you want to.",
                    "label": 0
                },
                {
                    "sent": "But on the way you're going to go.",
                    "label": 0
                },
                {
                    "sent": "Backwards in time.",
                    "label": 0
                },
                {
                    "sent": "Can you see that?",
                    "label": 0
                },
                {
                    "sent": "I mean, one of the paths you have on the way.",
                    "label": 0
                },
                {
                    "sent": "If you try to deform this one to that one.",
                    "label": 0
                },
                {
                    "sent": "Will go in front, go too much to this site.",
                    "label": 0
                },
                {
                    "sent": "It has to go back to get back under that thing.",
                    "label": 0
                },
                {
                    "sent": "Because this block is sort of sticking out.",
                    "label": 0
                },
                {
                    "sent": "So, so why is that a problem?",
                    "label": 0
                },
                {
                    "sent": "Well, that's a problem, because this means that homotopy is 2 course relation, because these executions, the one that goes there and the one that goes there and in front of this one and under this one.",
                    "label": 0
                },
                {
                    "sent": "They are not equivalent executions, but they are homotopic paths, so we need something that that so we need to introduce some new some new stuff here.",
                    "label": 0
                },
                {
                    "sent": "And this is, I mean, this is a good thing because this gives me the.",
                    "label": 0
                },
                {
                    "sent": "This gives me a lot of new papers to write.",
                    "label": 0
                },
                {
                    "sent": "So so this is where we introduce directed topology to study these things.",
                    "label": 1
                },
                {
                    "sent": "So we only want to.",
                    "label": 0
                },
                {
                    "sent": "We don't want to have homotopy, we want to have directed homotopy directed deformation.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So directed topology.",
                    "label": 0
                },
                {
                    "sent": "What is that well?",
                    "label": 0
                },
                {
                    "sent": "AD space is a topological space, so this is a very general setting and much more general than what I had before, but I have a topological space and then I have taken some of the paths a subset of the set of paths.",
                    "label": 0
                },
                {
                    "sent": "And so I've just pointed in some of them.",
                    "label": 0
                },
                {
                    "sent": "Is that OK?",
                    "label": 0
                },
                {
                    "sent": "You the directed paths?",
                    "label": 0
                },
                {
                    "sent": "Anne and.",
                    "label": 0
                },
                {
                    "sent": "Then this operation of of picking out which one I want to call direct, it has to be closed under concatenation.",
                    "label": 1
                },
                {
                    "sent": "If I have a directed path and connected with a concatenated with another one, the whole thing is going to be be directed all the constant path so directed well, I mean that you could debate whether you want, but they are and then is closed under taking some path if it's directed.",
                    "label": 1
                },
                {
                    "sent": "If this is a directed path in this piece is also directed path and you can reprogram it twice.",
                    "label": 0
                },
                {
                    "sent": "In a directed way.",
                    "label": 1
                },
                {
                    "sent": "So this opens a whole.",
                    "label": 0
                },
                {
                    "sent": "This is a whole new world.",
                    "label": 0
                },
                {
                    "sent": "You can start studying.",
                    "label": 0
                },
                {
                    "sent": "What spaces do we have?",
                    "label": 0
                },
                {
                    "sent": "I mean and what not?",
                    "label": 0
                },
                {
                    "sent": "But what are the?",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Samples.",
                    "label": 0
                },
                {
                    "sent": "Well.",
                    "label": 0
                },
                {
                    "sent": "The examples are, I mean the ones I showed you before.",
                    "label": 0
                },
                {
                    "sent": "I like this you have RN or you have a subset of RN.",
                    "label": 0
                },
                {
                    "sent": "And in these cases it's been R2 and R3.",
                    "label": 0
                },
                {
                    "sent": "And then a directed path is 1, which is increasing in all coordinates or nondecreasing in all coordinates.",
                    "label": 0
                },
                {
                    "sent": "Or you could take it a little further and say you have a product of direct directed graphs and then a directed path is again one which is a directed path for each coordinate.",
                    "label": 1
                },
                {
                    "sent": "So so that's I mean, so that's at least these are the main examples, but you can of course.",
                    "label": 0
                },
                {
                    "sent": "I mean you can find many really ugly examples if you want to, but let's leave that.",
                    "label": 1
                },
                {
                    "sent": "So in general we want to have this sort of order structure, rather local order structure.",
                    "label": 0
                },
                {
                    "sent": "If you think about a directed graph.",
                    "label": 0
                },
                {
                    "sent": "If there's a loop you don't really have an order structure, you only have it locally.",
                    "label": 0
                },
                {
                    "sent": "But still you know what it is to be a directed path in there, so we only.",
                    "label": 0
                },
                {
                    "sent": "So we only have we only ask for local orders because otherwise well, otherwise we don't have loops, and yeah, so in this model we are.",
                    "label": 1
                },
                {
                    "sent": "The SpaceX is the state space and these directed paths are the executions or the half way through executions.",
                    "label": 0
                },
                {
                    "sent": "Parts of an execution.",
                    "label": 0
                },
                {
                    "sent": "So this is the model.",
                    "label": 0
                },
                {
                    "sent": "Or this is the new map.",
                    "label": 0
                },
                {
                    "sent": "OK, so.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Now directed homotopy is then just that you ask for.",
                    "label": 0
                },
                {
                    "sent": "I mean the definition is the same as before, you just ask for all these image of all these to be directed path.",
                    "label": 0
                },
                {
                    "sent": "So this should all be directed paths.",
                    "label": 0
                },
                {
                    "sent": "I mean all along the way you should deform through directed paths.",
                    "label": 0
                },
                {
                    "sent": "And clearly that's a stronger requirement.",
                    "label": 0
                },
                {
                    "sent": "I mean in some cases then to perform just through path.",
                    "label": 0
                },
                {
                    "sent": "So this is what it means because I put in an arrow up there.",
                    "label": 0
                },
                {
                    "sent": "That's just notation.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "No.",
                    "label": 0
                },
                {
                    "sent": "So now we get the.",
                    "label": 0
                },
                {
                    "sent": "I mean, this is what it was made for.",
                    "label": 0
                },
                {
                    "sent": "So clearly this works.",
                    "label": 0
                },
                {
                    "sent": "Execution paths are directed homotopic if and only if they are well.",
                    "label": 1
                },
                {
                    "sent": "Yeah, so there what I should have had something of well so execution path they are so this is equivalent.",
                    "label": 0
                },
                {
                    "sent": "They're equivalent executions if and only if they die homotopic.",
                    "label": 0
                },
                {
                    "sent": "I forgot that one and this is the same as being in the same connected component of the path space.",
                    "label": 1
                },
                {
                    "sent": "If anybody wants to know that so.",
                    "label": 0
                },
                {
                    "sent": "So we have.",
                    "label": 0
                },
                {
                    "sent": "So we have a machine to look at this and we have new math to look at this right?",
                    "label": 0
                },
                {
                    "sent": "So what if we?",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So what did we do well?",
                    "label": 0
                },
                {
                    "sent": "We can now if we have such.",
                    "label": 0
                },
                {
                    "sent": "Model of a PV program.",
                    "label": 0
                },
                {
                    "sent": "Then there is an algorithm that produces that gives a simplicial model or prod simplicial model, but it gives a combinatorial model of the of the space of executions and we've implemented it, or the French guys have and the output is.",
                    "label": 0
                },
                {
                    "sent": "Well, the homology of the space of executions, and in particular you get it representative of each component.",
                    "label": 0
                },
                {
                    "sent": "That is, you get.",
                    "label": 0
                },
                {
                    "sent": "The execution paths on which you have to verify your program.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "So this I mean.",
                    "label": 0
                },
                {
                    "sent": "So this is, I mean the French guys claim that this is a good thing.",
                    "label": 0
                },
                {
                    "sent": "So let's say they say it's a good thing.",
                    "label": 0
                },
                {
                    "sent": "Yeah, so you only need to verify your program on these.",
                    "label": 0
                },
                {
                    "sent": "These paths.",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "The problem with this I should perhaps say is that this is not.",
                    "label": 0
                },
                {
                    "sent": "I mean, the algorithm is.",
                    "label": 0
                },
                {
                    "sent": "I mean it's.",
                    "label": 0
                },
                {
                    "sent": "It's not very efficient and whether that's because it is combinatorially difficult, or whether it's because the algorithm isn't good and we haven't thought about it long enough that it's unclear to me.",
                    "label": 0
                },
                {
                    "sent": "I don't know.",
                    "label": 0
                },
                {
                    "sent": "I mean, I think in bad cases it will be bad, but.",
                    "label": 0
                },
                {
                    "sent": "Well.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "In directed topology was I mean what can you study now?",
                    "label": 1
                },
                {
                    "sent": "You have new math.",
                    "label": 0
                },
                {
                    "sent": "Well, we can study die, homotopy di homology.",
                    "label": 0
                },
                {
                    "sent": "We have some of each of these things.",
                    "label": 0
                },
                {
                    "sent": "I mean, we don't have all of it we have.",
                    "label": 0
                },
                {
                    "sent": "So directed homotopy, we have some definitions.",
                    "label": 0
                },
                {
                    "sent": "We have some calculations, we have a fan company theorem and some other things that we want.",
                    "label": 0
                },
                {
                    "sent": "Die homology is much more open.",
                    "label": 0
                },
                {
                    "sent": "It's not clear really what that is.",
                    "label": 0
                },
                {
                    "sent": "There are, I mean, they're different suggestions and different calculations on these things, but it's not.",
                    "label": 0
                },
                {
                    "sent": "I mean they're not.",
                    "label": 0
                },
                {
                    "sent": "Yeah, I think we're converging at what we mean by that.",
                    "label": 0
                },
                {
                    "sent": "And so you can ask for algorithms.",
                    "label": 0
                },
                {
                    "sent": "I mean, what algorithms can we get better algorithms?",
                    "label": 1
                },
                {
                    "sent": "And right now my sink housing and other people are looking at connections who configuration spaces?",
                    "label": 0
                },
                {
                    "sent": "Nothing I've been looking at is equivalent of programs which, on the computer Science site is supposed to spy simulation and I can.",
                    "label": 0
                },
                {
                    "sent": "Formulate that also in the world of these directed spaces and give give some.",
                    "label": 1
                },
                {
                    "sent": "Results on that so that branches call that part of directed topologies called eye coverings.",
                    "label": 0
                },
                {
                    "sent": "And if they are in the homotopy theorists present, they will say, do you have a model structure?",
                    "label": 0
                },
                {
                    "sent": "No, so, but maybe I don't know if we want one, but we don't have One South.",
                    "label": 0
                },
                {
                    "sent": "But this, you're supposed to tell people that if you do homotopy theory.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "So I'm going to tell you about 2 problems that we've tried to address other than the ones that.",
                    "label": 0
                },
                {
                    "sent": "I mean the ones with the trace based algorithm that Martin has.",
                    "label": 0
                },
                {
                    "sent": "So here's.",
                    "label": 0
                },
                {
                    "sent": "Here's a question that some people ask me.",
                    "label": 0
                },
                {
                    "sent": "That is, do you have some?",
                    "label": 0
                },
                {
                    "sent": "Actually, they said do you have cut off results?",
                    "label": 0
                },
                {
                    "sent": "And I said I don't know what a cut off theorem is, but maybe so here's one thing you might worry about, namely serializability.",
                    "label": 0
                },
                {
                    "sent": "So serializability.",
                    "label": 0
                },
                {
                    "sent": "So The thing is that.",
                    "label": 0
                },
                {
                    "sent": "If you want to verify that a program does what you expect it to, it's quite easy.",
                    "label": 0
                },
                {
                    "sent": "If all paths are all executions are in fact equivalent to.",
                    "label": 1
                },
                {
                    "sent": "Serial executions.",
                    "label": 0
                },
                {
                    "sent": "And then you can.",
                    "label": 0
                },
                {
                    "sent": "Then you can ask.",
                    "label": 0
                },
                {
                    "sent": "Well, why don't you just do it serially then?",
                    "label": 0
                },
                {
                    "sent": "Well, because it's faster to do it in.",
                    "label": 0
                },
                {
                    "sent": "I mean, it can still be faster because you might.",
                    "label": 0
                },
                {
                    "sent": "I mean, it might be faster to go something like this.",
                    "label": 0
                },
                {
                    "sent": "So so so this is one question you can ask, are all executions actually?",
                    "label": 0
                },
                {
                    "sent": "Equivalent to.",
                    "label": 0
                },
                {
                    "sent": "Exclusions at a serial, meaning that this one goes 1st and this one goes first.",
                    "label": 0
                },
                {
                    "sent": "Well here they are.",
                    "label": 0
                },
                {
                    "sent": "This green one can be deformed out to that one.",
                    "label": 0
                },
                {
                    "sent": "This green one can be deformed out to that one an so.",
                    "label": 0
                },
                {
                    "sent": "So that's a question you could ask.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Another question you can ask in which we have we have algorithms for is.",
                    "label": 0
                },
                {
                    "sent": "Ann is something that's also very clear to see when you look at these models.",
                    "label": 0
                },
                {
                    "sent": "These are deadlocks.",
                    "label": 0
                },
                {
                    "sent": "I mean, we also there was also one with the with dining philosophers, so these are deadlocks.",
                    "label": 0
                },
                {
                    "sent": "These are these red areas.",
                    "label": 0
                },
                {
                    "sent": "If you're in there, you don't get out.",
                    "label": 0
                },
                {
                    "sent": "You're going to stay if you don't get to or you don't get to finish your.",
                    "label": 0
                },
                {
                    "sent": "Program so we have an algorithm that tells you how to, how to avoid these or where they are and where the forbidden are where the associated red area is an even more.",
                    "label": 0
                },
                {
                    "sent": "More interesting and more useful is that we can also find these things.",
                    "label": 0
                },
                {
                    "sent": "So what is these?",
                    "label": 0
                },
                {
                    "sent": "What are these things?",
                    "label": 0
                },
                {
                    "sent": "Well, it's a symmetric thing in the sense that they are the ones from that you cannot reach if you go from here.",
                    "label": 0
                },
                {
                    "sent": "The unreachable.",
                    "label": 0
                },
                {
                    "sent": "Areas or regions?",
                    "label": 0
                },
                {
                    "sent": "And why would it be good to to know where they are?",
                    "label": 0
                },
                {
                    "sent": "Well, because if you've got it things behind, I mean there might be bad states in this.",
                    "label": 0
                },
                {
                    "sent": "You might want to know about that.",
                    "label": 0
                },
                {
                    "sent": "They're easy to find because it's just running the deadlock algorithm backward with the time direction going this way.",
                    "label": 0
                },
                {
                    "sent": "These are then you find these areas.",
                    "label": 0
                },
                {
                    "sent": "As the unreachable regions so and for that, we have.",
                    "label": 0
                },
                {
                    "sent": "That algorithm is actually quite efficient, so yeah.",
                    "label": 0
                },
                {
                    "sent": "So this we have.",
                    "label": 0
                }
            ]
        },
        "clip_31": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "But back to serializability, so.",
                    "label": 0
                },
                {
                    "sent": "If you have a parallel program, it's serializable if all the execution paths are equivalent or die homotopic as it is to a serial execution.",
                    "label": 1
                },
                {
                    "sent": "And so this is a.",
                    "label": 0
                },
                {
                    "sent": "This is a whole program.",
                    "label": 0
                },
                {
                    "sent": "And what does it mean that if I if I have one thread, it's serializable, if any.",
                    "label": 0
                },
                {
                    "sent": "Instance of running it in parallel with itself is serializable.",
                    "label": 0
                },
                {
                    "sent": "So why would we care about that?",
                    "label": 0
                },
                {
                    "sent": "Well, I mean you don't know how many are going to run whatever program you put out on the Internet.",
                    "label": 0
                },
                {
                    "sent": "I mean how many are going to run that in.",
                    "label": 0
                },
                {
                    "sent": "In the parallel, so this is apparently something they care about, so can you, so here's.",
                    "label": 0
                }
            ]
        },
        "clip_32": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Serializability for capacity one.",
                    "label": 0
                },
                {
                    "sent": "This program is that T is not serializable because.",
                    "label": 0
                },
                {
                    "sent": "Well, if I run it just together with itself, once that is I get a 2D thing, then it's not serializable.",
                    "label": 0
                },
                {
                    "sent": "And in fact, it turns out.",
                    "label": 0
                }
            ]
        },
        "clip_33": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "See, that's what I have here.",
                    "label": 0
                },
                {
                    "sent": "If all resources have capacity one, then to see whether something is serializable, I only have to check the plain version, so this means that it's really easy to test for serializability of T to whatever end, because you only have to take T to the two.",
                    "label": 1
                },
                {
                    "sent": "T running parallel with itself.",
                    "label": 0
                },
                {
                    "sent": "So OK, so that's kind of.",
                    "label": 0
                },
                {
                    "sent": "Nice.",
                    "label": 0
                },
                {
                    "sent": "And this is a property of the symmetric case that I have running T in parallel with itself.",
                    "label": 0
                },
                {
                    "sent": "I mean, since yeah, so I think I have a picture here.",
                    "label": 0
                }
            ]
        },
        "clip_34": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Yeah, so here are three programs and they share 12123 resources and the pairwise T1 parallel with TT3 is Paris serializable because there's only this whole T2 together with T1?",
                    "label": 0
                },
                {
                    "sent": "Is this whole and T1 and T3?",
                    "label": 0
                },
                {
                    "sent": "Is this whole, so they're they're serializable?",
                    "label": 0
                },
                {
                    "sent": "There's only one choice below or above the whole, whatever below and above means.",
                    "label": 0
                },
                {
                    "sent": "But if you look at them.",
                    "label": 0
                },
                {
                    "sent": "Together, these three in parallel.",
                    "label": 0
                },
                {
                    "sent": "Well then this path, which goes over this one and in front of this one and back.",
                    "label": 0
                },
                {
                    "sent": "This one is is not serializable because it's sort of caught up in this combined problem.",
                    "label": 0
                },
                {
                    "sent": "So in general it's not true that you can just check the pairwise even if this is a capacity one problem.",
                    "label": 0
                },
                {
                    "sent": "But for the symmetric thing it is.",
                    "label": 0
                }
            ]
        },
        "clip_35": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So, and this is because in the symmetric case it looks like this.",
                    "label": 0
                },
                {
                    "sent": "So what is that?",
                    "label": 0
                },
                {
                    "sent": "Those are three cylinders, a goal through.",
                    "label": 0
                },
                {
                    "sent": "Like this, so I also have one resource of capacity one and they all and they all want to do PVM.",
                    "label": 0
                },
                {
                    "sent": "And this gives me that the forbidden area looks like this and there are three factorial 6 serial executions and they are pairwise inequivalent because they you cannot permute any of them because of because they correspond to.",
                    "label": 1
                },
                {
                    "sent": "Choice is it at either this one or that one or that One South?",
                    "label": 0
                },
                {
                    "sent": "So these are pairwise inequivalent and then the point is that.",
                    "label": 0
                },
                {
                    "sent": "This is what it looks like in general.",
                    "label": 0
                }
            ]
        },
        "clip_36": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So in general, if I have a non trivial T, well nontrivial, otherwise it's really not interesting, then all the N factorial serial executions in T2 then it should say unknown equivalent.",
                    "label": 1
                },
                {
                    "sent": "And if T2, the two is serializable, then these are the only choices you have go above or go below.",
                    "label": 0
                },
                {
                    "sent": "So that means that all.",
                    "label": 1
                },
                {
                    "sent": "That all die paths in T to the NR determined by this go above or below in the.",
                    "label": 1
                },
                {
                    "sent": "Restriction to the two dimensional case or going above and below all these generalized cylinders.",
                    "label": 0
                },
                {
                    "sent": "So this means that if T2, the two serializable in T2, the is serializable.",
                    "label": 0
                },
                {
                    "sent": "So that's easy or.",
                    "label": 0
                }
            ]
        },
        "clip_37": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Well, so now you have to care about whether T to the two is serializable.",
                    "label": 0
                },
                {
                    "sent": "Well, this one isn't, but what does it take?",
                    "label": 0
                },
                {
                    "sent": "Well, that's actually well known from the 70s.",
                    "label": 0
                }
            ]
        },
        "clip_38": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Think.",
                    "label": 0
                },
                {
                    "sent": "So well, I mean geometrically it is that if the choice at one of these sub rectangles implies the choice at other, all of the rectangles, then then you.",
                    "label": 1
                },
                {
                    "sent": "Then you have serializable.",
                    "label": 0
                },
                {
                    "sent": "So it looks like it's it's connected this region and also over here it looks like it's connected.",
                    "label": 0
                },
                {
                    "sent": "But that's actually you don't need that.",
                    "label": 0
                }
            ]
        },
        "clip_39": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "I mean, you can have that it's disconnected, it just has to be sort of.",
                    "label": 0
                },
                {
                    "sent": "Hidden an yeah Cockies property immediately when komena paper in 1979.",
                    "label": 0
                },
                {
                    "sent": "It even is says that what you have to do is look at the closure of the forbidden area and I don't.",
                    "label": 1
                },
                {
                    "sent": "They don't say in that way, but this is what it translates to under adding unreachable and unsafe areas that this is connected and this is what happens here.",
                    "label": 1
                },
                {
                    "sent": "If I close this off and I.",
                    "label": 0
                },
                {
                    "sent": "Then I then it's connected, so this is the.",
                    "label": 0
                },
                {
                    "sent": "The statement then it's quite easy to see why that has to be true so.",
                    "label": 0
                },
                {
                    "sent": "Capacity 1 easy capacity, higher not so much.",
                    "label": 0
                }
            ]
        },
        "clip_40": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So yeah, so I think maybe I'll skip this.",
                    "label": 0
                },
                {
                    "sent": "Well, yeah, no, this is just how I mean.",
                    "label": 0
                },
                {
                    "sent": "How much easier is the symmetric case?",
                    "label": 0
                },
                {
                    "sent": "I mean how in general how much easier is the symmetric case well?",
                    "label": 0
                },
                {
                    "sent": "If you have a non symmetric key, so T1, parallel T2 parallel TNU can mimic that by taking T to be the sequential.",
                    "label": 0
                },
                {
                    "sent": "These put sequentially and then taking taking that to the key in that thing to the K. You have copies of these.",
                    "label": 0
                },
                {
                    "sent": "You actually have what?",
                    "label": 0
                },
                {
                    "sent": "K factorial copies of these so.",
                    "label": 0
                },
                {
                    "sent": "Whatever problems you can find in the in the non symmetric case, you can actually also find them in the symmetric case.",
                    "label": 0
                },
                {
                    "sent": "If you think about dead logs and so on and so forth.",
                    "label": 0
                },
                {
                    "sent": "It will also be there in some way, so it's I mean it can be quite complicated.",
                    "label": 0
                },
                {
                    "sent": "Actually, even if it's symmetric, I think this if you think about it, it's pretty.",
                    "label": 0
                },
                {
                    "sent": "It's not.",
                    "label": 0
                },
                {
                    "sent": "It's not difficult, but it's well.",
                    "label": 0
                },
                {
                    "sent": "You have to think about it so, so the symmetric cases.",
                    "label": 0
                },
                {
                    "sent": "Yeah, it's not so I can't expect it to be easy.",
                    "label": 0
                },
                {
                    "sent": "I mean I would like to know more about it.",
                    "label": 0
                },
                {
                    "sent": "I do try to group actions and so on.",
                    "label": 0
                },
                {
                    "sent": "It doesn't seem to give me so much, so maybe not.",
                    "label": 0
                }
            ]
        },
        "clip_41": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So what about fog at the capacity?",
                    "label": 0
                },
                {
                    "sent": "More than One South?",
                    "label": 0
                },
                {
                    "sent": "Then you are.",
                    "label": 0
                },
                {
                    "sent": "I mean, if you look at it in well in them in the plane, you know they don't have any forbidden area in the.",
                    "label": 0
                },
                {
                    "sent": "So here's another three, and here's an example that we always use.",
                    "label": 0
                },
                {
                    "sent": "Just because we were surprised when we realized it.",
                    "label": 0
                },
                {
                    "sent": "So this is an example in.",
                    "label": 0
                },
                {
                    "sent": "Clearly if you have in dimension 3, you build sort of a circle by.",
                    "label": 0
                },
                {
                    "sent": "Having these cubes you built that you can build a circle so that you get a real hole then.",
                    "label": 0
                },
                {
                    "sent": "I mean, then then there's homotopy, and certainly also die homotopy.",
                    "label": 0
                },
                {
                    "sent": "So there are things that cannot be deformed to the boundary because you have a real whole.",
                    "label": 0
                },
                {
                    "sent": "Let it go through, but this thing is not a real hole.",
                    "label": 0
                },
                {
                    "sent": "This is, this is supposed to be away July or sort of thing like this.",
                    "label": 0
                },
                {
                    "sent": "And then the thing like this and they sit so that if you go under here and go out there.",
                    "label": 0
                },
                {
                    "sent": "Well then you can.",
                    "label": 0
                },
                {
                    "sent": "I mean, if you look at how much you can certainly get out of there.",
                    "label": 0
                },
                {
                    "sent": "If you look at the RCT homotopy, you cannot, so that is this path that goes in the middle.",
                    "label": 0
                },
                {
                    "sent": "There is non serializable so so so that tells you that the question is not you cannot answer just by saying that everything is generalizable well.",
                    "label": 0
                },
                {
                    "sent": "A thing you can see, which I mean you can see it in this 3D example, but it holds all the way up.",
                    "label": 0
                },
                {
                    "sent": "Is that all serial executions are in fact equivalent because all two sales on the boundary are are allowed there no, no forbidden area on the 2 dimensional subsets on the boundary.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "So this is one thing you can see.",
                    "label": 0
                },
                {
                    "sent": "Another thing you can see is well, if you run the scheduling algorithm then the OR the algorithm that we have implemented then we can calculate the components of this space of paths or traces or whatever.",
                    "label": 0
                },
                {
                    "sent": "And if there's more than one component then it's non serializable.",
                    "label": 0
                },
                {
                    "sent": "Why?",
                    "label": 0
                },
                {
                    "sent": "Well, because all the serious ones are equivalent.",
                    "label": 0
                },
                {
                    "sent": "So they form a connected component.",
                    "label": 0
                },
                {
                    "sent": "So there are ways you can get get to this, but if I want to.",
                    "label": 0
                },
                {
                    "sent": "To say something about what happens when I run.",
                    "label": 0
                },
                {
                    "sent": "One thread to hire two to the end.",
                    "label": 0
                },
                {
                    "sent": "That is, I want to cut off theorem then.",
                    "label": 0
                }
            ]
        },
        "clip_42": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Gets more complicated.",
                    "label": 0
                },
                {
                    "sent": "So I think I'll skip, so this is.",
                    "label": 0
                }
            ]
        },
        "clip_43": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "It's just there is in fact we do know something.",
                    "label": 0
                },
                {
                    "sent": "So first of all I mean to get a problem you need something like a witch and a witch.",
                    "label": 0
                },
                {
                    "sent": "So this is more or less what this is.",
                    "label": 0
                },
                {
                    "sent": "There has to be some local someplace where there is a choice that cannot be locali undone.",
                    "label": 0
                },
                {
                    "sent": "So this means that there is a path running here, path running here and no matter how you try, you cannot connect these two up.",
                    "label": 0
                },
                {
                    "sent": "If there is such a thing, if there are no such local place such places locally, then everything is homotopic to everything or die homotopic to everything.",
                    "label": 0
                },
                {
                    "sent": "So that's what this local homotopy extension thing says, and it's more general than this.",
                    "label": 0
                },
                {
                    "sent": "But I mean this is the consequence in in in my case here.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "I do know that these local local choices, if there aren't any of those, then all die paths are die homotopic, so that can at least tell me something because that name, namely that means that if there are no local choice points then everything is then it is serializable and here is a cut off theorem, namely that if there are no local choice points in T2, the.",
                    "label": 0
                },
                {
                    "sent": "Where M is in this.",
                    "label": 0
                },
                {
                    "sent": "So this is a lot worse than two.",
                    "label": 0
                },
                {
                    "sent": "M is the sum of the capacities of all the resources I have.",
                    "label": 0
                },
                {
                    "sent": "And then plus one if there are no local choices there, then there aren't any local choices anywhere, so that's worse.",
                    "label": 0
                },
                {
                    "sent": "But still.",
                    "label": 0
                },
                {
                    "sent": "I mean it means you check one place and then then you're done.",
                    "label": 0
                },
                {
                    "sent": "So yeah, so that's.",
                    "label": 0
                },
                {
                    "sent": "I mean, that's the kind of result.",
                    "label": 0
                },
                {
                    "sent": "It's it's not perfect because it's because I because I don't have it the other way around.",
                    "label": 0
                },
                {
                    "sent": "I don't know that if there is a local choice point then there is directed homotopy.",
                    "label": 0
                },
                {
                    "sent": "If I only have one of these wedges, then everything is serializable.",
                    "label": 0
                },
                {
                    "sent": "But there is a choice here in the beginning, so it's so it's not perfect, but it's what I have so far.",
                    "label": 0
                },
                {
                    "sent": "I would like to have more.",
                    "label": 0
                }
            ]
        },
        "clip_44": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And why is the theorem true maybe?",
                    "label": 0
                }
            ]
        },
        "clip_45": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I should skip that.",
                    "label": 0
                }
            ]
        },
        "clip_46": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "But it is so well.",
                    "label": 0
                },
                {
                    "sent": "Yeah, so that's proof by fast slides.",
                    "label": 0
                },
                {
                    "sent": "So is this a sharp bound?",
                    "label": 0
                },
                {
                    "sent": "I mean can I could I get it further down?",
                    "label": 0
                },
                {
                    "sent": "Well I can.",
                    "label": 0
                },
                {
                    "sent": "I have an example where I have a local obstruction at T to the N -- 2.",
                    "label": 1
                },
                {
                    "sent": "So M was my cut off and there are no local obstructions before.",
                    "label": 1
                },
                {
                    "sent": "So I can get to M -- 2 and this is So what is this?",
                    "label": 0
                },
                {
                    "sent": "This is a program where.",
                    "label": 0
                },
                {
                    "sent": "So I start by asking for the resource one, and then while I hold that I ask for Resource 2, then I release one ask for three release to ask for four, and so on and so forth.",
                    "label": 0
                },
                {
                    "sent": "And in the end I asked for one and release and release the last one and then release one again.",
                    "label": 0
                },
                {
                    "sent": "So that gives me a sort of.",
                    "label": 0
                },
                {
                    "sent": "It gives me a cyclic dependence of these things.",
                    "label": 0
                },
                {
                    "sent": "That's what that's what.",
                    "label": 0
                },
                {
                    "sent": "That's what it's what I've cooked it up to to do.",
                    "label": 0
                },
                {
                    "sent": "And actually I can see that if I.",
                    "label": 0
                },
                {
                    "sent": "If I take a point.",
                    "label": 0
                },
                {
                    "sent": "So this point is So what is that so this?",
                    "label": 1
                },
                {
                    "sent": "So how many of these?",
                    "label": 0
                },
                {
                    "sent": "I have these these these are have as many as the capacity of our sub K. So these are all at this place.",
                    "label": 1
                },
                {
                    "sent": "They all asking for the resource one while holding Resource K Kappa to its full capacity.",
                    "label": 0
                },
                {
                    "sent": "These are asking for resource #2 while holding resource number one and so on and so forth.",
                    "label": 0
                },
                {
                    "sent": "So they're all holding things that all the other guys want.",
                    "label": 0
                },
                {
                    "sent": "Right, so that's a deadlock.",
                    "label": 0
                },
                {
                    "sent": "So now if I just take one of them and say this one doesn't hold it to its full capacity, well then that is infected Choicepoint.",
                    "label": 0
                },
                {
                    "sent": "If you think about it, so that is so.",
                    "label": 0
                },
                {
                    "sent": "That means at this point is where is it?",
                    "label": 0
                },
                {
                    "sent": "How many copies of this mighty do I have?",
                    "label": 1
                },
                {
                    "sent": "I have the sum of the capacities and then minus one, and my aim is actually the sum of the capacities.",
                    "label": 0
                },
                {
                    "sent": "Plus ones are, so that's quite quite there, but.",
                    "label": 0
                },
                {
                    "sent": "So, so it might be that I can bring him two down, but but it's not.",
                    "label": 0
                },
                {
                    "sent": "It's not that big a problem because there if there is a choice point here then there's also one higher up because yeah, so we get to that.",
                    "label": 0
                },
                {
                    "sent": "So it's not that big a problem, but.",
                    "label": 0
                },
                {
                    "sent": "Yeah, and cooking up examples like that is sort of my 40I loved him.",
                    "label": 0
                },
                {
                    "sent": "It's counter examples and examples.",
                    "label": 0
                },
                {
                    "sent": "Let's.",
                    "label": 0
                }
            ]
        },
        "clip_47": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So here, So what about this example?",
                    "label": 0
                },
                {
                    "sent": "Well, this is.",
                    "label": 0
                },
                {
                    "sent": "This is of course not a. I mean, this is not symmetric, but I can make it symmetric by doing like this and then running this in parallel with itself and it gets a Choicepoint in T2, the three which is 2 + 2 -- 1, so it's again.",
                    "label": 0
                },
                {
                    "sent": "Minus one, so it's not yeah.",
                    "label": 0
                },
                {
                    "sent": "So again, maybe in minus.",
                    "label": 0
                },
                {
                    "sent": "Two, yeah so.",
                    "label": 0
                },
                {
                    "sent": "So I get the yeah so that's it.",
                    "label": 0
                },
                {
                    "sent": "So again, it might be in minus two or I haven't thought hard enough about the example that might also be who knows so.",
                    "label": 0
                }
            ]
        },
        "clip_48": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Then so why is it a cut off?",
                    "label": 0
                },
                {
                    "sent": "Why do I know?",
                    "label": 0
                },
                {
                    "sent": "Well, if I had a local Choicepoint before lower?",
                    "label": 0
                },
                {
                    "sent": "Then I just add the that all I add some extra copies of my my my thread and I assume that they have all at the top, which means that this will also be a local choice point because they cannot move.",
                    "label": 0
                },
                {
                    "sent": "So there's still a local choice point there an if I have something that's above M, then I have removed all those where no process is locked.",
                    "label": 0
                },
                {
                    "sent": "And then I read and so so how many are left?",
                    "label": 0
                },
                {
                    "sent": "Well, the sum of the capacities, but maybe I need.",
                    "label": 0
                },
                {
                    "sent": "Maybe then no one is asking for this resource are so This is why I get my plus.",
                    "label": 0
                },
                {
                    "sent": "My plus one here because I yeah so well so.",
                    "label": 0
                },
                {
                    "sent": "So it is so that's how the cut offs go.",
                    "label": 0
                }
            ]
        },
        "clip_49": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And I also had a avocado for deadlocks.",
                    "label": 0
                },
                {
                    "sent": "I know where to look for deadlocks, and that is at the sum of the capacities and this I have.",
                    "label": 0
                },
                {
                    "sent": "This is this is sharp.",
                    "label": 0
                },
                {
                    "sent": "I know that this is sharp because for.",
                    "label": 0
                },
                {
                    "sent": "For that process I had before or that thread I had before it said deadlock it at the cut off and not before so so I can realize that no matter what.",
                    "label": 0
                },
                {
                    "sent": "See what resources what set of resources and what capacity function they have I can realize.",
                    "label": 0
                },
                {
                    "sent": "I may have to go onto it all the way to T to them to find to find the deadlock, so that's so.",
                    "label": 0
                },
                {
                    "sent": "That's a cut off, yeah?",
                    "label": 0
                },
                {
                    "sent": "So I'm getting too.",
                    "label": 0
                }
            ]
        },
        "clip_50": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So there's more to do, Fortunately.",
                    "label": 0
                },
                {
                    "sent": "Otherwise, we should all go home.",
                    "label": 0
                },
                {
                    "sent": "Which should we should anyway?",
                    "label": 0
                },
                {
                    "sent": "And so serialized, busy.",
                    "label": 0
                },
                {
                    "sent": "So I'm not done, right?",
                    "label": 0
                },
                {
                    "sent": "So serializability ability for Cabot greater than in.",
                    "label": 0
                },
                {
                    "sent": "And then this thing that it doesn't.",
                    "label": 0
                },
                {
                    "sent": "It only says something about local obstructions.",
                    "label": 0
                },
                {
                    "sent": "Other cut off problems.",
                    "label": 0
                },
                {
                    "sent": "And then I mean other problems in directed topology.",
                    "label": 0
                },
                {
                    "sent": "There are lots of them, homology, homotopy, whatever.",
                    "label": 0
                },
                {
                    "sent": "And there's also there.",
                    "label": 0
                },
                {
                    "sent": "Many problems in.",
                    "label": 0
                },
                {
                    "sent": "I mean in concurrency theory that you might try to address.",
                    "label": 0
                },
                {
                    "sent": "This way we are by now trying to connect up this geometric description of of distributed computing, which on sort of on the face of it looks like it's very different.",
                    "label": 0
                },
                {
                    "sent": "But we think it might not be.",
                    "label": 0
                },
                {
                    "sent": "I mean there are some translations between the two, but I mean these are two groups and it's hard to.",
                    "label": 0
                },
                {
                    "sent": "I mean, yeah, it's hard to connect these things up, but we believe that.",
                    "label": 0
                },
                {
                    "sent": "That there is a connection between these two things and one might.",
                    "label": 0
                },
                {
                    "sent": "Help the other one so so there's a lot more to do, and it's I mean it's a young subject director topology it's I mean we invented or discovered.",
                    "label": 0
                },
                {
                    "sent": "I mean, that's discussion.",
                    "label": 0
                },
                {
                    "sent": "I know in in back in 96 so it's well, it's that old for a math subject.",
                    "label": 0
                }
            ]
        },
        "clip_51": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And here's the commercial.",
                    "label": 0
                },
                {
                    "sent": "We have a book, so it's that old.",
                    "label": 0
                },
                {
                    "sent": "There's a book coming out at least, I hope because it depends on people like me doing something in within the next 2 weeks.",
                    "label": 0
                },
                {
                    "sent": "But there's a book coming out in Springer briefs in mathematics by.",
                    "label": 0
                },
                {
                    "sent": "So it's somewhere in my mom and Eric Ben\u00e9t, Manuel, who they already called pull technique in Paris.",
                    "label": 0
                },
                {
                    "sent": "And then it's Martin Rowson, my colleague in Elbow, and then so long set of authors.",
                    "label": 0
                },
                {
                    "sent": "And I put some well in front because he's done most of the work so clearly.",
                    "label": 0
                },
                {
                    "sent": "So which is which is good for somebody had to.",
                    "label": 0
                },
                {
                    "sent": "Otherwise there would be no book, that's for sure.",
                    "label": 0
                },
                {
                    "sent": "So yeah, so thank you.",
                    "label": 0
                }
            ]
        }
    }
}