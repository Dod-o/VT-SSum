{
    "id": "vph5umtslhm5m5pfdkm23cgcciozvgfi",
    "title": "Universal Java Matrix Package",
    "info": {
        "author": [
            "Arndt Holger, Freelance IT consultant"
        ],
        "published": "July 20, 2010",
        "recorded": "June 2010",
        "category": [
            "Top->Computers->Software->Open-Source Software"
        ]
    },
    "url": "http://videolectures.net/icml2010_holger_ujmp/",
    "segmentation": [
        [
            "OK, so here we go, yeah.",
            "So again, we're talking about linear algebra and yet another metrics package for Java.",
            "You might know that there are a couple of Java matrix libraries out there, so I will start with an introduction.",
            "Why in hell do we need yet another matrix package for Java and yeah, what are the differences that I implemented in my software so I will make a very quick walk over some of the basic concepts and.",
            "Yeah, the ideas behind it and present some of its features.",
            "And after that I hope we have time that I can give a little demonstration of the life program that you can get a better understanding of what is what was the plan of."
        ],
        [
            "What's going on here?",
            "OK, so as you all machine learners I don't have explained.",
            "Have to explain that matrix algebra.",
            "Linear algebra is really important for my work.",
            "I need needed a lot.",
            "I have to do matrix computations for all of my projects that I'm doing and the thing for me was I had to do it in Java because sometimes we had a Tomcat web server.",
            "And yeah then we had to use Java software so it was not an option to use Matlab or Octave for.",
            "Python or something else.",
            "It had to be in Java, so I started looking out for matrix packages in Java and you know, JAMA called comments mask.",
            "These are the most popular packages.",
            "But at some point I found out that yeah, these didn't completely fulfill my needs and the reason."
        ],
        [
            "For that you can see on this screen here.",
            "The thing is, everything is fine as long as you need dense matrix.",
            "This 2 dimensions with double values.",
            "Then you can choose of all these 20 different matrix packages that there are in Java.",
            "But the problem begins when you need sparse matrixes.",
            "Then only a couple of libraries can be used if you want multi dimensional matrix is even worse, bigger than 4 dimensions is really hard to find and we have one problem I was facing is that I often had to deal with.",
            "Amounts of data which would not fit into main memory of a single computer, so if.",
            "Main memory of a computer is only four GB.",
            "Then you might be able to put Big 3 gigabytes of data into your program, and for my projects I was sometimes dealing with amounts of 10 gigabytes or even more, and at this point was not even an option to use Matlab or something else.",
            "So I really had to try something new.",
            "And of course, yeah, I also do research, so for me it's always interesting to be able to pretty quickly.",
            "Export or import or visualize something in Matlab.",
            "Built our Latics fire from something to publish the results and I just wanted to have a framework which would make everything easier for me.",
            "So in the end I started yeah to build my own matrix package for Java.",
            "And."
        ],
        [
            "Yeah, this was the idea.",
            "So at the beginning I just started.",
            "What do I want to do with the matrix?",
            "So I designed one interface which would be suitable for all my needs.",
            "I would have multi dimensions in it.",
            "I can support dense and sparse matrixes and I will support more than than integer values.",
            "I will support 2 to the power of 60 three rows and columns which is addressing using long values in Java.",
            "And of course, various cell types not only double but also into char, Boolean, strings, objects, generics.",
            "There should be everything in it.",
            "So in this interface I defined all the functions that I would need to perform on a matrix.",
            "So basically in yoga bar plus minus, multiply, transpose, but also everything everything you else need as a machine learner like yeah, variance, mean, standard deviation.",
            "Selecting submatrix is of course import export.",
            "Alization now The thing is, once you have defined this interface, then it's possible to do one single implementation.",
            "Which could perform all these methods.",
            "Here you only have to implement everything just once you only.",
            "Build one class and this will be able to do the transpose variants submatrix and so so on.",
            "This is defined in one abstract matrix implementation.",
            "And now the clue.",
            "Of this package is the actual data storage can be.",
            "Yeah, pretty much everything else.",
            "So you could have the matrix data in memory as double values in values strings, whatever.",
            "You could have other matrix libraries wrapped inside this concept about Java libraries or even image files, audio files, extra tables, whatever.",
            "Or even databases.",
            "My SQL, Postgres and so on.",
            "So this will be the data storage and what is been done is defined here in this abstract matrix class and the only two methods which you need to pass to the actual implementation.",
            "One function to get the size of the matrix, how many rows are many columns, how many dimensions?",
            "And then you must be able to change the data in it or request the data in it so only these two methods have to be implemented.",
            "By one matrix implementation.",
            "So it's really easy to build your own implementation for your own software package or your own data format, or whatever.",
            "You just need these two methods and then everything of this works.",
            "And of course, if you have a better implementation for something, then you might be able to pass these methods.",
            "To your implementation, you are able to override the methods.",
            "For example, if you have an SQL database, this database is of course able to really pretty fast calculate the mean or the Max of the of the values in it.",
            "So these functions could be implemented direct in the in the storage implementation.",
            "So this was the architecture that you really.",
            "Could exchange the data storage implementation are complete separation between data storage and the algorithms that are performed on it, and this metric makes it possible to even introduce other matrix libraries inside this framework?",
            "And this is of course a good thing.",
            "If you have worried about performance.",
            "We've heard before that Jay Blast has very high performance algorithms which you could execute, and so."
        ],
        [
            "The idea of this package is that you, yeah, delegate the algorithms to faster matrix packages if they are available.",
            "So here is 1 demonstration from my computer which is doing a singular value decomposition.",
            "And yeah, you have to look at the at the red line.",
            "The red line will be my package here.",
            "So as you can see for very small matrixes, JAMA is a.",
            "It's a very good package.",
            "The old software which is out for a couple of years.",
            "But the size of the matrix starts to grow and the performance is not so good anymore because there are some new packages which use multithreading in Java, which jamaan called does not.",
            "So at some point it makes sense to switch to another library which is faster in this case and in this example I used gel Go, another matrix package.",
            "Which has a lower performance for small for small matrixes.",
            "So on top I use jamaan.",
            "At some point I change to another package and then I get the high performance for really large matrixes.",
            "And at the time when J plus will support singular value decomposition, which will go like this maybe?"
        ],
        [
            "OK, so let's talk again a little more about the inside of this this package.",
            "What I found out is that there are essentially three different ways that you would want to perform a calculation on some data.",
            "So let's say you want to calculate the logarithm of some values which are in a matrix.",
            "Then in Matlab it goes like this, you have the original data.",
            "Take the logarithm of it and you get the second matrix with the result of everything.",
            "So in the end you have two times the data size.",
            "Memory, so again, if you, if you're low on memory.",
            "If this matrix is already 3 gigabytes in size.",
            "This is also 3 gigabytes in size.",
            "You will not be able to do this calculation in memory if you only have 4 gigabytes of main memory.",
            "So there's another way of doing it.",
            "We could just perform the calculation celebici cell and modify the original matrix.",
            "So after that you.",
            "You have only once the data in your memory.",
            "And.",
            "The drawback is that the original matrix is destroyed and you only have the result available after that.",
            "So there's a third way of doing a calculation which is illustrated here.",
            "You just attach the function to the original data, so you could just attach the function to do the logarithm of the data and after that this function will be calculated on demand every time you request some value from it.",
            "Then it will go back to the original data and will calculate it on the fly."
        ],
        [
            "OK yeah, let's do the other features really quickly that we have more time for the demo.",
            "Of course, it's important that you already be able to store meta data in your matrix becausw.",
            "This is just values and you cannot make any use of it, so it's a possibility to attach a label column labels.",
            "Row labels can also label the axes, so you can store these meter information together with the original."
        ],
        [
            "Data.",
            "Then of course it's always a problem of the values which are stored inside a matrix.",
            "Let's say you import some file from disk, which is a CSV file, separated file format.",
            "Then at the beginning everything is just strings.",
            "What you have data in the matrix, so.",
            "You have to decide afterwards.",
            "Do you want double values to go and float values, or do you want to treat a number as a string?",
            "So all of this is also implemented in the software.",
            "You could do some automatic entry type conversion.",
            "Depending on your needs and of course you have support for also big integer, big decimal string and you could also define through the generic interface your own value types which you want to store in."
        ],
        [
            "In the matrix.",
            "Yeah, then, let's switch to a demo.",
            "The Universal Java matrix packages is mainly a library which you could use in your own software, so you.",
            "Could write your code like this to do the matrix complete computations, but at the same time there's also some visualization method which you can use interactively over user interface.",
            "So this is what you would have to write in Java and now I will switch to the program itself and show how to do the same thing in the user interface.",
            "So if you start the software here, then there comes the the welcome screen.",
            "You see, this would be a visualization of the whole matrix.",
            "And here in this part you have like a like an Excel sheet where you can modify single values in the data and we have.",
            "I've included some coloring scheme which marks values between zero and a red color values above 0 in a green color.",
            "If the values are getting bigger than it's going to be, yellow text will have also different colors and everything that is black is essentially equal to 0.",
            "So.",
            "If we.",
            "Now import matrix from file.",
            "Yeah, then.",
            "You get an overview of the of the complete data.",
            "But you have to memory enter in the editor on on the on the right hand side and as you can see this is.",
            "12,000 columns in size, which you can.",
            "Yeah, see pretty easily and then The thing is, you can also navigate really easily in it if you want to jump to this point, you just.",
            "Click where you want to go and the editor will jump at the correct position.",
            "So this is much more convenient than you would be able to do it in excellent or open office or something.",
            "You can really look at the data and if something is interesting for you, you can navigate to it and take a look at it.",
            "Of course, you could also select some sub part of it and.",
            "Yeah, slice it out maybe.",
            "See.",
            "OK, so now matrix is a little smaller than before.",
            "Yeah, let's let's do an example which might be a little relevant for machine learners.",
            "You see, all the values are pretty high, up to 10,000 and really low up to minus 1000, so let's first.",
            "Start 2.",
            "Yeah.",
            "Normalized by by mean and standard variance.",
            "We normalize over the rows.",
            "So now this looks much better for machine learning.",
            "All the values have zero mean and standard deviation of 1.",
            "So what would happen now if we would have missing values?",
            "In this.",
            "In this matrix?",
            "Well, let's say there would be 5% of missing values in it.",
            "See now we have this.",
            "Yeah, couple fields in in the data with this.",
            "This happened a lot with the data which which I was using at missing missing values everywhere.",
            "So.",
            "This software includes some methods too.",
            "Calculate out the missing values of it.",
            "So let's do it like this.",
            "But as you see now there are no missing values in it anymore.",
            "Yeah, could also go and make a decomposition of this data.",
            "This was a little faster, see here that was lower triangle angular matrix and the second one is upper trial angular matrix.",
            "Well, let me just show you one more thing which would be women.",
            "Let's say we want to resample the data over Bootstrap for example.",
            "Now I will demonstrate the linking function.",
            "Now we I would just link to the original data and create from this a very big matrix.",
            "Let's say we want 1,000,000.",
            "Rose in this matrix.",
            "So as you see this this goes really fast and this matrix here is is really really huge.",
            "But you can really get a visual visualization in real time, and you can still navigate in the in the data.",
            "But Java is not able to to show the row numbers anymore cause it does not support it up to this size.",
            "But still you can jump around, select something, cut out.",
            "And yeah, this would be gigabytes of data if you would try to do the same in MATLAB for example.",
            "OK, so much for the demo.",
            "I just wanted to give you a very quick introduction and show you on the screen what you could do with it.",
            "Yeah, let's.",
            "Just finished here."
        ],
        [
            "So yeah, so the University have a matrix packages as a really novel and innovative library, which can include other data formats very easily and which you can easily extend for your own use.",
            "Yeah, Speaking of open source, it is of course an open source license.",
            "I choose the GPL license for it, and as we start before documentation is often an issue with the open source project.",
            "And of course it's the same with mine too, so the documentation might need a little more improvement.",
            "So yeah.",
            "Would be great if some people would.",
            "Start to contribute to the software.",
            "Cause.",
            "Yeah, it's it's a.",
            "It's an interesting concept I think, and it helps me a lot with my projects and I hope that it could do the same for others also.",
            "So thank you very much for your attention.",
            "Any questions?",
            "I mean, you showed all these graphical examples.",
            "Yeah.",
            "You have trees you would.",
            "You would just include the jar file and you would be able to to calculate like this.",
            "And if you want your own matrix implementation, you would just say extends abstract matrix or even better, extends abstract dense double matrix 2 dimensions or abstract int matrix, 5 dimensions, whatever.",
            "So there are all these subclasses and then you would only have to override these two methods or three methods.",
            "Size guitar and setter and then your matrix would be in this framework.",
            "OK, that's another yeah.",
            "Probably a question both for you and Nico, so never done any scientific computing with Java.",
            "Yeah, I wonder, once the relative speed of well implemented matrix computing algorithms in Java and Fortune tunes.",
            "Package.",
            "I did some speed comparisons.",
            "It depends of course very much on the algorithm and the implementation.",
            "So what McHugh is doing the native Java plus code is really really fast when it comes to matrix decomposition or something.",
            "Speaking of matrix multiplication, for example, my software has a block matrix implementation which is very good format for storing data to be able to do a fast matrix multiplication afterwards.",
            "So in fact, depending on the computer architecture, the matrix multiplication in my package might in some cases even be faster than the native code, which is not optimized regarding the storage format, so.",
            "Yeah, it depends on the storage.",
            "If you have a block matrix multiplication in Java then this can be faster then the default storage format in native code.",
            "Dodge Dakota much faster because you cannot just control the amount of assembler code job which you get in Java but for small matrices or for special in storage teams.",
            "And yeah, it's just as fast so the the just in time compilers of Java baby introduced code as fast this season.",
            "Possibly.",
            "So you're not a problem?",
            "If so, explain in my post.",
            "So is that if you call native code from Java normally you cannot prevent that the area is copied ones right?",
            "So if you do the vector addition and we just go over to the area once, then it's it's much much more time to copy it and then do the addition and copy it back.",
            "But for matrix matrix multiplication or something we have like in 10 cubits really just as fast as C. I don't know matrices.",
            "Times 1000 or something.",
            "It's just as fast.",
            "Yeah, yeah.",
            "With your partner.",
            "The problem sorry, sorry I didn't get it.",
            "I can value problems.",
            "Yes, it's also included."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so here we go, yeah.",
                    "label": 0
                },
                {
                    "sent": "So again, we're talking about linear algebra and yet another metrics package for Java.",
                    "label": 0
                },
                {
                    "sent": "You might know that there are a couple of Java matrix libraries out there, so I will start with an introduction.",
                    "label": 0
                },
                {
                    "sent": "Why in hell do we need yet another matrix package for Java and yeah, what are the differences that I implemented in my software so I will make a very quick walk over some of the basic concepts and.",
                    "label": 0
                },
                {
                    "sent": "Yeah, the ideas behind it and present some of its features.",
                    "label": 0
                },
                {
                    "sent": "And after that I hope we have time that I can give a little demonstration of the life program that you can get a better understanding of what is what was the plan of.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "What's going on here?",
                    "label": 0
                },
                {
                    "sent": "OK, so as you all machine learners I don't have explained.",
                    "label": 0
                },
                {
                    "sent": "Have to explain that matrix algebra.",
                    "label": 0
                },
                {
                    "sent": "Linear algebra is really important for my work.",
                    "label": 0
                },
                {
                    "sent": "I need needed a lot.",
                    "label": 0
                },
                {
                    "sent": "I have to do matrix computations for all of my projects that I'm doing and the thing for me was I had to do it in Java because sometimes we had a Tomcat web server.",
                    "label": 0
                },
                {
                    "sent": "And yeah then we had to use Java software so it was not an option to use Matlab or Octave for.",
                    "label": 0
                },
                {
                    "sent": "Python or something else.",
                    "label": 0
                },
                {
                    "sent": "It had to be in Java, so I started looking out for matrix packages in Java and you know, JAMA called comments mask.",
                    "label": 0
                },
                {
                    "sent": "These are the most popular packages.",
                    "label": 0
                },
                {
                    "sent": "But at some point I found out that yeah, these didn't completely fulfill my needs and the reason.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "For that you can see on this screen here.",
                    "label": 0
                },
                {
                    "sent": "The thing is, everything is fine as long as you need dense matrix.",
                    "label": 0
                },
                {
                    "sent": "This 2 dimensions with double values.",
                    "label": 0
                },
                {
                    "sent": "Then you can choose of all these 20 different matrix packages that there are in Java.",
                    "label": 0
                },
                {
                    "sent": "But the problem begins when you need sparse matrixes.",
                    "label": 0
                },
                {
                    "sent": "Then only a couple of libraries can be used if you want multi dimensional matrix is even worse, bigger than 4 dimensions is really hard to find and we have one problem I was facing is that I often had to deal with.",
                    "label": 0
                },
                {
                    "sent": "Amounts of data which would not fit into main memory of a single computer, so if.",
                    "label": 0
                },
                {
                    "sent": "Main memory of a computer is only four GB.",
                    "label": 0
                },
                {
                    "sent": "Then you might be able to put Big 3 gigabytes of data into your program, and for my projects I was sometimes dealing with amounts of 10 gigabytes or even more, and at this point was not even an option to use Matlab or something else.",
                    "label": 0
                },
                {
                    "sent": "So I really had to try something new.",
                    "label": 0
                },
                {
                    "sent": "And of course, yeah, I also do research, so for me it's always interesting to be able to pretty quickly.",
                    "label": 0
                },
                {
                    "sent": "Export or import or visualize something in Matlab.",
                    "label": 0
                },
                {
                    "sent": "Built our Latics fire from something to publish the results and I just wanted to have a framework which would make everything easier for me.",
                    "label": 0
                },
                {
                    "sent": "So in the end I started yeah to build my own matrix package for Java.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Yeah, this was the idea.",
                    "label": 0
                },
                {
                    "sent": "So at the beginning I just started.",
                    "label": 0
                },
                {
                    "sent": "What do I want to do with the matrix?",
                    "label": 1
                },
                {
                    "sent": "So I designed one interface which would be suitable for all my needs.",
                    "label": 0
                },
                {
                    "sent": "I would have multi dimensions in it.",
                    "label": 1
                },
                {
                    "sent": "I can support dense and sparse matrixes and I will support more than than integer values.",
                    "label": 1
                },
                {
                    "sent": "I will support 2 to the power of 60 three rows and columns which is addressing using long values in Java.",
                    "label": 1
                },
                {
                    "sent": "And of course, various cell types not only double but also into char, Boolean, strings, objects, generics.",
                    "label": 1
                },
                {
                    "sent": "There should be everything in it.",
                    "label": 0
                },
                {
                    "sent": "So in this interface I defined all the functions that I would need to perform on a matrix.",
                    "label": 0
                },
                {
                    "sent": "So basically in yoga bar plus minus, multiply, transpose, but also everything everything you else need as a machine learner like yeah, variance, mean, standard deviation.",
                    "label": 1
                },
                {
                    "sent": "Selecting submatrix is of course import export.",
                    "label": 1
                },
                {
                    "sent": "Alization now The thing is, once you have defined this interface, then it's possible to do one single implementation.",
                    "label": 1
                },
                {
                    "sent": "Which could perform all these methods.",
                    "label": 1
                },
                {
                    "sent": "Here you only have to implement everything just once you only.",
                    "label": 1
                },
                {
                    "sent": "Build one class and this will be able to do the transpose variants submatrix and so so on.",
                    "label": 1
                },
                {
                    "sent": "This is defined in one abstract matrix implementation.",
                    "label": 1
                },
                {
                    "sent": "And now the clue.",
                    "label": 0
                },
                {
                    "sent": "Of this package is the actual data storage can be.",
                    "label": 0
                },
                {
                    "sent": "Yeah, pretty much everything else.",
                    "label": 1
                },
                {
                    "sent": "So you could have the matrix data in memory as double values in values strings, whatever.",
                    "label": 1
                },
                {
                    "sent": "You could have other matrix libraries wrapped inside this concept about Java libraries or even image files, audio files, extra tables, whatever.",
                    "label": 0
                },
                {
                    "sent": "Or even databases.",
                    "label": 1
                },
                {
                    "sent": "My SQL, Postgres and so on.",
                    "label": 0
                },
                {
                    "sent": "So this will be the data storage and what is been done is defined here in this abstract matrix class and the only two methods which you need to pass to the actual implementation.",
                    "label": 0
                },
                {
                    "sent": "One function to get the size of the matrix, how many rows are many columns, how many dimensions?",
                    "label": 0
                },
                {
                    "sent": "And then you must be able to change the data in it or request the data in it so only these two methods have to be implemented.",
                    "label": 0
                },
                {
                    "sent": "By one matrix implementation.",
                    "label": 0
                },
                {
                    "sent": "So it's really easy to build your own implementation for your own software package or your own data format, or whatever.",
                    "label": 0
                },
                {
                    "sent": "You just need these two methods and then everything of this works.",
                    "label": 1
                },
                {
                    "sent": "And of course, if you have a better implementation for something, then you might be able to pass these methods.",
                    "label": 0
                },
                {
                    "sent": "To your implementation, you are able to override the methods.",
                    "label": 0
                },
                {
                    "sent": "For example, if you have an SQL database, this database is of course able to really pretty fast calculate the mean or the Max of the of the values in it.",
                    "label": 0
                },
                {
                    "sent": "So these functions could be implemented direct in the in the storage implementation.",
                    "label": 1
                },
                {
                    "sent": "So this was the architecture that you really.",
                    "label": 0
                },
                {
                    "sent": "Could exchange the data storage implementation are complete separation between data storage and the algorithms that are performed on it, and this metric makes it possible to even introduce other matrix libraries inside this framework?",
                    "label": 0
                },
                {
                    "sent": "And this is of course a good thing.",
                    "label": 0
                },
                {
                    "sent": "If you have worried about performance.",
                    "label": 0
                },
                {
                    "sent": "We've heard before that Jay Blast has very high performance algorithms which you could execute, and so.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The idea of this package is that you, yeah, delegate the algorithms to faster matrix packages if they are available.",
                    "label": 0
                },
                {
                    "sent": "So here is 1 demonstration from my computer which is doing a singular value decomposition.",
                    "label": 0
                },
                {
                    "sent": "And yeah, you have to look at the at the red line.",
                    "label": 0
                },
                {
                    "sent": "The red line will be my package here.",
                    "label": 0
                },
                {
                    "sent": "So as you can see for very small matrixes, JAMA is a.",
                    "label": 0
                },
                {
                    "sent": "It's a very good package.",
                    "label": 0
                },
                {
                    "sent": "The old software which is out for a couple of years.",
                    "label": 0
                },
                {
                    "sent": "But the size of the matrix starts to grow and the performance is not so good anymore because there are some new packages which use multithreading in Java, which jamaan called does not.",
                    "label": 0
                },
                {
                    "sent": "So at some point it makes sense to switch to another library which is faster in this case and in this example I used gel Go, another matrix package.",
                    "label": 0
                },
                {
                    "sent": "Which has a lower performance for small for small matrixes.",
                    "label": 0
                },
                {
                    "sent": "So on top I use jamaan.",
                    "label": 0
                },
                {
                    "sent": "At some point I change to another package and then I get the high performance for really large matrixes.",
                    "label": 0
                },
                {
                    "sent": "And at the time when J plus will support singular value decomposition, which will go like this maybe?",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so let's talk again a little more about the inside of this this package.",
                    "label": 0
                },
                {
                    "sent": "What I found out is that there are essentially three different ways that you would want to perform a calculation on some data.",
                    "label": 0
                },
                {
                    "sent": "So let's say you want to calculate the logarithm of some values which are in a matrix.",
                    "label": 0
                },
                {
                    "sent": "Then in Matlab it goes like this, you have the original data.",
                    "label": 0
                },
                {
                    "sent": "Take the logarithm of it and you get the second matrix with the result of everything.",
                    "label": 0
                },
                {
                    "sent": "So in the end you have two times the data size.",
                    "label": 0
                },
                {
                    "sent": "Memory, so again, if you, if you're low on memory.",
                    "label": 0
                },
                {
                    "sent": "If this matrix is already 3 gigabytes in size.",
                    "label": 0
                },
                {
                    "sent": "This is also 3 gigabytes in size.",
                    "label": 0
                },
                {
                    "sent": "You will not be able to do this calculation in memory if you only have 4 gigabytes of main memory.",
                    "label": 0
                },
                {
                    "sent": "So there's another way of doing it.",
                    "label": 0
                },
                {
                    "sent": "We could just perform the calculation celebici cell and modify the original matrix.",
                    "label": 0
                },
                {
                    "sent": "So after that you.",
                    "label": 0
                },
                {
                    "sent": "You have only once the data in your memory.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "The drawback is that the original matrix is destroyed and you only have the result available after that.",
                    "label": 0
                },
                {
                    "sent": "So there's a third way of doing a calculation which is illustrated here.",
                    "label": 0
                },
                {
                    "sent": "You just attach the function to the original data, so you could just attach the function to do the logarithm of the data and after that this function will be calculated on demand every time you request some value from it.",
                    "label": 0
                },
                {
                    "sent": "Then it will go back to the original data and will calculate it on the fly.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK yeah, let's do the other features really quickly that we have more time for the demo.",
                    "label": 0
                },
                {
                    "sent": "Of course, it's important that you already be able to store meta data in your matrix becausw.",
                    "label": 0
                },
                {
                    "sent": "This is just values and you cannot make any use of it, so it's a possibility to attach a label column labels.",
                    "label": 0
                },
                {
                    "sent": "Row labels can also label the axes, so you can store these meter information together with the original.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Data.",
                    "label": 0
                },
                {
                    "sent": "Then of course it's always a problem of the values which are stored inside a matrix.",
                    "label": 0
                },
                {
                    "sent": "Let's say you import some file from disk, which is a CSV file, separated file format.",
                    "label": 0
                },
                {
                    "sent": "Then at the beginning everything is just strings.",
                    "label": 0
                },
                {
                    "sent": "What you have data in the matrix, so.",
                    "label": 0
                },
                {
                    "sent": "You have to decide afterwards.",
                    "label": 0
                },
                {
                    "sent": "Do you want double values to go and float values, or do you want to treat a number as a string?",
                    "label": 0
                },
                {
                    "sent": "So all of this is also implemented in the software.",
                    "label": 0
                },
                {
                    "sent": "You could do some automatic entry type conversion.",
                    "label": 0
                },
                {
                    "sent": "Depending on your needs and of course you have support for also big integer, big decimal string and you could also define through the generic interface your own value types which you want to store in.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "In the matrix.",
                    "label": 0
                },
                {
                    "sent": "Yeah, then, let's switch to a demo.",
                    "label": 0
                },
                {
                    "sent": "The Universal Java matrix packages is mainly a library which you could use in your own software, so you.",
                    "label": 0
                },
                {
                    "sent": "Could write your code like this to do the matrix complete computations, but at the same time there's also some visualization method which you can use interactively over user interface.",
                    "label": 0
                },
                {
                    "sent": "So this is what you would have to write in Java and now I will switch to the program itself and show how to do the same thing in the user interface.",
                    "label": 0
                },
                {
                    "sent": "So if you start the software here, then there comes the the welcome screen.",
                    "label": 0
                },
                {
                    "sent": "You see, this would be a visualization of the whole matrix.",
                    "label": 0
                },
                {
                    "sent": "And here in this part you have like a like an Excel sheet where you can modify single values in the data and we have.",
                    "label": 0
                },
                {
                    "sent": "I've included some coloring scheme which marks values between zero and a red color values above 0 in a green color.",
                    "label": 0
                },
                {
                    "sent": "If the values are getting bigger than it's going to be, yellow text will have also different colors and everything that is black is essentially equal to 0.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "If we.",
                    "label": 0
                },
                {
                    "sent": "Now import matrix from file.",
                    "label": 0
                },
                {
                    "sent": "Yeah, then.",
                    "label": 0
                },
                {
                    "sent": "You get an overview of the of the complete data.",
                    "label": 0
                },
                {
                    "sent": "But you have to memory enter in the editor on on the on the right hand side and as you can see this is.",
                    "label": 0
                },
                {
                    "sent": "12,000 columns in size, which you can.",
                    "label": 0
                },
                {
                    "sent": "Yeah, see pretty easily and then The thing is, you can also navigate really easily in it if you want to jump to this point, you just.",
                    "label": 0
                },
                {
                    "sent": "Click where you want to go and the editor will jump at the correct position.",
                    "label": 0
                },
                {
                    "sent": "So this is much more convenient than you would be able to do it in excellent or open office or something.",
                    "label": 0
                },
                {
                    "sent": "You can really look at the data and if something is interesting for you, you can navigate to it and take a look at it.",
                    "label": 0
                },
                {
                    "sent": "Of course, you could also select some sub part of it and.",
                    "label": 0
                },
                {
                    "sent": "Yeah, slice it out maybe.",
                    "label": 0
                },
                {
                    "sent": "See.",
                    "label": 0
                },
                {
                    "sent": "OK, so now matrix is a little smaller than before.",
                    "label": 0
                },
                {
                    "sent": "Yeah, let's let's do an example which might be a little relevant for machine learners.",
                    "label": 0
                },
                {
                    "sent": "You see, all the values are pretty high, up to 10,000 and really low up to minus 1000, so let's first.",
                    "label": 0
                },
                {
                    "sent": "Start 2.",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "Normalized by by mean and standard variance.",
                    "label": 0
                },
                {
                    "sent": "We normalize over the rows.",
                    "label": 0
                },
                {
                    "sent": "So now this looks much better for machine learning.",
                    "label": 0
                },
                {
                    "sent": "All the values have zero mean and standard deviation of 1.",
                    "label": 0
                },
                {
                    "sent": "So what would happen now if we would have missing values?",
                    "label": 0
                },
                {
                    "sent": "In this.",
                    "label": 0
                },
                {
                    "sent": "In this matrix?",
                    "label": 0
                },
                {
                    "sent": "Well, let's say there would be 5% of missing values in it.",
                    "label": 0
                },
                {
                    "sent": "See now we have this.",
                    "label": 0
                },
                {
                    "sent": "Yeah, couple fields in in the data with this.",
                    "label": 0
                },
                {
                    "sent": "This happened a lot with the data which which I was using at missing missing values everywhere.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "This software includes some methods too.",
                    "label": 0
                },
                {
                    "sent": "Calculate out the missing values of it.",
                    "label": 0
                },
                {
                    "sent": "So let's do it like this.",
                    "label": 0
                },
                {
                    "sent": "But as you see now there are no missing values in it anymore.",
                    "label": 0
                },
                {
                    "sent": "Yeah, could also go and make a decomposition of this data.",
                    "label": 0
                },
                {
                    "sent": "This was a little faster, see here that was lower triangle angular matrix and the second one is upper trial angular matrix.",
                    "label": 0
                },
                {
                    "sent": "Well, let me just show you one more thing which would be women.",
                    "label": 0
                },
                {
                    "sent": "Let's say we want to resample the data over Bootstrap for example.",
                    "label": 0
                },
                {
                    "sent": "Now I will demonstrate the linking function.",
                    "label": 0
                },
                {
                    "sent": "Now we I would just link to the original data and create from this a very big matrix.",
                    "label": 0
                },
                {
                    "sent": "Let's say we want 1,000,000.",
                    "label": 0
                },
                {
                    "sent": "Rose in this matrix.",
                    "label": 0
                },
                {
                    "sent": "So as you see this this goes really fast and this matrix here is is really really huge.",
                    "label": 0
                },
                {
                    "sent": "But you can really get a visual visualization in real time, and you can still navigate in the in the data.",
                    "label": 0
                },
                {
                    "sent": "But Java is not able to to show the row numbers anymore cause it does not support it up to this size.",
                    "label": 0
                },
                {
                    "sent": "But still you can jump around, select something, cut out.",
                    "label": 0
                },
                {
                    "sent": "And yeah, this would be gigabytes of data if you would try to do the same in MATLAB for example.",
                    "label": 0
                },
                {
                    "sent": "OK, so much for the demo.",
                    "label": 0
                },
                {
                    "sent": "I just wanted to give you a very quick introduction and show you on the screen what you could do with it.",
                    "label": 0
                },
                {
                    "sent": "Yeah, let's.",
                    "label": 0
                },
                {
                    "sent": "Just finished here.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So yeah, so the University have a matrix packages as a really novel and innovative library, which can include other data formats very easily and which you can easily extend for your own use.",
                    "label": 0
                },
                {
                    "sent": "Yeah, Speaking of open source, it is of course an open source license.",
                    "label": 0
                },
                {
                    "sent": "I choose the GPL license for it, and as we start before documentation is often an issue with the open source project.",
                    "label": 0
                },
                {
                    "sent": "And of course it's the same with mine too, so the documentation might need a little more improvement.",
                    "label": 0
                },
                {
                    "sent": "So yeah.",
                    "label": 0
                },
                {
                    "sent": "Would be great if some people would.",
                    "label": 0
                },
                {
                    "sent": "Start to contribute to the software.",
                    "label": 0
                },
                {
                    "sent": "Cause.",
                    "label": 0
                },
                {
                    "sent": "Yeah, it's it's a.",
                    "label": 0
                },
                {
                    "sent": "It's an interesting concept I think, and it helps me a lot with my projects and I hope that it could do the same for others also.",
                    "label": 0
                },
                {
                    "sent": "So thank you very much for your attention.",
                    "label": 0
                },
                {
                    "sent": "Any questions?",
                    "label": 0
                },
                {
                    "sent": "I mean, you showed all these graphical examples.",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "You have trees you would.",
                    "label": 0
                },
                {
                    "sent": "You would just include the jar file and you would be able to to calculate like this.",
                    "label": 0
                },
                {
                    "sent": "And if you want your own matrix implementation, you would just say extends abstract matrix or even better, extends abstract dense double matrix 2 dimensions or abstract int matrix, 5 dimensions, whatever.",
                    "label": 0
                },
                {
                    "sent": "So there are all these subclasses and then you would only have to override these two methods or three methods.",
                    "label": 0
                },
                {
                    "sent": "Size guitar and setter and then your matrix would be in this framework.",
                    "label": 0
                },
                {
                    "sent": "OK, that's another yeah.",
                    "label": 0
                },
                {
                    "sent": "Probably a question both for you and Nico, so never done any scientific computing with Java.",
                    "label": 0
                },
                {
                    "sent": "Yeah, I wonder, once the relative speed of well implemented matrix computing algorithms in Java and Fortune tunes.",
                    "label": 0
                },
                {
                    "sent": "Package.",
                    "label": 0
                },
                {
                    "sent": "I did some speed comparisons.",
                    "label": 0
                },
                {
                    "sent": "It depends of course very much on the algorithm and the implementation.",
                    "label": 0
                },
                {
                    "sent": "So what McHugh is doing the native Java plus code is really really fast when it comes to matrix decomposition or something.",
                    "label": 0
                },
                {
                    "sent": "Speaking of matrix multiplication, for example, my software has a block matrix implementation which is very good format for storing data to be able to do a fast matrix multiplication afterwards.",
                    "label": 0
                },
                {
                    "sent": "So in fact, depending on the computer architecture, the matrix multiplication in my package might in some cases even be faster than the native code, which is not optimized regarding the storage format, so.",
                    "label": 0
                },
                {
                    "sent": "Yeah, it depends on the storage.",
                    "label": 0
                },
                {
                    "sent": "If you have a block matrix multiplication in Java then this can be faster then the default storage format in native code.",
                    "label": 0
                },
                {
                    "sent": "Dodge Dakota much faster because you cannot just control the amount of assembler code job which you get in Java but for small matrices or for special in storage teams.",
                    "label": 0
                },
                {
                    "sent": "And yeah, it's just as fast so the the just in time compilers of Java baby introduced code as fast this season.",
                    "label": 0
                },
                {
                    "sent": "Possibly.",
                    "label": 0
                },
                {
                    "sent": "So you're not a problem?",
                    "label": 0
                },
                {
                    "sent": "If so, explain in my post.",
                    "label": 0
                },
                {
                    "sent": "So is that if you call native code from Java normally you cannot prevent that the area is copied ones right?",
                    "label": 0
                },
                {
                    "sent": "So if you do the vector addition and we just go over to the area once, then it's it's much much more time to copy it and then do the addition and copy it back.",
                    "label": 0
                },
                {
                    "sent": "But for matrix matrix multiplication or something we have like in 10 cubits really just as fast as C. I don't know matrices.",
                    "label": 0
                },
                {
                    "sent": "Times 1000 or something.",
                    "label": 0
                },
                {
                    "sent": "It's just as fast.",
                    "label": 0
                },
                {
                    "sent": "Yeah, yeah.",
                    "label": 0
                },
                {
                    "sent": "With your partner.",
                    "label": 0
                },
                {
                    "sent": "The problem sorry, sorry I didn't get it.",
                    "label": 0
                },
                {
                    "sent": "I can value problems.",
                    "label": 0
                },
                {
                    "sent": "Yes, it's also included.",
                    "label": 0
                }
            ]
        }
    }
}