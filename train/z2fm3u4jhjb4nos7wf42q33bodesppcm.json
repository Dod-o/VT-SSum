{
    "id": "z2fm3u4jhjb4nos7wf42q33bodesppcm",
    "title": "Answering SPARQL Queries over Databases under OWL 2 QL Entailment Regime",
    "info": {
        "author": [
            "Roman Kontchakov, Department of Computer Science and Information Systems, Birkbeck College, University of London"
        ],
        "published": "Dec. 19, 2014",
        "recorded": "October 2014",
        "category": [
            "Top->Computer Science->Semantic Web"
        ]
    },
    "url": "http://videolectures.net/iswc2014_kontchakov_sparql_queries/",
    "segmentation": [
        [
            "This is joint work with my colleagues from China and IBM as an SBIR back so.",
            "My car is actually here to support me.",
            "If you have some tricky questions."
        ],
        [
            "So, but I would actually have can't describe the PDA and actually put it actually did this kind of slide and would need some.",
            "I wouldn't actually need to explain it again.",
            "Well, except that said, there are some nuances which I suppose should be mentioned here is.",
            "That's, well, listen.",
            "The community where I'm coming from OBD was understood slightly differently, so the idea was that, well, the user gives a conjunctive query.",
            "Well there is a slight nuance there that it's not actually sparkle queries you conjunctive query and.",
            "There are some pre exam and then the data is indeed stored in database and then there are mappings and then if you apply mappings to the database you would construct what's called the virtual RDF graph.",
            "So that's just the concept that doesn't need to be materialized but just.",
            "That is used essentially in all the constructions in all the proofs and so on.",
            "But then let's say the conjunctive query you take the ontology and then you compute what's called the certain answers over that virtual RDF graph, right?",
            "And so while certain answers really means that you have to consider all possible models.",
            "And so take the intersection of all dancers.",
            "Well, that's an interesting concept.",
            "But the question is that is that feasible in practice?",
            "While obviously not and then?",
            "And then actually, people in Rome realized that.",
            "Well, it can be done for any pathology language the intelligent language has to be severely restricted and they came up with this idea of our secure log was called delight in those days.",
            "Answer.",
            "And so this is 1 restrictions on villages, just not any ontologies.",
            "Also kill and then the mappings they have to be global as view mapping.",
            "So you cannot use any other thing there and.",
            "And then when you can actually do, you can say query.",
            "You can check the ontology and the mappings.",
            "You can combine them together and produce an SQL query and that SQL query can be executed over the database.",
            "Alright, so.",
            "Now the question actually that we had in mind when we started this paper is can you, instead of considering conjunctive queries, can you actually work with sparkle?",
            "And so would the same approach work that was our main question and now, well, actually, why did we bother with Sparkle?",
            "All The thing is that.",
            "Up mobility is nothing new.",
            "I mean it's been here for decades, but the point is that even though well, people quite often wrote queries in sparkle, what they really meant was conjunctive queries, and the difference is like this.",
            "So in sparkling in addition to well, usually first other features you have actually met the variables so you have variables for classes and properties.",
            "This is first thing, then the second thing actually in sparkle.",
            "You have all constructs which non monotonic something like optional.",
            "Those things actually absolutely conjunctive queries.",
            "And.",
            "But then when you add those normal technical features, you quickly become, well, the problem of answering queries quickly becomes undecidable and therefore you have somehow tourist fix and then version 1.",
            "One of Sparkle actually defines something that was called entailment regimes.",
            "And L entailment regime.",
            "It restricted the understanding of how variables can be used, but what they really mean in terms of ontologies and The thing is, that's once again with the difference of also kill what one present actually is that in principle, in out so CLO you can't actually, not always you can materialize.",
            "The in construct was called the Canonical model.",
            "It can be simply infinite.",
            "And so well tamed, it behavior variables and blank nodes in under the entailment regime has to be mapped only through the elements in the virtual Arg Arg graph, not so those labeled nails that can be potentially constructed.",
            "Now."
        ],
        [
            "Well, the way we approach this problem, answering SPARQL queries over databases under the entailment regime, we split this into three steps.",
            "Step one would take a sparkle query when it would take an ontology and we consider this under the entailment regime and what we do.",
            "Essentially we construct another Spark Sparkle query that would give on any data set that would give the same answers, but I'm the simple instrument under the usual graph matching thing that is standard can sparkle.",
            "Alright, so and the way we actually get rid of the ontology, the way we write it away is essentially using 2 tricks.",
            "The first trick is to use bind to get rid of the meta variables.",
            "Those variables for classes and properties.",
            "For instance here there's query asks for.",
            "For all the students and the classes they belong to, write and what we can do.",
            "We can just look at the ontology, see what classes are there, and then we can write safe Malone Gish Uniondale, saying that's well the student can be ID just a proper studio students or it can be an undergraduate student, can be graduate student right?",
            "So this is tricky.",
            "Sorry and the second trick actually is getting getting rid of.",
            "Profile Tokyo constructs, so we think is that.",
            "You can ask the complex queries while using, even using sparkle in television, you can ask where we can give complex concept and ask whether certain object belongs to that complex concepts.",
            "And then we use the what's called 3 witnesses right?",
            "And just to get rid of that.",
            "That's just a technicality details.",
            "Again in the paper.",
            "But well, there is actually little remark here.",
            "It's interesting that's the way the entailment regimes are defined in sparklies.",
            "Well, essentially what you can use in Sparkle query is the same.",
            "People pattern says in the in the language in the ontology language.",
            "And well, it turns out that if you restrict the ontology language at least added as this formally defined, if you restricted so also kill, then that entailment regime turns out to be, well, just trivially cannot actually have complex concepts.",
            "And well here we strayed away from the leads of the documents, and we say that actually well you can use complex also kill concepts there in the positions well in the class surgeons that actually makes language more expressive.",
            "Otherwise it's just all boils down so.",
            "Especially out subset of old supershell."
        ],
        [
            "No, that was the first step getting rid of the ontology writing it's away.",
            "The second step is translating from sparkled, so SQL and well.",
            "So what essentially happens here?",
            "Well, actually, compression that so we have a sparkle query of a virtual RDF graph and we need to construct an SQL query or this kind of simplified triple database world database that contains those triples from the virtual earlier graph, right?",
            "So well, this has received certain attention and well at first well the problem looks fairly true.",
            "I mean, it's been studied before.",
            "So well.",
            "If you have a triple part and then you can translate it using or selection and projection.",
            "That's fairly easy, right?",
            "So there are lots of different cases there, but it's not interesting."
        ],
        [
            "Right now for the Union Hall Sparklehorse Union answer, Sparkle deals with solution mappings, which are partial functions.",
            "SQL, on the other hand, deals with total mapping, so you take the set of attributes and beach.",
            "Each tuple in relation to have all those values right?",
            "So well, in this particular example, Mother who take the union of those two sets of triples, then, well, we get those partial end defiant and the way you can actually model that in SQL you can use null values.",
            "This again fairly straightforward approach, so we just.",
            "Kind of define it formally there.",
            "So now when we come to filters, here is an interesting thing.",
            "Well, no one actually looked at it modifies as we know, is that multiple users free valued logic and there is again standard assumption that you can just easily get rid of those three values.",
            "So the fair values is true, false and undefined error.",
            "Alright, ask L also uses 3 valid logic and therefore actually it makes sense.",
            "Just so take that into account and translate it straightforwardly, not switching back to the two valid logic and well, for instance, bound is translating, so just not now.",
            "Right now with cancer.",
            "Tricky bits Joanne.",
            "Well well in sparkle simply because sparkle deals with those partial mappings is rather expensive to translate in SQL and essentially what you have to do.",
            "You have to consider all these subsets well.",
            "All the domains of those possible domains for those solution mappings and therefore in principle the translation is exponential."
        ],
        [
            "Now, well there was a trick there.",
            "So basically you can carefully analyze the structure for graph patterns and notice that well.",
            "Sometimes you can guarantee that certain variables involved sparkle expression will always be bound right?",
            "Just looking at the structure of subexpressions, and in that case actually the translation just boils down for the join.",
            "It just boils down, so the usual SQL join in for optional actually boils down to the left join fields, but that's again that's something."
        ],
        [
            "That is known.",
            "So here is just just an example of how we approach it.",
            "So for instance will be GPS world.",
            "All the variables that define with the Union.",
            "I have two.",
            "But take that complicated formula so.",
            "But now comes a kind of really interesting point is that.",
            "Again, it's quite often assumed that, well, at least in theoretical papers on sparkle, that's optional, has just two arguments.",
            "All the standard says that optional has three arguments, and here is the definition from the standard right.",
            "The first thing is, well, field, so the join the second components, called the difference.",
            "And the difference is defined in the following way.",
            "So we just look at all the solution mappings from the second components and either they're incompatible or the.",
            "Condition is false.",
            "No.",
            "I'm not sure actually, that definition is quite correct.",
            "Well, maybe I just don't understand the intention, I think.",
            "Well, correct me if I'm wrong, but I assumed that optional was defined in such a way that each solution mappings from the first set would be represented in the result.",
            "So add it has a match or it doesn't, right?",
            "So now I think what should be written there is that it's not the effective Boolean value is false.",
            "Well, that was actually my way of reading the effective Boolean values false right?",
            "So that all the values false so.",
            "But then the value actually can be in error and that case that mapping actually involved the first component just goes nowhere, so therefore we actually proposed that should be corrected and say that will be effective Boolean value is.",
            "Not true.",
            "Because if it's true, then it goes into the first component, but if it's not true then it should go into the second component.",
            "But as it stands now, it doesn't go anywhere.",
            "So this is the first thing it says is observation and the 2nd observationes.",
            "That's again, the weight difference is different than the ways informally explained in the sparkle standard.",
            "Again, this is something just want to cause some controversy here.",
            "Really, make you think that's well, actually it was mentioned yesterday.",
            "Everyone assumes that sparkle is not so difficult.",
            "Well, I'm not so sure, really.",
            "So The thing is that there isn't a formal explanation that actually suggests that the difference actually is the union of two things there.",
            "Moulton, if you look carefully, actually it's it's not.",
            "It's not simply true.",
            "Well, that difference actually is not the union, so you have to leave it as it is defined, right?",
            "At the game, if you.",
            "But those are kind of things that we discovered in the process of trying to formalize this translation from Sparkling so SQL.",
            "Now the."
        ],
        [
            "Step.",
            "And the first step here is that's where given the SQL query over that simple relation triple and then we need to produce at Meskill query over database that contains.",
            "I've relations to various charity, right?",
            "So well again calling explain this all so we just literally could just plug in the mappings.",
            "However, in practice that doesn't always work, and Brianna he working on so the system discovered that long time ago that basically kind of well ignore thing.",
            "Which is.",
            "I mean it wasn't invented in database semantic query optimization that is using primary and foreign keys to simplify subgroup.",
            "Well, simplify quickly remove redundant joins.",
            "In database it doesn't play that bigger role, because while queries quite often are written by people here, the queries are written there, generated by the machine and therefore they contain lots of redundancies and therefore semantic query optimization is really important.",
            "So this is first thing, the second thing is team mappings.",
            "Again we just want explain that perfectly, so we used the mappings just to make that process efficiently and well.",
            "So get rid of most of the ontology and translate it's compile.",
            "It's in so mappings, but then again mappings.",
            "Although steam mappings that have to be optimized.",
            "And so that actually makes life much more efficient.",
            "And then there is the first field trip there is that if you translate relational dates and so RDF triples, then well, you generate some your eyes and those euro.",
            "Well I arise and they actually they are generated from templates and it is quite important so.",
            "Have a proper look at it, because those strings essentially in database, there would be constructed on the fly and there are many cases where we actually can deal with that and then we can reduce joins over those constructed strings.",
            "We can just reuse them to join, so proper data base attributes.",
            "Right and then all those?"
        ],
        [
            "Steps of translation and all the tricks they were they were implemented in the in the system or the system is being developed in the Free University of Bolts and bolts on a it is developed as part of the European Project Optic.",
            "So we implemented the system and then we just run some tests.",
            "We didn't actually have many systems to compare with.",
            "We compared with pellet and I'll be GP.",
            "Well, simply because we have both properties and improper ontologies and so on and then, well, our experiments show that Poland subscales reasonably well, so we got data up to 500 universities and then valid just died up or somewhere after 100 universities and.",
            "Welcome can be explained, but the point is that there is a system there which is called on top.",
            "It's does spark well, it doesn't answer sparkle queries, So what databases it uses.",
            "Also kill inferencing and parts are mappings.",
            "It's well, lots of implemented, lots of optimizations have been implemented there.",
            "This software actually is open source.",
            "You can download it and use it for free.",
            "And then it has support for many database engines.",
            "Right, thank you.",
            "Thank you speaker.",
            "So we have time for questions."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This is joint work with my colleagues from China and IBM as an SBIR back so.",
                    "label": 0
                },
                {
                    "sent": "My car is actually here to support me.",
                    "label": 0
                },
                {
                    "sent": "If you have some tricky questions.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So, but I would actually have can't describe the PDA and actually put it actually did this kind of slide and would need some.",
                    "label": 0
                },
                {
                    "sent": "I wouldn't actually need to explain it again.",
                    "label": 0
                },
                {
                    "sent": "Well, except that said, there are some nuances which I suppose should be mentioned here is.",
                    "label": 0
                },
                {
                    "sent": "That's, well, listen.",
                    "label": 0
                },
                {
                    "sent": "The community where I'm coming from OBD was understood slightly differently, so the idea was that, well, the user gives a conjunctive query.",
                    "label": 0
                },
                {
                    "sent": "Well there is a slight nuance there that it's not actually sparkle queries you conjunctive query and.",
                    "label": 0
                },
                {
                    "sent": "There are some pre exam and then the data is indeed stored in database and then there are mappings and then if you apply mappings to the database you would construct what's called the virtual RDF graph.",
                    "label": 0
                },
                {
                    "sent": "So that's just the concept that doesn't need to be materialized but just.",
                    "label": 0
                },
                {
                    "sent": "That is used essentially in all the constructions in all the proofs and so on.",
                    "label": 0
                },
                {
                    "sent": "But then let's say the conjunctive query you take the ontology and then you compute what's called the certain answers over that virtual RDF graph, right?",
                    "label": 1
                },
                {
                    "sent": "And so while certain answers really means that you have to consider all possible models.",
                    "label": 0
                },
                {
                    "sent": "And so take the intersection of all dancers.",
                    "label": 0
                },
                {
                    "sent": "Well, that's an interesting concept.",
                    "label": 0
                },
                {
                    "sent": "But the question is that is that feasible in practice?",
                    "label": 0
                },
                {
                    "sent": "While obviously not and then?",
                    "label": 0
                },
                {
                    "sent": "And then actually, people in Rome realized that.",
                    "label": 0
                },
                {
                    "sent": "Well, it can be done for any pathology language the intelligent language has to be severely restricted and they came up with this idea of our secure log was called delight in those days.",
                    "label": 0
                },
                {
                    "sent": "Answer.",
                    "label": 0
                },
                {
                    "sent": "And so this is 1 restrictions on villages, just not any ontologies.",
                    "label": 0
                },
                {
                    "sent": "Also kill and then the mappings they have to be global as view mapping.",
                    "label": 0
                },
                {
                    "sent": "So you cannot use any other thing there and.",
                    "label": 0
                },
                {
                    "sent": "And then when you can actually do, you can say query.",
                    "label": 0
                },
                {
                    "sent": "You can check the ontology and the mappings.",
                    "label": 0
                },
                {
                    "sent": "You can combine them together and produce an SQL query and that SQL query can be executed over the database.",
                    "label": 0
                },
                {
                    "sent": "Alright, so.",
                    "label": 0
                },
                {
                    "sent": "Now the question actually that we had in mind when we started this paper is can you, instead of considering conjunctive queries, can you actually work with sparkle?",
                    "label": 0
                },
                {
                    "sent": "And so would the same approach work that was our main question and now, well, actually, why did we bother with Sparkle?",
                    "label": 0
                },
                {
                    "sent": "All The thing is that.",
                    "label": 0
                },
                {
                    "sent": "Up mobility is nothing new.",
                    "label": 0
                },
                {
                    "sent": "I mean it's been here for decades, but the point is that even though well, people quite often wrote queries in sparkle, what they really meant was conjunctive queries, and the difference is like this.",
                    "label": 0
                },
                {
                    "sent": "So in sparkling in addition to well, usually first other features you have actually met the variables so you have variables for classes and properties.",
                    "label": 0
                },
                {
                    "sent": "This is first thing, then the second thing actually in sparkle.",
                    "label": 0
                },
                {
                    "sent": "You have all constructs which non monotonic something like optional.",
                    "label": 0
                },
                {
                    "sent": "Those things actually absolutely conjunctive queries.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "But then when you add those normal technical features, you quickly become, well, the problem of answering queries quickly becomes undecidable and therefore you have somehow tourist fix and then version 1.",
                    "label": 0
                },
                {
                    "sent": "One of Sparkle actually defines something that was called entailment regimes.",
                    "label": 0
                },
                {
                    "sent": "And L entailment regime.",
                    "label": 0
                },
                {
                    "sent": "It restricted the understanding of how variables can be used, but what they really mean in terms of ontologies and The thing is, that's once again with the difference of also kill what one present actually is that in principle, in out so CLO you can't actually, not always you can materialize.",
                    "label": 0
                },
                {
                    "sent": "The in construct was called the Canonical model.",
                    "label": 0
                },
                {
                    "sent": "It can be simply infinite.",
                    "label": 0
                },
                {
                    "sent": "And so well tamed, it behavior variables and blank nodes in under the entailment regime has to be mapped only through the elements in the virtual Arg Arg graph, not so those labeled nails that can be potentially constructed.",
                    "label": 1
                },
                {
                    "sent": "Now.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Well, the way we approach this problem, answering SPARQL queries over databases under the entailment regime, we split this into three steps.",
                    "label": 0
                },
                {
                    "sent": "Step one would take a sparkle query when it would take an ontology and we consider this under the entailment regime and what we do.",
                    "label": 0
                },
                {
                    "sent": "Essentially we construct another Spark Sparkle query that would give on any data set that would give the same answers, but I'm the simple instrument under the usual graph matching thing that is standard can sparkle.",
                    "label": 0
                },
                {
                    "sent": "Alright, so and the way we actually get rid of the ontology, the way we write it away is essentially using 2 tricks.",
                    "label": 0
                },
                {
                    "sent": "The first trick is to use bind to get rid of the meta variables.",
                    "label": 0
                },
                {
                    "sent": "Those variables for classes and properties.",
                    "label": 0
                },
                {
                    "sent": "For instance here there's query asks for.",
                    "label": 0
                },
                {
                    "sent": "For all the students and the classes they belong to, write and what we can do.",
                    "label": 0
                },
                {
                    "sent": "We can just look at the ontology, see what classes are there, and then we can write safe Malone Gish Uniondale, saying that's well the student can be ID just a proper studio students or it can be an undergraduate student, can be graduate student right?",
                    "label": 0
                },
                {
                    "sent": "So this is tricky.",
                    "label": 0
                },
                {
                    "sent": "Sorry and the second trick actually is getting getting rid of.",
                    "label": 0
                },
                {
                    "sent": "Profile Tokyo constructs, so we think is that.",
                    "label": 0
                },
                {
                    "sent": "You can ask the complex queries while using, even using sparkle in television, you can ask where we can give complex concept and ask whether certain object belongs to that complex concepts.",
                    "label": 0
                },
                {
                    "sent": "And then we use the what's called 3 witnesses right?",
                    "label": 0
                },
                {
                    "sent": "And just to get rid of that.",
                    "label": 0
                },
                {
                    "sent": "That's just a technicality details.",
                    "label": 0
                },
                {
                    "sent": "Again in the paper.",
                    "label": 0
                },
                {
                    "sent": "But well, there is actually little remark here.",
                    "label": 0
                },
                {
                    "sent": "It's interesting that's the way the entailment regimes are defined in sparklies.",
                    "label": 0
                },
                {
                    "sent": "Well, essentially what you can use in Sparkle query is the same.",
                    "label": 0
                },
                {
                    "sent": "People pattern says in the in the language in the ontology language.",
                    "label": 0
                },
                {
                    "sent": "And well, it turns out that if you restrict the ontology language at least added as this formally defined, if you restricted so also kill, then that entailment regime turns out to be, well, just trivially cannot actually have complex concepts.",
                    "label": 0
                },
                {
                    "sent": "And well here we strayed away from the leads of the documents, and we say that actually well you can use complex also kill concepts there in the positions well in the class surgeons that actually makes language more expressive.",
                    "label": 0
                },
                {
                    "sent": "Otherwise it's just all boils down so.",
                    "label": 0
                },
                {
                    "sent": "Especially out subset of old supershell.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "No, that was the first step getting rid of the ontology writing it's away.",
                    "label": 0
                },
                {
                    "sent": "The second step is translating from sparkled, so SQL and well.",
                    "label": 0
                },
                {
                    "sent": "So what essentially happens here?",
                    "label": 0
                },
                {
                    "sent": "Well, actually, compression that so we have a sparkle query of a virtual RDF graph and we need to construct an SQL query or this kind of simplified triple database world database that contains those triples from the virtual earlier graph, right?",
                    "label": 1
                },
                {
                    "sent": "So well, this has received certain attention and well at first well the problem looks fairly true.",
                    "label": 0
                },
                {
                    "sent": "I mean, it's been studied before.",
                    "label": 0
                },
                {
                    "sent": "So well.",
                    "label": 0
                },
                {
                    "sent": "If you have a triple part and then you can translate it using or selection and projection.",
                    "label": 0
                },
                {
                    "sent": "That's fairly easy, right?",
                    "label": 0
                },
                {
                    "sent": "So there are lots of different cases there, but it's not interesting.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Right now for the Union Hall Sparklehorse Union answer, Sparkle deals with solution mappings, which are partial functions.",
                    "label": 0
                },
                {
                    "sent": "SQL, on the other hand, deals with total mapping, so you take the set of attributes and beach.",
                    "label": 0
                },
                {
                    "sent": "Each tuple in relation to have all those values right?",
                    "label": 0
                },
                {
                    "sent": "So well, in this particular example, Mother who take the union of those two sets of triples, then, well, we get those partial end defiant and the way you can actually model that in SQL you can use null values.",
                    "label": 0
                },
                {
                    "sent": "This again fairly straightforward approach, so we just.",
                    "label": 0
                },
                {
                    "sent": "Kind of define it formally there.",
                    "label": 0
                },
                {
                    "sent": "So now when we come to filters, here is an interesting thing.",
                    "label": 0
                },
                {
                    "sent": "Well, no one actually looked at it modifies as we know, is that multiple users free valued logic and there is again standard assumption that you can just easily get rid of those three values.",
                    "label": 0
                },
                {
                    "sent": "So the fair values is true, false and undefined error.",
                    "label": 0
                },
                {
                    "sent": "Alright, ask L also uses 3 valid logic and therefore actually it makes sense.",
                    "label": 0
                },
                {
                    "sent": "Just so take that into account and translate it straightforwardly, not switching back to the two valid logic and well, for instance, bound is translating, so just not now.",
                    "label": 0
                },
                {
                    "sent": "Right now with cancer.",
                    "label": 0
                },
                {
                    "sent": "Tricky bits Joanne.",
                    "label": 0
                },
                {
                    "sent": "Well well in sparkle simply because sparkle deals with those partial mappings is rather expensive to translate in SQL and essentially what you have to do.",
                    "label": 0
                },
                {
                    "sent": "You have to consider all these subsets well.",
                    "label": 0
                },
                {
                    "sent": "All the domains of those possible domains for those solution mappings and therefore in principle the translation is exponential.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Now, well there was a trick there.",
                    "label": 0
                },
                {
                    "sent": "So basically you can carefully analyze the structure for graph patterns and notice that well.",
                    "label": 0
                },
                {
                    "sent": "Sometimes you can guarantee that certain variables involved sparkle expression will always be bound right?",
                    "label": 0
                },
                {
                    "sent": "Just looking at the structure of subexpressions, and in that case actually the translation just boils down for the join.",
                    "label": 0
                },
                {
                    "sent": "It just boils down, so the usual SQL join in for optional actually boils down to the left join fields, but that's again that's something.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "That is known.",
                    "label": 0
                },
                {
                    "sent": "So here is just just an example of how we approach it.",
                    "label": 0
                },
                {
                    "sent": "So for instance will be GPS world.",
                    "label": 0
                },
                {
                    "sent": "All the variables that define with the Union.",
                    "label": 0
                },
                {
                    "sent": "I have two.",
                    "label": 0
                },
                {
                    "sent": "But take that complicated formula so.",
                    "label": 0
                },
                {
                    "sent": "But now comes a kind of really interesting point is that.",
                    "label": 0
                },
                {
                    "sent": "Again, it's quite often assumed that, well, at least in theoretical papers on sparkle, that's optional, has just two arguments.",
                    "label": 0
                },
                {
                    "sent": "All the standard says that optional has three arguments, and here is the definition from the standard right.",
                    "label": 0
                },
                {
                    "sent": "The first thing is, well, field, so the join the second components, called the difference.",
                    "label": 0
                },
                {
                    "sent": "And the difference is defined in the following way.",
                    "label": 0
                },
                {
                    "sent": "So we just look at all the solution mappings from the second components and either they're incompatible or the.",
                    "label": 0
                },
                {
                    "sent": "Condition is false.",
                    "label": 0
                },
                {
                    "sent": "No.",
                    "label": 0
                },
                {
                    "sent": "I'm not sure actually, that definition is quite correct.",
                    "label": 0
                },
                {
                    "sent": "Well, maybe I just don't understand the intention, I think.",
                    "label": 0
                },
                {
                    "sent": "Well, correct me if I'm wrong, but I assumed that optional was defined in such a way that each solution mappings from the first set would be represented in the result.",
                    "label": 0
                },
                {
                    "sent": "So add it has a match or it doesn't, right?",
                    "label": 0
                },
                {
                    "sent": "So now I think what should be written there is that it's not the effective Boolean value is false.",
                    "label": 0
                },
                {
                    "sent": "Well, that was actually my way of reading the effective Boolean values false right?",
                    "label": 0
                },
                {
                    "sent": "So that all the values false so.",
                    "label": 0
                },
                {
                    "sent": "But then the value actually can be in error and that case that mapping actually involved the first component just goes nowhere, so therefore we actually proposed that should be corrected and say that will be effective Boolean value is.",
                    "label": 0
                },
                {
                    "sent": "Not true.",
                    "label": 0
                },
                {
                    "sent": "Because if it's true, then it goes into the first component, but if it's not true then it should go into the second component.",
                    "label": 0
                },
                {
                    "sent": "But as it stands now, it doesn't go anywhere.",
                    "label": 0
                },
                {
                    "sent": "So this is the first thing it says is observation and the 2nd observationes.",
                    "label": 0
                },
                {
                    "sent": "That's again, the weight difference is different than the ways informally explained in the sparkle standard.",
                    "label": 0
                },
                {
                    "sent": "Again, this is something just want to cause some controversy here.",
                    "label": 0
                },
                {
                    "sent": "Really, make you think that's well, actually it was mentioned yesterday.",
                    "label": 0
                },
                {
                    "sent": "Everyone assumes that sparkle is not so difficult.",
                    "label": 0
                },
                {
                    "sent": "Well, I'm not so sure, really.",
                    "label": 0
                },
                {
                    "sent": "So The thing is that there isn't a formal explanation that actually suggests that the difference actually is the union of two things there.",
                    "label": 0
                },
                {
                    "sent": "Moulton, if you look carefully, actually it's it's not.",
                    "label": 0
                },
                {
                    "sent": "It's not simply true.",
                    "label": 0
                },
                {
                    "sent": "Well, that difference actually is not the union, so you have to leave it as it is defined, right?",
                    "label": 0
                },
                {
                    "sent": "At the game, if you.",
                    "label": 0
                },
                {
                    "sent": "But those are kind of things that we discovered in the process of trying to formalize this translation from Sparkling so SQL.",
                    "label": 0
                },
                {
                    "sent": "Now the.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Step.",
                    "label": 0
                },
                {
                    "sent": "And the first step here is that's where given the SQL query over that simple relation triple and then we need to produce at Meskill query over database that contains.",
                    "label": 0
                },
                {
                    "sent": "I've relations to various charity, right?",
                    "label": 0
                },
                {
                    "sent": "So well again calling explain this all so we just literally could just plug in the mappings.",
                    "label": 1
                },
                {
                    "sent": "However, in practice that doesn't always work, and Brianna he working on so the system discovered that long time ago that basically kind of well ignore thing.",
                    "label": 0
                },
                {
                    "sent": "Which is.",
                    "label": 0
                },
                {
                    "sent": "I mean it wasn't invented in database semantic query optimization that is using primary and foreign keys to simplify subgroup.",
                    "label": 1
                },
                {
                    "sent": "Well, simplify quickly remove redundant joins.",
                    "label": 0
                },
                {
                    "sent": "In database it doesn't play that bigger role, because while queries quite often are written by people here, the queries are written there, generated by the machine and therefore they contain lots of redundancies and therefore semantic query optimization is really important.",
                    "label": 0
                },
                {
                    "sent": "So this is first thing, the second thing is team mappings.",
                    "label": 0
                },
                {
                    "sent": "Again we just want explain that perfectly, so we used the mappings just to make that process efficiently and well.",
                    "label": 0
                },
                {
                    "sent": "So get rid of most of the ontology and translate it's compile.",
                    "label": 1
                },
                {
                    "sent": "It's in so mappings, but then again mappings.",
                    "label": 0
                },
                {
                    "sent": "Although steam mappings that have to be optimized.",
                    "label": 0
                },
                {
                    "sent": "And so that actually makes life much more efficient.",
                    "label": 0
                },
                {
                    "sent": "And then there is the first field trip there is that if you translate relational dates and so RDF triples, then well, you generate some your eyes and those euro.",
                    "label": 0
                },
                {
                    "sent": "Well I arise and they actually they are generated from templates and it is quite important so.",
                    "label": 0
                },
                {
                    "sent": "Have a proper look at it, because those strings essentially in database, there would be constructed on the fly and there are many cases where we actually can deal with that and then we can reduce joins over those constructed strings.",
                    "label": 0
                },
                {
                    "sent": "We can just reuse them to join, so proper data base attributes.",
                    "label": 0
                },
                {
                    "sent": "Right and then all those?",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Steps of translation and all the tricks they were they were implemented in the in the system or the system is being developed in the Free University of Bolts and bolts on a it is developed as part of the European Project Optic.",
                    "label": 0
                },
                {
                    "sent": "So we implemented the system and then we just run some tests.",
                    "label": 0
                },
                {
                    "sent": "We didn't actually have many systems to compare with.",
                    "label": 0
                },
                {
                    "sent": "We compared with pellet and I'll be GP.",
                    "label": 0
                },
                {
                    "sent": "Well, simply because we have both properties and improper ontologies and so on and then, well, our experiments show that Poland subscales reasonably well, so we got data up to 500 universities and then valid just died up or somewhere after 100 universities and.",
                    "label": 0
                },
                {
                    "sent": "Welcome can be explained, but the point is that there is a system there which is called on top.",
                    "label": 0
                },
                {
                    "sent": "It's does spark well, it doesn't answer sparkle queries, So what databases it uses.",
                    "label": 0
                },
                {
                    "sent": "Also kill inferencing and parts are mappings.",
                    "label": 0
                },
                {
                    "sent": "It's well, lots of implemented, lots of optimizations have been implemented there.",
                    "label": 0
                },
                {
                    "sent": "This software actually is open source.",
                    "label": 0
                },
                {
                    "sent": "You can download it and use it for free.",
                    "label": 0
                },
                {
                    "sent": "And then it has support for many database engines.",
                    "label": 0
                },
                {
                    "sent": "Right, thank you.",
                    "label": 0
                },
                {
                    "sent": "Thank you speaker.",
                    "label": 0
                },
                {
                    "sent": "So we have time for questions.",
                    "label": 0
                }
            ]
        }
    }
}