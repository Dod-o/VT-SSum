{
    "id": "46fmnn7qt5amt6jr5mnpkfvulwthhmzf",
    "title": "Planning and Acting in Incomplete Domains",
    "info": {
        "author": [
            "Daniel Bryce, Department of Computer Science, Utah State University"
        ],
        "published": "July 21, 2011",
        "recorded": "June 2011",
        "category": [
            "Top->Computer Science->Artificial Intelligence->Planning and Scheduling"
        ]
    },
    "url": "http://videolectures.net/icaps2011_bryce_domains/",
    "segmentation": [
        [
            "So the motivation for this work is been working on a project we're trying to train agents as cheaply as possible, so we have to both tell them information about how to achieve their goals in domain as well as the model that they're using.",
            "So it turns out that engineering this knowledge in these agents is not very cheap.",
            "And the solution now proposes to be Jews planning and acting under incomplete information about the domain.",
            "So the type of incompleteness I'll focus on is incompletely described actions, but I'm going to assume I have a complete set of propositions.",
            "OK, So what?"
        ],
        [
            "This look like, well, we have our normal strips domain where we have a set of propositions set of incomplete actions.",
            "Initial state, goal state.",
            "So the only thing that's new here is what's in red where I'm going to say all the known preconditions, adds and deletes, but then I have a set of possible ones and then the impossible ones is everything else."
        ],
        [
            "So I'll give you a little example of an incomplete action here.",
            "Well, we'll assume that the guys at Parker putting together a modular printer, and they've gotten a component from one of their manufacturers that they didn't get specifications from that manufacturer.",
            "So if you're going to try to feed a sheet of a four paper through, this component is not really clear what's going to happen.",
            "So what we're going to do is list of possible effect that this machine is going to be not clear after performing this action.",
            "So I want to distinguish incomplete actions from stochastic actions here, because every time I apply this action going to have the same effect.",
            "I just don't know what that effect is going to be."
        ],
        [
            "So under these types of actions, we're going to consider three types of semantics for these plans using these types of actions.",
            "The first is optimistic, so if I have a whole bunch of things that I think may happen with these actions, I'm going to assume that everything is going to workout great.",
            "I'll be optimistic.",
            "So what this means is I can ignore preconditions and I can North delete effects and assume that all of that affects happened.",
            "So this is kind of the best case scenario is.",
            "Sort of, the least constrained interpretation of my incomplete domain.",
            "Now, if I'm pessimistic, what I can do is assume that I have to satisfy all the preconditions and I'm going to have all of these delete effects, but none of the out effects occur.",
            "So under that kind of interpretation, the complete domain, it's very unlikely we're going to find a plan.",
            "Because it's more constrained.",
            "And really, the thing that's going to make this work well is if we assume a cautiously optimistic semantics where we don't assume anything about the incomplete domain.",
            "But we're going to do is count the number of models of this domain under which a plan will succeed.",
            "So in this sense it's a measure of robustness of the plan about how many of the interpretations and complete domain will work.",
            "So the key thing to take out of this is, I say counting models and we all know that that's not a fun thing to do, and I'm going to have a solution for that.",
            "Coming up in a few."
        ],
        [
            "Ads.",
            "OK, so how are we going to synthesize these plans?",
            "Well, for the optimistic and pessimistic interpretations we can just boil it down to strips instance and use any old classical planner wish.",
            "And in our experiments we're just going to use our own planet, but using the FFT Ristic, so we're going to make it optimistic or pessimistic.",
            "Alright, so in the cautiously optimistic scenario, there's a couple ways we could do this.",
            "Well, first of all, we could just translate into conforming planning problem.",
            "Anusa conforming planner.",
            "Now again counting models is something that has to come up here because conform planners usually assume that you have to achieve the goal from all of your possible states.",
            "Now in these incomplete domains, it's highly unlikely that you're going to go from all the possible states, so you want to count how many are going to be achieving it.",
            "And then the second approach will describe is a planner redevelop called the default planner and it has a couple of ways that it will find plans.",
            "We're going to these.",
            "First off, it's going to be counting models during its search to tell it what to do, and the other thing is going to do is going to compute failure, diagnosis and count those."
        ],
        [
            "OK, so I'll talk about confirming planning a little bit what we're going to do is we're going to actually incompleteness and turn it into state incompleteness.",
            "So in order to do that, we introduce a whole bunch of propositions here.",
            "Like A has the precondition P. Now I don't know what the value that proposition is in my initial state, but it does describe something I know about the domain.",
            "Then I'll do is for each of the effects of the action I'll make it into a conditional effect.",
            "So if I had original effect that gave G and had an action with our NSS preconditions and P is a possible precondition, assert that.",
            "That fact has to be known in order to get the effect now because it's unknown, I'm not really sure if I'm going to get G, but.",
            "I'll be able to compute the cases under which is achieved.",
            "Actually, in the first case, P is not part of the precondition an I say that I don't have to have.",
            "If the action doesn't have P as a precondition, then I'll still get the effect in the second one.",
            "Here I say P has to be true, and if P is a precondition in order to get the effect.",
            "And in order to do this, I can't just use any old conformance later I'm going to be using a probabilistic conferment planner, because you can think of the probability of goal satisfaction as proportional to the number of models that are satisfied in the goal.",
            "So that's going to do the model counting is that way?",
            "'cause there's no existing conforming planners that try to maximize the number of possible initial states that achieve the goal, but probabilistic planners do this every day."
        ],
        [
            "OK, so default this planner is actually grew out of our study of the work of Garland and Lesson AAA O2, where they had these same type of model with incomplete domains and they're just trying to compute.",
            "The case is under which these plans are going to fail.",
            "The thing is that you didn't synthesize these plans, they just came up with them out of the blue.",
            "So with my former students, Jerrod Robertson in the Heuristics Workshop in 2009, we proposed planner that computed single fault diagnosis of the plan and counted those diagnosis as a plan criterion.",
            "Well, it turns out that we can extend this to multiple faults where you have, you know, end things that need to go wrong in order from the plan to fail as opposed to just one single point of failure.",
            "And this is really based in model based diagnosis and we're going to be using tricks from assumption based truth maintenance systems in order to calculate these things."
        ],
        [
            "So I'm showing you an example plan here with the domain description there nice.",
            "There's a lot of stuff on this slide, but I'll just draw your attention to a couple pieces.",
            "So what I've shown is a plan ABC, so a happens at times zero, B happens at time one and see happens at time 2.",
            "I have my initial state on the left here where he say P0, peace through time, zero queues at 2 * 0.",
            "And here I have R which is actually false in my state.",
            "So if you look at each of these nodes in this graph, what's being shown is a propositional sentence underneath it and that sentence.",
            "What it does is it describes the cases under which I'm going to fail to have one of the nodes in the plan.",
            "So if you look at R, it has the logical true underneath, which means that all possible cases of the domain is going to be false.",
            "Likewise with P&Q, it has logical false, meaning that there are no cases where they'll be false.",
            "So if we look at action A here.",
            "It has a possible precondition that are has to be true.",
            "Answer is false.",
            "I'm going to make a failure explanation for a that in the cases where I do need are as a precondition that action is going to fail.",
            "OK so I can continue to propagate this information through the plan and if you see it on the right here, I have G my goal.",
            "I have a propositional sentence here which is a DNF and it has three clauses.",
            "And this is going to signify any interpretation of my domain that satisfies that formula is going to fail to execute the plan correctly and achieve the goal."
        ],
        [
            "So the way that we propagate these failure explanations, I'll just go through this very quickly, but you look at the paper for the details were going to have an explanation for each of the actions in each of the propositions where with this explanation is is for an action.",
            "It's going to fail if the previous action failed, which is the first term in that disjunction.",
            "Or the second term is if any one of the preconditions that need to be satisfied failed to be true and the last term is any of the possible preconditions that need to be satisfied were actually preconditions and they weren't satisfied.",
            "So then I have rules for each of the effects of actions to determine whether a proposition will be true after that action.",
            "And basically for an add effect, if the proposition was previously false in the action failed, then it's not going to be true.",
            "For a possible side effect.",
            "If it was either.",
            "Previously false and the action did not add it or the action failed, then it won't be true.",
            "If I delete the proposition, then in all cases is going to be false.",
            "And if it's a possible delete, either the fact that it was previously false or I deleted it is going to make it false.",
            "Everything else it has the same failure."
        ],
        [
            "Afterwards.",
            "OK, so when I have these failures applications they give me a way of computing the quality of the plan and I can use this information to guide my search from through the possible plans.",
            "So if I prefer a plan that succeeds in most cases, I want to have a failure explanation for the goals that has the fewest models.",
            "So one way of doing this is to count the models of these sentences so if you see this sentence above here, there's 26 models of this.",
            "Actually 5 propositions that are describing this incomplete domain.",
            "So if you go through and make the models, you get 26.",
            "Now, I also notice that if I were to interpret this as a diagnosis of plant failure and in diagnosis you typically refer to the prime implicants of a propositional sentence as the diagnosis.",
            "So if I look at this, I have two prime implicates the size 1 and I have one problem at a size 2.",
            "Now for this other sentence down here I have two prime implicates a size 1 and it has 24 propositional models now.",
            "Looking at this, there is which one of these would I prefer?",
            "Well, obviously I want the one that's going to fail under the fewest cases possible, so I'd prefer the one that is 24.",
            "I can count the models and determine that, but as we all know, counting models is NP hard.",
            "So instead what I'm going to do is I'm going to count the number of prime implicants implants, sorry.",
            "So in this one I have two prime implicants and the one above I have 3.",
            "So I'm going to prefer the one on the bottom because it has fewer prime implicants.",
            "Now it takes linear time in order to count the number of prime implicants instead of an exponential time.",
            "In order to count the number models.",
            "So the real question is, is this little trick going to work?"
        ],
        [
            "OK, so this is the number of models from one of the problem instances that we solved.",
            "Turns out there is 26,000 some odd incomplete features in the domain, so these are preconditions, adds and deletes.",
            "And I was using an arbitrary precision integer to get this number, but this is one of the instances where we could actually count the number of models that plan succeeded.",
            "Now there's many instances where we can't even count the number of models of plant seeds.",
            "We don't know how good the plan is.",
            "So.",
            "Obviously, counting models for large."
        ],
        [
            "This is not going to work.",
            "OK, so in addition to the search algorithm prefers plans that succeed under more interpretations.",
            "We are going to use a relaxed planning heuristic in order to guide the search, so the way this works is very similar to how we're propagating the failure explanations in the state space, except that we ignore the delete effects.",
            "So under the optimistic or pessimistic interpretations, we can simply just use FFT Ristic, and in the cautiously optimistic semantics will be propagating this plan for explanations and using them to help select which actions we want to use in the relax plan.",
            "Obviously, the actions that fell in the fewest interpretations, other ones we want to be selecting to support the."
        ],
        [
            "Propositions?",
            "So we have two heuristics that are counting.",
            "The first one is going to be counting models.",
            "HM and HPI is counting prime implicants."
        ],
        [
            "Our plenary it uses a dual cool green vest for search with preferred operators.",
            "It turns the first solution that defines and it computes the plan quality after search so we aren't counting models during the search unless it's part of the Ristic."
        ],
        [
            "So we have four domains that we used for this.",
            "We used and modified IPC domains for the printer in the pathways domain and then we created 2 problems here.",
            "The first one called Barter World, where we do specifically designed this one to have high cardinality diagnosis or high cardinality prime implicants.",
            "The second one we varied the inclusion of different types of incomplete features such as one has only open only possible preconditions.",
            "Others have possible effects and possible ads."
        ],
        [
            "So across these domains, either all the solvable instances of one of the planners that we are comparing and this is the number of incomplete features in the different domains so.",
            "We have on the order of 10,000 incomplete features in some of the harder instances."
        ],
        [
            "So in evaluating this, we have three main questions we want to look at.",
            "Well, does reading about neatness help us find better quality plans?",
            "Hopefully the answer is yes.",
            "Does counting Prime Implicants perform better than counting models?",
            "And as the number of incomplete features grows, does stronger reasoning about the incompleteness help us?"
        ],
        [
            "OK, so with this table showing, here is the number of instances in which one of the heuristics finds a better solution than one of the others.",
            "So if you look at the first column here, it's asking if I'm counting only problem.",
            "It's a size 1.",
            "Do I find a better plan than FF heuristic?",
            "So I have 603 in that case instances where I find a better solution.",
            "Now if I look at the.",
            "The first row, the second column.",
            "This is the opposite where if found a better here, better solution than the primal cuts of size 1, so I folded all the cases that you do better by reasoning which everyone solves problems with the best quality.",
            "So these are all instances where the both of the planners could solve the problem.",
            "So what we can see here is that when we're reading about incompleteness, where we have either counting prime implicants, RBD, here's representing counting models as we used to be to represent these sentences and use the beta count the models.",
            "In all cases, we do better than heuristic, that ignores incompleteness.",
            "The other thing to notice is that if we count profits size one we happen to find more better solutions.",
            "Then we would if we were counting models, or if we were counting remnants of higher cardinality.",
            "So this approximation, where we're counting single faults, actually helps us do better."
        ],
        [
            "So in terms of problem solved what I'm listing here on each of the rows is a different problem instance, and the number next to it is.",
            "The probability of injecting incomplete features in the domain 'cause we have domain generators that create these.",
            "So as you go down, you're going from .25.",
            "Probability of injecting incomplete feature down to 1.0 probability, so the problems are more incomplete as you go down the table and then we have the four domains we have the part printer, the barter world, the pathways and bridges and what you can see here in the total across all domains is that the one that solves the most instances is counting pregnant.",
            "Look, it's a size 2.",
            "The next best is counting pumpkins size 1 and then counting premika size 3 or counting models.",
            "Does the next best.",
            "Then finally, I'm also showing the last column here.",
            "The number of solutions found by a conformal probabilistic planner pond in the translated instances for this problem.",
            "So we do clearly much better than formal probabilistic planner and counting models doesn't seem to be the best idea, and I do want to note that in some of the domains we do better by counting models such as this bridge is domain.",
            "We find 183 solutions compared to 170 ish for the counting prime implicants.",
            "And obviously the ignoring it.",
            "Features the column here for FF we solve the most problems overall.",
            "Here we have a total of 1600 problems that are solved by FF, but this is to be expected because if you're throwing away information, you're obviously going to scale better."
        ],
        [
            "OK, so this is a cumulative runtime for all of the algorithms and what I'm showing here is F is the plus marks that are on the top here and they basically solve more problems that are harder problems.",
            "So that's why the time taken is a lot larger now when we're counting prime implicants.",
            "It's these three lines at the bottom and the one that does best in the end is counting problem because the size one it's the cheapest.",
            "And then the one the black square, the top.",
            "There is counting models so it gets a lot more costly as the problems there are more difficult."
        ],
        [
            "Another thing I want to talk about is.",
            "How the amount of incompleteness domain affects the number of solutions we can find?",
            "So what I've outlined in these three red areas is as I'm going down the rows here, I'm increasing the incompleteness in the domain instances, and as you can see.",
            "The bolded numbers are the ones that do the best solve the most instances.",
            "And here I have.",
            "You know, when I have very little uncertainty that counting problem because the size 3 tends to do best, but then as they get more incompleteness, counting fewer or smaller counting cardinality, prime implicate actually helps you do better.",
            "Mainly because you're ignoring a lot of the uncertainty and you could help scale the planner better."
        ],
        [
            "OK, so in this time I'm going to skip over this discussion of execution incomplete domains, But the basic answer is when we're executing these plans, we can learn about the domains as we go along and we may have to replan during that.",
            "It turns out that by being robust when we're planning helps us replan list."
        ],
        [
            "Nothing.",
            "Which you would expect."
        ],
        [
            "So in summary, with the first work that I were aware of, that is applying a robust planning to incomplete strips domains, it turns out the accounting, diagnosis or prime implicants is faster than model counting, and we return comperable quality solutions.",
            "And when we're executing robust, incomplete plans requires less re planning.",
            "So some of the future work for this is basically give me a planning model.",
            "We can make it incomplete, so there's all kinds of different things you can make incomplete about planning models where humans have trouble modeling.",
            "So we can consider things like conditional effects, temporal actions, PDL schemas.",
            "Another thing we want to consider is correlated incompleteness, where we have two effects that have to be given together.",
            "The other thing we consider it consider is having a probabilistic prior on the incompleteness of the domain.",
            "And look at alternative representations of the failure explanations.",
            "And if you were the workshops, we actually discussed some work on knowledge acquisition using these failure explanations to derive question asking for a domain expert."
        ],
        [
            "So like to say thank you and the source code for this is available online and there's also a longer technical report of the paper, so thank you.",
            "Any questions?",
            "Thank you then have a question about that.",
            "When you.",
            "I mean, you do focus on reporting weather problems are being solved or not, but you know you are.",
            "You are reported in solver because you found a solution.",
            "But there's the issue of the quality of the plan performance.",
            "You can command a little bit more on that.",
            "If you were.",
            "I don't know the notion of loudness of things like that becausw cities is that it can be like there's something going on there and we have no idea, right?",
            "Well, one of the criticisms of this work is received is that I'm stopping when I find the first solution.",
            "So I could keep going in a timely manner and finding better solutions.",
            "And it turns out I implemented those two days ago during the conference and it does improve quite a bit when you do anytime approach.",
            "So what I presented here is you know the quality of the first solution you find, which is an indicator of how good the heuristic is, right?",
            "Because it's driving you towards a good solution to begin with and does turn out that reason about incompleteness does give you better solutions of the first solution.",
            "Well, let me ask you a question then.",
            "So model counting is equivalent to probabilistic inference.",
            "And so was wondering here.",
            "First of all, have you considered, I guess, the entire literature on probabilistic inference to answer the same questions, and if not, then what are the differences?",
            "'cause that at least at a high level we know that we can always convert model counting questions into probabilistic inference questions and vice versa, right?",
            "Well what we're assuming this work is that we have nondeterministic information about the incompleteness.",
            "So the first thing you might want to try is adding probabilities to that incompleteness and then.",
            "Using the weighted model counting literature to, you know we don't have to add probabilities, it's just a way of converting the problems so it would not change anything.",
            "Great, well I haven't considered that.",
            "We just took the easiest Rd to getting a model counting approach in this work.",
            "Yeah, so it's not actually a question, it's more like.",
            "Joining pascals question.",
            "AM if.",
            "It sounds like sat based model counters that's probably also very useful for weighted model counting.",
            "Will be better choice for our system.",
            "They are faster.",
            "They are robust in terms that tomorrow we can add probabilities there forever.",
            "So there are exponential time, right?",
            "So the using the prime implicants, it is linear time so.",
            "No, we're not using a BDD for that.",
            "The Model County version would be.",
            "Yes, so why we do?",
            "It's not really well, just the principle will remain the same.",
            "Just might be that this the efficiency of the system will be much better.",
            "Yeah.",
            "Any other questions?",
            "Yeah, following up the car Miss Commonwealth.",
            "Maybe you would like, but the problem is that you are using already for representing the station stuff compared with using some kind of logical representation just for realistics and that would be totally different of memory footprint and you and I try to derive approximations there.",
            "I mean you can play with with that logical formulation to get other things just beside can't exactly the model going to the other side.",
            "So going you know media controller diagnosis as well.",
            "Is it like working?",
            "But we really don't know.",
            "So just wait to try.",
            "Well, one comment about that is that.",
            "They're counting the models.",
            "It doesn't really matter what algorithm you plug into account, the models are going to get better efficiency that we the results we saw that we get better quality if we're counting prime applicants.",
            "So that's not going to change personally.",
            "I've got a very easy one.",
            "I think in a paper you said you try probabilistic if F, which does use weighted model counting by SAT solvers.",
            "You said it didn't work, so I just wonder what happened?",
            "Well, I'd have to ask you in Carmel that I basically said vaulted, so I don't know what to tell you.",
            "Say I got segfaults from it.",
            "So I don't know if it's you know a deficiency approach or not, but.",
            "We can talk offline about that.",
            "They're not supposed to be sackfuls conceptually, so."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": []
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So the motivation for this work is been working on a project we're trying to train agents as cheaply as possible, so we have to both tell them information about how to achieve their goals in domain as well as the model that they're using.",
                    "label": 0
                },
                {
                    "sent": "So it turns out that engineering this knowledge in these agents is not very cheap.",
                    "label": 0
                },
                {
                    "sent": "And the solution now proposes to be Jews planning and acting under incomplete information about the domain.",
                    "label": 0
                },
                {
                    "sent": "So the type of incompleteness I'll focus on is incompletely described actions, but I'm going to assume I have a complete set of propositions.",
                    "label": 1
                },
                {
                    "sent": "OK, So what?",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This look like, well, we have our normal strips domain where we have a set of propositions set of incomplete actions.",
                    "label": 0
                },
                {
                    "sent": "Initial state, goal state.",
                    "label": 0
                },
                {
                    "sent": "So the only thing that's new here is what's in red where I'm going to say all the known preconditions, adds and deletes, but then I have a set of possible ones and then the impossible ones is everything else.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So I'll give you a little example of an incomplete action here.",
                    "label": 0
                },
                {
                    "sent": "Well, we'll assume that the guys at Parker putting together a modular printer, and they've gotten a component from one of their manufacturers that they didn't get specifications from that manufacturer.",
                    "label": 0
                },
                {
                    "sent": "So if you're going to try to feed a sheet of a four paper through, this component is not really clear what's going to happen.",
                    "label": 0
                },
                {
                    "sent": "So what we're going to do is list of possible effect that this machine is going to be not clear after performing this action.",
                    "label": 0
                },
                {
                    "sent": "So I want to distinguish incomplete actions from stochastic actions here, because every time I apply this action going to have the same effect.",
                    "label": 0
                },
                {
                    "sent": "I just don't know what that effect is going to be.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So under these types of actions, we're going to consider three types of semantics for these plans using these types of actions.",
                    "label": 0
                },
                {
                    "sent": "The first is optimistic, so if I have a whole bunch of things that I think may happen with these actions, I'm going to assume that everything is going to workout great.",
                    "label": 0
                },
                {
                    "sent": "I'll be optimistic.",
                    "label": 0
                },
                {
                    "sent": "So what this means is I can ignore preconditions and I can North delete effects and assume that all of that affects happened.",
                    "label": 0
                },
                {
                    "sent": "So this is kind of the best case scenario is.",
                    "label": 0
                },
                {
                    "sent": "Sort of, the least constrained interpretation of my incomplete domain.",
                    "label": 0
                },
                {
                    "sent": "Now, if I'm pessimistic, what I can do is assume that I have to satisfy all the preconditions and I'm going to have all of these delete effects, but none of the out effects occur.",
                    "label": 0
                },
                {
                    "sent": "So under that kind of interpretation, the complete domain, it's very unlikely we're going to find a plan.",
                    "label": 0
                },
                {
                    "sent": "Because it's more constrained.",
                    "label": 0
                },
                {
                    "sent": "And really, the thing that's going to make this work well is if we assume a cautiously optimistic semantics where we don't assume anything about the incomplete domain.",
                    "label": 1
                },
                {
                    "sent": "But we're going to do is count the number of models of this domain under which a plan will succeed.",
                    "label": 0
                },
                {
                    "sent": "So in this sense it's a measure of robustness of the plan about how many of the interpretations and complete domain will work.",
                    "label": 0
                },
                {
                    "sent": "So the key thing to take out of this is, I say counting models and we all know that that's not a fun thing to do, and I'm going to have a solution for that.",
                    "label": 0
                },
                {
                    "sent": "Coming up in a few.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Ads.",
                    "label": 0
                },
                {
                    "sent": "OK, so how are we going to synthesize these plans?",
                    "label": 0
                },
                {
                    "sent": "Well, for the optimistic and pessimistic interpretations we can just boil it down to strips instance and use any old classical planner wish.",
                    "label": 1
                },
                {
                    "sent": "And in our experiments we're just going to use our own planet, but using the FFT Ristic, so we're going to make it optimistic or pessimistic.",
                    "label": 0
                },
                {
                    "sent": "Alright, so in the cautiously optimistic scenario, there's a couple ways we could do this.",
                    "label": 0
                },
                {
                    "sent": "Well, first of all, we could just translate into conforming planning problem.",
                    "label": 0
                },
                {
                    "sent": "Anusa conforming planner.",
                    "label": 0
                },
                {
                    "sent": "Now again counting models is something that has to come up here because conform planners usually assume that you have to achieve the goal from all of your possible states.",
                    "label": 0
                },
                {
                    "sent": "Now in these incomplete domains, it's highly unlikely that you're going to go from all the possible states, so you want to count how many are going to be achieving it.",
                    "label": 0
                },
                {
                    "sent": "And then the second approach will describe is a planner redevelop called the default planner and it has a couple of ways that it will find plans.",
                    "label": 0
                },
                {
                    "sent": "We're going to these.",
                    "label": 0
                },
                {
                    "sent": "First off, it's going to be counting models during its search to tell it what to do, and the other thing is going to do is going to compute failure, diagnosis and count those.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so I'll talk about confirming planning a little bit what we're going to do is we're going to actually incompleteness and turn it into state incompleteness.",
                    "label": 0
                },
                {
                    "sent": "So in order to do that, we introduce a whole bunch of propositions here.",
                    "label": 0
                },
                {
                    "sent": "Like A has the precondition P. Now I don't know what the value that proposition is in my initial state, but it does describe something I know about the domain.",
                    "label": 0
                },
                {
                    "sent": "Then I'll do is for each of the effects of the action I'll make it into a conditional effect.",
                    "label": 0
                },
                {
                    "sent": "So if I had original effect that gave G and had an action with our NSS preconditions and P is a possible precondition, assert that.",
                    "label": 0
                },
                {
                    "sent": "That fact has to be known in order to get the effect now because it's unknown, I'm not really sure if I'm going to get G, but.",
                    "label": 0
                },
                {
                    "sent": "I'll be able to compute the cases under which is achieved.",
                    "label": 0
                },
                {
                    "sent": "Actually, in the first case, P is not part of the precondition an I say that I don't have to have.",
                    "label": 0
                },
                {
                    "sent": "If the action doesn't have P as a precondition, then I'll still get the effect in the second one.",
                    "label": 0
                },
                {
                    "sent": "Here I say P has to be true, and if P is a precondition in order to get the effect.",
                    "label": 0
                },
                {
                    "sent": "And in order to do this, I can't just use any old conformance later I'm going to be using a probabilistic conferment planner, because you can think of the probability of goal satisfaction as proportional to the number of models that are satisfied in the goal.",
                    "label": 0
                },
                {
                    "sent": "So that's going to do the model counting is that way?",
                    "label": 0
                },
                {
                    "sent": "'cause there's no existing conforming planners that try to maximize the number of possible initial states that achieve the goal, but probabilistic planners do this every day.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, so default this planner is actually grew out of our study of the work of Garland and Lesson AAA O2, where they had these same type of model with incomplete domains and they're just trying to compute.",
                    "label": 0
                },
                {
                    "sent": "The case is under which these plans are going to fail.",
                    "label": 0
                },
                {
                    "sent": "The thing is that you didn't synthesize these plans, they just came up with them out of the blue.",
                    "label": 0
                },
                {
                    "sent": "So with my former students, Jerrod Robertson in the Heuristics Workshop in 2009, we proposed planner that computed single fault diagnosis of the plan and counted those diagnosis as a plan criterion.",
                    "label": 0
                },
                {
                    "sent": "Well, it turns out that we can extend this to multiple faults where you have, you know, end things that need to go wrong in order from the plan to fail as opposed to just one single point of failure.",
                    "label": 0
                },
                {
                    "sent": "And this is really based in model based diagnosis and we're going to be using tricks from assumption based truth maintenance systems in order to calculate these things.",
                    "label": 1
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So I'm showing you an example plan here with the domain description there nice.",
                    "label": 0
                },
                {
                    "sent": "There's a lot of stuff on this slide, but I'll just draw your attention to a couple pieces.",
                    "label": 0
                },
                {
                    "sent": "So what I've shown is a plan ABC, so a happens at times zero, B happens at time one and see happens at time 2.",
                    "label": 0
                },
                {
                    "sent": "I have my initial state on the left here where he say P0, peace through time, zero queues at 2 * 0.",
                    "label": 0
                },
                {
                    "sent": "And here I have R which is actually false in my state.",
                    "label": 0
                },
                {
                    "sent": "So if you look at each of these nodes in this graph, what's being shown is a propositional sentence underneath it and that sentence.",
                    "label": 0
                },
                {
                    "sent": "What it does is it describes the cases under which I'm going to fail to have one of the nodes in the plan.",
                    "label": 0
                },
                {
                    "sent": "So if you look at R, it has the logical true underneath, which means that all possible cases of the domain is going to be false.",
                    "label": 0
                },
                {
                    "sent": "Likewise with P&Q, it has logical false, meaning that there are no cases where they'll be false.",
                    "label": 0
                },
                {
                    "sent": "So if we look at action A here.",
                    "label": 0
                },
                {
                    "sent": "It has a possible precondition that are has to be true.",
                    "label": 0
                },
                {
                    "sent": "Answer is false.",
                    "label": 0
                },
                {
                    "sent": "I'm going to make a failure explanation for a that in the cases where I do need are as a precondition that action is going to fail.",
                    "label": 0
                },
                {
                    "sent": "OK so I can continue to propagate this information through the plan and if you see it on the right here, I have G my goal.",
                    "label": 0
                },
                {
                    "sent": "I have a propositional sentence here which is a DNF and it has three clauses.",
                    "label": 0
                },
                {
                    "sent": "And this is going to signify any interpretation of my domain that satisfies that formula is going to fail to execute the plan correctly and achieve the goal.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So the way that we propagate these failure explanations, I'll just go through this very quickly, but you look at the paper for the details were going to have an explanation for each of the actions in each of the propositions where with this explanation is is for an action.",
                    "label": 0
                },
                {
                    "sent": "It's going to fail if the previous action failed, which is the first term in that disjunction.",
                    "label": 0
                },
                {
                    "sent": "Or the second term is if any one of the preconditions that need to be satisfied failed to be true and the last term is any of the possible preconditions that need to be satisfied were actually preconditions and they weren't satisfied.",
                    "label": 0
                },
                {
                    "sent": "So then I have rules for each of the effects of actions to determine whether a proposition will be true after that action.",
                    "label": 0
                },
                {
                    "sent": "And basically for an add effect, if the proposition was previously false in the action failed, then it's not going to be true.",
                    "label": 0
                },
                {
                    "sent": "For a possible side effect.",
                    "label": 0
                },
                {
                    "sent": "If it was either.",
                    "label": 0
                },
                {
                    "sent": "Previously false and the action did not add it or the action failed, then it won't be true.",
                    "label": 0
                },
                {
                    "sent": "If I delete the proposition, then in all cases is going to be false.",
                    "label": 0
                },
                {
                    "sent": "And if it's a possible delete, either the fact that it was previously false or I deleted it is going to make it false.",
                    "label": 0
                },
                {
                    "sent": "Everything else it has the same failure.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Afterwards.",
                    "label": 0
                },
                {
                    "sent": "OK, so when I have these failures applications they give me a way of computing the quality of the plan and I can use this information to guide my search from through the possible plans.",
                    "label": 0
                },
                {
                    "sent": "So if I prefer a plan that succeeds in most cases, I want to have a failure explanation for the goals that has the fewest models.",
                    "label": 0
                },
                {
                    "sent": "So one way of doing this is to count the models of these sentences so if you see this sentence above here, there's 26 models of this.",
                    "label": 0
                },
                {
                    "sent": "Actually 5 propositions that are describing this incomplete domain.",
                    "label": 0
                },
                {
                    "sent": "So if you go through and make the models, you get 26.",
                    "label": 0
                },
                {
                    "sent": "Now, I also notice that if I were to interpret this as a diagnosis of plant failure and in diagnosis you typically refer to the prime implicants of a propositional sentence as the diagnosis.",
                    "label": 0
                },
                {
                    "sent": "So if I look at this, I have two prime implicates the size 1 and I have one problem at a size 2.",
                    "label": 0
                },
                {
                    "sent": "Now for this other sentence down here I have two prime implicates a size 1 and it has 24 propositional models now.",
                    "label": 0
                },
                {
                    "sent": "Looking at this, there is which one of these would I prefer?",
                    "label": 0
                },
                {
                    "sent": "Well, obviously I want the one that's going to fail under the fewest cases possible, so I'd prefer the one that is 24.",
                    "label": 0
                },
                {
                    "sent": "I can count the models and determine that, but as we all know, counting models is NP hard.",
                    "label": 0
                },
                {
                    "sent": "So instead what I'm going to do is I'm going to count the number of prime implicants implants, sorry.",
                    "label": 0
                },
                {
                    "sent": "So in this one I have two prime implicants and the one above I have 3.",
                    "label": 0
                },
                {
                    "sent": "So I'm going to prefer the one on the bottom because it has fewer prime implicants.",
                    "label": 0
                },
                {
                    "sent": "Now it takes linear time in order to count the number of prime implicants instead of an exponential time.",
                    "label": 0
                },
                {
                    "sent": "In order to count the number models.",
                    "label": 0
                },
                {
                    "sent": "So the real question is, is this little trick going to work?",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so this is the number of models from one of the problem instances that we solved.",
                    "label": 0
                },
                {
                    "sent": "Turns out there is 26,000 some odd incomplete features in the domain, so these are preconditions, adds and deletes.",
                    "label": 0
                },
                {
                    "sent": "And I was using an arbitrary precision integer to get this number, but this is one of the instances where we could actually count the number of models that plan succeeded.",
                    "label": 0
                },
                {
                    "sent": "Now there's many instances where we can't even count the number of models of plant seeds.",
                    "label": 0
                },
                {
                    "sent": "We don't know how good the plan is.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "Obviously, counting models for large.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This is not going to work.",
                    "label": 0
                },
                {
                    "sent": "OK, so in addition to the search algorithm prefers plans that succeed under more interpretations.",
                    "label": 0
                },
                {
                    "sent": "We are going to use a relaxed planning heuristic in order to guide the search, so the way this works is very similar to how we're propagating the failure explanations in the state space, except that we ignore the delete effects.",
                    "label": 0
                },
                {
                    "sent": "So under the optimistic or pessimistic interpretations, we can simply just use FFT Ristic, and in the cautiously optimistic semantics will be propagating this plan for explanations and using them to help select which actions we want to use in the relax plan.",
                    "label": 0
                },
                {
                    "sent": "Obviously, the actions that fell in the fewest interpretations, other ones we want to be selecting to support the.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Propositions?",
                    "label": 0
                },
                {
                    "sent": "So we have two heuristics that are counting.",
                    "label": 0
                },
                {
                    "sent": "The first one is going to be counting models.",
                    "label": 0
                },
                {
                    "sent": "HM and HPI is counting prime implicants.",
                    "label": 1
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Our plenary it uses a dual cool green vest for search with preferred operators.",
                    "label": 0
                },
                {
                    "sent": "It turns the first solution that defines and it computes the plan quality after search so we aren't counting models during the search unless it's part of the Ristic.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So we have four domains that we used for this.",
                    "label": 0
                },
                {
                    "sent": "We used and modified IPC domains for the printer in the pathways domain and then we created 2 problems here.",
                    "label": 0
                },
                {
                    "sent": "The first one called Barter World, where we do specifically designed this one to have high cardinality diagnosis or high cardinality prime implicants.",
                    "label": 0
                },
                {
                    "sent": "The second one we varied the inclusion of different types of incomplete features such as one has only open only possible preconditions.",
                    "label": 0
                },
                {
                    "sent": "Others have possible effects and possible ads.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So across these domains, either all the solvable instances of one of the planners that we are comparing and this is the number of incomplete features in the different domains so.",
                    "label": 0
                },
                {
                    "sent": "We have on the order of 10,000 incomplete features in some of the harder instances.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So in evaluating this, we have three main questions we want to look at.",
                    "label": 0
                },
                {
                    "sent": "Well, does reading about neatness help us find better quality plans?",
                    "label": 0
                },
                {
                    "sent": "Hopefully the answer is yes.",
                    "label": 0
                },
                {
                    "sent": "Does counting Prime Implicants perform better than counting models?",
                    "label": 1
                },
                {
                    "sent": "And as the number of incomplete features grows, does stronger reasoning about the incompleteness help us?",
                    "label": 1
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so with this table showing, here is the number of instances in which one of the heuristics finds a better solution than one of the others.",
                    "label": 0
                },
                {
                    "sent": "So if you look at the first column here, it's asking if I'm counting only problem.",
                    "label": 0
                },
                {
                    "sent": "It's a size 1.",
                    "label": 0
                },
                {
                    "sent": "Do I find a better plan than FF heuristic?",
                    "label": 0
                },
                {
                    "sent": "So I have 603 in that case instances where I find a better solution.",
                    "label": 0
                },
                {
                    "sent": "Now if I look at the.",
                    "label": 0
                },
                {
                    "sent": "The first row, the second column.",
                    "label": 0
                },
                {
                    "sent": "This is the opposite where if found a better here, better solution than the primal cuts of size 1, so I folded all the cases that you do better by reasoning which everyone solves problems with the best quality.",
                    "label": 0
                },
                {
                    "sent": "So these are all instances where the both of the planners could solve the problem.",
                    "label": 0
                },
                {
                    "sent": "So what we can see here is that when we're reading about incompleteness, where we have either counting prime implicants, RBD, here's representing counting models as we used to be to represent these sentences and use the beta count the models.",
                    "label": 0
                },
                {
                    "sent": "In all cases, we do better than heuristic, that ignores incompleteness.",
                    "label": 0
                },
                {
                    "sent": "The other thing to notice is that if we count profits size one we happen to find more better solutions.",
                    "label": 0
                },
                {
                    "sent": "Then we would if we were counting models, or if we were counting remnants of higher cardinality.",
                    "label": 0
                },
                {
                    "sent": "So this approximation, where we're counting single faults, actually helps us do better.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So in terms of problem solved what I'm listing here on each of the rows is a different problem instance, and the number next to it is.",
                    "label": 0
                },
                {
                    "sent": "The probability of injecting incomplete features in the domain 'cause we have domain generators that create these.",
                    "label": 0
                },
                {
                    "sent": "So as you go down, you're going from .25.",
                    "label": 0
                },
                {
                    "sent": "Probability of injecting incomplete feature down to 1.0 probability, so the problems are more incomplete as you go down the table and then we have the four domains we have the part printer, the barter world, the pathways and bridges and what you can see here in the total across all domains is that the one that solves the most instances is counting pregnant.",
                    "label": 0
                },
                {
                    "sent": "Look, it's a size 2.",
                    "label": 0
                },
                {
                    "sent": "The next best is counting pumpkins size 1 and then counting premika size 3 or counting models.",
                    "label": 0
                },
                {
                    "sent": "Does the next best.",
                    "label": 0
                },
                {
                    "sent": "Then finally, I'm also showing the last column here.",
                    "label": 0
                },
                {
                    "sent": "The number of solutions found by a conformal probabilistic planner pond in the translated instances for this problem.",
                    "label": 0
                },
                {
                    "sent": "So we do clearly much better than formal probabilistic planner and counting models doesn't seem to be the best idea, and I do want to note that in some of the domains we do better by counting models such as this bridge is domain.",
                    "label": 0
                },
                {
                    "sent": "We find 183 solutions compared to 170 ish for the counting prime implicants.",
                    "label": 0
                },
                {
                    "sent": "And obviously the ignoring it.",
                    "label": 0
                },
                {
                    "sent": "Features the column here for FF we solve the most problems overall.",
                    "label": 0
                },
                {
                    "sent": "Here we have a total of 1600 problems that are solved by FF, but this is to be expected because if you're throwing away information, you're obviously going to scale better.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, so this is a cumulative runtime for all of the algorithms and what I'm showing here is F is the plus marks that are on the top here and they basically solve more problems that are harder problems.",
                    "label": 0
                },
                {
                    "sent": "So that's why the time taken is a lot larger now when we're counting prime implicants.",
                    "label": 0
                },
                {
                    "sent": "It's these three lines at the bottom and the one that does best in the end is counting problem because the size one it's the cheapest.",
                    "label": 0
                },
                {
                    "sent": "And then the one the black square, the top.",
                    "label": 0
                },
                {
                    "sent": "There is counting models so it gets a lot more costly as the problems there are more difficult.",
                    "label": 1
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Another thing I want to talk about is.",
                    "label": 0
                },
                {
                    "sent": "How the amount of incompleteness domain affects the number of solutions we can find?",
                    "label": 0
                },
                {
                    "sent": "So what I've outlined in these three red areas is as I'm going down the rows here, I'm increasing the incompleteness in the domain instances, and as you can see.",
                    "label": 0
                },
                {
                    "sent": "The bolded numbers are the ones that do the best solve the most instances.",
                    "label": 0
                },
                {
                    "sent": "And here I have.",
                    "label": 0
                },
                {
                    "sent": "You know, when I have very little uncertainty that counting problem because the size 3 tends to do best, but then as they get more incompleteness, counting fewer or smaller counting cardinality, prime implicate actually helps you do better.",
                    "label": 0
                },
                {
                    "sent": "Mainly because you're ignoring a lot of the uncertainty and you could help scale the planner better.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so in this time I'm going to skip over this discussion of execution incomplete domains, But the basic answer is when we're executing these plans, we can learn about the domains as we go along and we may have to replan during that.",
                    "label": 0
                },
                {
                    "sent": "It turns out that by being robust when we're planning helps us replan list.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Nothing.",
                    "label": 0
                },
                {
                    "sent": "Which you would expect.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": false,
            "summarization_data": []
        },
        "clip_25": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So in summary, with the first work that I were aware of, that is applying a robust planning to incomplete strips domains, it turns out the accounting, diagnosis or prime implicants is faster than model counting, and we return comperable quality solutions.",
                    "label": 0
                },
                {
                    "sent": "And when we're executing robust, incomplete plans requires less re planning.",
                    "label": 0
                },
                {
                    "sent": "So some of the future work for this is basically give me a planning model.",
                    "label": 0
                },
                {
                    "sent": "We can make it incomplete, so there's all kinds of different things you can make incomplete about planning models where humans have trouble modeling.",
                    "label": 0
                },
                {
                    "sent": "So we can consider things like conditional effects, temporal actions, PDL schemas.",
                    "label": 0
                },
                {
                    "sent": "Another thing we want to consider is correlated incompleteness, where we have two effects that have to be given together.",
                    "label": 0
                },
                {
                    "sent": "The other thing we consider it consider is having a probabilistic prior on the incompleteness of the domain.",
                    "label": 0
                },
                {
                    "sent": "And look at alternative representations of the failure explanations.",
                    "label": 0
                },
                {
                    "sent": "And if you were the workshops, we actually discussed some work on knowledge acquisition using these failure explanations to derive question asking for a domain expert.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": false,
            "summarization_data": []
        },
        "clip_27": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So like to say thank you and the source code for this is available online and there's also a longer technical report of the paper, so thank you.",
                    "label": 0
                },
                {
                    "sent": "Any questions?",
                    "label": 0
                },
                {
                    "sent": "Thank you then have a question about that.",
                    "label": 0
                },
                {
                    "sent": "When you.",
                    "label": 0
                },
                {
                    "sent": "I mean, you do focus on reporting weather problems are being solved or not, but you know you are.",
                    "label": 0
                },
                {
                    "sent": "You are reported in solver because you found a solution.",
                    "label": 0
                },
                {
                    "sent": "But there's the issue of the quality of the plan performance.",
                    "label": 0
                },
                {
                    "sent": "You can command a little bit more on that.",
                    "label": 0
                },
                {
                    "sent": "If you were.",
                    "label": 0
                },
                {
                    "sent": "I don't know the notion of loudness of things like that becausw cities is that it can be like there's something going on there and we have no idea, right?",
                    "label": 0
                },
                {
                    "sent": "Well, one of the criticisms of this work is received is that I'm stopping when I find the first solution.",
                    "label": 0
                },
                {
                    "sent": "So I could keep going in a timely manner and finding better solutions.",
                    "label": 0
                },
                {
                    "sent": "And it turns out I implemented those two days ago during the conference and it does improve quite a bit when you do anytime approach.",
                    "label": 0
                },
                {
                    "sent": "So what I presented here is you know the quality of the first solution you find, which is an indicator of how good the heuristic is, right?",
                    "label": 0
                },
                {
                    "sent": "Because it's driving you towards a good solution to begin with and does turn out that reason about incompleteness does give you better solutions of the first solution.",
                    "label": 0
                },
                {
                    "sent": "Well, let me ask you a question then.",
                    "label": 0
                },
                {
                    "sent": "So model counting is equivalent to probabilistic inference.",
                    "label": 0
                },
                {
                    "sent": "And so was wondering here.",
                    "label": 0
                },
                {
                    "sent": "First of all, have you considered, I guess, the entire literature on probabilistic inference to answer the same questions, and if not, then what are the differences?",
                    "label": 0
                },
                {
                    "sent": "'cause that at least at a high level we know that we can always convert model counting questions into probabilistic inference questions and vice versa, right?",
                    "label": 0
                },
                {
                    "sent": "Well what we're assuming this work is that we have nondeterministic information about the incompleteness.",
                    "label": 0
                },
                {
                    "sent": "So the first thing you might want to try is adding probabilities to that incompleteness and then.",
                    "label": 0
                },
                {
                    "sent": "Using the weighted model counting literature to, you know we don't have to add probabilities, it's just a way of converting the problems so it would not change anything.",
                    "label": 0
                },
                {
                    "sent": "Great, well I haven't considered that.",
                    "label": 0
                },
                {
                    "sent": "We just took the easiest Rd to getting a model counting approach in this work.",
                    "label": 0
                },
                {
                    "sent": "Yeah, so it's not actually a question, it's more like.",
                    "label": 0
                },
                {
                    "sent": "Joining pascals question.",
                    "label": 0
                },
                {
                    "sent": "AM if.",
                    "label": 0
                },
                {
                    "sent": "It sounds like sat based model counters that's probably also very useful for weighted model counting.",
                    "label": 0
                },
                {
                    "sent": "Will be better choice for our system.",
                    "label": 0
                },
                {
                    "sent": "They are faster.",
                    "label": 0
                },
                {
                    "sent": "They are robust in terms that tomorrow we can add probabilities there forever.",
                    "label": 0
                },
                {
                    "sent": "So there are exponential time, right?",
                    "label": 0
                },
                {
                    "sent": "So the using the prime implicants, it is linear time so.",
                    "label": 0
                },
                {
                    "sent": "No, we're not using a BDD for that.",
                    "label": 0
                },
                {
                    "sent": "The Model County version would be.",
                    "label": 0
                },
                {
                    "sent": "Yes, so why we do?",
                    "label": 0
                },
                {
                    "sent": "It's not really well, just the principle will remain the same.",
                    "label": 0
                },
                {
                    "sent": "Just might be that this the efficiency of the system will be much better.",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "Any other questions?",
                    "label": 0
                },
                {
                    "sent": "Yeah, following up the car Miss Commonwealth.",
                    "label": 0
                },
                {
                    "sent": "Maybe you would like, but the problem is that you are using already for representing the station stuff compared with using some kind of logical representation just for realistics and that would be totally different of memory footprint and you and I try to derive approximations there.",
                    "label": 0
                },
                {
                    "sent": "I mean you can play with with that logical formulation to get other things just beside can't exactly the model going to the other side.",
                    "label": 0
                },
                {
                    "sent": "So going you know media controller diagnosis as well.",
                    "label": 0
                },
                {
                    "sent": "Is it like working?",
                    "label": 0
                },
                {
                    "sent": "But we really don't know.",
                    "label": 0
                },
                {
                    "sent": "So just wait to try.",
                    "label": 0
                },
                {
                    "sent": "Well, one comment about that is that.",
                    "label": 0
                },
                {
                    "sent": "They're counting the models.",
                    "label": 0
                },
                {
                    "sent": "It doesn't really matter what algorithm you plug into account, the models are going to get better efficiency that we the results we saw that we get better quality if we're counting prime applicants.",
                    "label": 0
                },
                {
                    "sent": "So that's not going to change personally.",
                    "label": 0
                },
                {
                    "sent": "I've got a very easy one.",
                    "label": 0
                },
                {
                    "sent": "I think in a paper you said you try probabilistic if F, which does use weighted model counting by SAT solvers.",
                    "label": 0
                },
                {
                    "sent": "You said it didn't work, so I just wonder what happened?",
                    "label": 0
                },
                {
                    "sent": "Well, I'd have to ask you in Carmel that I basically said vaulted, so I don't know what to tell you.",
                    "label": 0
                },
                {
                    "sent": "Say I got segfaults from it.",
                    "label": 0
                },
                {
                    "sent": "So I don't know if it's you know a deficiency approach or not, but.",
                    "label": 0
                },
                {
                    "sent": "We can talk offline about that.",
                    "label": 0
                },
                {
                    "sent": "They're not supposed to be sackfuls conceptually, so.",
                    "label": 0
                }
            ]
        }
    }
}