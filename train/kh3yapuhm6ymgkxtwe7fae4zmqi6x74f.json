{
    "id": "kh3yapuhm6ymgkxtwe7fae4zmqi6x74f",
    "title": "Access Control for HTTP Operations on Linked Data",
    "info": {
        "introducer": [
            "Olaf Hartig, Hasso-Plattner-Institute, University of Potsdam"
        ],
        "author": [
            "Luca Costabello, Fujitsu Ireland"
        ],
        "published": "July 8, 2013",
        "recorded": "May 2013",
        "category": [
            "Top->Computer Science->Semantic Web",
            "Top->Computer Science->Big Data"
        ]
    },
    "url": "http://videolectures.net/eswc2013_costabello_data/",
    "segmentation": [
        [
            "So welcome to the second link data session of the conference.",
            "We have some interesting papers in this session and the first is presented by Luca Costa Bella from Costa Bella from INRIA and it's about access control following data.",
            "Hello everyone.",
            "Ann Lucas Abela from INRIA Sophia Antipolis, France.",
            "An well basically.",
            "Today I'm going to talk you about access control for accessing triplestore with HTTP operations.",
            "So basically this is."
        ],
        [
            "The offline I'm going to give you, well, sort of background and well, I'm going to talk about our authorization process do and I'm going to describe basically how our system called SHIELD works, then some scenarios.",
            "Basically we deployment overview of system, few words on the evaluation, anuel conclusion in future work."
        ],
        [
            "So well."
        ],
        [
            "I'm not going to spend too much time on it.",
            "Well, you all know that we can access link data.",
            "Resources mean multiple ways.",
            "Most likely we have HTTP, the referencing, or we sparkle queries and so on.",
            "So it's just to save a record.",
            "Clear work deals with DIA."
        ],
        [
            "Access to HTTP.",
            "Two RDF resources.",
            "We have HTTP operations so.",
            "So this brings."
        ],
        [
            "As do our research question, but it's basically how to design an authorization framework for HTTP operation and triples an let me stress this authorization keyword because well, as you, as you certainly know, access control deals with authentication, accounting authorization as well.",
            "So we only focus on authorization today."
        ],
        [
            "Well, of course we've not the first to deal with this issue well, I'm not going to describe all the details of the table that basically there are other related work.",
            "Of course in later years, what I want to stress out is that basically we are interested in puzzle that focus on HTTP interaction.",
            "We would.",
            "Basically we're interested in attribute based access control model becausw.",
            "We think that attribute based.",
            "Let us have well more expressive policies, policies that will be better to have in, well, semantic Web languages like RDF Sparkle.",
            "So we're not looking for introducing brand new access policies, languages, resource level granularity, and finally context awareness, 'cause we basically are interested in providing expressive access policies that will let us go beyond access control lists.",
            "So we basically tried to extend to work with that we presented last year, it's called Cheerful Sparkle Anne Sheffer."
        ],
        [
            "Sparkle is authorization framework that protects sparkle queries.",
            "Sent to RDF store to the sparkle endpoint so."
        ],
        [
            "What we basically want to do in this work today is to convert the system to acccept to support to protect HTTP operations on linked data.",
            "This is basically our goal so."
        ],
        [
            "Will describe I describe well briefly how V she'll authorization.",
            "Prosody works starting from the."
        ],
        [
            "From the structure from the anatomy of the of the Shell access policy.",
            "So basically what we have here is a simplified version of our vocabulary.",
            "It's actually made of multiple light where ontologies mixed up together.",
            "But basically what we have is an access policy that is is actually applied to target.",
            "We source that we want to protect.",
            "We have access privileges like Create, read, update in the lead operations.",
            "An access policy is basically a container.",
            "For a set of access conditions that are related to this part of the ontology, that is basically the client context.",
            "So we what we mean by client.",
            "Context is basically a sort of attributes that deal with the device.",
            "Information will be environment in which the HTTP request is made an we have a user profile.",
            "We create access policies in two different styles according to the scenario in which in which we will be working.",
            "So the access condition you'll see later on in the next slides and beyond as more example, are actually defined.",
            "We choose styles, one with Sparkle and another we spot without.",
            "So we already have triples.",
            "Only let me."
        ],
        [
            "Show you a couple of examples of.",
            "This is a sample access policy for the Shield authorization framework.",
            "It's sparkle based, so it means that the protected resource basically can be accessed only if V access condition expressing the red circle is verify.",
            "So visit well as simple access condition that allows access if the user is Joan and if it's in.",
            "Given location.",
            "An you may notice how the access condition is expressed as a sparkle.",
            "Sparkle ask query, so there's an embedded sparkle inside inside RDF, but what happens if we work in scenarios where sparkle is not present on the on the server side an, for instance, data set administrators are not familiar with the query language.",
            "In this case we."
        ],
        [
            "Proposed well, another farewell flavor or access policy that is basically the same structure as before, but in this case the access condition.",
            "In this case the user is jaun Ann is closed near by another user that is called Alice.",
            "In this case, the access condition is expressed in full RDF service.",
            "No embedded sparkle anymore.",
            "We'll see later on why this is done.",
            "So why?"
        ],
        [
            "Once we have defined access policies, we can move on to the real authorization process.",
            "So basically the first step."
        ],
        [
            "Is adding client contributes to HTTP to be HTTP operation?",
            "What what does it mean?",
            "So basically the client performs an HTTP operation an the first thing that he that he or she does is to create an RDF graph that describes that contains all the client context information where we saw before.",
            "So there will be some device information, some data about.",
            "The environment, like location, time, proximity of other users, and so on.",
            "An user profile information.",
            "So all this data is built on board is serialized an coded in the HTTP header.",
            "We we use the authorization header here and it's sent to the server and stored on the on the on the server side and this data will be you."
        ],
        [
            "Using the second step, that is actually the execution of the access conditions that we saw before.",
            "So if you if you take this simple example, this is the sparkle based access condition.",
            "What you what Shield does is basically execute this access condition on the data that has been sent by the by the client so that we can evaluate the access condition on the client attributes.",
            "In this example, will access denied in this case, or well, the user is not Jaune.",
            "The same thing."
        ],
        [
            "We sparkle sparkle as conditions so we have basically the same condition as before, but as we do not have as we work in a scenario where we do not have sparkle on the server side, we basically evaluate the access condition always on the client attributes.",
            "But we use a subgraph matching process so we got rid of sparkle we got.",
            "We will see later on how this is work.",
            "The details of this subgraph matching procedure that we use are in the paper, so I'm not going to describe it in the presentation.",
            "Uh, well, no match in this case and I have to say that in our product ID use the korres key, gram RDF triplestore an sparkle endpoint so well.",
            "Having executed the access policies, we."
        ],
        [
            "Move to the first part that is actually combining the results of the access policies or the access conditions that we just executed an basically build the response.",
            "The HTTP response that we send to the client.",
            "In this case, the client is on hardware ized."
        ],
        [
            "Well, just a few words on scenarios.",
            "Well, I just had before begun."
        ],
        [
            "All is to the goal of our shield for HTTP that we presented today is to support link data access with HTTP within operation so.",
            "We we since we started from a system that was based on sparkle.",
            "We're basically try to to.",
            "Use two proposals out in the community to move from a sparkle base scenario to sparkle less one an so we basically try to focus on the Rough Store protocol for sparkle, but it's basically a mapping between an HTTP request, an sparkle query, an we support the newborn linked data platform recommendations, but is.",
            "Well, a set of best practices due to access HD access.",
            "Well, RDF resource is stored on triple store."
        ],
        [
            "Well, so basically we ended up with a shield for graph store protocol Anna Shield for linked data platform.",
            "In this second case.",
            "As you may see here we have a sparkle based solution an we have.",
            "We went further on by getting rid completely getting Reno Sparkle.",
            "So we finally ended up with a sparkle a solution but is aimed at scenarios that are really say that let me say basic profile server deployments for linked data so where.",
            "Sparkle is not present at all."
        ],
        [
            "Well, let me start with the shield GSP."
        ],
        [
            "So this is basically how the system works.",
            "Well.",
            "Do not look at all the details here.",
            "The important thing is to see that the client.",
            "Is basically communicating with the server side with HTTP only, so the client is totally unaware of sparkle behind the scene, but is still used.",
            "As you may see.",
            "So that the client only speaks HTTP to the server server is in this case that is a triple store with a sparkle engine that supports the graph store protocol.",
            "Social GSP basically executes the authorization process where we saw before so well.",
            "First adding client attributes we store them on the in the Triple Store.",
            "Then we execute the access conditions here as we saw before the Sparkle case in this case.",
            "And we will basically build the HTTP response."
        ],
        [
            "How about this shield for laying data platform?"
        ],
        [
            "So this is basically the architecture.",
            "Again, the client communicates with HTTP only, like in the request in the reply in the middle.",
            "We have.",
            "This time we have an LDAP server that is coupled with a triple store that according to the LDP recommendation could be well file system.",
            "So it's very.",
            "It could be very very simple and very simple.",
            "Well service side architecture in this case, so she'll LDP basically is.",
            "Not too much different from the previous architecture.",
            "What we have is an internal triple story, an internal sparkle engine, but is only used to assess the authorization process.",
            "Do we assess the access condition in the authorization process so as before adding client attributes that are stored with sparkle query on the Triple Store on the internal Triple Storm, we execute the access condition and well, we get back the results according to the access condition.",
            "Evaluation what we notice here is that at some point we said, well, we, we base our authorization prosody on Sparkle, but, well, sparkle is actually used only inside our our component, so.",
            "What if we get rid of Sparkle?",
            "I mean, it's like just an internal of our component an.",
            "Moreover, if we want to support scenarios where data set administrators are not aware or not familiar with sparkle, our access condition should not be a sparkle.",
            "Queries should not be sparkle queries, so we should get.",
            "We should adopt access conditions express in RDF only what we saw before.",
            "So what we did was to get."
        ],
        [
            "We'd all be sparkle layer, so we basically stripped out the Sparkle engine that we used as an internal component inside our authorization module and we ended up with.",
            "We subgraph match or component that we used to perform basically the same operation that we did before we.",
            "We've sparkles, so again adding client attributes, access condition execution, an HTTP response construction, so it's basically always the same procedure.",
            "What changes here is that we do not have sparkle anymore.",
            "We have we use the internals, we internal API or the OR the sub natural that we adopted.",
            "Actually in this case.",
            "Again, as I said before, it was the queries cake, RAM core.",
            "I think it was the coral bakeries key gram sparkle engine.",
            "Well."
        ],
        [
            "Few words on response time evaluation well."
        ],
        [
            "We we assessed the response time or the system well in the case.",
            "Generally speaking, we notice that response time is linear according to the number of access condition in the system an.",
            "Well, in this case you see how response time grows in terms of comparative and number of access conditional assistant and we compare.",
            "The results will be shielding.",
            "The platform we sparkle an without we notice as we may, as we have imagine, imagine that the sparkle less scenario is 25% faster.",
            "So because we stripped out me be Sparkle interpreter with Sparkle layer serverless operation of course to do.",
            "This number actually changes according to the adopted.",
            "Subgraph matching according to be adopted Sparkle, Sparkle, engine and Spartan subgraph matching procedure.",
            "Of course.",
            "Then we had a look up.",
            "At what happens when, in the case of your shield for graph store protocol, what happens when we when we have an anti triple store and a triple store will with like 10 million triples we got data from dump over Linda Cloud and we notice that actually we had an increase or reference time only 14% again this number my vary according to the.",
            "Type of data to a number of name graphs and to the strategy used by the Triple Store to store and handle name graph as well."
        ],
        [
            "Again.",
            "We compared with three systems and of course first thing that comes very spread clear is that the blue one is actually the shield.",
            "GSP is much slower than the other ones because he I mean this.",
            "In this configuration there's an additional HTTP request because the shield GSP that we that we made is basically is basically.",
            "Uh, some sort of proxy for the triple store so it takes more time to execute queries.",
            "Well, but the important result in this graph is that the complexity.",
            "Of access conditions does not affect in response time.",
            "Why, well, actually this is due to the fact that access conditions are executed over the incoming client data.",
            "An I mean we contact information where you saw before an.",
            "Since this is a very small, relatively relatively small graph.",
            "Well, even though we have many triples like filters, an military post or filters condition do not, does not.",
            "Actually affect response time too much.",
            "And then we finally tested the response time.",
            "For each HTTP request and well as expected, response times do not do not vary according to the type of of operation."
        ],
        [
            "Well, due works the true words on future work.",
            "So well."
        ],
        [
            "Basically.",
            "Well, I I showed you an authorization process.",
            "Your bet relies on client attributes that are stored on the on the server side.",
            "Actually it be the important part here is that in this work for the time being, we do not assess the trustworthiness of these attributes, even though we are compatible for what concerns user profile information, we are compatible with the web ID proposition.",
            "When it comes to, let's say.",
            "Assessing the trustworthiness of location data, for instance, well, proper time being we do not deal with this problem, but it's actually one of our future research lines.",
            "Van will be working on client attributes caching cause well this is actually sort of work that we should do to improve response time.",
            "Ann well finally will be working and we are currently working on creating and supporting.",
            "Data set administrators in creating and managing the lifecycle of access policies, that is, to provide more well, better user experience.",
            "Because, well, typing RDF.",
            "It's not well the best thing to actually do in terms of supporting usability.",
            "OK, thank you for your attention and well time for question.",
            "Your access control mechanism is it kind of attackable in the sense.",
            "So what does it do if I ask for something which is protected against to something which is not there?",
            "So my point.",
            "So the point is, could I find try to find out by putting some requests at least some information whether the resource which is to be protected is available or not.",
            "So some information already.",
            "So yeah, see I see, the point is whether it's somewhere checkable in that sense, actually.",
            "We actually rely on the semantics of HTTP basically, so if you.",
            "First of all, I have to say that let's imagine that the data set administrators has protected all the resources in the in the base.",
            "Let's make this assumption well, if you are malicious attacker an, you want to well.",
            "Perform HTTP operation when a given resource that you know is is that you.",
            "I mean, let's say you want to know if the resources there, well, actually we shield access authorization process, will reply with a 401 HTTP message.",
            "I mean unauthorized, and so we actually rely on the HTTP semantics.",
            "With high.",
            "I haven't fully understood the granularity that you can.",
            "Have in your access control, so I'm wondering whether you actually can only say whether resource can be accessed or whether certain triples can be returned that happened to be stored with a resource.",
            "Well, this is a good question.",
            "Actually.",
            "An well in our previous work where we protect.",
            "Sparkle queries we were where we were working with triple stores.",
            "We knew there was always a cheaper store with Sparkle endpoint on top of it, so we actually protected name graph.",
            "These were resources that we use to protect before so a name graph could be actually defined on a triple.",
            "So we reached triple level granularity but that was for Sparkle in this case.",
            "As we are protecting resources in, well, an we resource, we mean well on HTTP resource.",
            "So actually we adopted the definition of resource or provided by the linked data platform so well, it's an HTTP resource that.",
            "Provides RDF, so it's basically an RDF resource.",
            "In that case an.",
            "In this case we are granularity is the one of resource we do not reach triple level.",
            "The interesting thing though is that in the linked data platform scenario we can target single resources, but as billing data platform provides national container we can actually protect containers as well.",
            "So set of resources.",
            "But that's in the other direction, so in to go to in the small thing we do not reach triple level granularity.",
            "Well, we might store.",
            "Single triples in implies, but that's that's not what we do, actually.",
            "I also have a question about the granularities, so if I have access to the subject but not to the object.",
            "And I dereference the subject.",
            "Do I get the object?",
            "Actually?",
            "As I said before?",
            "We basically provide access to the to the RDF resource percent.",
            "So yes, you get the two.",
            "So actually to me it appears, but what is really linked data specific about these mechanisms that you introduced?",
            "I mean, in general you could basically use this for any resource that can be accessed that actually isn't it.",
            "Yes, yes.",
            "Can you can you have different access rules depending on content negotiation that you're allowed to get HTML representation of these results, but not the idea of representation?",
            "Yeah not and and maybe that's the direction for triple based on not maybe not triple based but finer grain.",
            "Access control if we could put in the content negotiation aspects regarding the actual content of the RDF graph, maybe that could be managed at the content negotiation level then this would apply.",
            "Bayesian interesting point, but totally true, yeah.",
            "Let's thank look again, thank you.",
            "Thanks."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So welcome to the second link data session of the conference.",
                    "label": 0
                },
                {
                    "sent": "We have some interesting papers in this session and the first is presented by Luca Costa Bella from Costa Bella from INRIA and it's about access control following data.",
                    "label": 0
                },
                {
                    "sent": "Hello everyone.",
                    "label": 0
                },
                {
                    "sent": "Ann Lucas Abela from INRIA Sophia Antipolis, France.",
                    "label": 0
                },
                {
                    "sent": "An well basically.",
                    "label": 0
                },
                {
                    "sent": "Today I'm going to talk you about access control for accessing triplestore with HTTP operations.",
                    "label": 1
                },
                {
                    "sent": "So basically this is.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The offline I'm going to give you, well, sort of background and well, I'm going to talk about our authorization process do and I'm going to describe basically how our system called SHIELD works, then some scenarios.",
                    "label": 0
                },
                {
                    "sent": "Basically we deployment overview of system, few words on the evaluation, anuel conclusion in future work.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So well.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I'm not going to spend too much time on it.",
                    "label": 0
                },
                {
                    "sent": "Well, you all know that we can access link data.",
                    "label": 0
                },
                {
                    "sent": "Resources mean multiple ways.",
                    "label": 0
                },
                {
                    "sent": "Most likely we have HTTP, the referencing, or we sparkle queries and so on.",
                    "label": 0
                },
                {
                    "sent": "So it's just to save a record.",
                    "label": 0
                },
                {
                    "sent": "Clear work deals with DIA.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Access to HTTP.",
                    "label": 0
                },
                {
                    "sent": "Two RDF resources.",
                    "label": 0
                },
                {
                    "sent": "We have HTTP operations so.",
                    "label": 0
                },
                {
                    "sent": "So this brings.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "As do our research question, but it's basically how to design an authorization framework for HTTP operation and triples an let me stress this authorization keyword because well, as you, as you certainly know, access control deals with authentication, accounting authorization as well.",
                    "label": 0
                },
                {
                    "sent": "So we only focus on authorization today.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Well, of course we've not the first to deal with this issue well, I'm not going to describe all the details of the table that basically there are other related work.",
                    "label": 0
                },
                {
                    "sent": "Of course in later years, what I want to stress out is that basically we are interested in puzzle that focus on HTTP interaction.",
                    "label": 0
                },
                {
                    "sent": "We would.",
                    "label": 0
                },
                {
                    "sent": "Basically we're interested in attribute based access control model becausw.",
                    "label": 0
                },
                {
                    "sent": "We think that attribute based.",
                    "label": 0
                },
                {
                    "sent": "Let us have well more expressive policies, policies that will be better to have in, well, semantic Web languages like RDF Sparkle.",
                    "label": 0
                },
                {
                    "sent": "So we're not looking for introducing brand new access policies, languages, resource level granularity, and finally context awareness, 'cause we basically are interested in providing expressive access policies that will let us go beyond access control lists.",
                    "label": 1
                },
                {
                    "sent": "So we basically tried to extend to work with that we presented last year, it's called Cheerful Sparkle Anne Sheffer.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Sparkle is authorization framework that protects sparkle queries.",
                    "label": 0
                },
                {
                    "sent": "Sent to RDF store to the sparkle endpoint so.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "What we basically want to do in this work today is to convert the system to acccept to support to protect HTTP operations on linked data.",
                    "label": 0
                },
                {
                    "sent": "This is basically our goal so.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Will describe I describe well briefly how V she'll authorization.",
                    "label": 0
                },
                {
                    "sent": "Prosody works starting from the.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "From the structure from the anatomy of the of the Shell access policy.",
                    "label": 0
                },
                {
                    "sent": "So basically what we have here is a simplified version of our vocabulary.",
                    "label": 0
                },
                {
                    "sent": "It's actually made of multiple light where ontologies mixed up together.",
                    "label": 0
                },
                {
                    "sent": "But basically what we have is an access policy that is is actually applied to target.",
                    "label": 0
                },
                {
                    "sent": "We source that we want to protect.",
                    "label": 0
                },
                {
                    "sent": "We have access privileges like Create, read, update in the lead operations.",
                    "label": 0
                },
                {
                    "sent": "An access policy is basically a container.",
                    "label": 1
                },
                {
                    "sent": "For a set of access conditions that are related to this part of the ontology, that is basically the client context.",
                    "label": 0
                },
                {
                    "sent": "So we what we mean by client.",
                    "label": 0
                },
                {
                    "sent": "Context is basically a sort of attributes that deal with the device.",
                    "label": 0
                },
                {
                    "sent": "Information will be environment in which the HTTP request is made an we have a user profile.",
                    "label": 0
                },
                {
                    "sent": "We create access policies in two different styles according to the scenario in which in which we will be working.",
                    "label": 0
                },
                {
                    "sent": "So the access condition you'll see later on in the next slides and beyond as more example, are actually defined.",
                    "label": 0
                },
                {
                    "sent": "We choose styles, one with Sparkle and another we spot without.",
                    "label": 0
                },
                {
                    "sent": "So we already have triples.",
                    "label": 0
                },
                {
                    "sent": "Only let me.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Show you a couple of examples of.",
                    "label": 0
                },
                {
                    "sent": "This is a sample access policy for the Shield authorization framework.",
                    "label": 1
                },
                {
                    "sent": "It's sparkle based, so it means that the protected resource basically can be accessed only if V access condition expressing the red circle is verify.",
                    "label": 0
                },
                {
                    "sent": "So visit well as simple access condition that allows access if the user is Joan and if it's in.",
                    "label": 0
                },
                {
                    "sent": "Given location.",
                    "label": 0
                },
                {
                    "sent": "An you may notice how the access condition is expressed as a sparkle.",
                    "label": 0
                },
                {
                    "sent": "Sparkle ask query, so there's an embedded sparkle inside inside RDF, but what happens if we work in scenarios where sparkle is not present on the on the server side an, for instance, data set administrators are not familiar with the query language.",
                    "label": 0
                },
                {
                    "sent": "In this case we.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Proposed well, another farewell flavor or access policy that is basically the same structure as before, but in this case the access condition.",
                    "label": 1
                },
                {
                    "sent": "In this case the user is jaun Ann is closed near by another user that is called Alice.",
                    "label": 0
                },
                {
                    "sent": "In this case, the access condition is expressed in full RDF service.",
                    "label": 0
                },
                {
                    "sent": "No embedded sparkle anymore.",
                    "label": 0
                },
                {
                    "sent": "We'll see later on why this is done.",
                    "label": 0
                },
                {
                    "sent": "So why?",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Once we have defined access policies, we can move on to the real authorization process.",
                    "label": 0
                },
                {
                    "sent": "So basically the first step.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Is adding client contributes to HTTP to be HTTP operation?",
                    "label": 1
                },
                {
                    "sent": "What what does it mean?",
                    "label": 0
                },
                {
                    "sent": "So basically the client performs an HTTP operation an the first thing that he that he or she does is to create an RDF graph that describes that contains all the client context information where we saw before.",
                    "label": 0
                },
                {
                    "sent": "So there will be some device information, some data about.",
                    "label": 0
                },
                {
                    "sent": "The environment, like location, time, proximity of other users, and so on.",
                    "label": 0
                },
                {
                    "sent": "An user profile information.",
                    "label": 0
                },
                {
                    "sent": "So all this data is built on board is serialized an coded in the HTTP header.",
                    "label": 0
                },
                {
                    "sent": "We we use the authorization header here and it's sent to the server and stored on the on the on the server side and this data will be you.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Using the second step, that is actually the execution of the access conditions that we saw before.",
                    "label": 0
                },
                {
                    "sent": "So if you if you take this simple example, this is the sparkle based access condition.",
                    "label": 0
                },
                {
                    "sent": "What you what Shield does is basically execute this access condition on the data that has been sent by the by the client so that we can evaluate the access condition on the client attributes.",
                    "label": 0
                },
                {
                    "sent": "In this example, will access denied in this case, or well, the user is not Jaune.",
                    "label": 0
                },
                {
                    "sent": "The same thing.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We sparkle sparkle as conditions so we have basically the same condition as before, but as we do not have as we work in a scenario where we do not have sparkle on the server side, we basically evaluate the access condition always on the client attributes.",
                    "label": 0
                },
                {
                    "sent": "But we use a subgraph matching process so we got rid of sparkle we got.",
                    "label": 0
                },
                {
                    "sent": "We will see later on how this is work.",
                    "label": 0
                },
                {
                    "sent": "The details of this subgraph matching procedure that we use are in the paper, so I'm not going to describe it in the presentation.",
                    "label": 0
                },
                {
                    "sent": "Uh, well, no match in this case and I have to say that in our product ID use the korres key, gram RDF triplestore an sparkle endpoint so well.",
                    "label": 0
                },
                {
                    "sent": "Having executed the access policies, we.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Move to the first part that is actually combining the results of the access policies or the access conditions that we just executed an basically build the response.",
                    "label": 0
                },
                {
                    "sent": "The HTTP response that we send to the client.",
                    "label": 1
                },
                {
                    "sent": "In this case, the client is on hardware ized.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Well, just a few words on scenarios.",
                    "label": 0
                },
                {
                    "sent": "Well, I just had before begun.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "All is to the goal of our shield for HTTP that we presented today is to support link data access with HTTP within operation so.",
                    "label": 0
                },
                {
                    "sent": "We we since we started from a system that was based on sparkle.",
                    "label": 0
                },
                {
                    "sent": "We're basically try to to.",
                    "label": 0
                },
                {
                    "sent": "Use two proposals out in the community to move from a sparkle base scenario to sparkle less one an so we basically try to focus on the Rough Store protocol for sparkle, but it's basically a mapping between an HTTP request, an sparkle query, an we support the newborn linked data platform recommendations, but is.",
                    "label": 1
                },
                {
                    "sent": "Well, a set of best practices due to access HD access.",
                    "label": 0
                },
                {
                    "sent": "Well, RDF resource is stored on triple store.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Well, so basically we ended up with a shield for graph store protocol Anna Shield for linked data platform.",
                    "label": 1
                },
                {
                    "sent": "In this second case.",
                    "label": 0
                },
                {
                    "sent": "As you may see here we have a sparkle based solution an we have.",
                    "label": 0
                },
                {
                    "sent": "We went further on by getting rid completely getting Reno Sparkle.",
                    "label": 0
                },
                {
                    "sent": "So we finally ended up with a sparkle a solution but is aimed at scenarios that are really say that let me say basic profile server deployments for linked data so where.",
                    "label": 0
                },
                {
                    "sent": "Sparkle is not present at all.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Well, let me start with the shield GSP.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So this is basically how the system works.",
                    "label": 0
                },
                {
                    "sent": "Well.",
                    "label": 0
                },
                {
                    "sent": "Do not look at all the details here.",
                    "label": 0
                },
                {
                    "sent": "The important thing is to see that the client.",
                    "label": 0
                },
                {
                    "sent": "Is basically communicating with the server side with HTTP only, so the client is totally unaware of sparkle behind the scene, but is still used.",
                    "label": 0
                },
                {
                    "sent": "As you may see.",
                    "label": 0
                },
                {
                    "sent": "So that the client only speaks HTTP to the server server is in this case that is a triple store with a sparkle engine that supports the graph store protocol.",
                    "label": 0
                },
                {
                    "sent": "Social GSP basically executes the authorization process where we saw before so well.",
                    "label": 0
                },
                {
                    "sent": "First adding client attributes we store them on the in the Triple Store.",
                    "label": 1
                },
                {
                    "sent": "Then we execute the access conditions here as we saw before the Sparkle case in this case.",
                    "label": 0
                },
                {
                    "sent": "And we will basically build the HTTP response.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "How about this shield for laying data platform?",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So this is basically the architecture.",
                    "label": 0
                },
                {
                    "sent": "Again, the client communicates with HTTP only, like in the request in the reply in the middle.",
                    "label": 0
                },
                {
                    "sent": "We have.",
                    "label": 0
                },
                {
                    "sent": "This time we have an LDAP server that is coupled with a triple store that according to the LDP recommendation could be well file system.",
                    "label": 0
                },
                {
                    "sent": "So it's very.",
                    "label": 0
                },
                {
                    "sent": "It could be very very simple and very simple.",
                    "label": 0
                },
                {
                    "sent": "Well service side architecture in this case, so she'll LDP basically is.",
                    "label": 0
                },
                {
                    "sent": "Not too much different from the previous architecture.",
                    "label": 0
                },
                {
                    "sent": "What we have is an internal triple story, an internal sparkle engine, but is only used to assess the authorization process.",
                    "label": 0
                },
                {
                    "sent": "Do we assess the access condition in the authorization process so as before adding client attributes that are stored with sparkle query on the Triple Store on the internal Triple Storm, we execute the access condition and well, we get back the results according to the access condition.",
                    "label": 1
                },
                {
                    "sent": "Evaluation what we notice here is that at some point we said, well, we, we base our authorization prosody on Sparkle, but, well, sparkle is actually used only inside our our component, so.",
                    "label": 0
                },
                {
                    "sent": "What if we get rid of Sparkle?",
                    "label": 0
                },
                {
                    "sent": "I mean, it's like just an internal of our component an.",
                    "label": 0
                },
                {
                    "sent": "Moreover, if we want to support scenarios where data set administrators are not aware or not familiar with sparkle, our access condition should not be a sparkle.",
                    "label": 0
                },
                {
                    "sent": "Queries should not be sparkle queries, so we should get.",
                    "label": 0
                },
                {
                    "sent": "We should adopt access conditions express in RDF only what we saw before.",
                    "label": 0
                },
                {
                    "sent": "So what we did was to get.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We'd all be sparkle layer, so we basically stripped out the Sparkle engine that we used as an internal component inside our authorization module and we ended up with.",
                    "label": 0
                },
                {
                    "sent": "We subgraph match or component that we used to perform basically the same operation that we did before we.",
                    "label": 0
                },
                {
                    "sent": "We've sparkles, so again adding client attributes, access condition execution, an HTTP response construction, so it's basically always the same procedure.",
                    "label": 1
                },
                {
                    "sent": "What changes here is that we do not have sparkle anymore.",
                    "label": 0
                },
                {
                    "sent": "We have we use the internals, we internal API or the OR the sub natural that we adopted.",
                    "label": 0
                },
                {
                    "sent": "Actually in this case.",
                    "label": 0
                },
                {
                    "sent": "Again, as I said before, it was the queries cake, RAM core.",
                    "label": 0
                },
                {
                    "sent": "I think it was the coral bakeries key gram sparkle engine.",
                    "label": 0
                },
                {
                    "sent": "Well.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Few words on response time evaluation well.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We we assessed the response time or the system well in the case.",
                    "label": 1
                },
                {
                    "sent": "Generally speaking, we notice that response time is linear according to the number of access condition in the system an.",
                    "label": 0
                },
                {
                    "sent": "Well, in this case you see how response time grows in terms of comparative and number of access conditional assistant and we compare.",
                    "label": 1
                },
                {
                    "sent": "The results will be shielding.",
                    "label": 0
                },
                {
                    "sent": "The platform we sparkle an without we notice as we may, as we have imagine, imagine that the sparkle less scenario is 25% faster.",
                    "label": 0
                },
                {
                    "sent": "So because we stripped out me be Sparkle interpreter with Sparkle layer serverless operation of course to do.",
                    "label": 0
                },
                {
                    "sent": "This number actually changes according to the adopted.",
                    "label": 0
                },
                {
                    "sent": "Subgraph matching according to be adopted Sparkle, Sparkle, engine and Spartan subgraph matching procedure.",
                    "label": 0
                },
                {
                    "sent": "Of course.",
                    "label": 0
                },
                {
                    "sent": "Then we had a look up.",
                    "label": 0
                },
                {
                    "sent": "At what happens when, in the case of your shield for graph store protocol, what happens when we when we have an anti triple store and a triple store will with like 10 million triples we got data from dump over Linda Cloud and we notice that actually we had an increase or reference time only 14% again this number my vary according to the.",
                    "label": 0
                },
                {
                    "sent": "Type of data to a number of name graphs and to the strategy used by the Triple Store to store and handle name graph as well.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Again.",
                    "label": 0
                },
                {
                    "sent": "We compared with three systems and of course first thing that comes very spread clear is that the blue one is actually the shield.",
                    "label": 0
                },
                {
                    "sent": "GSP is much slower than the other ones because he I mean this.",
                    "label": 0
                },
                {
                    "sent": "In this configuration there's an additional HTTP request because the shield GSP that we that we made is basically is basically.",
                    "label": 0
                },
                {
                    "sent": "Uh, some sort of proxy for the triple store so it takes more time to execute queries.",
                    "label": 0
                },
                {
                    "sent": "Well, but the important result in this graph is that the complexity.",
                    "label": 0
                },
                {
                    "sent": "Of access conditions does not affect in response time.",
                    "label": 1
                },
                {
                    "sent": "Why, well, actually this is due to the fact that access conditions are executed over the incoming client data.",
                    "label": 0
                },
                {
                    "sent": "An I mean we contact information where you saw before an.",
                    "label": 0
                },
                {
                    "sent": "Since this is a very small, relatively relatively small graph.",
                    "label": 0
                },
                {
                    "sent": "Well, even though we have many triples like filters, an military post or filters condition do not, does not.",
                    "label": 1
                },
                {
                    "sent": "Actually affect response time too much.",
                    "label": 0
                },
                {
                    "sent": "And then we finally tested the response time.",
                    "label": 0
                },
                {
                    "sent": "For each HTTP request and well as expected, response times do not do not vary according to the type of of operation.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Well, due works the true words on future work.",
                    "label": 0
                },
                {
                    "sent": "So well.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Basically.",
                    "label": 0
                },
                {
                    "sent": "Well, I I showed you an authorization process.",
                    "label": 0
                },
                {
                    "sent": "Your bet relies on client attributes that are stored on the on the server side.",
                    "label": 1
                },
                {
                    "sent": "Actually it be the important part here is that in this work for the time being, we do not assess the trustworthiness of these attributes, even though we are compatible for what concerns user profile information, we are compatible with the web ID proposition.",
                    "label": 0
                },
                {
                    "sent": "When it comes to, let's say.",
                    "label": 0
                },
                {
                    "sent": "Assessing the trustworthiness of location data, for instance, well, proper time being we do not deal with this problem, but it's actually one of our future research lines.",
                    "label": 0
                },
                {
                    "sent": "Van will be working on client attributes caching cause well this is actually sort of work that we should do to improve response time.",
                    "label": 1
                },
                {
                    "sent": "Ann well finally will be working and we are currently working on creating and supporting.",
                    "label": 0
                },
                {
                    "sent": "Data set administrators in creating and managing the lifecycle of access policies, that is, to provide more well, better user experience.",
                    "label": 0
                },
                {
                    "sent": "Because, well, typing RDF.",
                    "label": 0
                },
                {
                    "sent": "It's not well the best thing to actually do in terms of supporting usability.",
                    "label": 0
                },
                {
                    "sent": "OK, thank you for your attention and well time for question.",
                    "label": 0
                },
                {
                    "sent": "Your access control mechanism is it kind of attackable in the sense.",
                    "label": 0
                },
                {
                    "sent": "So what does it do if I ask for something which is protected against to something which is not there?",
                    "label": 0
                },
                {
                    "sent": "So my point.",
                    "label": 0
                },
                {
                    "sent": "So the point is, could I find try to find out by putting some requests at least some information whether the resource which is to be protected is available or not.",
                    "label": 0
                },
                {
                    "sent": "So some information already.",
                    "label": 0
                },
                {
                    "sent": "So yeah, see I see, the point is whether it's somewhere checkable in that sense, actually.",
                    "label": 0
                },
                {
                    "sent": "We actually rely on the semantics of HTTP basically, so if you.",
                    "label": 0
                },
                {
                    "sent": "First of all, I have to say that let's imagine that the data set administrators has protected all the resources in the in the base.",
                    "label": 0
                },
                {
                    "sent": "Let's make this assumption well, if you are malicious attacker an, you want to well.",
                    "label": 0
                },
                {
                    "sent": "Perform HTTP operation when a given resource that you know is is that you.",
                    "label": 0
                },
                {
                    "sent": "I mean, let's say you want to know if the resources there, well, actually we shield access authorization process, will reply with a 401 HTTP message.",
                    "label": 0
                },
                {
                    "sent": "I mean unauthorized, and so we actually rely on the HTTP semantics.",
                    "label": 0
                },
                {
                    "sent": "With high.",
                    "label": 0
                },
                {
                    "sent": "I haven't fully understood the granularity that you can.",
                    "label": 0
                },
                {
                    "sent": "Have in your access control, so I'm wondering whether you actually can only say whether resource can be accessed or whether certain triples can be returned that happened to be stored with a resource.",
                    "label": 0
                },
                {
                    "sent": "Well, this is a good question.",
                    "label": 0
                },
                {
                    "sent": "Actually.",
                    "label": 0
                },
                {
                    "sent": "An well in our previous work where we protect.",
                    "label": 0
                },
                {
                    "sent": "Sparkle queries we were where we were working with triple stores.",
                    "label": 0
                },
                {
                    "sent": "We knew there was always a cheaper store with Sparkle endpoint on top of it, so we actually protected name graph.",
                    "label": 0
                },
                {
                    "sent": "These were resources that we use to protect before so a name graph could be actually defined on a triple.",
                    "label": 0
                },
                {
                    "sent": "So we reached triple level granularity but that was for Sparkle in this case.",
                    "label": 0
                },
                {
                    "sent": "As we are protecting resources in, well, an we resource, we mean well on HTTP resource.",
                    "label": 0
                },
                {
                    "sent": "So actually we adopted the definition of resource or provided by the linked data platform so well, it's an HTTP resource that.",
                    "label": 0
                },
                {
                    "sent": "Provides RDF, so it's basically an RDF resource.",
                    "label": 0
                },
                {
                    "sent": "In that case an.",
                    "label": 0
                },
                {
                    "sent": "In this case we are granularity is the one of resource we do not reach triple level.",
                    "label": 0
                },
                {
                    "sent": "The interesting thing though is that in the linked data platform scenario we can target single resources, but as billing data platform provides national container we can actually protect containers as well.",
                    "label": 0
                },
                {
                    "sent": "So set of resources.",
                    "label": 0
                },
                {
                    "sent": "But that's in the other direction, so in to go to in the small thing we do not reach triple level granularity.",
                    "label": 0
                },
                {
                    "sent": "Well, we might store.",
                    "label": 0
                },
                {
                    "sent": "Single triples in implies, but that's that's not what we do, actually.",
                    "label": 0
                },
                {
                    "sent": "I also have a question about the granularities, so if I have access to the subject but not to the object.",
                    "label": 0
                },
                {
                    "sent": "And I dereference the subject.",
                    "label": 0
                },
                {
                    "sent": "Do I get the object?",
                    "label": 0
                },
                {
                    "sent": "Actually?",
                    "label": 0
                },
                {
                    "sent": "As I said before?",
                    "label": 0
                },
                {
                    "sent": "We basically provide access to the to the RDF resource percent.",
                    "label": 0
                },
                {
                    "sent": "So yes, you get the two.",
                    "label": 0
                },
                {
                    "sent": "So actually to me it appears, but what is really linked data specific about these mechanisms that you introduced?",
                    "label": 0
                },
                {
                    "sent": "I mean, in general you could basically use this for any resource that can be accessed that actually isn't it.",
                    "label": 0
                },
                {
                    "sent": "Yes, yes.",
                    "label": 0
                },
                {
                    "sent": "Can you can you have different access rules depending on content negotiation that you're allowed to get HTML representation of these results, but not the idea of representation?",
                    "label": 0
                },
                {
                    "sent": "Yeah not and and maybe that's the direction for triple based on not maybe not triple based but finer grain.",
                    "label": 0
                },
                {
                    "sent": "Access control if we could put in the content negotiation aspects regarding the actual content of the RDF graph, maybe that could be managed at the content negotiation level then this would apply.",
                    "label": 0
                },
                {
                    "sent": "Bayesian interesting point, but totally true, yeah.",
                    "label": 0
                },
                {
                    "sent": "Let's thank look again, thank you.",
                    "label": 0
                },
                {
                    "sent": "Thanks.",
                    "label": 0
                }
            ]
        }
    }
}