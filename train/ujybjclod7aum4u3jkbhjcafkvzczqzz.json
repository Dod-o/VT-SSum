{
    "id": "ujybjclod7aum4u3jkbhjcafkvzczqzz",
    "title": "Programming the Semantic Web",
    "info": {
        "author": [
            "Steffen Staab, Institute for Web Science and Technologies (WeST), University of Koblenz-Landau"
        ],
        "published": "Nov. 5, 2013",
        "recorded": "September 2013",
        "category": [
            "Top->Computer Science->Semantic Web"
        ]
    },
    "url": "http://videolectures.net/eswc2013_staab_semantic_web/",
    "segmentation": [
        [
            "Maybe a few notes.",
            "First brought some brochure about what we do in Koblenz.",
            "So just take a look there and also about our Mustang websites.",
            "And before I start to talk, really, I also thought it's summer school, so targeting for PhD students, and one notion that I want to carry over in this talk is also the very idea that for doing good research who you really want to make sure that you know the neighboring areas.",
            "You can even turn this around and can say if there is some method or some methodology around in an area, let's say in databases, or let's say the programming language world.",
            "Think about changing one assumption right?",
            "It's not actually my idea.",
            "I read this from in an interview with Jennifer Widom from the Stanford database Group Change one.",
            "Assumption about the underlying technology, and then think how this changes the whole approach, because if you change everything all the time, it's very hard to compare.",
            "It's very hard to transfer method, but if you just change try to change one assumption then you have a very good baseline.",
            "You have a very good way to look at these other works that are around and this gives you a very sound methodological approach.",
            "Now I tried to do a little bit of that, maybe not good enough in some places.",
            "What I want to present here is of course work that was done actually more by my team than by myself, because I'm now in email professional write.",
            "I write email all day now.",
            "I'm not so much a researcher anymore and so I would really want to emphasize the team.",
            "Thomas and Stephen are some heads in that regard and, well, let's start, I mean."
        ],
        [
            "Just stuff that you of course know the classic web was about documents.",
            "Now we talk about linked data."
        ],
        [
            "Entities and when we talk about the classic web, of course the important thing is that we have identifiers that we have documents that link to each other on one web server.",
            "On many web servers.",
            "Now when we have a web of data, we have a data item.",
            "And of course, this data item has an identifier.",
            "This data item is linked in its data source, and it's linked to these other data sources, so that's just stuff that you heard yesterday, right?",
            "So why is this important?",
            "Well.",
            "Two things we have now.",
            "Two analogies that we can.",
            "Make out very easily.",
            "One analogy is that in classic web, what we do here is to search using some search engine hopefully to find something and the whole search is a elaborate process of let's say typing in some keywords, getting some responses, refining the query, getting suggestions, getting improvements and so on and so forth.",
            "Actually, in the web of data, we want to have the same right.",
            "We want to find certain data items.",
            "And when we have this data items, maybe it's not.",
            "These are not the right ones yet.",
            "Maybe I have to look around this data items for similar data items.",
            "So there is a lot to that search process where we have to think about how to change the search process in the classic web over to the web of data.",
            "So that's one point.",
            "Another point is if you sort of like disregard this half and just look at the database perspective of it, you could say we have here a database.",
            "Listen data items in it and then of course what you do is a database is typically you develop some application program one or many application programs.",
            "But of course with the development of these application programs you buy into a lot of assumptions, right?",
            "So what I come assumptions that you deal with when you program against the database well?",
            "Things you might learn of course, in building information systems is you have a certain methodology.",
            "How did derive schema and you arrive it?",
            "Then you do the object relational mapping.",
            "Then you do your programming.",
            "You know very well how the schema looks because you've built it in the first place.",
            "And that's always the classical way that you typically learn in the course of studies in the real world, it's more often that there is already a database and there are 10 applications running on it, and you have to build the 11th application.",
            "But even then what you do is you have a schema that's more or less around, and you have to deal with it.",
            "You first have to look it, and it's not typical in many cases.",
            "At least it's not too big, right?",
            "And then you develop your program.",
            "Maybe you have to look at two databases.",
            "What changes there is once we look at the linked data web, we do not only want to do retrieval of graph data, we also want actually in many aspects to program with the data.",
            "What does it mean to program with the data?",
            "Isn't it sufficient to just look at graph data and be happy?",
            "Well obviously not right.",
            "Finding something looking at graph data looking at tables is of course interesting in many aspects, but quite often you want to do more.",
            "Then just looking at some graph or looking at the table, you may want to present certain data items in a particular way.",
            "You may want to present the person differently than an organization.",
            "You may want to interact with it to allow the modification of data and the end user of question do this using Sparkle update, but you want to have a rather normal application interface.",
            "So one thing I think that is really grossly neglected in our field is that in the semantic web field in our field.",
            "Really, the programming against the data.",
            "Of course you can always do it right.",
            "You can always say I write a sparkle query.",
            "I get some piece of data.",
            "I somehow write a program to manipulate piece of data and then it will sparkle update.",
            "That's possible, but it's really really a nuisance to do it.",
            "It's really not very smooth working and at the same time people then look at the other frameworks that are around Ruby on Rails.",
            "And how are they all called hibernation?",
            "And I find it South moves and so effortless.",
            "And you then go to the semantic web and you have to figure out with these Parker queries and.",
            "It's a headache, right?",
            "So for me, I would say a motivation to do semantic web development is making life easier, and we're not quite there yet in all aspects.",
            "So question is how can we come closer to that?",
            "So these are the two assumptions I want to work with.",
            "In my talk, one is we have this analogy of the classic web.",
            "We want to find and search even in the global space.",
            "Because we do not have one database anymore but many and where are the right data items and once we have the data items.",
            "We want to program against them in a way that.",
            "Not as awkward as the most methods that we have today."
        ],
        [
            "OK, here are some of the usual basics.",
            "I think I can."
        ],
        [
            "Skip them, you heard."
        ],
        [
            "Sufficient about them yesterday.",
            "Maybe I need a little bit of repetition, just we are on the same plate.",
            "Even if you heard that before, here is a very simple example.",
            "You have an identifier for something you learn here as you did yesterday.",
            "What RDF type means here?",
            "This identifier would be typed as a document in the photology and this being from the class in proceedings.",
            "So those of you who will use later you will know this class in proceedings.",
            "So you have two types for this, one identifier for this identifier.",
            "For this object you also have Dublin core title, public course, typical ontology for coming from the library, science and they have looked at a certain set of properties that you basically always need.",
            "A very often need when you describe a book, for example in the library.",
            "So here title would be extracting schema and so on, and similarly Dublin core would specify the Creator, which can be.",
            "An author could also be an artist.",
            "Who has created a painting or something else?",
            "And here the Creator with one of them would be such a beautiful.",
            "So this."
        ],
        [
            "Is a running example that we will use and then of course you will."
        ],
        [
            "An extent that can have more information about that certain people is computer scientist and what his real name really is.",
            "And so on and so forth.",
            "So what is important there is?",
            "You have the identifiers.",
            "They're spread all over the web where you can dereference them.",
            "You have certain typing you have certain properties that you use all the time.",
            "Well, if you're not, it's not obligatory to use them, but if you look around then you see that some ontologies like for for Dublin Core.",
            "They're really, really widely used, right?",
            "And it's good because the moment that you have such a set of ontologies are widely used.",
            "You can easily write applications that immediately understand what that means, so it's really the.",
            "The interesting phenomenon that just because so many people use them, you as a developer know what they mean because you encounter them so frequently and you can write your program code for that.",
            "No one dictated to use them, but the social phenomenon leads to the fact that you can build a good application with immediately."
        ],
        [
            "OK, so now we have it's very poorly visible, but on the other side you don't need to see because you have seen it 1000 times.",
            "The linked open data cloud picture by the Belgian team and.",
            "Well, now what we want to do in this LD cloud is to find information into program against it.",
            "And the interesting thing also, if you think in terms of business is."
        ],
        [
            "It's almost big data.",
            "30 billion triples is maybe not quite really big data, but what makes it interesting is it's really a lot of variability in there.",
            "It's not like the very largest data source in terms of terabytes or petabytes, but it's really a large variety of different types of data that you find here.",
            "Yeah, and whoops."
        ],
        [
            "Here's direction."
        ],
        [
            "OK, now.",
            "What I want to do is to tell you about a few, give you a few thoughts about what we currently do.",
            "Interest programming against Link data Cloud, and please interrupt and jumping questions so I can learn something from you.",
            "What we missed.",
            "Then talk about how do we find this data?",
            "And then about some further analogies about exploring the kind of data that we find there in the linked Open Data Club."
        ],
        [
            "Programming the data.",
            "So the idea is now assume you're a programmer using some environment.",
            "Now here in this regard we use Visual Studio.",
            "F# happened to be a project funded by Microsoft, so obviously we use their technology, which is quite cool.",
            "But of course you could also think you have eclipse here and Scala, and of course some of the details would change obviously, and the implementation would change quite a bit, but the core concept I think would still be the same.",
            "And of course if some one of you wants to do the project with Scala in Eclipse would be happy to talk to you.",
            "Then you have on the other side the linked data cloud.",
            "What do you want to do?",
            "Well, you have several challenges.",
            "One challenges at design time of your application.",
            "You really have to find your way around here and even assume you have a good idea of what is your data source that you want to program against you.",
            "First assumption would be you don't know what's in their data source.",
            "Now that's a different assumption than the typical information systems development, where you more or less know what's in the data source.",
            "Even because you have documentation from its previous development, or because it's not so big to oversee anyways.",
            "But if you look here and you program against.",
            "Pedia you have.",
            "I don't know how many.",
            "Million types, and it's not so easy to oversee that.",
            "Um?",
            "Then when you do design time, that means you pick.",
            "Some of that data that's up there now that data of course is sometimes structured.",
            "Frequently also unstructured.",
            "So sometimes you have a schema we have.",
            "Word is seen in our example, something like DC Creator or something of type author of type document.",
            "And of course you want to use that.",
            "Obviously because when you do the program you want to use types.",
            "Now, one very neat idea from Don Syme from Microsoft was to say that in this world out there, there are so many types.",
            "Whi do we want to invent them again for our programming languages, right?",
            "So people have bothered to build an ontology and have all these nice class hierarchies?",
            "Why do we want to recreate all that with slightly different names in our programming language environment?",
            "Why not just borrow those type systems into our programming language?",
            "I think that's a really neat idea.",
            "It's again changing one assumption and the programming language field value typically just say OK. Now I do my type and then I program with it from.",
            "This type is given from the outside and then I program against it and then of course I still enrich it and app my methods and so on.",
            "So these are all the kind of design time issues that you have at runtime.",
            "Of course, then you want to do the usual thing you want to query for objects you want to manipulate objects.",
            "And of course you want to do this a lot with the kind of types.",
            "That you have.",
            "Defined design time.",
            "Either you have to find them explicitly or if in cases where there is, there are no explicit class hierarchies.",
            "Here you find a lot of that.",
            "There have been a couple of papers around by work by our team, but also by some other teams who looked into empirically into the linked data cloud.",
            "How much structure is given there and found that to a large extent such class, how creaser missing?",
            "Then we have to reconstruct and that will be in Part 2 of my talk."
        ],
        [
            "OK, here's our example graph that we will use them.",
            "It just means we have a little bit of typing system person talking creature and this part of my talk.",
            "I assume we have a quite a nice ontology if we don't have that, we have to recreate it using the second part of my talk and here we have two instances.",
            "Bob, who is a person who owns a dog, hustle typical German name for a dog and then the dog in general has some dozens of attributes that you might want to use."
        ],
        [
            "So what does the programmer need to do here?",
            "Well, first, the program needs to look at the data source and explore and understand the schema of the data.",
            "Even if the data comes without properly defined schema, there are some properties he uses all the time, and then it's necessary to understand these.",
            "So this is then an implicit schema.",
            "But it's still a schema, so you want to find the type then that represents talk.",
            "Maybe you just look at the data source and assume.",
            "This is about animals, but now we want to find one that really represents talk.",
            "Maybe it's called differently canine or something else, but you want to find that.",
            "Then you need to align these schema types from your linked open data source with your programming language environment, right whatever this environment is.",
            "So from a DOC, RTF data type in linked open data set to the doc data type in your own programming environment, and then of course you need to query for instances and instantiate program types.",
            "For example, getting all dogs that have some owner becausw they're supposed to you, the owners, has supposed to pay taxes for the dogs Germany."
        ],
        [
            "It's required, so it may be typical German example.",
            "And what is our suggested solution?",
            "That we have a kind of data schema query language.",
            "We happen to call node path query language and PQL.",
            "The main difference to the typical query languages is that it's mostly querying the schema.",
            "And that in an easy interactive wait, you will see an example for that.",
            "What is the schema that's regulating the data in your linked open data source?",
            "Then you have to do the type mapping rules for the primitive data types.",
            "Actually, we do this using the same language so you don't have to learn a second language and then you have two ways of operating with this language.",
            "Remember it's a schema query language.",
            "You ask for the schema of what the data in that particular data source.",
            "And when you consider the schema, you have two kind of questions you can ask for the intention.",
            "That means you ask for how is a class descript.",
            "And once you get this intention, you can take and say, OK, that's my data type in my programming environment.",
            "And by this define the mapping.",
            "Or you can ask with the same query for the extension and then of course you get for example all the docs right if you have the dog class and you ask for the extension of this doc, you just get all the instance like hustle.",
            "Pink.",
            "More precise.",
            "Yesterday.",
            "Leave it later RDF schema.",
            "It's what I understand here, and as I said here in this first part, I assume that RDF schema is given and in the second part we do some recreation in cases where it's not given and it's true, there is a good deal and we I can show you even some numbers of which extend the schema is given or not given just by empirical investigations.",
            "Done by Thomas Carter on for example, done by both toolbar key.",
            "There's a new paper coming out.",
            "So there are certain empirical investigations.",
            "On the Big data cloud here.",
            "Or we make it if you make this assumption.",
            "The schema is actually.",
            "Paid for by the data.",
            "Absolutely.",
            "So if you have the doc data type in 10 attributes defined and I come along and add in 11th data type and 11th property.",
            "Sorry 11th property this falls out of the schema.",
            "Absolutely.",
            "Like the data, usually quite different vocabularies look different schema.",
            "Yeah, but I mean that's that's for me, inherent in the idea of RDF schema that you don't just use one ontology, but you use already.",
            "In our example, Dublin Core, 4th and so on altogether.",
            "Sure it can be, but you just reference to fall off and.",
            "Yeah.",
            "So what is the actual record?",
            "The structural types type that defines a particular entity, person, animal, or whatever is determined by the data themselves is not given outside.",
            "It's both.",
            "Both you of course you have.",
            "You refer to 4th person and then you can look up in the other data source how 4th person is defined and you also have yours right with that.",
            "Maybe I use some properties are not defined in any ontology and then you have to look at what is common to the data that I have there and do an analysis.",
            "Yeah, that's.",
            "For instance, you have a car.",
            "Alaska, but defines 11 us.",
            "Then you have a lot of null values.",
            "Or from other brokers, because this particular data editor consider it that these are more or less a useful yeah.",
            "There is no mean.",
            "Oh yes, sure it is.",
            "I mean, of course, you buy into assumptions when you do the programming, but of course when you buy into these assumptions, that does not mean that the world is as orderly and as clean as you would like to have it in the typical information system development nevertheless.",
            "So in general, you are completely right.",
            "It happens that in many cases you find a good deal of the world in your linked data still being some sort of orderly having alot of null values of course, and you can program against that.",
            "Of course you cannot program against completely arbitrary data, and you might find completely arbitrary data, but in that case you cannot do more than show a graph.",
            "You can of course try to do automatic mapping and all that, but there are no miracles that you can expect, right?",
            "You can you can do.",
            "Another approach summarize the types from the paper.",
            "Rather, that's the next part of my talk.",
            "I have to.",
            "You have to wait.",
            "What's exactly going to send direction?",
            "'cause if you if you go get one comment and.",
            "So it says if you combine data from the right sources and the results that were not completely compliant to anybody.",
            "So you.",
            "It's all purpose of using a graph based data center and dissolution effectiveness.",
            "Data summary yes, initially, for what we do.",
            "Yep."
        ],
        [
            "OK, So what would be the example?",
            "So you want to navigate to Doc.",
            "But assuming you don't know dog yet.",
            "So the schema query language you start at the root would be RDF resource for example and then you do say show me all the subtypes you see, for example creature and you get this suggestion.",
            "You can pick it and you apply the same operator again and you are suggested dog and person.",
            "You pick one of them, for example dog.",
            "And So what you have here is an example for query.",
            "For the schema that you develop interactively, now with this kind of expression.",
            "You can though."
        ],
        [
            "On either retrieves the doc data type so you take the very same expression and then say, give me the intention.",
            "And what does this mean?",
            "If you get the intention of that, you basically look up all the schema definitions they need, not come from one.",
            "Ontology could come from several ontologies, and you say that in your host language.",
            "Well, my type dog.",
            "Has owner attribute his name attribute as H attribute has inherited from these other classes and you basically with one expression can sort of like build this whole mapping.",
            "We using the same kind of class identifiers that you are getting from the linked data world."
        ],
        [
            "With the same expression, also like looking for creature and dog, you can then.",
            "Ask for the extension of the same thing.",
            "And what you get then is.",
            "Here is 1 instance.",
            "Could be many instances of course and 'cause we have strictly typed language you do not only get instances here, but these instances are typed so he would get as a result of this query a set where all the elements are of type dog.",
            "Now when you and then of course you can apply the program against that.",
            "This is interesting because once you build your code then you can test for the kind of types that you program against and also develop different methods for the different types that you have in your result sets."
        ],
        [
            "OK, and of course you can also have a little bit more powerful queries here.",
            "This would be a query where you ask for dog, but then you restrict it to dogs that have owners.",
            "By the way, this almost looks like it yell query right where you ask for where you construct the class dogs that have owners.",
            "M and then you can do the same kind of thing.",
            "You can either do adopt data type or you can ask for the extension of that.",
            "So hustle would be returned because about hustle, it is known that an owner exists."
        ],
        [
            "Now, how does it look like?",
            "It is still under development, but we have the core of it to show that it works in general.",
            "So here is a little bit of snippets a little bit hard to read, but you will have the slides.",
            "You just define the data source against which you're running it.",
            "Right now we first implemented to do run against one data source, but do we really want to have it to run against arbitrary number of data sources and to navigate around between them?",
            "What you then do is you say OK from this data source I can pick some class.",
            "And you are suggested this classes.",
            "So you one problem of programming against RDF data is state.",
            "Of course you want to use the namespaces the full your eyes you have to.",
            "Yeah, at the same time this means just like writing, it is less laborious.",
            "So here the idea is that you get these suggested from the data source.",
            "You reuse that so you don't do the mistyping.",
            "We just have to do this election.",
            "With a newer, here's the Visual Studio environment you would have to have who would like to have this for the eclipse."
        ],
        [
            "By mid two and then you see you get here.",
            "For example the animals and then you have the typical different possibilities to look for example at the subtypes and hear animals have a sub."
        ],
        [
            "Types you'll get the suggestion pet is one of the possible examples, and then for a pet."
        ],
        [
            "You get again the different possibilities to select the subtypes or the properties and."
        ],
        [
            "The properties you then select, for example that has owner property and so you really interactively in your development environment.",
            "Look at what's in the data source and when you."
        ],
        [
            "After that result.",
            "You then just use that, for example to define your type dog in your programming language environment.",
            "So we explore it and what you built while exploring is defining what you do so you don't do different things to one thing and use this in multiple ways.",
            "OK, here is this example.",
            "Again, you define the type dog being such a kind of query.",
            "And.",
            "The intention intentional semantics of that is that this dog inherits from creature and has owner, person, and so on so forth.",
            "And the all these 20 attributes here come actually from the linked data source.",
            "You don't have to do them yourself."
        ],
        [
            "And the same if you say I want to assign this variable docs.",
            "A certain set of instances you do with the query ask for the extension.",
            "You get the set of docs from the linked data source and this is this instance plus others.",
            "Plus they are typed so you know.",
            "The exact type of that.",
            "And that's of course where the typing that you have in F# or an ML and so on, is sort of useful to have becausw.",
            "Yeah, they use a higher order functionality.",
            "Six few chosen still prompted that you want to represent asking for that, we just show all that are relevant at this part of the query.",
            "Right and there we look for the schema descriptions.",
            "We look for the data.",
            "What's around there?",
            "We don't present the whole thing.",
            "But we as you move along in defining your query, you get always these suggestions which may apply at this point in time.",
            "But I don't know if I'm skipping ahead or if I'm missing something.",
            "You're coming essentially a type for your host language.",
            "Are you constraining which properties are then available in programming in the host language?",
            "Yeah, I mean you could add manually some further property, of course.",
            "Cause here what you then get.",
            "You could then still add you get 10 properties.",
            "You could add the length attribute in your manually, but.",
            "Typing, typing because we're working here the whole time in the development environment.",
            "And then of course you can just add another line saying I add this property XY set to my class that I've defined here.",
            "Oh, a line of sharp, of course.",
            "I mean, this is basically just like you could say macro expansion mechanism that looks into your link data world.",
            "What what?",
            "What I'm trying to work out?",
            "What's what from the data that is materialized into?",
            "So here want to materialize the schema information.",
            "What is not materialized is the instance information that's asked at runtime.",
            "Right, so if you did."
        ],
        [
            "Find your type dog.",
            "That's something that happens basically at compile time actually, but in a modern development environment you get some suggestions as to what might apply even at typing time, but of course it's really defined at compile time.",
            "When you."
        ],
        [
            "Look for this.",
            "You have a variable that's defined by something that's filled at runtime.",
            "Even if of course you can evaluate at typing time.",
            "What currently is there in?",
            "Unexpected easy filled with everything you know about the resource is it's here.",
            "This is the.",
            "There's a little bit of shorthand for the long thing I showed from the snippet from the snapshot.",
            "It's evaluated with regard to a data context where you specified right now what is the link data source that you are tackling.",
            "Right, that's our first step, then looking at more data sources absolutely necessary, not yet.",
            "That's a step that's still several months ahead of us.",
            "But it's here.",
            "You really evaluate with regard to a certain data context, and then you get what's in there.",
            "There is a schema or as an extension of description.",
            "The important part is you do this interactively while the develop, so you make the the.",
            "Obstacle rather small, for the developer to just discover what's in it and directly program against it.",
            "And of course, when you compile and you should go to that."
        ],
        [
            "When you compile a second time with, this has changed.",
            "You get the new definition.",
            "There are a lot of questions that follow.",
            "For example, do you really want to have that?",
            "Do you want to lock how that's developing overtime?",
            "So there are a lot of interesting questions that pop up once you take this assumption of borrowing types from your changing link data environment.",
            "And I don't have an answer for all of these.",
            "OK."
        ],
        [
            "So and then of course.",
            "The idea is there were still about.",
            "To build in is.",
            "Once you have such a query expression to define the type, you can use this in all different places.",
            "You can also use in place where you define a method.",
            "Right, so for example here paying tax for only docs with owners who provide this type and the objective is then to actually do some of the typing inference at compile time using the L reasoning."
        ],
        [
            "OK, so now are you here with me?",
            "You want to get dogs?",
            "Get all the dogs available in a linked data source.",
            "Using this expression you would define a method.",
            "Pay tax that only works on dogs that have owners and then here comes the method definition.",
            "And then you iterate over all the docs that you have in this set.",
            "And then you match each individual talk which is typed becausw of this expression and you match whether it is a dog who has an owner and then you.",
            "Charge text for him.",
            "Or it doesn't match then you do nothing.",
            "OK, so you get the typing.",
            "For these talks, you do the querying and use the types that you have defined in order to program against it."
        ],
        [
            "OK, that was the first part really.",
            "Using a strict typing to programming canceling data source Now there are several questions about where the types come from and here our approach schematics is one of our foundations.",
            "I wouldn't claim that's the only possible if you can actually.",
            "Develop 20 different versions of it and all of them I think would make sense.",
            "You just need a consistent picture."
        ],
        [
            "That you develop here.",
            "So what is when we started to develop skymax?",
            "The original question there was something like you look for something.",
            "You look for example, for documents that are also of type in proceedings and have been created by computer scientists.",
            "So some computer science publication."
        ],
        [
            "And of course, that's like asking exactly sparkle queries we have seen Sparkle yesterday, so you see that this is basically what is indicated here in some nicer graphics."
        ],
        [
            "So the question is.",
            "Where in the link to?"
        ],
        [
            "Datacloud hardly visible here.",
            "Can this question beyond?"
        ],
        [
            "OK, and."
        ],
        [
            "Then of course you want to find where it's possible, so you will need some sort of index in order to answer this question, and schimek defines the index and the index also.",
            "Create some structures which can be used like the data guides which we take as a blueprint in order to answer questions about schemata where no explicit schemata are defined."
        ],
        [
            "OK, so you ask the index where is the corresponding data to answer this type of question."
        ],
        [
            "Ideally, here in our example where we ask for computer science publications, you might want to look in those bubbles.",
            "Here in the linked data Cloud, where you find ACM data or DLP data where we know well, these are typical computer science applications, of course."
        ],
        [
            "Have to infer that because no one will tell you up front, so."
        ],
        [
            "What kind of schema information do we have on the linked open data cloud?",
            "We have explicit schema information.",
            "So we have an entity that has some type, which is a class.",
            "End.",
            "We have implicit schema information and this implicit schema information is like with the data guides of the Stanford Group.",
            "You have an entity that has a property to some other entity.",
            "And you model them your schema information just based on what kind of data.",
            "Correspondances you find there."
        ],
        [
            "So when you.",
            "Look at a data source.",
            "You have entities that are related.",
            "Somehow.",
            "You have entities that have some class information attached, an interior of entity that has some other property going to a literal.",
            "You really need to do to look at all this data and extract it into a meaningful index.",
            "That of course should be much, much smaller than the data, otherwise it's not very useful.",
            "And then describe the data with that.",
            "So the idea is to say here is the data.",
            "True information that looks roughly like this and describes.",
            "The structure of the data that you have here in your data source.",
            "Right now, what is maybe a bit misleading about this picture is really that this must be much, much, much, much smaller than the data itself.",
            "Otherwise it doesn't make sense."
        ],
        [
            "So what are the different parts to different ingredients that we use here?",
            "Well, first we have entities that have the same set of types.",
            "So what we call type clusters.",
            "We have the different data sources and a type cluster is just a combination of types that exists for data item.",
            "If there is one data item that is has document and in proceedings together that would be one type cluster.",
            "And assume that we have this exact combination of classes.",
            "You then look for where are the entities that have all these types together, and then you have pointers from this type cluster to all the different linked data sources.",
            "Not hearsay."
        ],
        [
            "Example.",
            "There is a type cluster for document for document in.",
            "SWRC in proceedings pointing to DLP and two ACM.",
            "And some others, probably."
        ],
        [
            "A very powerful tool that has been explored already, like by such a beautiful for from our running example more than 10 years ago is by simulation to describe.",
            "How data items share properties?",
            "And the idea is that entities data entities are equivalent if they refer with the same attributes.",
            "The same properties two equivalent entities.",
            "So recursive definition we take only a very weak version of that one by simulation with, which restricts the notion.",
            "Then to one step equivalence you could do much much further.",
            "So we do the two slides further one step more, but.",
            "You could go much much further, but computing the full basement simulation is very expensive.",
            "OK, so basically idea and then see if you have such a bisimulation cluster.",
            "These are entities that refer to a couple of properties and then such a bisimulation cluster points to the data sources where such data items are found that have disjoint set of properties."
        ],
        [
            "So yeah, here would be the concrete example by simulation cluster that uses the DC Creator property and this would include for example the BBC data set where some movies or something I created and DLP right.",
            "And of course you will know that for our query where we ask for publications by computer scientists that would not be so helpful."
        ],
        [
            "OK, and then of course you can combine the two aspects that we do with this.",
            "What is called here equivalence classes.",
            "I'm not sure that's the best name, but that's how we called it.",
            "There consisting of type clusters and of these bisimulation clusters.",
            "So what you get then here really equivalence classes that I think should be in the next next example.",
            "For example, that you have documents and in proceedings here is types and you use a certain property like the DC creator, right?",
            "So this gets you.",
            "Description of the kind of entities that I found here at the schema level, even if no schema description is explicitly given.",
            "And of course you can use the very same kind of in a mixture of the two, right?",
            "Because here we have your explicit class system.",
            "And then from these equivalence class you point again to the different data sources that where you find items that have this kind of type.",
            "This kind of structure."
        ],
        [
            "If we go, then one step further to not only have these properties, but also say when we do the bisimulation step, we go into restrictions of the properties of other type clusters.",
            "So you're not, for example, you might be interested in creators who are of type computer scientists or creators who are of type artists or war of type.",
            "I don't know painter, painter or something like that, and we include that.",
            "That would not be typically included as a bisimulation step, because that would only be over the transitions properties, but we include this here.",
            "This way we go a little bit over the one by simulation."
        ],
        [
            "So here would be then in our running example again we have an equivalence cluster.",
            "Consisting of the type cluster where we find entities that.",
            "Refer to the type document end to the type in proceedings and who share the desecrator property.",
            "Where that is equated.",
            "Property points to another type cluster.",
            "Here it's only constructed pie computer scientists.",
            "And then of course."
        ],
        [
            "You know them.",
            "Which individual data source here?",
            "Can be used.",
            "To answer this bottle query.",
            "Of course, you must be aware that once you have such a kind of structure, it's not sufficient to cover completely arbitrary queries, right?",
            "So if you have much bigger queries at some point, the structural description ends, and then of course you have to match.",
            "You are the query you have against the structural descriptions and the lengths of these structural descriptions as they are available, right?",
            "So it's, and then you have still to look around, but at least what you get is a large restriction of the data sources where you might find relevant data items.",
            "So it's not perfect.",
            "It doesn't give you everything, but of course to really give you everything in the end you would have to have all the data basically available.",
            "Yeah, so that's part of these type clusters.",
            "So I mean, once you have that in proceedings is a subtype here.",
            "The only type clusters that you build will have both.",
            "Yeah, then you can of course look how to further optimize the implementation."
        ],
        [
            "OK, then you can still an issue.",
            "Then to compute this efficiently on large scale so you can do it brute force."
        ],
        [
            "We then also looked at what happens when.",
            "You assume you crawl your data and of course the data is updated regularly and you really have only a window of triples available, or quadruples becausw.",
            "The fourth quarter describes the data source, and you describe the structure of your data only based on what you find in this window.",
            "And then, depending on the size of the window.",
            "You will get, well, exactly the same result as before, or you may lose some interesting.",
            "Associations that might be relevant to your query."
        ],
        [
            "OK, well then of course when you do brute force against this approximation you see for which kind of window size and for which kind of structural mechanisms you have a certain loss of precision and recall.",
            "And then you can look and say, OK, I want.",
            "I want to ensure to be sold so fast or I want to ensure so and so much precision and recall and well you can look up the exact details in the paper, but of course it's clear when your window becomes too small then you don't have sufficient structural information around anymore.",
            "So one must say that if that of course depends on what assumptions you have while we're doing the crawling.",
            "What these diagrams basically also say is that most of the data.",
            "In the linked data sources, is densely connected inside and loosely outside so.",
            "Um, you don't lose a lot when the window is comparatively small.",
            "This is an empirical observation of the linked open data set right now that we also know actually from other.",
            "Analysis.",
            "It might change if we would have a richly connected linked data cloud where.",
            "Each.",
            "Data source points all over the place very intensively.",
            "Is it correct?",
            "Qualitative interpretation of what's just a constant measure?",
            "Others just because there are fewer links between data set by those necessarily of the same value as the links within the data, I don't know.",
            "I'm ready.",
            "Strong reason, whereas they describe last date or whatever they have available.",
            "Transforming we approach this from a different angle.",
            "When we were looking for Sparkle, Query Federation and our big problem was that there we did not find.",
            "And we didn't find empirical query observations from queries over multiple sources, people would.",
            "Exactly, so it's a chicken and egg thing, and so that's probably the reason why we came up with artificial benchmarks because we couldn't observe it in the wild.",
            "But you need then this kind of benchmarks to tune your Sparkle Query Federation so that people can do it.",
            "And of course you need all this kind of structure.",
            "Finding mechanisms of people even find queries they could do, which brings me actually to my third part of the talk."
        ],
        [
            "OK, so let's that's a very nice transition to the last part."
        ],
        [
            "My talk, which is only a few slides and then I have to close anyway.",
            "'cause there the idea really is you have this query and now you have this nice index that helps you to find the right data sources to ask."
        ],
        [
            "But then you may still easily get zero hits.",
            "I mean, even if some structure is there, you're not guaranteed to find exactly.",
            "The answer to, let's say, is their publication of Steven."
        ],
        [
            "Or you may get 1000 hits.",
            "Yeah, just cause.",
            "You have uttered a very general answer and you cannot deal with that."
        ],
        [
            "So the question there is how can we help?"
        ],
        [
            "And the inspiration there was from the classical web, you have a certain search engine on the classical web and it gives you different kind of ingredients like it shows you how many results it have.",
            "So you have a feedback whether you did a very clever query or not.",
            "You have ranked retrieval, not just arbitrary retrieval, but you have some sort of notion of ranking.",
            "You have a kind of problems, information about where things come from.",
            "You have result snippets that indicate you some.",
            "Partial observation that my."
        ],
        [
            "Help you and you have related queries so you can refine, generalize, whatever."
        ],
        [
            "And so we're developing this loadout so environment, given such a sparkle query, however, that's constructed could be also user interface would not need to be the literal sparkle query, but where the sparkle query.",
            "Is analyzed and then several suggestions are given.",
            "Of course, first you get the results.",
            "You have nine data sources that give you something about that for each data source, how many instances you have found.",
            "So this is some some feedback."
        ],
        [
            "But this result set size."
        ],
        [
            "Then you have some sort of ranked retrieval.",
            "We have been exploring different kind of retrieval rankings in the past.",
            "There's still a lot of work to do to do this in a very generic."
        ],
        [
            "Wait there, references to the."
        ],
        [
            "Data sources, their result snippets sometimes where we think we can do some sort of summary."
        ],
        [
            "And there is.",
            "Did you mean section where there are some suggestions for removing or adding parts of the quote?"
        ],
        [
            "And then you have really."
        ],
        [
            "Queries and again too.",
            "Actually do this kind of suggestions.",
            "The schema descriptions that are derived from the data sources are relevant and interesting because what you find here are structures observed in these data items and you can exploit these structures to do suggestions.",
            "So."
        ],
        [
            "If.",
            "In your data sources you have some of these structures.",
            "You can actually find certain data item combinations.",
            "You can then add for this data source that you find 200 entities that match this description.",
            "OK, so immediately you have a feedback about how many piece of information are in this data source, and then of course you may have information for like people frequently do when they do keyword search in the LD cloud.",
            "You also have some fulltext index where you have information about particular literals used."
        ],
        [
            "OK, so you can put this together and we have for example a sparkle query that asks for something of type C1 and C2 like in documents and in proceedings."
        ],
        [
            "Then you can take this structural information, the index.",
            "And say, OK, I'm for example here in this type cluster I can refine it this way, or in that way and if I refine in that way, I get this by simulation clusterware property one is used probably 1, maybe being a certain creator."
        ],
        [
            "OK, so you can suggest.",
            "Not only to use the tool taipings, but also to use other attributes."
        ],
        [
            "And you can do this very quickly because you just have a look above the index.",
            "You don't have to look at all the different data sources right?",
            "And so you."
        ],
        [
            "One refinement and you do maybe another refinement where then the type of this bisimulation property comes into play, so you can really exploit the whole structure for doing meaningful refinements."
        ],
        [
            "OK, and that's exactly 60 minutes when I come to my conclusion slide.",
            "What I want to advertise here is not that we sort of like half now accomplished a whole new concept.",
            "It's rather like we have here some ideas that I want to put 1% to you also for discussion because so I can learn from you as I did already.",
            "Actually quite a bit with doing this talk and what is important for me here is to look at what have other people done in their areas, data guides in the functional programming world, and to extend the concepts they are having.",
            "With important assumptions that we do about the linked open data cloud, what are some of these important assumptions?",
            "For example that linked open data cloud?",
            "We have data sources all over the place.",
            "We need an understanding of what's contained in there because we don't have it.",
            "That's a different assumption than information systems development typically has, and then we need to make this bridging between what is found in these data sources.",
            "To this traditional programming concepts very very easy.",
            "Right, it's really a matter of usability for the programmer.",
            "They should feel at home like with Ruby and Rails or something like that, and not with.",
            "Putting together funny spark queries where then some type or prevents you from going any further.",
            "And so the question is, what are the important concepts for doing that?",
            "So what is suggested here was to really look at particular ways of querying.",
            "These available data sources.",
            "And then you need support for doing that for finding the data sources.",
            "Also for refining the queries for changing the queries, and for that certain type of index is very helpful.",
            "And then of course you have to do this in a scalable way so you start with.",
            "With one particular assumption where you want to make the life of the programmer easier.",
            "Change that assumption and then of course a lot of questions follow up 'cause you need to make it scalable, workable, or the next question comes up about how to do this or that.",
            "And again, my suggestion to my PhD students and always try to do it as easily with an S naive assumption as possible in the 1st place, and then you build on build from there.",
            "So we're still on a very nice face.",
            "Um?",
            "But I think the concepts that we have at hand for dealing with some of that are quite interesting to deal with.",
            "The linked open data programming."
        ],
        [
            "Thank you."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Maybe a few notes.",
                    "label": 0
                },
                {
                    "sent": "First brought some brochure about what we do in Koblenz.",
                    "label": 0
                },
                {
                    "sent": "So just take a look there and also about our Mustang websites.",
                    "label": 0
                },
                {
                    "sent": "And before I start to talk, really, I also thought it's summer school, so targeting for PhD students, and one notion that I want to carry over in this talk is also the very idea that for doing good research who you really want to make sure that you know the neighboring areas.",
                    "label": 0
                },
                {
                    "sent": "You can even turn this around and can say if there is some method or some methodology around in an area, let's say in databases, or let's say the programming language world.",
                    "label": 0
                },
                {
                    "sent": "Think about changing one assumption right?",
                    "label": 0
                },
                {
                    "sent": "It's not actually my idea.",
                    "label": 0
                },
                {
                    "sent": "I read this from in an interview with Jennifer Widom from the Stanford database Group Change one.",
                    "label": 0
                },
                {
                    "sent": "Assumption about the underlying technology, and then think how this changes the whole approach, because if you change everything all the time, it's very hard to compare.",
                    "label": 0
                },
                {
                    "sent": "It's very hard to transfer method, but if you just change try to change one assumption then you have a very good baseline.",
                    "label": 0
                },
                {
                    "sent": "You have a very good way to look at these other works that are around and this gives you a very sound methodological approach.",
                    "label": 0
                },
                {
                    "sent": "Now I tried to do a little bit of that, maybe not good enough in some places.",
                    "label": 0
                },
                {
                    "sent": "What I want to present here is of course work that was done actually more by my team than by myself, because I'm now in email professional write.",
                    "label": 0
                },
                {
                    "sent": "I write email all day now.",
                    "label": 0
                },
                {
                    "sent": "I'm not so much a researcher anymore and so I would really want to emphasize the team.",
                    "label": 0
                },
                {
                    "sent": "Thomas and Stephen are some heads in that regard and, well, let's start, I mean.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Just stuff that you of course know the classic web was about documents.",
                    "label": 0
                },
                {
                    "sent": "Now we talk about linked data.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Entities and when we talk about the classic web, of course the important thing is that we have identifiers that we have documents that link to each other on one web server.",
                    "label": 0
                },
                {
                    "sent": "On many web servers.",
                    "label": 0
                },
                {
                    "sent": "Now when we have a web of data, we have a data item.",
                    "label": 1
                },
                {
                    "sent": "And of course, this data item has an identifier.",
                    "label": 0
                },
                {
                    "sent": "This data item is linked in its data source, and it's linked to these other data sources, so that's just stuff that you heard yesterday, right?",
                    "label": 0
                },
                {
                    "sent": "So why is this important?",
                    "label": 0
                },
                {
                    "sent": "Well.",
                    "label": 0
                },
                {
                    "sent": "Two things we have now.",
                    "label": 0
                },
                {
                    "sent": "Two analogies that we can.",
                    "label": 0
                },
                {
                    "sent": "Make out very easily.",
                    "label": 0
                },
                {
                    "sent": "One analogy is that in classic web, what we do here is to search using some search engine hopefully to find something and the whole search is a elaborate process of let's say typing in some keywords, getting some responses, refining the query, getting suggestions, getting improvements and so on and so forth.",
                    "label": 0
                },
                {
                    "sent": "Actually, in the web of data, we want to have the same right.",
                    "label": 0
                },
                {
                    "sent": "We want to find certain data items.",
                    "label": 0
                },
                {
                    "sent": "And when we have this data items, maybe it's not.",
                    "label": 0
                },
                {
                    "sent": "These are not the right ones yet.",
                    "label": 0
                },
                {
                    "sent": "Maybe I have to look around this data items for similar data items.",
                    "label": 0
                },
                {
                    "sent": "So there is a lot to that search process where we have to think about how to change the search process in the classic web over to the web of data.",
                    "label": 0
                },
                {
                    "sent": "So that's one point.",
                    "label": 0
                },
                {
                    "sent": "Another point is if you sort of like disregard this half and just look at the database perspective of it, you could say we have here a database.",
                    "label": 0
                },
                {
                    "sent": "Listen data items in it and then of course what you do is a database is typically you develop some application program one or many application programs.",
                    "label": 0
                },
                {
                    "sent": "But of course with the development of these application programs you buy into a lot of assumptions, right?",
                    "label": 0
                },
                {
                    "sent": "So what I come assumptions that you deal with when you program against the database well?",
                    "label": 0
                },
                {
                    "sent": "Things you might learn of course, in building information systems is you have a certain methodology.",
                    "label": 0
                },
                {
                    "sent": "How did derive schema and you arrive it?",
                    "label": 0
                },
                {
                    "sent": "Then you do the object relational mapping.",
                    "label": 0
                },
                {
                    "sent": "Then you do your programming.",
                    "label": 0
                },
                {
                    "sent": "You know very well how the schema looks because you've built it in the first place.",
                    "label": 0
                },
                {
                    "sent": "And that's always the classical way that you typically learn in the course of studies in the real world, it's more often that there is already a database and there are 10 applications running on it, and you have to build the 11th application.",
                    "label": 0
                },
                {
                    "sent": "But even then what you do is you have a schema that's more or less around, and you have to deal with it.",
                    "label": 0
                },
                {
                    "sent": "You first have to look it, and it's not typical in many cases.",
                    "label": 0
                },
                {
                    "sent": "At least it's not too big, right?",
                    "label": 0
                },
                {
                    "sent": "And then you develop your program.",
                    "label": 0
                },
                {
                    "sent": "Maybe you have to look at two databases.",
                    "label": 0
                },
                {
                    "sent": "What changes there is once we look at the linked data web, we do not only want to do retrieval of graph data, we also want actually in many aspects to program with the data.",
                    "label": 0
                },
                {
                    "sent": "What does it mean to program with the data?",
                    "label": 0
                },
                {
                    "sent": "Isn't it sufficient to just look at graph data and be happy?",
                    "label": 0
                },
                {
                    "sent": "Well obviously not right.",
                    "label": 0
                },
                {
                    "sent": "Finding something looking at graph data looking at tables is of course interesting in many aspects, but quite often you want to do more.",
                    "label": 0
                },
                {
                    "sent": "Then just looking at some graph or looking at the table, you may want to present certain data items in a particular way.",
                    "label": 0
                },
                {
                    "sent": "You may want to present the person differently than an organization.",
                    "label": 0
                },
                {
                    "sent": "You may want to interact with it to allow the modification of data and the end user of question do this using Sparkle update, but you want to have a rather normal application interface.",
                    "label": 0
                },
                {
                    "sent": "So one thing I think that is really grossly neglected in our field is that in the semantic web field in our field.",
                    "label": 0
                },
                {
                    "sent": "Really, the programming against the data.",
                    "label": 0
                },
                {
                    "sent": "Of course you can always do it right.",
                    "label": 0
                },
                {
                    "sent": "You can always say I write a sparkle query.",
                    "label": 0
                },
                {
                    "sent": "I get some piece of data.",
                    "label": 0
                },
                {
                    "sent": "I somehow write a program to manipulate piece of data and then it will sparkle update.",
                    "label": 0
                },
                {
                    "sent": "That's possible, but it's really really a nuisance to do it.",
                    "label": 0
                },
                {
                    "sent": "It's really not very smooth working and at the same time people then look at the other frameworks that are around Ruby on Rails.",
                    "label": 0
                },
                {
                    "sent": "And how are they all called hibernation?",
                    "label": 0
                },
                {
                    "sent": "And I find it South moves and so effortless.",
                    "label": 1
                },
                {
                    "sent": "And you then go to the semantic web and you have to figure out with these Parker queries and.",
                    "label": 0
                },
                {
                    "sent": "It's a headache, right?",
                    "label": 0
                },
                {
                    "sent": "So for me, I would say a motivation to do semantic web development is making life easier, and we're not quite there yet in all aspects.",
                    "label": 0
                },
                {
                    "sent": "So question is how can we come closer to that?",
                    "label": 0
                },
                {
                    "sent": "So these are the two assumptions I want to work with.",
                    "label": 0
                },
                {
                    "sent": "In my talk, one is we have this analogy of the classic web.",
                    "label": 0
                },
                {
                    "sent": "We want to find and search even in the global space.",
                    "label": 0
                },
                {
                    "sent": "Because we do not have one database anymore but many and where are the right data items and once we have the data items.",
                    "label": 0
                },
                {
                    "sent": "We want to program against them in a way that.",
                    "label": 0
                },
                {
                    "sent": "Not as awkward as the most methods that we have today.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, here are some of the usual basics.",
                    "label": 0
                },
                {
                    "sent": "I think I can.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Skip them, you heard.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Sufficient about them yesterday.",
                    "label": 0
                },
                {
                    "sent": "Maybe I need a little bit of repetition, just we are on the same plate.",
                    "label": 0
                },
                {
                    "sent": "Even if you heard that before, here is a very simple example.",
                    "label": 0
                },
                {
                    "sent": "You have an identifier for something you learn here as you did yesterday.",
                    "label": 0
                },
                {
                    "sent": "What RDF type means here?",
                    "label": 0
                },
                {
                    "sent": "This identifier would be typed as a document in the photology and this being from the class in proceedings.",
                    "label": 0
                },
                {
                    "sent": "So those of you who will use later you will know this class in proceedings.",
                    "label": 0
                },
                {
                    "sent": "So you have two types for this, one identifier for this identifier.",
                    "label": 0
                },
                {
                    "sent": "For this object you also have Dublin core title, public course, typical ontology for coming from the library, science and they have looked at a certain set of properties that you basically always need.",
                    "label": 0
                },
                {
                    "sent": "A very often need when you describe a book, for example in the library.",
                    "label": 0
                },
                {
                    "sent": "So here title would be extracting schema and so on, and similarly Dublin core would specify the Creator, which can be.",
                    "label": 0
                },
                {
                    "sent": "An author could also be an artist.",
                    "label": 0
                },
                {
                    "sent": "Who has created a painting or something else?",
                    "label": 0
                },
                {
                    "sent": "And here the Creator with one of them would be such a beautiful.",
                    "label": 0
                },
                {
                    "sent": "So this.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Is a running example that we will use and then of course you will.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "An extent that can have more information about that certain people is computer scientist and what his real name really is.",
                    "label": 0
                },
                {
                    "sent": "And so on and so forth.",
                    "label": 0
                },
                {
                    "sent": "So what is important there is?",
                    "label": 0
                },
                {
                    "sent": "You have the identifiers.",
                    "label": 0
                },
                {
                    "sent": "They're spread all over the web where you can dereference them.",
                    "label": 0
                },
                {
                    "sent": "You have certain typing you have certain properties that you use all the time.",
                    "label": 0
                },
                {
                    "sent": "Well, if you're not, it's not obligatory to use them, but if you look around then you see that some ontologies like for for Dublin Core.",
                    "label": 0
                },
                {
                    "sent": "They're really, really widely used, right?",
                    "label": 0
                },
                {
                    "sent": "And it's good because the moment that you have such a set of ontologies are widely used.",
                    "label": 0
                },
                {
                    "sent": "You can easily write applications that immediately understand what that means, so it's really the.",
                    "label": 0
                },
                {
                    "sent": "The interesting phenomenon that just because so many people use them, you as a developer know what they mean because you encounter them so frequently and you can write your program code for that.",
                    "label": 0
                },
                {
                    "sent": "No one dictated to use them, but the social phenomenon leads to the fact that you can build a good application with immediately.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so now we have it's very poorly visible, but on the other side you don't need to see because you have seen it 1000 times.",
                    "label": 0
                },
                {
                    "sent": "The linked open data cloud picture by the Belgian team and.",
                    "label": 0
                },
                {
                    "sent": "Well, now what we want to do in this LD cloud is to find information into program against it.",
                    "label": 0
                },
                {
                    "sent": "And the interesting thing also, if you think in terms of business is.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "It's almost big data.",
                    "label": 0
                },
                {
                    "sent": "30 billion triples is maybe not quite really big data, but what makes it interesting is it's really a lot of variability in there.",
                    "label": 0
                },
                {
                    "sent": "It's not like the very largest data source in terms of terabytes or petabytes, but it's really a large variety of different types of data that you find here.",
                    "label": 0
                },
                {
                    "sent": "Yeah, and whoops.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Here's direction.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, now.",
                    "label": 0
                },
                {
                    "sent": "What I want to do is to tell you about a few, give you a few thoughts about what we currently do.",
                    "label": 0
                },
                {
                    "sent": "Interest programming against Link data Cloud, and please interrupt and jumping questions so I can learn something from you.",
                    "label": 0
                },
                {
                    "sent": "What we missed.",
                    "label": 0
                },
                {
                    "sent": "Then talk about how do we find this data?",
                    "label": 0
                },
                {
                    "sent": "And then about some further analogies about exploring the kind of data that we find there in the linked Open Data Club.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Programming the data.",
                    "label": 0
                },
                {
                    "sent": "So the idea is now assume you're a programmer using some environment.",
                    "label": 0
                },
                {
                    "sent": "Now here in this regard we use Visual Studio.",
                    "label": 0
                },
                {
                    "sent": "F# happened to be a project funded by Microsoft, so obviously we use their technology, which is quite cool.",
                    "label": 0
                },
                {
                    "sent": "But of course you could also think you have eclipse here and Scala, and of course some of the details would change obviously, and the implementation would change quite a bit, but the core concept I think would still be the same.",
                    "label": 0
                },
                {
                    "sent": "And of course if some one of you wants to do the project with Scala in Eclipse would be happy to talk to you.",
                    "label": 0
                },
                {
                    "sent": "Then you have on the other side the linked data cloud.",
                    "label": 0
                },
                {
                    "sent": "What do you want to do?",
                    "label": 0
                },
                {
                    "sent": "Well, you have several challenges.",
                    "label": 0
                },
                {
                    "sent": "One challenges at design time of your application.",
                    "label": 0
                },
                {
                    "sent": "You really have to find your way around here and even assume you have a good idea of what is your data source that you want to program against you.",
                    "label": 0
                },
                {
                    "sent": "First assumption would be you don't know what's in their data source.",
                    "label": 0
                },
                {
                    "sent": "Now that's a different assumption than the typical information systems development, where you more or less know what's in the data source.",
                    "label": 0
                },
                {
                    "sent": "Even because you have documentation from its previous development, or because it's not so big to oversee anyways.",
                    "label": 0
                },
                {
                    "sent": "But if you look here and you program against.",
                    "label": 0
                },
                {
                    "sent": "Pedia you have.",
                    "label": 0
                },
                {
                    "sent": "I don't know how many.",
                    "label": 0
                },
                {
                    "sent": "Million types, and it's not so easy to oversee that.",
                    "label": 0
                },
                {
                    "sent": "Um?",
                    "label": 0
                },
                {
                    "sent": "Then when you do design time, that means you pick.",
                    "label": 0
                },
                {
                    "sent": "Some of that data that's up there now that data of course is sometimes structured.",
                    "label": 0
                },
                {
                    "sent": "Frequently also unstructured.",
                    "label": 0
                },
                {
                    "sent": "So sometimes you have a schema we have.",
                    "label": 0
                },
                {
                    "sent": "Word is seen in our example, something like DC Creator or something of type author of type document.",
                    "label": 0
                },
                {
                    "sent": "And of course you want to use that.",
                    "label": 0
                },
                {
                    "sent": "Obviously because when you do the program you want to use types.",
                    "label": 0
                },
                {
                    "sent": "Now, one very neat idea from Don Syme from Microsoft was to say that in this world out there, there are so many types.",
                    "label": 0
                },
                {
                    "sent": "Whi do we want to invent them again for our programming languages, right?",
                    "label": 0
                },
                {
                    "sent": "So people have bothered to build an ontology and have all these nice class hierarchies?",
                    "label": 0
                },
                {
                    "sent": "Why do we want to recreate all that with slightly different names in our programming language environment?",
                    "label": 0
                },
                {
                    "sent": "Why not just borrow those type systems into our programming language?",
                    "label": 0
                },
                {
                    "sent": "I think that's a really neat idea.",
                    "label": 0
                },
                {
                    "sent": "It's again changing one assumption and the programming language field value typically just say OK. Now I do my type and then I program with it from.",
                    "label": 0
                },
                {
                    "sent": "This type is given from the outside and then I program against it and then of course I still enrich it and app my methods and so on.",
                    "label": 0
                },
                {
                    "sent": "So these are all the kind of design time issues that you have at runtime.",
                    "label": 0
                },
                {
                    "sent": "Of course, then you want to do the usual thing you want to query for objects you want to manipulate objects.",
                    "label": 0
                },
                {
                    "sent": "And of course you want to do this a lot with the kind of types.",
                    "label": 0
                },
                {
                    "sent": "That you have.",
                    "label": 0
                },
                {
                    "sent": "Defined design time.",
                    "label": 0
                },
                {
                    "sent": "Either you have to find them explicitly or if in cases where there is, there are no explicit class hierarchies.",
                    "label": 0
                },
                {
                    "sent": "Here you find a lot of that.",
                    "label": 0
                },
                {
                    "sent": "There have been a couple of papers around by work by our team, but also by some other teams who looked into empirically into the linked data cloud.",
                    "label": 0
                },
                {
                    "sent": "How much structure is given there and found that to a large extent such class, how creaser missing?",
                    "label": 0
                },
                {
                    "sent": "Then we have to reconstruct and that will be in Part 2 of my talk.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, here's our example graph that we will use them.",
                    "label": 0
                },
                {
                    "sent": "It just means we have a little bit of typing system person talking creature and this part of my talk.",
                    "label": 0
                },
                {
                    "sent": "I assume we have a quite a nice ontology if we don't have that, we have to recreate it using the second part of my talk and here we have two instances.",
                    "label": 0
                },
                {
                    "sent": "Bob, who is a person who owns a dog, hustle typical German name for a dog and then the dog in general has some dozens of attributes that you might want to use.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So what does the programmer need to do here?",
                    "label": 0
                },
                {
                    "sent": "Well, first, the program needs to look at the data source and explore and understand the schema of the data.",
                    "label": 0
                },
                {
                    "sent": "Even if the data comes without properly defined schema, there are some properties he uses all the time, and then it's necessary to understand these.",
                    "label": 0
                },
                {
                    "sent": "So this is then an implicit schema.",
                    "label": 0
                },
                {
                    "sent": "But it's still a schema, so you want to find the type then that represents talk.",
                    "label": 0
                },
                {
                    "sent": "Maybe you just look at the data source and assume.",
                    "label": 0
                },
                {
                    "sent": "This is about animals, but now we want to find one that really represents talk.",
                    "label": 0
                },
                {
                    "sent": "Maybe it's called differently canine or something else, but you want to find that.",
                    "label": 0
                },
                {
                    "sent": "Then you need to align these schema types from your linked open data source with your programming language environment, right whatever this environment is.",
                    "label": 0
                },
                {
                    "sent": "So from a DOC, RTF data type in linked open data set to the doc data type in your own programming environment, and then of course you need to query for instances and instantiate program types.",
                    "label": 0
                },
                {
                    "sent": "For example, getting all dogs that have some owner becausw they're supposed to you, the owners, has supposed to pay taxes for the dogs Germany.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "It's required, so it may be typical German example.",
                    "label": 0
                },
                {
                    "sent": "And what is our suggested solution?",
                    "label": 0
                },
                {
                    "sent": "That we have a kind of data schema query language.",
                    "label": 0
                },
                {
                    "sent": "We happen to call node path query language and PQL.",
                    "label": 0
                },
                {
                    "sent": "The main difference to the typical query languages is that it's mostly querying the schema.",
                    "label": 0
                },
                {
                    "sent": "And that in an easy interactive wait, you will see an example for that.",
                    "label": 0
                },
                {
                    "sent": "What is the schema that's regulating the data in your linked open data source?",
                    "label": 0
                },
                {
                    "sent": "Then you have to do the type mapping rules for the primitive data types.",
                    "label": 0
                },
                {
                    "sent": "Actually, we do this using the same language so you don't have to learn a second language and then you have two ways of operating with this language.",
                    "label": 0
                },
                {
                    "sent": "Remember it's a schema query language.",
                    "label": 0
                },
                {
                    "sent": "You ask for the schema of what the data in that particular data source.",
                    "label": 1
                },
                {
                    "sent": "And when you consider the schema, you have two kind of questions you can ask for the intention.",
                    "label": 0
                },
                {
                    "sent": "That means you ask for how is a class descript.",
                    "label": 0
                },
                {
                    "sent": "And once you get this intention, you can take and say, OK, that's my data type in my programming environment.",
                    "label": 0
                },
                {
                    "sent": "And by this define the mapping.",
                    "label": 0
                },
                {
                    "sent": "Or you can ask with the same query for the extension and then of course you get for example all the docs right if you have the dog class and you ask for the extension of this doc, you just get all the instance like hustle.",
                    "label": 0
                },
                {
                    "sent": "Pink.",
                    "label": 0
                },
                {
                    "sent": "More precise.",
                    "label": 0
                },
                {
                    "sent": "Yesterday.",
                    "label": 0
                },
                {
                    "sent": "Leave it later RDF schema.",
                    "label": 0
                },
                {
                    "sent": "It's what I understand here, and as I said here in this first part, I assume that RDF schema is given and in the second part we do some recreation in cases where it's not given and it's true, there is a good deal and we I can show you even some numbers of which extend the schema is given or not given just by empirical investigations.",
                    "label": 0
                },
                {
                    "sent": "Done by Thomas Carter on for example, done by both toolbar key.",
                    "label": 0
                },
                {
                    "sent": "There's a new paper coming out.",
                    "label": 0
                },
                {
                    "sent": "So there are certain empirical investigations.",
                    "label": 0
                },
                {
                    "sent": "On the Big data cloud here.",
                    "label": 0
                },
                {
                    "sent": "Or we make it if you make this assumption.",
                    "label": 0
                },
                {
                    "sent": "The schema is actually.",
                    "label": 0
                },
                {
                    "sent": "Paid for by the data.",
                    "label": 0
                },
                {
                    "sent": "Absolutely.",
                    "label": 1
                },
                {
                    "sent": "So if you have the doc data type in 10 attributes defined and I come along and add in 11th data type and 11th property.",
                    "label": 0
                },
                {
                    "sent": "Sorry 11th property this falls out of the schema.",
                    "label": 0
                },
                {
                    "sent": "Absolutely.",
                    "label": 0
                },
                {
                    "sent": "Like the data, usually quite different vocabularies look different schema.",
                    "label": 0
                },
                {
                    "sent": "Yeah, but I mean that's that's for me, inherent in the idea of RDF schema that you don't just use one ontology, but you use already.",
                    "label": 0
                },
                {
                    "sent": "In our example, Dublin Core, 4th and so on altogether.",
                    "label": 0
                },
                {
                    "sent": "Sure it can be, but you just reference to fall off and.",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "So what is the actual record?",
                    "label": 0
                },
                {
                    "sent": "The structural types type that defines a particular entity, person, animal, or whatever is determined by the data themselves is not given outside.",
                    "label": 0
                },
                {
                    "sent": "It's both.",
                    "label": 0
                },
                {
                    "sent": "Both you of course you have.",
                    "label": 0
                },
                {
                    "sent": "You refer to 4th person and then you can look up in the other data source how 4th person is defined and you also have yours right with that.",
                    "label": 0
                },
                {
                    "sent": "Maybe I use some properties are not defined in any ontology and then you have to look at what is common to the data that I have there and do an analysis.",
                    "label": 0
                },
                {
                    "sent": "Yeah, that's.",
                    "label": 0
                },
                {
                    "sent": "For instance, you have a car.",
                    "label": 0
                },
                {
                    "sent": "Alaska, but defines 11 us.",
                    "label": 0
                },
                {
                    "sent": "Then you have a lot of null values.",
                    "label": 0
                },
                {
                    "sent": "Or from other brokers, because this particular data editor consider it that these are more or less a useful yeah.",
                    "label": 0
                },
                {
                    "sent": "There is no mean.",
                    "label": 0
                },
                {
                    "sent": "Oh yes, sure it is.",
                    "label": 0
                },
                {
                    "sent": "I mean, of course, you buy into assumptions when you do the programming, but of course when you buy into these assumptions, that does not mean that the world is as orderly and as clean as you would like to have it in the typical information system development nevertheless.",
                    "label": 0
                },
                {
                    "sent": "So in general, you are completely right.",
                    "label": 0
                },
                {
                    "sent": "It happens that in many cases you find a good deal of the world in your linked data still being some sort of orderly having alot of null values of course, and you can program against that.",
                    "label": 0
                },
                {
                    "sent": "Of course you cannot program against completely arbitrary data, and you might find completely arbitrary data, but in that case you cannot do more than show a graph.",
                    "label": 0
                },
                {
                    "sent": "You can of course try to do automatic mapping and all that, but there are no miracles that you can expect, right?",
                    "label": 0
                },
                {
                    "sent": "You can you can do.",
                    "label": 0
                },
                {
                    "sent": "Another approach summarize the types from the paper.",
                    "label": 0
                },
                {
                    "sent": "Rather, that's the next part of my talk.",
                    "label": 0
                },
                {
                    "sent": "I have to.",
                    "label": 0
                },
                {
                    "sent": "You have to wait.",
                    "label": 0
                },
                {
                    "sent": "What's exactly going to send direction?",
                    "label": 0
                },
                {
                    "sent": "'cause if you if you go get one comment and.",
                    "label": 0
                },
                {
                    "sent": "So it says if you combine data from the right sources and the results that were not completely compliant to anybody.",
                    "label": 0
                },
                {
                    "sent": "So you.",
                    "label": 0
                },
                {
                    "sent": "It's all purpose of using a graph based data center and dissolution effectiveness.",
                    "label": 0
                },
                {
                    "sent": "Data summary yes, initially, for what we do.",
                    "label": 0
                },
                {
                    "sent": "Yep.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, So what would be the example?",
                    "label": 0
                },
                {
                    "sent": "So you want to navigate to Doc.",
                    "label": 0
                },
                {
                    "sent": "But assuming you don't know dog yet.",
                    "label": 0
                },
                {
                    "sent": "So the schema query language you start at the root would be RDF resource for example and then you do say show me all the subtypes you see, for example creature and you get this suggestion.",
                    "label": 0
                },
                {
                    "sent": "You can pick it and you apply the same operator again and you are suggested dog and person.",
                    "label": 0
                },
                {
                    "sent": "You pick one of them, for example dog.",
                    "label": 0
                },
                {
                    "sent": "And So what you have here is an example for query.",
                    "label": 0
                },
                {
                    "sent": "For the schema that you develop interactively, now with this kind of expression.",
                    "label": 0
                },
                {
                    "sent": "You can though.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "On either retrieves the doc data type so you take the very same expression and then say, give me the intention.",
                    "label": 0
                },
                {
                    "sent": "And what does this mean?",
                    "label": 0
                },
                {
                    "sent": "If you get the intention of that, you basically look up all the schema definitions they need, not come from one.",
                    "label": 0
                },
                {
                    "sent": "Ontology could come from several ontologies, and you say that in your host language.",
                    "label": 0
                },
                {
                    "sent": "Well, my type dog.",
                    "label": 0
                },
                {
                    "sent": "Has owner attribute his name attribute as H attribute has inherited from these other classes and you basically with one expression can sort of like build this whole mapping.",
                    "label": 0
                },
                {
                    "sent": "We using the same kind of class identifiers that you are getting from the linked data world.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "With the same expression, also like looking for creature and dog, you can then.",
                    "label": 0
                },
                {
                    "sent": "Ask for the extension of the same thing.",
                    "label": 0
                },
                {
                    "sent": "And what you get then is.",
                    "label": 0
                },
                {
                    "sent": "Here is 1 instance.",
                    "label": 0
                },
                {
                    "sent": "Could be many instances of course and 'cause we have strictly typed language you do not only get instances here, but these instances are typed so he would get as a result of this query a set where all the elements are of type dog.",
                    "label": 0
                },
                {
                    "sent": "Now when you and then of course you can apply the program against that.",
                    "label": 0
                },
                {
                    "sent": "This is interesting because once you build your code then you can test for the kind of types that you program against and also develop different methods for the different types that you have in your result sets.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, and of course you can also have a little bit more powerful queries here.",
                    "label": 0
                },
                {
                    "sent": "This would be a query where you ask for dog, but then you restrict it to dogs that have owners.",
                    "label": 0
                },
                {
                    "sent": "By the way, this almost looks like it yell query right where you ask for where you construct the class dogs that have owners.",
                    "label": 0
                },
                {
                    "sent": "M and then you can do the same kind of thing.",
                    "label": 0
                },
                {
                    "sent": "You can either do adopt data type or you can ask for the extension of that.",
                    "label": 0
                },
                {
                    "sent": "So hustle would be returned because about hustle, it is known that an owner exists.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Now, how does it look like?",
                    "label": 0
                },
                {
                    "sent": "It is still under development, but we have the core of it to show that it works in general.",
                    "label": 0
                },
                {
                    "sent": "So here is a little bit of snippets a little bit hard to read, but you will have the slides.",
                    "label": 0
                },
                {
                    "sent": "You just define the data source against which you're running it.",
                    "label": 0
                },
                {
                    "sent": "Right now we first implemented to do run against one data source, but do we really want to have it to run against arbitrary number of data sources and to navigate around between them?",
                    "label": 0
                },
                {
                    "sent": "What you then do is you say OK from this data source I can pick some class.",
                    "label": 0
                },
                {
                    "sent": "And you are suggested this classes.",
                    "label": 0
                },
                {
                    "sent": "So you one problem of programming against RDF data is state.",
                    "label": 0
                },
                {
                    "sent": "Of course you want to use the namespaces the full your eyes you have to.",
                    "label": 0
                },
                {
                    "sent": "Yeah, at the same time this means just like writing, it is less laborious.",
                    "label": 0
                },
                {
                    "sent": "So here the idea is that you get these suggested from the data source.",
                    "label": 0
                },
                {
                    "sent": "You reuse that so you don't do the mistyping.",
                    "label": 0
                },
                {
                    "sent": "We just have to do this election.",
                    "label": 0
                },
                {
                    "sent": "With a newer, here's the Visual Studio environment you would have to have who would like to have this for the eclipse.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "By mid two and then you see you get here.",
                    "label": 0
                },
                {
                    "sent": "For example the animals and then you have the typical different possibilities to look for example at the subtypes and hear animals have a sub.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Types you'll get the suggestion pet is one of the possible examples, and then for a pet.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "You get again the different possibilities to select the subtypes or the properties and.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The properties you then select, for example that has owner property and so you really interactively in your development environment.",
                    "label": 0
                },
                {
                    "sent": "Look at what's in the data source and when you.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "After that result.",
                    "label": 0
                },
                {
                    "sent": "You then just use that, for example to define your type dog in your programming language environment.",
                    "label": 0
                },
                {
                    "sent": "So we explore it and what you built while exploring is defining what you do so you don't do different things to one thing and use this in multiple ways.",
                    "label": 0
                },
                {
                    "sent": "OK, here is this example.",
                    "label": 0
                },
                {
                    "sent": "Again, you define the type dog being such a kind of query.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "The intention intentional semantics of that is that this dog inherits from creature and has owner, person, and so on so forth.",
                    "label": 0
                },
                {
                    "sent": "And the all these 20 attributes here come actually from the linked data source.",
                    "label": 0
                },
                {
                    "sent": "You don't have to do them yourself.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And the same if you say I want to assign this variable docs.",
                    "label": 0
                },
                {
                    "sent": "A certain set of instances you do with the query ask for the extension.",
                    "label": 0
                },
                {
                    "sent": "You get the set of docs from the linked data source and this is this instance plus others.",
                    "label": 0
                },
                {
                    "sent": "Plus they are typed so you know.",
                    "label": 0
                },
                {
                    "sent": "The exact type of that.",
                    "label": 0
                },
                {
                    "sent": "And that's of course where the typing that you have in F# or an ML and so on, is sort of useful to have becausw.",
                    "label": 0
                },
                {
                    "sent": "Yeah, they use a higher order functionality.",
                    "label": 0
                },
                {
                    "sent": "Six few chosen still prompted that you want to represent asking for that, we just show all that are relevant at this part of the query.",
                    "label": 0
                },
                {
                    "sent": "Right and there we look for the schema descriptions.",
                    "label": 0
                },
                {
                    "sent": "We look for the data.",
                    "label": 0
                },
                {
                    "sent": "What's around there?",
                    "label": 0
                },
                {
                    "sent": "We don't present the whole thing.",
                    "label": 0
                },
                {
                    "sent": "But we as you move along in defining your query, you get always these suggestions which may apply at this point in time.",
                    "label": 0
                },
                {
                    "sent": "But I don't know if I'm skipping ahead or if I'm missing something.",
                    "label": 0
                },
                {
                    "sent": "You're coming essentially a type for your host language.",
                    "label": 0
                },
                {
                    "sent": "Are you constraining which properties are then available in programming in the host language?",
                    "label": 1
                },
                {
                    "sent": "Yeah, I mean you could add manually some further property, of course.",
                    "label": 0
                },
                {
                    "sent": "Cause here what you then get.",
                    "label": 0
                },
                {
                    "sent": "You could then still add you get 10 properties.",
                    "label": 0
                },
                {
                    "sent": "You could add the length attribute in your manually, but.",
                    "label": 0
                },
                {
                    "sent": "Typing, typing because we're working here the whole time in the development environment.",
                    "label": 0
                },
                {
                    "sent": "And then of course you can just add another line saying I add this property XY set to my class that I've defined here.",
                    "label": 0
                },
                {
                    "sent": "Oh, a line of sharp, of course.",
                    "label": 0
                },
                {
                    "sent": "I mean, this is basically just like you could say macro expansion mechanism that looks into your link data world.",
                    "label": 0
                },
                {
                    "sent": "What what?",
                    "label": 0
                },
                {
                    "sent": "What I'm trying to work out?",
                    "label": 0
                },
                {
                    "sent": "What's what from the data that is materialized into?",
                    "label": 0
                },
                {
                    "sent": "So here want to materialize the schema information.",
                    "label": 0
                },
                {
                    "sent": "What is not materialized is the instance information that's asked at runtime.",
                    "label": 0
                },
                {
                    "sent": "Right, so if you did.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Find your type dog.",
                    "label": 0
                },
                {
                    "sent": "That's something that happens basically at compile time actually, but in a modern development environment you get some suggestions as to what might apply even at typing time, but of course it's really defined at compile time.",
                    "label": 0
                },
                {
                    "sent": "When you.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Look for this.",
                    "label": 0
                },
                {
                    "sent": "You have a variable that's defined by something that's filled at runtime.",
                    "label": 0
                },
                {
                    "sent": "Even if of course you can evaluate at typing time.",
                    "label": 0
                },
                {
                    "sent": "What currently is there in?",
                    "label": 0
                },
                {
                    "sent": "Unexpected easy filled with everything you know about the resource is it's here.",
                    "label": 0
                },
                {
                    "sent": "This is the.",
                    "label": 0
                },
                {
                    "sent": "There's a little bit of shorthand for the long thing I showed from the snippet from the snapshot.",
                    "label": 0
                },
                {
                    "sent": "It's evaluated with regard to a data context where you specified right now what is the link data source that you are tackling.",
                    "label": 0
                },
                {
                    "sent": "Right, that's our first step, then looking at more data sources absolutely necessary, not yet.",
                    "label": 0
                },
                {
                    "sent": "That's a step that's still several months ahead of us.",
                    "label": 0
                },
                {
                    "sent": "But it's here.",
                    "label": 0
                },
                {
                    "sent": "You really evaluate with regard to a certain data context, and then you get what's in there.",
                    "label": 0
                },
                {
                    "sent": "There is a schema or as an extension of description.",
                    "label": 0
                },
                {
                    "sent": "The important part is you do this interactively while the develop, so you make the the.",
                    "label": 0
                },
                {
                    "sent": "Obstacle rather small, for the developer to just discover what's in it and directly program against it.",
                    "label": 0
                },
                {
                    "sent": "And of course, when you compile and you should go to that.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "When you compile a second time with, this has changed.",
                    "label": 0
                },
                {
                    "sent": "You get the new definition.",
                    "label": 0
                },
                {
                    "sent": "There are a lot of questions that follow.",
                    "label": 0
                },
                {
                    "sent": "For example, do you really want to have that?",
                    "label": 0
                },
                {
                    "sent": "Do you want to lock how that's developing overtime?",
                    "label": 0
                },
                {
                    "sent": "So there are a lot of interesting questions that pop up once you take this assumption of borrowing types from your changing link data environment.",
                    "label": 0
                },
                {
                    "sent": "And I don't have an answer for all of these.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So and then of course.",
                    "label": 0
                },
                {
                    "sent": "The idea is there were still about.",
                    "label": 0
                },
                {
                    "sent": "To build in is.",
                    "label": 0
                },
                {
                    "sent": "Once you have such a query expression to define the type, you can use this in all different places.",
                    "label": 0
                },
                {
                    "sent": "You can also use in place where you define a method.",
                    "label": 0
                },
                {
                    "sent": "Right, so for example here paying tax for only docs with owners who provide this type and the objective is then to actually do some of the typing inference at compile time using the L reasoning.",
                    "label": 0
                }
            ]
        },
        "clip_31": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so now are you here with me?",
                    "label": 0
                },
                {
                    "sent": "You want to get dogs?",
                    "label": 0
                },
                {
                    "sent": "Get all the dogs available in a linked data source.",
                    "label": 0
                },
                {
                    "sent": "Using this expression you would define a method.",
                    "label": 0
                },
                {
                    "sent": "Pay tax that only works on dogs that have owners and then here comes the method definition.",
                    "label": 0
                },
                {
                    "sent": "And then you iterate over all the docs that you have in this set.",
                    "label": 0
                },
                {
                    "sent": "And then you match each individual talk which is typed becausw of this expression and you match whether it is a dog who has an owner and then you.",
                    "label": 0
                },
                {
                    "sent": "Charge text for him.",
                    "label": 0
                },
                {
                    "sent": "Or it doesn't match then you do nothing.",
                    "label": 0
                },
                {
                    "sent": "OK, so you get the typing.",
                    "label": 0
                },
                {
                    "sent": "For these talks, you do the querying and use the types that you have defined in order to program against it.",
                    "label": 0
                }
            ]
        },
        "clip_32": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, that was the first part really.",
                    "label": 0
                },
                {
                    "sent": "Using a strict typing to programming canceling data source Now there are several questions about where the types come from and here our approach schematics is one of our foundations.",
                    "label": 0
                },
                {
                    "sent": "I wouldn't claim that's the only possible if you can actually.",
                    "label": 0
                },
                {
                    "sent": "Develop 20 different versions of it and all of them I think would make sense.",
                    "label": 0
                },
                {
                    "sent": "You just need a consistent picture.",
                    "label": 0
                }
            ]
        },
        "clip_33": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "That you develop here.",
                    "label": 0
                },
                {
                    "sent": "So what is when we started to develop skymax?",
                    "label": 0
                },
                {
                    "sent": "The original question there was something like you look for something.",
                    "label": 0
                },
                {
                    "sent": "You look for example, for documents that are also of type in proceedings and have been created by computer scientists.",
                    "label": 0
                },
                {
                    "sent": "So some computer science publication.",
                    "label": 0
                }
            ]
        },
        "clip_34": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And of course, that's like asking exactly sparkle queries we have seen Sparkle yesterday, so you see that this is basically what is indicated here in some nicer graphics.",
                    "label": 0
                }
            ]
        },
        "clip_35": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So the question is.",
                    "label": 0
                },
                {
                    "sent": "Where in the link to?",
                    "label": 0
                }
            ]
        },
        "clip_36": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Datacloud hardly visible here.",
                    "label": 0
                },
                {
                    "sent": "Can this question beyond?",
                    "label": 0
                }
            ]
        },
        "clip_37": {
            "is_summarization_sample": false,
            "summarization_data": []
        },
        "clip_38": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, and.",
                    "label": 0
                }
            ]
        },
        "clip_39": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Then of course you want to find where it's possible, so you will need some sort of index in order to answer this question, and schimek defines the index and the index also.",
                    "label": 0
                },
                {
                    "sent": "Create some structures which can be used like the data guides which we take as a blueprint in order to answer questions about schemata where no explicit schemata are defined.",
                    "label": 0
                }
            ]
        },
        "clip_40": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so you ask the index where is the corresponding data to answer this type of question.",
                    "label": 0
                }
            ]
        },
        "clip_41": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Ideally, here in our example where we ask for computer science publications, you might want to look in those bubbles.",
                    "label": 0
                },
                {
                    "sent": "Here in the linked data Cloud, where you find ACM data or DLP data where we know well, these are typical computer science applications, of course.",
                    "label": 0
                }
            ]
        },
        "clip_42": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Have to infer that because no one will tell you up front, so.",
                    "label": 0
                }
            ]
        },
        "clip_43": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "What kind of schema information do we have on the linked open data cloud?",
                    "label": 0
                },
                {
                    "sent": "We have explicit schema information.",
                    "label": 0
                },
                {
                    "sent": "So we have an entity that has some type, which is a class.",
                    "label": 0
                },
                {
                    "sent": "End.",
                    "label": 0
                },
                {
                    "sent": "We have implicit schema information and this implicit schema information is like with the data guides of the Stanford Group.",
                    "label": 0
                },
                {
                    "sent": "You have an entity that has a property to some other entity.",
                    "label": 0
                },
                {
                    "sent": "And you model them your schema information just based on what kind of data.",
                    "label": 0
                },
                {
                    "sent": "Correspondances you find there.",
                    "label": 0
                }
            ]
        },
        "clip_44": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So when you.",
                    "label": 0
                },
                {
                    "sent": "Look at a data source.",
                    "label": 0
                },
                {
                    "sent": "You have entities that are related.",
                    "label": 0
                },
                {
                    "sent": "Somehow.",
                    "label": 0
                },
                {
                    "sent": "You have entities that have some class information attached, an interior of entity that has some other property going to a literal.",
                    "label": 0
                },
                {
                    "sent": "You really need to do to look at all this data and extract it into a meaningful index.",
                    "label": 0
                },
                {
                    "sent": "That of course should be much, much smaller than the data, otherwise it's not very useful.",
                    "label": 0
                },
                {
                    "sent": "And then describe the data with that.",
                    "label": 0
                },
                {
                    "sent": "So the idea is to say here is the data.",
                    "label": 0
                },
                {
                    "sent": "True information that looks roughly like this and describes.",
                    "label": 0
                },
                {
                    "sent": "The structure of the data that you have here in your data source.",
                    "label": 0
                },
                {
                    "sent": "Right now, what is maybe a bit misleading about this picture is really that this must be much, much, much, much smaller than the data itself.",
                    "label": 0
                },
                {
                    "sent": "Otherwise it doesn't make sense.",
                    "label": 0
                }
            ]
        },
        "clip_45": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So what are the different parts to different ingredients that we use here?",
                    "label": 0
                },
                {
                    "sent": "Well, first we have entities that have the same set of types.",
                    "label": 0
                },
                {
                    "sent": "So what we call type clusters.",
                    "label": 0
                },
                {
                    "sent": "We have the different data sources and a type cluster is just a combination of types that exists for data item.",
                    "label": 0
                },
                {
                    "sent": "If there is one data item that is has document and in proceedings together that would be one type cluster.",
                    "label": 0
                },
                {
                    "sent": "And assume that we have this exact combination of classes.",
                    "label": 0
                },
                {
                    "sent": "You then look for where are the entities that have all these types together, and then you have pointers from this type cluster to all the different linked data sources.",
                    "label": 0
                },
                {
                    "sent": "Not hearsay.",
                    "label": 0
                }
            ]
        },
        "clip_46": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Example.",
                    "label": 0
                },
                {
                    "sent": "There is a type cluster for document for document in.",
                    "label": 0
                },
                {
                    "sent": "SWRC in proceedings pointing to DLP and two ACM.",
                    "label": 0
                },
                {
                    "sent": "And some others, probably.",
                    "label": 0
                }
            ]
        },
        "clip_47": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "A very powerful tool that has been explored already, like by such a beautiful for from our running example more than 10 years ago is by simulation to describe.",
                    "label": 0
                },
                {
                    "sent": "How data items share properties?",
                    "label": 0
                },
                {
                    "sent": "And the idea is that entities data entities are equivalent if they refer with the same attributes.",
                    "label": 0
                },
                {
                    "sent": "The same properties two equivalent entities.",
                    "label": 0
                },
                {
                    "sent": "So recursive definition we take only a very weak version of that one by simulation with, which restricts the notion.",
                    "label": 0
                },
                {
                    "sent": "Then to one step equivalence you could do much much further.",
                    "label": 0
                },
                {
                    "sent": "So we do the two slides further one step more, but.",
                    "label": 0
                },
                {
                    "sent": "You could go much much further, but computing the full basement simulation is very expensive.",
                    "label": 0
                },
                {
                    "sent": "OK, so basically idea and then see if you have such a bisimulation cluster.",
                    "label": 0
                },
                {
                    "sent": "These are entities that refer to a couple of properties and then such a bisimulation cluster points to the data sources where such data items are found that have disjoint set of properties.",
                    "label": 0
                }
            ]
        },
        "clip_48": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So yeah, here would be the concrete example by simulation cluster that uses the DC Creator property and this would include for example the BBC data set where some movies or something I created and DLP right.",
                    "label": 0
                },
                {
                    "sent": "And of course you will know that for our query where we ask for publications by computer scientists that would not be so helpful.",
                    "label": 0
                }
            ]
        },
        "clip_49": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, and then of course you can combine the two aspects that we do with this.",
                    "label": 0
                },
                {
                    "sent": "What is called here equivalence classes.",
                    "label": 0
                },
                {
                    "sent": "I'm not sure that's the best name, but that's how we called it.",
                    "label": 0
                },
                {
                    "sent": "There consisting of type clusters and of these bisimulation clusters.",
                    "label": 0
                },
                {
                    "sent": "So what you get then here really equivalence classes that I think should be in the next next example.",
                    "label": 0
                },
                {
                    "sent": "For example, that you have documents and in proceedings here is types and you use a certain property like the DC creator, right?",
                    "label": 0
                },
                {
                    "sent": "So this gets you.",
                    "label": 0
                },
                {
                    "sent": "Description of the kind of entities that I found here at the schema level, even if no schema description is explicitly given.",
                    "label": 0
                },
                {
                    "sent": "And of course you can use the very same kind of in a mixture of the two, right?",
                    "label": 0
                },
                {
                    "sent": "Because here we have your explicit class system.",
                    "label": 0
                },
                {
                    "sent": "And then from these equivalence class you point again to the different data sources that where you find items that have this kind of type.",
                    "label": 0
                },
                {
                    "sent": "This kind of structure.",
                    "label": 0
                }
            ]
        },
        "clip_50": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "If we go, then one step further to not only have these properties, but also say when we do the bisimulation step, we go into restrictions of the properties of other type clusters.",
                    "label": 0
                },
                {
                    "sent": "So you're not, for example, you might be interested in creators who are of type computer scientists or creators who are of type artists or war of type.",
                    "label": 0
                },
                {
                    "sent": "I don't know painter, painter or something like that, and we include that.",
                    "label": 0
                },
                {
                    "sent": "That would not be typically included as a bisimulation step, because that would only be over the transitions properties, but we include this here.",
                    "label": 0
                },
                {
                    "sent": "This way we go a little bit over the one by simulation.",
                    "label": 0
                }
            ]
        },
        "clip_51": {
            "is_summarization_sample": false,
            "summarization_data": []
        },
        "clip_52": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So here would be then in our running example again we have an equivalence cluster.",
                    "label": 0
                },
                {
                    "sent": "Consisting of the type cluster where we find entities that.",
                    "label": 0
                },
                {
                    "sent": "Refer to the type document end to the type in proceedings and who share the desecrator property.",
                    "label": 0
                },
                {
                    "sent": "Where that is equated.",
                    "label": 0
                },
                {
                    "sent": "Property points to another type cluster.",
                    "label": 0
                },
                {
                    "sent": "Here it's only constructed pie computer scientists.",
                    "label": 0
                },
                {
                    "sent": "And then of course.",
                    "label": 0
                }
            ]
        },
        "clip_53": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "You know them.",
                    "label": 0
                },
                {
                    "sent": "Which individual data source here?",
                    "label": 0
                },
                {
                    "sent": "Can be used.",
                    "label": 0
                },
                {
                    "sent": "To answer this bottle query.",
                    "label": 0
                },
                {
                    "sent": "Of course, you must be aware that once you have such a kind of structure, it's not sufficient to cover completely arbitrary queries, right?",
                    "label": 0
                },
                {
                    "sent": "So if you have much bigger queries at some point, the structural description ends, and then of course you have to match.",
                    "label": 0
                },
                {
                    "sent": "You are the query you have against the structural descriptions and the lengths of these structural descriptions as they are available, right?",
                    "label": 0
                },
                {
                    "sent": "So it's, and then you have still to look around, but at least what you get is a large restriction of the data sources where you might find relevant data items.",
                    "label": 0
                },
                {
                    "sent": "So it's not perfect.",
                    "label": 0
                },
                {
                    "sent": "It doesn't give you everything, but of course to really give you everything in the end you would have to have all the data basically available.",
                    "label": 0
                },
                {
                    "sent": "Yeah, so that's part of these type clusters.",
                    "label": 0
                },
                {
                    "sent": "So I mean, once you have that in proceedings is a subtype here.",
                    "label": 0
                },
                {
                    "sent": "The only type clusters that you build will have both.",
                    "label": 0
                },
                {
                    "sent": "Yeah, then you can of course look how to further optimize the implementation.",
                    "label": 0
                }
            ]
        },
        "clip_54": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, then you can still an issue.",
                    "label": 0
                },
                {
                    "sent": "Then to compute this efficiently on large scale so you can do it brute force.",
                    "label": 0
                }
            ]
        },
        "clip_55": {
            "is_summarization_sample": false,
            "summarization_data": []
        },
        "clip_56": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We then also looked at what happens when.",
                    "label": 0
                },
                {
                    "sent": "You assume you crawl your data and of course the data is updated regularly and you really have only a window of triples available, or quadruples becausw.",
                    "label": 0
                },
                {
                    "sent": "The fourth quarter describes the data source, and you describe the structure of your data only based on what you find in this window.",
                    "label": 0
                },
                {
                    "sent": "And then, depending on the size of the window.",
                    "label": 0
                },
                {
                    "sent": "You will get, well, exactly the same result as before, or you may lose some interesting.",
                    "label": 0
                },
                {
                    "sent": "Associations that might be relevant to your query.",
                    "label": 0
                }
            ]
        },
        "clip_57": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, well then of course when you do brute force against this approximation you see for which kind of window size and for which kind of structural mechanisms you have a certain loss of precision and recall.",
                    "label": 0
                },
                {
                    "sent": "And then you can look and say, OK, I want.",
                    "label": 0
                },
                {
                    "sent": "I want to ensure to be sold so fast or I want to ensure so and so much precision and recall and well you can look up the exact details in the paper, but of course it's clear when your window becomes too small then you don't have sufficient structural information around anymore.",
                    "label": 0
                },
                {
                    "sent": "So one must say that if that of course depends on what assumptions you have while we're doing the crawling.",
                    "label": 0
                },
                {
                    "sent": "What these diagrams basically also say is that most of the data.",
                    "label": 0
                },
                {
                    "sent": "In the linked data sources, is densely connected inside and loosely outside so.",
                    "label": 0
                },
                {
                    "sent": "Um, you don't lose a lot when the window is comparatively small.",
                    "label": 0
                },
                {
                    "sent": "This is an empirical observation of the linked open data set right now that we also know actually from other.",
                    "label": 0
                },
                {
                    "sent": "Analysis.",
                    "label": 0
                },
                {
                    "sent": "It might change if we would have a richly connected linked data cloud where.",
                    "label": 0
                },
                {
                    "sent": "Each.",
                    "label": 0
                },
                {
                    "sent": "Data source points all over the place very intensively.",
                    "label": 0
                },
                {
                    "sent": "Is it correct?",
                    "label": 0
                },
                {
                    "sent": "Qualitative interpretation of what's just a constant measure?",
                    "label": 0
                },
                {
                    "sent": "Others just because there are fewer links between data set by those necessarily of the same value as the links within the data, I don't know.",
                    "label": 0
                },
                {
                    "sent": "I'm ready.",
                    "label": 0
                },
                {
                    "sent": "Strong reason, whereas they describe last date or whatever they have available.",
                    "label": 0
                },
                {
                    "sent": "Transforming we approach this from a different angle.",
                    "label": 0
                },
                {
                    "sent": "When we were looking for Sparkle, Query Federation and our big problem was that there we did not find.",
                    "label": 0
                },
                {
                    "sent": "And we didn't find empirical query observations from queries over multiple sources, people would.",
                    "label": 0
                },
                {
                    "sent": "Exactly, so it's a chicken and egg thing, and so that's probably the reason why we came up with artificial benchmarks because we couldn't observe it in the wild.",
                    "label": 0
                },
                {
                    "sent": "But you need then this kind of benchmarks to tune your Sparkle Query Federation so that people can do it.",
                    "label": 0
                },
                {
                    "sent": "And of course you need all this kind of structure.",
                    "label": 0
                },
                {
                    "sent": "Finding mechanisms of people even find queries they could do, which brings me actually to my third part of the talk.",
                    "label": 0
                }
            ]
        },
        "clip_58": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so let's that's a very nice transition to the last part.",
                    "label": 0
                }
            ]
        },
        "clip_59": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "My talk, which is only a few slides and then I have to close anyway.",
                    "label": 0
                },
                {
                    "sent": "'cause there the idea really is you have this query and now you have this nice index that helps you to find the right data sources to ask.",
                    "label": 0
                }
            ]
        },
        "clip_60": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "But then you may still easily get zero hits.",
                    "label": 0
                },
                {
                    "sent": "I mean, even if some structure is there, you're not guaranteed to find exactly.",
                    "label": 0
                },
                {
                    "sent": "The answer to, let's say, is their publication of Steven.",
                    "label": 0
                }
            ]
        },
        "clip_61": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Or you may get 1000 hits.",
                    "label": 0
                },
                {
                    "sent": "Yeah, just cause.",
                    "label": 0
                },
                {
                    "sent": "You have uttered a very general answer and you cannot deal with that.",
                    "label": 0
                }
            ]
        },
        "clip_62": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So the question there is how can we help?",
                    "label": 0
                }
            ]
        },
        "clip_63": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And the inspiration there was from the classical web, you have a certain search engine on the classical web and it gives you different kind of ingredients like it shows you how many results it have.",
                    "label": 0
                },
                {
                    "sent": "So you have a feedback whether you did a very clever query or not.",
                    "label": 0
                },
                {
                    "sent": "You have ranked retrieval, not just arbitrary retrieval, but you have some sort of notion of ranking.",
                    "label": 0
                },
                {
                    "sent": "You have a kind of problems, information about where things come from.",
                    "label": 0
                },
                {
                    "sent": "You have result snippets that indicate you some.",
                    "label": 0
                },
                {
                    "sent": "Partial observation that my.",
                    "label": 0
                }
            ]
        },
        "clip_64": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Help you and you have related queries so you can refine, generalize, whatever.",
                    "label": 0
                }
            ]
        },
        "clip_65": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And so we're developing this loadout so environment, given such a sparkle query, however, that's constructed could be also user interface would not need to be the literal sparkle query, but where the sparkle query.",
                    "label": 0
                },
                {
                    "sent": "Is analyzed and then several suggestions are given.",
                    "label": 0
                },
                {
                    "sent": "Of course, first you get the results.",
                    "label": 0
                },
                {
                    "sent": "You have nine data sources that give you something about that for each data source, how many instances you have found.",
                    "label": 1
                },
                {
                    "sent": "So this is some some feedback.",
                    "label": 0
                }
            ]
        },
        "clip_66": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "But this result set size.",
                    "label": 0
                }
            ]
        },
        "clip_67": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Then you have some sort of ranked retrieval.",
                    "label": 0
                },
                {
                    "sent": "We have been exploring different kind of retrieval rankings in the past.",
                    "label": 0
                },
                {
                    "sent": "There's still a lot of work to do to do this in a very generic.",
                    "label": 0
                }
            ]
        },
        "clip_68": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Wait there, references to the.",
                    "label": 0
                }
            ]
        },
        "clip_69": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Data sources, their result snippets sometimes where we think we can do some sort of summary.",
                    "label": 0
                }
            ]
        },
        "clip_70": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And there is.",
                    "label": 0
                },
                {
                    "sent": "Did you mean section where there are some suggestions for removing or adding parts of the quote?",
                    "label": 0
                }
            ]
        },
        "clip_71": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And then you have really.",
                    "label": 0
                }
            ]
        },
        "clip_72": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Queries and again too.",
                    "label": 0
                },
                {
                    "sent": "Actually do this kind of suggestions.",
                    "label": 0
                },
                {
                    "sent": "The schema descriptions that are derived from the data sources are relevant and interesting because what you find here are structures observed in these data items and you can exploit these structures to do suggestions.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_73": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "If.",
                    "label": 0
                },
                {
                    "sent": "In your data sources you have some of these structures.",
                    "label": 0
                },
                {
                    "sent": "You can actually find certain data item combinations.",
                    "label": 0
                },
                {
                    "sent": "You can then add for this data source that you find 200 entities that match this description.",
                    "label": 1
                },
                {
                    "sent": "OK, so immediately you have a feedback about how many piece of information are in this data source, and then of course you may have information for like people frequently do when they do keyword search in the LD cloud.",
                    "label": 0
                },
                {
                    "sent": "You also have some fulltext index where you have information about particular literals used.",
                    "label": 0
                }
            ]
        },
        "clip_74": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so you can put this together and we have for example a sparkle query that asks for something of type C1 and C2 like in documents and in proceedings.",
                    "label": 0
                }
            ]
        },
        "clip_75": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Then you can take this structural information, the index.",
                    "label": 0
                },
                {
                    "sent": "And say, OK, I'm for example here in this type cluster I can refine it this way, or in that way and if I refine in that way, I get this by simulation clusterware property one is used probably 1, maybe being a certain creator.",
                    "label": 0
                }
            ]
        },
        "clip_76": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so you can suggest.",
                    "label": 0
                },
                {
                    "sent": "Not only to use the tool taipings, but also to use other attributes.",
                    "label": 0
                }
            ]
        },
        "clip_77": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And you can do this very quickly because you just have a look above the index.",
                    "label": 0
                },
                {
                    "sent": "You don't have to look at all the different data sources right?",
                    "label": 0
                },
                {
                    "sent": "And so you.",
                    "label": 0
                }
            ]
        },
        "clip_78": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "One refinement and you do maybe another refinement where then the type of this bisimulation property comes into play, so you can really exploit the whole structure for doing meaningful refinements.",
                    "label": 0
                }
            ]
        },
        "clip_79": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, and that's exactly 60 minutes when I come to my conclusion slide.",
                    "label": 0
                },
                {
                    "sent": "What I want to advertise here is not that we sort of like half now accomplished a whole new concept.",
                    "label": 0
                },
                {
                    "sent": "It's rather like we have here some ideas that I want to put 1% to you also for discussion because so I can learn from you as I did already.",
                    "label": 0
                },
                {
                    "sent": "Actually quite a bit with doing this talk and what is important for me here is to look at what have other people done in their areas, data guides in the functional programming world, and to extend the concepts they are having.",
                    "label": 0
                },
                {
                    "sent": "With important assumptions that we do about the linked open data cloud, what are some of these important assumptions?",
                    "label": 0
                },
                {
                    "sent": "For example that linked open data cloud?",
                    "label": 0
                },
                {
                    "sent": "We have data sources all over the place.",
                    "label": 0
                },
                {
                    "sent": "We need an understanding of what's contained in there because we don't have it.",
                    "label": 0
                },
                {
                    "sent": "That's a different assumption than information systems development typically has, and then we need to make this bridging between what is found in these data sources.",
                    "label": 0
                },
                {
                    "sent": "To this traditional programming concepts very very easy.",
                    "label": 0
                },
                {
                    "sent": "Right, it's really a matter of usability for the programmer.",
                    "label": 0
                },
                {
                    "sent": "They should feel at home like with Ruby and Rails or something like that, and not with.",
                    "label": 0
                },
                {
                    "sent": "Putting together funny spark queries where then some type or prevents you from going any further.",
                    "label": 0
                },
                {
                    "sent": "And so the question is, what are the important concepts for doing that?",
                    "label": 0
                },
                {
                    "sent": "So what is suggested here was to really look at particular ways of querying.",
                    "label": 0
                },
                {
                    "sent": "These available data sources.",
                    "label": 0
                },
                {
                    "sent": "And then you need support for doing that for finding the data sources.",
                    "label": 0
                },
                {
                    "sent": "Also for refining the queries for changing the queries, and for that certain type of index is very helpful.",
                    "label": 0
                },
                {
                    "sent": "And then of course you have to do this in a scalable way so you start with.",
                    "label": 0
                },
                {
                    "sent": "With one particular assumption where you want to make the life of the programmer easier.",
                    "label": 0
                },
                {
                    "sent": "Change that assumption and then of course a lot of questions follow up 'cause you need to make it scalable, workable, or the next question comes up about how to do this or that.",
                    "label": 0
                },
                {
                    "sent": "And again, my suggestion to my PhD students and always try to do it as easily with an S naive assumption as possible in the 1st place, and then you build on build from there.",
                    "label": 0
                },
                {
                    "sent": "So we're still on a very nice face.",
                    "label": 0
                },
                {
                    "sent": "Um?",
                    "label": 0
                },
                {
                    "sent": "But I think the concepts that we have at hand for dealing with some of that are quite interesting to deal with.",
                    "label": 0
                },
                {
                    "sent": "The linked open data programming.",
                    "label": 0
                }
            ]
        },
        "clip_80": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Thank you.",
                    "label": 0
                }
            ]
        }
    }
}