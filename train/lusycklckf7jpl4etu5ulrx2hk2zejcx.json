{
    "id": "lusycklckf7jpl4etu5ulrx2hk2zejcx",
    "title": "Semantic Faceted Search with Aggregation and Recursion",
    "info": {
        "author": [
            "Evgeny Sherkhonov, Department of Computer Science, University of Oxford"
        ],
        "published": "Nov. 28, 2017",
        "recorded": "October 2017",
        "category": [
            "Top->Computer Science->Semantic Web"
        ]
    },
    "url": "http://videolectures.net/iswc2017_sherkhonov_semantic_faceted/",
    "segmentation": [
        [
            "I'm going to my name is again.",
            "I'm going to present joint work with bernarde vinegar and I'm going to tell you how fast, well how we extend faster search with new features."
        ],
        [
            "So you've seen already in the last talk, faster interface or faster search system is just very intuitive interface where users can, you know, apply filters and narrow down their search results.",
            "And typically in this scenario, facets are just annotations to document, but it proved very useful.",
            "And very intuitive paradigm for."
        ],
        [
            "Semantic web as well for their data.",
            "And it allows to actually navigate in the graph structure and allows for non expert users to explore the updated actually formulate non non trivial queries without actually knowing what sparkle is.",
            "So here's a screenshot of our system where properties in the graph become facets, and this nesting of us that you see there is actually represents that how we navigate in the graph.",
            "So in this particular scenario we choose smartphones with processors that were produced by companies in San Diego, so on."
        ],
        [
            "Now there has been work on theoretical underpinning of this underlying query language an this paper provided characterization of fastest search queries in terms of faster logic.",
            "So here's an example that the earlier query can actually formulate this faster order query that so we look for.",
            "Smart folks, whoops.",
            "So we look for smartphones has a part that is a professor and this process was produced by a company that has equipped headquarter ideas.",
            "So on an or it is produced by a company with headquarter in San Diego.",
            "So this type of queries that are, you know correspond to this query on the interface.",
            "Now."
        ],
        [
            "Well, the this the authors of the paper actually characterized, you know, the single loud, the key characteristics of this query language is an, so there are the following.",
            "Their fastest quiz actually positive existential queries named their queries that are built using only existentials, conjunction and disjunction.",
            "But they also magic meaning that they only have one free variable.",
            "Intuitively that means you actually at least only a set of entities that you list as.",
            "As a result of this search, second of all, there are three shape, meaning that if you actually construct a graph query there, it has a shape of a tree with a free variable and at the root.",
            "And the third key characteristics that all these chunks in a in a in a disaster subquery.",
            "They're all magic, and they shared the same free variable.",
            "And in fact, these three properties guarantee that when you evaluate, well, computing the answers to such queries actually can be done in polynomial time.",
            "Now.",
            "So we."
        ],
        [
            "We have built a system that you know, implements this query language, but in our spirits.",
            "When using this system, actually we faced with when using real data, it became apparent that some new features section needs to be added so that they they cover something more interesting.",
            "Information needs of users but at the same time this feature still features still intuitive from user interface POV.",
            "So in this work we extent you know we had some new features to faster queries and you know.",
            "Carmella inside the theoretical theoretical foundation of this first query.",
            "How we can emulate this queries and the usual static analysis for of query languages?",
            "So I'm going to."
        ],
        [
            "Play knew how.",
            "What features we add so so consider this example.",
            "So this somewhat more realistic.",
            "Data that we have this information about fonts with their prices and their parts that are produced by some manufacturers, and.",
            "Well, real data actually comes with some numeric data types as well, so we should be able to accommodate some queries like that that will look for smartphones with the price between 500 and 900 pounds and we introduce new feature, well, new construct.",
            "They just compare variables with with numeric values.",
            "So in this particular example would have a variable price that has is greater or equal 500 but less or equal 900.",
            "So have added this feature."
        ],
        [
            "Second feature that we have added is that sometimes we actually need aggregate aggregate data to.",
            "So in this example some phones they have different prices across different food shops, Ann.",
            "So for instance, will look for smartphones that with the maximum price of 500.",
            "So we added this very simple aggregate items of the form or all of the following syntax which actually knows that we look for all this elements that has property price and this price will regulate all possible price of this element and then we aggregate we take a maximum of these values and how this maximally has to be greater equal 500.",
            "So note it is very restrictive form of aggregation, so we don't use the aggregated value somewhere anywhere else in the in the query and we of course include the usual aggregate functions such as count, Min, Max and sum and average.",
            "So we have added this aggregate item."
        ],
        [
            "And the third feature that, well, it is that sometimes you actually as you use this system, you actually need to.",
            "You know you don't have to rely on the structured data as in like for instance if you look for smartphones with processes that produced by North American companies in order to reach from smartphone to North American producer, you have to actually unravel.",
            "Unless this nesting at least five times.",
            "So somehow I wanted to introduce some form of recursion or shortcuts that actually can allow you to jump to, you know North America from smartphones to North America right away at the same time, these features are quite intuitive from user interface point of view, so we added these features next.",
            "And it's transitive closure.",
            "The meaning is that the installation of.",
            "What what is variable is reachable from dissociation of the variable X in the graph.",
            "So we have added this feature now."
        ],
        [
            "Now, how does it look in the interface actually so?",
            "So for comparisons we have added sliders that you can basically select the possible price for aggregates.",
            "Each facet can become aggregate facets, so for instance you have aggregate facet price and then you can say it is now maximum aggregate.",
            "Ann's for reachability item.",
            "You can have like Sergey Box faster that you can enter incontinent so you were looking for companies that allocate it in North America and it will at least you.",
            "Some you know the possible selection values that you can take on.",
            "As in festival Logic, where the the formula looks as follows.",
            "Now know that this aggregate items plus, while it allows to say that maximum price is between 500 and 900.",
            "And that reachability.",
            "8 miss.",
            "Here.",
            "It just says that we actually can reach this.",
            "You know, we find processor that's been affected by a company that is in the continent of North America.",
            "So here we actually use this reachability item."
        ],
        [
            "No, we have extended the language with those three features and the problem that we're studying, the one of the central problems that we're studying is how do we actually compute answers to?",
            "Two such queries.",
            "So the problem is the following.",
            "As input we have a graph, RDF graph and fasted query and we need to compute the answers.",
            "So before actually turning to extend it to how to actually compute answers to extend it faster queries, we need to look at let's let's look at how this algorithm works for just basic, faster queries without those features.",
            "OK, so the remember those three key features that faster queries have his name the city.",
            "T shaped yonassan this restriction disjunction so this becomes very important in their algorithm.",
            "So first of all, this evaluation algorithm actually goes in the bottom up fashion because of the three shapes, you can do that at the very bottom level you have conjunctive tree shape quiz and they're basically basically queries.",
            "They can be answered in polynomial time that's available known technique from the 80s and then.",
            "As you have disjunction for in this example, you have Q1 and Q2.",
            "These are from previous example and there in the junction.",
            "So we basically do you compute so they're both conjunctive queries, so you can compute in polynomial time the answers to both of the queries, and then you can store the Union of this results.",
            "In turn you into a new class and added to the graph, and then you just replace this disjunction with a new item.",
            "And then you go on in the bottom up fashion.",
            "So this circuit is clearly runs in polynomial time.",
            "No."
        ],
        [
            "Let's look at what how actually adapt this idea for extended faster queries.",
            "Now when you actually have this comparison aggregate items, you can you know get rid of them, basically.",
            "How to do this?",
            "We first of all we just replaced such comparisons with new normal items and we add some relevant facts to the old graph for the given graph.",
            "So in this way we obtain a new query that doesn't contain any comparison aggregate items and the answers to this quick over this new graph give actually can be computed, you know?",
            "Well it gives the same result as as the original query over the original beta, so.",
            "In this step, actually reduce answering of this.",
            "Quit is with with comparison aggregate items to query answering over just queries with rich ability items.",
            "So this is the first step that we do now we actually."
        ],
        [
            "Just in a in the bottom of question is before now we end up is at the bottom level.",
            "We end up with three shaped conjunctive queries with only reachability items, and these queries can be again answered in polynomial time.",
            "So since Darrell.",
            "Specific case of strong, so-called strong classic conjunctive curricular particles from graph databases now.",
            "So this can be answered in polynomial time and then we go in the bottom up fashion just like in case of basic faster queries.",
            "So one of the central is also this paper is that actually query answering computing answers can be done pulling normal time.",
            "No."
        ],
        [
            "We also study static analysis of this query language, namely containment to coolant, so this containment is that one queries containing another effect if the results of this of this query our content in the results of the other query over any RDF data.",
            "Likewise equivalent to recycling if they give the same results over any graph.",
            "Now my motivations that optimism query optimization and then you could optimization algorithms would sometimes need to check whether you get sound or.",
            "The same results as the regional query, so so in fact this problem hasn't even been studied for basic faster queries and we can straighten only contained because the two problems actually introduce able to each other.",
            "Now many result of this work is that containment."
        ],
        [
            "Is going to be complete.",
            "Card is already host very for basic, original, faster queries, but and they're very shallow.",
            "If you restrict the only to conjunctive fast with no usage of disjunction then.",
            "Edge increased ability items is already makes this problem can be hard."
        ],
        [
            "No, well, well, something with conversion from Keynote, but the main idea of four complete upper bound is that we have a counterexample.",
            "Small counterexample property.",
            "When you have a counterexample for containment, you can find counterexample of, you know some restricted shape but of polynomial sites.",
            "So this key ingredient for upper bound, sorry for."
        ],
        [
            "So in case of so we also study some tractable cases.",
            "Is recalled that it is already hard when you have conjunctive faster queries with both.",
            "Items next it's transitive closure, but in fact if you just consider them separately, it becomes tractable.",
            "So the idea is that actually we adopt.",
            "It's essentially checking three home or fees with some new things that we have to take care is aggregated and comparison items that they have to be preserved in this home morphism check."
        ],
        [
            "Now also recall that we have.",
            "So the nice thing about the key ingredient for tractability of relation of fast quiz was this distinction that every disjunctive subformula they they shared the same free variable.",
            "So if you actually get rid of this this restriction, it quickly becomes, well, the containment becomes harder.",
            "Alright, these are technical results with."
        ],
        [
            "But we have provided now the as a conclusion.",
            "We have extended faster queries with new features of comparisons, aggregates and reachability in a way that you know accommodate some.",
            "Interesting information needs like to express express them at the same time, there should be intuitive from user interface point of view and we prove that querystring remains tractable in this case and.",
            "We have in fact implemented this features in our system.",
            "We have had the demo couple of days ago and this can be checked on GitHub and we started the containment problem for fragments of extended fast 8 queries and some showed some complexity results as a future work.",
            "We want to find well extend it even more to accommodate some negated information, an impressive ontology, and there's less light on."
        ],
        [
            "Thank you and say that we are hiring.",
            "Please talk to Ian if he's here.",
            "He might have left already.",
            "In that case please email him if you're interested in working with us.",
            "Thank you.",
            "Question is about the way you select the facets.",
            "So how do you select the right properties for Facets Drive properties for fast?",
            "What does this mean?",
            "So yeah, so in this system, at least like not from political point of view, but from the system.",
            "Well, you'll autograph and just it sees what kind of properties are there and would give you.",
            "So properties become fastest now, so you manually select those properties, not manually, so it's just automatically out there just with as you navigate in the in the graph.",
            "It just shows you where you control which properties are available out there and is it possible to switch between different entity types?",
            "Entity types.",
            "Well, so there is a.",
            "Let me show you in the interface.",
            "So you see, this prices has a slider, so it actually detects that there is a numeric data type.",
            "While in like string one it would just see possible values, so there is some in the system at least there is some you know detection of what kind of entities are either numeric literal.",
            "So just string values.",
            "But my question was if for example you're looking at a person and then there is a relation to an organization, can you switch to the other entity like organization like Pivot?",
            "Sure yeah so it's not mentioned in the as a feature of this system.",
            "You can actually.",
            "See what the witness was for the next step.",
            "Yeah, there is a some sort of refocusing.",
            "So you can actually see that you have organization from, so you you find for instance employees try to find employees of that particular organization, but it shows you only employees right now you can click in this navigation.",
            "There's a navigation map on organization and you could see a list of organizations that actually you know, employ those employees, and so suppose you're in the setting when you have mobile phones and in the graph you have different colors for this phone.",
            "So basically whoever has color property with different values so and then you are as a user interested in finding.",
            "All mobile phones that have at least three different colors.",
            "Will it be possible to inject it somehow in this faceted search, or is it something that would be complex to realize in general?",
            "Or what would be, you know, obstacles that no, that's so if a phone has, like you know, three people not interested, you are not interested in the concrete cars, but just in the numbers.",
            "So yeah, so you would have, so you'd have a property color like like you have three ages from a smart phone of three different colors, so that would have actually facet like this here would be color and then it would have, you'd say.",
            "Count, aggregate and then you do this.",
            "Basically that you do already right?",
            "Yeah, so you'd say it would become not maximal, but count aggregate right?",
            "And then you could say at least easily extendable.",
            "Well, it's you can actually connect if you have the data.",
            "If you load, that'll work.",
            "So that's that's OK. Ha."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I'm going to my name is again.",
                    "label": 0
                },
                {
                    "sent": "I'm going to present joint work with bernarde vinegar and I'm going to tell you how fast, well how we extend faster search with new features.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So you've seen already in the last talk, faster interface or faster search system is just very intuitive interface where users can, you know, apply filters and narrow down their search results.",
                    "label": 0
                },
                {
                    "sent": "And typically in this scenario, facets are just annotations to document, but it proved very useful.",
                    "label": 1
                },
                {
                    "sent": "And very intuitive paradigm for.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Semantic web as well for their data.",
                    "label": 1
                },
                {
                    "sent": "And it allows to actually navigate in the graph structure and allows for non expert users to explore the updated actually formulate non non trivial queries without actually knowing what sparkle is.",
                    "label": 1
                },
                {
                    "sent": "So here's a screenshot of our system where properties in the graph become facets, and this nesting of us that you see there is actually represents that how we navigate in the graph.",
                    "label": 0
                },
                {
                    "sent": "So in this particular scenario we choose smartphones with processors that were produced by companies in San Diego, so on.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Now there has been work on theoretical underpinning of this underlying query language an this paper provided characterization of fastest search queries in terms of faster logic.",
                    "label": 0
                },
                {
                    "sent": "So here's an example that the earlier query can actually formulate this faster order query that so we look for.",
                    "label": 0
                },
                {
                    "sent": "Smart folks, whoops.",
                    "label": 0
                },
                {
                    "sent": "So we look for smartphones has a part that is a professor and this process was produced by a company that has equipped headquarter ideas.",
                    "label": 0
                },
                {
                    "sent": "So on an or it is produced by a company with headquarter in San Diego.",
                    "label": 0
                },
                {
                    "sent": "So this type of queries that are, you know correspond to this query on the interface.",
                    "label": 0
                },
                {
                    "sent": "Now.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Well, the this the authors of the paper actually characterized, you know, the single loud, the key characteristics of this query language is an, so there are the following.",
                    "label": 0
                },
                {
                    "sent": "Their fastest quiz actually positive existential queries named their queries that are built using only existentials, conjunction and disjunction.",
                    "label": 0
                },
                {
                    "sent": "But they also magic meaning that they only have one free variable.",
                    "label": 0
                },
                {
                    "sent": "Intuitively that means you actually at least only a set of entities that you list as.",
                    "label": 0
                },
                {
                    "sent": "As a result of this search, second of all, there are three shape, meaning that if you actually construct a graph query there, it has a shape of a tree with a free variable and at the root.",
                    "label": 0
                },
                {
                    "sent": "And the third key characteristics that all these chunks in a in a in a disaster subquery.",
                    "label": 0
                },
                {
                    "sent": "They're all magic, and they shared the same free variable.",
                    "label": 1
                },
                {
                    "sent": "And in fact, these three properties guarantee that when you evaluate, well, computing the answers to such queries actually can be done in polynomial time.",
                    "label": 0
                },
                {
                    "sent": "Now.",
                    "label": 0
                },
                {
                    "sent": "So we.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We have built a system that you know, implements this query language, but in our spirits.",
                    "label": 0
                },
                {
                    "sent": "When using this system, actually we faced with when using real data, it became apparent that some new features section needs to be added so that they they cover something more interesting.",
                    "label": 0
                },
                {
                    "sent": "Information needs of users but at the same time this feature still features still intuitive from user interface POV.",
                    "label": 0
                },
                {
                    "sent": "So in this work we extent you know we had some new features to faster queries and you know.",
                    "label": 0
                },
                {
                    "sent": "Carmella inside the theoretical theoretical foundation of this first query.",
                    "label": 0
                },
                {
                    "sent": "How we can emulate this queries and the usual static analysis for of query languages?",
                    "label": 1
                },
                {
                    "sent": "So I'm going to.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Play knew how.",
                    "label": 0
                },
                {
                    "sent": "What features we add so so consider this example.",
                    "label": 0
                },
                {
                    "sent": "So this somewhat more realistic.",
                    "label": 0
                },
                {
                    "sent": "Data that we have this information about fonts with their prices and their parts that are produced by some manufacturers, and.",
                    "label": 0
                },
                {
                    "sent": "Well, real data actually comes with some numeric data types as well, so we should be able to accommodate some queries like that that will look for smartphones with the price between 500 and 900 pounds and we introduce new feature, well, new construct.",
                    "label": 1
                },
                {
                    "sent": "They just compare variables with with numeric values.",
                    "label": 0
                },
                {
                    "sent": "So in this particular example would have a variable price that has is greater or equal 500 but less or equal 900.",
                    "label": 0
                },
                {
                    "sent": "So have added this feature.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Second feature that we have added is that sometimes we actually need aggregate aggregate data to.",
                    "label": 0
                },
                {
                    "sent": "So in this example some phones they have different prices across different food shops, Ann.",
                    "label": 0
                },
                {
                    "sent": "So for instance, will look for smartphones that with the maximum price of 500.",
                    "label": 1
                },
                {
                    "sent": "So we added this very simple aggregate items of the form or all of the following syntax which actually knows that we look for all this elements that has property price and this price will regulate all possible price of this element and then we aggregate we take a maximum of these values and how this maximally has to be greater equal 500.",
                    "label": 0
                },
                {
                    "sent": "So note it is very restrictive form of aggregation, so we don't use the aggregated value somewhere anywhere else in the in the query and we of course include the usual aggregate functions such as count, Min, Max and sum and average.",
                    "label": 0
                },
                {
                    "sent": "So we have added this aggregate item.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And the third feature that, well, it is that sometimes you actually as you use this system, you actually need to.",
                    "label": 0
                },
                {
                    "sent": "You know you don't have to rely on the structured data as in like for instance if you look for smartphones with processes that produced by North American companies in order to reach from smartphone to North American producer, you have to actually unravel.",
                    "label": 1
                },
                {
                    "sent": "Unless this nesting at least five times.",
                    "label": 0
                },
                {
                    "sent": "So somehow I wanted to introduce some form of recursion or shortcuts that actually can allow you to jump to, you know North America from smartphones to North America right away at the same time, these features are quite intuitive from user interface point of view, so we added these features next.",
                    "label": 0
                },
                {
                    "sent": "And it's transitive closure.",
                    "label": 0
                },
                {
                    "sent": "The meaning is that the installation of.",
                    "label": 0
                },
                {
                    "sent": "What what is variable is reachable from dissociation of the variable X in the graph.",
                    "label": 0
                },
                {
                    "sent": "So we have added this feature now.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Now, how does it look in the interface actually so?",
                    "label": 0
                },
                {
                    "sent": "So for comparisons we have added sliders that you can basically select the possible price for aggregates.",
                    "label": 0
                },
                {
                    "sent": "Each facet can become aggregate facets, so for instance you have aggregate facet price and then you can say it is now maximum aggregate.",
                    "label": 0
                },
                {
                    "sent": "Ann's for reachability item.",
                    "label": 0
                },
                {
                    "sent": "You can have like Sergey Box faster that you can enter incontinent so you were looking for companies that allocate it in North America and it will at least you.",
                    "label": 0
                },
                {
                    "sent": "Some you know the possible selection values that you can take on.",
                    "label": 0
                },
                {
                    "sent": "As in festival Logic, where the the formula looks as follows.",
                    "label": 0
                },
                {
                    "sent": "Now know that this aggregate items plus, while it allows to say that maximum price is between 500 and 900.",
                    "label": 0
                },
                {
                    "sent": "And that reachability.",
                    "label": 0
                },
                {
                    "sent": "8 miss.",
                    "label": 0
                },
                {
                    "sent": "Here.",
                    "label": 0
                },
                {
                    "sent": "It just says that we actually can reach this.",
                    "label": 0
                },
                {
                    "sent": "You know, we find processor that's been affected by a company that is in the continent of North America.",
                    "label": 0
                },
                {
                    "sent": "So here we actually use this reachability item.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "No, we have extended the language with those three features and the problem that we're studying, the one of the central problems that we're studying is how do we actually compute answers to?",
                    "label": 0
                },
                {
                    "sent": "Two such queries.",
                    "label": 0
                },
                {
                    "sent": "So the problem is the following.",
                    "label": 0
                },
                {
                    "sent": "As input we have a graph, RDF graph and fasted query and we need to compute the answers.",
                    "label": 0
                },
                {
                    "sent": "So before actually turning to extend it to how to actually compute answers to extend it faster queries, we need to look at let's let's look at how this algorithm works for just basic, faster queries without those features.",
                    "label": 0
                },
                {
                    "sent": "OK, so the remember those three key features that faster queries have his name the city.",
                    "label": 0
                },
                {
                    "sent": "T shaped yonassan this restriction disjunction so this becomes very important in their algorithm.",
                    "label": 0
                },
                {
                    "sent": "So first of all, this evaluation algorithm actually goes in the bottom up fashion because of the three shapes, you can do that at the very bottom level you have conjunctive tree shape quiz and they're basically basically queries.",
                    "label": 0
                },
                {
                    "sent": "They can be answered in polynomial time that's available known technique from the 80s and then.",
                    "label": 1
                },
                {
                    "sent": "As you have disjunction for in this example, you have Q1 and Q2.",
                    "label": 0
                },
                {
                    "sent": "These are from previous example and there in the junction.",
                    "label": 0
                },
                {
                    "sent": "So we basically do you compute so they're both conjunctive queries, so you can compute in polynomial time the answers to both of the queries, and then you can store the Union of this results.",
                    "label": 1
                },
                {
                    "sent": "In turn you into a new class and added to the graph, and then you just replace this disjunction with a new item.",
                    "label": 0
                },
                {
                    "sent": "And then you go on in the bottom up fashion.",
                    "label": 0
                },
                {
                    "sent": "So this circuit is clearly runs in polynomial time.",
                    "label": 0
                },
                {
                    "sent": "No.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Let's look at what how actually adapt this idea for extended faster queries.",
                    "label": 1
                },
                {
                    "sent": "Now when you actually have this comparison aggregate items, you can you know get rid of them, basically.",
                    "label": 0
                },
                {
                    "sent": "How to do this?",
                    "label": 0
                },
                {
                    "sent": "We first of all we just replaced such comparisons with new normal items and we add some relevant facts to the old graph for the given graph.",
                    "label": 0
                },
                {
                    "sent": "So in this way we obtain a new query that doesn't contain any comparison aggregate items and the answers to this quick over this new graph give actually can be computed, you know?",
                    "label": 0
                },
                {
                    "sent": "Well it gives the same result as as the original query over the original beta, so.",
                    "label": 0
                },
                {
                    "sent": "In this step, actually reduce answering of this.",
                    "label": 1
                },
                {
                    "sent": "Quit is with with comparison aggregate items to query answering over just queries with rich ability items.",
                    "label": 0
                },
                {
                    "sent": "So this is the first step that we do now we actually.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Just in a in the bottom of question is before now we end up is at the bottom level.",
                    "label": 0
                },
                {
                    "sent": "We end up with three shaped conjunctive queries with only reachability items, and these queries can be again answered in polynomial time.",
                    "label": 1
                },
                {
                    "sent": "So since Darrell.",
                    "label": 0
                },
                {
                    "sent": "Specific case of strong, so-called strong classic conjunctive curricular particles from graph databases now.",
                    "label": 1
                },
                {
                    "sent": "So this can be answered in polynomial time and then we go in the bottom up fashion just like in case of basic faster queries.",
                    "label": 0
                },
                {
                    "sent": "So one of the central is also this paper is that actually query answering computing answers can be done pulling normal time.",
                    "label": 0
                },
                {
                    "sent": "No.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We also study static analysis of this query language, namely containment to coolant, so this containment is that one queries containing another effect if the results of this of this query our content in the results of the other query over any RDF data.",
                    "label": 0
                },
                {
                    "sent": "Likewise equivalent to recycling if they give the same results over any graph.",
                    "label": 1
                },
                {
                    "sent": "Now my motivations that optimism query optimization and then you could optimization algorithms would sometimes need to check whether you get sound or.",
                    "label": 0
                },
                {
                    "sent": "The same results as the regional query, so so in fact this problem hasn't even been studied for basic faster queries and we can straighten only contained because the two problems actually introduce able to each other.",
                    "label": 1
                },
                {
                    "sent": "Now many result of this work is that containment.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Is going to be complete.",
                    "label": 0
                },
                {
                    "sent": "Card is already host very for basic, original, faster queries, but and they're very shallow.",
                    "label": 0
                },
                {
                    "sent": "If you restrict the only to conjunctive fast with no usage of disjunction then.",
                    "label": 0
                },
                {
                    "sent": "Edge increased ability items is already makes this problem can be hard.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "No, well, well, something with conversion from Keynote, but the main idea of four complete upper bound is that we have a counterexample.",
                    "label": 0
                },
                {
                    "sent": "Small counterexample property.",
                    "label": 0
                },
                {
                    "sent": "When you have a counterexample for containment, you can find counterexample of, you know some restricted shape but of polynomial sites.",
                    "label": 1
                },
                {
                    "sent": "So this key ingredient for upper bound, sorry for.",
                    "label": 1
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So in case of so we also study some tractable cases.",
                    "label": 1
                },
                {
                    "sent": "Is recalled that it is already hard when you have conjunctive faster queries with both.",
                    "label": 0
                },
                {
                    "sent": "Items next it's transitive closure, but in fact if you just consider them separately, it becomes tractable.",
                    "label": 0
                },
                {
                    "sent": "So the idea is that actually we adopt.",
                    "label": 0
                },
                {
                    "sent": "It's essentially checking three home or fees with some new things that we have to take care is aggregated and comparison items that they have to be preserved in this home morphism check.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Now also recall that we have.",
                    "label": 0
                },
                {
                    "sent": "So the nice thing about the key ingredient for tractability of relation of fast quiz was this distinction that every disjunctive subformula they they shared the same free variable.",
                    "label": 1
                },
                {
                    "sent": "So if you actually get rid of this this restriction, it quickly becomes, well, the containment becomes harder.",
                    "label": 0
                },
                {
                    "sent": "Alright, these are technical results with.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "But we have provided now the as a conclusion.",
                    "label": 0
                },
                {
                    "sent": "We have extended faster queries with new features of comparisons, aggregates and reachability in a way that you know accommodate some.",
                    "label": 1
                },
                {
                    "sent": "Interesting information needs like to express express them at the same time, there should be intuitive from user interface point of view and we prove that querystring remains tractable in this case and.",
                    "label": 0
                },
                {
                    "sent": "We have in fact implemented this features in our system.",
                    "label": 1
                },
                {
                    "sent": "We have had the demo couple of days ago and this can be checked on GitHub and we started the containment problem for fragments of extended fast 8 queries and some showed some complexity results as a future work.",
                    "label": 0
                },
                {
                    "sent": "We want to find well extend it even more to accommodate some negated information, an impressive ontology, and there's less light on.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Thank you and say that we are hiring.",
                    "label": 0
                },
                {
                    "sent": "Please talk to Ian if he's here.",
                    "label": 0
                },
                {
                    "sent": "He might have left already.",
                    "label": 0
                },
                {
                    "sent": "In that case please email him if you're interested in working with us.",
                    "label": 0
                },
                {
                    "sent": "Thank you.",
                    "label": 0
                },
                {
                    "sent": "Question is about the way you select the facets.",
                    "label": 0
                },
                {
                    "sent": "So how do you select the right properties for Facets Drive properties for fast?",
                    "label": 0
                },
                {
                    "sent": "What does this mean?",
                    "label": 0
                },
                {
                    "sent": "So yeah, so in this system, at least like not from political point of view, but from the system.",
                    "label": 0
                },
                {
                    "sent": "Well, you'll autograph and just it sees what kind of properties are there and would give you.",
                    "label": 0
                },
                {
                    "sent": "So properties become fastest now, so you manually select those properties, not manually, so it's just automatically out there just with as you navigate in the in the graph.",
                    "label": 0
                },
                {
                    "sent": "It just shows you where you control which properties are available out there and is it possible to switch between different entity types?",
                    "label": 0
                },
                {
                    "sent": "Entity types.",
                    "label": 0
                },
                {
                    "sent": "Well, so there is a.",
                    "label": 0
                },
                {
                    "sent": "Let me show you in the interface.",
                    "label": 0
                },
                {
                    "sent": "So you see, this prices has a slider, so it actually detects that there is a numeric data type.",
                    "label": 0
                },
                {
                    "sent": "While in like string one it would just see possible values, so there is some in the system at least there is some you know detection of what kind of entities are either numeric literal.",
                    "label": 0
                },
                {
                    "sent": "So just string values.",
                    "label": 0
                },
                {
                    "sent": "But my question was if for example you're looking at a person and then there is a relation to an organization, can you switch to the other entity like organization like Pivot?",
                    "label": 0
                },
                {
                    "sent": "Sure yeah so it's not mentioned in the as a feature of this system.",
                    "label": 0
                },
                {
                    "sent": "You can actually.",
                    "label": 0
                },
                {
                    "sent": "See what the witness was for the next step.",
                    "label": 0
                },
                {
                    "sent": "Yeah, there is a some sort of refocusing.",
                    "label": 0
                },
                {
                    "sent": "So you can actually see that you have organization from, so you you find for instance employees try to find employees of that particular organization, but it shows you only employees right now you can click in this navigation.",
                    "label": 0
                },
                {
                    "sent": "There's a navigation map on organization and you could see a list of organizations that actually you know, employ those employees, and so suppose you're in the setting when you have mobile phones and in the graph you have different colors for this phone.",
                    "label": 0
                },
                {
                    "sent": "So basically whoever has color property with different values so and then you are as a user interested in finding.",
                    "label": 0
                },
                {
                    "sent": "All mobile phones that have at least three different colors.",
                    "label": 0
                },
                {
                    "sent": "Will it be possible to inject it somehow in this faceted search, or is it something that would be complex to realize in general?",
                    "label": 0
                },
                {
                    "sent": "Or what would be, you know, obstacles that no, that's so if a phone has, like you know, three people not interested, you are not interested in the concrete cars, but just in the numbers.",
                    "label": 0
                },
                {
                    "sent": "So yeah, so you would have, so you'd have a property color like like you have three ages from a smart phone of three different colors, so that would have actually facet like this here would be color and then it would have, you'd say.",
                    "label": 0
                },
                {
                    "sent": "Count, aggregate and then you do this.",
                    "label": 0
                },
                {
                    "sent": "Basically that you do already right?",
                    "label": 0
                },
                {
                    "sent": "Yeah, so you'd say it would become not maximal, but count aggregate right?",
                    "label": 0
                },
                {
                    "sent": "And then you could say at least easily extendable.",
                    "label": 0
                },
                {
                    "sent": "Well, it's you can actually connect if you have the data.",
                    "label": 0
                },
                {
                    "sent": "If you load, that'll work.",
                    "label": 0
                },
                {
                    "sent": "So that's that's OK. Ha.",
                    "label": 0
                }
            ]
        }
    }
}