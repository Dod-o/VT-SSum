{
    "id": "vmexm6f2hiudmdx37cw2dppbltqp5czc",
    "title": "Real-time Urban Monitoring in Dublin using Semantic and Stream Technologies",
    "info": {
        "author": [
            "Spyros Kotoulas, IBM Research"
        ],
        "published": "Nov. 28, 2013",
        "recorded": "October 2013",
        "category": [
            "Top->Business->Management->Knowledge Management",
            "Top->Computer Science->Semantic Web"
        ]
    },
    "url": "http://videolectures.net/iswc2013_kotoulas_stream_technologies/",
    "segmentation": [
        [
            "Good afternoon, I am speakers, controllers from IBM Research Island.",
            "This work is in collaboration with the Department of Computer Science, University of Bologna.",
            "Actually, most of the work was done, obviously by the 1st author when he was doing an interesting, but I'm being racist.",
            "We liked it so much that we had him by the way.",
            "So in an."
        ],
        [
            "Cancel what I am going to talk about.",
            "I will start with the use case in every city you have hundreds of CCTV cameras, hundreds or thousands.",
            "In some cities even have 10s of thousands.",
            "But all of these cameras there is.",
            "They have some context you can monitor it's camera individually if you want, but that's quite expensive.",
            "So what if we can look at the sensors around the camera to select which one is the most relevant one?",
            "So we started from this use case.",
            "An would be, let's say the technology around the use case.",
            "So what we did is we took some come on continuous partial query languages.",
            "Of course we extended them with whatever we need it and we implemented an engine on top of an enter commercial system from IBM, IBM Infosphere streams."
        ],
        [
            "The talk will go as follows.",
            "Or will this?",
            "I will describe the use case then I will.",
            "So what are the general problems requirements that we have to address?",
            "Then of course our sparkle extension, the query engine that we're using and then how we are using some inferencing on top of this and then as well then I will show a video demo of the resulting system.",
            "So this is an in use paper so I will try to keep it as practical as possible so will focus more on the implementation and the actual use case than the theory behind it.",
            "But you can find more detail in the paper."
        ],
        [
            "So CCTV camera so you have the CCTV cameras, you have sensors, you have thousands of rates of 10s of thousands of it's one thing that cities do is they monitor the Vader streams from the CCTV cameras.",
            "You can do it.",
            "You can do this in one of the following ways.",
            "You can have people looking at the cameras and then you can have your passion.",
            "Maybe you can monitor other ten 1520 video streams.",
            "So this is quite expensive because you need lots of people.",
            "All you can have computers doing that.",
            "So state of the art in video processing techniques, machine vision techniques they require, typically around one CPU core by camera.",
            "So you can imagine that if you have a city, you would need a data center just to process all of this information and try to derive conclusions from the video feed.",
            "So what if we can make a preselection of the cameras to monitor using context?",
            "So using what is happening around it?",
            "We have an idea what is happening around it because we have sensors in the city, we know where the buses are.",
            "For example, we know the weather is more pollution.",
            "We know where different amenities are."
        ],
        [
            "To solve this problem, to support this use case, we have a set of problems.",
            "First of all, the content that we have to access is more or less unknown.",
            "There can be many sensors that can be about anything they can come from different sources that can be the volume of information that you have can be quite significant, and all of this information is dynamic and you want to do this in quite another."
        ],
        [
            "Wait, I so we have all of these things.",
            "You can easily add more streams in the system.",
            "Some streams will go down.",
            "Then somebody will want to make the selection in a different way.",
            "So we need to be able to support let's say in an easy way to do this election.",
            "And in this for this, another link, data technologies are quite useful.",
            "Let's say in addition you would want you don't want to, let's say to program your selection algorithm for months and months and months so.",
            "At the clarity love language would be quite useful.",
            "More stream processing systems have physical languages, so you have to place operators yourself and you have to connect inputs, outputs, etc.",
            "And declarative language would be quite useful as well.",
            "Now, since we're in the city context and we have different additional domain knowledge, why not use some reasoning?",
            "So we maybe we can do some in France, for example, I might want to select the camera that is close to schools and then all those.",
            "Close to educational institutions.",
            "Maybe someday if anything over there will be useful.",
            "So if I know that the primary school is a type of an educational institution, I may say I may have more important public safety issues around educational institutions.",
            "So let's focus that.",
            "And finally, we need to do that with good performance, and for this reason we have used names in from IBM called IBM Infosphere streams."
        ],
        [
            "So we look at different continuous Sparkle query languages and I'm pretty sure that the authors for all of the languages are in the room, so will not say anything bad about them and we look at different features that they have.",
            "So OK there is, there's probably some of these cells might be wrong, right?",
            "But what we really need?",
            "It was a way to easily access streams that were not RDF.",
            "So to be able to access CSV streams, for example because most of the information did come into CSV streams.",
            "And we wanted to do that in a declarative language.",
            "So one thing we did was extend make our own extension to support the CSV streams while still being able to do RDF waiting.",
            "In addition, that maybe detail is we wanted for reason for performance reasons to be able to process data in the entire graph.",
            "So we did not want to go at a very low level.",
            "We did not want to define our windows at a very low level, but we wanted a high level of aggregation so."
        ],
        [
            "This is a grammar over the language that we made.",
            "It's very similar to other other languages.",
            "There is nothing so special about it.",
            "The main thing behind it is that we can support these heterogenous dreams."
        ],
        [
            "And the query example from this language, so this query over here will just look in Dublin.",
            "You have this shared bike scheme there different station.",
            "So what this query will do is every 20 seconds it will calculate the average of bike availability.",
            "Now if you look over there you will see that we can support the CSV stream and we have our own kind of arbitrary syntax to pick columns from CSV and map it variable since party."
        ],
        [
            "Now we have the language we need the engine IBM already has sending, so it has the IBM Infosphere streams.",
            "I IBM Infosphere Streams is a stream processing system that focuses on low latency and very very high throughput.",
            "So we typically you would typically use this on a cluster and you can.",
            "You can parallelize things.",
            "You can paralyze your operator.",
            "Popular pipeline, for example.",
            "You can have different operators running quantified machines, but you can also parallel parallelize individual operators so you can make a parallel join, for example.",
            "It is quite powerful and quite extensively so.",
            "You can add your own adapters.",
            "You can put your own code.",
            "You can use operators at it already has.",
            "You can connect different systems etc."
        ],
        [
            "The general, let's say architecture of papers with stream 'cause as follows.",
            "You have a repository of operators and adapters.",
            "These operators can be joins at the space and let their spatial joins, etc etc etc.",
            "There's an entire library of these operators.",
            "Now you combine all of these operators using language called SPL.",
            "In a similar way, with most embarrassing language, so you you cook the outputs of some operators so the inputs of some other operators, then the system goes and compiles.",
            "The code typically uses a C++ compilation into executables and it tries to put as many operators as possible in the process and distributes these processes around the cluster."
        ],
        [
            "Now we have our declarative language.",
            "Then we have info systems, which is a physical language, but we need to do is to translate our queries into this physical language."
        ],
        [
            "One thing that you have, so why wouldn't want to do that?",
            "Why would we not just write everything initially streams in the 1st place?",
            "Because it is quite verbose, so the query that I had over there would translate to 300 lines of FPL code because you would have to express his join individual independently and so on."
        ],
        [
            "We have different kinds of input nodes.",
            "For example, if we have the CSV node will limit everything has three plus if we have."
        ],
        [
            "An nodes that are typical RDF joins who would split the input and then do the joints of an 18 dependent input and so on."
        ],
        [
            "As I mentioned, we already will.",
            "You also wanted to do some inferencing, so we wanted for example to use amenity hierarchies in order to get more useful information so."
        ],
        [
            "Let's talk just a bit about our DFS.",
            "Reasoning constrains the easy, the easiest way to do it is you take the rule set with the Express is us joins in your stream processing language and your cash.",
            "It's quite this could be quite simple implementation, But the problem is it has quite bad performance because exactly of sending these tables around again and again and again."
        ],
        [
            "One relatively straightforward optimization is to be a bit smarter about what kind of information you feed back to the system.",
            "For example, if you look."
        ],
        [
            "There are the FSA ruler two.",
            "It will produce triples at how we have domain as a predicate.",
            "And obviously this day at the federal tool we have produced ripples at half type as a predicate.",
            "And obviously if it has a type as a predicate, it will never be fed to rule 11, because really, Levin explained X expects some."
        ],
        [
            "Glass and as a predicate, so you can immediately, let's say, reject some of the feedback in the system.",
            "Now, if you take into consideration some ontology hijacking principles, you can do the entire thing without having to do any indication at all.",
            "No, OK, this worked and this was much faster than the.",
            "And then the full location.",
            "But somehow it somehow feels wrong for stream reasoning becausw in streams, we typically know the query in advance, so somehow not optimizing for the actual query seems wrong so."
        ],
        [
            "We started looking at backward chaining and said OK, maybe we can do backwards saying in a stream fully fledged backward training we did not achieve to be honest and the reason was that the let's say pipelines that you have any stream processing system they are you cannot rate change them at runtime.",
            "So you have to do it.",
            "You have to have them in advance and then expressing the barcode training in terms of a fixed network of operators we did not manage to do it.",
            "I'm not really sure whether it is possible or it's not possible.",
            "I know that we did not manage so we went for some.",
            "Hybrid approach, so we extended the approach that we had where you say OK, this role can fit only to that rule, to also to particular inputs.",
            "So we will look at the query.",
            "We look at the different statement patterns that we have and we will see how this.",
            "What could possibly infer the statement pattern."
        ],
        [
            "We tried the performance on this on the modified the LBM benchmark.",
            "I will not go in great detail but within a single machine we could process some 10s of thousands of triples per second.",
            "The hybrid approach was faster in most cases, just a bit faster because that's the joints were smaller.",
            "In some other cases that it was much faster becausw it would just prune a very large part of this."
        ],
        [
            "Dead Space.",
            "No, let's go back to the main idea of selecting cameras.",
            "OK, so we took all the information from Dublin City.",
            "We took actually real data from Dublin City.",
            "We kept multiple Windows and would check for changes in the environment and according to these changes.",
            "And we would select the most."
        ],
        [
            "On camera, so the input data that we had would be the location of buses, pollution sensors, noise sensor, availability of bio of said bikes, and so on."
        ],
        [
            "Now what this way that we made in order to do this was quite nasty.",
            "If it was 500 lines, but the the equivalent SPL networks or the equivalent actual language in info systems will be seven and a half thousand lines, so that."
        ],
        [
            "Was quite good that we could reduce it by 15 times.",
            "Let's see a video of how this works, so this is Dublin.",
            "We will start looking cut different different data sources that we have in the city so.",
            "A green one would be the bike availability.",
            "The blue will be buses that are congested in the city, and noise sensor, pollution sensor amenities, and then the yellow arrows refer to cameras.",
            "So they start popping up.",
            "These are all and they had one hour different amenities in the system and these are all the public safety cameras in Dublin and now we'll see the system in action.",
            "Let's say selecting the most relevant ones.",
            "And this is, I think, over a period of one day.",
            "So we have different input in the system and now we select the most interesting one.",
            "So this is to validate it.",
            "The area in the center that most of the cameras are concentrated in is actually where most of the bars in Dublin are.",
            "And then you have the biggest changes in the environment."
        ],
        [
            "And to conclude, we made a new variant of streaming Spark to supported in this input we have shown that our language can dramatically decrease development time by just having more concise queries and reasoning, and we demonstrated this on real data in Dublin to make a hopefully useful application."
        ],
        [
            "Finally at work.",
            "At least I got IBM, so if you really like the work or you didn't like it at all, like you think that you can do better, please consider it.",
            "Thank you."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Good afternoon, I am speakers, controllers from IBM Research Island.",
                    "label": 0
                },
                {
                    "sent": "This work is in collaboration with the Department of Computer Science, University of Bologna.",
                    "label": 1
                },
                {
                    "sent": "Actually, most of the work was done, obviously by the 1st author when he was doing an interesting, but I'm being racist.",
                    "label": 0
                },
                {
                    "sent": "We liked it so much that we had him by the way.",
                    "label": 0
                },
                {
                    "sent": "So in an.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Cancel what I am going to talk about.",
                    "label": 0
                },
                {
                    "sent": "I will start with the use case in every city you have hundreds of CCTV cameras, hundreds or thousands.",
                    "label": 0
                },
                {
                    "sent": "In some cities even have 10s of thousands.",
                    "label": 0
                },
                {
                    "sent": "But all of these cameras there is.",
                    "label": 0
                },
                {
                    "sent": "They have some context you can monitor it's camera individually if you want, but that's quite expensive.",
                    "label": 0
                },
                {
                    "sent": "So what if we can look at the sensors around the camera to select which one is the most relevant one?",
                    "label": 0
                },
                {
                    "sent": "So we started from this use case.",
                    "label": 0
                },
                {
                    "sent": "An would be, let's say the technology around the use case.",
                    "label": 0
                },
                {
                    "sent": "So what we did is we took some come on continuous partial query languages.",
                    "label": 0
                },
                {
                    "sent": "Of course we extended them with whatever we need it and we implemented an engine on top of an enter commercial system from IBM, IBM Infosphere streams.",
                    "label": 1
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "The talk will go as follows.",
                    "label": 1
                },
                {
                    "sent": "Or will this?",
                    "label": 0
                },
                {
                    "sent": "I will describe the use case then I will.",
                    "label": 1
                },
                {
                    "sent": "So what are the general problems requirements that we have to address?",
                    "label": 0
                },
                {
                    "sent": "Then of course our sparkle extension, the query engine that we're using and then how we are using some inferencing on top of this and then as well then I will show a video demo of the resulting system.",
                    "label": 0
                },
                {
                    "sent": "So this is an in use paper so I will try to keep it as practical as possible so will focus more on the implementation and the actual use case than the theory behind it.",
                    "label": 0
                },
                {
                    "sent": "But you can find more detail in the paper.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So CCTV camera so you have the CCTV cameras, you have sensors, you have thousands of rates of 10s of thousands of it's one thing that cities do is they monitor the Vader streams from the CCTV cameras.",
                    "label": 0
                },
                {
                    "sent": "You can do it.",
                    "label": 0
                },
                {
                    "sent": "You can do this in one of the following ways.",
                    "label": 0
                },
                {
                    "sent": "You can have people looking at the cameras and then you can have your passion.",
                    "label": 0
                },
                {
                    "sent": "Maybe you can monitor other ten 1520 video streams.",
                    "label": 1
                },
                {
                    "sent": "So this is quite expensive because you need lots of people.",
                    "label": 0
                },
                {
                    "sent": "All you can have computers doing that.",
                    "label": 0
                },
                {
                    "sent": "So state of the art in video processing techniques, machine vision techniques they require, typically around one CPU core by camera.",
                    "label": 0
                },
                {
                    "sent": "So you can imagine that if you have a city, you would need a data center just to process all of this information and try to derive conclusions from the video feed.",
                    "label": 0
                },
                {
                    "sent": "So what if we can make a preselection of the cameras to monitor using context?",
                    "label": 1
                },
                {
                    "sent": "So using what is happening around it?",
                    "label": 0
                },
                {
                    "sent": "We have an idea what is happening around it because we have sensors in the city, we know where the buses are.",
                    "label": 0
                },
                {
                    "sent": "For example, we know the weather is more pollution.",
                    "label": 0
                },
                {
                    "sent": "We know where different amenities are.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "To solve this problem, to support this use case, we have a set of problems.",
                    "label": 0
                },
                {
                    "sent": "First of all, the content that we have to access is more or less unknown.",
                    "label": 0
                },
                {
                    "sent": "There can be many sensors that can be about anything they can come from different sources that can be the volume of information that you have can be quite significant, and all of this information is dynamic and you want to do this in quite another.",
                    "label": 1
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Wait, I so we have all of these things.",
                    "label": 0
                },
                {
                    "sent": "You can easily add more streams in the system.",
                    "label": 0
                },
                {
                    "sent": "Some streams will go down.",
                    "label": 0
                },
                {
                    "sent": "Then somebody will want to make the selection in a different way.",
                    "label": 0
                },
                {
                    "sent": "So we need to be able to support let's say in an easy way to do this election.",
                    "label": 1
                },
                {
                    "sent": "And in this for this, another link, data technologies are quite useful.",
                    "label": 1
                },
                {
                    "sent": "Let's say in addition you would want you don't want to, let's say to program your selection algorithm for months and months and months so.",
                    "label": 0
                },
                {
                    "sent": "At the clarity love language would be quite useful.",
                    "label": 0
                },
                {
                    "sent": "More stream processing systems have physical languages, so you have to place operators yourself and you have to connect inputs, outputs, etc.",
                    "label": 0
                },
                {
                    "sent": "And declarative language would be quite useful as well.",
                    "label": 1
                },
                {
                    "sent": "Now, since we're in the city context and we have different additional domain knowledge, why not use some reasoning?",
                    "label": 0
                },
                {
                    "sent": "So we maybe we can do some in France, for example, I might want to select the camera that is close to schools and then all those.",
                    "label": 0
                },
                {
                    "sent": "Close to educational institutions.",
                    "label": 0
                },
                {
                    "sent": "Maybe someday if anything over there will be useful.",
                    "label": 0
                },
                {
                    "sent": "So if I know that the primary school is a type of an educational institution, I may say I may have more important public safety issues around educational institutions.",
                    "label": 0
                },
                {
                    "sent": "So let's focus that.",
                    "label": 0
                },
                {
                    "sent": "And finally, we need to do that with good performance, and for this reason we have used names in from IBM called IBM Infosphere streams.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So we look at different continuous Sparkle query languages and I'm pretty sure that the authors for all of the languages are in the room, so will not say anything bad about them and we look at different features that they have.",
                    "label": 0
                },
                {
                    "sent": "So OK there is, there's probably some of these cells might be wrong, right?",
                    "label": 0
                },
                {
                    "sent": "But what we really need?",
                    "label": 0
                },
                {
                    "sent": "It was a way to easily access streams that were not RDF.",
                    "label": 0
                },
                {
                    "sent": "So to be able to access CSV streams, for example because most of the information did come into CSV streams.",
                    "label": 0
                },
                {
                    "sent": "And we wanted to do that in a declarative language.",
                    "label": 0
                },
                {
                    "sent": "So one thing we did was extend make our own extension to support the CSV streams while still being able to do RDF waiting.",
                    "label": 0
                },
                {
                    "sent": "In addition, that maybe detail is we wanted for reason for performance reasons to be able to process data in the entire graph.",
                    "label": 0
                },
                {
                    "sent": "So we did not want to go at a very low level.",
                    "label": 0
                },
                {
                    "sent": "We did not want to define our windows at a very low level, but we wanted a high level of aggregation so.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This is a grammar over the language that we made.",
                    "label": 0
                },
                {
                    "sent": "It's very similar to other other languages.",
                    "label": 0
                },
                {
                    "sent": "There is nothing so special about it.",
                    "label": 0
                },
                {
                    "sent": "The main thing behind it is that we can support these heterogenous dreams.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And the query example from this language, so this query over here will just look in Dublin.",
                    "label": 0
                },
                {
                    "sent": "You have this shared bike scheme there different station.",
                    "label": 0
                },
                {
                    "sent": "So what this query will do is every 20 seconds it will calculate the average of bike availability.",
                    "label": 0
                },
                {
                    "sent": "Now if you look over there you will see that we can support the CSV stream and we have our own kind of arbitrary syntax to pick columns from CSV and map it variable since party.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Now we have the language we need the engine IBM already has sending, so it has the IBM Infosphere streams.",
                    "label": 0
                },
                {
                    "sent": "I IBM Infosphere Streams is a stream processing system that focuses on low latency and very very high throughput.",
                    "label": 1
                },
                {
                    "sent": "So we typically you would typically use this on a cluster and you can.",
                    "label": 0
                },
                {
                    "sent": "You can parallelize things.",
                    "label": 0
                },
                {
                    "sent": "You can paralyze your operator.",
                    "label": 0
                },
                {
                    "sent": "Popular pipeline, for example.",
                    "label": 0
                },
                {
                    "sent": "You can have different operators running quantified machines, but you can also parallel parallelize individual operators so you can make a parallel join, for example.",
                    "label": 0
                },
                {
                    "sent": "It is quite powerful and quite extensively so.",
                    "label": 0
                },
                {
                    "sent": "You can add your own adapters.",
                    "label": 0
                },
                {
                    "sent": "You can put your own code.",
                    "label": 0
                },
                {
                    "sent": "You can use operators at it already has.",
                    "label": 0
                },
                {
                    "sent": "You can connect different systems etc.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The general, let's say architecture of papers with stream 'cause as follows.",
                    "label": 0
                },
                {
                    "sent": "You have a repository of operators and adapters.",
                    "label": 0
                },
                {
                    "sent": "These operators can be joins at the space and let their spatial joins, etc etc etc.",
                    "label": 0
                },
                {
                    "sent": "There's an entire library of these operators.",
                    "label": 0
                },
                {
                    "sent": "Now you combine all of these operators using language called SPL.",
                    "label": 0
                },
                {
                    "sent": "In a similar way, with most embarrassing language, so you you cook the outputs of some operators so the inputs of some other operators, then the system goes and compiles.",
                    "label": 0
                },
                {
                    "sent": "The code typically uses a C++ compilation into executables and it tries to put as many operators as possible in the process and distributes these processes around the cluster.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Now we have our declarative language.",
                    "label": 0
                },
                {
                    "sent": "Then we have info systems, which is a physical language, but we need to do is to translate our queries into this physical language.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "One thing that you have, so why wouldn't want to do that?",
                    "label": 0
                },
                {
                    "sent": "Why would we not just write everything initially streams in the 1st place?",
                    "label": 0
                },
                {
                    "sent": "Because it is quite verbose, so the query that I had over there would translate to 300 lines of FPL code because you would have to express his join individual independently and so on.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We have different kinds of input nodes.",
                    "label": 0
                },
                {
                    "sent": "For example, if we have the CSV node will limit everything has three plus if we have.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "An nodes that are typical RDF joins who would split the input and then do the joints of an 18 dependent input and so on.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "As I mentioned, we already will.",
                    "label": 0
                },
                {
                    "sent": "You also wanted to do some inferencing, so we wanted for example to use amenity hierarchies in order to get more useful information so.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Let's talk just a bit about our DFS.",
                    "label": 0
                },
                {
                    "sent": "Reasoning constrains the easy, the easiest way to do it is you take the rule set with the Express is us joins in your stream processing language and your cash.",
                    "label": 0
                },
                {
                    "sent": "It's quite this could be quite simple implementation, But the problem is it has quite bad performance because exactly of sending these tables around again and again and again.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "One relatively straightforward optimization is to be a bit smarter about what kind of information you feed back to the system.",
                    "label": 0
                },
                {
                    "sent": "For example, if you look.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "There are the FSA ruler two.",
                    "label": 0
                },
                {
                    "sent": "It will produce triples at how we have domain as a predicate.",
                    "label": 0
                },
                {
                    "sent": "And obviously this day at the federal tool we have produced ripples at half type as a predicate.",
                    "label": 0
                },
                {
                    "sent": "And obviously if it has a type as a predicate, it will never be fed to rule 11, because really, Levin explained X expects some.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Glass and as a predicate, so you can immediately, let's say, reject some of the feedback in the system.",
                    "label": 0
                },
                {
                    "sent": "Now, if you take into consideration some ontology hijacking principles, you can do the entire thing without having to do any indication at all.",
                    "label": 0
                },
                {
                    "sent": "No, OK, this worked and this was much faster than the.",
                    "label": 0
                },
                {
                    "sent": "And then the full location.",
                    "label": 0
                },
                {
                    "sent": "But somehow it somehow feels wrong for stream reasoning becausw in streams, we typically know the query in advance, so somehow not optimizing for the actual query seems wrong so.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We started looking at backward chaining and said OK, maybe we can do backwards saying in a stream fully fledged backward training we did not achieve to be honest and the reason was that the let's say pipelines that you have any stream processing system they are you cannot rate change them at runtime.",
                    "label": 0
                },
                {
                    "sent": "So you have to do it.",
                    "label": 0
                },
                {
                    "sent": "You have to have them in advance and then expressing the barcode training in terms of a fixed network of operators we did not manage to do it.",
                    "label": 0
                },
                {
                    "sent": "I'm not really sure whether it is possible or it's not possible.",
                    "label": 0
                },
                {
                    "sent": "I know that we did not manage so we went for some.",
                    "label": 0
                },
                {
                    "sent": "Hybrid approach, so we extended the approach that we had where you say OK, this role can fit only to that rule, to also to particular inputs.",
                    "label": 0
                },
                {
                    "sent": "So we will look at the query.",
                    "label": 0
                },
                {
                    "sent": "We look at the different statement patterns that we have and we will see how this.",
                    "label": 0
                },
                {
                    "sent": "What could possibly infer the statement pattern.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We tried the performance on this on the modified the LBM benchmark.",
                    "label": 0
                },
                {
                    "sent": "I will not go in great detail but within a single machine we could process some 10s of thousands of triples per second.",
                    "label": 0
                },
                {
                    "sent": "The hybrid approach was faster in most cases, just a bit faster because that's the joints were smaller.",
                    "label": 0
                },
                {
                    "sent": "In some other cases that it was much faster becausw it would just prune a very large part of this.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Dead Space.",
                    "label": 0
                },
                {
                    "sent": "No, let's go back to the main idea of selecting cameras.",
                    "label": 0
                },
                {
                    "sent": "OK, so we took all the information from Dublin City.",
                    "label": 0
                },
                {
                    "sent": "We took actually real data from Dublin City.",
                    "label": 0
                },
                {
                    "sent": "We kept multiple Windows and would check for changes in the environment and according to these changes.",
                    "label": 1
                },
                {
                    "sent": "And we would select the most.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "On camera, so the input data that we had would be the location of buses, pollution sensors, noise sensor, availability of bio of said bikes, and so on.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Now what this way that we made in order to do this was quite nasty.",
                    "label": 0
                },
                {
                    "sent": "If it was 500 lines, but the the equivalent SPL networks or the equivalent actual language in info systems will be seven and a half thousand lines, so that.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Was quite good that we could reduce it by 15 times.",
                    "label": 0
                },
                {
                    "sent": "Let's see a video of how this works, so this is Dublin.",
                    "label": 0
                },
                {
                    "sent": "We will start looking cut different different data sources that we have in the city so.",
                    "label": 0
                },
                {
                    "sent": "A green one would be the bike availability.",
                    "label": 1
                },
                {
                    "sent": "The blue will be buses that are congested in the city, and noise sensor, pollution sensor amenities, and then the yellow arrows refer to cameras.",
                    "label": 0
                },
                {
                    "sent": "So they start popping up.",
                    "label": 0
                },
                {
                    "sent": "These are all and they had one hour different amenities in the system and these are all the public safety cameras in Dublin and now we'll see the system in action.",
                    "label": 0
                },
                {
                    "sent": "Let's say selecting the most relevant ones.",
                    "label": 0
                },
                {
                    "sent": "And this is, I think, over a period of one day.",
                    "label": 0
                },
                {
                    "sent": "So we have different input in the system and now we select the most interesting one.",
                    "label": 0
                },
                {
                    "sent": "So this is to validate it.",
                    "label": 0
                },
                {
                    "sent": "The area in the center that most of the cameras are concentrated in is actually where most of the bars in Dublin are.",
                    "label": 0
                },
                {
                    "sent": "And then you have the biggest changes in the environment.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And to conclude, we made a new variant of streaming Spark to supported in this input we have shown that our language can dramatically decrease development time by just having more concise queries and reasoning, and we demonstrated this on real data in Dublin to make a hopefully useful application.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Finally at work.",
                    "label": 0
                },
                {
                    "sent": "At least I got IBM, so if you really like the work or you didn't like it at all, like you think that you can do better, please consider it.",
                    "label": 0
                },
                {
                    "sent": "Thank you.",
                    "label": 0
                }
            ]
        }
    }
}