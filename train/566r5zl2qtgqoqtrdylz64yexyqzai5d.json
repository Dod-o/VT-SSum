{
    "id": "566r5zl2qtgqoqtrdylz64yexyqzai5d",
    "title": "Limit distributions of tree parameters",
    "info": {
        "author": [
            "Stephan Wagner, Stellenbosch University"
        ],
        "published": "July 19, 2019",
        "recorded": "July 2019",
        "category": [
            "Top->Computer Science",
            "Top->Mathematics->Algebra",
            "Top->Mathematics->Combinatorics"
        ]
    },
    "url": "http://videolectures.net/FPSAC2019_wagner_tree_parameters/",
    "segmentation": [
        [
            "I should start by thanking the organizers for inviting me and giving me the opportunity not only to give this talk, but also to learn a lot, and I think I did learn quite a bit during this conference.",
            "So those who know me will perhaps an area that I really like trees.",
            "And I've once been given the title tree hugger for that a title that I I'm very proud of actually.",
            "So today's talk is about trees and specifically about tree parameters and their distribution in random trees were.",
            "Look at different types of randomness in trees, different types of parameters that you can associate with the tree, and the type of limiting distributions that you expect from that."
        ],
        [
            "So why would one study trees?",
            "So here is a tree.",
            "What could it be good for?",
            "Well, one reason why mathematicians like trees is that there are simple of all the connected graphs there.",
            "Sparsest, there.",
            "Have a very simple structure that's often extremely useful in.",
            "So that is certainly one motivation why trees are studied quite a lot.",
            "A second one is that, as I said already, they have many nice properties.",
            "For instance, there are unique paths between any two vertices.",
            "And the third one.",
            "Is that there is sometimes useful.",
            "So for instance, you can use a tree to approximate the conference logo like this, but also for some other things."
        ],
        [
            "Here are just three.",
            "Pictorial examples of what one can do with a tree, and I'm sure you've seen things like this before.",
            "Trees play a role in biology.",
            "Filler genetic trees are an important application.",
            "They can model molecules in chemistry.",
            "They can be used as data structures in computer science, so there are really a lot of reasons why we would be interested in trees and why would one why we would want to study trees.",
            "And depending on the application, different parameters of trees play a role and also different models of trees play a role.",
            "So depending on what you're looking at, you might be interested in.",
            "Different notions of randomness in trees, and you might be interested in different quantities that one can associate with the tree.",
            "That depends on what specifically you want to do with your tree.",
            "So depending on the area, various types of random tree models have been put forward, sometimes essentially identical models occur in different contexts, so we know.",
            "When somebody in bioinformatics talks about the you hoarding model, then that is essentially isomorphic to what a computer scientist means when they're talking about random binary search trees.",
            "So.",
            "Let"
        ],
        [
            "Have a look at different types.",
            "Different families of trees that we can investigate so priest can be labeled or unlabeled vertices can be distinguishable or not.",
            "That is 1 possible distinctive point between various tree models and various tree families.",
            "They can be rooted or unrooted, right?",
            "I can have one distinguished vertex that's called the root, or I can just have a tree that's completely free and doesn't have a distinguished treat.",
            "They can be plain or non plain, so that's another way of distinguishing.",
            "I can care about some sort of plane embedding of my tree or not, so equivalently, if I look at rooted trees, I might be interested in the order of the branches or not.",
            "And further, I can have various restrictions.",
            "The vertex degrees might be restricted in one way or the other.",
            "Labels may be restricted in one way or the other.",
            "We will see examples of various of these types of restrictions later on, and depending on what restrictions you impose on your trees, you get different families of trees and you get different notions of randomness as well.",
            "So depending on these you get many different classes of trees that have been studied in the literature depending on the context and depending on.",
            "Sometimes also the applications that people have in mind."
        ],
        [
            "Some of the more classical ones that you probably all know include plane trees or planted plane trees, also called rooted ordered trees.",
            "So several different names are used for these.",
            "People are sometimes it's sloppy.",
            "Also, there is occasionally some sort of ambiguity what you mean.",
            "So basically I'm taking rooted trees and there is some embedding in the plane, which means that the order of branches matters.",
            "So it does matter whether I put the two vertex.",
            "Branch on the left and the One Vertex branch on the right or the other way round.",
            "So these two are counted as distinct.",
            "And if I do that then the number of plane trees with N vertices is the Catalan number over here, so it's one of the many, many examples that give you the Catalan numbers."
        ],
        [
            "There is another one that you probably know.",
            "Binary trees and our featured in some talks of this week as well.",
            "So rooted trees where every vertex is under a leaf or plans exactly two children left one and the right one.",
            "Again, the number of binary trees with well given size given number of internal vertices in this case is a counter line number and there are nice bijections and all that.",
            "So the five trees that you see here correspond exactly to the five trees on the previous slide, of course."
        ],
        [
            "Here is another well known example labeled trees.",
            "Each of the vertices of my tree gets a label and the numbers are from or not to anywhere in is the total number of vertices and if I do that, there are into the N -- 2 different ways of putting a tree together.",
            "Here there are all shown in the case wherein is faucet or 16.",
            "Different trees with four labeled vertices from one to four.",
            "That's famous result due to Kaylee more than 100 years ago.",
            "If I want to make this rooted, well then I can do that.",
            "Everything that changes is the experiment.",
            "Here I have to make it in minus one because there are in ways to choose a route in this case.",
            "Right, so here is one that is already a bit more complicated and the result is perhaps even a little less well known."
        ],
        [
            "If I take unlabeled trees where I have no order, no labels, no roots as well.",
            "Then, well, the counting sequence that I'm getting starts 111236 Eleven, 2347, and so forth.",
            "So the occurrence of prime numbers like 23 or 47 already tells you that.",
            "Well, probably there is no nice product formula.",
            "Anything like that here as it was in the case of the previous three slides.",
            "However, there is an asymptotic formula, so we can tell how many trees with N vertices there are.",
            "Or put another way, how many isomorphism classes of in vertex trees there are?",
            "The number is asymptotically, while some exponential 2.9552 DN, and then this brought a typical.",
            "Factor into the minus five half and some constant factor as well.",
            "So this is already a little bit more recent than Cal is result of the previous slide.",
            "It's from the 1940s.",
            "Go to alter.",
            "And it shows something about the growth of the number of non isomorphic trees.",
            "Basically what this says is that there are lots of trees.",
            "There are exponentially many given the number of vertices."
        ],
        [
            "Right, so you can continue and.",
            "Define more and more families of trees using all sorts of rules, so these forest lines are by no means exhaustive, and you can do.",
            "A lot more.",
            "But let's move on to the topic of random trees.",
            "So here is a random tree with 50 vertices.",
            "I'm going to say random tree, then, well, I'm not being very clear right because I'm not saying anything about the model of randomness and just looking at a tree like this.",
            "This is probably not clear at all.",
            "Well, in this specific case what I did was to generate a random labeled tree with 50 vertices and they not just threw away the labels, so.",
            "In the original setting, at 50 vertices labeled from one up to 50, and then among all the possible 50 to the power 48 or 49, because this one is rooted.",
            "Label trees, I'm taking one uniformly at random, and of course I don't have to generate all the trees and then draw one.",
            "There are way more sophisticated ways to generate.",
            "But yeah, this is just one notion of a random tree, and what I'm getting from it."
        ],
        [
            "So what kinds of random tree models do we have?",
            "As I said before, it depends very much on what you're interested in, whether your coming, say from a computational biology background where phylogentic trees are or what you're interested in, where you may be mostly dealing with binary trees or from an analysis of algorithms POV where you're using your trees as data structures.",
            "These perspectives.",
            "May influence what you consider to be a good model of randomness for trees and well, depending on the specific applications that people have in mind or just pure curiosity from mathematical point of view, people have studied various ways of generating trees at random, and I'm going to show you a few of these and then focus on one specific type.",
            "Perhaps the most natural type of random tree model which is uniform models.",
            "And then look at distributional properties of these trees so.",
            "The first thing that would probably come up with our uniform models, So what you're doing there is, you're taking your favorite class of trees.",
            "Let's say you're taking label trees or you're taking rooted binary trees, and then you specify some size, let's say 100 vertices or thousand vertices, and just take one of the possible trees that you can get uniformly at random.",
            "Well, that's the most intuitive one, I would say.",
            "Take uniformly at random one of the trees in your favorite family.",
            "Another way of producing a tree is through branching.",
            "Crisis is typical example being Golden Watson trees and now we'll get to the specific definition of these trees.",
            "So here what you're doing is you're letting that regrow.",
            "According to some process.",
            "Similar one where you're also letting your tree grow one by one are increasing tree models like recursive trees that I will also explain in a little bit more detail in a minute or two here, you're basically adding your vertices 1 by 1 until you're up to the desired size.",
            "Something that's more related to computer science applications, models that are based on random strings or random permutations, or typical examples here or random tries, or random binary search trees where you're generating some sort of data.",
            "Randomly.",
            "For example, well, a list of random 01 strings, as in the case of choice, or a random permutation of objects for binary search trees.",
            "And then you're building a data structure from that random data which generates a random tree.",
            "An example of that will follow again in a moment or two."
        ],
        [
            "So as I said, uniform models, perhaps the most intuitive, the most natural to begin with.",
            "I take the uniform distribution on the set of trees over given order within some specified family.",
            "So take the family of unlabeled trees, the family of all unlabeled trees, family, full binary trees, and just pick one uniformly at random.",
            "So one typical approach there is often exact counting, because if you tag things uniformly, then.",
            "Starting point is always well, how many trees are there actually my family.",
            "What's going to be the denominator in all my probabilities?",
            "Generating functions play a role here quite often, and I typical instance where we're doing that is simply generated families of trees.",
            "So this notion goes back to the 70s due to a series of papers when Mirror Moon.",
            "We will see exactly what it means to be simply generated.",
            "This notion encompasses variety of very natural tree models.",
            "Within one.",
            "Overall model."
        ],
        [
            "So how that works is as follows.",
            "I take the set of all rated order trees.",
            "Or plain trees as I called them earlier, so my trees are rooted there.",
            "Ordered the order of the branches, does play a role, and I impose some weight function on the seat.",
            "So I specify a sequence.",
            "It's Canonical to start the sequence with one.",
            "It's not entirely necessary.",
            "That sort of normalizes things.",
            "These weights are associated with the out degrees of vertices, so W 0 is associated with art degree 0 W. One assertion without degree one and so forth, and then I define a weight on trees and add weight is simply the product of all the weights of all the vertices, vertex of art degree.",
            "I gets away WI.",
            "So if I take the product of all my weights then that means that I'm taking WI exactly NI times where N is the number of vertices that have out degree I.",
            "Right, taking this big product gives me a weight function for trees and what I do next is to take a tree of order N. So let's say 100 vertices at random, but I'm not taking a plane tree entirely uniformly at random anymore.",
            "I'm doing this proportional to the weights.",
            "So for instance, if I just make all the weights equal to 1, then that's the simplest possible case.",
            "Then each tree gets a weight of 1, and that means that picking a tree at random according to this way, these weights or proportionally to these weights means nothing.",
            "But generating a random plane tree, well, all of them have the same weight, but I can mimic restrictions quite well using these weights.",
            "For instance, with a very simple choice of weights where W 0 and W2 are equal to 1, but all the other weights are zero, I'm enforcing.",
            "Binary trees.",
            "That's because a tree that is not binary that has vertices with one or more than two children will get a weight of zero.",
            "Since one of the product.",
            "Since one of the factors in this product will be 0.",
            "But binary trees all have a weight of exactly 1, so choosing a plain tree according to these weights now means that I'm filtering out exactly the binary trees.",
            "Here is 1 where I'm using weights other than zero and one random reeded label trees, or at least something that's equivalent to it, can be generated by taking the weights equal to 1 / I factorial.",
            "So that comes from the fact that for a vertex of art degree I I have I factorial ways of arranging the branches.",
            "Nine plane trees I care about the order of the branches, but in rooted labeled trees I no longer do that because they are distinguished distinguishable by their labels and so this one over I factorial kind of factors out the possible ways of drawing a. Label tree a given label tree as a rooted order tree or the tree in the plane.",
            "With this weight function.",
            "The shape of the tree that I'm going to generate is equivalent to the shape that I would get by generating a random rooted labeled tree."
        ],
        [
            "Right, let's get to branching processes.",
            "The Golden Watson model that I've already mentioned is.",
            "A classical way of generating trees, and it turns out to be more or less equivalent to the notion of simply generated trees.",
            "So you fix some probability distribution on the set of possible out degree 012 and so forth.",
            "Then you start with a single vertex, the root.",
            "And at time T all the vertices that are T away from the root generate offspring and they all do that in dependently and they do that according to that fixed distribution that are defined at the beginning.",
            "Sorry if I continue and continue and keep doing that.",
            "To the point where the tree dies out at order N. So technically what I'm doing here is I'm conditioning the process to die out when it reaches exactly N vertices, right?",
            "A tree, the tree that I'm generating in this way can always die out.",
            "That happens when all the trees at the current label have zero offspring.",
            "So that happens with some probability if a condition to that happening exactly when I reach in vertices, then I'm getting what is called a conditioned random Golden Watson tree.",
            "That way I can enforce a certain size.",
            "And as it turns out, simply generated treason, called Watson trees are more or less equivalent notions.",
            "It's not entirely immediate why that is so, but we will see that, for example, a geometric distribution for branching gives you just an ordinary random planetree Apostle distribution would give you a random rooted label tree.",
            "Basically, the role that the probabilities are playing correspond to the rules of the weights in the previous slide."
        ],
        [
            "So here is a construction of a Golden Watson tree using this model.",
            "Now to generate binary trees, each vertex is.",
            "I don't know John Children or precisely two.",
            "I just fix some probabilities for each of the two cases at the beginning and then I start generating read retest.",
            "Two children.",
            "Now at time one each of the two vertices produces offspring.",
            "The first one dies out, the second one still has children, and then I continue at level 2.",
            "Areas of the remaining vertices have two children and label 3 the same thing again and again, and I might continue for it.",
            "So this is how well what's in."
        ],
        [
            "He's worked as it turns out.",
            "As I said, they are equivalent to simply generated trees.",
            "This example is supposed to illustrate that, so I'm considering the Golden what's in prices.",
            "That's based on the geometric distribution, meaning that having K children has probability P * Q to the K, where P is this.",
            "That way, if some of the geometric series are getting a proper probability distribution Now, what would be the probability that my process generates exactly this tree?",
            "Well, let's look at it.",
            "The tree has seven leaves, so each of these leaves had zero children, which happens with probability P by definition.",
            "So I'm getting a factor P to the Power 7.",
            "Then I have two vertices here and here with exactly one child.",
            "Each of these was happening with probability PQ, so I'm getting this factor.",
            "Then there are also vertices with two children here and here.",
            "That gives me P, Q, ^2, ^2 and finally three children over here and over here.",
            "Each of them give me a factor PQ cubed according to the definition of the probability distribution.",
            "Now if I multiply will then out, I'm getting the probability P to the 13th Q to the 12:40 event that the process produces exactly this tree.",
            "Now if you count then you'll see that this tree has 13 vertices and 13 occurs here, and 12 is exactly 1 less.",
            "That's not a coincidence because each of the vertices gives us a factor P. So that necessarily always gives us P to 13 for every tree with 13 vertices.",
            "And how often do I get Q?",
            "Well, I'm getting a queue for each vertex that's a child because a vertex with K children gives me Kate Q to the K OK, but every vertex except for the root is a child, so I'm having exactly 1 less than the total number of vertices.",
            "That's this cute apart 12.",
            "So every tree with 13 vertices gives me this probability, so they all have the same probability.",
            "Meaning generating a tree according to this process conditioning to dying out after 13th vertices give me a uniformly plain tree with 13 vertices and I can play a similar game with other probability distributions than this one."
        ],
        [
            "OK, now let's get somewhere different.",
            "Model random increasing trees.",
            "So here producing the trees by adding vertices one by one and that gives me random recursive trees, so I'm starting again with the read.",
            "The read gets the label one and the end Vertex arrives and attaches to one of the previously existing vertices.",
            "There in minus one there so uniformly at random.",
            "Each of these N -- 1 possibilities.",
            "Right that way I'm guaranteed that the labels along any path are increasing right because the labels correspond to the times of which vertices arrive.",
            "That's why these trees are called increasing.",
            "And it's clear that there in one is 1 factorial possible recursive trees because they can't vertex has a -- 1 possibilities where he can attach taking the product, use main ones 1 factorial.",
            "So indeed there are also nice connections to permutations, bijections, some statistics that are equidistributed, many nice things.",
            "But I will not look at those today.",
            "And we can modify this as well.",
            "Instead of choosing apparent uniformly at random, you can in Paris some rules.",
            "For example, you may attach to parents with a higher probability if they already have lots of children.",
            "This is called preferential attachment.",
            "Or another way would be you can only attach until your vertex has two children in your enforcing binary trees again."
        ],
        [
            "Here is this construction.",
            "Recursive trees with N vertices.",
            "So I start with the routine attached #2 attention #3 somewhere attached #4.",
            "For five, 5 four possibilities for six or five possibilities, and so on and so forth, they arrive 1 by 1.",
            "So this is I'm getting increasing trees."
        ],
        [
            "Last time that I want to mention prices that are based on random strings, so tries are a data structure, it's short for retrieval.",
            "Trees are used for storing, strings are a finite alphabet, and if you can store you can also search and things like that.",
            "So random binary tries obtained by creating random binary strings of sufficient length, and there must all be distinct.",
            "So I want different datasets.",
            "So for all practical purposes, you can just assume that there are infinite in length, and then you're building a try from it would works, which works like this.",
            "Everything that starts with a zero goes to the left.",
            "Everything that starts with a one goes to the right and then you continue recursively with the 2nd, third, 4th and so forth digit."
        ],
        [
            "Procedure the procedure is repeated recur."
        ],
        [
            "Simply that gives you something like this.",
            "Here I'm generating just four strings and up to the point where they're all distinct and you see that string starting with one goes to the right.",
            "The zeros go to the lift and in well distinguishing further, this one has a zero in the second spot, so it goes to the left.",
            "These with one code to the right, and then I'm distinguishing further according to the 3rd digit and so forth.",
            "So then producing random strings then also getting random trees in this way."
        ],
        [
            "OK, the title of my talk contains 3 parameters, So what kind of parameters could be be interested in?",
            "There are really lots of them and maybe you have some more that you would like to add to the list after this talk.",
            "Very basic one.",
            "The number of leaves.",
            "I'm generating a tree at random.",
            "How many leaves does it have?",
            "Can I say something about that number of vertices?",
            "We're given degree that's a generalization.",
            "Special case zero would be the number of leaves.",
            "The number of fringe subtrees, so fringe subtree is a subtree that consists of a vertex and everything that's below it.",
            "And of course.",
            "Tree with N vertices will contain N such fringe subtrees, one for each vertex, and I might be interested in how often does a certain shape appear.",
            "Well, that's my parameter here.",
            "The height is something that's very important for algorithms because it's saying something about worst case scenarios.",
            "So the maximum distance of a leaf from the root is how tall the trees.",
            "The path links similar motivation, but it's more related to the average rather than the maximum.",
            "I'm taking the distance of each vertex from the root and then I'm taking the sum of all of that.",
            "If I divide that by the number of trees, I'm getting an average.",
            "Viena index.",
            "Similar story is the sum of all distances between pairs of vertices, so.",
            "I take for each vertex pair distance and then I sum all of these.",
            "OK, I'm destroying equipment here.",
            "And if you were to divide this by the number of pairs, then you would get an average distance between vertices.",
            "The number of automorphisms, right?",
            "If you care about symmetry, then you might want to know how large is your eyes.",
            "Automorphism group has a metric is the tree.",
            "Or you might be interested in how many substructures does it have.",
            "In total, the number of subtrees.",
            "So here I'm saying that everything that's a subtree.",
            "Whether it's a fringe subtree or North counts.",
            "Sandy and I want to know something about the total number.",
            "Or the number of independent states?",
            "Or the number of matchings?",
            "Or the spectrum, so that a nice one.",
            "So the spectrum that could be the spectrum of the adjacency matrix or the spectrum of the Laplacian matrix, or some other matrix that you can associate with the graph.",
            "You want to know something about the distribution of the eigenvalues of a typical random tree.",
            "And this list is by no means complete, is just.",
            "So if a list of some of the parameters that I'm personally interested in, but I'm sure that there are many."
        ],
        [
            "So given the family of trees or some random tree model that you want to investigate and a tree parameter that you care about for whatever reason.",
            "What can we say about average value or the variance or higher moments?",
            "So that's the questions that Probabilists will necessarily ask, or if that is too easy, somehow, then can we say more about the distribution?",
            "Can we prove convergence in distribution or some other notion of convergence?",
            "Almost sure convergence works in some cases.",
            "And these questions are particularly relevant when N is large, so we are looking at limit scenarios where we let the trees grow to Infinity and then want to know what's the distribution in the limit."
        ],
        [
            "So some examples of these parameters.",
            "This tree here has 11 leaves.",
            "Can count them.",
            "There's two cherries.",
            "Cherry is a special kind of fringe subtree, something like this, right?",
            "Thank you.",
            "See why it's called a cherry or two of them.",
            "Height is 4.",
            "You need 4 steps to get from the root to leaf.",
            "That's very just away.",
            "The path length that's the sum of all the distances from the reaches 44 you can check.",
            "This can still be done.",
            "I think.",
            "Relatively quickly, the 384 automorphisms well, we don't want to list them one by one.",
            "But what can we do when we can permute these forward?",
            "It gives us 24.",
            "And then we can permute these two.",
            "That gives us another two.",
            "And here we can flip.",
            "These two and we can flip individually so that gives us another eight and then we have to take the product of all of these and that gives us this 384.",
            "It's quite well known what the structure of the automorphism groups of trees are.",
            "They can all be obtained by iterative direct products or wreath products.",
            "Over here you see an example where we re product is needed.",
            "It's not a direct product over here because well you have a group here.",
            "You've group here, but then you're also.",
            "Switching these theories so there you need the wreath, product and Lastly well, it's got 3945 subtrees.",
            "I encourage you to count them."
        ],
        [
            "It's not difficult if you have recursion, actually.",
            "Right, so now let's get to some examples of distributions.",
            "Here is a nice one, and one that you possibly know.",
            "So if I count the number of leaves in plain trees, then there is actually very elegant formula than Ariana numbers.",
            "Do that and so you get a beautiful histogram like this.",
            "And of course they can make this much bigger.",
            "And I can do everything very explicitly.",
            "You see it already here.",
            "This looks a little bit like Gaussian already, and indeed it turns out that in the limit you will have a Gaussian distribution here as you do with the binomial distribution.",
            "That's not difficult to prove you apply Stirling's formula to this, for instance."
        ],
        [
            "Here is a more complicated one.",
            "I'm taking binary trees this time and I'm interested in the height.",
            "So what's the distribution here?",
            "Drawing a histogram, obviously it has to stop at 30, can't grow higher than that.",
            "And this one looks a little bit more complicated.",
            "It's Q.",
            "It doesn't look like Gaussian, and in fact it isn't.",
            "As it turns out."
        ],
        [
            "And here is a really horrible one.",
            "So the number of subtrees by chosen label trees with 15 vertices.",
            "Cannot really go much higher than that.",
            "If you want absolutely exact counts.",
            "And an exact histogram like this.",
            "So this looks really messy.",
            "I mean there is some kind of smoothness here, but it's also very.",
            "Very messy and Brandon.",
            "It's not quite clear whether this will converge to anything nice."
        ],
        [
            "So in the following will be specifically looking at.",
            "There is uniform models that are mentioned, so I'm either taking simply generated families of trees or unlabeled Rita trees, also known as polio trees.",
            "They're not simply generated, but almost for all practical purposes they are.",
            "Structurally they have a lot of similar properties, and I will give you some examples of the distributional results that we get for this specific family of trees where these families of trees rather.",
            "For increasing trees or random tries or random search trees and whatnot, you get somewhat different results.",
            "Somewhat different shapes, but similar flavor still.",
            "And in each case, we are considering a random element which I'm calling tiene in that given family.",
            "Let's say random binary tree with N vertices or random label tree then vertices.",
            "And for some parameter P, what can I say about the distribution of P?"
        ],
        [
            "Now a very classical one is the number of leaves.",
            "Been studied as far back as 1980s and special cases even much earlier than that.",
            "And.",
            "You can generalize this further, but so the bottom line is, the number of leaves is asymptotically Gaussian in all of these three families.",
            "Each time you have a mean that's linear in in and variance that's also linear in in.",
            "At least asymptotically, and if you renormalize, so if you subtract the mean.",
            "To get mean 0 and divide by the variance or sort of the standard deviation rather square root of the variance so as to get to a normalized version where the variance is 1.",
            "Then you have weak convergence to a standard normal distribution, right?",
            "So if you're not familiar with the notion of weak convergence, it means that the cumulative distribution functions converge soda probability that.",
            "A random variable is less equal X. Converges to a limit value for each X.",
            "In a nutshell, if I draw this histogram for the number of leaves for very very large trees, then it will look like the typical Gaussian Bell curve.",
            "This generalizes, and that's why I have more references over here.",
            "The number of vertices with the given degree, the number of fringe subtrees of a given shape.",
            "The number of leaves is a special case of both of these.",
            "And in each case we have the same type of law, just the constants mu and Sigma squared will change.",
            "They will change from.",
            "From degree to degree or they will change depending on what you take here for degree or what do you take here for the fringe subtree or also what family if you take so you have several things that these values will depend on."
        ],
        [
            "The height resource histogram earlier and the height is quite different.",
            "It is not Gaussian.",
            "We saw that already in the picture.",
            "It looked skewed.",
            "So here it turns out that the hype is roughly of order square root in, so the mean is.",
            "Asymptotically equal to some constant times the square root of the number of vertices, and if you divide by that then you have convergence to what is called a theater distribution.",
            "The reason it's called that is that the density function is related to theater series.",
            "This ugly looking thing, but this is actually a proper density function.",
            "It specifies a probability distribution, and it's the right probability distribution.",
            "The height of all these simply generated families of trees."
        ],
        [
            "Here is the limit shape, so if I were to make the trees very large and look at the histogram from far then it would look a bit like this curve."
        ],
        [
            "Here is another instance path length, so the path length was the sum of the distances from the root.",
            "Here I'm not looking at the maximum, but the some work equivalently, average here.",
            "Turns out that the main is of order N to three half.",
            "If you divide by the number of vertices, you get an average distance, which is of all the square root N. So same order as the height and the same here if you divide by the number of pairs, you get an average.",
            "Turns out that these average is actually the same, so.",
            "On average.",
            "A vertex is about mu Times Square root in away from the root and two randomly chosen vertices also mute times in away from each other.",
            "So the root is not very special actually.",
            "Here you get some funny random variables in the limit, if you divide 3 by the means then you get limiting shapes that can be defined in terms of normalized Brownian excursion.",
            "So normalized Brownian excursion means.",
            "Take the.",
            "Brownian Motion Brownian motion goes below the X axis sometimes, so you want to exclude that and you're also conditioning on it reaching zero at the end.",
            "That gives you a Browning excursion, and there is a natural relation here, because there is a relation between trees and paths.",
            "You can basically take a lattice policy and folded to get a tree.",
            "You can unfold it to get a path, and in the limit the paths become Brownian excursions, so that's the relation here.",
            "Just from a heuristic point of view, then it gives you these.",
            "These are random variables because Y of T here is a random variable.",
            "Therefore this integral is also random variable."
        ],
        [
            "So for instance, the path length has this limiting distribution, which is known as airy distribution.",
            "The reason being that it's related to a special function that's due to area.",
            "OK."
        ],
        [
            "Mostly on like to talk about something that's very close to my heart.",
            "Personally, it's added to functionals.",
            "It's a notion that aims at unifying whole number of different tree parameters that are around.",
            "What additive means here is that I can compute the parameter recursively by summing it over all the branches and then adding something for the tree, and that something is called that all function.",
            "So.",
            "In a formula it's like this.",
            "Here is my tree and it splits into branches B1 up to BK and I'm calculating my parameter F by summing if over all the branches and then adding this tool function left and our priority little F can be anything, which means that actually every tree parameter you can think of is additive.",
            "You simply define F to satisfy this.",
            "OK, that means that this notion is only really useful if F little F. That all function is something simple, something we can understand, something we can somehow get a grip on, but it turns out that this is often the case.",
            "The recursion remains true even if I take the tree of order one, just by assuming that that all function there is equal to capital F, then this works with this being an empty sum."
        ],
        [
            "An equivalent definition that's not very difficult to share by induction.",
            "Recursion is equivalent to an explicit formula where I'm taking the toll function and summing it over all the fringe subtrees.",
            "So remember, French subtree is what I get if I take a vertex V and everything that's below it, that's a frame subtree.",
            "And.",
            "Each such tree will have its own functional if associated with it, and then, uh, some.",
            "This over all the vertices in my tree of in terms in that some, if that's the number of vertices, and it turns out that this here is completely equivalent to that that's not very difficult to show as a St by induction, so you have two different notions that are equivalent."
        ],
        [
            "So let me show you some examples to convince you that this is perhaps a reasonable definition.",
            "The number of leaves does that.",
            "It corresponds to this tool function, where I'm adding one if the tree is only a single leaf, and otherwise 0 right because the number of leaves is the sum of the number of leaves in all the branches.",
            "And if the tree is just the root itself, then that also counts as a leaf, so they now have to add 1, but otherwise not.",
            "The number of occurrences of affix treated tree H on the fringe would work quite similarly.",
            "Just adding one if the tree itself does that.",
            "Otherwise it's just a sum over the branches.",
            "Number of vertices whose out degree is some fixed number K. Similar story if the root does that.",
            "If it hasn't degree K then I have to add 1 to the account.",
            "Otherwise I'm just summing over all the branches.",
            "OK."
        ],
        [
            "Let's get a bit.",
            "A little bit more complicated examples perhaps where it's not the 01 law.",
            "The path links, so I'm summing the distances from the overall vertices.",
            "Right now the distance from the root in the branch is the distance from the reading the whole tree, except for the plus one right?",
            "The last step up to the root.",
            "So for each vertex in the branch I have to take the distance to the read in the branch and then add another wall there for the contribution of each branch.",
            "Is this right?",
            "The total path length in the branch and then plus one for each vertex in the branch?",
            "So that gives me a total of that, and if I simplify.",
            "I'm getting this, which means that the right tool function is the number of vertices minus one.",
            "That works for the parsley.",
            "The log product of the subtree sizes.",
            "Goes under different names.",
            "Here I'm taking the logarithm of the size as the tool function.",
            "Turns out that this is not as unnatural as you might think, among other things.",
            "It's related to the number of linear extensions.",
            "Why, well, if I want to count linear extensions?",
            "Well, the tree I'm thinking of the tree as a parasite here well.",
            "I take a linear extension in each of the branch in each of the branches separately, and then I have to also.",
            "Serve.",
            "Assign which.",
            "Which terms in the linear order go to which branch?",
            "And that's this multinomial coefficient over here.",
            "And that gives me the number of linear extensions in the whole Treaty, right?",
            "I'm choosing how the vertices in the different branches are assigned 1st and then within each branch I'm choosing a linear extent.",
            "And if I've just modified a little bit, play around with that.",
            "And it turns out that the logarithm of this equation satisfies the additive relation with functional log with full function locked.",
            "So if I know.",
            "Something about this parameter then also know about the number of linear extensions, of course."
        ],
        [
            "Number of automorphisms, right?",
            "So how do I get in automorphism?",
            "By moving things around into different branches and I can do that sort of independently so it's this product and then I can also permute the branches if I have C1 branches of type 1C2 branches type 2 and so on, then this here is the number of ways I can permute the branches.",
            "That taken into account, I'm getting this formula right here.",
            "We have a product, but of course we can turn that into a sum and again linear relation.",
            "With a tool function, that's like this.",
            "If an additive functional ram summing over the branch is simply madding, something.",
            "The multiplicity of an eigenvalue.",
            "I spoke about the spectrum earlier, well, turns out that there is again such a relation and that all function well.",
            "It's a bit harder to characterize what it what exactly it is, but it only has values minus 101, which is very very useful that comes from some simple results in linear algebra for tanker symmetric matrix, and any remover Ont associated column, you can only change the dimension of the eigenspace by most one."
        ],
        [
            "Last one.",
            "Number of subtrees.",
            "So here I'm counting everything that's a subtree.",
            "It's a bit more convenient to just look at the subtree that contain the root, because the recursion is nicer asymptotically, this doesn't make a difference.",
            "So number of searches.",
            "That contained read well in each of the branches.",
            "I either take a subject that contains the root or nothing.",
            "And that I do in dependently for all the branches that product that gives me this logarithm.",
            "Well here I would prefer to have one plus, but it's not quite like that.",
            "I have to artificially add it and then it turns out that.",
            "The right relation is this.",
            "And again we have this additive relation and that all function is this thing over here which doesn't look very useful because it contains S1 itself, so might not seem as if this was a very useful recursion, but actually one can do a lot of probability theory with that.",
            "The main property of this thing here is that S1 of T is usually going to be very large, of course.",
            "And therefore this 1 + 1 T inverse is close to one, and the logarithm is close to 0 and that is very useful."
        ],
        [
            "Right, what can one say about these additive functionals?",
            "Well under some.",
            "Reasonable conditions and there are several notions of what reasonable might be.",
            "We have a central limit theorem as in the examples that, as in the example of the number of leaves, for instance, that I've shown you.",
            "The central Limit theorem is always of the same shape, so we have some Constance Moore and Sigma squared that govern the growth of mean and variance mean and variance arberth linear in in.",
            "And in each case I have.",
            "Normalization converging weakly to a standard normal distribution, so everything that's additive with.",
            "Some reasonable properties of little F. Well, I will say a little bit about what these are, but some of them are rather technical to write down, so I will spare you those.",
            "Keep thing to take away from.",
            "That is if I can somehow control little F then I always have a normal distribution basically.",
            "What are these technical conditions that I'm talking about?"
        ],
        [
            "Are two types that we can work with.",
            "Either that or function is small in some sense, at least on average.",
            "If I look at large trees, small means well.",
            "If average over large trees then I'm getting something that goes to 0.",
            "It's a bit trickier than that because going to zero alone is not enough.",
            "You have to know a little bit about the speed at which that average total function goes to 0, but if you can do that, then you're guaranteed the normal limit law, and for example this thing with the number of subtrees where it looked like the recursion is not very useful, because that all function contains the parameter itself that can be dealt with using this idea because.",
            "As I said that all function is very small.",
            "We don't know what it really is, but we know that it's small.",
            "We can estimate it and that helps here.",
            "And the other type is that all function is local, so just looking at.",
            "A bounded neighborhood of the root.",
            "I can say what the tool function is.",
            "Or maybe I can at least approximate reasonably well what it is.",
            "Typical instance here is the number of vertices of given out degree, because here that all function was one.",
            "If the routers that out degree and 0 otherwise.",
            "Well.",
            "Of course I know that by looking at the neighborhood of the root and there are other instances where I have this notion of local.",
            "At least approximately.",
            "Instances are independence number or the number of independent states, or things like that."
        ],
        [
            "Similar results I mentioned that everything here was for simply generated trees or polia trees.",
            "Similar things exist for other tree models increasing tree models.",
            "Recursive trees, deer.",
            "Increasing trees, plain or intra cursive trees, again with various types of technical conditions, you get your limit theorems.",
            "The research trees.",
            "There is another type that can be dealt with.",
            "In that case, urn models turn out to be very useful and again with reasonable conditions you have normal image law.",
            "The proofs involve a blend of different things, so combinatorial ideas obviously, so you have some generating functions, use analytic combinatorics where you look at the analytic properties of your generating functions, but probabilistic techniques play a major role as well, so growth proceeds that are explained before urn models play a role for the research trees in urn models.",
            "What you've got is an urn with balls in it, and you take out balls, so one by one and depending on.",
            "The color of the of the balls you put balls back in according to some rules.",
            "Such prices are called urn models, and it turns out to be useful."
        ],
        [
            "Here.",
            "To give you a bunch of examples that can be covered with the existing results.",
            "The number of leaves.",
            "Well, we knew that that's normal vertices of degree K, normal number of fringe subtrees of any given shape.",
            "So for example cherries normal.",
            "Number of subtrees lognormal, we have to take the logarithm first before we could apply.",
            "The theorem, so the asymptotic distribution is lognormal, which means the logarithm of the quantity is approximately normal.",
            "The number of independent states also log normal.",
            "Number of matchings also lognormal.",
            "These three are very similar in nature.",
            "I'm counting something.",
            "There are typically many of them exponentially, many name.",
            "The independence number that's the largest size of an independent state.",
            "It's normal matching number normal, average subtree size, bit of a weird one.",
            "So you look at all the subtrees in your tree and take their average size.",
            "That's a quantity associated with the tree.",
            "That by itself is normally distributed.",
            "So these are some of the examples that we can cover and.",
            "Probably a few more.",
            "Annoyingly, we can't always get everything we want, so there are so many."
        ],
        [
            "Open questions so they're random tree models that can't be covered by the existing results that I have shown you here.",
            "There are tree like graph classes that one might want to investigate, which are similar.",
            "For example, cacti look like trees, essentially series parallel graphs are very similar to trees, so all of these one would want to have similar results perhaps.",
            "Then, as I say, there are parameters that are not covered by any of the existing general conditions.",
            "Let's sometimes annoying, right?",
            "So you prove a general theorem.",
            "Then you're very happy that it covers 10 different results.",
            "Somebody comes to you.",
            "Here is example number 11.",
            "Doesn't fit and then you have to come up with some other condition again.",
            "Then of course there are parameters that are simply not normal.",
            "Wear these schemes.",
            "Schemes cannot possibly fit.",
            "Well, here we would also like to have some more general results than are available.",
            "We might want to look at parameters that follow different type of recursion, so additive parameters.",
            "Cover many examples, but not nearly all of them.",
            "For example, instead of someone might want to take the maximum.",
            "In a recursion that is, for example, the case with the height, another instance where it's sort of symbolized is called Horton Strahler numbers, they measure, for example, the complexity of River networks find interesting.",
            "And there are lots of other questions that we could ask, so we cannot nearly cover all possible tree parameters that might be of interest and all possible random tree models that might be of interest.",
            "And if you have a favorite your favorite tree parameter and it wasn't on that list and you would like to see it analyzed, come to me, I will definitely give it a try.",
            "Thank you very much."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "I should start by thanking the organizers for inviting me and giving me the opportunity not only to give this talk, but also to learn a lot, and I think I did learn quite a bit during this conference.",
                    "label": 0
                },
                {
                    "sent": "So those who know me will perhaps an area that I really like trees.",
                    "label": 0
                },
                {
                    "sent": "And I've once been given the title tree hugger for that a title that I I'm very proud of actually.",
                    "label": 0
                },
                {
                    "sent": "So today's talk is about trees and specifically about tree parameters and their distribution in random trees were.",
                    "label": 1
                },
                {
                    "sent": "Look at different types of randomness in trees, different types of parameters that you can associate with the tree, and the type of limiting distributions that you expect from that.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So why would one study trees?",
                    "label": 1
                },
                {
                    "sent": "So here is a tree.",
                    "label": 0
                },
                {
                    "sent": "What could it be good for?",
                    "label": 0
                },
                {
                    "sent": "Well, one reason why mathematicians like trees is that there are simple of all the connected graphs there.",
                    "label": 0
                },
                {
                    "sent": "Sparsest, there.",
                    "label": 0
                },
                {
                    "sent": "Have a very simple structure that's often extremely useful in.",
                    "label": 0
                },
                {
                    "sent": "So that is certainly one motivation why trees are studied quite a lot.",
                    "label": 0
                },
                {
                    "sent": "A second one is that, as I said already, they have many nice properties.",
                    "label": 1
                },
                {
                    "sent": "For instance, there are unique paths between any two vertices.",
                    "label": 0
                },
                {
                    "sent": "And the third one.",
                    "label": 0
                },
                {
                    "sent": "Is that there is sometimes useful.",
                    "label": 0
                },
                {
                    "sent": "So for instance, you can use a tree to approximate the conference logo like this, but also for some other things.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Here are just three.",
                    "label": 0
                },
                {
                    "sent": "Pictorial examples of what one can do with a tree, and I'm sure you've seen things like this before.",
                    "label": 0
                },
                {
                    "sent": "Trees play a role in biology.",
                    "label": 0
                },
                {
                    "sent": "Filler genetic trees are an important application.",
                    "label": 0
                },
                {
                    "sent": "They can model molecules in chemistry.",
                    "label": 0
                },
                {
                    "sent": "They can be used as data structures in computer science, so there are really a lot of reasons why we would be interested in trees and why would one why we would want to study trees.",
                    "label": 0
                },
                {
                    "sent": "And depending on the application, different parameters of trees play a role and also different models of trees play a role.",
                    "label": 0
                },
                {
                    "sent": "So depending on what you're looking at, you might be interested in.",
                    "label": 0
                },
                {
                    "sent": "Different notions of randomness in trees, and you might be interested in different quantities that one can associate with the tree.",
                    "label": 0
                },
                {
                    "sent": "That depends on what specifically you want to do with your tree.",
                    "label": 0
                },
                {
                    "sent": "So depending on the area, various types of random tree models have been put forward, sometimes essentially identical models occur in different contexts, so we know.",
                    "label": 0
                },
                {
                    "sent": "When somebody in bioinformatics talks about the you hoarding model, then that is essentially isomorphic to what a computer scientist means when they're talking about random binary search trees.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "Let",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Have a look at different types.",
                    "label": 0
                },
                {
                    "sent": "Different families of trees that we can investigate so priest can be labeled or unlabeled vertices can be distinguishable or not.",
                    "label": 0
                },
                {
                    "sent": "That is 1 possible distinctive point between various tree models and various tree families.",
                    "label": 0
                },
                {
                    "sent": "They can be rooted or unrooted, right?",
                    "label": 1
                },
                {
                    "sent": "I can have one distinguished vertex that's called the root, or I can just have a tree that's completely free and doesn't have a distinguished treat.",
                    "label": 0
                },
                {
                    "sent": "They can be plain or non plain, so that's another way of distinguishing.",
                    "label": 0
                },
                {
                    "sent": "I can care about some sort of plane embedding of my tree or not, so equivalently, if I look at rooted trees, I might be interested in the order of the branches or not.",
                    "label": 1
                },
                {
                    "sent": "And further, I can have various restrictions.",
                    "label": 0
                },
                {
                    "sent": "The vertex degrees might be restricted in one way or the other.",
                    "label": 0
                },
                {
                    "sent": "Labels may be restricted in one way or the other.",
                    "label": 0
                },
                {
                    "sent": "We will see examples of various of these types of restrictions later on, and depending on what restrictions you impose on your trees, you get different families of trees and you get different notions of randomness as well.",
                    "label": 0
                },
                {
                    "sent": "So depending on these you get many different classes of trees that have been studied in the literature depending on the context and depending on.",
                    "label": 1
                },
                {
                    "sent": "Sometimes also the applications that people have in mind.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Some of the more classical ones that you probably all know include plane trees or planted plane trees, also called rooted ordered trees.",
                    "label": 0
                },
                {
                    "sent": "So several different names are used for these.",
                    "label": 0
                },
                {
                    "sent": "People are sometimes it's sloppy.",
                    "label": 0
                },
                {
                    "sent": "Also, there is occasionally some sort of ambiguity what you mean.",
                    "label": 0
                },
                {
                    "sent": "So basically I'm taking rooted trees and there is some embedding in the plane, which means that the order of branches matters.",
                    "label": 0
                },
                {
                    "sent": "So it does matter whether I put the two vertex.",
                    "label": 0
                },
                {
                    "sent": "Branch on the left and the One Vertex branch on the right or the other way round.",
                    "label": 0
                },
                {
                    "sent": "So these two are counted as distinct.",
                    "label": 0
                },
                {
                    "sent": "And if I do that then the number of plane trees with N vertices is the Catalan number over here, so it's one of the many, many examples that give you the Catalan numbers.",
                    "label": 1
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "There is another one that you probably know.",
                    "label": 0
                },
                {
                    "sent": "Binary trees and our featured in some talks of this week as well.",
                    "label": 0
                },
                {
                    "sent": "So rooted trees where every vertex is under a leaf or plans exactly two children left one and the right one.",
                    "label": 1
                },
                {
                    "sent": "Again, the number of binary trees with well given size given number of internal vertices in this case is a counter line number and there are nice bijections and all that.",
                    "label": 0
                },
                {
                    "sent": "So the five trees that you see here correspond exactly to the five trees on the previous slide, of course.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Here is another well known example labeled trees.",
                    "label": 0
                },
                {
                    "sent": "Each of the vertices of my tree gets a label and the numbers are from or not to anywhere in is the total number of vertices and if I do that, there are into the N -- 2 different ways of putting a tree together.",
                    "label": 0
                },
                {
                    "sent": "Here there are all shown in the case wherein is faucet or 16.",
                    "label": 0
                },
                {
                    "sent": "Different trees with four labeled vertices from one to four.",
                    "label": 0
                },
                {
                    "sent": "That's famous result due to Kaylee more than 100 years ago.",
                    "label": 0
                },
                {
                    "sent": "If I want to make this rooted, well then I can do that.",
                    "label": 0
                },
                {
                    "sent": "Everything that changes is the experiment.",
                    "label": 0
                },
                {
                    "sent": "Here I have to make it in minus one because there are in ways to choose a route in this case.",
                    "label": 0
                },
                {
                    "sent": "Right, so here is one that is already a bit more complicated and the result is perhaps even a little less well known.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "If I take unlabeled trees where I have no order, no labels, no roots as well.",
                    "label": 0
                },
                {
                    "sent": "Then, well, the counting sequence that I'm getting starts 111236 Eleven, 2347, and so forth.",
                    "label": 0
                },
                {
                    "sent": "So the occurrence of prime numbers like 23 or 47 already tells you that.",
                    "label": 0
                },
                {
                    "sent": "Well, probably there is no nice product formula.",
                    "label": 0
                },
                {
                    "sent": "Anything like that here as it was in the case of the previous three slides.",
                    "label": 0
                },
                {
                    "sent": "However, there is an asymptotic formula, so we can tell how many trees with N vertices there are.",
                    "label": 1
                },
                {
                    "sent": "Or put another way, how many isomorphism classes of in vertex trees there are?",
                    "label": 0
                },
                {
                    "sent": "The number is asymptotically, while some exponential 2.9552 DN, and then this brought a typical.",
                    "label": 0
                },
                {
                    "sent": "Factor into the minus five half and some constant factor as well.",
                    "label": 0
                },
                {
                    "sent": "So this is already a little bit more recent than Cal is result of the previous slide.",
                    "label": 0
                },
                {
                    "sent": "It's from the 1940s.",
                    "label": 0
                },
                {
                    "sent": "Go to alter.",
                    "label": 0
                },
                {
                    "sent": "And it shows something about the growth of the number of non isomorphic trees.",
                    "label": 0
                },
                {
                    "sent": "Basically what this says is that there are lots of trees.",
                    "label": 0
                },
                {
                    "sent": "There are exponentially many given the number of vertices.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Right, so you can continue and.",
                    "label": 0
                },
                {
                    "sent": "Define more and more families of trees using all sorts of rules, so these forest lines are by no means exhaustive, and you can do.",
                    "label": 0
                },
                {
                    "sent": "A lot more.",
                    "label": 0
                },
                {
                    "sent": "But let's move on to the topic of random trees.",
                    "label": 0
                },
                {
                    "sent": "So here is a random tree with 50 vertices.",
                    "label": 1
                },
                {
                    "sent": "I'm going to say random tree, then, well, I'm not being very clear right because I'm not saying anything about the model of randomness and just looking at a tree like this.",
                    "label": 0
                },
                {
                    "sent": "This is probably not clear at all.",
                    "label": 0
                },
                {
                    "sent": "Well, in this specific case what I did was to generate a random labeled tree with 50 vertices and they not just threw away the labels, so.",
                    "label": 0
                },
                {
                    "sent": "In the original setting, at 50 vertices labeled from one up to 50, and then among all the possible 50 to the power 48 or 49, because this one is rooted.",
                    "label": 0
                },
                {
                    "sent": "Label trees, I'm taking one uniformly at random, and of course I don't have to generate all the trees and then draw one.",
                    "label": 0
                },
                {
                    "sent": "There are way more sophisticated ways to generate.",
                    "label": 0
                },
                {
                    "sent": "But yeah, this is just one notion of a random tree, and what I'm getting from it.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So what kinds of random tree models do we have?",
                    "label": 1
                },
                {
                    "sent": "As I said before, it depends very much on what you're interested in, whether your coming, say from a computational biology background where phylogentic trees are or what you're interested in, where you may be mostly dealing with binary trees or from an analysis of algorithms POV where you're using your trees as data structures.",
                    "label": 0
                },
                {
                    "sent": "These perspectives.",
                    "label": 1
                },
                {
                    "sent": "May influence what you consider to be a good model of randomness for trees and well, depending on the specific applications that people have in mind or just pure curiosity from mathematical point of view, people have studied various ways of generating trees at random, and I'm going to show you a few of these and then focus on one specific type.",
                    "label": 0
                },
                {
                    "sent": "Perhaps the most natural type of random tree model which is uniform models.",
                    "label": 0
                },
                {
                    "sent": "And then look at distributional properties of these trees so.",
                    "label": 0
                },
                {
                    "sent": "The first thing that would probably come up with our uniform models, So what you're doing there is, you're taking your favorite class of trees.",
                    "label": 0
                },
                {
                    "sent": "Let's say you're taking label trees or you're taking rooted binary trees, and then you specify some size, let's say 100 vertices or thousand vertices, and just take one of the possible trees that you can get uniformly at random.",
                    "label": 0
                },
                {
                    "sent": "Well, that's the most intuitive one, I would say.",
                    "label": 0
                },
                {
                    "sent": "Take uniformly at random one of the trees in your favorite family.",
                    "label": 0
                },
                {
                    "sent": "Another way of producing a tree is through branching.",
                    "label": 1
                },
                {
                    "sent": "Crisis is typical example being Golden Watson trees and now we'll get to the specific definition of these trees.",
                    "label": 0
                },
                {
                    "sent": "So here what you're doing is you're letting that regrow.",
                    "label": 0
                },
                {
                    "sent": "According to some process.",
                    "label": 0
                },
                {
                    "sent": "Similar one where you're also letting your tree grow one by one are increasing tree models like recursive trees that I will also explain in a little bit more detail in a minute or two here, you're basically adding your vertices 1 by 1 until you're up to the desired size.",
                    "label": 0
                },
                {
                    "sent": "Something that's more related to computer science applications, models that are based on random strings or random permutations, or typical examples here or random tries, or random binary search trees where you're generating some sort of data.",
                    "label": 1
                },
                {
                    "sent": "Randomly.",
                    "label": 0
                },
                {
                    "sent": "For example, well, a list of random 01 strings, as in the case of choice, or a random permutation of objects for binary search trees.",
                    "label": 0
                },
                {
                    "sent": "And then you're building a data structure from that random data which generates a random tree.",
                    "label": 0
                },
                {
                    "sent": "An example of that will follow again in a moment or two.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So as I said, uniform models, perhaps the most intuitive, the most natural to begin with.",
                    "label": 0
                },
                {
                    "sent": "I take the uniform distribution on the set of trees over given order within some specified family.",
                    "label": 1
                },
                {
                    "sent": "So take the family of unlabeled trees, the family of all unlabeled trees, family, full binary trees, and just pick one uniformly at random.",
                    "label": 0
                },
                {
                    "sent": "So one typical approach there is often exact counting, because if you tag things uniformly, then.",
                    "label": 0
                },
                {
                    "sent": "Starting point is always well, how many trees are there actually my family.",
                    "label": 0
                },
                {
                    "sent": "What's going to be the denominator in all my probabilities?",
                    "label": 1
                },
                {
                    "sent": "Generating functions play a role here quite often, and I typical instance where we're doing that is simply generated families of trees.",
                    "label": 0
                },
                {
                    "sent": "So this notion goes back to the 70s due to a series of papers when Mirror Moon.",
                    "label": 0
                },
                {
                    "sent": "We will see exactly what it means to be simply generated.",
                    "label": 0
                },
                {
                    "sent": "This notion encompasses variety of very natural tree models.",
                    "label": 0
                },
                {
                    "sent": "Within one.",
                    "label": 0
                },
                {
                    "sent": "Overall model.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So how that works is as follows.",
                    "label": 0
                },
                {
                    "sent": "I take the set of all rated order trees.",
                    "label": 1
                },
                {
                    "sent": "Or plain trees as I called them earlier, so my trees are rooted there.",
                    "label": 0
                },
                {
                    "sent": "Ordered the order of the branches, does play a role, and I impose some weight function on the seat.",
                    "label": 1
                },
                {
                    "sent": "So I specify a sequence.",
                    "label": 0
                },
                {
                    "sent": "It's Canonical to start the sequence with one.",
                    "label": 0
                },
                {
                    "sent": "It's not entirely necessary.",
                    "label": 0
                },
                {
                    "sent": "That sort of normalizes things.",
                    "label": 0
                },
                {
                    "sent": "These weights are associated with the out degrees of vertices, so W 0 is associated with art degree 0 W. One assertion without degree one and so forth, and then I define a weight on trees and add weight is simply the product of all the weights of all the vertices, vertex of art degree.",
                    "label": 0
                },
                {
                    "sent": "I gets away WI.",
                    "label": 0
                },
                {
                    "sent": "So if I take the product of all my weights then that means that I'm taking WI exactly NI times where N is the number of vertices that have out degree I.",
                    "label": 1
                },
                {
                    "sent": "Right, taking this big product gives me a weight function for trees and what I do next is to take a tree of order N. So let's say 100 vertices at random, but I'm not taking a plane tree entirely uniformly at random anymore.",
                    "label": 1
                },
                {
                    "sent": "I'm doing this proportional to the weights.",
                    "label": 0
                },
                {
                    "sent": "So for instance, if I just make all the weights equal to 1, then that's the simplest possible case.",
                    "label": 0
                },
                {
                    "sent": "Then each tree gets a weight of 1, and that means that picking a tree at random according to this way, these weights or proportionally to these weights means nothing.",
                    "label": 0
                },
                {
                    "sent": "But generating a random plane tree, well, all of them have the same weight, but I can mimic restrictions quite well using these weights.",
                    "label": 0
                },
                {
                    "sent": "For instance, with a very simple choice of weights where W 0 and W2 are equal to 1, but all the other weights are zero, I'm enforcing.",
                    "label": 0
                },
                {
                    "sent": "Binary trees.",
                    "label": 0
                },
                {
                    "sent": "That's because a tree that is not binary that has vertices with one or more than two children will get a weight of zero.",
                    "label": 0
                },
                {
                    "sent": "Since one of the product.",
                    "label": 0
                },
                {
                    "sent": "Since one of the factors in this product will be 0.",
                    "label": 0
                },
                {
                    "sent": "But binary trees all have a weight of exactly 1, so choosing a plain tree according to these weights now means that I'm filtering out exactly the binary trees.",
                    "label": 0
                },
                {
                    "sent": "Here is 1 where I'm using weights other than zero and one random reeded label trees, or at least something that's equivalent to it, can be generated by taking the weights equal to 1 / I factorial.",
                    "label": 0
                },
                {
                    "sent": "So that comes from the fact that for a vertex of art degree I I have I factorial ways of arranging the branches.",
                    "label": 0
                },
                {
                    "sent": "Nine plane trees I care about the order of the branches, but in rooted labeled trees I no longer do that because they are distinguished distinguishable by their labels and so this one over I factorial kind of factors out the possible ways of drawing a. Label tree a given label tree as a rooted order tree or the tree in the plane.",
                    "label": 0
                },
                {
                    "sent": "With this weight function.",
                    "label": 0
                },
                {
                    "sent": "The shape of the tree that I'm going to generate is equivalent to the shape that I would get by generating a random rooted labeled tree.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Right, let's get to branching processes.",
                    "label": 1
                },
                {
                    "sent": "The Golden Watson model that I've already mentioned is.",
                    "label": 0
                },
                {
                    "sent": "A classical way of generating trees, and it turns out to be more or less equivalent to the notion of simply generated trees.",
                    "label": 1
                },
                {
                    "sent": "So you fix some probability distribution on the set of possible out degree 012 and so forth.",
                    "label": 0
                },
                {
                    "sent": "Then you start with a single vertex, the root.",
                    "label": 1
                },
                {
                    "sent": "And at time T all the vertices that are T away from the root generate offspring and they all do that in dependently and they do that according to that fixed distribution that are defined at the beginning.",
                    "label": 0
                },
                {
                    "sent": "Sorry if I continue and continue and keep doing that.",
                    "label": 0
                },
                {
                    "sent": "To the point where the tree dies out at order N. So technically what I'm doing here is I'm conditioning the process to die out when it reaches exactly N vertices, right?",
                    "label": 0
                },
                {
                    "sent": "A tree, the tree that I'm generating in this way can always die out.",
                    "label": 0
                },
                {
                    "sent": "That happens when all the trees at the current label have zero offspring.",
                    "label": 0
                },
                {
                    "sent": "So that happens with some probability if a condition to that happening exactly when I reach in vertices, then I'm getting what is called a conditioned random Golden Watson tree.",
                    "label": 0
                },
                {
                    "sent": "That way I can enforce a certain size.",
                    "label": 0
                },
                {
                    "sent": "And as it turns out, simply generated treason, called Watson trees are more or less equivalent notions.",
                    "label": 0
                },
                {
                    "sent": "It's not entirely immediate why that is so, but we will see that, for example, a geometric distribution for branching gives you just an ordinary random planetree Apostle distribution would give you a random rooted label tree.",
                    "label": 1
                },
                {
                    "sent": "Basically, the role that the probabilities are playing correspond to the rules of the weights in the previous slide.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So here is a construction of a Golden Watson tree using this model.",
                    "label": 1
                },
                {
                    "sent": "Now to generate binary trees, each vertex is.",
                    "label": 0
                },
                {
                    "sent": "I don't know John Children or precisely two.",
                    "label": 1
                },
                {
                    "sent": "I just fix some probabilities for each of the two cases at the beginning and then I start generating read retest.",
                    "label": 0
                },
                {
                    "sent": "Two children.",
                    "label": 0
                },
                {
                    "sent": "Now at time one each of the two vertices produces offspring.",
                    "label": 0
                },
                {
                    "sent": "The first one dies out, the second one still has children, and then I continue at level 2.",
                    "label": 0
                },
                {
                    "sent": "Areas of the remaining vertices have two children and label 3 the same thing again and again, and I might continue for it.",
                    "label": 0
                },
                {
                    "sent": "So this is how well what's in.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "He's worked as it turns out.",
                    "label": 0
                },
                {
                    "sent": "As I said, they are equivalent to simply generated trees.",
                    "label": 0
                },
                {
                    "sent": "This example is supposed to illustrate that, so I'm considering the Golden what's in prices.",
                    "label": 0
                },
                {
                    "sent": "That's based on the geometric distribution, meaning that having K children has probability P * Q to the K, where P is this.",
                    "label": 1
                },
                {
                    "sent": "That way, if some of the geometric series are getting a proper probability distribution Now, what would be the probability that my process generates exactly this tree?",
                    "label": 0
                },
                {
                    "sent": "Well, let's look at it.",
                    "label": 0
                },
                {
                    "sent": "The tree has seven leaves, so each of these leaves had zero children, which happens with probability P by definition.",
                    "label": 0
                },
                {
                    "sent": "So I'm getting a factor P to the Power 7.",
                    "label": 0
                },
                {
                    "sent": "Then I have two vertices here and here with exactly one child.",
                    "label": 0
                },
                {
                    "sent": "Each of these was happening with probability PQ, so I'm getting this factor.",
                    "label": 0
                },
                {
                    "sent": "Then there are also vertices with two children here and here.",
                    "label": 0
                },
                {
                    "sent": "That gives me P, Q, ^2, ^2 and finally three children over here and over here.",
                    "label": 0
                },
                {
                    "sent": "Each of them give me a factor PQ cubed according to the definition of the probability distribution.",
                    "label": 0
                },
                {
                    "sent": "Now if I multiply will then out, I'm getting the probability P to the 13th Q to the 12:40 event that the process produces exactly this tree.",
                    "label": 0
                },
                {
                    "sent": "Now if you count then you'll see that this tree has 13 vertices and 13 occurs here, and 12 is exactly 1 less.",
                    "label": 0
                },
                {
                    "sent": "That's not a coincidence because each of the vertices gives us a factor P. So that necessarily always gives us P to 13 for every tree with 13 vertices.",
                    "label": 0
                },
                {
                    "sent": "And how often do I get Q?",
                    "label": 0
                },
                {
                    "sent": "Well, I'm getting a queue for each vertex that's a child because a vertex with K children gives me Kate Q to the K OK, but every vertex except for the root is a child, so I'm having exactly 1 less than the total number of vertices.",
                    "label": 0
                },
                {
                    "sent": "That's this cute apart 12.",
                    "label": 0
                },
                {
                    "sent": "So every tree with 13 vertices gives me this probability, so they all have the same probability.",
                    "label": 1
                },
                {
                    "sent": "Meaning generating a tree according to this process conditioning to dying out after 13th vertices give me a uniformly plain tree with 13 vertices and I can play a similar game with other probability distributions than this one.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, now let's get somewhere different.",
                    "label": 0
                },
                {
                    "sent": "Model random increasing trees.",
                    "label": 0
                },
                {
                    "sent": "So here producing the trees by adding vertices one by one and that gives me random recursive trees, so I'm starting again with the read.",
                    "label": 1
                },
                {
                    "sent": "The read gets the label one and the end Vertex arrives and attaches to one of the previously existing vertices.",
                    "label": 1
                },
                {
                    "sent": "There in minus one there so uniformly at random.",
                    "label": 0
                },
                {
                    "sent": "Each of these N -- 1 possibilities.",
                    "label": 0
                },
                {
                    "sent": "Right that way I'm guaranteed that the labels along any path are increasing right because the labels correspond to the times of which vertices arrive.",
                    "label": 1
                },
                {
                    "sent": "That's why these trees are called increasing.",
                    "label": 1
                },
                {
                    "sent": "And it's clear that there in one is 1 factorial possible recursive trees because they can't vertex has a -- 1 possibilities where he can attach taking the product, use main ones 1 factorial.",
                    "label": 1
                },
                {
                    "sent": "So indeed there are also nice connections to permutations, bijections, some statistics that are equidistributed, many nice things.",
                    "label": 0
                },
                {
                    "sent": "But I will not look at those today.",
                    "label": 0
                },
                {
                    "sent": "And we can modify this as well.",
                    "label": 0
                },
                {
                    "sent": "Instead of choosing apparent uniformly at random, you can in Paris some rules.",
                    "label": 0
                },
                {
                    "sent": "For example, you may attach to parents with a higher probability if they already have lots of children.",
                    "label": 0
                },
                {
                    "sent": "This is called preferential attachment.",
                    "label": 0
                },
                {
                    "sent": "Or another way would be you can only attach until your vertex has two children in your enforcing binary trees again.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Here is this construction.",
                    "label": 0
                },
                {
                    "sent": "Recursive trees with N vertices.",
                    "label": 0
                },
                {
                    "sent": "So I start with the routine attached #2 attention #3 somewhere attached #4.",
                    "label": 0
                },
                {
                    "sent": "For five, 5 four possibilities for six or five possibilities, and so on and so forth, they arrive 1 by 1.",
                    "label": 0
                },
                {
                    "sent": "So this is I'm getting increasing trees.",
                    "label": 1
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Last time that I want to mention prices that are based on random strings, so tries are a data structure, it's short for retrieval.",
                    "label": 1
                },
                {
                    "sent": "Trees are used for storing, strings are a finite alphabet, and if you can store you can also search and things like that.",
                    "label": 1
                },
                {
                    "sent": "So random binary tries obtained by creating random binary strings of sufficient length, and there must all be distinct.",
                    "label": 0
                },
                {
                    "sent": "So I want different datasets.",
                    "label": 0
                },
                {
                    "sent": "So for all practical purposes, you can just assume that there are infinite in length, and then you're building a try from it would works, which works like this.",
                    "label": 0
                },
                {
                    "sent": "Everything that starts with a zero goes to the left.",
                    "label": 0
                },
                {
                    "sent": "Everything that starts with a one goes to the right and then you continue recursively with the 2nd, third, 4th and so forth digit.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Procedure the procedure is repeated recur.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Simply that gives you something like this.",
                    "label": 0
                },
                {
                    "sent": "Here I'm generating just four strings and up to the point where they're all distinct and you see that string starting with one goes to the right.",
                    "label": 0
                },
                {
                    "sent": "The zeros go to the lift and in well distinguishing further, this one has a zero in the second spot, so it goes to the left.",
                    "label": 0
                },
                {
                    "sent": "These with one code to the right, and then I'm distinguishing further according to the 3rd digit and so forth.",
                    "label": 0
                },
                {
                    "sent": "So then producing random strings then also getting random trees in this way.",
                    "label": 1
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, the title of my talk contains 3 parameters, So what kind of parameters could be be interested in?",
                    "label": 0
                },
                {
                    "sent": "There are really lots of them and maybe you have some more that you would like to add to the list after this talk.",
                    "label": 0
                },
                {
                    "sent": "Very basic one.",
                    "label": 0
                },
                {
                    "sent": "The number of leaves.",
                    "label": 0
                },
                {
                    "sent": "I'm generating a tree at random.",
                    "label": 0
                },
                {
                    "sent": "How many leaves does it have?",
                    "label": 0
                },
                {
                    "sent": "Can I say something about that number of vertices?",
                    "label": 0
                },
                {
                    "sent": "We're given degree that's a generalization.",
                    "label": 0
                },
                {
                    "sent": "Special case zero would be the number of leaves.",
                    "label": 1
                },
                {
                    "sent": "The number of fringe subtrees, so fringe subtree is a subtree that consists of a vertex and everything that's below it.",
                    "label": 1
                },
                {
                    "sent": "And of course.",
                    "label": 0
                },
                {
                    "sent": "Tree with N vertices will contain N such fringe subtrees, one for each vertex, and I might be interested in how often does a certain shape appear.",
                    "label": 0
                },
                {
                    "sent": "Well, that's my parameter here.",
                    "label": 0
                },
                {
                    "sent": "The height is something that's very important for algorithms because it's saying something about worst case scenarios.",
                    "label": 0
                },
                {
                    "sent": "So the maximum distance of a leaf from the root is how tall the trees.",
                    "label": 1
                },
                {
                    "sent": "The path links similar motivation, but it's more related to the average rather than the maximum.",
                    "label": 0
                },
                {
                    "sent": "I'm taking the distance of each vertex from the root and then I'm taking the sum of all of that.",
                    "label": 0
                },
                {
                    "sent": "If I divide that by the number of trees, I'm getting an average.",
                    "label": 0
                },
                {
                    "sent": "Viena index.",
                    "label": 1
                },
                {
                    "sent": "Similar story is the sum of all distances between pairs of vertices, so.",
                    "label": 0
                },
                {
                    "sent": "I take for each vertex pair distance and then I sum all of these.",
                    "label": 1
                },
                {
                    "sent": "OK, I'm destroying equipment here.",
                    "label": 0
                },
                {
                    "sent": "And if you were to divide this by the number of pairs, then you would get an average distance between vertices.",
                    "label": 0
                },
                {
                    "sent": "The number of automorphisms, right?",
                    "label": 1
                },
                {
                    "sent": "If you care about symmetry, then you might want to know how large is your eyes.",
                    "label": 1
                },
                {
                    "sent": "Automorphism group has a metric is the tree.",
                    "label": 1
                },
                {
                    "sent": "Or you might be interested in how many substructures does it have.",
                    "label": 1
                },
                {
                    "sent": "In total, the number of subtrees.",
                    "label": 0
                },
                {
                    "sent": "So here I'm saying that everything that's a subtree.",
                    "label": 0
                },
                {
                    "sent": "Whether it's a fringe subtree or North counts.",
                    "label": 0
                },
                {
                    "sent": "Sandy and I want to know something about the total number.",
                    "label": 0
                },
                {
                    "sent": "Or the number of independent states?",
                    "label": 0
                },
                {
                    "sent": "Or the number of matchings?",
                    "label": 0
                },
                {
                    "sent": "Or the spectrum, so that a nice one.",
                    "label": 0
                },
                {
                    "sent": "So the spectrum that could be the spectrum of the adjacency matrix or the spectrum of the Laplacian matrix, or some other matrix that you can associate with the graph.",
                    "label": 0
                },
                {
                    "sent": "You want to know something about the distribution of the eigenvalues of a typical random tree.",
                    "label": 0
                },
                {
                    "sent": "And this list is by no means complete, is just.",
                    "label": 0
                },
                {
                    "sent": "So if a list of some of the parameters that I'm personally interested in, but I'm sure that there are many.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So given the family of trees or some random tree model that you want to investigate and a tree parameter that you care about for whatever reason.",
                    "label": 1
                },
                {
                    "sent": "What can we say about average value or the variance or higher moments?",
                    "label": 1
                },
                {
                    "sent": "So that's the questions that Probabilists will necessarily ask, or if that is too easy, somehow, then can we say more about the distribution?",
                    "label": 0
                },
                {
                    "sent": "Can we prove convergence in distribution or some other notion of convergence?",
                    "label": 1
                },
                {
                    "sent": "Almost sure convergence works in some cases.",
                    "label": 0
                },
                {
                    "sent": "And these questions are particularly relevant when N is large, so we are looking at limit scenarios where we let the trees grow to Infinity and then want to know what's the distribution in the limit.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So some examples of these parameters.",
                    "label": 1
                },
                {
                    "sent": "This tree here has 11 leaves.",
                    "label": 0
                },
                {
                    "sent": "Can count them.",
                    "label": 0
                },
                {
                    "sent": "There's two cherries.",
                    "label": 0
                },
                {
                    "sent": "Cherry is a special kind of fringe subtree, something like this, right?",
                    "label": 0
                },
                {
                    "sent": "Thank you.",
                    "label": 0
                },
                {
                    "sent": "See why it's called a cherry or two of them.",
                    "label": 0
                },
                {
                    "sent": "Height is 4.",
                    "label": 0
                },
                {
                    "sent": "You need 4 steps to get from the root to leaf.",
                    "label": 0
                },
                {
                    "sent": "That's very just away.",
                    "label": 0
                },
                {
                    "sent": "The path length that's the sum of all the distances from the reaches 44 you can check.",
                    "label": 0
                },
                {
                    "sent": "This can still be done.",
                    "label": 0
                },
                {
                    "sent": "I think.",
                    "label": 0
                },
                {
                    "sent": "Relatively quickly, the 384 automorphisms well, we don't want to list them one by one.",
                    "label": 0
                },
                {
                    "sent": "But what can we do when we can permute these forward?",
                    "label": 0
                },
                {
                    "sent": "It gives us 24.",
                    "label": 0
                },
                {
                    "sent": "And then we can permute these two.",
                    "label": 0
                },
                {
                    "sent": "That gives us another two.",
                    "label": 0
                },
                {
                    "sent": "And here we can flip.",
                    "label": 0
                },
                {
                    "sent": "These two and we can flip individually so that gives us another eight and then we have to take the product of all of these and that gives us this 384.",
                    "label": 0
                },
                {
                    "sent": "It's quite well known what the structure of the automorphism groups of trees are.",
                    "label": 0
                },
                {
                    "sent": "They can all be obtained by iterative direct products or wreath products.",
                    "label": 0
                },
                {
                    "sent": "Over here you see an example where we re product is needed.",
                    "label": 0
                },
                {
                    "sent": "It's not a direct product over here because well you have a group here.",
                    "label": 0
                },
                {
                    "sent": "You've group here, but then you're also.",
                    "label": 0
                },
                {
                    "sent": "Switching these theories so there you need the wreath, product and Lastly well, it's got 3945 subtrees.",
                    "label": 0
                },
                {
                    "sent": "I encourage you to count them.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "It's not difficult if you have recursion, actually.",
                    "label": 0
                },
                {
                    "sent": "Right, so now let's get to some examples of distributions.",
                    "label": 1
                },
                {
                    "sent": "Here is a nice one, and one that you possibly know.",
                    "label": 0
                },
                {
                    "sent": "So if I count the number of leaves in plain trees, then there is actually very elegant formula than Ariana numbers.",
                    "label": 1
                },
                {
                    "sent": "Do that and so you get a beautiful histogram like this.",
                    "label": 0
                },
                {
                    "sent": "And of course they can make this much bigger.",
                    "label": 0
                },
                {
                    "sent": "And I can do everything very explicitly.",
                    "label": 0
                },
                {
                    "sent": "You see it already here.",
                    "label": 0
                },
                {
                    "sent": "This looks a little bit like Gaussian already, and indeed it turns out that in the limit you will have a Gaussian distribution here as you do with the binomial distribution.",
                    "label": 0
                },
                {
                    "sent": "That's not difficult to prove you apply Stirling's formula to this, for instance.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Here is a more complicated one.",
                    "label": 0
                },
                {
                    "sent": "I'm taking binary trees this time and I'm interested in the height.",
                    "label": 1
                },
                {
                    "sent": "So what's the distribution here?",
                    "label": 0
                },
                {
                    "sent": "Drawing a histogram, obviously it has to stop at 30, can't grow higher than that.",
                    "label": 0
                },
                {
                    "sent": "And this one looks a little bit more complicated.",
                    "label": 0
                },
                {
                    "sent": "It's Q.",
                    "label": 0
                },
                {
                    "sent": "It doesn't look like Gaussian, and in fact it isn't.",
                    "label": 0
                },
                {
                    "sent": "As it turns out.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And here is a really horrible one.",
                    "label": 0
                },
                {
                    "sent": "So the number of subtrees by chosen label trees with 15 vertices.",
                    "label": 1
                },
                {
                    "sent": "Cannot really go much higher than that.",
                    "label": 0
                },
                {
                    "sent": "If you want absolutely exact counts.",
                    "label": 0
                },
                {
                    "sent": "And an exact histogram like this.",
                    "label": 0
                },
                {
                    "sent": "So this looks really messy.",
                    "label": 0
                },
                {
                    "sent": "I mean there is some kind of smoothness here, but it's also very.",
                    "label": 0
                },
                {
                    "sent": "Very messy and Brandon.",
                    "label": 0
                },
                {
                    "sent": "It's not quite clear whether this will converge to anything nice.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So in the following will be specifically looking at.",
                    "label": 0
                },
                {
                    "sent": "There is uniform models that are mentioned, so I'm either taking simply generated families of trees or unlabeled Rita trees, also known as polio trees.",
                    "label": 0
                },
                {
                    "sent": "They're not simply generated, but almost for all practical purposes they are.",
                    "label": 0
                },
                {
                    "sent": "Structurally they have a lot of similar properties, and I will give you some examples of the distributional results that we get for this specific family of trees where these families of trees rather.",
                    "label": 0
                },
                {
                    "sent": "For increasing trees or random tries or random search trees and whatnot, you get somewhat different results.",
                    "label": 0
                },
                {
                    "sent": "Somewhat different shapes, but similar flavor still.",
                    "label": 0
                },
                {
                    "sent": "And in each case, we are considering a random element which I'm calling tiene in that given family.",
                    "label": 0
                },
                {
                    "sent": "Let's say random binary tree with N vertices or random label tree then vertices.",
                    "label": 0
                },
                {
                    "sent": "And for some parameter P, what can I say about the distribution of P?",
                    "label": 1
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Now a very classical one is the number of leaves.",
                    "label": 1
                },
                {
                    "sent": "Been studied as far back as 1980s and special cases even much earlier than that.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "You can generalize this further, but so the bottom line is, the number of leaves is asymptotically Gaussian in all of these three families.",
                    "label": 0
                },
                {
                    "sent": "Each time you have a mean that's linear in in and variance that's also linear in in.",
                    "label": 0
                },
                {
                    "sent": "At least asymptotically, and if you renormalize, so if you subtract the mean.",
                    "label": 0
                },
                {
                    "sent": "To get mean 0 and divide by the variance or sort of the standard deviation rather square root of the variance so as to get to a normalized version where the variance is 1.",
                    "label": 0
                },
                {
                    "sent": "Then you have weak convergence to a standard normal distribution, right?",
                    "label": 1
                },
                {
                    "sent": "So if you're not familiar with the notion of weak convergence, it means that the cumulative distribution functions converge soda probability that.",
                    "label": 0
                },
                {
                    "sent": "A random variable is less equal X. Converges to a limit value for each X.",
                    "label": 0
                },
                {
                    "sent": "In a nutshell, if I draw this histogram for the number of leaves for very very large trees, then it will look like the typical Gaussian Bell curve.",
                    "label": 1
                },
                {
                    "sent": "This generalizes, and that's why I have more references over here.",
                    "label": 0
                },
                {
                    "sent": "The number of vertices with the given degree, the number of fringe subtrees of a given shape.",
                    "label": 1
                },
                {
                    "sent": "The number of leaves is a special case of both of these.",
                    "label": 0
                },
                {
                    "sent": "And in each case we have the same type of law, just the constants mu and Sigma squared will change.",
                    "label": 0
                },
                {
                    "sent": "They will change from.",
                    "label": 0
                },
                {
                    "sent": "From degree to degree or they will change depending on what you take here for degree or what do you take here for the fringe subtree or also what family if you take so you have several things that these values will depend on.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "The height resource histogram earlier and the height is quite different.",
                    "label": 1
                },
                {
                    "sent": "It is not Gaussian.",
                    "label": 0
                },
                {
                    "sent": "We saw that already in the picture.",
                    "label": 0
                },
                {
                    "sent": "It looked skewed.",
                    "label": 0
                },
                {
                    "sent": "So here it turns out that the hype is roughly of order square root in, so the mean is.",
                    "label": 0
                },
                {
                    "sent": "Asymptotically equal to some constant times the square root of the number of vertices, and if you divide by that then you have convergence to what is called a theater distribution.",
                    "label": 0
                },
                {
                    "sent": "The reason it's called that is that the density function is related to theater series.",
                    "label": 1
                },
                {
                    "sent": "This ugly looking thing, but this is actually a proper density function.",
                    "label": 0
                },
                {
                    "sent": "It specifies a probability distribution, and it's the right probability distribution.",
                    "label": 0
                },
                {
                    "sent": "The height of all these simply generated families of trees.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Here is the limit shape, so if I were to make the trees very large and look at the histogram from far then it would look a bit like this curve.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Here is another instance path length, so the path length was the sum of the distances from the root.",
                    "label": 1
                },
                {
                    "sent": "Here I'm not looking at the maximum, but the some work equivalently, average here.",
                    "label": 0
                },
                {
                    "sent": "Turns out that the main is of order N to three half.",
                    "label": 0
                },
                {
                    "sent": "If you divide by the number of vertices, you get an average distance, which is of all the square root N. So same order as the height and the same here if you divide by the number of pairs, you get an average.",
                    "label": 0
                },
                {
                    "sent": "Turns out that these average is actually the same, so.",
                    "label": 0
                },
                {
                    "sent": "On average.",
                    "label": 0
                },
                {
                    "sent": "A vertex is about mu Times Square root in away from the root and two randomly chosen vertices also mute times in away from each other.",
                    "label": 0
                },
                {
                    "sent": "So the root is not very special actually.",
                    "label": 1
                },
                {
                    "sent": "Here you get some funny random variables in the limit, if you divide 3 by the means then you get limiting shapes that can be defined in terms of normalized Brownian excursion.",
                    "label": 1
                },
                {
                    "sent": "So normalized Brownian excursion means.",
                    "label": 0
                },
                {
                    "sent": "Take the.",
                    "label": 0
                },
                {
                    "sent": "Brownian Motion Brownian motion goes below the X axis sometimes, so you want to exclude that and you're also conditioning on it reaching zero at the end.",
                    "label": 0
                },
                {
                    "sent": "That gives you a Browning excursion, and there is a natural relation here, because there is a relation between trees and paths.",
                    "label": 0
                },
                {
                    "sent": "You can basically take a lattice policy and folded to get a tree.",
                    "label": 0
                },
                {
                    "sent": "You can unfold it to get a path, and in the limit the paths become Brownian excursions, so that's the relation here.",
                    "label": 1
                },
                {
                    "sent": "Just from a heuristic point of view, then it gives you these.",
                    "label": 0
                },
                {
                    "sent": "These are random variables because Y of T here is a random variable.",
                    "label": 0
                },
                {
                    "sent": "Therefore this integral is also random variable.",
                    "label": 0
                }
            ]
        },
        "clip_31": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So for instance, the path length has this limiting distribution, which is known as airy distribution.",
                    "label": 0
                },
                {
                    "sent": "The reason being that it's related to a special function that's due to area.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_32": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Mostly on like to talk about something that's very close to my heart.",
                    "label": 0
                },
                {
                    "sent": "Personally, it's added to functionals.",
                    "label": 0
                },
                {
                    "sent": "It's a notion that aims at unifying whole number of different tree parameters that are around.",
                    "label": 1
                },
                {
                    "sent": "What additive means here is that I can compute the parameter recursively by summing it over all the branches and then adding something for the tree, and that something is called that all function.",
                    "label": 1
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "In a formula it's like this.",
                    "label": 0
                },
                {
                    "sent": "Here is my tree and it splits into branches B1 up to BK and I'm calculating my parameter F by summing if over all the branches and then adding this tool function left and our priority little F can be anything, which means that actually every tree parameter you can think of is additive.",
                    "label": 0
                },
                {
                    "sent": "You simply define F to satisfy this.",
                    "label": 0
                },
                {
                    "sent": "OK, that means that this notion is only really useful if F little F. That all function is something simple, something we can understand, something we can somehow get a grip on, but it turns out that this is often the case.",
                    "label": 0
                },
                {
                    "sent": "The recursion remains true even if I take the tree of order one, just by assuming that that all function there is equal to capital F, then this works with this being an empty sum.",
                    "label": 0
                }
            ]
        },
        "clip_33": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "An equivalent definition that's not very difficult to share by induction.",
                    "label": 1
                },
                {
                    "sent": "Recursion is equivalent to an explicit formula where I'm taking the toll function and summing it over all the fringe subtrees.",
                    "label": 0
                },
                {
                    "sent": "So remember, French subtree is what I get if I take a vertex V and everything that's below it, that's a frame subtree.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "Each such tree will have its own functional if associated with it, and then, uh, some.",
                    "label": 0
                },
                {
                    "sent": "This over all the vertices in my tree of in terms in that some, if that's the number of vertices, and it turns out that this here is completely equivalent to that that's not very difficult to show as a St by induction, so you have two different notions that are equivalent.",
                    "label": 0
                }
            ]
        },
        "clip_34": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So let me show you some examples to convince you that this is perhaps a reasonable definition.",
                    "label": 0
                },
                {
                    "sent": "The number of leaves does that.",
                    "label": 1
                },
                {
                    "sent": "It corresponds to this tool function, where I'm adding one if the tree is only a single leaf, and otherwise 0 right because the number of leaves is the sum of the number of leaves in all the branches.",
                    "label": 0
                },
                {
                    "sent": "And if the tree is just the root itself, then that also counts as a leaf, so they now have to add 1, but otherwise not.",
                    "label": 0
                },
                {
                    "sent": "The number of occurrences of affix treated tree H on the fringe would work quite similarly.",
                    "label": 1
                },
                {
                    "sent": "Just adding one if the tree itself does that.",
                    "label": 0
                },
                {
                    "sent": "Otherwise it's just a sum over the branches.",
                    "label": 0
                },
                {
                    "sent": "Number of vertices whose out degree is some fixed number K. Similar story if the root does that.",
                    "label": 1
                },
                {
                    "sent": "If it hasn't degree K then I have to add 1 to the account.",
                    "label": 0
                },
                {
                    "sent": "Otherwise I'm just summing over all the branches.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_35": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Let's get a bit.",
                    "label": 0
                },
                {
                    "sent": "A little bit more complicated examples perhaps where it's not the 01 law.",
                    "label": 0
                },
                {
                    "sent": "The path links, so I'm summing the distances from the overall vertices.",
                    "label": 1
                },
                {
                    "sent": "Right now the distance from the root in the branch is the distance from the reading the whole tree, except for the plus one right?",
                    "label": 1
                },
                {
                    "sent": "The last step up to the root.",
                    "label": 0
                },
                {
                    "sent": "So for each vertex in the branch I have to take the distance to the read in the branch and then add another wall there for the contribution of each branch.",
                    "label": 0
                },
                {
                    "sent": "Is this right?",
                    "label": 0
                },
                {
                    "sent": "The total path length in the branch and then plus one for each vertex in the branch?",
                    "label": 0
                },
                {
                    "sent": "So that gives me a total of that, and if I simplify.",
                    "label": 0
                },
                {
                    "sent": "I'm getting this, which means that the right tool function is the number of vertices minus one.",
                    "label": 0
                },
                {
                    "sent": "That works for the parsley.",
                    "label": 1
                },
                {
                    "sent": "The log product of the subtree sizes.",
                    "label": 0
                },
                {
                    "sent": "Goes under different names.",
                    "label": 0
                },
                {
                    "sent": "Here I'm taking the logarithm of the size as the tool function.",
                    "label": 0
                },
                {
                    "sent": "Turns out that this is not as unnatural as you might think, among other things.",
                    "label": 0
                },
                {
                    "sent": "It's related to the number of linear extensions.",
                    "label": 1
                },
                {
                    "sent": "Why, well, if I want to count linear extensions?",
                    "label": 0
                },
                {
                    "sent": "Well, the tree I'm thinking of the tree as a parasite here well.",
                    "label": 0
                },
                {
                    "sent": "I take a linear extension in each of the branch in each of the branches separately, and then I have to also.",
                    "label": 0
                },
                {
                    "sent": "Serve.",
                    "label": 0
                },
                {
                    "sent": "Assign which.",
                    "label": 0
                },
                {
                    "sent": "Which terms in the linear order go to which branch?",
                    "label": 0
                },
                {
                    "sent": "And that's this multinomial coefficient over here.",
                    "label": 0
                },
                {
                    "sent": "And that gives me the number of linear extensions in the whole Treaty, right?",
                    "label": 0
                },
                {
                    "sent": "I'm choosing how the vertices in the different branches are assigned 1st and then within each branch I'm choosing a linear extent.",
                    "label": 0
                },
                {
                    "sent": "And if I've just modified a little bit, play around with that.",
                    "label": 0
                },
                {
                    "sent": "And it turns out that the logarithm of this equation satisfies the additive relation with functional log with full function locked.",
                    "label": 0
                },
                {
                    "sent": "So if I know.",
                    "label": 0
                },
                {
                    "sent": "Something about this parameter then also know about the number of linear extensions, of course.",
                    "label": 0
                }
            ]
        },
        "clip_36": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Number of automorphisms, right?",
                    "label": 0
                },
                {
                    "sent": "So how do I get in automorphism?",
                    "label": 0
                },
                {
                    "sent": "By moving things around into different branches and I can do that sort of independently so it's this product and then I can also permute the branches if I have C1 branches of type 1C2 branches type 2 and so on, then this here is the number of ways I can permute the branches.",
                    "label": 0
                },
                {
                    "sent": "That taken into account, I'm getting this formula right here.",
                    "label": 0
                },
                {
                    "sent": "We have a product, but of course we can turn that into a sum and again linear relation.",
                    "label": 0
                },
                {
                    "sent": "With a tool function, that's like this.",
                    "label": 0
                },
                {
                    "sent": "If an additive functional ram summing over the branch is simply madding, something.",
                    "label": 0
                },
                {
                    "sent": "The multiplicity of an eigenvalue.",
                    "label": 1
                },
                {
                    "sent": "I spoke about the spectrum earlier, well, turns out that there is again such a relation and that all function well.",
                    "label": 0
                },
                {
                    "sent": "It's a bit harder to characterize what it what exactly it is, but it only has values minus 101, which is very very useful that comes from some simple results in linear algebra for tanker symmetric matrix, and any remover Ont associated column, you can only change the dimension of the eigenspace by most one.",
                    "label": 0
                }
            ]
        },
        "clip_37": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Last one.",
                    "label": 0
                },
                {
                    "sent": "Number of subtrees.",
                    "label": 0
                },
                {
                    "sent": "So here I'm counting everything that's a subtree.",
                    "label": 0
                },
                {
                    "sent": "It's a bit more convenient to just look at the subtree that contain the root, because the recursion is nicer asymptotically, this doesn't make a difference.",
                    "label": 1
                },
                {
                    "sent": "So number of searches.",
                    "label": 1
                },
                {
                    "sent": "That contained read well in each of the branches.",
                    "label": 0
                },
                {
                    "sent": "I either take a subject that contains the root or nothing.",
                    "label": 0
                },
                {
                    "sent": "And that I do in dependently for all the branches that product that gives me this logarithm.",
                    "label": 1
                },
                {
                    "sent": "Well here I would prefer to have one plus, but it's not quite like that.",
                    "label": 0
                },
                {
                    "sent": "I have to artificially add it and then it turns out that.",
                    "label": 0
                },
                {
                    "sent": "The right relation is this.",
                    "label": 0
                },
                {
                    "sent": "And again we have this additive relation and that all function is this thing over here which doesn't look very useful because it contains S1 itself, so might not seem as if this was a very useful recursion, but actually one can do a lot of probability theory with that.",
                    "label": 0
                },
                {
                    "sent": "The main property of this thing here is that S1 of T is usually going to be very large, of course.",
                    "label": 0
                },
                {
                    "sent": "And therefore this 1 + 1 T inverse is close to one, and the logarithm is close to 0 and that is very useful.",
                    "label": 0
                }
            ]
        },
        "clip_38": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Right, what can one say about these additive functionals?",
                    "label": 0
                },
                {
                    "sent": "Well under some.",
                    "label": 0
                },
                {
                    "sent": "Reasonable conditions and there are several notions of what reasonable might be.",
                    "label": 0
                },
                {
                    "sent": "We have a central limit theorem as in the examples that, as in the example of the number of leaves, for instance, that I've shown you.",
                    "label": 0
                },
                {
                    "sent": "The central Limit theorem is always of the same shape, so we have some Constance Moore and Sigma squared that govern the growth of mean and variance mean and variance arberth linear in in.",
                    "label": 1
                },
                {
                    "sent": "And in each case I have.",
                    "label": 0
                },
                {
                    "sent": "Normalization converging weakly to a standard normal distribution, so everything that's additive with.",
                    "label": 1
                },
                {
                    "sent": "Some reasonable properties of little F. Well, I will say a little bit about what these are, but some of them are rather technical to write down, so I will spare you those.",
                    "label": 0
                },
                {
                    "sent": "Keep thing to take away from.",
                    "label": 0
                },
                {
                    "sent": "That is if I can somehow control little F then I always have a normal distribution basically.",
                    "label": 0
                },
                {
                    "sent": "What are these technical conditions that I'm talking about?",
                    "label": 0
                }
            ]
        },
        "clip_39": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Are two types that we can work with.",
                    "label": 1
                },
                {
                    "sent": "Either that or function is small in some sense, at least on average.",
                    "label": 1
                },
                {
                    "sent": "If I look at large trees, small means well.",
                    "label": 0
                },
                {
                    "sent": "If average over large trees then I'm getting something that goes to 0.",
                    "label": 0
                },
                {
                    "sent": "It's a bit trickier than that because going to zero alone is not enough.",
                    "label": 0
                },
                {
                    "sent": "You have to know a little bit about the speed at which that average total function goes to 0, but if you can do that, then you're guaranteed the normal limit law, and for example this thing with the number of subtrees where it looked like the recursion is not very useful, because that all function contains the parameter itself that can be dealt with using this idea because.",
                    "label": 0
                },
                {
                    "sent": "As I said that all function is very small.",
                    "label": 0
                },
                {
                    "sent": "We don't know what it really is, but we know that it's small.",
                    "label": 0
                },
                {
                    "sent": "We can estimate it and that helps here.",
                    "label": 0
                },
                {
                    "sent": "And the other type is that all function is local, so just looking at.",
                    "label": 1
                },
                {
                    "sent": "A bounded neighborhood of the root.",
                    "label": 0
                },
                {
                    "sent": "I can say what the tool function is.",
                    "label": 0
                },
                {
                    "sent": "Or maybe I can at least approximate reasonably well what it is.",
                    "label": 0
                },
                {
                    "sent": "Typical instance here is the number of vertices of given out degree, because here that all function was one.",
                    "label": 0
                },
                {
                    "sent": "If the routers that out degree and 0 otherwise.",
                    "label": 0
                },
                {
                    "sent": "Well.",
                    "label": 0
                },
                {
                    "sent": "Of course I know that by looking at the neighborhood of the root and there are other instances where I have this notion of local.",
                    "label": 0
                },
                {
                    "sent": "At least approximately.",
                    "label": 0
                },
                {
                    "sent": "Instances are independence number or the number of independent states, or things like that.",
                    "label": 0
                }
            ]
        },
        "clip_40": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Similar results I mentioned that everything here was for simply generated trees or polia trees.",
                    "label": 0
                },
                {
                    "sent": "Similar things exist for other tree models increasing tree models.",
                    "label": 1
                },
                {
                    "sent": "Recursive trees, deer.",
                    "label": 0
                },
                {
                    "sent": "Increasing trees, plain or intra cursive trees, again with various types of technical conditions, you get your limit theorems.",
                    "label": 0
                },
                {
                    "sent": "The research trees.",
                    "label": 0
                },
                {
                    "sent": "There is another type that can be dealt with.",
                    "label": 0
                },
                {
                    "sent": "In that case, urn models turn out to be very useful and again with reasonable conditions you have normal image law.",
                    "label": 1
                },
                {
                    "sent": "The proofs involve a blend of different things, so combinatorial ideas obviously, so you have some generating functions, use analytic combinatorics where you look at the analytic properties of your generating functions, but probabilistic techniques play a major role as well, so growth proceeds that are explained before urn models play a role for the research trees in urn models.",
                    "label": 0
                },
                {
                    "sent": "What you've got is an urn with balls in it, and you take out balls, so one by one and depending on.",
                    "label": 0
                },
                {
                    "sent": "The color of the of the balls you put balls back in according to some rules.",
                    "label": 0
                },
                {
                    "sent": "Such prices are called urn models, and it turns out to be useful.",
                    "label": 0
                }
            ]
        },
        "clip_41": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Here.",
                    "label": 0
                },
                {
                    "sent": "To give you a bunch of examples that can be covered with the existing results.",
                    "label": 0
                },
                {
                    "sent": "The number of leaves.",
                    "label": 0
                },
                {
                    "sent": "Well, we knew that that's normal vertices of degree K, normal number of fringe subtrees of any given shape.",
                    "label": 1
                },
                {
                    "sent": "So for example cherries normal.",
                    "label": 0
                },
                {
                    "sent": "Number of subtrees lognormal, we have to take the logarithm first before we could apply.",
                    "label": 0
                },
                {
                    "sent": "The theorem, so the asymptotic distribution is lognormal, which means the logarithm of the quantity is approximately normal.",
                    "label": 1
                },
                {
                    "sent": "The number of independent states also log normal.",
                    "label": 0
                },
                {
                    "sent": "Number of matchings also lognormal.",
                    "label": 0
                },
                {
                    "sent": "These three are very similar in nature.",
                    "label": 0
                },
                {
                    "sent": "I'm counting something.",
                    "label": 0
                },
                {
                    "sent": "There are typically many of them exponentially, many name.",
                    "label": 0
                },
                {
                    "sent": "The independence number that's the largest size of an independent state.",
                    "label": 0
                },
                {
                    "sent": "It's normal matching number normal, average subtree size, bit of a weird one.",
                    "label": 0
                },
                {
                    "sent": "So you look at all the subtrees in your tree and take their average size.",
                    "label": 0
                },
                {
                    "sent": "That's a quantity associated with the tree.",
                    "label": 0
                },
                {
                    "sent": "That by itself is normally distributed.",
                    "label": 0
                },
                {
                    "sent": "So these are some of the examples that we can cover and.",
                    "label": 0
                },
                {
                    "sent": "Probably a few more.",
                    "label": 0
                },
                {
                    "sent": "Annoyingly, we can't always get everything we want, so there are so many.",
                    "label": 0
                }
            ]
        },
        "clip_42": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Open questions so they're random tree models that can't be covered by the existing results that I have shown you here.",
                    "label": 0
                },
                {
                    "sent": "There are tree like graph classes that one might want to investigate, which are similar.",
                    "label": 0
                },
                {
                    "sent": "For example, cacti look like trees, essentially series parallel graphs are very similar to trees, so all of these one would want to have similar results perhaps.",
                    "label": 0
                },
                {
                    "sent": "Then, as I say, there are parameters that are not covered by any of the existing general conditions.",
                    "label": 1
                },
                {
                    "sent": "Let's sometimes annoying, right?",
                    "label": 0
                },
                {
                    "sent": "So you prove a general theorem.",
                    "label": 0
                },
                {
                    "sent": "Then you're very happy that it covers 10 different results.",
                    "label": 0
                },
                {
                    "sent": "Somebody comes to you.",
                    "label": 0
                },
                {
                    "sent": "Here is example number 11.",
                    "label": 0
                },
                {
                    "sent": "Doesn't fit and then you have to come up with some other condition again.",
                    "label": 0
                },
                {
                    "sent": "Then of course there are parameters that are simply not normal.",
                    "label": 0
                },
                {
                    "sent": "Wear these schemes.",
                    "label": 0
                },
                {
                    "sent": "Schemes cannot possibly fit.",
                    "label": 0
                },
                {
                    "sent": "Well, here we would also like to have some more general results than are available.",
                    "label": 1
                },
                {
                    "sent": "We might want to look at parameters that follow different type of recursion, so additive parameters.",
                    "label": 0
                },
                {
                    "sent": "Cover many examples, but not nearly all of them.",
                    "label": 0
                },
                {
                    "sent": "For example, instead of someone might want to take the maximum.",
                    "label": 0
                },
                {
                    "sent": "In a recursion that is, for example, the case with the height, another instance where it's sort of symbolized is called Horton Strahler numbers, they measure, for example, the complexity of River networks find interesting.",
                    "label": 0
                },
                {
                    "sent": "And there are lots of other questions that we could ask, so we cannot nearly cover all possible tree parameters that might be of interest and all possible random tree models that might be of interest.",
                    "label": 0
                },
                {
                    "sent": "And if you have a favorite your favorite tree parameter and it wasn't on that list and you would like to see it analyzed, come to me, I will definitely give it a try.",
                    "label": 0
                },
                {
                    "sent": "Thank you very much.",
                    "label": 0
                }
            ]
        }
    }
}