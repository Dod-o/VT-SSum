{
    "id": "quz4hdlwpdimtzhse3o5luzsg3kvm3rz",
    "title": "Pipelined Vector Processing and Scientific Computation",
    "info": {
        "author": [
            "John G. Zabolitzky, Computermuseum Munchen"
        ],
        "published": "April 5, 2007",
        "recorded": "April 2007",
        "category": [
            "Top->Computer Science"
        ]
    },
    "url": "http://videolectures.net/solomon_zabolitzky_pvp/",
    "segmentation": [
        [
            "Says my pleasure today to introduce our guest from Computer Museum in Munich.",
            "John Sobolewski and he will talk about pipeline vector processing and scientific computation.",
            "Thank you.",
            "Ladies and gentlemen, it's a pleasure for me to be here today and to talk to you about a topic which may appear to be rather old topic, but which also may appear to be rather new topic.",
            "So let's try if we can bring the past and the present together here."
        ],
        [
            "Now when you talk about a scientific computation, what I have in mind is very complex, very demanding, high end type of computation.",
            "The most complex problems we can attack in science over the years.",
            "So problems like global weather prediction, climatic simulation, a lot of fluid dynamics simulations in the various applications, huge amount of applications of wide variety in the basic Sciences.",
            "And of course, also military applications like cryptography, weapons research, energy research, and many, many more applications.",
            "What I'm not really concerned with is, let's say the more everyday work, let's say small smaller scale laboratory work, student papers, this kind of thing.",
            "What I'm concerned with really is the high end of the."
        ],
        [
            "The computational level.",
            "So let's move back into the late 60s early 70s becausw in that at that.",
            "There was kind of a.",
            "Well maybe crisis is too strong a word, but perceived difficulty in scientific computation.",
            "Becausw scalar computers had come to an end in some sense.",
            "Uh.",
            "Around 1970, the most powerful computer available was the control data 7600.",
            "If you know little picture for you.",
            "Machine designed by Seymour Cray.",
            "So this machine with a Clock frequency of Texas 36 megahertz was capable of doing 36 million instructions per second.",
            "One instruction per cycle in early RISC machine.",
            "And in actual applications it typically achieved 5 million floating point operations per second, and there was no real idea around how to improve that in that machine already the fastest components of the day were used.",
            "The most clever architecture.",
            "It was used.",
            "Let's have a little bit."
        ],
        [
            "So.",
            "Look into how execution would look like in a scalar pipeline machine.",
            "That's not very much different from what it would look like in today's microprocessors, by the way.",
            "So to the right we have the time.",
            "And to the bottom we have the instructions in the program.",
            "So we fetch the first instruction we decoded.",
            "We start executing the first instruction.",
            "Now that execution may take a few cycles.",
            "In the second cycle, we fetch the second instruction.",
            "We decode this second instruction and again we start to execute it.",
            "That also may take the number of cycles and so on.",
            "So in general for standard RISC machine we would fetch an instruction every cycle.",
            "We decode instruction every cycle and we execute the instruction.",
            "In the consequent cycles in here, I assume we do not have any conflicts between the execution.",
            "Of course, if we have only one multiplier and I have two multiplies here that won't work, then we have a delay here.",
            "But that's the basic idea.",
            "How the 7600 would execute?"
        ],
        [
            "Graham now let's look at all the facilities inside the 7600 to see that there's really a lot of thought, a lot of work which has gone in there.",
            "We have a huge working set here of 24 working registers plus a 12 word instruction stack.",
            "A program cash.",
            "So we have 8 floating point registers, 16 index registers, and we have a number of independent functional units which all can operate concurrently and which all are pipelined.",
            "So in fact the multiplier here.",
            "Would break the problem I've mentioned in the previous."
        ],
        [
            "Slide if these two operations were multiplies.",
            "In fact, they could execute like that because the multipliers pipeline in itself.",
            "So in each instruction you could start to multiply and then push the intermediate results into the next stage of the pipeline multiplier."
        ],
        [
            "And also, there's a huge amount of memory bandwidth.",
            "You have a full word per cycle axis from main memory through the register file.",
            "A full word per cycle access from the periphery into main memory.",
            "So huge amount of bandwidth available to feed data to the computational elements.",
            "It's not really quite obvious how to improve on."
        ],
        [
            "That now, let's look what the problem is.",
            "The problem is exemplified in this very simple little loop.",
            "Let's assume we have two vectors and we want to multiply them element by element to obtain the third vector.",
            "How would that code look like?",
            "We probably need to load one element, load another element, crealta multiplication, store the result, and then we have to loop back to the start of the loop, right?",
            "So this is 5 instructions about the minimum of scalar instructions you could come up with.",
            "But out of these five instructions, there's only one instruction which initiates a multiply.",
            "So you need obviously 5 cycles to execute the loop because you need to issue the five instructions.",
            "But only once out of five, you initially multiply, but the multipliers pipeline.",
            "You could, in principle, if initiated, multiply each and every cycle.",
            "So in fact we are looking at a waste factor of five year.",
            "Right, we could start to multiply in each of these cycles as well, but we don't have the organization around it.",
            "The machine is bound by the organization of moving around the data that is the bottleneck in this scalar architecture.",
            "You spend a lot of instructions, alot of time just organizing the flow of the data, and you spend only one out of five cycles actually doing the work.",
            "So that is the bottleneck of any of these scalar RISC architectures with a single issue, single instruction issue per cycle.",
            "So it's very clear from this code what is the problem.",
            "And what can we do to overcome this problem?"
        ],
        [
            "So let's look at the alternatives.",
            "What are possible ideas we could have to improve on this kind of code?",
            "So we looked at the pipeline scelerisque execution where we found this bottleneck.",
            "One solution is to go to vector execute.",
            "Now that is what the rest of the talk is all about, so I don't explain it here.",
            "Another way, which has been thought about and which has actually been tried out is a single instruction multiple data organization with parallel arithmetic elements.",
            "So you would have a vector multiply, let's say 64 elements.",
            "You send it in parallel to 64 independent multipliers to do the multiply.",
            "So obviously you're 64 times as fast.",
            "However, you also need 64 multipliers, so the problem in fact isn't changed at all.",
            "You still have essentially the same flow.",
            "You spend the same amount of work in organizing the data.",
            "But only one out of five cycles will be spent actually initiating multiplies, so there's one machine essentially only one significant machine built in this architecture, which is the iliac four, late 60s, and it was found not really to be inefficient solution.",
            "It's much too expensive, is much too much hardware, big fraction of which sits idle too much of the time.",
            "The real idea of a cost efficient high performance computer is of course that you use each and every transistor all the time.",
            "If you don't do that, there is obviously some waste.",
            "Then we have another solution which is essentially the modern day's solution.",
            "If you look into any modern CPU from Intel via AMD to Texas Instruments or anybody else.",
            "You find that all modern single chip CPU's super scaler, which means that you issue multiple codes in one cycle in print."
        ],
        [
            "But that solves the problem.",
            "If you go back to our loop here, if you issue all five instructions in one cycle.",
            "And in the next cycle you issues the same 5 instructions, and if you manage well to organize that, you don't confuse your data, you solve the problem.",
            "Then you use your multiply each and every cycle.",
            "So that is the answer of today's microprocessors to this problem.",
            "However, it's a very complex answer.",
            "It costs you lot of transistors to get the organization right.",
            "It's very very much non trivial to organize the data flow with this multiple issue.",
            "The strategy.",
            "You need a lot of interlocks and tracks and potential delays, and rearranging those cycles to make sure that actually you multiply the right two numbers and don't get one cycle shift."
        ],
        [
            "In one place.",
            "So that doesn't answer which is taken by today's microprocessors.",
            "There's another version of that which is very long instruction word, which essentially is a variant of super scaler.",
            "Very long instruction word means you have huge instruction word which does many things at the same cycle, which is just different language for the thing up here.",
            "So depending on taste, essentially some people talk about that.",
            "For example, modern T digital signal processors are.",
            "Very long structure processes in some sense.",
            "In other sense, the issue H instructions per cycle, so it's a matter of taste how you talk about it.",
            "Intel calls it it's 64 bit processor.",
            "Also very long instruction word processor.",
            "Again, it's a matter of taste.",
            "What kind of language you choose.",
            "One might think that there's still another solution to the problem, which is multiple instruction.",
            "Multiple data machines through parallel machines, for example, like the Creative 3E or the IBM Blue gene or the IBM cell processor.",
            "However, that is not true because the idea to do things independently in parallel can be superimposed on any of these architectures.",
            "In here it's a different dimension to talk about, so there is no interaction between this dimension and the other dimensions.",
            "You can do that whatever you choose to do within your single CPU, so that is not the topic of today's talk.",
            "OK, so this everybody is doing anyway.",
            "No need for me to talk about it.",
            "That is inefficient.",
            "This is the same as that that we looked at.",
            "So let's come to the topic of this talk."
        ],
        [
            "So what's the idea in a vector computation?",
            "The idea is that if you look again at a very straightforward vector loop.",
            "You already know that the basic problem is to set up the data flow.",
            "So assuming we have an error and a multiplier, the task is just to set up the data flow so that each in every cycle one new data element will come to the editor.",
            "The multiplier get multiplied and start afterwards.",
            "So.",
            "The idea is that all of that should be organized by the machine internally so that this whole loop should be represented by a single machine instruction.",
            "So if this loop is a single machine instruction, which then will tell the hardware how to set up the dataflow, we again have solved the problem we will have.",
            "Asymptotically execution rate, which is.",
            "The rate of.",
            "In this case, it could even be 2 mega flop to operations per cycle, 'cause you can do that and then multiply in the same cycle.",
            "Assuming you have an error in the multiplier."
        ],
        [
            "Let's look into it a little bit more detail.",
            "Let's first look at the top three rows of this graph, so that is a geographical arrangement.",
            "Let's assume we have a memory here, so we fetch two operands from memory, we stuff them into our multiplier pipeline first stage.",
            "In the next cycle, then in the next cycle we take the intermediate result from that first stage, stuff into the second stage, and so on.",
            "Let's assume the multiply takes 4 cycles.",
            "Then here after the 5th cycle in total we have the final result.",
            "So we store the final result in its destination.",
            "So we have here a pipeline length of 123456 cycles.",
            "And once we filled up the pipeline, we will do one multiply each cycle.",
            "Now let's look at the process of actually filling up the multiply.",
            "So we fetch the first pair of elements in this cycle.",
            "Now, here the time runs downwards.",
            "Is our cycles down the page.",
            "So in this line it's the first cycle.",
            "We just fetch two operands.",
            "Let's say out of the register file in the next cycle, we stuff those two pairs of operands into the first stage of the multiplier and we fetch in parallel the second pair of operands.",
            "Then in the next cycle, the first pair of operants will have progressed to the second stage of the multiplier.",
            "The second pair of operands has progressed to the first stage of the multiplier, and we fetch the third pair of operations and so on and in Cycle 6.",
            "Finally, we have stored the 1st result.",
            "And then from that time on in each cycle we will store 1 result.",
            "So we see that in fact S anticipated we do have an asymptotically instruction rate of 1 result per cycle.",
            "But we also have a so called startup time, which in this case is 6 cycles.",
            "The length of the pipeline.",
            "We need some time to fill up this pipeline here.",
            "Of course, that's not really a new invention.",
            "I would say the real inventor of this kind of thing is Henry Ford with the assembly line for cars.",
            "Today I also had a very nice experience with visiting the Castle top lubiana and they have a high throughput pipeline tower there, with two staircases so you can walk up one staircase, look out of the platform, walk around the platform and go down the other staircase.",
            "This is exactly this kind of principle, right?",
            "There's never an interlock between visitors and continuous stream of visitors can be fed through that observation tower.",
            "There are other places where you have staircases.",
            "You need to wait until somebody has come down, come down until the staircase, the functional unit staircase is free, and when it's free, you can issue the next operand, right?",
            "So here you see that this principle of pipelining is completely abandoned.",
            "Completely general, very widely used in all kinds of human activities, and also here it's a good idea to."
        ],
        [
            "Lose it.",
            "However, there are a few problems with this kind of principle, cause there are some things which are not suitable for vectorization.",
            "For example, you would think that a scalar product is a nice mathematical operation, which you do many times which we like to do in many operations.",
            "It's a very natural way to work in the metric computation in many cases.",
            "And you would infer, turn right down the scalar product like this.",
            "You have a loop over the vector elements.",
            "You multiply 1 vector element by the other and you add up all the results.",
            "Now that unfortunately has a severe problem because in order to do this addition you have to wait for the result of the previous edition.",
            "Right, so assuming that the editor has a finite pipeline length, you get stalled for the length of that pipeline.",
            "You have to wait until you come out of the other pipeline before you can stick it into the air again.",
            "So therefore this is not very helpful way to work on the vector computer.",
            "Therefore 1 users instead of inner products outer products.",
            "So if you consider that as a piece of a matrix multiply, you would exchange the inner another loop and do the matrix multiply by outer products.",
            "So see the result matrix IK element still is of course the sum of the IJ.",
            "JK elements, but in the DJ loop now is somewhere outside here in the inner loop is the I loop.",
            "So you go to one column of the result and you take the color of that result.",
            "As an accumulation of columns of 1 matrix times a constant with respect to add this element is a constant, right?",
            "So you replace inner products by outer products and now it's completely vectorizable.",
            "So this is a typical operation you do when you need to go to vectorizing scalar code, exchanging in and outer loops is usually a very very helpful thing to do.",
            "It usually does the job.",
            "Of course there are exceptions, but usually it's a very good thing to do.",
            "And you have to do it by hand to the compiler.",
            "Most cases won't do this for you.",
            "They are vectorizing compilers, of course, but usually they're not achieved.",
            "Do not achieve the kind of efficiency you would achieve by doing this kind of thing yourself.",
            "So what we have learned now we've learned that in fact, vector computation can make very efficient use of the hardware.",
            "Every transistor you pay for you also get good workout.",
            "However, the burden on the programmer has increased somewhat.",
            "You just can't write your code anywhere you want.",
            "You supposed not to write scalar products.",
            "You supposed to right outer products.",
            "So you have to know something about it.",
            "You have to adjust your work, your habits to the machine you're using, otherwise you won't be very happy with the performance of the machine.",
            "So that is an unfortunate consequence and.",
            "It is something, however, which people have gone through many times."
        ],
        [
            "Now let's look at the historical development of this kind of.",
            "Approach.",
            "One of the very first vector machines ever developed was the Code Data Corporation Star 100.",
            "Star is shorthand for a string array 100 million floating point operations per second.",
            "That was late 60s early 70s, so 100 mega flops.",
            "It is 20 times faster than the CDC's 7600, so it's a significant achievement.",
            "If it could be made to work.",
            "However.",
            "There were a couple of mistakes made in that machine as we know today.",
            "First of all, there was a run along vector startup time of several 100 cycles.",
            "Now what does it mean?",
            "It means that if you need a few 100 cycles to fill up your pipeline.",
            "You won't get any result for a few 100 cycles, and only then you start to get results.",
            "Therefore it's worthwhile only if your vector length is many, many hundreds of thousands of elements.",
            "It works only for very long vectors.",
            "Secondly, the scalar unit in that machine.",
            "So if you want to do something which is not a vector operation, just a standard scalar operation that was very, very slow.",
            "It was only 2 million floating point operations per second, much slower than the 7600.",
            "And these two two things together combined to really disappear.",
            "Disappointing performance.",
            "The machine was a real disappointment.",
            "Also, it took much too long to deliver.",
            "It was contracted in 67, announced in 72 and delivered in 74, so it has seven years development time.",
            "I think the promised development time was around two years, so it vastly over and it's time budget.",
            "It also vastly over and it's cost budget.",
            "There was only a total of four machines ever built, two of which report by Lawrence Livermore Laboratory.",
            "Of course, if you have a first of such machine and then buy a second one, you have a problem.",
            "So the people involved Thornton at CDC, who developed the machine and Fern Bar at Lawrence Livermore, who passed the machines, opposed last drops over this problem.",
            "So real."
        ],
        [
            "Department.",
            "However, it was pretty nice.",
            "You would machine as you see here."
        ],
        [
            "There were other disappointments Texas Instruments at that time also was in the business of building computers.",
            "That is something which may have been lost by today.",
            "Maybe some of you knew that they built more computers, calculators and so on, but they want also in the big computers business, so they also built a vector computer, the so called advanced scientific computer, about the same time.",
            "About the same architecture.",
            "And about the same performance problems.",
            "So they sold 7 units, but it was so disappointing that they completely dropped out of mainframe computer manufacturing.",
            "So also not really a success story.",
            "Excuse me little price in today's dollars would probably be around 3040 million.",
            "In today's dollars, of course not.",
            "In dollars of those years."
        ],
        [
            "So let's try to understand what's the problem with these machines.",
            "I mean, we had this great idea that by pipelining things and setting up things, if we get a result every cycle, we should get a better performance.",
            "However, we got pretty worse performance.",
            "How is that possible?",
            "So let's understand what are the performance laws of vector processing.",
            "So let's look at the vector length and let's look at the number of cycles we need.",
            "To spend in order to execute a certain instruction so we know already, we need some startup time.",
            "The number of cycles we need to fill the pipeline, and once we filter pipeline, we get a number of results per cycle.",
            "Because I mean, we've seen in some of these operations we can do an add and multiply in the same cycle.",
            "So typically we could get two operations per cycle.",
            "Or maybe we have two parallel multipliers and we can do two multipliers in one cycle would be the same thing.",
            "So let's look at."
        ],
        [
            "This in a graphical manner.",
            "So first of all, here we have a scalar performance curve.",
            "On the bottom here we have a scalar performance at 1/5, so that is exactly our example of the 7600.",
            "Every fifth cycle I get one result right?",
            "So my operations per Clock is .21 / 5 and it doesn't depend on the vector length because the normal scalar loop has a very little startup time.",
            "OK, now let's look at the Violet curve.",
            "There is a curve.",
            "We have a startup time of 100 elements and one result per cycle.",
            "So that would be a typical.",
            "The typical.",
            "Vector operation and here you see what happens as synthetically you will approach 11 result per cycle, but you did pretty long vectors to get there.",
            "In particular it vector length 100 you get only performance of 1/2 because you use 100 cycles to start up and then you use 100 cycles to get you 100 results.",
            "Which means you use 200 cycles for 100 results which is half a result per cycle.",
            "So you see that if you have to log a startup time.",
            "You will never really get the performance you thought you should get, cause most of the time.",
            "You will be someplace down here.",
            "Vectors.",
            "Usually, in particularly those years, weren't yet that long.",
            "And it can get worse.",
            "If you think you build a very powerful machine where you get 4 results per cycle.",
            "Extremely powerful.",
            "Yeah, for multipliers or to others and to multipliers.",
            "But still, if you have 100 cycles startup time, it takes you huge amount of time to approach that only at a vector length of 400.",
            "You approach half of your anticipated performance.",
            "You need thousands of vector elements in order to come anywhere close.",
            "The performance you think you have because you produce for results per cycle.",
            "So the startup time really is killing you.",
            "On the other hand, if you would have really short set up time, let's say like 10 cycles yellow curve, then it's very different then already.",
            "It rather short vector length you get a pretty nice performance and asymptotically of course you get you 4 cycles per result.",
            "So this looks very simple, but it has apparently been overlooked by the early designers of vector computers.",
            "They thought they could get away with long vector only machines and they forgot about the unfortunate fact that most applications at that in those years had rather short vector length and could not ever get at that point."
        ],
        [
            "Comments.",
            "Unfortunately, the second problem, the second problem is.",
            "That you also have to consider scalar computation because there is not a single code in the world which is exclusively 100% vector, it doesn't exist.",
            "There will always be some scalar sections taking care of some coordination.",
            "It is impossible to have pure scalar code.",
            "So you will always have some scalar section, and now the question is how is that I'm divided between your scalar code and your vector code?",
            "Let's make little example here.",
            "Let's assume that 10% of the code is Kayla.",
            "We executed at one Mega Flop and 90% of the code is vector.",
            "We executed it 100 Mega flops.",
            "Now if you look at it, essentially what comes out of that is that.",
            "Both of these things take about the same amount of time and in the total end result you end up with only 9.2 mega flops.",
            "So you see that just a very tiny small fraction of scale operation.",
            "Quite kids, your vector performance.",
            "So second problem of the vector machines you really have to get rid of the scalar sectors of the code.",
            "You have to limit them to the utmost minimum, otherwise the performance increases.",
            "You believe you should get.",
            "You will never obtain and that is the 2nd lecture second lesson which has been learned since then is the 2nd mistake in the Star 100 as well as the Texas Instruments machine.",
            "The scalar performance was too weak.",
            "You cannot live with such weak scalar performance in spite of providing all this beautiful vector power, you still have to provide a power."
        ],
        [
            "Scalar unit.",
            "Again, let's look at that graphic Kelly.",
            "So here I have the scalar fraction, so scalar fraction one is a purely scalar program which cannot vectorize anything.",
            "Scalar fraction 0 is a program which can be completely vectorized.",
            "No scalar part in it.",
            "And here we have the ratio of scalar to vector.",
            "So let's first of all look at this here.",
            "Let me see how do I need to read that?",
            "Maybe it's better to look at the other one.",
            "First, let's the ratio of five.",
            "So let's assume the speed ratio of vector and scalar unit is 5.",
            "So you would say do.",
            "100 mega flops in the vector unit.",
            "And 100 /.",
            "520 mega flops in the scalar unit.",
            "Then you will find the performance curve like that.",
            "Of course, if you are at full vector performance you get full vector performance, no scalar part.",
            "If you have a pure scalar code, you find your factor of 5.2 and in between you have some smooth transition of course.",
            "Now, if you really powerful vector computer 100 times faster in vector mode in scalar mode, then we get the bottom curve here.",
            "And to get your vector performance only if you are really in a one 2% of calefaction region becausw.",
            "This big factor of 100 is complete nonsense, right?",
            "You will never get it.",
            "'cause the tiniest little bit of scalar code just kills your vector performance.",
            "You never get actually to the factor 100 if you have just a little bit of scalar code around, so this is the reason why you have to be very, very careful with the design."
        ],
        [
            "Of your vector machine though, let's collect our experience so far.",
            "What master designer vector machine take care of?",
            "First of all, the vector startup must be shot so that we can work with short vectors, short pipelines.",
            "We must have a very fast scaler unit that we can afford to have a little bit of scalar computation.",
            "Enter there's another element which I didn't mention so far.",
            "There are a few things where one has to take care of which are irregular data structures.",
            "I mean there is not only matrix multiply in science, there are a few other operations as well.",
            "And you need some index gather operations or merge operations or scatter operations to deal with irregular.",
            "Data structures.",
            "It's something which is required, but I won't go into too much debt."
        ],
        [
            "Head here.",
            "Now, of course, see McRae after he designed the 7600 finished it in the 6869.",
            "They knew about the development of the Star 100 and about The Time Machine he looked at that, so he had the chance to learn from these experiences.",
            "So when in 70 two he founded Cree Research Incorporated or this experience was known.",
            "So he went on to develop the Cray one machine which was delivered in 76, first to the Los Alamos Laboratory.",
            "And of course, he knew that, and he realized all of these insights.",
            "So the basic idea is that.",
            "It is a vector register machine.",
            "It's not a memory to memory machine.",
            "Reason is that in a memory to memory machine you have to retrieve data from memory, but memory X is always takes quite a bit of time, so you have a long set up cycles in order to avoid that that is buffered by vector registers.",
            "So all the operations run from vector register, two vector register and can therefore have very short set up time not involving memory access.",
            "Then of course you have to vector load store instructions which organize the traffic between the vector registers and the.",
            "And the memory and then the programmer has to take care of overlapping these things right?",
            "So when you know that three instructions down, you will need this data element, you initiate to load it, then you do some other operations which data you have in the registers and when you finally come to work on the data you requested, it's already there.",
            "So it's the idea of double buffering, which we have in many other cases.",
            "You think about double buffering when you think about IO devices in many cases, but you also have to think about it in CPU's if you have fast CPU double buffering again is important.",
            "Another element which is important about the K1 is even if you completely forget about the vector operations, it's still the fastest computer you can buy.",
            "So that is the lesson learned that you need to have some scalar capability as well.",
            "So in this machine peak theoretical peak rate of 160 Mega Flop can be achieved on the average.",
            "Of course, you never achieve that on the average, maybe 50 Mega Flop was a very good rate to achieve, so it's a factor of 10 faster than the 7600, which is just seven years older."
        ],
        [
            "Of course you have seen this machine, I assume.",
            "The famous loveseat kind of organization power supplies in the bench and the logic in the columns.",
            "And you see.",
            "The typical closing people were in the early 70s.",
            "So that is one of the major achievements of that time, and of C. McCray.",
            "Of course, learning from the failures of the people who had."
        ],
        [
            "Worked on this before him.",
            "I don't want to go into details of this just to show you again the basic principle.",
            "You have memory, you have a memory traffic between memory and vector registers, and then you have functional units with execute the arithmetic operations and traffic between the functional units, answer vector registers and all these things run in parallel, so thereby you avoid the startup times.",
            "And you have separate high powerful scalar units so that you avoid the scalar overhead, and then you can make."
        ],
        [
            "An efficient computer.",
            "After this initial product, let's have a quick look at what happened to further at query search because query shirts was the dominating company in this business for quite a long time.",
            "So there were various further generations of the same architecture be provided.",
            "Then in 90 three we have an important transition to massive parallel processing.",
            "The microprocessor became much, much more powerful than.",
            "It had been in previous years, so for the first time the microprocessor could come in competition with these special purpose vector CPUs starting in 93.",
            "And in the remainder of the 90s with Creative 3E, which again is a massive parallel architecture based on the digital equipment, Alpha processor was the dominating high performance computer.",
            "Unfortunately, you also must be aware of some other well known technical events.",
            "Around 1990, the Cold War stopped, which drained the funding for the military, which was one of the major buyers of these machines, and therefore in the early 90s.",
            "Commercial problems developed in the high performance in the high performance computer companies.",
            "So in 1996, query Search was acquired by a Silicon graphics and a lot of the development was stopped and diverted.",
            "So that was essentially an end of this.",
            "So far very successful computer line.",
            "Now later on in 1999, Chry Research was acquired by Terra Data, which renamed themselves to create Incorporated in 2002 again a Cray Vector Machine was bought onto the market and today we create X1.",
            "E is one of the dominant.",
            "Products, in fact, one of the two products available in vector processing."
        ],
        [
            "There were other entrants control data also built upon their stubborn height experience.",
            "They created the Cyber 200 family.",
            "So, several years later, 1980, the first machine came out, so they reduced the setup time to about 50 cycles, which is significantly shorter.",
            "Therefore, this machine could.",
            "Effectively work with much shorter vectors.",
            "Also, the scalar unit was product to speed.",
            "And there was also a 10 giga flop machine built in the late 80s.",
            "However, in 89, the enterprise was terminated becauses they had used up their money.",
            "They couldn't made it profitable quickly enough.",
            "A total of about 40 cyber 200 machines have been sold and 30 four of the 10 machines.",
            "Of course you have to contrast that with many, many hundreds of machines which were sold by cry at the same time."
        ],
        [
            "That's a typical picture of a computer center in those days.",
            "In 1986, in the back here that is a cyber 205.",
            "So and the geographical layout effect corresponds to the pipeline, so this is a memory to memory machine.",
            "The big section in behind us in memory then here is the data streaming unit.",
            "This is a controlled section and then you go to the vector pipeline in this leg here and then from the vector pipeline you go back into memory.",
            "And here you have a full processor.",
            "Create two and a single processor create tool which were the most powerful great products of that year.",
            "And in the center you have various peripherals like disks and tapes and network connections."
        ],
        [
            "And like.",
            "There's one other Corporation I need to mention in this context.",
            "Nippon Electric Corp. Of Japan.",
            "They started in 1983 to provide vector machines.",
            "The first 2 generations were signal processing vector machines.",
            "When like Ray shared memory, few processor vector machines were built.",
            "Up to maximum of 32 processors in 1994, and then they managed to use the vector CPUs as building elements in massively parallel machines.",
            "So today you can go up to several thousand processors, and in fact there are a few installations like that for example.",
            "And.",
            "The for a long time the most powerful computer in.",
            "The world the Earth simulator in Japan is built out of this process is one of the most powerful machine in Germany.",
            "Today is the S68 in Stuttgart, so a few of these machines exist, but it's a very small market share."
        ],
        [
            "Now.",
            "In view of these architectures being not really widely available, why would one be interested in them today?",
            "The point is that there may be a revival on the horizon.",
            "Big 'cause there's some other product you can buy today.",
            "In fact, you can buy go into a shop today and buy a PlayStation 3 now.",
            "You might wonder what kind of PlayStation three to do with scientific computation.",
            "The point is that the PlayStation Three in fact is has the cheapest gigaflops you can buy.",
            "At this current date.",
            "So it's based on the IBM Sony Toshiba cell processor, so this is a diagram of the cell processor.",
            "It has 9.",
            "Hey, it's a single chip containing nine different CPUs, so here you have a general purpose 64 bit PowerPC that is rather standard 64 bit processor and then you have 8.",
            "Vector processors, so they call them synergistic processors.",
            "But in fact these are essentially vector arithmetic logic units which work on the local storage element.",
            "So essentially what you have here is something like a small Cray.",
            "One you have a local storage which corresponds to the register file into a vector arithmetic which does arithmetic on the register file, and then you have some streaming unit which will stayed up between the local storage and external memory, right?",
            "So if in fact you have something like 8 create processors on a single chip here.",
            "Let's look into this a little bit more detail.",
            "So 8 vector processors and one general purpose processor to take care of organization and bookkeeping and so on.",
            "That's certainly very fine.",
            "If you look at the local storage here we see it's 256 kilobytes for the whole.",
            "System so it's only 32 kW, which is not really a lot.",
            "So this is one of the four scientific computation.",
            "It would be difficult to program because of the small internal memory.",
            "On the other hand, you have an extremely powerful internal interconnect.",
            "You can move 12 words per cycle inside the chip, which is clear and 86 gigabytes per second.",
            "It's probably the highest performance data network anywhere in the world.",
            "And also you have a very high throughput memory channel here.",
            "You have a Rambus XDR interface here, which is capable of doing 24 gigabyte per second or three Gigabit per second.",
            "Which is quite more than any conventional microprocessor can do.",
            "And we also have a very high data rate channel for other external connections like multiprocessor, massively parallel network connections which even is capable of performing 76 gigabytes per second.",
            "Almost 10 gigabytes per second.",
            "Tim gigabytes per second.",
            "And if you look just at the arithmetic logic unit, we have a tremendous performance of 56 gigaflops for single precision and 26 gigaflops for double precision, so this is.",
            "More than a factor of 10 above anything you can get in most standard microprocessors.",
            "And you can buy a complete system PlayStation 3 for around 400 euros.",
            "So price efficiency wise it's more than a factor of 10 better than anything else you can buy.",
            "However, there are a few slide problems here and the few slide problems are concerned with the programming complexity, because as I said, you have other small internal memory.",
            "This is not a cash register file local storage, so you have to explicitly program the access you have explicit moves from memory into local storage you have explicit.",
            "Addressing of this local storage in your vector operations, so it is quite demanding on the programmer and of course also the multiprocessor aspects.",
            "You have to partition your program problem into eight tasks if you want to use multiple of cells into more tasks.",
            "So all of that is very much non trivial.",
            "So if you can, if you are satisfied with the PlayStation Three, that would be a nice element to use.",
            "You need the development environment, of course, and a standard IBM has a Corporation program with universities where universities can get this development environments for extremely favorable essentially free conditions.",
            "So in the USA University environment, I think it is very nice thing to experiment with this kind of architecture.",
            "'cause there are very significant hopes for the future in here."
        ],
        [
            "Let's have a look at this picture.",
            "So this is the actual trip.",
            "The chip is not very big, it's only 221 square millimeters.",
            "So model lithography could easily make chips twice that size.",
            "It has only two 34 million transistors.",
            "The latest chips from Intel ever million transistors, a billion transistors or more.",
            "So also that is not on the high end really.",
            "So there is some more real estate available in principle.",
            "So one could think about enhancing on that architecture and we have."
        ],
        [
            "You seen that there are few shortcomings here for scientific computation.",
            "For gaming this is perfectly alright, cause gaming can perfectly live with 32 bit in scientific computation.",
            "We have to have 64 bit.",
            "In almost all cases, 32 bit are not sufficient for scientific computations.",
            "In most cases you need 64 bit.",
            "So you have almost a factor of 10 discrepancy here, which is not very nice.",
            "The double Precision multiplier is not executed.",
            "Very well apparently, and you have the very small local storage here, but you do have very nice bandwidth.",
            "A lot of very nice features, so it's very clear."
        ],
        [
            "How one would improve on that kind of chip?",
            "The blue area here that is a local memory which goes with that processor.",
            "So you see the eight local memories in the eight vector processors so.",
            "Increasing the local memory and increasing the double precision multiplier to be of higher performance are very straightforward things to do."
        ],
        [
            "Which would make an absolutely superior scientific process out of this trip.",
            "Of course it's a matter of speculation.",
            "If IBM would intend to do anything like that.",
            "After all, they already have more than 50% of the market share in high performance computing with their blue Jean and other systems.",
            "If you already have more than 50% of market share, it's a question.",
            "If you really do so much about it.",
            "But of course you want to keep your market share, so maybe improving on the performance is a good idea.",
            "So there are people see these people in the world to do speculate that we will see improvements.",
            "On these two frontiers, improving double precision performance, improving internal memory size.",
            "Meanwhile, due to the University Corporation program, there will be four people around who know how to program this thing.",
            "That reminds me of the 1950s.",
            "In the 1950s, IBM installed a huge number of their 650 computer at universities for very, very low cost, and in this way managed to have a lot of people educated in use of their computers.",
            "After all, in the 50s people didn't know what the computer is, right?",
            "So it was important to get people educated in.",
            "In your computer, and that's what they did in the 50s and then sold computers in the 60s and 70s so one could service that.",
            "This is kind of a repeat performance here.",
            "Educating people in using this complex architecture with a lot of handwork in the programming using local memory, organizing parallel processing and then coming out with the architecture which has really very high performance at a very low cost.",
            "So that.",
            "Could be serviced.",
            "Could be one of the market strategies."
        ],
        [
            "IBM, however, there's also a very severe problem which I would like to point out and severity of your problem is this one.",
            "That is the electrical power generated by this chip the heat generated.",
            "So.",
            "It can be operated at 4 giga Hertz by using 1.1 Volt operating voltage.",
            "It can also be operated at 5.6 giga Hertz with 1.4 Volt operating voltage.",
            "However, you have to cool away 80 Watt 100.",
            "What out of this trip?",
            "Now that creates a slight problem because you have this little chip here, you have to remove the energy the heat you need something to do that.",
            "So either you need a big heat sink and blow air through it, or you need a somewhat smaller heat sink and move some fluid through it.",
            "But you need a lot of space to take away the heat.",
            "When you need so much space to take away the heat, you can't pick these chips very densely, so we have one here and one here and one here and one here.",
            "It's very you.",
            "Take a used volume.",
            "If you have a huge volume, interconnect will get very long, and if you want to put together a few thousand of these processes, you get a huge machine which long interconnect which will not be that efficient as a parallel processor.",
            "So we again my service that we can give up a few of these gigaflops we could get, let's say go to one world or.",
            ".9 or .8 Volt and reduce this Clock to three giga Hertz or maybe only two giga Hertz.",
            "And still would get a very nice performance out of this, which reduced the power.",
            "The power goes with the.",
            "Total power goes with a very goes with the square at least of the Clock frequency.",
            "So by lowering the Clock frequency you quickly reduce electrical power, and then one could pick together quite a number of these chips and create a very advanced computer system a couple of years down the road.",
            "So the next two years we very exciting to see what IBM does.",
            "Do we continue with the blue gene type of architecture, which also is a low frequency architecture?",
            "It's only 700 megahertz, right?",
            "Which enables them to pick together the CPUs very closely, have a fast, efficient communication.",
            "So if that is the future route IBM will take of an improvement on the cell will be the future out of IBM to take.",
            "That will be very exciting to see in the next few years and I'm sure we all will see it."
        ],
        [
            "Yeah, let me show you how that relates to other things other people are doing.",
            "So for example, there is a famous AMD Opteron processor or the Intel 64 bit processor, and there's also the Cray X1 vector processor.",
            "So please look at this table first.",
            "So these are various benchmarks.",
            "These are other demanding.",
            "Benchmark is a non trivial benchmark.",
            "It's not Linpack or anything like that, so this is really scientific computation.",
            "And here we see the speed ratio.",
            "With respect to Intel or AMD or the Cray machine, now this is all for double precision, of course, because single precision is essentially useless.",
            "Now we've already seen the double precision is effective 10 low in the cell it's 10 lower than single precision because they didn't put much effort into double position by the player, they didn't want to put in the real estate.",
            "So even at a rather low efficiency in the cell processor you see that is many times as.",
            "Fast, many times faster than Intel or AMD processors, and it's even.",
            "As fast or even two or three times faster than the crazy X1 E, one of the fastest vector machines available at all.",
            "And if you look at the power efficiency, so if you don't count operations per second but operations per what, then the fact is even bigger 'cause all of these are very hot processors which use even much more power than the cell, right?",
            "So we have a factor of 40 power efficiency here in two dephts.",
            "Between Intel and cell.",
            "That's of course devastating factor.",
            "Depends, of course how you count, but if you have to finance the computer center and if you have in mind that they make what costs about a mega euro per year, if you need to spend 10 megawatts only one MW year does make a difference.",
            "And because of the space used by the cooling is cooler machine will be smaller and therefore be more efficient.",
            "Now let's look at the top table.",
            "That's a self plus processor.",
            "That's a simulation of a processor where.",
            "These people have put in some ideas what IBM might do.",
            "Essentially it's a cell processor with a more efficient double precision multiplier.",
            "And then you see that the factor gets blown up again by a factor of three or something like that at least.",
            "Power efficiency goes up to effect of 100 and computational efficiency is between.",
            "Well, for Standard process is between 7 and 40 and with respect to the Cray machine.",
            "Also a very very very bankable factor.",
            "So I think this is again underlining what I've been saying.",
            "This is an extremely powerful architecture, a very promising architecture.",
            "If just a few tiny little things are done on it, it will blow everybody else away out of the market.",
            "However, some programming complexity is surprised you pay.",
            "You have to know how to program the guy.",
            "So that's about what I wanted to to say.",
            "So vector processing is rather old.",
            "Technique goes back 30 years by now.",
            "However, it's also a rather new technology which may become very exciting in the next few years, and I assume we all are going to have some fun with it.",
            "Thank you.",
            "Sure.",
            "Yes.",
            "Right, it certainly is.",
            "Yeah, right, definitely definitely, but we must bear in mind that has always been the case.",
            "Moving from scalar to vector going from a CD 7600 to a crazy one was a step back.",
            "People had to vectorize their codes.",
            "It was one of the major drawbacks of the Cray one.",
            "The vectorizing compiler was invented.",
            "Of course, there's also vectorizing compiler for this trip, no doubt about it, but the question is what kind of efficiency of efficiency do you get and what you need in mind.",
            "I mean, maybe you don't really need a factor of 6, maybe a factor of 2 compared to an.",
            "Intel is already fine for you, and then of course the vectorizing compiler may be totally adequate.",
            "What I'm talking about is really the case where you want to ring the maximum you can get out of the trip, right?",
            "So if you're on the very frontier of scientific computation?",
            "If the competitive advantage you want to generate to your colleague at another national lab is that you are able to do twice as many computations, that's the kind of thing you do.",
            "So it depends on on how much you want to push it to its limit.",
            "So there is of course a lot of work in the compiler vectorizing compiler also in parallel programming aids.",
            "Again, the step from scalar computation to massively parallel also is a drawback for the programmer to programmer has to use a parallel programming libraries.",
            "Here's to organize the data traffic between these parallel threads.",
            "It's all extra work for the programmer.",
            "And that's by the way, the reason why massively parallel processing only was successful in the second half.",
            "Or let's say somewhere in the 90s.",
            "Parallel processing was available in the 80s.",
            "People didn't use it, it was too complex.",
            "They it was too much work.",
            "They thought they could get away with simpler means, but then it was not possible.",
            "So eventually it was accepted that you have to work on your code and have to put in effort to make it explicitly parallel.",
            "And once that.",
            "Was accepted in the scientific community.",
            "Then the creative 3-D2 three could solve the scientific problems, and I think we were going to have the same.",
            "Either a.",
            "You pay a lot of money for less powerful system, which is maybe more convenient, but you just have a lot of waste.",
            "Or maybe you don't really need the very peak of the performance, or you are prepared to put in that effort to do this kind of programming.",
            "But of course IBM is totally aware of that, and that is, I think the basic reason for the University program that you can get access to this kind of equipment very easily so that people get educated in it.",
            "And then the way they have their degree and get a job someplace they don't find it frightening anymore to do this kind of work.",
            "So it's a very clever strategy.",
            "Have any other questions?",
            "I'm happy to answer any questions whatsoever.",
            "Can you tell us something about those?",
            "Yeah, so the last two are pretty obvious, I think right?",
            "One dimensional and two dimensional fast Fourier transforms.",
            "This is a sparse mic to make the matrix vector multiply, so that is rather complex operation because in sparse matrices you don't store the full matrix used to adjust the non zero elements, but then you have to have some organizational help.",
            "I mean you have to store indices or lists must have a means to know where which element belongs.",
            "So this is in fact very difficult to vectorize.",
            "So there of course algorithms known which do the best possible compromise, and these algorithms of course have been used in this particular case.",
            "Now this is a stencil computation stencil computation, I believe, is that you select specific areas.",
            "In a neighborhood of a saddle to compute the next time step for the central cell.",
            "So this would be typically fluid dynamics codes things like that and I fear I must confess I forgotten was chemists.",
            "But the sparse matrix vector multiply is very demanding for this architecture.",
            "On the other hand, the huge data bandwidth helps you a lot here.",
            "And what you also find in many of these algorithms is also many other cases."
        ],
        [
            "So the idea of using a cash to organize your data traffic in many cases a very, very bad idea using a local memory where you use essentially double buffering by explicitly programming to get the next data set for main memory while you work on the previous data set like you would use it on a disk drive, right?",
            "You use double buffering, you work on some data set at the same time, you move out the result of the previous data set and move in the result for the next data set.",
            "This kind of large scale pipelining.",
            "That is what is supposed to be used here.",
            "No compiler can take away their tasks from you.",
            "You have to organize your own data traffic only you know which data block is used for the next computation, and that is absolutely of paramount importance here in order to use your small, expensive local storage efficiently.",
            "To get this data traffic organized.",
            "That is really the key to the success of this architecture.",
            "And that is."
        ],
        [
            "Was that helps with the.",
            "For example, with the sparse matrix, multiply that you organize this data traffic more efficiently.",
            "It's going to be memory bound application, not the compute bound application.",
            "Any other questions?",
            "Luckily for European players in super computers, I know some research was done in Germany, message right?",
            "Research and CERN we do, right, yeah?",
            "Japanese right?",
            "Yeah, well that's I think is rather straightforward.",
            "The point is that the major funding for all these decades has come from the American military establishment, the Big National Laboratory, United States.",
            "Those were the driving forces of the National Security Agency.",
            "The driving forces behind the high performance computer development.",
            "Not in Japan.",
            "Not in Japan, right?",
            "Japan is an exception I must agree.",
            "And to be Frank, I really don't know why the Japanese do that.",
            "I don't think they can make that much money money with it.",
            "I think it must be more kind of a kind of a flagship type of approach.",
            "I don't think that the Japanese supercomputer product lines viewed by themselves would be profitable product lines.",
            "They do sell a number of smaller machines and you see, for example is known to have a customer base of around 600 customers.",
            "But most of these are just small single cabinet single Two 4 processor machines.",
            "But this is a very expensive technology.",
            "Very hot technology so.",
            "It's for the Japanese.",
            "It's quite an achievement.",
            "I'm completely agree it's.",
            "They really put some effort into that.",
            "It may be a matter of national pride or something like that.",
            "I don't think that in Germany people would be willing to pay money for national pride, so that may be one of the differences.",
            "Any other questions?",
            "Thank you again.",
            "Thank you."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Says my pleasure today to introduce our guest from Computer Museum in Munich.",
                    "label": 0
                },
                {
                    "sent": "John Sobolewski and he will talk about pipeline vector processing and scientific computation.",
                    "label": 1
                },
                {
                    "sent": "Thank you.",
                    "label": 0
                },
                {
                    "sent": "Ladies and gentlemen, it's a pleasure for me to be here today and to talk to you about a topic which may appear to be rather old topic, but which also may appear to be rather new topic.",
                    "label": 0
                },
                {
                    "sent": "So let's try if we can bring the past and the present together here.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Now when you talk about a scientific computation, what I have in mind is very complex, very demanding, high end type of computation.",
                    "label": 0
                },
                {
                    "sent": "The most complex problems we can attack in science over the years.",
                    "label": 0
                },
                {
                    "sent": "So problems like global weather prediction, climatic simulation, a lot of fluid dynamics simulations in the various applications, huge amount of applications of wide variety in the basic Sciences.",
                    "label": 1
                },
                {
                    "sent": "And of course, also military applications like cryptography, weapons research, energy research, and many, many more applications.",
                    "label": 1
                },
                {
                    "sent": "What I'm not really concerned with is, let's say the more everyday work, let's say small smaller scale laboratory work, student papers, this kind of thing.",
                    "label": 0
                },
                {
                    "sent": "What I'm concerned with really is the high end of the.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "The computational level.",
                    "label": 0
                },
                {
                    "sent": "So let's move back into the late 60s early 70s becausw in that at that.",
                    "label": 0
                },
                {
                    "sent": "There was kind of a.",
                    "label": 0
                },
                {
                    "sent": "Well maybe crisis is too strong a word, but perceived difficulty in scientific computation.",
                    "label": 0
                },
                {
                    "sent": "Becausw scalar computers had come to an end in some sense.",
                    "label": 0
                },
                {
                    "sent": "Uh.",
                    "label": 0
                },
                {
                    "sent": "Around 1970, the most powerful computer available was the control data 7600.",
                    "label": 1
                },
                {
                    "sent": "If you know little picture for you.",
                    "label": 0
                },
                {
                    "sent": "Machine designed by Seymour Cray.",
                    "label": 1
                },
                {
                    "sent": "So this machine with a Clock frequency of Texas 36 megahertz was capable of doing 36 million instructions per second.",
                    "label": 0
                },
                {
                    "sent": "One instruction per cycle in early RISC machine.",
                    "label": 0
                },
                {
                    "sent": "And in actual applications it typically achieved 5 million floating point operations per second, and there was no real idea around how to improve that in that machine already the fastest components of the day were used.",
                    "label": 0
                },
                {
                    "sent": "The most clever architecture.",
                    "label": 0
                },
                {
                    "sent": "It was used.",
                    "label": 0
                },
                {
                    "sent": "Let's have a little bit.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "Look into how execution would look like in a scalar pipeline machine.",
                    "label": 0
                },
                {
                    "sent": "That's not very much different from what it would look like in today's microprocessors, by the way.",
                    "label": 0
                },
                {
                    "sent": "So to the right we have the time.",
                    "label": 0
                },
                {
                    "sent": "And to the bottom we have the instructions in the program.",
                    "label": 0
                },
                {
                    "sent": "So we fetch the first instruction we decoded.",
                    "label": 0
                },
                {
                    "sent": "We start executing the first instruction.",
                    "label": 0
                },
                {
                    "sent": "Now that execution may take a few cycles.",
                    "label": 0
                },
                {
                    "sent": "In the second cycle, we fetch the second instruction.",
                    "label": 0
                },
                {
                    "sent": "We decode this second instruction and again we start to execute it.",
                    "label": 0
                },
                {
                    "sent": "That also may take the number of cycles and so on.",
                    "label": 0
                },
                {
                    "sent": "So in general for standard RISC machine we would fetch an instruction every cycle.",
                    "label": 0
                },
                {
                    "sent": "We decode instruction every cycle and we execute the instruction.",
                    "label": 0
                },
                {
                    "sent": "In the consequent cycles in here, I assume we do not have any conflicts between the execution.",
                    "label": 0
                },
                {
                    "sent": "Of course, if we have only one multiplier and I have two multiplies here that won't work, then we have a delay here.",
                    "label": 0
                },
                {
                    "sent": "But that's the basic idea.",
                    "label": 0
                },
                {
                    "sent": "How the 7600 would execute?",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Graham now let's look at all the facilities inside the 7600 to see that there's really a lot of thought, a lot of work which has gone in there.",
                    "label": 0
                },
                {
                    "sent": "We have a huge working set here of 24 working registers plus a 12 word instruction stack.",
                    "label": 0
                },
                {
                    "sent": "A program cash.",
                    "label": 0
                },
                {
                    "sent": "So we have 8 floating point registers, 16 index registers, and we have a number of independent functional units which all can operate concurrently and which all are pipelined.",
                    "label": 0
                },
                {
                    "sent": "So in fact the multiplier here.",
                    "label": 0
                },
                {
                    "sent": "Would break the problem I've mentioned in the previous.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Slide if these two operations were multiplies.",
                    "label": 0
                },
                {
                    "sent": "In fact, they could execute like that because the multipliers pipeline in itself.",
                    "label": 0
                },
                {
                    "sent": "So in each instruction you could start to multiply and then push the intermediate results into the next stage of the pipeline multiplier.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And also, there's a huge amount of memory bandwidth.",
                    "label": 0
                },
                {
                    "sent": "You have a full word per cycle axis from main memory through the register file.",
                    "label": 0
                },
                {
                    "sent": "A full word per cycle access from the periphery into main memory.",
                    "label": 0
                },
                {
                    "sent": "So huge amount of bandwidth available to feed data to the computational elements.",
                    "label": 0
                },
                {
                    "sent": "It's not really quite obvious how to improve on.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "That now, let's look what the problem is.",
                    "label": 0
                },
                {
                    "sent": "The problem is exemplified in this very simple little loop.",
                    "label": 0
                },
                {
                    "sent": "Let's assume we have two vectors and we want to multiply them element by element to obtain the third vector.",
                    "label": 0
                },
                {
                    "sent": "How would that code look like?",
                    "label": 0
                },
                {
                    "sent": "We probably need to load one element, load another element, crealta multiplication, store the result, and then we have to loop back to the start of the loop, right?",
                    "label": 0
                },
                {
                    "sent": "So this is 5 instructions about the minimum of scalar instructions you could come up with.",
                    "label": 1
                },
                {
                    "sent": "But out of these five instructions, there's only one instruction which initiates a multiply.",
                    "label": 0
                },
                {
                    "sent": "So you need obviously 5 cycles to execute the loop because you need to issue the five instructions.",
                    "label": 0
                },
                {
                    "sent": "But only once out of five, you initially multiply, but the multipliers pipeline.",
                    "label": 0
                },
                {
                    "sent": "You could, in principle, if initiated, multiply each and every cycle.",
                    "label": 1
                },
                {
                    "sent": "So in fact we are looking at a waste factor of five year.",
                    "label": 0
                },
                {
                    "sent": "Right, we could start to multiply in each of these cycles as well, but we don't have the organization around it.",
                    "label": 0
                },
                {
                    "sent": "The machine is bound by the organization of moving around the data that is the bottleneck in this scalar architecture.",
                    "label": 0
                },
                {
                    "sent": "You spend a lot of instructions, alot of time just organizing the flow of the data, and you spend only one out of five cycles actually doing the work.",
                    "label": 0
                },
                {
                    "sent": "So that is the bottleneck of any of these scalar RISC architectures with a single issue, single instruction issue per cycle.",
                    "label": 0
                },
                {
                    "sent": "So it's very clear from this code what is the problem.",
                    "label": 0
                },
                {
                    "sent": "And what can we do to overcome this problem?",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So let's look at the alternatives.",
                    "label": 0
                },
                {
                    "sent": "What are possible ideas we could have to improve on this kind of code?",
                    "label": 0
                },
                {
                    "sent": "So we looked at the pipeline scelerisque execution where we found this bottleneck.",
                    "label": 0
                },
                {
                    "sent": "One solution is to go to vector execute.",
                    "label": 0
                },
                {
                    "sent": "Now that is what the rest of the talk is all about, so I don't explain it here.",
                    "label": 0
                },
                {
                    "sent": "Another way, which has been thought about and which has actually been tried out is a single instruction multiple data organization with parallel arithmetic elements.",
                    "label": 1
                },
                {
                    "sent": "So you would have a vector multiply, let's say 64 elements.",
                    "label": 0
                },
                {
                    "sent": "You send it in parallel to 64 independent multipliers to do the multiply.",
                    "label": 0
                },
                {
                    "sent": "So obviously you're 64 times as fast.",
                    "label": 0
                },
                {
                    "sent": "However, you also need 64 multipliers, so the problem in fact isn't changed at all.",
                    "label": 0
                },
                {
                    "sent": "You still have essentially the same flow.",
                    "label": 0
                },
                {
                    "sent": "You spend the same amount of work in organizing the data.",
                    "label": 0
                },
                {
                    "sent": "But only one out of five cycles will be spent actually initiating multiplies, so there's one machine essentially only one significant machine built in this architecture, which is the iliac four, late 60s, and it was found not really to be inefficient solution.",
                    "label": 0
                },
                {
                    "sent": "It's much too expensive, is much too much hardware, big fraction of which sits idle too much of the time.",
                    "label": 0
                },
                {
                    "sent": "The real idea of a cost efficient high performance computer is of course that you use each and every transistor all the time.",
                    "label": 0
                },
                {
                    "sent": "If you don't do that, there is obviously some waste.",
                    "label": 0
                },
                {
                    "sent": "Then we have another solution which is essentially the modern day's solution.",
                    "label": 0
                },
                {
                    "sent": "If you look into any modern CPU from Intel via AMD to Texas Instruments or anybody else.",
                    "label": 1
                },
                {
                    "sent": "You find that all modern single chip CPU's super scaler, which means that you issue multiple codes in one cycle in print.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "But that solves the problem.",
                    "label": 0
                },
                {
                    "sent": "If you go back to our loop here, if you issue all five instructions in one cycle.",
                    "label": 0
                },
                {
                    "sent": "And in the next cycle you issues the same 5 instructions, and if you manage well to organize that, you don't confuse your data, you solve the problem.",
                    "label": 0
                },
                {
                    "sent": "Then you use your multiply each and every cycle.",
                    "label": 1
                },
                {
                    "sent": "So that is the answer of today's microprocessors to this problem.",
                    "label": 0
                },
                {
                    "sent": "However, it's a very complex answer.",
                    "label": 0
                },
                {
                    "sent": "It costs you lot of transistors to get the organization right.",
                    "label": 0
                },
                {
                    "sent": "It's very very much non trivial to organize the data flow with this multiple issue.",
                    "label": 0
                },
                {
                    "sent": "The strategy.",
                    "label": 0
                },
                {
                    "sent": "You need a lot of interlocks and tracks and potential delays, and rearranging those cycles to make sure that actually you multiply the right two numbers and don't get one cycle shift.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "In one place.",
                    "label": 0
                },
                {
                    "sent": "So that doesn't answer which is taken by today's microprocessors.",
                    "label": 0
                },
                {
                    "sent": "There's another version of that which is very long instruction word, which essentially is a variant of super scaler.",
                    "label": 1
                },
                {
                    "sent": "Very long instruction word means you have huge instruction word which does many things at the same cycle, which is just different language for the thing up here.",
                    "label": 0
                },
                {
                    "sent": "So depending on taste, essentially some people talk about that.",
                    "label": 0
                },
                {
                    "sent": "For example, modern T digital signal processors are.",
                    "label": 0
                },
                {
                    "sent": "Very long structure processes in some sense.",
                    "label": 0
                },
                {
                    "sent": "In other sense, the issue H instructions per cycle, so it's a matter of taste how you talk about it.",
                    "label": 0
                },
                {
                    "sent": "Intel calls it it's 64 bit processor.",
                    "label": 0
                },
                {
                    "sent": "Also very long instruction word processor.",
                    "label": 0
                },
                {
                    "sent": "Again, it's a matter of taste.",
                    "label": 0
                },
                {
                    "sent": "What kind of language you choose.",
                    "label": 0
                },
                {
                    "sent": "One might think that there's still another solution to the problem, which is multiple instruction.",
                    "label": 1
                },
                {
                    "sent": "Multiple data machines through parallel machines, for example, like the Creative 3E or the IBM Blue gene or the IBM cell processor.",
                    "label": 0
                },
                {
                    "sent": "However, that is not true because the idea to do things independently in parallel can be superimposed on any of these architectures.",
                    "label": 0
                },
                {
                    "sent": "In here it's a different dimension to talk about, so there is no interaction between this dimension and the other dimensions.",
                    "label": 0
                },
                {
                    "sent": "You can do that whatever you choose to do within your single CPU, so that is not the topic of today's talk.",
                    "label": 0
                },
                {
                    "sent": "OK, so this everybody is doing anyway.",
                    "label": 0
                },
                {
                    "sent": "No need for me to talk about it.",
                    "label": 0
                },
                {
                    "sent": "That is inefficient.",
                    "label": 0
                },
                {
                    "sent": "This is the same as that that we looked at.",
                    "label": 0
                },
                {
                    "sent": "So let's come to the topic of this talk.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So what's the idea in a vector computation?",
                    "label": 1
                },
                {
                    "sent": "The idea is that if you look again at a very straightforward vector loop.",
                    "label": 1
                },
                {
                    "sent": "You already know that the basic problem is to set up the data flow.",
                    "label": 0
                },
                {
                    "sent": "So assuming we have an error and a multiplier, the task is just to set up the data flow so that each in every cycle one new data element will come to the editor.",
                    "label": 0
                },
                {
                    "sent": "The multiplier get multiplied and start afterwards.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "The idea is that all of that should be organized by the machine internally so that this whole loop should be represented by a single machine instruction.",
                    "label": 0
                },
                {
                    "sent": "So if this loop is a single machine instruction, which then will tell the hardware how to set up the dataflow, we again have solved the problem we will have.",
                    "label": 0
                },
                {
                    "sent": "Asymptotically execution rate, which is.",
                    "label": 0
                },
                {
                    "sent": "The rate of.",
                    "label": 0
                },
                {
                    "sent": "In this case, it could even be 2 mega flop to operations per cycle, 'cause you can do that and then multiply in the same cycle.",
                    "label": 0
                },
                {
                    "sent": "Assuming you have an error in the multiplier.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Let's look into it a little bit more detail.",
                    "label": 0
                },
                {
                    "sent": "Let's first look at the top three rows of this graph, so that is a geographical arrangement.",
                    "label": 0
                },
                {
                    "sent": "Let's assume we have a memory here, so we fetch two operands from memory, we stuff them into our multiplier pipeline first stage.",
                    "label": 0
                },
                {
                    "sent": "In the next cycle, then in the next cycle we take the intermediate result from that first stage, stuff into the second stage, and so on.",
                    "label": 0
                },
                {
                    "sent": "Let's assume the multiply takes 4 cycles.",
                    "label": 0
                },
                {
                    "sent": "Then here after the 5th cycle in total we have the final result.",
                    "label": 0
                },
                {
                    "sent": "So we store the final result in its destination.",
                    "label": 0
                },
                {
                    "sent": "So we have here a pipeline length of 123456 cycles.",
                    "label": 0
                },
                {
                    "sent": "And once we filled up the pipeline, we will do one multiply each cycle.",
                    "label": 0
                },
                {
                    "sent": "Now let's look at the process of actually filling up the multiply.",
                    "label": 0
                },
                {
                    "sent": "So we fetch the first pair of elements in this cycle.",
                    "label": 0
                },
                {
                    "sent": "Now, here the time runs downwards.",
                    "label": 0
                },
                {
                    "sent": "Is our cycles down the page.",
                    "label": 0
                },
                {
                    "sent": "So in this line it's the first cycle.",
                    "label": 0
                },
                {
                    "sent": "We just fetch two operands.",
                    "label": 0
                },
                {
                    "sent": "Let's say out of the register file in the next cycle, we stuff those two pairs of operands into the first stage of the multiplier and we fetch in parallel the second pair of operands.",
                    "label": 0
                },
                {
                    "sent": "Then in the next cycle, the first pair of operants will have progressed to the second stage of the multiplier.",
                    "label": 0
                },
                {
                    "sent": "The second pair of operands has progressed to the first stage of the multiplier, and we fetch the third pair of operations and so on and in Cycle 6.",
                    "label": 0
                },
                {
                    "sent": "Finally, we have stored the 1st result.",
                    "label": 0
                },
                {
                    "sent": "And then from that time on in each cycle we will store 1 result.",
                    "label": 0
                },
                {
                    "sent": "So we see that in fact S anticipated we do have an asymptotically instruction rate of 1 result per cycle.",
                    "label": 0
                },
                {
                    "sent": "But we also have a so called startup time, which in this case is 6 cycles.",
                    "label": 0
                },
                {
                    "sent": "The length of the pipeline.",
                    "label": 0
                },
                {
                    "sent": "We need some time to fill up this pipeline here.",
                    "label": 0
                },
                {
                    "sent": "Of course, that's not really a new invention.",
                    "label": 0
                },
                {
                    "sent": "I would say the real inventor of this kind of thing is Henry Ford with the assembly line for cars.",
                    "label": 0
                },
                {
                    "sent": "Today I also had a very nice experience with visiting the Castle top lubiana and they have a high throughput pipeline tower there, with two staircases so you can walk up one staircase, look out of the platform, walk around the platform and go down the other staircase.",
                    "label": 0
                },
                {
                    "sent": "This is exactly this kind of principle, right?",
                    "label": 0
                },
                {
                    "sent": "There's never an interlock between visitors and continuous stream of visitors can be fed through that observation tower.",
                    "label": 0
                },
                {
                    "sent": "There are other places where you have staircases.",
                    "label": 0
                },
                {
                    "sent": "You need to wait until somebody has come down, come down until the staircase, the functional unit staircase is free, and when it's free, you can issue the next operand, right?",
                    "label": 0
                },
                {
                    "sent": "So here you see that this principle of pipelining is completely abandoned.",
                    "label": 0
                },
                {
                    "sent": "Completely general, very widely used in all kinds of human activities, and also here it's a good idea to.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Lose it.",
                    "label": 0
                },
                {
                    "sent": "However, there are a few problems with this kind of principle, cause there are some things which are not suitable for vectorization.",
                    "label": 0
                },
                {
                    "sent": "For example, you would think that a scalar product is a nice mathematical operation, which you do many times which we like to do in many operations.",
                    "label": 0
                },
                {
                    "sent": "It's a very natural way to work in the metric computation in many cases.",
                    "label": 0
                },
                {
                    "sent": "And you would infer, turn right down the scalar product like this.",
                    "label": 0
                },
                {
                    "sent": "You have a loop over the vector elements.",
                    "label": 1
                },
                {
                    "sent": "You multiply 1 vector element by the other and you add up all the results.",
                    "label": 0
                },
                {
                    "sent": "Now that unfortunately has a severe problem because in order to do this addition you have to wait for the result of the previous edition.",
                    "label": 0
                },
                {
                    "sent": "Right, so assuming that the editor has a finite pipeline length, you get stalled for the length of that pipeline.",
                    "label": 0
                },
                {
                    "sent": "You have to wait until you come out of the other pipeline before you can stick it into the air again.",
                    "label": 0
                },
                {
                    "sent": "So therefore this is not very helpful way to work on the vector computer.",
                    "label": 0
                },
                {
                    "sent": "Therefore 1 users instead of inner products outer products.",
                    "label": 0
                },
                {
                    "sent": "So if you consider that as a piece of a matrix multiply, you would exchange the inner another loop and do the matrix multiply by outer products.",
                    "label": 1
                },
                {
                    "sent": "So see the result matrix IK element still is of course the sum of the IJ.",
                    "label": 0
                },
                {
                    "sent": "JK elements, but in the DJ loop now is somewhere outside here in the inner loop is the I loop.",
                    "label": 0
                },
                {
                    "sent": "So you go to one column of the result and you take the color of that result.",
                    "label": 0
                },
                {
                    "sent": "As an accumulation of columns of 1 matrix times a constant with respect to add this element is a constant, right?",
                    "label": 0
                },
                {
                    "sent": "So you replace inner products by outer products and now it's completely vectorizable.",
                    "label": 1
                },
                {
                    "sent": "So this is a typical operation you do when you need to go to vectorizing scalar code, exchanging in and outer loops is usually a very very helpful thing to do.",
                    "label": 0
                },
                {
                    "sent": "It usually does the job.",
                    "label": 0
                },
                {
                    "sent": "Of course there are exceptions, but usually it's a very good thing to do.",
                    "label": 0
                },
                {
                    "sent": "And you have to do it by hand to the compiler.",
                    "label": 0
                },
                {
                    "sent": "Most cases won't do this for you.",
                    "label": 0
                },
                {
                    "sent": "They are vectorizing compilers, of course, but usually they're not achieved.",
                    "label": 0
                },
                {
                    "sent": "Do not achieve the kind of efficiency you would achieve by doing this kind of thing yourself.",
                    "label": 0
                },
                {
                    "sent": "So what we have learned now we've learned that in fact, vector computation can make very efficient use of the hardware.",
                    "label": 0
                },
                {
                    "sent": "Every transistor you pay for you also get good workout.",
                    "label": 0
                },
                {
                    "sent": "However, the burden on the programmer has increased somewhat.",
                    "label": 0
                },
                {
                    "sent": "You just can't write your code anywhere you want.",
                    "label": 0
                },
                {
                    "sent": "You supposed not to write scalar products.",
                    "label": 0
                },
                {
                    "sent": "You supposed to right outer products.",
                    "label": 0
                },
                {
                    "sent": "So you have to know something about it.",
                    "label": 0
                },
                {
                    "sent": "You have to adjust your work, your habits to the machine you're using, otherwise you won't be very happy with the performance of the machine.",
                    "label": 0
                },
                {
                    "sent": "So that is an unfortunate consequence and.",
                    "label": 0
                },
                {
                    "sent": "It is something, however, which people have gone through many times.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Now let's look at the historical development of this kind of.",
                    "label": 0
                },
                {
                    "sent": "Approach.",
                    "label": 0
                },
                {
                    "sent": "One of the very first vector machines ever developed was the Code Data Corporation Star 100.",
                    "label": 1
                },
                {
                    "sent": "Star is shorthand for a string array 100 million floating point operations per second.",
                    "label": 1
                },
                {
                    "sent": "That was late 60s early 70s, so 100 mega flops.",
                    "label": 0
                },
                {
                    "sent": "It is 20 times faster than the CDC's 7600, so it's a significant achievement.",
                    "label": 0
                },
                {
                    "sent": "If it could be made to work.",
                    "label": 0
                },
                {
                    "sent": "However.",
                    "label": 0
                },
                {
                    "sent": "There were a couple of mistakes made in that machine as we know today.",
                    "label": 0
                },
                {
                    "sent": "First of all, there was a run along vector startup time of several 100 cycles.",
                    "label": 0
                },
                {
                    "sent": "Now what does it mean?",
                    "label": 0
                },
                {
                    "sent": "It means that if you need a few 100 cycles to fill up your pipeline.",
                    "label": 0
                },
                {
                    "sent": "You won't get any result for a few 100 cycles, and only then you start to get results.",
                    "label": 0
                },
                {
                    "sent": "Therefore it's worthwhile only if your vector length is many, many hundreds of thousands of elements.",
                    "label": 0
                },
                {
                    "sent": "It works only for very long vectors.",
                    "label": 0
                },
                {
                    "sent": "Secondly, the scalar unit in that machine.",
                    "label": 0
                },
                {
                    "sent": "So if you want to do something which is not a vector operation, just a standard scalar operation that was very, very slow.",
                    "label": 0
                },
                {
                    "sent": "It was only 2 million floating point operations per second, much slower than the 7600.",
                    "label": 0
                },
                {
                    "sent": "And these two two things together combined to really disappear.",
                    "label": 0
                },
                {
                    "sent": "Disappointing performance.",
                    "label": 0
                },
                {
                    "sent": "The machine was a real disappointment.",
                    "label": 0
                },
                {
                    "sent": "Also, it took much too long to deliver.",
                    "label": 0
                },
                {
                    "sent": "It was contracted in 67, announced in 72 and delivered in 74, so it has seven years development time.",
                    "label": 0
                },
                {
                    "sent": "I think the promised development time was around two years, so it vastly over and it's time budget.",
                    "label": 1
                },
                {
                    "sent": "It also vastly over and it's cost budget.",
                    "label": 0
                },
                {
                    "sent": "There was only a total of four machines ever built, two of which report by Lawrence Livermore Laboratory.",
                    "label": 0
                },
                {
                    "sent": "Of course, if you have a first of such machine and then buy a second one, you have a problem.",
                    "label": 0
                },
                {
                    "sent": "So the people involved Thornton at CDC, who developed the machine and Fern Bar at Lawrence Livermore, who passed the machines, opposed last drops over this problem.",
                    "label": 0
                },
                {
                    "sent": "So real.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Department.",
                    "label": 0
                },
                {
                    "sent": "However, it was pretty nice.",
                    "label": 0
                },
                {
                    "sent": "You would machine as you see here.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "There were other disappointments Texas Instruments at that time also was in the business of building computers.",
                    "label": 0
                },
                {
                    "sent": "That is something which may have been lost by today.",
                    "label": 0
                },
                {
                    "sent": "Maybe some of you knew that they built more computers, calculators and so on, but they want also in the big computers business, so they also built a vector computer, the so called advanced scientific computer, about the same time.",
                    "label": 0
                },
                {
                    "sent": "About the same architecture.",
                    "label": 0
                },
                {
                    "sent": "And about the same performance problems.",
                    "label": 0
                },
                {
                    "sent": "So they sold 7 units, but it was so disappointing that they completely dropped out of mainframe computer manufacturing.",
                    "label": 1
                },
                {
                    "sent": "So also not really a success story.",
                    "label": 0
                },
                {
                    "sent": "Excuse me little price in today's dollars would probably be around 3040 million.",
                    "label": 0
                },
                {
                    "sent": "In today's dollars, of course not.",
                    "label": 0
                },
                {
                    "sent": "In dollars of those years.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So let's try to understand what's the problem with these machines.",
                    "label": 0
                },
                {
                    "sent": "I mean, we had this great idea that by pipelining things and setting up things, if we get a result every cycle, we should get a better performance.",
                    "label": 0
                },
                {
                    "sent": "However, we got pretty worse performance.",
                    "label": 0
                },
                {
                    "sent": "How is that possible?",
                    "label": 0
                },
                {
                    "sent": "So let's understand what are the performance laws of vector processing.",
                    "label": 0
                },
                {
                    "sent": "So let's look at the vector length and let's look at the number of cycles we need.",
                    "label": 0
                },
                {
                    "sent": "To spend in order to execute a certain instruction so we know already, we need some startup time.",
                    "label": 0
                },
                {
                    "sent": "The number of cycles we need to fill the pipeline, and once we filter pipeline, we get a number of results per cycle.",
                    "label": 0
                },
                {
                    "sent": "Because I mean, we've seen in some of these operations we can do an add and multiply in the same cycle.",
                    "label": 0
                },
                {
                    "sent": "So typically we could get two operations per cycle.",
                    "label": 0
                },
                {
                    "sent": "Or maybe we have two parallel multipliers and we can do two multipliers in one cycle would be the same thing.",
                    "label": 0
                },
                {
                    "sent": "So let's look at.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This in a graphical manner.",
                    "label": 0
                },
                {
                    "sent": "So first of all, here we have a scalar performance curve.",
                    "label": 0
                },
                {
                    "sent": "On the bottom here we have a scalar performance at 1/5, so that is exactly our example of the 7600.",
                    "label": 0
                },
                {
                    "sent": "Every fifth cycle I get one result right?",
                    "label": 0
                },
                {
                    "sent": "So my operations per Clock is .21 / 5 and it doesn't depend on the vector length because the normal scalar loop has a very little startup time.",
                    "label": 0
                },
                {
                    "sent": "OK, now let's look at the Violet curve.",
                    "label": 0
                },
                {
                    "sent": "There is a curve.",
                    "label": 0
                },
                {
                    "sent": "We have a startup time of 100 elements and one result per cycle.",
                    "label": 0
                },
                {
                    "sent": "So that would be a typical.",
                    "label": 0
                },
                {
                    "sent": "The typical.",
                    "label": 0
                },
                {
                    "sent": "Vector operation and here you see what happens as synthetically you will approach 11 result per cycle, but you did pretty long vectors to get there.",
                    "label": 0
                },
                {
                    "sent": "In particular it vector length 100 you get only performance of 1/2 because you use 100 cycles to start up and then you use 100 cycles to get you 100 results.",
                    "label": 0
                },
                {
                    "sent": "Which means you use 200 cycles for 100 results which is half a result per cycle.",
                    "label": 0
                },
                {
                    "sent": "So you see that if you have to log a startup time.",
                    "label": 0
                },
                {
                    "sent": "You will never really get the performance you thought you should get, cause most of the time.",
                    "label": 0
                },
                {
                    "sent": "You will be someplace down here.",
                    "label": 0
                },
                {
                    "sent": "Vectors.",
                    "label": 0
                },
                {
                    "sent": "Usually, in particularly those years, weren't yet that long.",
                    "label": 0
                },
                {
                    "sent": "And it can get worse.",
                    "label": 0
                },
                {
                    "sent": "If you think you build a very powerful machine where you get 4 results per cycle.",
                    "label": 0
                },
                {
                    "sent": "Extremely powerful.",
                    "label": 0
                },
                {
                    "sent": "Yeah, for multipliers or to others and to multipliers.",
                    "label": 0
                },
                {
                    "sent": "But still, if you have 100 cycles startup time, it takes you huge amount of time to approach that only at a vector length of 400.",
                    "label": 0
                },
                {
                    "sent": "You approach half of your anticipated performance.",
                    "label": 0
                },
                {
                    "sent": "You need thousands of vector elements in order to come anywhere close.",
                    "label": 0
                },
                {
                    "sent": "The performance you think you have because you produce for results per cycle.",
                    "label": 0
                },
                {
                    "sent": "So the startup time really is killing you.",
                    "label": 0
                },
                {
                    "sent": "On the other hand, if you would have really short set up time, let's say like 10 cycles yellow curve, then it's very different then already.",
                    "label": 0
                },
                {
                    "sent": "It rather short vector length you get a pretty nice performance and asymptotically of course you get you 4 cycles per result.",
                    "label": 0
                },
                {
                    "sent": "So this looks very simple, but it has apparently been overlooked by the early designers of vector computers.",
                    "label": 0
                },
                {
                    "sent": "They thought they could get away with long vector only machines and they forgot about the unfortunate fact that most applications at that in those years had rather short vector length and could not ever get at that point.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Comments.",
                    "label": 0
                },
                {
                    "sent": "Unfortunately, the second problem, the second problem is.",
                    "label": 0
                },
                {
                    "sent": "That you also have to consider scalar computation because there is not a single code in the world which is exclusively 100% vector, it doesn't exist.",
                    "label": 0
                },
                {
                    "sent": "There will always be some scalar sections taking care of some coordination.",
                    "label": 0
                },
                {
                    "sent": "It is impossible to have pure scalar code.",
                    "label": 0
                },
                {
                    "sent": "So you will always have some scalar section, and now the question is how is that I'm divided between your scalar code and your vector code?",
                    "label": 1
                },
                {
                    "sent": "Let's make little example here.",
                    "label": 0
                },
                {
                    "sent": "Let's assume that 10% of the code is Kayla.",
                    "label": 0
                },
                {
                    "sent": "We executed at one Mega Flop and 90% of the code is vector.",
                    "label": 0
                },
                {
                    "sent": "We executed it 100 Mega flops.",
                    "label": 0
                },
                {
                    "sent": "Now if you look at it, essentially what comes out of that is that.",
                    "label": 0
                },
                {
                    "sent": "Both of these things take about the same amount of time and in the total end result you end up with only 9.2 mega flops.",
                    "label": 0
                },
                {
                    "sent": "So you see that just a very tiny small fraction of scale operation.",
                    "label": 1
                },
                {
                    "sent": "Quite kids, your vector performance.",
                    "label": 0
                },
                {
                    "sent": "So second problem of the vector machines you really have to get rid of the scalar sectors of the code.",
                    "label": 0
                },
                {
                    "sent": "You have to limit them to the utmost minimum, otherwise the performance increases.",
                    "label": 0
                },
                {
                    "sent": "You believe you should get.",
                    "label": 0
                },
                {
                    "sent": "You will never obtain and that is the 2nd lecture second lesson which has been learned since then is the 2nd mistake in the Star 100 as well as the Texas Instruments machine.",
                    "label": 0
                },
                {
                    "sent": "The scalar performance was too weak.",
                    "label": 0
                },
                {
                    "sent": "You cannot live with such weak scalar performance in spite of providing all this beautiful vector power, you still have to provide a power.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Scalar unit.",
                    "label": 0
                },
                {
                    "sent": "Again, let's look at that graphic Kelly.",
                    "label": 0
                },
                {
                    "sent": "So here I have the scalar fraction, so scalar fraction one is a purely scalar program which cannot vectorize anything.",
                    "label": 0
                },
                {
                    "sent": "Scalar fraction 0 is a program which can be completely vectorized.",
                    "label": 0
                },
                {
                    "sent": "No scalar part in it.",
                    "label": 0
                },
                {
                    "sent": "And here we have the ratio of scalar to vector.",
                    "label": 0
                },
                {
                    "sent": "So let's first of all look at this here.",
                    "label": 0
                },
                {
                    "sent": "Let me see how do I need to read that?",
                    "label": 0
                },
                {
                    "sent": "Maybe it's better to look at the other one.",
                    "label": 0
                },
                {
                    "sent": "First, let's the ratio of five.",
                    "label": 0
                },
                {
                    "sent": "So let's assume the speed ratio of vector and scalar unit is 5.",
                    "label": 0
                },
                {
                    "sent": "So you would say do.",
                    "label": 0
                },
                {
                    "sent": "100 mega flops in the vector unit.",
                    "label": 0
                },
                {
                    "sent": "And 100 /.",
                    "label": 0
                },
                {
                    "sent": "520 mega flops in the scalar unit.",
                    "label": 0
                },
                {
                    "sent": "Then you will find the performance curve like that.",
                    "label": 0
                },
                {
                    "sent": "Of course, if you are at full vector performance you get full vector performance, no scalar part.",
                    "label": 0
                },
                {
                    "sent": "If you have a pure scalar code, you find your factor of 5.2 and in between you have some smooth transition of course.",
                    "label": 0
                },
                {
                    "sent": "Now, if you really powerful vector computer 100 times faster in vector mode in scalar mode, then we get the bottom curve here.",
                    "label": 0
                },
                {
                    "sent": "And to get your vector performance only if you are really in a one 2% of calefaction region becausw.",
                    "label": 0
                },
                {
                    "sent": "This big factor of 100 is complete nonsense, right?",
                    "label": 0
                },
                {
                    "sent": "You will never get it.",
                    "label": 0
                },
                {
                    "sent": "'cause the tiniest little bit of scalar code just kills your vector performance.",
                    "label": 0
                },
                {
                    "sent": "You never get actually to the factor 100 if you have just a little bit of scalar code around, so this is the reason why you have to be very, very careful with the design.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Of your vector machine though, let's collect our experience so far.",
                    "label": 0
                },
                {
                    "sent": "What master designer vector machine take care of?",
                    "label": 0
                },
                {
                    "sent": "First of all, the vector startup must be shot so that we can work with short vectors, short pipelines.",
                    "label": 1
                },
                {
                    "sent": "We must have a very fast scaler unit that we can afford to have a little bit of scalar computation.",
                    "label": 0
                },
                {
                    "sent": "Enter there's another element which I didn't mention so far.",
                    "label": 1
                },
                {
                    "sent": "There are a few things where one has to take care of which are irregular data structures.",
                    "label": 0
                },
                {
                    "sent": "I mean there is not only matrix multiply in science, there are a few other operations as well.",
                    "label": 0
                },
                {
                    "sent": "And you need some index gather operations or merge operations or scatter operations to deal with irregular.",
                    "label": 0
                },
                {
                    "sent": "Data structures.",
                    "label": 0
                },
                {
                    "sent": "It's something which is required, but I won't go into too much debt.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Head here.",
                    "label": 0
                },
                {
                    "sent": "Now, of course, see McRae after he designed the 7600 finished it in the 6869.",
                    "label": 0
                },
                {
                    "sent": "They knew about the development of the Star 100 and about The Time Machine he looked at that, so he had the chance to learn from these experiences.",
                    "label": 0
                },
                {
                    "sent": "So when in 70 two he founded Cree Research Incorporated or this experience was known.",
                    "label": 0
                },
                {
                    "sent": "So he went on to develop the Cray one machine which was delivered in 76, first to the Los Alamos Laboratory.",
                    "label": 0
                },
                {
                    "sent": "And of course, he knew that, and he realized all of these insights.",
                    "label": 0
                },
                {
                    "sent": "So the basic idea is that.",
                    "label": 0
                },
                {
                    "sent": "It is a vector register machine.",
                    "label": 0
                },
                {
                    "sent": "It's not a memory to memory machine.",
                    "label": 0
                },
                {
                    "sent": "Reason is that in a memory to memory machine you have to retrieve data from memory, but memory X is always takes quite a bit of time, so you have a long set up cycles in order to avoid that that is buffered by vector registers.",
                    "label": 0
                },
                {
                    "sent": "So all the operations run from vector register, two vector register and can therefore have very short set up time not involving memory access.",
                    "label": 0
                },
                {
                    "sent": "Then of course you have to vector load store instructions which organize the traffic between the vector registers and the.",
                    "label": 0
                },
                {
                    "sent": "And the memory and then the programmer has to take care of overlapping these things right?",
                    "label": 0
                },
                {
                    "sent": "So when you know that three instructions down, you will need this data element, you initiate to load it, then you do some other operations which data you have in the registers and when you finally come to work on the data you requested, it's already there.",
                    "label": 0
                },
                {
                    "sent": "So it's the idea of double buffering, which we have in many other cases.",
                    "label": 0
                },
                {
                    "sent": "You think about double buffering when you think about IO devices in many cases, but you also have to think about it in CPU's if you have fast CPU double buffering again is important.",
                    "label": 0
                },
                {
                    "sent": "Another element which is important about the K1 is even if you completely forget about the vector operations, it's still the fastest computer you can buy.",
                    "label": 0
                },
                {
                    "sent": "So that is the lesson learned that you need to have some scalar capability as well.",
                    "label": 0
                },
                {
                    "sent": "So in this machine peak theoretical peak rate of 160 Mega Flop can be achieved on the average.",
                    "label": 0
                },
                {
                    "sent": "Of course, you never achieve that on the average, maybe 50 Mega Flop was a very good rate to achieve, so it's a factor of 10 faster than the 7600, which is just seven years older.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Of course you have seen this machine, I assume.",
                    "label": 0
                },
                {
                    "sent": "The famous loveseat kind of organization power supplies in the bench and the logic in the columns.",
                    "label": 0
                },
                {
                    "sent": "And you see.",
                    "label": 0
                },
                {
                    "sent": "The typical closing people were in the early 70s.",
                    "label": 0
                },
                {
                    "sent": "So that is one of the major achievements of that time, and of C. McCray.",
                    "label": 0
                },
                {
                    "sent": "Of course, learning from the failures of the people who had.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Worked on this before him.",
                    "label": 0
                },
                {
                    "sent": "I don't want to go into details of this just to show you again the basic principle.",
                    "label": 0
                },
                {
                    "sent": "You have memory, you have a memory traffic between memory and vector registers, and then you have functional units with execute the arithmetic operations and traffic between the functional units, answer vector registers and all these things run in parallel, so thereby you avoid the startup times.",
                    "label": 0
                },
                {
                    "sent": "And you have separate high powerful scalar units so that you avoid the scalar overhead, and then you can make.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "An efficient computer.",
                    "label": 0
                },
                {
                    "sent": "After this initial product, let's have a quick look at what happened to further at query search because query shirts was the dominating company in this business for quite a long time.",
                    "label": 0
                },
                {
                    "sent": "So there were various further generations of the same architecture be provided.",
                    "label": 0
                },
                {
                    "sent": "Then in 90 three we have an important transition to massive parallel processing.",
                    "label": 0
                },
                {
                    "sent": "The microprocessor became much, much more powerful than.",
                    "label": 0
                },
                {
                    "sent": "It had been in previous years, so for the first time the microprocessor could come in competition with these special purpose vector CPUs starting in 93.",
                    "label": 0
                },
                {
                    "sent": "And in the remainder of the 90s with Creative 3E, which again is a massive parallel architecture based on the digital equipment, Alpha processor was the dominating high performance computer.",
                    "label": 0
                },
                {
                    "sent": "Unfortunately, you also must be aware of some other well known technical events.",
                    "label": 0
                },
                {
                    "sent": "Around 1990, the Cold War stopped, which drained the funding for the military, which was one of the major buyers of these machines, and therefore in the early 90s.",
                    "label": 0
                },
                {
                    "sent": "Commercial problems developed in the high performance in the high performance computer companies.",
                    "label": 0
                },
                {
                    "sent": "So in 1996, query Search was acquired by a Silicon graphics and a lot of the development was stopped and diverted.",
                    "label": 0
                },
                {
                    "sent": "So that was essentially an end of this.",
                    "label": 0
                },
                {
                    "sent": "So far very successful computer line.",
                    "label": 0
                },
                {
                    "sent": "Now later on in 1999, Chry Research was acquired by Terra Data, which renamed themselves to create Incorporated in 2002 again a Cray Vector Machine was bought onto the market and today we create X1.",
                    "label": 0
                },
                {
                    "sent": "E is one of the dominant.",
                    "label": 0
                },
                {
                    "sent": "Products, in fact, one of the two products available in vector processing.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "There were other entrants control data also built upon their stubborn height experience.",
                    "label": 0
                },
                {
                    "sent": "They created the Cyber 200 family.",
                    "label": 1
                },
                {
                    "sent": "So, several years later, 1980, the first machine came out, so they reduced the setup time to about 50 cycles, which is significantly shorter.",
                    "label": 0
                },
                {
                    "sent": "Therefore, this machine could.",
                    "label": 0
                },
                {
                    "sent": "Effectively work with much shorter vectors.",
                    "label": 1
                },
                {
                    "sent": "Also, the scalar unit was product to speed.",
                    "label": 0
                },
                {
                    "sent": "And there was also a 10 giga flop machine built in the late 80s.",
                    "label": 0
                },
                {
                    "sent": "However, in 89, the enterprise was terminated becauses they had used up their money.",
                    "label": 0
                },
                {
                    "sent": "They couldn't made it profitable quickly enough.",
                    "label": 1
                },
                {
                    "sent": "A total of about 40 cyber 200 machines have been sold and 30 four of the 10 machines.",
                    "label": 0
                },
                {
                    "sent": "Of course you have to contrast that with many, many hundreds of machines which were sold by cry at the same time.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "That's a typical picture of a computer center in those days.",
                    "label": 0
                },
                {
                    "sent": "In 1986, in the back here that is a cyber 205.",
                    "label": 1
                },
                {
                    "sent": "So and the geographical layout effect corresponds to the pipeline, so this is a memory to memory machine.",
                    "label": 0
                },
                {
                    "sent": "The big section in behind us in memory then here is the data streaming unit.",
                    "label": 0
                },
                {
                    "sent": "This is a controlled section and then you go to the vector pipeline in this leg here and then from the vector pipeline you go back into memory.",
                    "label": 0
                },
                {
                    "sent": "And here you have a full processor.",
                    "label": 0
                },
                {
                    "sent": "Create two and a single processor create tool which were the most powerful great products of that year.",
                    "label": 0
                },
                {
                    "sent": "And in the center you have various peripherals like disks and tapes and network connections.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And like.",
                    "label": 0
                },
                {
                    "sent": "There's one other Corporation I need to mention in this context.",
                    "label": 0
                },
                {
                    "sent": "Nippon Electric Corp. Of Japan.",
                    "label": 0
                },
                {
                    "sent": "They started in 1983 to provide vector machines.",
                    "label": 0
                },
                {
                    "sent": "The first 2 generations were signal processing vector machines.",
                    "label": 0
                },
                {
                    "sent": "When like Ray shared memory, few processor vector machines were built.",
                    "label": 0
                },
                {
                    "sent": "Up to maximum of 32 processors in 1994, and then they managed to use the vector CPUs as building elements in massively parallel machines.",
                    "label": 0
                },
                {
                    "sent": "So today you can go up to several thousand processors, and in fact there are a few installations like that for example.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "The for a long time the most powerful computer in.",
                    "label": 0
                },
                {
                    "sent": "The world the Earth simulator in Japan is built out of this process is one of the most powerful machine in Germany.",
                    "label": 0
                },
                {
                    "sent": "Today is the S68 in Stuttgart, so a few of these machines exist, but it's a very small market share.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Now.",
                    "label": 0
                },
                {
                    "sent": "In view of these architectures being not really widely available, why would one be interested in them today?",
                    "label": 0
                },
                {
                    "sent": "The point is that there may be a revival on the horizon.",
                    "label": 0
                },
                {
                    "sent": "Big 'cause there's some other product you can buy today.",
                    "label": 0
                },
                {
                    "sent": "In fact, you can buy go into a shop today and buy a PlayStation 3 now.",
                    "label": 0
                },
                {
                    "sent": "You might wonder what kind of PlayStation three to do with scientific computation.",
                    "label": 0
                },
                {
                    "sent": "The point is that the PlayStation Three in fact is has the cheapest gigaflops you can buy.",
                    "label": 0
                },
                {
                    "sent": "At this current date.",
                    "label": 0
                },
                {
                    "sent": "So it's based on the IBM Sony Toshiba cell processor, so this is a diagram of the cell processor.",
                    "label": 1
                },
                {
                    "sent": "It has 9.",
                    "label": 0
                },
                {
                    "sent": "Hey, it's a single chip containing nine different CPUs, so here you have a general purpose 64 bit PowerPC that is rather standard 64 bit processor and then you have 8.",
                    "label": 0
                },
                {
                    "sent": "Vector processors, so they call them synergistic processors.",
                    "label": 0
                },
                {
                    "sent": "But in fact these are essentially vector arithmetic logic units which work on the local storage element.",
                    "label": 0
                },
                {
                    "sent": "So essentially what you have here is something like a small Cray.",
                    "label": 0
                },
                {
                    "sent": "One you have a local storage which corresponds to the register file into a vector arithmetic which does arithmetic on the register file, and then you have some streaming unit which will stayed up between the local storage and external memory, right?",
                    "label": 0
                },
                {
                    "sent": "So if in fact you have something like 8 create processors on a single chip here.",
                    "label": 0
                },
                {
                    "sent": "Let's look into this a little bit more detail.",
                    "label": 0
                },
                {
                    "sent": "So 8 vector processors and one general purpose processor to take care of organization and bookkeeping and so on.",
                    "label": 0
                },
                {
                    "sent": "That's certainly very fine.",
                    "label": 0
                },
                {
                    "sent": "If you look at the local storage here we see it's 256 kilobytes for the whole.",
                    "label": 0
                },
                {
                    "sent": "System so it's only 32 kW, which is not really a lot.",
                    "label": 0
                },
                {
                    "sent": "So this is one of the four scientific computation.",
                    "label": 0
                },
                {
                    "sent": "It would be difficult to program because of the small internal memory.",
                    "label": 0
                },
                {
                    "sent": "On the other hand, you have an extremely powerful internal interconnect.",
                    "label": 0
                },
                {
                    "sent": "You can move 12 words per cycle inside the chip, which is clear and 86 gigabytes per second.",
                    "label": 0
                },
                {
                    "sent": "It's probably the highest performance data network anywhere in the world.",
                    "label": 0
                },
                {
                    "sent": "And also you have a very high throughput memory channel here.",
                    "label": 0
                },
                {
                    "sent": "You have a Rambus XDR interface here, which is capable of doing 24 gigabyte per second or three Gigabit per second.",
                    "label": 0
                },
                {
                    "sent": "Which is quite more than any conventional microprocessor can do.",
                    "label": 0
                },
                {
                    "sent": "And we also have a very high data rate channel for other external connections like multiprocessor, massively parallel network connections which even is capable of performing 76 gigabytes per second.",
                    "label": 0
                },
                {
                    "sent": "Almost 10 gigabytes per second.",
                    "label": 0
                },
                {
                    "sent": "Tim gigabytes per second.",
                    "label": 0
                },
                {
                    "sent": "And if you look just at the arithmetic logic unit, we have a tremendous performance of 56 gigaflops for single precision and 26 gigaflops for double precision, so this is.",
                    "label": 0
                },
                {
                    "sent": "More than a factor of 10 above anything you can get in most standard microprocessors.",
                    "label": 0
                },
                {
                    "sent": "And you can buy a complete system PlayStation 3 for around 400 euros.",
                    "label": 0
                },
                {
                    "sent": "So price efficiency wise it's more than a factor of 10 better than anything else you can buy.",
                    "label": 0
                },
                {
                    "sent": "However, there are a few slide problems here and the few slide problems are concerned with the programming complexity, because as I said, you have other small internal memory.",
                    "label": 0
                },
                {
                    "sent": "This is not a cash register file local storage, so you have to explicitly program the access you have explicit moves from memory into local storage you have explicit.",
                    "label": 0
                },
                {
                    "sent": "Addressing of this local storage in your vector operations, so it is quite demanding on the programmer and of course also the multiprocessor aspects.",
                    "label": 0
                },
                {
                    "sent": "You have to partition your program problem into eight tasks if you want to use multiple of cells into more tasks.",
                    "label": 0
                },
                {
                    "sent": "So all of that is very much non trivial.",
                    "label": 0
                },
                {
                    "sent": "So if you can, if you are satisfied with the PlayStation Three, that would be a nice element to use.",
                    "label": 0
                },
                {
                    "sent": "You need the development environment, of course, and a standard IBM has a Corporation program with universities where universities can get this development environments for extremely favorable essentially free conditions.",
                    "label": 0
                },
                {
                    "sent": "So in the USA University environment, I think it is very nice thing to experiment with this kind of architecture.",
                    "label": 0
                },
                {
                    "sent": "'cause there are very significant hopes for the future in here.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Let's have a look at this picture.",
                    "label": 0
                },
                {
                    "sent": "So this is the actual trip.",
                    "label": 0
                },
                {
                    "sent": "The chip is not very big, it's only 221 square millimeters.",
                    "label": 0
                },
                {
                    "sent": "So model lithography could easily make chips twice that size.",
                    "label": 0
                },
                {
                    "sent": "It has only two 34 million transistors.",
                    "label": 0
                },
                {
                    "sent": "The latest chips from Intel ever million transistors, a billion transistors or more.",
                    "label": 0
                },
                {
                    "sent": "So also that is not on the high end really.",
                    "label": 0
                },
                {
                    "sent": "So there is some more real estate available in principle.",
                    "label": 0
                },
                {
                    "sent": "So one could think about enhancing on that architecture and we have.",
                    "label": 0
                }
            ]
        },
        "clip_31": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "You seen that there are few shortcomings here for scientific computation.",
                    "label": 1
                },
                {
                    "sent": "For gaming this is perfectly alright, cause gaming can perfectly live with 32 bit in scientific computation.",
                    "label": 1
                },
                {
                    "sent": "We have to have 64 bit.",
                    "label": 0
                },
                {
                    "sent": "In almost all cases, 32 bit are not sufficient for scientific computations.",
                    "label": 0
                },
                {
                    "sent": "In most cases you need 64 bit.",
                    "label": 0
                },
                {
                    "sent": "So you have almost a factor of 10 discrepancy here, which is not very nice.",
                    "label": 0
                },
                {
                    "sent": "The double Precision multiplier is not executed.",
                    "label": 1
                },
                {
                    "sent": "Very well apparently, and you have the very small local storage here, but you do have very nice bandwidth.",
                    "label": 0
                },
                {
                    "sent": "A lot of very nice features, so it's very clear.",
                    "label": 0
                }
            ]
        },
        "clip_32": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "How one would improve on that kind of chip?",
                    "label": 0
                },
                {
                    "sent": "The blue area here that is a local memory which goes with that processor.",
                    "label": 0
                },
                {
                    "sent": "So you see the eight local memories in the eight vector processors so.",
                    "label": 0
                },
                {
                    "sent": "Increasing the local memory and increasing the double precision multiplier to be of higher performance are very straightforward things to do.",
                    "label": 0
                }
            ]
        },
        "clip_33": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Which would make an absolutely superior scientific process out of this trip.",
                    "label": 0
                },
                {
                    "sent": "Of course it's a matter of speculation.",
                    "label": 0
                },
                {
                    "sent": "If IBM would intend to do anything like that.",
                    "label": 0
                },
                {
                    "sent": "After all, they already have more than 50% of the market share in high performance computing with their blue Jean and other systems.",
                    "label": 0
                },
                {
                    "sent": "If you already have more than 50% of market share, it's a question.",
                    "label": 0
                },
                {
                    "sent": "If you really do so much about it.",
                    "label": 0
                },
                {
                    "sent": "But of course you want to keep your market share, so maybe improving on the performance is a good idea.",
                    "label": 0
                },
                {
                    "sent": "So there are people see these people in the world to do speculate that we will see improvements.",
                    "label": 0
                },
                {
                    "sent": "On these two frontiers, improving double precision performance, improving internal memory size.",
                    "label": 0
                },
                {
                    "sent": "Meanwhile, due to the University Corporation program, there will be four people around who know how to program this thing.",
                    "label": 0
                },
                {
                    "sent": "That reminds me of the 1950s.",
                    "label": 0
                },
                {
                    "sent": "In the 1950s, IBM installed a huge number of their 650 computer at universities for very, very low cost, and in this way managed to have a lot of people educated in use of their computers.",
                    "label": 0
                },
                {
                    "sent": "After all, in the 50s people didn't know what the computer is, right?",
                    "label": 0
                },
                {
                    "sent": "So it was important to get people educated in.",
                    "label": 0
                },
                {
                    "sent": "In your computer, and that's what they did in the 50s and then sold computers in the 60s and 70s so one could service that.",
                    "label": 0
                },
                {
                    "sent": "This is kind of a repeat performance here.",
                    "label": 0
                },
                {
                    "sent": "Educating people in using this complex architecture with a lot of handwork in the programming using local memory, organizing parallel processing and then coming out with the architecture which has really very high performance at a very low cost.",
                    "label": 0
                },
                {
                    "sent": "So that.",
                    "label": 0
                },
                {
                    "sent": "Could be serviced.",
                    "label": 0
                },
                {
                    "sent": "Could be one of the market strategies.",
                    "label": 0
                }
            ]
        },
        "clip_34": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "IBM, however, there's also a very severe problem which I would like to point out and severity of your problem is this one.",
                    "label": 0
                },
                {
                    "sent": "That is the electrical power generated by this chip the heat generated.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "It can be operated at 4 giga Hertz by using 1.1 Volt operating voltage.",
                    "label": 0
                },
                {
                    "sent": "It can also be operated at 5.6 giga Hertz with 1.4 Volt operating voltage.",
                    "label": 0
                },
                {
                    "sent": "However, you have to cool away 80 Watt 100.",
                    "label": 0
                },
                {
                    "sent": "What out of this trip?",
                    "label": 0
                },
                {
                    "sent": "Now that creates a slight problem because you have this little chip here, you have to remove the energy the heat you need something to do that.",
                    "label": 0
                },
                {
                    "sent": "So either you need a big heat sink and blow air through it, or you need a somewhat smaller heat sink and move some fluid through it.",
                    "label": 0
                },
                {
                    "sent": "But you need a lot of space to take away the heat.",
                    "label": 0
                },
                {
                    "sent": "When you need so much space to take away the heat, you can't pick these chips very densely, so we have one here and one here and one here and one here.",
                    "label": 0
                },
                {
                    "sent": "It's very you.",
                    "label": 0
                },
                {
                    "sent": "Take a used volume.",
                    "label": 0
                },
                {
                    "sent": "If you have a huge volume, interconnect will get very long, and if you want to put together a few thousand of these processes, you get a huge machine which long interconnect which will not be that efficient as a parallel processor.",
                    "label": 0
                },
                {
                    "sent": "So we again my service that we can give up a few of these gigaflops we could get, let's say go to one world or.",
                    "label": 0
                },
                {
                    "sent": ".9 or .8 Volt and reduce this Clock to three giga Hertz or maybe only two giga Hertz.",
                    "label": 0
                },
                {
                    "sent": "And still would get a very nice performance out of this, which reduced the power.",
                    "label": 0
                },
                {
                    "sent": "The power goes with the.",
                    "label": 0
                },
                {
                    "sent": "Total power goes with a very goes with the square at least of the Clock frequency.",
                    "label": 0
                },
                {
                    "sent": "So by lowering the Clock frequency you quickly reduce electrical power, and then one could pick together quite a number of these chips and create a very advanced computer system a couple of years down the road.",
                    "label": 0
                },
                {
                    "sent": "So the next two years we very exciting to see what IBM does.",
                    "label": 0
                },
                {
                    "sent": "Do we continue with the blue gene type of architecture, which also is a low frequency architecture?",
                    "label": 0
                },
                {
                    "sent": "It's only 700 megahertz, right?",
                    "label": 0
                },
                {
                    "sent": "Which enables them to pick together the CPUs very closely, have a fast, efficient communication.",
                    "label": 0
                },
                {
                    "sent": "So if that is the future route IBM will take of an improvement on the cell will be the future out of IBM to take.",
                    "label": 0
                },
                {
                    "sent": "That will be very exciting to see in the next few years and I'm sure we all will see it.",
                    "label": 0
                }
            ]
        },
        "clip_35": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Yeah, let me show you how that relates to other things other people are doing.",
                    "label": 0
                },
                {
                    "sent": "So for example, there is a famous AMD Opteron processor or the Intel 64 bit processor, and there's also the Cray X1 vector processor.",
                    "label": 1
                },
                {
                    "sent": "So please look at this table first.",
                    "label": 0
                },
                {
                    "sent": "So these are various benchmarks.",
                    "label": 0
                },
                {
                    "sent": "These are other demanding.",
                    "label": 0
                },
                {
                    "sent": "Benchmark is a non trivial benchmark.",
                    "label": 0
                },
                {
                    "sent": "It's not Linpack or anything like that, so this is really scientific computation.",
                    "label": 0
                },
                {
                    "sent": "And here we see the speed ratio.",
                    "label": 0
                },
                {
                    "sent": "With respect to Intel or AMD or the Cray machine, now this is all for double precision, of course, because single precision is essentially useless.",
                    "label": 0
                },
                {
                    "sent": "Now we've already seen the double precision is effective 10 low in the cell it's 10 lower than single precision because they didn't put much effort into double position by the player, they didn't want to put in the real estate.",
                    "label": 0
                },
                {
                    "sent": "So even at a rather low efficiency in the cell processor you see that is many times as.",
                    "label": 0
                },
                {
                    "sent": "Fast, many times faster than Intel or AMD processors, and it's even.",
                    "label": 0
                },
                {
                    "sent": "As fast or even two or three times faster than the crazy X1 E, one of the fastest vector machines available at all.",
                    "label": 0
                },
                {
                    "sent": "And if you look at the power efficiency, so if you don't count operations per second but operations per what, then the fact is even bigger 'cause all of these are very hot processors which use even much more power than the cell, right?",
                    "label": 0
                },
                {
                    "sent": "So we have a factor of 40 power efficiency here in two dephts.",
                    "label": 0
                },
                {
                    "sent": "Between Intel and cell.",
                    "label": 0
                },
                {
                    "sent": "That's of course devastating factor.",
                    "label": 0
                },
                {
                    "sent": "Depends, of course how you count, but if you have to finance the computer center and if you have in mind that they make what costs about a mega euro per year, if you need to spend 10 megawatts only one MW year does make a difference.",
                    "label": 0
                },
                {
                    "sent": "And because of the space used by the cooling is cooler machine will be smaller and therefore be more efficient.",
                    "label": 0
                },
                {
                    "sent": "Now let's look at the top table.",
                    "label": 0
                },
                {
                    "sent": "That's a self plus processor.",
                    "label": 0
                },
                {
                    "sent": "That's a simulation of a processor where.",
                    "label": 0
                },
                {
                    "sent": "These people have put in some ideas what IBM might do.",
                    "label": 0
                },
                {
                    "sent": "Essentially it's a cell processor with a more efficient double precision multiplier.",
                    "label": 1
                },
                {
                    "sent": "And then you see that the factor gets blown up again by a factor of three or something like that at least.",
                    "label": 0
                },
                {
                    "sent": "Power efficiency goes up to effect of 100 and computational efficiency is between.",
                    "label": 0
                },
                {
                    "sent": "Well, for Standard process is between 7 and 40 and with respect to the Cray machine.",
                    "label": 0
                },
                {
                    "sent": "Also a very very very bankable factor.",
                    "label": 0
                },
                {
                    "sent": "So I think this is again underlining what I've been saying.",
                    "label": 0
                },
                {
                    "sent": "This is an extremely powerful architecture, a very promising architecture.",
                    "label": 1
                },
                {
                    "sent": "If just a few tiny little things are done on it, it will blow everybody else away out of the market.",
                    "label": 0
                },
                {
                    "sent": "However, some programming complexity is surprised you pay.",
                    "label": 0
                },
                {
                    "sent": "You have to know how to program the guy.",
                    "label": 0
                },
                {
                    "sent": "So that's about what I wanted to to say.",
                    "label": 0
                },
                {
                    "sent": "So vector processing is rather old.",
                    "label": 0
                },
                {
                    "sent": "Technique goes back 30 years by now.",
                    "label": 0
                },
                {
                    "sent": "However, it's also a rather new technology which may become very exciting in the next few years, and I assume we all are going to have some fun with it.",
                    "label": 0
                },
                {
                    "sent": "Thank you.",
                    "label": 0
                },
                {
                    "sent": "Sure.",
                    "label": 0
                },
                {
                    "sent": "Yes.",
                    "label": 0
                },
                {
                    "sent": "Right, it certainly is.",
                    "label": 0
                },
                {
                    "sent": "Yeah, right, definitely definitely, but we must bear in mind that has always been the case.",
                    "label": 0
                },
                {
                    "sent": "Moving from scalar to vector going from a CD 7600 to a crazy one was a step back.",
                    "label": 0
                },
                {
                    "sent": "People had to vectorize their codes.",
                    "label": 0
                },
                {
                    "sent": "It was one of the major drawbacks of the Cray one.",
                    "label": 0
                },
                {
                    "sent": "The vectorizing compiler was invented.",
                    "label": 0
                },
                {
                    "sent": "Of course, there's also vectorizing compiler for this trip, no doubt about it, but the question is what kind of efficiency of efficiency do you get and what you need in mind.",
                    "label": 0
                },
                {
                    "sent": "I mean, maybe you don't really need a factor of 6, maybe a factor of 2 compared to an.",
                    "label": 0
                },
                {
                    "sent": "Intel is already fine for you, and then of course the vectorizing compiler may be totally adequate.",
                    "label": 0
                },
                {
                    "sent": "What I'm talking about is really the case where you want to ring the maximum you can get out of the trip, right?",
                    "label": 0
                },
                {
                    "sent": "So if you're on the very frontier of scientific computation?",
                    "label": 0
                },
                {
                    "sent": "If the competitive advantage you want to generate to your colleague at another national lab is that you are able to do twice as many computations, that's the kind of thing you do.",
                    "label": 0
                },
                {
                    "sent": "So it depends on on how much you want to push it to its limit.",
                    "label": 0
                },
                {
                    "sent": "So there is of course a lot of work in the compiler vectorizing compiler also in parallel programming aids.",
                    "label": 0
                },
                {
                    "sent": "Again, the step from scalar computation to massively parallel also is a drawback for the programmer to programmer has to use a parallel programming libraries.",
                    "label": 0
                },
                {
                    "sent": "Here's to organize the data traffic between these parallel threads.",
                    "label": 0
                },
                {
                    "sent": "It's all extra work for the programmer.",
                    "label": 0
                },
                {
                    "sent": "And that's by the way, the reason why massively parallel processing only was successful in the second half.",
                    "label": 0
                },
                {
                    "sent": "Or let's say somewhere in the 90s.",
                    "label": 0
                },
                {
                    "sent": "Parallel processing was available in the 80s.",
                    "label": 0
                },
                {
                    "sent": "People didn't use it, it was too complex.",
                    "label": 0
                },
                {
                    "sent": "They it was too much work.",
                    "label": 0
                },
                {
                    "sent": "They thought they could get away with simpler means, but then it was not possible.",
                    "label": 0
                },
                {
                    "sent": "So eventually it was accepted that you have to work on your code and have to put in effort to make it explicitly parallel.",
                    "label": 0
                },
                {
                    "sent": "And once that.",
                    "label": 0
                },
                {
                    "sent": "Was accepted in the scientific community.",
                    "label": 0
                },
                {
                    "sent": "Then the creative 3-D2 three could solve the scientific problems, and I think we were going to have the same.",
                    "label": 0
                },
                {
                    "sent": "Either a.",
                    "label": 0
                },
                {
                    "sent": "You pay a lot of money for less powerful system, which is maybe more convenient, but you just have a lot of waste.",
                    "label": 0
                },
                {
                    "sent": "Or maybe you don't really need the very peak of the performance, or you are prepared to put in that effort to do this kind of programming.",
                    "label": 0
                },
                {
                    "sent": "But of course IBM is totally aware of that, and that is, I think the basic reason for the University program that you can get access to this kind of equipment very easily so that people get educated in it.",
                    "label": 0
                },
                {
                    "sent": "And then the way they have their degree and get a job someplace they don't find it frightening anymore to do this kind of work.",
                    "label": 0
                },
                {
                    "sent": "So it's a very clever strategy.",
                    "label": 0
                },
                {
                    "sent": "Have any other questions?",
                    "label": 0
                },
                {
                    "sent": "I'm happy to answer any questions whatsoever.",
                    "label": 0
                },
                {
                    "sent": "Can you tell us something about those?",
                    "label": 0
                },
                {
                    "sent": "Yeah, so the last two are pretty obvious, I think right?",
                    "label": 0
                },
                {
                    "sent": "One dimensional and two dimensional fast Fourier transforms.",
                    "label": 0
                },
                {
                    "sent": "This is a sparse mic to make the matrix vector multiply, so that is rather complex operation because in sparse matrices you don't store the full matrix used to adjust the non zero elements, but then you have to have some organizational help.",
                    "label": 0
                },
                {
                    "sent": "I mean you have to store indices or lists must have a means to know where which element belongs.",
                    "label": 0
                },
                {
                    "sent": "So this is in fact very difficult to vectorize.",
                    "label": 0
                },
                {
                    "sent": "So there of course algorithms known which do the best possible compromise, and these algorithms of course have been used in this particular case.",
                    "label": 0
                },
                {
                    "sent": "Now this is a stencil computation stencil computation, I believe, is that you select specific areas.",
                    "label": 0
                },
                {
                    "sent": "In a neighborhood of a saddle to compute the next time step for the central cell.",
                    "label": 0
                },
                {
                    "sent": "So this would be typically fluid dynamics codes things like that and I fear I must confess I forgotten was chemists.",
                    "label": 0
                },
                {
                    "sent": "But the sparse matrix vector multiply is very demanding for this architecture.",
                    "label": 0
                },
                {
                    "sent": "On the other hand, the huge data bandwidth helps you a lot here.",
                    "label": 0
                },
                {
                    "sent": "And what you also find in many of these algorithms is also many other cases.",
                    "label": 0
                }
            ]
        },
        "clip_36": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So the idea of using a cash to organize your data traffic in many cases a very, very bad idea using a local memory where you use essentially double buffering by explicitly programming to get the next data set for main memory while you work on the previous data set like you would use it on a disk drive, right?",
                    "label": 0
                },
                {
                    "sent": "You use double buffering, you work on some data set at the same time, you move out the result of the previous data set and move in the result for the next data set.",
                    "label": 0
                },
                {
                    "sent": "This kind of large scale pipelining.",
                    "label": 0
                },
                {
                    "sent": "That is what is supposed to be used here.",
                    "label": 0
                },
                {
                    "sent": "No compiler can take away their tasks from you.",
                    "label": 0
                },
                {
                    "sent": "You have to organize your own data traffic only you know which data block is used for the next computation, and that is absolutely of paramount importance here in order to use your small, expensive local storage efficiently.",
                    "label": 0
                },
                {
                    "sent": "To get this data traffic organized.",
                    "label": 0
                },
                {
                    "sent": "That is really the key to the success of this architecture.",
                    "label": 0
                },
                {
                    "sent": "And that is.",
                    "label": 0
                }
            ]
        },
        "clip_37": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Was that helps with the.",
                    "label": 0
                },
                {
                    "sent": "For example, with the sparse matrix, multiply that you organize this data traffic more efficiently.",
                    "label": 0
                },
                {
                    "sent": "It's going to be memory bound application, not the compute bound application.",
                    "label": 0
                },
                {
                    "sent": "Any other questions?",
                    "label": 0
                },
                {
                    "sent": "Luckily for European players in super computers, I know some research was done in Germany, message right?",
                    "label": 0
                },
                {
                    "sent": "Research and CERN we do, right, yeah?",
                    "label": 0
                },
                {
                    "sent": "Japanese right?",
                    "label": 0
                },
                {
                    "sent": "Yeah, well that's I think is rather straightforward.",
                    "label": 0
                },
                {
                    "sent": "The point is that the major funding for all these decades has come from the American military establishment, the Big National Laboratory, United States.",
                    "label": 0
                },
                {
                    "sent": "Those were the driving forces of the National Security Agency.",
                    "label": 0
                },
                {
                    "sent": "The driving forces behind the high performance computer development.",
                    "label": 0
                },
                {
                    "sent": "Not in Japan.",
                    "label": 0
                },
                {
                    "sent": "Not in Japan, right?",
                    "label": 0
                },
                {
                    "sent": "Japan is an exception I must agree.",
                    "label": 0
                },
                {
                    "sent": "And to be Frank, I really don't know why the Japanese do that.",
                    "label": 0
                },
                {
                    "sent": "I don't think they can make that much money money with it.",
                    "label": 0
                },
                {
                    "sent": "I think it must be more kind of a kind of a flagship type of approach.",
                    "label": 0
                },
                {
                    "sent": "I don't think that the Japanese supercomputer product lines viewed by themselves would be profitable product lines.",
                    "label": 0
                },
                {
                    "sent": "They do sell a number of smaller machines and you see, for example is known to have a customer base of around 600 customers.",
                    "label": 0
                },
                {
                    "sent": "But most of these are just small single cabinet single Two 4 processor machines.",
                    "label": 0
                },
                {
                    "sent": "But this is a very expensive technology.",
                    "label": 0
                },
                {
                    "sent": "Very hot technology so.",
                    "label": 0
                },
                {
                    "sent": "It's for the Japanese.",
                    "label": 0
                },
                {
                    "sent": "It's quite an achievement.",
                    "label": 0
                },
                {
                    "sent": "I'm completely agree it's.",
                    "label": 0
                },
                {
                    "sent": "They really put some effort into that.",
                    "label": 0
                },
                {
                    "sent": "It may be a matter of national pride or something like that.",
                    "label": 0
                },
                {
                    "sent": "I don't think that in Germany people would be willing to pay money for national pride, so that may be one of the differences.",
                    "label": 0
                },
                {
                    "sent": "Any other questions?",
                    "label": 0
                },
                {
                    "sent": "Thank you again.",
                    "label": 0
                },
                {
                    "sent": "Thank you.",
                    "label": 0
                }
            ]
        }
    }
}