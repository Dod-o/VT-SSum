{
    "id": "n7h473m2t67lggy7y52xs5sddj5h4sc3",
    "title": "Learning Quantum Circuits with Queries",
    "info": {
        "author": [
            "Jeremy Kun, Department of Mathematics, Statistics and Computer Science, University of Illinois at Chicago"
        ],
        "published": "Aug. 20, 2015",
        "recorded": "July 2015",
        "category": [
            "Top->Computer Science->Machine Learning->Active Learning",
            "Top->Computer Science->Machine Learning->Computational Learning Theory",
            "Top->Computer Science->Machine Learning->On-line Learning",
            "Top->Computer Science->Machine Learning->Reinforcement Learning",
            "Top->Computer Science->Machine Learning->Semi-supervised Learning"
        ]
    },
    "url": "http://videolectures.net/colt2015_kun_quantum_circuits/",
    "segmentation": [
        [
            "Great, so this is joint work with my advisor left."
        ],
        [
            "So there's this model called learning circuits with value injection queries that was.",
            "So let me just explain the model really quickly so you have a circuit that is a Boolean circuit that is completely unknown.",
            "Every you don't know which wires are connecting which gates.",
            "All you really know is how many gates there are an the inputs are also sort of black box as gates and you don't know which gates are.",
            "The inputs are not and so your only interaction with this circuit is to fix some of the output wires to constant values and then you see the output.",
            "Of the circuit and you want to learn what the circuit is up to.",
            "This notion, called behavioral equivalence, where the circuit that you propose has to behave identically to the unknown circuit on all possible queries.",
            "So this means in addition to learning the circuit up to all possible inputs, you need to learn which input was hardwired to begin with.",
            "So this is let me just give up."
        ],
        [
            "Little bit of history, right?",
            "So this was popularized by Anglo in about 10 years ago, where she did the 1st paper on learning circuits without injection queries, and since then there's been a lot of work on different kinds of circuits, so probabilistic circuits, large alphabet circuits, and other related models.",
            "So that was great and so."
        ],
        [
            "An area that has been completely untouched by this is learning quantum circuits, so this is sort of the open problem.",
            "I want to propose and let me just give a 30 second slide discussing what quantum computing is.",
            "In case you've never seen a quantum circuit before."
        ],
        [
            "So in quantum computing, the analog of a bit is a Cuban.",
            "This is a unit vector in C2 and then the state of your circuit is going to be a unit vector in the end fold tensor product of C2.",
            "So this is what makes quantum computing a little bit weird is because you can have states which are not pure tensors which are also called entangled.",
            "Great, so the gates are going to be 8 by 8 unitary matrices and their 8 by 8 because this is like acting on three qubits.",
            "This is known to be universal.",
            "To do all quantum computing.",
            "And then if you have a list of gates, then you just apply them one after another to your state from the start and then you get to some final state and then you measure that state and you get some output so that returns some index I of your.",
            "Space and then then it collapses the vector 2, right?",
            "So it returns it proportionally to the size of the entry squared.",
            "OK, so this is an example of a quantum circuit you can.",
            "Right, so the point is that these gates are sort of still local, and there's a notion of wires and you can draw these nice diagrams.",
            "OK, great so."
        ],
        [
            "There are some issues adapting the classical model to the quantum model, and so this is what we just.",
            "We propose a model in the paper and we say some stuff about it.",
            "The issue is that value injections can kill entangled states.",
            "So what I mean by that is you can have a state in which if you change one of the values on the wires via value injection, it could collapse all of the bits in the entire circuit and then you will not.",
            "So the point is that we want our value injections to be like local manipulations of the state of the circuit.",
            "But if this all of the states are entangled with each other, than just tinkering with one can kill all the state, and so this is a problem.",
            "So I guess the most important part of this is that we describe how you can inject a value without tinkering with or without potentially destroying the entangled state.",
            "And what you do is when you want to inject value, you add a new scratch, work cubit and then you swap this out with the other qubits.",
            "So you just transpose the two indices.",
            "Then that maintains the latent entanglement with all of the rest of the qubits, without ruining your first, without without destroying the state of the entangled state.",
            "OK."
        ],
        [
            "So in this model, we analyzed a different kind of query called the function injection query.",
            "I'm not going to tell you what that is because the point is that after a few tricks that we show in the paper, a brute force analysis will allow you to get a polynomial time learning algorithm.",
            "But for value injection queries, which I just described, it turns out that all of the existing techniques in literature fail to essentially give you any upper bounds, and any lower bounds as well in this model.",
            "So the open problem is.",
            "Using value injection queries for quantum circuits give me the give me the query complexity of learning the circuit up to behavioral equivalence."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Great, so this is joint work with my advisor left.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So there's this model called learning circuits with value injection queries that was.",
                    "label": 1
                },
                {
                    "sent": "So let me just explain the model really quickly so you have a circuit that is a Boolean circuit that is completely unknown.",
                    "label": 0
                },
                {
                    "sent": "Every you don't know which wires are connecting which gates.",
                    "label": 0
                },
                {
                    "sent": "All you really know is how many gates there are an the inputs are also sort of black box as gates and you don't know which gates are.",
                    "label": 0
                },
                {
                    "sent": "The inputs are not and so your only interaction with this circuit is to fix some of the output wires to constant values and then you see the output.",
                    "label": 0
                },
                {
                    "sent": "Of the circuit and you want to learn what the circuit is up to.",
                    "label": 0
                },
                {
                    "sent": "This notion, called behavioral equivalence, where the circuit that you propose has to behave identically to the unknown circuit on all possible queries.",
                    "label": 1
                },
                {
                    "sent": "So this means in addition to learning the circuit up to all possible inputs, you need to learn which input was hardwired to begin with.",
                    "label": 0
                },
                {
                    "sent": "So this is let me just give up.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Little bit of history, right?",
                    "label": 0
                },
                {
                    "sent": "So this was popularized by Anglo in about 10 years ago, where she did the 1st paper on learning circuits without injection queries, and since then there's been a lot of work on different kinds of circuits, so probabilistic circuits, large alphabet circuits, and other related models.",
                    "label": 1
                },
                {
                    "sent": "So that was great and so.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "An area that has been completely untouched by this is learning quantum circuits, so this is sort of the open problem.",
                    "label": 1
                },
                {
                    "sent": "I want to propose and let me just give a 30 second slide discussing what quantum computing is.",
                    "label": 0
                },
                {
                    "sent": "In case you've never seen a quantum circuit before.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So in quantum computing, the analog of a bit is a Cuban.",
                    "label": 0
                },
                {
                    "sent": "This is a unit vector in C2 and then the state of your circuit is going to be a unit vector in the end fold tensor product of C2.",
                    "label": 1
                },
                {
                    "sent": "So this is what makes quantum computing a little bit weird is because you can have states which are not pure tensors which are also called entangled.",
                    "label": 1
                },
                {
                    "sent": "Great, so the gates are going to be 8 by 8 unitary matrices and their 8 by 8 because this is like acting on three qubits.",
                    "label": 0
                },
                {
                    "sent": "This is known to be universal.",
                    "label": 0
                },
                {
                    "sent": "To do all quantum computing.",
                    "label": 0
                },
                {
                    "sent": "And then if you have a list of gates, then you just apply them one after another to your state from the start and then you get to some final state and then you measure that state and you get some output so that returns some index I of your.",
                    "label": 0
                },
                {
                    "sent": "Space and then then it collapses the vector 2, right?",
                    "label": 0
                },
                {
                    "sent": "So it returns it proportionally to the size of the entry squared.",
                    "label": 0
                },
                {
                    "sent": "OK, so this is an example of a quantum circuit you can.",
                    "label": 0
                },
                {
                    "sent": "Right, so the point is that these gates are sort of still local, and there's a notion of wires and you can draw these nice diagrams.",
                    "label": 0
                },
                {
                    "sent": "OK, great so.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "There are some issues adapting the classical model to the quantum model, and so this is what we just.",
                    "label": 1
                },
                {
                    "sent": "We propose a model in the paper and we say some stuff about it.",
                    "label": 0
                },
                {
                    "sent": "The issue is that value injections can kill entangled states.",
                    "label": 1
                },
                {
                    "sent": "So what I mean by that is you can have a state in which if you change one of the values on the wires via value injection, it could collapse all of the bits in the entire circuit and then you will not.",
                    "label": 0
                },
                {
                    "sent": "So the point is that we want our value injections to be like local manipulations of the state of the circuit.",
                    "label": 0
                },
                {
                    "sent": "But if this all of the states are entangled with each other, than just tinkering with one can kill all the state, and so this is a problem.",
                    "label": 0
                },
                {
                    "sent": "So I guess the most important part of this is that we describe how you can inject a value without tinkering with or without potentially destroying the entangled state.",
                    "label": 1
                },
                {
                    "sent": "And what you do is when you want to inject value, you add a new scratch, work cubit and then you swap this out with the other qubits.",
                    "label": 0
                },
                {
                    "sent": "So you just transpose the two indices.",
                    "label": 0
                },
                {
                    "sent": "Then that maintains the latent entanglement with all of the rest of the qubits, without ruining your first, without without destroying the state of the entangled state.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So in this model, we analyzed a different kind of query called the function injection query.",
                    "label": 0
                },
                {
                    "sent": "I'm not going to tell you what that is because the point is that after a few tricks that we show in the paper, a brute force analysis will allow you to get a polynomial time learning algorithm.",
                    "label": 0
                },
                {
                    "sent": "But for value injection queries, which I just described, it turns out that all of the existing techniques in literature fail to essentially give you any upper bounds, and any lower bounds as well in this model.",
                    "label": 0
                },
                {
                    "sent": "So the open problem is.",
                    "label": 0
                },
                {
                    "sent": "Using value injection queries for quantum circuits give me the give me the query complexity of learning the circuit up to behavioral equivalence.",
                    "label": 0
                }
            ]
        }
    }
}