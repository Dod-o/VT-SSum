{
    "id": "65ktbkueq2rrf3jgdnkptx4y44dmrqs2",
    "title": "A Novel Framework for Locating Software Faults Using Latent Divergences",
    "info": {
        "produced by": [
            "Data & Web Mining Lab"
        ],
        "author": [
            "Sarfraz Khurshid, Department of Electrical and Computer Engineering, University of Texas at Austin"
        ],
        "published": "Nov. 30, 2011",
        "recorded": "September 2011",
        "category": [
            "Top->Computer Science->Machine Learning->Pattern Recognition"
        ]
    },
    "url": "http://videolectures.net/ecmlpkdd2011_khurshid_divergences/",
    "segmentation": [
        [
            "So yeah, this is work done by my student shooting across Choudhary one Fortunately couldn't be here and present.",
            "He has a full time job in industry so he could not take off.",
            "So this is basically some work we've been doing on using some basic ideas from machine learning and applying them to solve basic problem in software engineering, specifically in software testing and verification.",
            "And the problem is called for localization and I'll do."
        ],
        [
            "Type that in a few slides, so part of our work is motivated by an effort to reduce the cost of software failures, and I'm sure everybody is familiar.",
            "Sort of areas can be quite expensive, specially in the context of mission critical systems.",
            "There are many well known examples, including the area and five rocket as well as Mars Polar Lander, as well as various other failures that were fairly costly, so I won't go into details of these examples.",
            "But I'd like to point to a study that was done almost 10 years ago by the National Institute of Standards and Technology is in the United States, and they looked at some financial and airline software, an estimated that software failures cost the US economy about 60 billion dollars every year, and the worldwide cost is at least twice as much as that.",
            "And they also estimated that better testing software testing infrastructure could save about 1/3 of that cost, and much of the research that we do focuses on software."
        ],
        [
            "Testing and verification.",
            "Here are some basic concepts that I'd like to clarify before getting into more details.",
            "I'm sure many of you are familiar with these terms.",
            "Software testing looks at the problem of finding bugs in code.",
            "Specifically looks for failures and execution.",
            "It's the most commonly used technique for validating quality of software.",
            "Conceptually, it's a fairly simple technique.",
            "You find some inputs, you run them, and you check the outputs to see whether that is what you expect.",
            "However, in practice, testing itself tends to be quite expensive and labor intensive and time consuming as well as many times it's ineffective.",
            "It fails to find bugs, so that's one of its major problems very closely related to testing is debugging, and often they are used interchangeably, but I'd like to point out the difference here and specifically, this paper focuses on machine learning for automated debugging and debugging.",
            "Specifically, the process starts once you have a failure, so once you know there's a fault.",
            "Then you look for the fault and so locating and removing faults is debugging and debugging is required for removing bugs in code so it doesn't matter whether you found the bug using testing or using another technique, for example, using a static analysis.",
            "Once you know there is a failure, you must do debugging to get rid of it.",
            "Again, conceptually it's fairly simple.",
            "You inspect the failure, you locate the fault or the faulty lines of code, and then you fix them.",
            "By modifying the existing code.",
            "In practice, debugging is fairly tedious and error prone, and as anyone who has written a large scale program finding even when you have these failure traces finding out exactly which statements are responsible for the failure can be quite time consuming, and it can require a lot of manual effort.",
            "And even if the trace involves only a small portion, but the whole code base is quite large, even that small portion could involve a large number of lines of code that you'd have to manually inspect.",
            "And in this paper we look at one way of automating localization of faults given that we have some fail."
        ],
        [
            "Runs so here's an overview of this paper.",
            "The basic problem we address is that we are given labeled as correct or incorrect execution traces, so we have some tests, and we know whether they pass or fail, and we'd like to come up with a mechanism that can assist with automated debugging.",
            "The specific insight we use in this paper is that fault localization, which is a basic problem in software engineering, can be reduced to feature selection, which is a basic concept and machine learning are specific observation is that the problem for localization is really about selecting a set of most relevant statements or with respect to the particular fault we are dealing with in source code and feature selection in machine learning.",
            "In Deeds provides a solution for that problem.",
            "The basic methodology we follow is to model code coverage data as a probabilistic data source and then to use probabilistic divergences which include the KL divergences, the Alpha diversions, the F and Bregman divergences to detect faulty lines of code and the specific.",
            "Where we use these divergences by defining the concept of a latent divergance, which really is a product of divergences based on conditional probabilities.",
            "And I'll show you the exact formulas we use in a few slides later and the notion of product is really inspired by a powerful point theorem which applies with respect to a circle.",
            "But we can also use different combinations of divergences.",
            "We don't have to take a product.",
            "For example, we could take a sum of divergences as well.",
            "And then we have developed a framework that allows a family of measures to be used for for localization based on these divergences and the experimental results that we have so far show that our technique is quite effective and at least as effective effective as the state of the art."
        ],
        [
            "Involve localization.",
            "So here's the outline of the rest of the talk.",
            "I'll next give an example to show some of the basic ideas and concepts, and then I'll describe some details of the framework.",
            "Then I'll present the experimental results, and finally I'll conclude with some related work."
        ],
        [
            "So here's a program we're going to use to illustrate some of the basic notions.",
            "It's a simple C program.",
            "It takes 3 integers as inputs and prints the value of the integer that lies in the middle.",
            "So if you give it 321, it should print too.",
            "So it has this local variable M that initially let's M be the last one Z and then it does some comparisons of the input variables.",
            "So for example, it's compares the second number with the third number, then the first with the 2nd and depending on if both the checks succeed, then it knows that.",
            "Why is the middle ones headsets tend to be why otherwise, if this condition succeeds, then we know that why was less than ZX was not less than Y, so I was also less equals X.",
            "So we compare X&Z.",
            "So in this case if this comparison passes then M the middle number should be X.",
            "However, erroneously the programmer assigned M to be Y.",
            "So Line 7 has a fault and.",
            "In the comments we have the correct version that should have been there, so here's a very simple program.",
            "It has a faulty line of code and we can have various tests for this program.",
            "It takes 3 numbers so you can have a large number of tests.",
            "Here are six tests and for each test we execute the test and then we record the trace of the test.",
            "Specifically this statement coverage obtained by executing the test, and that's indicated by the DOT on an appropriate line.",
            "And that tells us, for example, that the test where we have excess three wires, three NZ's five, we cover the following statements in this program and here in green we have whether it has passes or in red we have weather test fails.",
            "So that's the setup.",
            "We have some programs, we have some tests for each of the test we have a label whether the test passes or fails and we can run each test to obtain this coverage information.",
            "So now the problem that we want to solve is we would like an automated way.",
            "Of identifying that line 7 is the faulty statement."
        ],
        [
            "So here is an illustration of how latent divergences allow us to do that so.",
            "Here are some graphs that show, for example, if you only take tests T1 and T6.",
            "In that case we have no information cause both the test, the first one and the last one have the exact same coverage information in modern 1 passes and one fails.",
            "So you really can't reduce anything.",
            "However, as you add more tests and we look at the final result where we have all the tests in the picture.",
            "Now the graph looks and this is based on the KL latent diversions, and these numbers are.",
            "For our formula, which takes a product which I'll show later, and in this case we can see that line 7 is being identified as highly likely to contain the fault and the other lines have much less values of suspiciousness."
        ],
        [
            "And here is a comparison of.",
            "Our technique, based on a latent divergences in specifically using several different probabilistic divergences as the base and compared with two standard well known techniques for for localization, one is the tarantula and the other is the UK metric.",
            "And what we see over here is that, for example, if you look at the KL.",
            "The faulty line of code has a relatively high suspiciousness value compared to the other lines of code, and similarly the torrential anokye also correctly identifies seven as the most likely to be suspicious.",
            "However, in these cases, there are some other statements which have relatively high value of suspicious as well, so we'd like to have this difference between default line of code and the other ones be as big as possible so that the programmer has to inspect as few lines as possible, because that.",
            "Requires manual effort in figuring out where the problem is."
        ],
        [
            "So now in the framework, some of the basis.",
            "The notion of probabilistic divergance Meyers distance between two probability mass functions, and there are several well known formulas for that.",
            "Here are some that we use the KL Alpha, F and Bregman using the data say to distance."
        ],
        [
            "And here is how we define a latent divergance.",
            "So we have some probability mass functions.",
            "For example, we have some failure probabilities, the probability of test passing or failing, and then we have.",
            "The joint probability distribution of covering a certain line so XL equals X mean represents the location L or the line L being covered or not covered.",
            "So each of X&R are taking value zero and one.",
            "So we have two Bernoulli random variables and the joint probability distribution is for PSR for covering line X and for the test passing or failing and then we have these conditional probability distributions which we're going to use to define latent divergance and.",
            "The first conditional we have is.",
            "Conditional on covering a certain location and the probability of test passing or failing and the other is not covering a certain location and the probability of test passing or failing and the latent divergences now simply defined as a product of divergences, the divergences of probability of covering a location.",
            "Conditional uncovering a location, it's divergance with base, which is the PR probability of test passing or failing and the product with this other.",
            "Conditional probability, which is conditional on not covering allocation.",
            "So this product gives us metric for latent."
        ],
        [
            "Divergance and."
        ],
        [
            "We observe that latent divergences."
        ],
        [
            "Convex.",
            "Next we define a family of latent divergences by applying a convex function to latent divergance.",
            "So, for example, we can take F = X and when you apply that, that's just the identity function in another function is an example, is X -- 1.",
            "In our experiments, we simply use F = X, and we also observed the family of latent divergences."
        ],
        [
            "Deal with is also convex.",
            "So here is our ranking algorithm and I'll skip over some of the details.",
            "They are in the paper and the basic idea is that we compute the latent divergences, we normalize them, and then we use a standard ranking metric to rank the different statements of code according to the results of latent divergences."
        ],
        [
            "We also have a metric for.",
            "Measuring the quality of.",
            "Our technique for localization and the basic intuition behind the metric is that we'd like to compute how well a particular technique ranks relevant and irrelevant lines, and we'd like to rank the irrelevant lines of code lower and rank the relevant lines of code higher, and the specific measure we have is given with this summation over here, and we'd like a low value for this."
        ],
        [
            "Overall.",
            "So next I'll describe some of the subject programs that we worked with."
        ],
        [
            "And the results.",
            "So here is a list of subject programs or data set as you might call it specifically these.",
            "This is the Siemens suite or benchmark of small C programs.",
            "They are widely used in software engineering research for specifically for software testing, including for localization.",
            "And here are the names of the programs and a brief description of what they do, and for each of the programs, we have several versions.",
            "One is a base version and the other ones are so called faulty versions, where each faulty version has one faulty line of code.",
            "And here are the sizes of these programs.",
            "So these are all small programs, few 100 lines of code which includes some blank, so the executable lines of code are even less an for each of the.",
            "Programs we have a few thousand test cases, so each of these tests can be run and for each test it's labeled as passing or failing, and we can compute the coverage info."
        ],
        [
            "And for the test.",
            "So here are some of the results that we get and what we're tabulating is.",
            "The percentage of faults that we can find and the amount of code that we need to examine.",
            "So basically, the higher you are over here, the better it is, and so we can look at some existing metrics.",
            "For example OK and Tarantula, and also some other ones like sober and so forth and nearest neighbor.",
            "So the latent divergences based metrics lie over mostly over here at the highest point.",
            "So that means that they require you to examine the least amount of the code to get to cover most of the faults so they do work better than some of the previous metrics."
        ],
        [
            "Here is another.",
            "Slide on results based on metric quality.",
            "This specific formula we solve the summation for quality and over here the closer you are to zero, the better it is and in this case again here is OK. And here's tarantula and these divergent based matrix are lower than that, so they are closer to 0, which indicates that they are performing better than the previous ones."
        ],
        [
            "I'd like to point out some of the closely related work, so this particular line of."
        ],
        [
            "Research is based on so-called program Spectra based techniques which look at the spectrum of the program.",
            "In particular execution trace and then determine what the faulty lines might be.",
            "There are other ways of doing that.",
            "For example, you can look at the memory graph as well as like some program predicate based approaches which are fairly widely used now.",
            "There's also related work on program repair, which is the problem that once you locate what line of code is faulty, then how do you go about correcting the."
        ],
        [
            "And making changes to that.",
            "So here is the last slide, so we have a novel approach for for localization using latent divergance which is based on the notion of probabilistic divergance and the key insight is that we can reduce the problem for localization to the problem of feature selection and the experimental results we have in our preliminary evaluation show that this idea works well.",
            "We believe that machine learning techniques have fairly important role to play in our ability to deploy more reliable code and reduce the cost of software failures.",
            "Specifically, we can envision some of more applications, in particular program repair, as well as runtime checking.",
            "For example, if you observe some traces of the program, can we determine?",
            "Can we learn that there's certain traces are correct as opposed to certain cases or faulty without a priority?",
            "Knowing what the definition of such a correct races?",
            "Also another interesting problem I think is like that of failure clustering.",
            "So if you have many failing test runs and you have a few faults, how do you group those those tests into a small number of clusters so that the developer does not have to look at each of the failure traces and inspect them?",
            "Rather they can pick one from a cluster, inspect them and that will be the representative for the failures.",
            "And I'd be happy to answer any questions or take any comments that you have.",
            "Any questions?",
            "Do you have the feeling that this technique makes maximal use of the available data, or could a human do similar debugging with fewer executions?",
            "Yeah, that's a very good question.",
            "So a human I'm sure like can certainly do a better, especially based on like their experience, and especially if they were the developer of the program.",
            "They can have a lot of information that these techniques just don't have based on the history of development.",
            "For example, what was the most recent change made to the program?",
            "So there are a lot of things that can be done in this technique I believe can also be made better, for example by looking at different versions of the same program that how did this program evolve to get to this point and to take into account that history and at what point was the program working correctly.",
            "And when did it become faulty?",
            "So I think these techniques can definitely be improved as well, but I'm sure like at this point, like the humans can do much better.",
            "Two quick questions.",
            "Could you comment on how you think this would scale to much larger programs?",
            "And Secondly if the fault was the perhaps the absence of a statement rather than the wrong statement.",
            "I'm guessing that this would may be localized to that area.",
            "The right area where something should be.",
            "But maybe you could comment on that?",
            "Yeah, that's the second question is really an excellent question in the first question.",
            "Like so far like we have only applied it to these small programs, and it was fairly efficient.",
            "So we really need to apply to, like you know, much larger programs which have much longer test executions too.",
            "Be able to like.",
            "See like whether there is a bottleneck in the computation that we're doing, but so far we didn't run into that.",
            "But for the second question.",
            "So this is like a well known problem in this entire for localization research at this point, and which is like you know of, the error of omission.",
            "So if this example was an error of so called Commission, where you have a statement that's faulty and there is some replacement that will fix it, but you know if there is some functionality that's missing.",
            "So how do you identify that and that at this point is a much harder problem to solve, and certainly we have not tried to solve that with this technique and the other related work also sort of like focuses on these.",
            "Errors of Commission where there is a faulty statement rather than there is just missing functionality that's just not there, because in that case, like you know, you might just point to, like, you know, the end of the method that you know.",
            "This method ended, but it should not have ended.",
            "So that's like a tough one to say.",
            "So I have a question that's related as well.",
            "So what happens if their rates associated with defaults?",
            "Obviously software is supposed to work with respects right given the specs itself, it should perform exactly the way that it was supposed to be written and developed.",
            "What happens if you have ranking or categories or important in terms of yeah, so that's another excellent question.",
            "So we're right now looking at like introducing this notion of specs in this whole domain and not just like using a machine learning but also for localization in general with space in the presence of specifications, because one Canonical example we have is that you can have a program that has a statement that gets.",
            "Always executed, but that statement is faulty, but on some executions just by virtue of what input you run the program on that statement produces the correct answer, and on the others the same statement creates the program to get into a failure.",
            "So now the statement is always executed, so it's very hard to identify it's executed in passing runs as well as failing runs, and this is just one statement, so this is 1 extreme example that we use with specifications can for example help us and we can identify for example.",
            "If the specification consists of multiple properties that need to be satisfied, which particular property is failing, and whether that property is actually related to this operation on this statement.",
            "So we are looking at bringing like some notion of specifications or some notion of like what's statements might be more likely to be faulty.",
            "So if you have some kind of priority information to prioritize for localization towards those statements so, but we've only started recently started to look at some of those ideas.",
            "Any other questions?",
            "Yeah, very interesting talk.",
            "One thing that might be even more dectective things that go wrong due to concurrency and multithreading programs.",
            "Do you have any feelings?",
            "Yes, that's an excellent question.",
            "So the program will solve is like just a small sequential program and not just that it was small.",
            "It was also sequential.",
            "So if you'll bring it like in multithreaded programs even there might be small like the dining philosophers problem, but you know to detect, like, oh, there's a deadlock.",
            "And what's the faulty line of code in there can be a much harder problem, but yes, I mean the most immediate approach that I take in that case is to do this whole thing in the context of a model checker, so model checkers can control thread scheduling, and they can exhaustively try different thread schedules for you.",
            "And in that case that would be sore.",
            "So, for example, providing you more tests because that way you'll be exhaustively trying all possible up to some bound ways of scheduling the threads, and then that will be the suite of executions over which you would be doing the for localization.",
            "Yeah.",
            "I had a question.",
            "OK, thanks again, thank you."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So yeah, this is work done by my student shooting across Choudhary one Fortunately couldn't be here and present.",
                    "label": 0
                },
                {
                    "sent": "He has a full time job in industry so he could not take off.",
                    "label": 0
                },
                {
                    "sent": "So this is basically some work we've been doing on using some basic ideas from machine learning and applying them to solve basic problem in software engineering, specifically in software testing and verification.",
                    "label": 0
                },
                {
                    "sent": "And the problem is called for localization and I'll do.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Type that in a few slides, so part of our work is motivated by an effort to reduce the cost of software failures, and I'm sure everybody is familiar.",
                    "label": 0
                },
                {
                    "sent": "Sort of areas can be quite expensive, specially in the context of mission critical systems.",
                    "label": 0
                },
                {
                    "sent": "There are many well known examples, including the area and five rocket as well as Mars Polar Lander, as well as various other failures that were fairly costly, so I won't go into details of these examples.",
                    "label": 0
                },
                {
                    "sent": "But I'd like to point to a study that was done almost 10 years ago by the National Institute of Standards and Technology is in the United States, and they looked at some financial and airline software, an estimated that software failures cost the US economy about 60 billion dollars every year, and the worldwide cost is at least twice as much as that.",
                    "label": 1
                },
                {
                    "sent": "And they also estimated that better testing software testing infrastructure could save about 1/3 of that cost, and much of the research that we do focuses on software.",
                    "label": 1
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Testing and verification.",
                    "label": 0
                },
                {
                    "sent": "Here are some basic concepts that I'd like to clarify before getting into more details.",
                    "label": 0
                },
                {
                    "sent": "I'm sure many of you are familiar with these terms.",
                    "label": 0
                },
                {
                    "sent": "Software testing looks at the problem of finding bugs in code.",
                    "label": 0
                },
                {
                    "sent": "Specifically looks for failures and execution.",
                    "label": 0
                },
                {
                    "sent": "It's the most commonly used technique for validating quality of software.",
                    "label": 1
                },
                {
                    "sent": "Conceptually, it's a fairly simple technique.",
                    "label": 0
                },
                {
                    "sent": "You find some inputs, you run them, and you check the outputs to see whether that is what you expect.",
                    "label": 0
                },
                {
                    "sent": "However, in practice, testing itself tends to be quite expensive and labor intensive and time consuming as well as many times it's ineffective.",
                    "label": 0
                },
                {
                    "sent": "It fails to find bugs, so that's one of its major problems very closely related to testing is debugging, and often they are used interchangeably, but I'd like to point out the difference here and specifically, this paper focuses on machine learning for automated debugging and debugging.",
                    "label": 0
                },
                {
                    "sent": "Specifically, the process starts once you have a failure, so once you know there's a fault.",
                    "label": 0
                },
                {
                    "sent": "Then you look for the fault and so locating and removing faults is debugging and debugging is required for removing bugs in code so it doesn't matter whether you found the bug using testing or using another technique, for example, using a static analysis.",
                    "label": 1
                },
                {
                    "sent": "Once you know there is a failure, you must do debugging to get rid of it.",
                    "label": 0
                },
                {
                    "sent": "Again, conceptually it's fairly simple.",
                    "label": 0
                },
                {
                    "sent": "You inspect the failure, you locate the fault or the faulty lines of code, and then you fix them.",
                    "label": 0
                },
                {
                    "sent": "By modifying the existing code.",
                    "label": 1
                },
                {
                    "sent": "In practice, debugging is fairly tedious and error prone, and as anyone who has written a large scale program finding even when you have these failure traces finding out exactly which statements are responsible for the failure can be quite time consuming, and it can require a lot of manual effort.",
                    "label": 0
                },
                {
                    "sent": "And even if the trace involves only a small portion, but the whole code base is quite large, even that small portion could involve a large number of lines of code that you'd have to manually inspect.",
                    "label": 0
                },
                {
                    "sent": "And in this paper we look at one way of automating localization of faults given that we have some fail.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Runs so here's an overview of this paper.",
                    "label": 0
                },
                {
                    "sent": "The basic problem we address is that we are given labeled as correct or incorrect execution traces, so we have some tests, and we know whether they pass or fail, and we'd like to come up with a mechanism that can assist with automated debugging.",
                    "label": 0
                },
                {
                    "sent": "The specific insight we use in this paper is that fault localization, which is a basic problem in software engineering, can be reduced to feature selection, which is a basic concept and machine learning are specific observation is that the problem for localization is really about selecting a set of most relevant statements or with respect to the particular fault we are dealing with in source code and feature selection in machine learning.",
                    "label": 1
                },
                {
                    "sent": "In Deeds provides a solution for that problem.",
                    "label": 1
                },
                {
                    "sent": "The basic methodology we follow is to model code coverage data as a probabilistic data source and then to use probabilistic divergences which include the KL divergences, the Alpha diversions, the F and Bregman divergences to detect faulty lines of code and the specific.",
                    "label": 1
                },
                {
                    "sent": "Where we use these divergences by defining the concept of a latent divergance, which really is a product of divergences based on conditional probabilities.",
                    "label": 0
                },
                {
                    "sent": "And I'll show you the exact formulas we use in a few slides later and the notion of product is really inspired by a powerful point theorem which applies with respect to a circle.",
                    "label": 0
                },
                {
                    "sent": "But we can also use different combinations of divergences.",
                    "label": 0
                },
                {
                    "sent": "We don't have to take a product.",
                    "label": 0
                },
                {
                    "sent": "For example, we could take a sum of divergences as well.",
                    "label": 0
                },
                {
                    "sent": "And then we have developed a framework that allows a family of measures to be used for for localization based on these divergences and the experimental results that we have so far show that our technique is quite effective and at least as effective effective as the state of the art.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Involve localization.",
                    "label": 0
                },
                {
                    "sent": "So here's the outline of the rest of the talk.",
                    "label": 0
                },
                {
                    "sent": "I'll next give an example to show some of the basic ideas and concepts, and then I'll describe some details of the framework.",
                    "label": 0
                },
                {
                    "sent": "Then I'll present the experimental results, and finally I'll conclude with some related work.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So here's a program we're going to use to illustrate some of the basic notions.",
                    "label": 0
                },
                {
                    "sent": "It's a simple C program.",
                    "label": 0
                },
                {
                    "sent": "It takes 3 integers as inputs and prints the value of the integer that lies in the middle.",
                    "label": 0
                },
                {
                    "sent": "So if you give it 321, it should print too.",
                    "label": 0
                },
                {
                    "sent": "So it has this local variable M that initially let's M be the last one Z and then it does some comparisons of the input variables.",
                    "label": 0
                },
                {
                    "sent": "So for example, it's compares the second number with the third number, then the first with the 2nd and depending on if both the checks succeed, then it knows that.",
                    "label": 0
                },
                {
                    "sent": "Why is the middle ones headsets tend to be why otherwise, if this condition succeeds, then we know that why was less than ZX was not less than Y, so I was also less equals X.",
                    "label": 0
                },
                {
                    "sent": "So we compare X&Z.",
                    "label": 0
                },
                {
                    "sent": "So in this case if this comparison passes then M the middle number should be X.",
                    "label": 0
                },
                {
                    "sent": "However, erroneously the programmer assigned M to be Y.",
                    "label": 0
                },
                {
                    "sent": "So Line 7 has a fault and.",
                    "label": 0
                },
                {
                    "sent": "In the comments we have the correct version that should have been there, so here's a very simple program.",
                    "label": 0
                },
                {
                    "sent": "It has a faulty line of code and we can have various tests for this program.",
                    "label": 0
                },
                {
                    "sent": "It takes 3 numbers so you can have a large number of tests.",
                    "label": 0
                },
                {
                    "sent": "Here are six tests and for each test we execute the test and then we record the trace of the test.",
                    "label": 0
                },
                {
                    "sent": "Specifically this statement coverage obtained by executing the test, and that's indicated by the DOT on an appropriate line.",
                    "label": 0
                },
                {
                    "sent": "And that tells us, for example, that the test where we have excess three wires, three NZ's five, we cover the following statements in this program and here in green we have whether it has passes or in red we have weather test fails.",
                    "label": 0
                },
                {
                    "sent": "So that's the setup.",
                    "label": 0
                },
                {
                    "sent": "We have some programs, we have some tests for each of the test we have a label whether the test passes or fails and we can run each test to obtain this coverage information.",
                    "label": 0
                },
                {
                    "sent": "So now the problem that we want to solve is we would like an automated way.",
                    "label": 0
                },
                {
                    "sent": "Of identifying that line 7 is the faulty statement.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So here is an illustration of how latent divergences allow us to do that so.",
                    "label": 1
                },
                {
                    "sent": "Here are some graphs that show, for example, if you only take tests T1 and T6.",
                    "label": 0
                },
                {
                    "sent": "In that case we have no information cause both the test, the first one and the last one have the exact same coverage information in modern 1 passes and one fails.",
                    "label": 0
                },
                {
                    "sent": "So you really can't reduce anything.",
                    "label": 0
                },
                {
                    "sent": "However, as you add more tests and we look at the final result where we have all the tests in the picture.",
                    "label": 0
                },
                {
                    "sent": "Now the graph looks and this is based on the KL latent diversions, and these numbers are.",
                    "label": 0
                },
                {
                    "sent": "For our formula, which takes a product which I'll show later, and in this case we can see that line 7 is being identified as highly likely to contain the fault and the other lines have much less values of suspiciousness.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And here is a comparison of.",
                    "label": 0
                },
                {
                    "sent": "Our technique, based on a latent divergences in specifically using several different probabilistic divergences as the base and compared with two standard well known techniques for for localization, one is the tarantula and the other is the UK metric.",
                    "label": 0
                },
                {
                    "sent": "And what we see over here is that, for example, if you look at the KL.",
                    "label": 0
                },
                {
                    "sent": "The faulty line of code has a relatively high suspiciousness value compared to the other lines of code, and similarly the torrential anokye also correctly identifies seven as the most likely to be suspicious.",
                    "label": 0
                },
                {
                    "sent": "However, in these cases, there are some other statements which have relatively high value of suspicious as well, so we'd like to have this difference between default line of code and the other ones be as big as possible so that the programmer has to inspect as few lines as possible, because that.",
                    "label": 0
                },
                {
                    "sent": "Requires manual effort in figuring out where the problem is.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So now in the framework, some of the basis.",
                    "label": 0
                },
                {
                    "sent": "The notion of probabilistic divergance Meyers distance between two probability mass functions, and there are several well known formulas for that.",
                    "label": 0
                },
                {
                    "sent": "Here are some that we use the KL Alpha, F and Bregman using the data say to distance.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And here is how we define a latent divergance.",
                    "label": 0
                },
                {
                    "sent": "So we have some probability mass functions.",
                    "label": 0
                },
                {
                    "sent": "For example, we have some failure probabilities, the probability of test passing or failing, and then we have.",
                    "label": 0
                },
                {
                    "sent": "The joint probability distribution of covering a certain line so XL equals X mean represents the location L or the line L being covered or not covered.",
                    "label": 0
                },
                {
                    "sent": "So each of X&R are taking value zero and one.",
                    "label": 0
                },
                {
                    "sent": "So we have two Bernoulli random variables and the joint probability distribution is for PSR for covering line X and for the test passing or failing and then we have these conditional probability distributions which we're going to use to define latent divergance and.",
                    "label": 0
                },
                {
                    "sent": "The first conditional we have is.",
                    "label": 0
                },
                {
                    "sent": "Conditional on covering a certain location and the probability of test passing or failing and the other is not covering a certain location and the probability of test passing or failing and the latent divergences now simply defined as a product of divergences, the divergences of probability of covering a location.",
                    "label": 0
                },
                {
                    "sent": "Conditional uncovering a location, it's divergance with base, which is the PR probability of test passing or failing and the product with this other.",
                    "label": 0
                },
                {
                    "sent": "Conditional probability, which is conditional on not covering allocation.",
                    "label": 0
                },
                {
                    "sent": "So this product gives us metric for latent.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Divergance and.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We observe that latent divergences.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Convex.",
                    "label": 0
                },
                {
                    "sent": "Next we define a family of latent divergences by applying a convex function to latent divergance.",
                    "label": 0
                },
                {
                    "sent": "So, for example, we can take F = X and when you apply that, that's just the identity function in another function is an example, is X -- 1.",
                    "label": 0
                },
                {
                    "sent": "In our experiments, we simply use F = X, and we also observed the family of latent divergences.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Deal with is also convex.",
                    "label": 0
                },
                {
                    "sent": "So here is our ranking algorithm and I'll skip over some of the details.",
                    "label": 0
                },
                {
                    "sent": "They are in the paper and the basic idea is that we compute the latent divergences, we normalize them, and then we use a standard ranking metric to rank the different statements of code according to the results of latent divergences.",
                    "label": 1
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We also have a metric for.",
                    "label": 0
                },
                {
                    "sent": "Measuring the quality of.",
                    "label": 0
                },
                {
                    "sent": "Our technique for localization and the basic intuition behind the metric is that we'd like to compute how well a particular technique ranks relevant and irrelevant lines, and we'd like to rank the irrelevant lines of code lower and rank the relevant lines of code higher, and the specific measure we have is given with this summation over here, and we'd like a low value for this.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Overall.",
                    "label": 0
                },
                {
                    "sent": "So next I'll describe some of the subject programs that we worked with.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And the results.",
                    "label": 0
                },
                {
                    "sent": "So here is a list of subject programs or data set as you might call it specifically these.",
                    "label": 0
                },
                {
                    "sent": "This is the Siemens suite or benchmark of small C programs.",
                    "label": 0
                },
                {
                    "sent": "They are widely used in software engineering research for specifically for software testing, including for localization.",
                    "label": 0
                },
                {
                    "sent": "And here are the names of the programs and a brief description of what they do, and for each of the programs, we have several versions.",
                    "label": 0
                },
                {
                    "sent": "One is a base version and the other ones are so called faulty versions, where each faulty version has one faulty line of code.",
                    "label": 0
                },
                {
                    "sent": "And here are the sizes of these programs.",
                    "label": 0
                },
                {
                    "sent": "So these are all small programs, few 100 lines of code which includes some blank, so the executable lines of code are even less an for each of the.",
                    "label": 0
                },
                {
                    "sent": "Programs we have a few thousand test cases, so each of these tests can be run and for each test it's labeled as passing or failing, and we can compute the coverage info.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And for the test.",
                    "label": 0
                },
                {
                    "sent": "So here are some of the results that we get and what we're tabulating is.",
                    "label": 0
                },
                {
                    "sent": "The percentage of faults that we can find and the amount of code that we need to examine.",
                    "label": 0
                },
                {
                    "sent": "So basically, the higher you are over here, the better it is, and so we can look at some existing metrics.",
                    "label": 0
                },
                {
                    "sent": "For example OK and Tarantula, and also some other ones like sober and so forth and nearest neighbor.",
                    "label": 0
                },
                {
                    "sent": "So the latent divergences based metrics lie over mostly over here at the highest point.",
                    "label": 1
                },
                {
                    "sent": "So that means that they require you to examine the least amount of the code to get to cover most of the faults so they do work better than some of the previous metrics.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Here is another.",
                    "label": 0
                },
                {
                    "sent": "Slide on results based on metric quality.",
                    "label": 0
                },
                {
                    "sent": "This specific formula we solve the summation for quality and over here the closer you are to zero, the better it is and in this case again here is OK. And here's tarantula and these divergent based matrix are lower than that, so they are closer to 0, which indicates that they are performing better than the previous ones.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I'd like to point out some of the closely related work, so this particular line of.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Research is based on so-called program Spectra based techniques which look at the spectrum of the program.",
                    "label": 0
                },
                {
                    "sent": "In particular execution trace and then determine what the faulty lines might be.",
                    "label": 0
                },
                {
                    "sent": "There are other ways of doing that.",
                    "label": 0
                },
                {
                    "sent": "For example, you can look at the memory graph as well as like some program predicate based approaches which are fairly widely used now.",
                    "label": 0
                },
                {
                    "sent": "There's also related work on program repair, which is the problem that once you locate what line of code is faulty, then how do you go about correcting the.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And making changes to that.",
                    "label": 0
                },
                {
                    "sent": "So here is the last slide, so we have a novel approach for for localization using latent divergance which is based on the notion of probabilistic divergance and the key insight is that we can reduce the problem for localization to the problem of feature selection and the experimental results we have in our preliminary evaluation show that this idea works well.",
                    "label": 0
                },
                {
                    "sent": "We believe that machine learning techniques have fairly important role to play in our ability to deploy more reliable code and reduce the cost of software failures.",
                    "label": 0
                },
                {
                    "sent": "Specifically, we can envision some of more applications, in particular program repair, as well as runtime checking.",
                    "label": 0
                },
                {
                    "sent": "For example, if you observe some traces of the program, can we determine?",
                    "label": 0
                },
                {
                    "sent": "Can we learn that there's certain traces are correct as opposed to certain cases or faulty without a priority?",
                    "label": 0
                },
                {
                    "sent": "Knowing what the definition of such a correct races?",
                    "label": 0
                },
                {
                    "sent": "Also another interesting problem I think is like that of failure clustering.",
                    "label": 0
                },
                {
                    "sent": "So if you have many failing test runs and you have a few faults, how do you group those those tests into a small number of clusters so that the developer does not have to look at each of the failure traces and inspect them?",
                    "label": 0
                },
                {
                    "sent": "Rather they can pick one from a cluster, inspect them and that will be the representative for the failures.",
                    "label": 0
                },
                {
                    "sent": "And I'd be happy to answer any questions or take any comments that you have.",
                    "label": 0
                },
                {
                    "sent": "Any questions?",
                    "label": 0
                },
                {
                    "sent": "Do you have the feeling that this technique makes maximal use of the available data, or could a human do similar debugging with fewer executions?",
                    "label": 0
                },
                {
                    "sent": "Yeah, that's a very good question.",
                    "label": 0
                },
                {
                    "sent": "So a human I'm sure like can certainly do a better, especially based on like their experience, and especially if they were the developer of the program.",
                    "label": 0
                },
                {
                    "sent": "They can have a lot of information that these techniques just don't have based on the history of development.",
                    "label": 0
                },
                {
                    "sent": "For example, what was the most recent change made to the program?",
                    "label": 0
                },
                {
                    "sent": "So there are a lot of things that can be done in this technique I believe can also be made better, for example by looking at different versions of the same program that how did this program evolve to get to this point and to take into account that history and at what point was the program working correctly.",
                    "label": 0
                },
                {
                    "sent": "And when did it become faulty?",
                    "label": 0
                },
                {
                    "sent": "So I think these techniques can definitely be improved as well, but I'm sure like at this point, like the humans can do much better.",
                    "label": 0
                },
                {
                    "sent": "Two quick questions.",
                    "label": 0
                },
                {
                    "sent": "Could you comment on how you think this would scale to much larger programs?",
                    "label": 0
                },
                {
                    "sent": "And Secondly if the fault was the perhaps the absence of a statement rather than the wrong statement.",
                    "label": 0
                },
                {
                    "sent": "I'm guessing that this would may be localized to that area.",
                    "label": 0
                },
                {
                    "sent": "The right area where something should be.",
                    "label": 0
                },
                {
                    "sent": "But maybe you could comment on that?",
                    "label": 0
                },
                {
                    "sent": "Yeah, that's the second question is really an excellent question in the first question.",
                    "label": 0
                },
                {
                    "sent": "Like so far like we have only applied it to these small programs, and it was fairly efficient.",
                    "label": 0
                },
                {
                    "sent": "So we really need to apply to, like you know, much larger programs which have much longer test executions too.",
                    "label": 0
                },
                {
                    "sent": "Be able to like.",
                    "label": 0
                },
                {
                    "sent": "See like whether there is a bottleneck in the computation that we're doing, but so far we didn't run into that.",
                    "label": 0
                },
                {
                    "sent": "But for the second question.",
                    "label": 0
                },
                {
                    "sent": "So this is like a well known problem in this entire for localization research at this point, and which is like you know of, the error of omission.",
                    "label": 0
                },
                {
                    "sent": "So if this example was an error of so called Commission, where you have a statement that's faulty and there is some replacement that will fix it, but you know if there is some functionality that's missing.",
                    "label": 0
                },
                {
                    "sent": "So how do you identify that and that at this point is a much harder problem to solve, and certainly we have not tried to solve that with this technique and the other related work also sort of like focuses on these.",
                    "label": 0
                },
                {
                    "sent": "Errors of Commission where there is a faulty statement rather than there is just missing functionality that's just not there, because in that case, like you know, you might just point to, like, you know, the end of the method that you know.",
                    "label": 0
                },
                {
                    "sent": "This method ended, but it should not have ended.",
                    "label": 0
                },
                {
                    "sent": "So that's like a tough one to say.",
                    "label": 0
                },
                {
                    "sent": "So I have a question that's related as well.",
                    "label": 0
                },
                {
                    "sent": "So what happens if their rates associated with defaults?",
                    "label": 0
                },
                {
                    "sent": "Obviously software is supposed to work with respects right given the specs itself, it should perform exactly the way that it was supposed to be written and developed.",
                    "label": 0
                },
                {
                    "sent": "What happens if you have ranking or categories or important in terms of yeah, so that's another excellent question.",
                    "label": 0
                },
                {
                    "sent": "So we're right now looking at like introducing this notion of specs in this whole domain and not just like using a machine learning but also for localization in general with space in the presence of specifications, because one Canonical example we have is that you can have a program that has a statement that gets.",
                    "label": 0
                },
                {
                    "sent": "Always executed, but that statement is faulty, but on some executions just by virtue of what input you run the program on that statement produces the correct answer, and on the others the same statement creates the program to get into a failure.",
                    "label": 0
                },
                {
                    "sent": "So now the statement is always executed, so it's very hard to identify it's executed in passing runs as well as failing runs, and this is just one statement, so this is 1 extreme example that we use with specifications can for example help us and we can identify for example.",
                    "label": 0
                },
                {
                    "sent": "If the specification consists of multiple properties that need to be satisfied, which particular property is failing, and whether that property is actually related to this operation on this statement.",
                    "label": 0
                },
                {
                    "sent": "So we are looking at bringing like some notion of specifications or some notion of like what's statements might be more likely to be faulty.",
                    "label": 0
                },
                {
                    "sent": "So if you have some kind of priority information to prioritize for localization towards those statements so, but we've only started recently started to look at some of those ideas.",
                    "label": 0
                },
                {
                    "sent": "Any other questions?",
                    "label": 0
                },
                {
                    "sent": "Yeah, very interesting talk.",
                    "label": 0
                },
                {
                    "sent": "One thing that might be even more dectective things that go wrong due to concurrency and multithreading programs.",
                    "label": 0
                },
                {
                    "sent": "Do you have any feelings?",
                    "label": 0
                },
                {
                    "sent": "Yes, that's an excellent question.",
                    "label": 0
                },
                {
                    "sent": "So the program will solve is like just a small sequential program and not just that it was small.",
                    "label": 0
                },
                {
                    "sent": "It was also sequential.",
                    "label": 0
                },
                {
                    "sent": "So if you'll bring it like in multithreaded programs even there might be small like the dining philosophers problem, but you know to detect, like, oh, there's a deadlock.",
                    "label": 0
                },
                {
                    "sent": "And what's the faulty line of code in there can be a much harder problem, but yes, I mean the most immediate approach that I take in that case is to do this whole thing in the context of a model checker, so model checkers can control thread scheduling, and they can exhaustively try different thread schedules for you.",
                    "label": 0
                },
                {
                    "sent": "And in that case that would be sore.",
                    "label": 0
                },
                {
                    "sent": "So, for example, providing you more tests because that way you'll be exhaustively trying all possible up to some bound ways of scheduling the threads, and then that will be the suite of executions over which you would be doing the for localization.",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "I had a question.",
                    "label": 0
                },
                {
                    "sent": "OK, thanks again, thank you.",
                    "label": 0
                }
            ]
        }
    }
}