{
    "id": "tfuiwgfqkvkr46tzz7korm2x5jjicque",
    "title": "Algorithms for Solving the Multiagent Simple Temporal Problem",
    "info": {
        "author": [
            "James C. Boerkoel Jr., University of Michigan"
        ],
        "published": "Nov. 15, 2010",
        "recorded": "May 2010",
        "category": [
            "Top->Computer Science->Artificial Intelligence"
        ]
    },
    "url": "http://videolectures.net/icaps2010_boerkoel_asmstp/",
    "segmentation": [
        [
            "Hi, I'm James.",
            "Work on this is work that I've done with a durfee at the University."
        ],
        [
            "Michigan, so let's start with the motivating example.",
            "Consider Amy, who's a student an has two and has the following four activities on our agenda.",
            "She wants to study for an exam.",
            "She wants to take an exam working group project and also work on a research project.",
            "Now you can imagine to work on a group project she could have to exchange project deliverables with a partner Ben and to do so she would have to synchronize the start over."
        ],
        [
            "Meeting time, so the question that I'm looking at is how does Amy choose a schedule that accomplishes agenda but is also compatible with Ben schedule?",
            "So you can imagine there's roaches she could take.",
            "For example, she could ignore band, schedule out together, or ignore Ben altogether and her.",
            "She'll find a schedule, but the schedules that she finds my failed to coordinate with Ben schedule, and thus you might fail to accomplish the group project.",
            "A second approach would be to collect bend scheduling commitments and constraints and choose a compatible joint schedule for the two of them.",
            "This has a couple downsides as well because Ben may not want to reveal his private scheduling commitments to Amy and also this introduces an extra burden on me, and this burden grows every time she coordinates with somebody new.",
            "And in fact, anytime Ben."
        ],
        [
            "Coordinates with somebody new.",
            "So in this talk I propose a multi Agent multi agent scheduling algorithms that find a complete set of sound joint schedules.",
            "And also exploits the problem structure and natural distribution across multiple agents in order to achieve speedup.",
            "And finally, have provable privacy."
        ],
        [
            "So let's start out by introducing the formulation that I'm going to be using.",
            "The formulation is a simple temporal problem, or an SDP, and it's basically a temporal based constraint satisfaction problem where we have time point variables and each time point variable is simply event in time.",
            "For example, we can have start time for the AMI study session and end time framing study session as well start and end times for the exam and so on.",
            "Additionally, we have a set of constraints, temporal difference constraints, which represents bounds on the differences between two time point variables.",
            "We represent this graphically using a directed edge, so in this particular example, the end time minus the start time is bound between the values of 30 and 2:40.",
            "This represents the study session should last at least 1/2 hour at most 4 hours.",
            "You could also imagine having a constraint between the end time of the study session and the start time of the exam so that the exam.",
            "After you're finished studying."
        ],
        [
            "So the extension to a multi Agent STP framework is relatively straightforward and multi agent STP is is composed of N agent problems.",
            "But each agent problem has a set of constraints which is composed of both intra agent constraints, an Inter agent constraint."
        ],
        [
            "And so let's let's fill out Amy schedule a little bit more.",
            "We have certain end time points for each of the four activities.",
            "We also have a temporal reference point of 8:00 AM.",
            "In the morning we've given Bandai an agenda with four activities as well, and you'll notice that the structure here is exactly the same.",
            "This is just to highlight the parallelization that was going to happen later and the algorithms.",
            "But this is not a limitation of any of the algorithms that we present.",
            "And so the two subproblems are pretty clear to see.",
            "Amy's is blue, Benz is orange, and Amy has a variety of Inter intra agent constraints.",
            "And then and then also the enter agent constraints are the constraints organization constraints between the two step problem."
        ],
        [
            "So traditionally an SDP we were interested in finding a decomposable STP instance and a decomposable STP instant represents a complete set of possible solutions by representing by using ranges of time for each event, such that any time from that range can be extended to a complete sound joint sketch or sound schedule, and so traditionally the way that many people have approached this is using full path consistency algorithms.",
            "For example, all pairs, shortest path algorithms like Floyd Warshall can calculate this.",
            "In polynomial time.",
            "And the way this works is you complete, you calculate the tightest path between every pair of time points in your FTP network.",
            "However, so the tightest path between two time points and this domain corresponds to the minimum and maximum time that has to elapse between those two events.",
            "However, in a multi agent environments doesn't make quite as much sense because introducing all these different paths is going to introduce quite a bit of coupling, and in fact in the example that we had before Amy study session is completely unrelated to Bens run, and that's by calculating minimum and maximum time between those two events.",
            "That's not information either of 'em can directly take advantage of, and in fact one of their agents is going to have to represent somehow, which could imply some kind of privacy loss.",
            "So Luckily there's newer algorithms that.",
            "Exploit the sparsity of the constraint structure to be a little bit more efficient in expectation, and the way this works is you first triangulate the SG piano triangulated.",
            "The triangulated graph is simply a graph whose largest non bisected cycle is a size 3, so in this particular instance we can triangulate the graph by adding these three edges.",
            "This is also sometimes called accordo graph.",
            "So we do this now we just calculate the tightest path for any of the edges that exist in this much more sparse triangulated graph.",
            "And so we tighten all the edges.",
            "In the following way so so I've highlighted the triangle up here.",
            "So we consider each triangle independently in each edge of each triangle independently, and you'll see that the bottom edge of that highlighted triangle.",
            "There currently has a bound of 60 to 120, but you can also see that the alternate path there implies a tighter bound, and so we can tighten that bound to the updated 75 to 105 bounds.",
            "And then we do this systematically throughout the entire network and will have established decomposable estoppey instance."
        ],
        [
            "So this reminder is some of the goals were soundness, concurrency and privacy.",
            "So the first part of our approach is to partition the multiagent SDP into N + 1 subproblems.",
            "This corresponds to, like in rouses talk, the public, and private.",
            "It's we have North Private SDS, one for each agent, and simply a private FTP is composed of the time points, which are anytime points that are not involved in Inter agent constraints, and then the constraints involving private time points, and Alternatively, we have one shared SDP.",
            "Which is composed of shared time points.",
            "Simply anytime points that are in fact involved in Inter agent constraint and the constraints between them."
        ],
        [
            "So going back to our example, the private time points are the darker ones here and the shared one.",
            "The shared time points are the ones that are connected by an Inter agency."
        ],
        [
            "So this partitioning leads to a nice property that we can exploit later in our algorithms and that is for privacy and that is that the information that an agent must reveal too, or Conversely learn of some other agent, is necessarily limited to the information captured in that shared SDP.",
            "So here we have a fully triangulated version of the example problem and the shared portion of this is much smaller than the overall multiagent SDP.",
            "And so all the information, either agent is going to learn about the other agent is contained in this smaller portion, and that implies that everything else remains private.",
            "So all these other time points Ben won't ever learn that Amy has to has an exam to study for or research project."
        ],
        [
            "So the next part of our approach is to adapt state of the art partial path consistency algorithms.",
            "In particular, we adapt P3C to exploit this partitioning that we've just introduced, so we're going to highlight three candidate algorithms.",
            "The 1st is a naive centralized approach where we simply centralise all the constraints and all the variables on to one agent and solve that agent there.",
            "We completely ignore privacy properties and partitioning, and then we did just simply redistribute the solution at the end."
        ],
        [
            "Are are partially centralized approach starts out by having agents calculate and work on their private STP until they've calculated enough information so that they can centralise the information contained in the recipe.",
            "Solve that centrally on a single agent, redistribute the solution, and use updated information to re update their local private FTP.",
            "And I'm going to take you through this.",
            "This algorithm and a little bit here."
        ],
        [
            "And a little bit more detail.",
            "And finally we have a fully distributed version of the same algorithm.",
            "This starts and ends exactly the same as the previous algorithm.",
            "The differences, instead of centralizing the computation of the shared FTP, we try to load balance an and resolve that decently.",
            "This introduces some overhead, though, because we're going to have to send quite a few messages back and forth between agents to make sure agents aren't stepping on each other."
        ],
        [
            "Toes so back to the example I'm going to highlight the execution of the partially centralized algorithm at this point, and so agents start out by ignoring the Inter agent constraints.",
            "And then agents now proceed to triangulate their private SDP, but as they triangulate, you're going to see we're going to add edges as we're adding these edges.",
            "We're also updating the bounds on these edges.",
            "And by the time we finish this process, we're going to have calculated the tightest bounds on any of the shared edges that are necessary for resolving the shared SDP.",
            "So in this instance, all we have left now are the shared time points and the bounds on those shared time points, so.",
            "If nothing else, to summarize what just happened, Amy's agents calculated the range of times that she's available to meet for the group Project Start Time, and Ben's agent has done the same Amy's available from 50 to 360.",
            "Ben is available from 1:20 to 4:05, so now both agents centralized this information.",
            "Send it to a single agent, who then solves this sub TP just the same as before.",
            "It's just a simple application of the P3C algorithm.",
            "And by the end of this process here on the shared SDP we have calculated and updated the balance for both agents.",
            "On both Amy and Ben's agents are going to be sent a message that updates that range of time to 120 to 360 for both of them.",
            "So now, once we've received once each agent has received those updated bounds, it can use that information to re update any of the other remaining edges in their local problem.",
            "So we just traverse these triangles in reverse order here and update edges as we go.",
            "And by the end of this process, each edge will have the tightest possible bounds on it, and it will will calculated indecomposable STP instance which remember is represents a complete set of possible SDP schedules."
        ],
        [
            "So as a summary of the of what we just did here, if you consider that each triangle has to perform 6 constraint checks, one for each add one for each pound of each edge, then if we solved, essentially it took 22 triangles to represent this problem, which corresponds to 1:30 constraint checks or computational units of time.",
            "But remember, two of those were shared, whereas 20 of them were private triangles, 10 per agent, which means that if we were able to take advantage of our partially centralized algorithm would have only taken about 72 units of computational time.",
            "Or perhaps if we could achieve perfect load balancing, we could achieve perfect.",
            "We could have computed this in 66 computational units of time."
        ],
        [
            "So we want to extend this to a more complete empirical evaluation.",
            "So the way we did this is we randomly generated problems with 25 agents and 25 time points per agent, and then we varied a parameter P which represents the proportion of the total time points that are private.",
            "So for each agent you can.",
            "You can think of it as the expected number of private time points is just simply P * 25.",
            "We also scale the number of constraints so that the centralized computation remains constant to give us a nice bench line to compare to when we record the number of non concurrent constraint checks as well as the number of message."
        ],
        [
            "So let's start out by comparing the curves with essentially the central algorithm and a partially centralized algorithm, and you'll notice right away that when P is low, this corresponds to.",
            "When there's very few shared time points, and so.",
            "When there's very, very few.",
            "I bet.",
            "When there's very few private time points, most of them are shared, which means the shared the size of the shared FTP is nearly the same as the entire problem, so we don't see much advantage for partially centralized algorithm, but azpi grows that shared the size of that shared.",
            "FTP shrinks and the partially centralized algorithm starts to approach.",
            "Perfect speedup.",
            "Insistence would never quite achieve perfect speedup which remember in this case is 25 times due to 25 agents due to heterogeneity and individual agent problems.",
            "Even though P of P equal to 1 corresponds to when there's no Inter agent constraints."
        ],
        [
            "So ever, so let's add the distributed algorithms curve on here.",
            "You'll notice right away that we do quite a bit better at load balancing the work of the shared SDP.",
            "However, this curve is a bit deceiving because we assume zero message latency, so perhaps messages take a bit more time to send.",
            "Perhaps it's the same amount of time as performing a single constraint check, if that's."
        ],
        [
            "The case then we get this yellow line here, which is a little bit higher, but still quite a quite a bit of improvement over some of the more centralized approaches.",
            "But but there's always the potential that message latency is actually quite a bit more expensive, and in fact, in order of magnitude more, it takes an order of magnitude more time than performing a single constraint check.",
            "If that was the case."
        ],
        [
            "We would get this turquoise line here, which is actually above some of the centralized approaches, but I think it's worth pointing out then on the loosely coupled problems on the high end of the P value spectrum there.",
            "All of our algorithms do quite well.",
            "We achieved quite a bit of speedup, and there's quite a few real world problems that."
        ],
        [
            "That have that problem.",
            "So in conclusion, by exploiting the weakly coupled structure of multiagent SCPS, we propose two algorithms are partially centralized in a distributed algorithm that achieves significant solution times speedup through concurrency.",
            "Both of these algorithms exploited a partitioning of the time points that allowed and led to some high level of user privacy and a result that we didn't show here is that we can also use that information that partitioning information to lead to better triangulated IST.",
            "Triangulated graphs we generate triangulated graphs heuristically, and if we use that information during during the triangulated graph generation, we can actually lead to graphs with fewer number of edges.",
            "And finally, in the future we hope to incorporate these multi efficient multi Agent STP algorithms as a foundation for more complex scheduling and planning and multiagent planning and scheduling."
        ],
        [
            "So that wraps it up.",
            "Thank you very much."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Hi, I'm James.",
                    "label": 0
                },
                {
                    "sent": "Work on this is work that I've done with a durfee at the University.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Michigan, so let's start with the motivating example.",
                    "label": 0
                },
                {
                    "sent": "Consider Amy, who's a student an has two and has the following four activities on our agenda.",
                    "label": 0
                },
                {
                    "sent": "She wants to study for an exam.",
                    "label": 0
                },
                {
                    "sent": "She wants to take an exam working group project and also work on a research project.",
                    "label": 0
                },
                {
                    "sent": "Now you can imagine to work on a group project she could have to exchange project deliverables with a partner Ben and to do so she would have to synchronize the start over.",
                    "label": 1
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Meeting time, so the question that I'm looking at is how does Amy choose a schedule that accomplishes agenda but is also compatible with Ben schedule?",
                    "label": 1
                },
                {
                    "sent": "So you can imagine there's roaches she could take.",
                    "label": 0
                },
                {
                    "sent": "For example, she could ignore band, schedule out together, or ignore Ben altogether and her.",
                    "label": 0
                },
                {
                    "sent": "She'll find a schedule, but the schedules that she finds my failed to coordinate with Ben schedule, and thus you might fail to accomplish the group project.",
                    "label": 0
                },
                {
                    "sent": "A second approach would be to collect bend scheduling commitments and constraints and choose a compatible joint schedule for the two of them.",
                    "label": 1
                },
                {
                    "sent": "This has a couple downsides as well because Ben may not want to reveal his private scheduling commitments to Amy and also this introduces an extra burden on me, and this burden grows every time she coordinates with somebody new.",
                    "label": 1
                },
                {
                    "sent": "And in fact, anytime Ben.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Coordinates with somebody new.",
                    "label": 0
                },
                {
                    "sent": "So in this talk I propose a multi Agent multi agent scheduling algorithms that find a complete set of sound joint schedules.",
                    "label": 1
                },
                {
                    "sent": "And also exploits the problem structure and natural distribution across multiple agents in order to achieve speedup.",
                    "label": 0
                },
                {
                    "sent": "And finally, have provable privacy.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So let's start out by introducing the formulation that I'm going to be using.",
                    "label": 0
                },
                {
                    "sent": "The formulation is a simple temporal problem, or an SDP, and it's basically a temporal based constraint satisfaction problem where we have time point variables and each time point variable is simply event in time.",
                    "label": 1
                },
                {
                    "sent": "For example, we can have start time for the AMI study session and end time framing study session as well start and end times for the exam and so on.",
                    "label": 0
                },
                {
                    "sent": "Additionally, we have a set of constraints, temporal difference constraints, which represents bounds on the differences between two time point variables.",
                    "label": 1
                },
                {
                    "sent": "We represent this graphically using a directed edge, so in this particular example, the end time minus the start time is bound between the values of 30 and 2:40.",
                    "label": 0
                },
                {
                    "sent": "This represents the study session should last at least 1/2 hour at most 4 hours.",
                    "label": 0
                },
                {
                    "sent": "You could also imagine having a constraint between the end time of the study session and the start time of the exam so that the exam.",
                    "label": 0
                },
                {
                    "sent": "After you're finished studying.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So the extension to a multi Agent STP framework is relatively straightforward and multi agent STP is is composed of N agent problems.",
                    "label": 0
                },
                {
                    "sent": "But each agent problem has a set of constraints which is composed of both intra agent constraints, an Inter agent constraint.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And so let's let's fill out Amy schedule a little bit more.",
                    "label": 0
                },
                {
                    "sent": "We have certain end time points for each of the four activities.",
                    "label": 0
                },
                {
                    "sent": "We also have a temporal reference point of 8:00 AM.",
                    "label": 0
                },
                {
                    "sent": "In the morning we've given Bandai an agenda with four activities as well, and you'll notice that the structure here is exactly the same.",
                    "label": 0
                },
                {
                    "sent": "This is just to highlight the parallelization that was going to happen later and the algorithms.",
                    "label": 0
                },
                {
                    "sent": "But this is not a limitation of any of the algorithms that we present.",
                    "label": 0
                },
                {
                    "sent": "And so the two subproblems are pretty clear to see.",
                    "label": 0
                },
                {
                    "sent": "Amy's is blue, Benz is orange, and Amy has a variety of Inter intra agent constraints.",
                    "label": 0
                },
                {
                    "sent": "And then and then also the enter agent constraints are the constraints organization constraints between the two step problem.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So traditionally an SDP we were interested in finding a decomposable STP instance and a decomposable STP instant represents a complete set of possible solutions by representing by using ranges of time for each event, such that any time from that range can be extended to a complete sound joint sketch or sound schedule, and so traditionally the way that many people have approached this is using full path consistency algorithms.",
                    "label": 1
                },
                {
                    "sent": "For example, all pairs, shortest path algorithms like Floyd Warshall can calculate this.",
                    "label": 0
                },
                {
                    "sent": "In polynomial time.",
                    "label": 0
                },
                {
                    "sent": "And the way this works is you complete, you calculate the tightest path between every pair of time points in your FTP network.",
                    "label": 0
                },
                {
                    "sent": "However, so the tightest path between two time points and this domain corresponds to the minimum and maximum time that has to elapse between those two events.",
                    "label": 0
                },
                {
                    "sent": "However, in a multi agent environments doesn't make quite as much sense because introducing all these different paths is going to introduce quite a bit of coupling, and in fact in the example that we had before Amy study session is completely unrelated to Bens run, and that's by calculating minimum and maximum time between those two events.",
                    "label": 0
                },
                {
                    "sent": "That's not information either of 'em can directly take advantage of, and in fact one of their agents is going to have to represent somehow, which could imply some kind of privacy loss.",
                    "label": 0
                },
                {
                    "sent": "So Luckily there's newer algorithms that.",
                    "label": 0
                },
                {
                    "sent": "Exploit the sparsity of the constraint structure to be a little bit more efficient in expectation, and the way this works is you first triangulate the SG piano triangulated.",
                    "label": 0
                },
                {
                    "sent": "The triangulated graph is simply a graph whose largest non bisected cycle is a size 3, so in this particular instance we can triangulate the graph by adding these three edges.",
                    "label": 0
                },
                {
                    "sent": "This is also sometimes called accordo graph.",
                    "label": 0
                },
                {
                    "sent": "So we do this now we just calculate the tightest path for any of the edges that exist in this much more sparse triangulated graph.",
                    "label": 0
                },
                {
                    "sent": "And so we tighten all the edges.",
                    "label": 0
                },
                {
                    "sent": "In the following way so so I've highlighted the triangle up here.",
                    "label": 0
                },
                {
                    "sent": "So we consider each triangle independently in each edge of each triangle independently, and you'll see that the bottom edge of that highlighted triangle.",
                    "label": 0
                },
                {
                    "sent": "There currently has a bound of 60 to 120, but you can also see that the alternate path there implies a tighter bound, and so we can tighten that bound to the updated 75 to 105 bounds.",
                    "label": 0
                },
                {
                    "sent": "And then we do this systematically throughout the entire network and will have established decomposable estoppey instance.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So this reminder is some of the goals were soundness, concurrency and privacy.",
                    "label": 0
                },
                {
                    "sent": "So the first part of our approach is to partition the multiagent SDP into N + 1 subproblems.",
                    "label": 0
                },
                {
                    "sent": "This corresponds to, like in rouses talk, the public, and private.",
                    "label": 0
                },
                {
                    "sent": "It's we have North Private SDS, one for each agent, and simply a private FTP is composed of the time points, which are anytime points that are not involved in Inter agent constraints, and then the constraints involving private time points, and Alternatively, we have one shared SDP.",
                    "label": 1
                },
                {
                    "sent": "Which is composed of shared time points.",
                    "label": 0
                },
                {
                    "sent": "Simply anytime points that are in fact involved in Inter agent constraint and the constraints between them.",
                    "label": 1
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So going back to our example, the private time points are the darker ones here and the shared one.",
                    "label": 0
                },
                {
                    "sent": "The shared time points are the ones that are connected by an Inter agency.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So this partitioning leads to a nice property that we can exploit later in our algorithms and that is for privacy and that is that the information that an agent must reveal too, or Conversely learn of some other agent, is necessarily limited to the information captured in that shared SDP.",
                    "label": 1
                },
                {
                    "sent": "So here we have a fully triangulated version of the example problem and the shared portion of this is much smaller than the overall multiagent SDP.",
                    "label": 0
                },
                {
                    "sent": "And so all the information, either agent is going to learn about the other agent is contained in this smaller portion, and that implies that everything else remains private.",
                    "label": 0
                },
                {
                    "sent": "So all these other time points Ben won't ever learn that Amy has to has an exam to study for or research project.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So the next part of our approach is to adapt state of the art partial path consistency algorithms.",
                    "label": 1
                },
                {
                    "sent": "In particular, we adapt P3C to exploit this partitioning that we've just introduced, so we're going to highlight three candidate algorithms.",
                    "label": 1
                },
                {
                    "sent": "The 1st is a naive centralized approach where we simply centralise all the constraints and all the variables on to one agent and solve that agent there.",
                    "label": 0
                },
                {
                    "sent": "We completely ignore privacy properties and partitioning, and then we did just simply redistribute the solution at the end.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Are are partially centralized approach starts out by having agents calculate and work on their private STP until they've calculated enough information so that they can centralise the information contained in the recipe.",
                    "label": 0
                },
                {
                    "sent": "Solve that centrally on a single agent, redistribute the solution, and use updated information to re update their local private FTP.",
                    "label": 0
                },
                {
                    "sent": "And I'm going to take you through this.",
                    "label": 0
                },
                {
                    "sent": "This algorithm and a little bit here.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And a little bit more detail.",
                    "label": 0
                },
                {
                    "sent": "And finally we have a fully distributed version of the same algorithm.",
                    "label": 0
                },
                {
                    "sent": "This starts and ends exactly the same as the previous algorithm.",
                    "label": 0
                },
                {
                    "sent": "The differences, instead of centralizing the computation of the shared FTP, we try to load balance an and resolve that decently.",
                    "label": 0
                },
                {
                    "sent": "This introduces some overhead, though, because we're going to have to send quite a few messages back and forth between agents to make sure agents aren't stepping on each other.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Toes so back to the example I'm going to highlight the execution of the partially centralized algorithm at this point, and so agents start out by ignoring the Inter agent constraints.",
                    "label": 0
                },
                {
                    "sent": "And then agents now proceed to triangulate their private SDP, but as they triangulate, you're going to see we're going to add edges as we're adding these edges.",
                    "label": 0
                },
                {
                    "sent": "We're also updating the bounds on these edges.",
                    "label": 0
                },
                {
                    "sent": "And by the time we finish this process, we're going to have calculated the tightest bounds on any of the shared edges that are necessary for resolving the shared SDP.",
                    "label": 0
                },
                {
                    "sent": "So in this instance, all we have left now are the shared time points and the bounds on those shared time points, so.",
                    "label": 0
                },
                {
                    "sent": "If nothing else, to summarize what just happened, Amy's agents calculated the range of times that she's available to meet for the group Project Start Time, and Ben's agent has done the same Amy's available from 50 to 360.",
                    "label": 0
                },
                {
                    "sent": "Ben is available from 1:20 to 4:05, so now both agents centralized this information.",
                    "label": 0
                },
                {
                    "sent": "Send it to a single agent, who then solves this sub TP just the same as before.",
                    "label": 0
                },
                {
                    "sent": "It's just a simple application of the P3C algorithm.",
                    "label": 0
                },
                {
                    "sent": "And by the end of this process here on the shared SDP we have calculated and updated the balance for both agents.",
                    "label": 0
                },
                {
                    "sent": "On both Amy and Ben's agents are going to be sent a message that updates that range of time to 120 to 360 for both of them.",
                    "label": 0
                },
                {
                    "sent": "So now, once we've received once each agent has received those updated bounds, it can use that information to re update any of the other remaining edges in their local problem.",
                    "label": 0
                },
                {
                    "sent": "So we just traverse these triangles in reverse order here and update edges as we go.",
                    "label": 0
                },
                {
                    "sent": "And by the end of this process, each edge will have the tightest possible bounds on it, and it will will calculated indecomposable STP instance which remember is represents a complete set of possible SDP schedules.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So as a summary of the of what we just did here, if you consider that each triangle has to perform 6 constraint checks, one for each add one for each pound of each edge, then if we solved, essentially it took 22 triangles to represent this problem, which corresponds to 1:30 constraint checks or computational units of time.",
                    "label": 1
                },
                {
                    "sent": "But remember, two of those were shared, whereas 20 of them were private triangles, 10 per agent, which means that if we were able to take advantage of our partially centralized algorithm would have only taken about 72 units of computational time.",
                    "label": 0
                },
                {
                    "sent": "Or perhaps if we could achieve perfect load balancing, we could achieve perfect.",
                    "label": 0
                },
                {
                    "sent": "We could have computed this in 66 computational units of time.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So we want to extend this to a more complete empirical evaluation.",
                    "label": 0
                },
                {
                    "sent": "So the way we did this is we randomly generated problems with 25 agents and 25 time points per agent, and then we varied a parameter P which represents the proportion of the total time points that are private.",
                    "label": 1
                },
                {
                    "sent": "So for each agent you can.",
                    "label": 0
                },
                {
                    "sent": "You can think of it as the expected number of private time points is just simply P * 25.",
                    "label": 1
                },
                {
                    "sent": "We also scale the number of constraints so that the centralized computation remains constant to give us a nice bench line to compare to when we record the number of non concurrent constraint checks as well as the number of message.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So let's start out by comparing the curves with essentially the central algorithm and a partially centralized algorithm, and you'll notice right away that when P is low, this corresponds to.",
                    "label": 1
                },
                {
                    "sent": "When there's very few shared time points, and so.",
                    "label": 0
                },
                {
                    "sent": "When there's very, very few.",
                    "label": 0
                },
                {
                    "sent": "I bet.",
                    "label": 0
                },
                {
                    "sent": "When there's very few private time points, most of them are shared, which means the shared the size of the shared FTP is nearly the same as the entire problem, so we don't see much advantage for partially centralized algorithm, but azpi grows that shared the size of that shared.",
                    "label": 0
                },
                {
                    "sent": "FTP shrinks and the partially centralized algorithm starts to approach.",
                    "label": 0
                },
                {
                    "sent": "Perfect speedup.",
                    "label": 0
                },
                {
                    "sent": "Insistence would never quite achieve perfect speedup which remember in this case is 25 times due to 25 agents due to heterogeneity and individual agent problems.",
                    "label": 0
                },
                {
                    "sent": "Even though P of P equal to 1 corresponds to when there's no Inter agent constraints.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So ever, so let's add the distributed algorithms curve on here.",
                    "label": 0
                },
                {
                    "sent": "You'll notice right away that we do quite a bit better at load balancing the work of the shared SDP.",
                    "label": 1
                },
                {
                    "sent": "However, this curve is a bit deceiving because we assume zero message latency, so perhaps messages take a bit more time to send.",
                    "label": 1
                },
                {
                    "sent": "Perhaps it's the same amount of time as performing a single constraint check, if that's.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The case then we get this yellow line here, which is a little bit higher, but still quite a quite a bit of improvement over some of the more centralized approaches.",
                    "label": 0
                },
                {
                    "sent": "But but there's always the potential that message latency is actually quite a bit more expensive, and in fact, in order of magnitude more, it takes an order of magnitude more time than performing a single constraint check.",
                    "label": 0
                },
                {
                    "sent": "If that was the case.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We would get this turquoise line here, which is actually above some of the centralized approaches, but I think it's worth pointing out then on the loosely coupled problems on the high end of the P value spectrum there.",
                    "label": 1
                },
                {
                    "sent": "All of our algorithms do quite well.",
                    "label": 0
                },
                {
                    "sent": "We achieved quite a bit of speedup, and there's quite a few real world problems that.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "That have that problem.",
                    "label": 0
                },
                {
                    "sent": "So in conclusion, by exploiting the weakly coupled structure of multiagent SCPS, we propose two algorithms are partially centralized in a distributed algorithm that achieves significant solution times speedup through concurrency.",
                    "label": 1
                },
                {
                    "sent": "Both of these algorithms exploited a partitioning of the time points that allowed and led to some high level of user privacy and a result that we didn't show here is that we can also use that information that partitioning information to lead to better triangulated IST.",
                    "label": 0
                },
                {
                    "sent": "Triangulated graphs we generate triangulated graphs heuristically, and if we use that information during during the triangulated graph generation, we can actually lead to graphs with fewer number of edges.",
                    "label": 1
                },
                {
                    "sent": "And finally, in the future we hope to incorporate these multi efficient multi Agent STP algorithms as a foundation for more complex scheduling and planning and multiagent planning and scheduling.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So that wraps it up.",
                    "label": 0
                },
                {
                    "sent": "Thank you very much.",
                    "label": 0
                }
            ]
        }
    }
}