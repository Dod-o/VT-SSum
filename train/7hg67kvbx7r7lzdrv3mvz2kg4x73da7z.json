{
    "id": "7hg67kvbx7r7lzdrv3mvz2kg4x73da7z",
    "title": "The Expressive Power of SPARQL",
    "info": {
        "author": [
            "Renzo Angles, University of Chile"
        ],
        "published": "Nov. 24, 2008",
        "recorded": "October 2008",
        "category": [
            "Top->Computer Science->Semantic Web"
        ]
    },
    "url": "http://videolectures.net/iswc08_angles_epsparql/",
    "segmentation": [
        [
            "OK, thank you.",
            "I will finish this as part of the representations.",
            "A determinant expressive power of query languages is crucial for understanding its capabilities.",
            "That is what queries the user is able to pose.",
            "A in this paper we study in depth expressive power of of."
        ],
        [
            "Sparkle we have two main motivations.",
            "A considering that the current definition of sparkle semantics is not a standard and unnecessarily complex.",
            "A week ago."
        ],
        [
            "That sparkle has a simple compositional semantics, with some exception, very rare exceptions."
        ],
        [
            "And the second motivation is to study the expressive power of sparkle.",
            "On a."
        ],
        [
            "We have that.",
            "Or we prove that the sparkle is equivalent in expressing expressive power to relational algebra.",
            "The."
        ],
        [
            "The outline of the paper is that we review the specification of sparkle.",
            "A."
        ],
        [
            "We present a version of Sparkle that allows only say filters that we that we call Sparkle S and with."
        ],
        [
            "After mine that sparkle and Sparkle S are equivalent in their expressive power.",
            "And then we use the sparkle see that is the compositional version of Sparkle, and we determined that the sparkle is an expert."
        ],
        [
            "Lucy are equivalent.",
            "Finally.",
            "We proved that the sparkle C is equivalent to relational algebra.",
            "A."
        ],
        [
            "Yeah.",
            "There are both process we show with this tour and the following features features.",
            "First, with the finest sparkle, the version of Sparkle."
        ],
        [
            "Say filters with the find the key balance."
        ],
        [
            "Then we introduce."
        ],
        [
            "Sparkle, see."
        ],
        [
            "We proved that Sparkle Sienna Sparkle Sr."
        ],
        [
            "People in.",
            "Then A to determine the expressive power of sparkle.",
            "See, we compare it again."
        ],
        [
            "Datalog.",
            "We showed that they are."
        ],
        [
            "Violent.",
            "Using the well, no results at the Ridge."
        ],
        [
            "The relational algebra and Datalog, Nonrecursive with negation are equivalent."
        ],
        [
            "We can conclude that Sparkle and their relational algebra are equivalent in their expressive power."
        ],
        [
            "A's introduction we have done that and sparkle query.",
            "Contains or have three elements, the graph pattern.",
            "The graph pattern that matches a data set constructed from a set of data set close is the result of this match is a table of mappings that is used by the by the query form.",
            "To make the final result in this case, we restrict our study to select queries that projects the table of mappings."
        ],
        [
            "We briefly describe the the syntax of sparkle craft patterns with we have triplet patterns that is an RDF triple."
        ],
        [
            "Blues variables.",
            "And we can.",
            "We can construct more complex patterns."
        ],
        [
            "For example, join pattern joining of patterns."
        ],
        [
            "Channel Patterns union of."
        ],
        [
            "Turns filter conditions over."
        ],
        [
            "Others.",
            "In our work we will use an algebraic syntax that was the finite in sparkle, see.",
            "The syntax is easier for a formal analysis."
        ],
        [
            "A."
        ],
        [
            "As an introductory example, we can see that the Atripla triple pattern matches the graph and returns a set of mappings and therefore."
        ],
        [
            "A table.",
            "And an operator join settles of mappings a whose whose valuations are the same.",
            "For this, for the four variables."
        ],
        [
            "In common.",
            "A filter conditions are used to restrict the solution."
        ],
        [
            "Mappings.",
            "A we can use the operator.",
            "To add solution mapping a mappings from option."
        ],
        [
            "The patterns and we can get the union of mappings by by using the Union operator."
        ],
        [
            "Now the evaluation of Spark sparkle patterns as defined by the specification.",
            "The original specification begins with a syntax."
        ],
        [
            "Form defined by your grammar."
        ],
        [
            "Then they sent us form is transform.",
            "In an algebra separation, but using algorithms that a contains a case by case by case evaluations.",
            "Is results in long sparkle."
        ],
        [
            "Algebra.",
            "And finally, this expression in this pirkle algebra."
        ],
        [
            "Is evaluated to get multi set of mappings of our back of mappings.",
            "A we will have.",
            "We will.",
            "We will like to simplify this this process."
        ],
        [
            "So first we introduce Sparkle S that is the fragment, allowing only say filter patterns.",
            "Fiercely."
        ],
        [
            "We introduce the notion of expressive power.",
            "We have that Aquarius definition from the set of input data to a set of output data, and expressive power is defined as the set of queries expressible in the in the language.",
            "To determine the expressive power of a query language, we can compare it against another query language.",
            "A."
        ],
        [
            "On we can say that to query language have dispersive power if they can express the same set of queries."
        ],
        [
            "A note that if the language operates over different.",
            "Data inputs and outputs.",
            "We have to normalize them before the comparison.",
            "A.",
            "At."
        ],
        [
            "For A to introduce Sparkle S. A we can use the following question what is the meaning of a pattern P filter?",
            "See where we have variables in C, None, none occurring in pig.",
            "That is a case of an unknown, say filter.",
            "A.",
            "And."
        ],
        [
            "In, for example, considering this this pattern, we have that variable T is is non safe.",
            "A. I mean it occurs in the condition but does not occur in the pattern.",
            "So what is the evaluation of variable C?"
        ],
        [
            "We have two options.",
            "The first one is consider C as a not defined variable."
        ],
        [
            "And the second one is a.",
            "To evaluate, see with all possible values from the database."
        ],
        [
            "In this point, we have that the sparkle, the original sparkle semantics.",
            "A defiance.",
            "Case by case semantics.",
            "That is, is if the expression is inside an optional as index in this example, and the variable C occurs in P, then we apply case 2.",
            "Else will play games with."
        ],
        [
            "Well.",
            "Note that patterns with non safe filters are very."
        ],
        [
            "ISIS.",
            "On weekends, simulate or replace the these non safe filters with safe ones."
        ],
        [
            "Then we established."
        ],
        [
            "The sparkle and Sparkle S have the same expressive power."
        ],
        [
            "The proof is is a kinetic process to transform a non safe filter patterns in to say once by a considering special.",
            "The special case when we have case by case evaluation."
        ],
        [
            "For this we define a function, is that transform.",
            "Any Potter P in US and in US filter safe pattern?",
            "For Moscow."
        ],
        [
            "This is a.",
            "This function works as the identity."
        ],
        [
            "And we have to special cases.",
            "They feel the first one is when we have filter inside optional.",
            "In this case the original semantics defines that the scope of of the condition C is extended to the pattern P1.",
            "So to simulate this feature.",
            "We include a copy of the one inside the optional pattern.",
            "If this step does not work, we can apply."
        ],
        [
            "Special case 2.",
            "Where we replace each known each.",
            "Trivial or atomic filter condition.",
            "And we replace it by either hungover or false depending of the filter condition.",
            "That is not safe."
        ],
        [
            "Hey then.",
            "Now we introduce."
        ],
        [
            "Sparkle, see.",
            "At the theater for."
        ],
        [
            "Semantics.",
            "A includes to have a compositional approach."
        ],
        [
            "Another touch the notational approach."
        ],
        [
            "Which.",
            "And we have that the spark will see.",
            "It provides a denotational and composition."
        ],
        [
            "Semantics.",
            "I will give an overview of Sparkle, see.",
            "A mapping is a partial function from variables to RDF terms.",
            "The evaluation of a triple or triple property is the is the set of mappings.",
            "Product of matching the pattern.",
            "The triple pattern against the graph.",
            "You wish."
        ],
        [
            "If we consider back semantics, that is multisets instead of set of mappings.",
            "We have that a sparkle juices back semantics.",
            "However, in general the notion of back semantics is not well understood from a theoretical point of view."
        ],
        [
            "So in this talk, but in this talk we will avoid back semantic details."
        ],
        [
            "Now a spark wall, see.",
            "Defiance operators of joint difference junior.",
            "UN left outer join.",
            "Build one set of mappings.",
            "Then"
        ],
        [
            "This operation operate operations are used to define the semantics of graph patterns.",
            "A."
        ],
        [
            "The evolution of filters is also simple.",
            "I know that sparkle.",
            "See only consider a safe filter patterns."
        ],
        [
            "A.",
            "From this study we we conclude that the Sparkle S and Sparkle C have the same."
        ],
        [
            "Specially power.",
            "A the idea of the proof is check that the semantics concept in for each kind of graph pattern.",
            "And we also consider this the special nontrivial case when we have filters inside optionals."
        ],
        [
            "Ask Corollary, we have that sparkle is has compositional semantics."
        ],
        [
            "Now we studied expressive power of sparkle.",
            "See by compare it.",
            "Again."
        ],
        [
            "Data look.",
            "First, we have studied transformation from Sparkle, see to Datalog.",
            "And this issue is already known in the literature.",
            "For example, you can see the work of Excel Polaris.",
            "A UN we hang in this process we represent RDF triples and terms as datolo facts in the database context.",
            "Of all the data context.",
            "For the solutions we represent Sparkle mappings as Datalog substitutions.",
            "And especially we represent the unbounded Ballou by a null value by the Noble Lu Ann.",
            "For queries, we represent each graph pattern as a Datalog rule, as a set of little rule."
        ],
        [
            "Really.",
            "For example, consider.",
            "This graph pattern.",
            "We"
        ],
        [
            "I can see that Atripla pattern.",
            "It is represented by a rule.",
            "Having a pre K triple that encodes the dip at are the elements of the of the triple path."
        ],
        [
            "The same for the 2nd."
        ],
        [
            "Butter.",
            "And an operator is implemented as a conjunction of literals.",
            "On the notion of compatible mappings is encoded by 4 rules.",
            "OK, this is an example for each kind of graph pattern we have, we show our transformation."
        ],
        [
            "A we we complete this study or where this comparison?",
            "A by by studying the transformations from Datalog to Sparkle C. For the data, we represent data log facts using RDF triples.",
            "Or we describe Datalog facts using a using RDF triples.",
            "And example.",
            "Each element in the title of fact is represented by a triple.",
            "For solutions, there is a direct representation from Sparkle list from Sparkle mappings to Datalog substitutions."
        ],
        [
            "For queries and considering a Datalog rule having positive literals, negative literals, an equality's.",
            "We define the function G that takes the rule and returns a graph pattern where a the conjunction of positive literals is represented by the UN operator.",
            "The conjunction of negative literals, if represented by using a minus operator that we study in the paper.",
            "On a qualities are represented by filter conditions."
        ],
        [
            "For example, consider the following data log rule."
        ],
        [
            "Note that a literal with breaking name is represented by a set of triples."
        ],
        [
            "The same for the second literal."
        ],
        [
            "And the negation of the second, literal or is represented by a minus operator."
        ],
        [
            "The variables in the goal literal.",
            "Are the same variables the occurs in the select clause?"
        ],
        [
            "Bing.",
            "From this comparison, we conclude that Sparkle, See and Diane Datalog have the same expressive power."
        ],
        [
            "Now, considering that sparkle is equivalent to Sparkle S that is the defragment, allowing only safe filters.",
            "Dang it, sparkle's is equivalent to a sparkle.",
            "See that is the compositional version.",
            "Dang Sparkle City is equivalent to data law.",
            "Anne.",
            "Using the well known result that data law is equivalent to relational algebra."
        ],
        [
            "We can conclude that the sparkle and the relational algebra have the same expressive power.",
            "This in this comparison.",
            "And we we.",
            "All these results call for back on set semantics."
        ],
        [
            "Thank you.",
            "Questions.",
            "Questions.",
            "No questions.",
            "One question.",
            "Two question.",
            "So my question is, from your point of view.",
            "So what are what is the impact of this result on the future?",
            "Work on on sparkle?",
            "So should we just stop working on it 'cause it's the same stuff that database people did for last decades anyways?",
            "Or or what's the implication of for few result?",
            "OK maybe?",
            "A1 objective of the of the work is to determine this press power to see what other requirements are necessary necessary for in this case for sparkle, yes, so a.",
            "Depending of the of the requirements of the application, we can extend sparkle begining in in this in this result.",
            "So to support another kind of of queries, yeah, to support the user.",
            "For example, nesting queries that in some cases can aggregate some more expressive power to the language.",
            "Just a small question to this minus operator three different.",
            "Define it in terms of the other existing operators.",
            "Yes, in the paper we show that the minor spirit or can be simulator or defined by user.",
            "The operators defined by by the original Sparkle specification.",
            "So actually going back to the previous question, one useful outcome of saying that has the same expressivity, or at least can be expressed in relational, is that you get.",
            "You can get 100% pushdown of queries of sparkle queries into relational engine's, so that means that there's a whole lot of data available in the semantic web, which is already been sort of machine machine processed for generations and is good enough for that sort of work.",
            "Yeah.",
            "Don't.",
            "Just.",
            "Oh yeah.",
            "Sorry, I don't you can hear.",
            "My question is, is it possible to prove equivalence between Sparkle and Datalog by introducing a fake predicate with Arity three such as this is true predicate through three power, so we replaced every triple pattern is occurrence of this predicate in summer track updateable query and then rewrite German term by term to match the syntax?",
            "And the negation and data look obviously become optional.",
            "Subquery plus not bound for some variables of it, yeah?",
            "You can hear the computer.",
            "Well, imagine that we have database this facts that is a baseball data log that holds effects like this is a triple of SPN toll, and it consists of only affect service.",
            "This predicate of 83.",
            "As any mighty right sparkle to provoke almost once the one to ones, except if we see a negation in Datalog, we had to write optional clause in sparkle.",
            "Think of exactly this filter northbound.",
            "Something from that optional part.",
            "OK, so it becomes sort of 1 to one rewriting OK, at least I guess we might do in prison cardinalities in that case.",
            "So basically what they did was the direction from data.",
            "Look to spark with the other direction.",
            "I have a paper on the 2007 which is basically there.",
            "Yes, that's exactly the.",
            "With us today.",
            "Yes hello, this one works.",
            "You gave a definition of the expressive power of query languages and also of how to compare them.",
            "So you said well.",
            "And value didn't really do that in general, so my question is not about comparing the expressiveness of the two things that you tried to compare it to query languages, but in general.",
            "So how would you define it?",
            "An equivalence of two arbitrary query languages in expressiveness, and I'm asking this question because it seems to me that is quite hard.",
            "For example, do you take complexity into consideration?",
            "You can ask a query in one language and for example, for example, little difference could for example be.",
            "It's a theoretical example.",
            "If your language in which you only have unary notation for integers, another one, you have decimal notation.",
            "Well, that makes.",
            "Then you can get the same results, but evaluating query language in which you only can write down things union notation is different.",
            "So my question is, do you take complexity, for example, into consideration for defining the equivalence between queries or not?",
            "We don't evaluate the dispersive power.",
            "In this sense of the complexity, we only comparing the results.",
            "They are the results.",
            "Yet the evaluation of queries.",
            "OK, so it means that it means that it could be the case if a query language that has the same expressive power, but it's much more complex.",
            "At the check the the the.",
            "The key balance ghetto check A to compare changes exactly.",
            "Yeah, comparing in terms of complexities is another for an eye.",
            "That's right, it is.",
            "It is, it can be more complex."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, thank you.",
                    "label": 0
                },
                {
                    "sent": "I will finish this as part of the representations.",
                    "label": 0
                },
                {
                    "sent": "A determinant expressive power of query languages is crucial for understanding its capabilities.",
                    "label": 0
                },
                {
                    "sent": "That is what queries the user is able to pose.",
                    "label": 0
                },
                {
                    "sent": "A in this paper we study in depth expressive power of of.",
                    "label": 1
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Sparkle we have two main motivations.",
                    "label": 0
                },
                {
                    "sent": "A considering that the current definition of sparkle semantics is not a standard and unnecessarily complex.",
                    "label": 1
                },
                {
                    "sent": "A week ago.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "That sparkle has a simple compositional semantics, with some exception, very rare exceptions.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And the second motivation is to study the expressive power of sparkle.",
                    "label": 0
                },
                {
                    "sent": "On a.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We have that.",
                    "label": 0
                },
                {
                    "sent": "Or we prove that the sparkle is equivalent in expressing expressive power to relational algebra.",
                    "label": 1
                },
                {
                    "sent": "The.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The outline of the paper is that we review the specification of sparkle.",
                    "label": 0
                },
                {
                    "sent": "A.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We present a version of Sparkle that allows only say filters that we that we call Sparkle S and with.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "After mine that sparkle and Sparkle S are equivalent in their expressive power.",
                    "label": 0
                },
                {
                    "sent": "And then we use the sparkle see that is the compositional version of Sparkle, and we determined that the sparkle is an expert.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Lucy are equivalent.",
                    "label": 0
                },
                {
                    "sent": "Finally.",
                    "label": 0
                },
                {
                    "sent": "We proved that the sparkle C is equivalent to relational algebra.",
                    "label": 1
                },
                {
                    "sent": "A.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "There are both process we show with this tour and the following features features.",
                    "label": 0
                },
                {
                    "sent": "First, with the finest sparkle, the version of Sparkle.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Say filters with the find the key balance.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Then we introduce.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Sparkle, see.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We proved that Sparkle Sienna Sparkle Sr.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "People in.",
                    "label": 0
                },
                {
                    "sent": "Then A to determine the expressive power of sparkle.",
                    "label": 1
                },
                {
                    "sent": "See, we compare it again.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Datalog.",
                    "label": 0
                },
                {
                    "sent": "We showed that they are.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Violent.",
                    "label": 0
                },
                {
                    "sent": "Using the well, no results at the Ridge.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The relational algebra and Datalog, Nonrecursive with negation are equivalent.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We can conclude that Sparkle and their relational algebra are equivalent in their expressive power.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": []
        },
        "clip_20": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "A's introduction we have done that and sparkle query.",
                    "label": 0
                },
                {
                    "sent": "Contains or have three elements, the graph pattern.",
                    "label": 0
                },
                {
                    "sent": "The graph pattern that matches a data set constructed from a set of data set close is the result of this match is a table of mappings that is used by the by the query form.",
                    "label": 1
                },
                {
                    "sent": "To make the final result in this case, we restrict our study to select queries that projects the table of mappings.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We briefly describe the the syntax of sparkle craft patterns with we have triplet patterns that is an RDF triple.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Blues variables.",
                    "label": 0
                },
                {
                    "sent": "And we can.",
                    "label": 0
                },
                {
                    "sent": "We can construct more complex patterns.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "For example, join pattern joining of patterns.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Channel Patterns union of.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Turns filter conditions over.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Others.",
                    "label": 0
                },
                {
                    "sent": "In our work we will use an algebraic syntax that was the finite in sparkle, see.",
                    "label": 0
                },
                {
                    "sent": "The syntax is easier for a formal analysis.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": false,
            "summarization_data": []
        },
        "clip_28": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "A.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "As an introductory example, we can see that the Atripla triple pattern matches the graph and returns a set of mappings and therefore.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "A table.",
                    "label": 0
                },
                {
                    "sent": "And an operator join settles of mappings a whose whose valuations are the same.",
                    "label": 0
                },
                {
                    "sent": "For this, for the four variables.",
                    "label": 0
                }
            ]
        },
        "clip_31": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "In common.",
                    "label": 0
                },
                {
                    "sent": "A filter conditions are used to restrict the solution.",
                    "label": 0
                }
            ]
        },
        "clip_32": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Mappings.",
                    "label": 0
                },
                {
                    "sent": "A we can use the operator.",
                    "label": 0
                },
                {
                    "sent": "To add solution mapping a mappings from option.",
                    "label": 0
                }
            ]
        },
        "clip_33": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The patterns and we can get the union of mappings by by using the Union operator.",
                    "label": 0
                }
            ]
        },
        "clip_34": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Now the evaluation of Spark sparkle patterns as defined by the specification.",
                    "label": 0
                },
                {
                    "sent": "The original specification begins with a syntax.",
                    "label": 0
                }
            ]
        },
        "clip_35": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Form defined by your grammar.",
                    "label": 0
                }
            ]
        },
        "clip_36": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Then they sent us form is transform.",
                    "label": 0
                },
                {
                    "sent": "In an algebra separation, but using algorithms that a contains a case by case by case evaluations.",
                    "label": 0
                },
                {
                    "sent": "Is results in long sparkle.",
                    "label": 0
                }
            ]
        },
        "clip_37": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Algebra.",
                    "label": 0
                },
                {
                    "sent": "And finally, this expression in this pirkle algebra.",
                    "label": 0
                }
            ]
        },
        "clip_38": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Is evaluated to get multi set of mappings of our back of mappings.",
                    "label": 0
                },
                {
                    "sent": "A we will have.",
                    "label": 0
                },
                {
                    "sent": "We will.",
                    "label": 0
                },
                {
                    "sent": "We will like to simplify this this process.",
                    "label": 0
                }
            ]
        },
        "clip_39": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So first we introduce Sparkle S that is the fragment, allowing only say filter patterns.",
                    "label": 0
                },
                {
                    "sent": "Fiercely.",
                    "label": 0
                }
            ]
        },
        "clip_40": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We introduce the notion of expressive power.",
                    "label": 1
                },
                {
                    "sent": "We have that Aquarius definition from the set of input data to a set of output data, and expressive power is defined as the set of queries expressible in the in the language.",
                    "label": 1
                },
                {
                    "sent": "To determine the expressive power of a query language, we can compare it against another query language.",
                    "label": 0
                },
                {
                    "sent": "A.",
                    "label": 0
                }
            ]
        },
        "clip_41": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "On we can say that to query language have dispersive power if they can express the same set of queries.",
                    "label": 0
                }
            ]
        },
        "clip_42": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "A note that if the language operates over different.",
                    "label": 0
                },
                {
                    "sent": "Data inputs and outputs.",
                    "label": 0
                },
                {
                    "sent": "We have to normalize them before the comparison.",
                    "label": 0
                },
                {
                    "sent": "A.",
                    "label": 0
                },
                {
                    "sent": "At.",
                    "label": 0
                }
            ]
        },
        "clip_43": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "For A to introduce Sparkle S. A we can use the following question what is the meaning of a pattern P filter?",
                    "label": 1
                },
                {
                    "sent": "See where we have variables in C, None, none occurring in pig.",
                    "label": 0
                },
                {
                    "sent": "That is a case of an unknown, say filter.",
                    "label": 0
                },
                {
                    "sent": "A.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                }
            ]
        },
        "clip_44": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "In, for example, considering this this pattern, we have that variable T is is non safe.",
                    "label": 0
                },
                {
                    "sent": "A. I mean it occurs in the condition but does not occur in the pattern.",
                    "label": 0
                },
                {
                    "sent": "So what is the evaluation of variable C?",
                    "label": 1
                }
            ]
        },
        "clip_45": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We have two options.",
                    "label": 0
                },
                {
                    "sent": "The first one is consider C as a not defined variable.",
                    "label": 0
                }
            ]
        },
        "clip_46": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And the second one is a.",
                    "label": 0
                },
                {
                    "sent": "To evaluate, see with all possible values from the database.",
                    "label": 0
                }
            ]
        },
        "clip_47": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "In this point, we have that the sparkle, the original sparkle semantics.",
                    "label": 0
                },
                {
                    "sent": "A defiance.",
                    "label": 0
                },
                {
                    "sent": "Case by case semantics.",
                    "label": 0
                },
                {
                    "sent": "That is, is if the expression is inside an optional as index in this example, and the variable C occurs in P, then we apply case 2.",
                    "label": 1
                },
                {
                    "sent": "Else will play games with.",
                    "label": 0
                }
            ]
        },
        "clip_48": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Well.",
                    "label": 0
                },
                {
                    "sent": "Note that patterns with non safe filters are very.",
                    "label": 0
                }
            ]
        },
        "clip_49": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "ISIS.",
                    "label": 0
                },
                {
                    "sent": "On weekends, simulate or replace the these non safe filters with safe ones.",
                    "label": 0
                }
            ]
        },
        "clip_50": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Then we established.",
                    "label": 0
                }
            ]
        },
        "clip_51": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The sparkle and Sparkle S have the same expressive power.",
                    "label": 0
                }
            ]
        },
        "clip_52": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The proof is is a kinetic process to transform a non safe filter patterns in to say once by a considering special.",
                    "label": 0
                },
                {
                    "sent": "The special case when we have case by case evaluation.",
                    "label": 0
                }
            ]
        },
        "clip_53": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "For this we define a function, is that transform.",
                    "label": 0
                },
                {
                    "sent": "Any Potter P in US and in US filter safe pattern?",
                    "label": 0
                },
                {
                    "sent": "For Moscow.",
                    "label": 0
                }
            ]
        },
        "clip_54": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This is a.",
                    "label": 0
                },
                {
                    "sent": "This function works as the identity.",
                    "label": 0
                }
            ]
        },
        "clip_55": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And we have to special cases.",
                    "label": 0
                },
                {
                    "sent": "They feel the first one is when we have filter inside optional.",
                    "label": 0
                },
                {
                    "sent": "In this case the original semantics defines that the scope of of the condition C is extended to the pattern P1.",
                    "label": 0
                },
                {
                    "sent": "So to simulate this feature.",
                    "label": 0
                },
                {
                    "sent": "We include a copy of the one inside the optional pattern.",
                    "label": 0
                },
                {
                    "sent": "If this step does not work, we can apply.",
                    "label": 0
                }
            ]
        },
        "clip_56": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Special case 2.",
                    "label": 0
                },
                {
                    "sent": "Where we replace each known each.",
                    "label": 0
                },
                {
                    "sent": "Trivial or atomic filter condition.",
                    "label": 0
                },
                {
                    "sent": "And we replace it by either hungover or false depending of the filter condition.",
                    "label": 0
                },
                {
                    "sent": "That is not safe.",
                    "label": 0
                }
            ]
        },
        "clip_57": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Hey then.",
                    "label": 0
                },
                {
                    "sent": "Now we introduce.",
                    "label": 0
                }
            ]
        },
        "clip_58": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Sparkle, see.",
                    "label": 0
                },
                {
                    "sent": "At the theater for.",
                    "label": 0
                }
            ]
        },
        "clip_59": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Semantics.",
                    "label": 0
                },
                {
                    "sent": "A includes to have a compositional approach.",
                    "label": 0
                }
            ]
        },
        "clip_60": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Another touch the notational approach.",
                    "label": 0
                }
            ]
        },
        "clip_61": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Which.",
                    "label": 0
                },
                {
                    "sent": "And we have that the spark will see.",
                    "label": 0
                },
                {
                    "sent": "It provides a denotational and composition.",
                    "label": 1
                }
            ]
        },
        "clip_62": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Semantics.",
                    "label": 0
                },
                {
                    "sent": "I will give an overview of Sparkle, see.",
                    "label": 0
                },
                {
                    "sent": "A mapping is a partial function from variables to RDF terms.",
                    "label": 1
                },
                {
                    "sent": "The evaluation of a triple or triple property is the is the set of mappings.",
                    "label": 0
                },
                {
                    "sent": "Product of matching the pattern.",
                    "label": 0
                },
                {
                    "sent": "The triple pattern against the graph.",
                    "label": 0
                },
                {
                    "sent": "You wish.",
                    "label": 0
                }
            ]
        },
        "clip_63": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "If we consider back semantics, that is multisets instead of set of mappings.",
                    "label": 1
                },
                {
                    "sent": "We have that a sparkle juices back semantics.",
                    "label": 0
                },
                {
                    "sent": "However, in general the notion of back semantics is not well understood from a theoretical point of view.",
                    "label": 1
                }
            ]
        },
        "clip_64": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So in this talk, but in this talk we will avoid back semantic details.",
                    "label": 0
                }
            ]
        },
        "clip_65": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Now a spark wall, see.",
                    "label": 0
                },
                {
                    "sent": "Defiance operators of joint difference junior.",
                    "label": 0
                },
                {
                    "sent": "UN left outer join.",
                    "label": 0
                },
                {
                    "sent": "Build one set of mappings.",
                    "label": 1
                },
                {
                    "sent": "Then",
                    "label": 0
                }
            ]
        },
        "clip_66": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This operation operate operations are used to define the semantics of graph patterns.",
                    "label": 0
                },
                {
                    "sent": "A.",
                    "label": 0
                }
            ]
        },
        "clip_67": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The evolution of filters is also simple.",
                    "label": 0
                },
                {
                    "sent": "I know that sparkle.",
                    "label": 0
                },
                {
                    "sent": "See only consider a safe filter patterns.",
                    "label": 0
                }
            ]
        },
        "clip_68": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "A.",
                    "label": 0
                },
                {
                    "sent": "From this study we we conclude that the Sparkle S and Sparkle C have the same.",
                    "label": 0
                }
            ]
        },
        "clip_69": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Specially power.",
                    "label": 0
                },
                {
                    "sent": "A the idea of the proof is check that the semantics concept in for each kind of graph pattern.",
                    "label": 1
                },
                {
                    "sent": "And we also consider this the special nontrivial case when we have filters inside optionals.",
                    "label": 0
                }
            ]
        },
        "clip_70": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Ask Corollary, we have that sparkle is has compositional semantics.",
                    "label": 0
                }
            ]
        },
        "clip_71": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Now we studied expressive power of sparkle.",
                    "label": 1
                },
                {
                    "sent": "See by compare it.",
                    "label": 0
                },
                {
                    "sent": "Again.",
                    "label": 0
                }
            ]
        },
        "clip_72": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Data look.",
                    "label": 0
                },
                {
                    "sent": "First, we have studied transformation from Sparkle, see to Datalog.",
                    "label": 0
                },
                {
                    "sent": "And this issue is already known in the literature.",
                    "label": 1
                },
                {
                    "sent": "For example, you can see the work of Excel Polaris.",
                    "label": 0
                },
                {
                    "sent": "A UN we hang in this process we represent RDF triples and terms as datolo facts in the database context.",
                    "label": 1
                },
                {
                    "sent": "Of all the data context.",
                    "label": 0
                },
                {
                    "sent": "For the solutions we represent Sparkle mappings as Datalog substitutions.",
                    "label": 1
                },
                {
                    "sent": "And especially we represent the unbounded Ballou by a null value by the Noble Lu Ann.",
                    "label": 0
                },
                {
                    "sent": "For queries, we represent each graph pattern as a Datalog rule, as a set of little rule.",
                    "label": 0
                }
            ]
        },
        "clip_73": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Really.",
                    "label": 0
                },
                {
                    "sent": "For example, consider.",
                    "label": 0
                },
                {
                    "sent": "This graph pattern.",
                    "label": 0
                },
                {
                    "sent": "We",
                    "label": 0
                }
            ]
        },
        "clip_74": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I can see that Atripla pattern.",
                    "label": 0
                },
                {
                    "sent": "It is represented by a rule.",
                    "label": 0
                },
                {
                    "sent": "Having a pre K triple that encodes the dip at are the elements of the of the triple path.",
                    "label": 0
                }
            ]
        },
        "clip_75": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The same for the 2nd.",
                    "label": 0
                }
            ]
        },
        "clip_76": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Butter.",
                    "label": 0
                },
                {
                    "sent": "And an operator is implemented as a conjunction of literals.",
                    "label": 0
                },
                {
                    "sent": "On the notion of compatible mappings is encoded by 4 rules.",
                    "label": 0
                },
                {
                    "sent": "OK, this is an example for each kind of graph pattern we have, we show our transformation.",
                    "label": 0
                }
            ]
        },
        "clip_77": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "A we we complete this study or where this comparison?",
                    "label": 0
                },
                {
                    "sent": "A by by studying the transformations from Datalog to Sparkle C. For the data, we represent data log facts using RDF triples.",
                    "label": 0
                },
                {
                    "sent": "Or we describe Datalog facts using a using RDF triples.",
                    "label": 1
                },
                {
                    "sent": "And example.",
                    "label": 0
                },
                {
                    "sent": "Each element in the title of fact is represented by a triple.",
                    "label": 0
                },
                {
                    "sent": "For solutions, there is a direct representation from Sparkle list from Sparkle mappings to Datalog substitutions.",
                    "label": 0
                }
            ]
        },
        "clip_78": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "For queries and considering a Datalog rule having positive literals, negative literals, an equality's.",
                    "label": 1
                },
                {
                    "sent": "We define the function G that takes the rule and returns a graph pattern where a the conjunction of positive literals is represented by the UN operator.",
                    "label": 0
                },
                {
                    "sent": "The conjunction of negative literals, if represented by using a minus operator that we study in the paper.",
                    "label": 0
                },
                {
                    "sent": "On a qualities are represented by filter conditions.",
                    "label": 0
                }
            ]
        },
        "clip_79": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "For example, consider the following data log rule.",
                    "label": 0
                }
            ]
        },
        "clip_80": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Note that a literal with breaking name is represented by a set of triples.",
                    "label": 0
                }
            ]
        },
        "clip_81": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The same for the second literal.",
                    "label": 0
                }
            ]
        },
        "clip_82": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And the negation of the second, literal or is represented by a minus operator.",
                    "label": 0
                }
            ]
        },
        "clip_83": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The variables in the goal literal.",
                    "label": 0
                },
                {
                    "sent": "Are the same variables the occurs in the select clause?",
                    "label": 0
                }
            ]
        },
        "clip_84": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Bing.",
                    "label": 0
                },
                {
                    "sent": "From this comparison, we conclude that Sparkle, See and Diane Datalog have the same expressive power.",
                    "label": 0
                }
            ]
        },
        "clip_85": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Now, considering that sparkle is equivalent to Sparkle S that is the defragment, allowing only safe filters.",
                    "label": 1
                },
                {
                    "sent": "Dang it, sparkle's is equivalent to a sparkle.",
                    "label": 1
                },
                {
                    "sent": "See that is the compositional version.",
                    "label": 0
                },
                {
                    "sent": "Dang Sparkle City is equivalent to data law.",
                    "label": 0
                },
                {
                    "sent": "Anne.",
                    "label": 0
                },
                {
                    "sent": "Using the well known result that data law is equivalent to relational algebra.",
                    "label": 1
                }
            ]
        },
        "clip_86": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We can conclude that the sparkle and the relational algebra have the same expressive power.",
                    "label": 1
                },
                {
                    "sent": "This in this comparison.",
                    "label": 0
                },
                {
                    "sent": "And we we.",
                    "label": 1
                },
                {
                    "sent": "All these results call for back on set semantics.",
                    "label": 0
                }
            ]
        },
        "clip_87": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Thank you.",
                    "label": 0
                },
                {
                    "sent": "Questions.",
                    "label": 0
                },
                {
                    "sent": "Questions.",
                    "label": 0
                },
                {
                    "sent": "No questions.",
                    "label": 0
                },
                {
                    "sent": "One question.",
                    "label": 0
                },
                {
                    "sent": "Two question.",
                    "label": 0
                },
                {
                    "sent": "So my question is, from your point of view.",
                    "label": 0
                },
                {
                    "sent": "So what are what is the impact of this result on the future?",
                    "label": 0
                },
                {
                    "sent": "Work on on sparkle?",
                    "label": 0
                },
                {
                    "sent": "So should we just stop working on it 'cause it's the same stuff that database people did for last decades anyways?",
                    "label": 0
                },
                {
                    "sent": "Or or what's the implication of for few result?",
                    "label": 0
                },
                {
                    "sent": "OK maybe?",
                    "label": 0
                },
                {
                    "sent": "A1 objective of the of the work is to determine this press power to see what other requirements are necessary necessary for in this case for sparkle, yes, so a.",
                    "label": 0
                },
                {
                    "sent": "Depending of the of the requirements of the application, we can extend sparkle begining in in this in this result.",
                    "label": 0
                },
                {
                    "sent": "So to support another kind of of queries, yeah, to support the user.",
                    "label": 0
                },
                {
                    "sent": "For example, nesting queries that in some cases can aggregate some more expressive power to the language.",
                    "label": 0
                },
                {
                    "sent": "Just a small question to this minus operator three different.",
                    "label": 0
                },
                {
                    "sent": "Define it in terms of the other existing operators.",
                    "label": 0
                },
                {
                    "sent": "Yes, in the paper we show that the minor spirit or can be simulator or defined by user.",
                    "label": 0
                },
                {
                    "sent": "The operators defined by by the original Sparkle specification.",
                    "label": 0
                },
                {
                    "sent": "So actually going back to the previous question, one useful outcome of saying that has the same expressivity, or at least can be expressed in relational, is that you get.",
                    "label": 0
                },
                {
                    "sent": "You can get 100% pushdown of queries of sparkle queries into relational engine's, so that means that there's a whole lot of data available in the semantic web, which is already been sort of machine machine processed for generations and is good enough for that sort of work.",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "Don't.",
                    "label": 0
                },
                {
                    "sent": "Just.",
                    "label": 0
                },
                {
                    "sent": "Oh yeah.",
                    "label": 0
                },
                {
                    "sent": "Sorry, I don't you can hear.",
                    "label": 0
                },
                {
                    "sent": "My question is, is it possible to prove equivalence between Sparkle and Datalog by introducing a fake predicate with Arity three such as this is true predicate through three power, so we replaced every triple pattern is occurrence of this predicate in summer track updateable query and then rewrite German term by term to match the syntax?",
                    "label": 0
                },
                {
                    "sent": "And the negation and data look obviously become optional.",
                    "label": 0
                },
                {
                    "sent": "Subquery plus not bound for some variables of it, yeah?",
                    "label": 0
                },
                {
                    "sent": "You can hear the computer.",
                    "label": 0
                },
                {
                    "sent": "Well, imagine that we have database this facts that is a baseball data log that holds effects like this is a triple of SPN toll, and it consists of only affect service.",
                    "label": 0
                },
                {
                    "sent": "This predicate of 83.",
                    "label": 0
                },
                {
                    "sent": "As any mighty right sparkle to provoke almost once the one to ones, except if we see a negation in Datalog, we had to write optional clause in sparkle.",
                    "label": 0
                },
                {
                    "sent": "Think of exactly this filter northbound.",
                    "label": 0
                },
                {
                    "sent": "Something from that optional part.",
                    "label": 0
                },
                {
                    "sent": "OK, so it becomes sort of 1 to one rewriting OK, at least I guess we might do in prison cardinalities in that case.",
                    "label": 0
                },
                {
                    "sent": "So basically what they did was the direction from data.",
                    "label": 0
                },
                {
                    "sent": "Look to spark with the other direction.",
                    "label": 0
                },
                {
                    "sent": "I have a paper on the 2007 which is basically there.",
                    "label": 0
                },
                {
                    "sent": "Yes, that's exactly the.",
                    "label": 0
                },
                {
                    "sent": "With us today.",
                    "label": 0
                },
                {
                    "sent": "Yes hello, this one works.",
                    "label": 0
                },
                {
                    "sent": "You gave a definition of the expressive power of query languages and also of how to compare them.",
                    "label": 0
                },
                {
                    "sent": "So you said well.",
                    "label": 0
                },
                {
                    "sent": "And value didn't really do that in general, so my question is not about comparing the expressiveness of the two things that you tried to compare it to query languages, but in general.",
                    "label": 0
                },
                {
                    "sent": "So how would you define it?",
                    "label": 0
                },
                {
                    "sent": "An equivalence of two arbitrary query languages in expressiveness, and I'm asking this question because it seems to me that is quite hard.",
                    "label": 0
                },
                {
                    "sent": "For example, do you take complexity into consideration?",
                    "label": 0
                },
                {
                    "sent": "You can ask a query in one language and for example, for example, little difference could for example be.",
                    "label": 0
                },
                {
                    "sent": "It's a theoretical example.",
                    "label": 0
                },
                {
                    "sent": "If your language in which you only have unary notation for integers, another one, you have decimal notation.",
                    "label": 0
                },
                {
                    "sent": "Well, that makes.",
                    "label": 0
                },
                {
                    "sent": "Then you can get the same results, but evaluating query language in which you only can write down things union notation is different.",
                    "label": 0
                },
                {
                    "sent": "So my question is, do you take complexity, for example, into consideration for defining the equivalence between queries or not?",
                    "label": 0
                },
                {
                    "sent": "We don't evaluate the dispersive power.",
                    "label": 0
                },
                {
                    "sent": "In this sense of the complexity, we only comparing the results.",
                    "label": 0
                },
                {
                    "sent": "They are the results.",
                    "label": 0
                },
                {
                    "sent": "Yet the evaluation of queries.",
                    "label": 0
                },
                {
                    "sent": "OK, so it means that it means that it could be the case if a query language that has the same expressive power, but it's much more complex.",
                    "label": 0
                },
                {
                    "sent": "At the check the the the.",
                    "label": 0
                },
                {
                    "sent": "The key balance ghetto check A to compare changes exactly.",
                    "label": 0
                },
                {
                    "sent": "Yeah, comparing in terms of complexities is another for an eye.",
                    "label": 0
                },
                {
                    "sent": "That's right, it is.",
                    "label": 0
                },
                {
                    "sent": "It is, it can be more complex.",
                    "label": 0
                }
            ]
        }
    }
}