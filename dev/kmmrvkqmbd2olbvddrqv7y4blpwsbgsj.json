{
    "id": "kmmrvkqmbd2olbvddrqv7y4blpwsbgsj",
    "title": "Online strategies with applications to search and exploration",
    "info": {
        "author": [
            "Bengt J. Nilsson, Malm\u00f6 University"
        ],
        "published": "Oct. 3, 2014",
        "recorded": "September 2014",
        "category": [
            "Top->Mathematics",
            "Top->Computer Science"
        ]
    },
    "url": "http://videolectures.net/lads2014_nilsson_online_strategies/",
    "segmentation": [
        [
            "It's a real pleasure to be here and I'm.",
            "The first thing I'm going to ask how many of you are?",
            "I've done anything on know anything about competitive analysis or online algorithms.",
            "One person excellent I was in last night.",
            "I was thinking what if they already all know this stuff already?",
            "Then that'll be really really difficult.",
            "But since it seems only one of you have heard about this, I will start with a really basic introduction to online algorithms and competitive analysis.",
            "And at least the introductory part is based on results that are published in two books.",
            "Start with that one.",
            "This one is already from 1998.",
            "It's called online computation and competitive analysis by Borodin.",
            "Annelien, if came out about 15 years ago.",
            "And.",
            "This one's even older.",
            "This one is by Alperin and gal theory of such games and rendezvous problems.",
            "Both of them are still available, I think.",
            "Excellent textbooks if you want to use them for a course, so just read them as they are a lot of nice results in there.",
            "Right, so let's get going.",
            "Please interrupt me if if you have a question or anything.",
            "I'm open to all sorts of.",
            "Questions, yeah."
        ],
        [
            "So.",
            "This series of lectures of the sequence of presentations or whatever you want to call them is going to contain this stuff here, so I'll start with presenting what an online problem is and look at competitive analysis and give a few.",
            "Hopefully they'll be explanatory examples of these will do 3 problems and four algorithms.",
            "Then I look move will move into search and exploration problems and see how they can connect to.",
            "Competitive analysis specifically we look for.",
            "Algorithms or machinery that deal with searching for a target on the line.",
            "Multiple agents working on several lines will look for searching on for a target in a monotone Polygon in.",
            "Street Polygon as well.",
            "Actually an will going to exploration problems of different types give you a computational overview of those.",
            "We look at how to explore rectilinear polygons.",
            "We look a little bit on how to explore simple polygons and then one of my pet problems that is still wide open is how to explore trees with multiple agents.",
            "So we'll come to this huge open problem that I've got at the end that will be on Friday, so you'll have a week too.",
            "Ponder these things right?",
            "So the first quest."
        ],
        [
            "And is what is an online problem?",
            "Well, a normal computational problem is you get some sort of input and you want to produce some sort of output on that.",
            "In order to do that, you construct algorithms and you look at the complexity of the algorithms in terms of of time in terms of memory and maybe other types of resources as well.",
            "In the online situation.",
            "We have a slightly different setup in the sense that you don't get all the input at once.",
            "You get them in little pieces, little chunks.",
            "And for every little chunk of input you get, you need to be able to produce a reasonable.",
            "Answer To the problem so far, given that the input is limited to what you've seen produce the best answer.",
            "That you can and then you'll get more input.",
            "And the problem then is, well, you're not allowed to retract on the answers you've already given.",
            "If you said X was true, you cannot suddenly after awhile said no, I'll change.",
            "My mind was actually false.",
            "You have to keep X was true, so you limited in the number of choices that you can do.",
            "Based on what you've done before.",
            "So an optimal algorithm for a. Computational problem of this type would look at all the input.",
            "I try to give a good answer, whereas in the online situation we have to give an answer.",
            "Every time we get another piece of the input.",
            "Anne, it's got to be as good as possible.",
            "And that's the problem.",
            "How do you measure the performance of these things?",
            "So what do we mean by as good as possible?",
            "What is the optimization criterion here?"
        ],
        [
            "Well bit of formalism.",
            "So.",
            "Actually, I forgot something.",
            "And that was my main point."
        ],
        [
            "On the previous slide, I forgot to talk about that.",
            "And that is instead of calling these things algorithms.",
            "I tend to call them strategies instead, and the reason for that is that the word algorithm has certain connotations that have to do with compute ability.",
            "There is no algorithm for the halting problem.",
            "For instance, we have computational limits to what we can do.",
            "In the online situation, I want to get rid of all of that.",
            "All that connotation?",
            "So I use the word strategy instead, because I allow you to solve arbitrarily hard problems instantly.",
            "In the problems we're going to look at that will not be necessary, but in principle you're allowed to do that.",
            "So whenever I talk about strategies.",
            "And see if I can point properly that strategy is like that.",
            "I mean something that does computation but doesn't really have any limits to it.",
            "That is a personal preference of mine.",
            "You talk to Ian or to Andre.",
            "They might have a completely different view on this.",
            "I'm indoctrinating you."
        ],
        [
            "Right, so back to the performance issue.",
            "So a strategy F here does something on input I and it's compute some sort of output on that.",
            "And we have also an optimal solution, and the optimal solution is sneaky in the sense that.",
            "It knows the complete set of input.",
            "And as the best it can, it is allowed to compute the best input.",
            "Giving the whole set.",
            "And then we have some sort of cost function.",
            "In all the cases, we're going to look at, it will be minimization problems, so we'll talk about cost functions rather than profit functions.",
            "But for maximization, the theory pretty much works the same way.",
            "So we have some sort of cost function that we want to minimize.",
            "And we say that.",
            "A strategy in this case S is are competitive if the cost for the strategy on input I.",
            "Is it my most R times?",
            "The cost for the optimal.",
            "Strategy.",
            "Plus some constant that you're allowed to add.",
            "But this has to hold for all input sequences.",
            "So R is basically the supremum overall.",
            "Input instances.",
            "And we call R here the competitive factor.",
            "Or competitive ratio.",
            "If you do the division and so on, it turns out that this is equivalent to having the ratio between the cost of the strategy and the cost of the optimum to be limited by our plus epsilon, where epsilon can be made as small as you want.",
            "For instance, is that I've cost sufficiently large."
        ],
        [
            "So here's the first.",
            "This is the first example on compute online problems.",
            "It's called the ski ski rental problem, and it's the first one you always see, so I'll give you that one as well.",
            "Anne.",
            "The problem is the following.",
            "You have been invited to go skiing.",
            "And this is the first time you go skiing, so you need skis in Slovenia.",
            "I suppose that's not too much of a problem, but.",
            "You need skis.",
            "And you have the option of actually buying skis or just renting them for a week, and you want to optimize the amount of money you spend.",
            "In relationship to what the optimal strategy would spend?",
            "So you have these two options, you can rent skis for and I check these values, they're reasonable.",
            "I think, at least in Sweden it costs to rent skis for a week, roughly 60 euros.",
            "And a reasonable pair of of Alpine skis costs about 600 euros.",
            "I think anyone know?",
            "Reasonable figures good.",
            "So you rent skis for 60 euros per week, or you can buy skis at 600 euros and then to simplify the analysis we assume they last for a lifetime, so you never have to go back to renting or buying again once you've bought a pair of skis.",
            "And the optimization criterion that we're looking for is to minimize the cost for skis.",
            "So what is the smallest amount of money you can?",
            "You can pay for using."
        ],
        [
            "So here is a list of the optimum costs.",
            "If you don't go skiing at all, you don't have to rent any skis so that you could cost of renting skis is 0 after if you do it one week, 62 weeks 120, and so on up until you get to 10 weeks.",
            "So if you go skiing 10 weeks, you have to pay 600 euros independently of whether you buy skis to begin with, or whether you rent.",
            "Up until the 10th week, but as of Week 11.",
            "Of course, the optimum is just to make sure you bought the skis already in the beginning and you then pay 600 euros.",
            "For 12 weeks it's the same 1314 and so on.",
            "So it's a linear function that goes up like that and then flattens out.",
            "OK. And.",
            "Meet Alvin the adversary.",
            "So.",
            "The analysis for.",
            "These and.",
            "Other type of.",
            "Online problems very often use.",
            "Adversary based arguments.",
            "And Mr. Alvin here is the one who's going to to mess us up.",
            "Make sure we do as badly as possible.",
            "Depending on the strategy that we choose in order to rent skis.",
            "And Alvin, you'll see him around a couple of times during my presentation."
        ],
        [
            "So I'll give you 2 examples strategies here the first one.",
            "Is.",
            "You just make sure you buy skis.",
            "Before week one.",
            "Before you go ski well, what Alvin does then is break your legs.",
            "And make sure you never go skiing.",
            "And because that will ensure that Alvin wins.",
            "Buy an infinite amount so the cost you paid 600.",
            "Where is Alvin?",
            "Paid nothing.",
            "Because you never went skiing, so the ratio here is infinite.",
            "Another possibility is OK.",
            "I'll always rent skis.",
            "I will never, ever.",
            "Bye.",
            "With that case.",
            "Alvin decides that you go skiing very often.",
            "And he will make sure that you go as often as possible.",
            "And if N is the number of times you go skiing.",
            "End Times 60, which is what you pay divided by 600, goes towards Infinity as an increasing so.",
            "You can basically have an arbitrary competitive ratio here as well.",
            "Right?"
        ],
        [
            "So let's look at an interesting set of strategies.",
            "The two ones we saw are basically at the two endpoints of these, so there is a parameter K which is which basically tells when you buy the skis so.",
            "You rent skis until we K. And before we K plus one.",
            "You buy some skis and since they last for an eternity, you never have to go back to buying again or renting again.",
            "So what Alvin then decides, and this is turns out to be the best case is.",
            "He decides that you go skiing exactly K times because that's when you pay the most and he pays the least.",
            "Well.",
            "So you will pay.",
            "You will rent K times so that 60 * K and after that you buy.",
            "So you pay an additional 600 for the for this keys, whereas Alvin.",
            "He pays K * 60 If K smaller than 10 and 600 otherwise.",
            "And here is the ratio here, but.",
            "For different values of K, so for zero we already knew that was an infinite.",
            "If you go twice, the ratio is 6.",
            "If we go four times at three and a half.",
            "6 * 2 and a third 8 * 225, and so on.",
            "And when you get to 10.",
            "It ends up being 2.",
            "But then when you get to 11 it starts increasing again.",
            "2.1 Two point 2 two point 4 and so on.",
            "OK.",
            "So the best case seems to be that you rent skis 10 times and then you buy skis.",
            "So you get this type of curve.",
            "Where the bottom exactly when the cost of skis is exactly the same as.",
            "The number of times you.",
            "Go skiing times the price, so when these are the same, that's when you should.",
            "That's when you have the bottom of that curve."
        ],
        [
            "So you can generalize this for.",
            "Arbitrary values of skis.",
            "If you have.",
            "The possibility to rent skis for ex heroes.",
            "And the cost for buying skis is why?",
            "And we assume of course, these are natural values.",
            "So so why has to be greater than X and all these things are definitely positive.",
            "So.",
            "The different possible strategies you can have is you rent up until we K and then you buy skis before you go.",
            "The K plus first time where K is any number.",
            "Greater than or equal to 0.",
            "So then the best strategy and the calculations are fairly easy.",
            "Is to rent skis K times, where K is the largest value greater than smaller than.",
            "Huawei divided by X and then biskis after that.",
            "And this guarantees.",
            "That competitive factor here, which tends to two.",
            "For appropriate values of X&Y.",
            "And the set of strategies that we have here rent skis until we, K and then buy skis before we keep this one actually incompass all possible strategies becausw skis once you've bought them will last forever.",
            "And of course change this and House keys break after a certain time, so you have to go back.",
            "But in essence, this is the simplest version of the ski rental problem problem.",
            "So for this particular case, there's no strategy that does any better, because we've pretty much looked at all of them.",
            "The strategies of that we.",
            "Road down here.",
            "Basically, encompass all possible strategies."
        ],
        [
            "The second example is.",
            "From 1985.",
            "Slater and tarjan's.",
            "Data structure problem.",
            "And that's where the concept of.",
            "Competitive analysis's basically started.",
            "There have been previous examples of this, but it wasn't called competitive analysis.",
            "Called.",
            "Used to be called min Max calculation min Max algorithms.",
            "Things like that, but Slater intelligent introduced this general framework for dealing with the online problems and did that using.",
            "Basically 2 problems that.",
            "I'm going to show you.",
            "So the first problem.",
            "Data structures problem.",
            "That deals with the list structure that has a certain side M. And you get a sequence of requests for that.",
            "List structure.",
            "And the idea is you need to access the appropriate element.",
            "And return it.",
            "And the idea is to organize the list so that.",
            "The work you do in order to fulfill a particular request or a sequence of requests actually is as small as possible.",
            "And now.",
            "The operations that you're allowed to do into the list.",
            "Are basically two you're allowed to access.",
            "A certain element X.",
            "If it's in position J.",
            "That access is going to cost you J.",
            "After that, once you've accessed X in position J, you're allowed to move it towards the front of the list.",
            "At no extra cost, that's free.",
            "But any other move that you do if you move something that you just you haven't accessed.",
            "In the step before.",
            "Or you're moving it further back in the list.",
            "That will cost you the number of steps you move.",
            "Anne.",
            "Is this a reasonable model for list accessing?",
            "I suppose so could be argued at least linkedlist sort of work like that.",
            "I talked to Ian before.",
            "He's not too happy with the model.",
            "But maybe he'll say a bit more about that tomorrow, I don't know.",
            "But this is the model that we're going to use, and I'm using it not because the model is a good one, but because I want to illustrate the concept of competitive analysis.",
            "Sir.",
            "What we want to optimize is the total number of the total cost for all the accesses that you're going to do."
        ],
        [
            "So.",
            "Thinking about this that immediately leads you to a number of different strategies that you can use.",
            "So here is a list.",
            "Of six elements consisting of 1124, eighteen, 1439, and 12.",
            "And we have a request sequence that asks for 24, fourteen, 3914 and 14.",
            "So if you do nothing and just walk down the list, accessing 24 will cost you two.",
            "Accessing 14 will cost you 4.",
            "Accessing 39 will cost you 5, and then you've got 2 * 14 again, and those will cost you four each.",
            "So the total cost here in this example is 19.",
            "And that's when you have done the restructuring, so we'll look at a few other strategies and see how you can improve on.",
            "This list access problem, so the first one is transpose.",
            "Where?",
            "You move the requested item just one step closer to the.",
            "Head of the list just one step back.",
            "Forwards in into the list.",
            "Another one is frequency count, which maintains a list sorted on the frequency of the number of accesses that you get.",
            "The third one is MTF moved to front.",
            "Which.",
            "Allows every retrieval that you do, every access that you do gets moved to the head of the list.",
            "And then, of course the optimal one will have a look at that one.",
            "And it turns out not to be an online strategy because it needs in order to be optimal it needs.",
            "To know the full request sequence in order to work properly."
        ],
        [
            "So here is the transpose.",
            "How does that work?",
            "Well.",
            "We'll start by accessing 24, and that costs us two, and transpose allows allows us then to move the.",
            "The element that we accessed one step further to the head.",
            "So 24 moves from.",
            "Opposition down to that position.",
            "Then we access 14 which is over here.",
            "And 14 will then move be moved one step further towards the head.",
            "Then we access 39.",
            "Which is there?",
            "And it gets moved one step further to the head.",
            "14 again.",
            "It move, it gets moved one step further to the head and then another 14 and it moves to the head of the list.",
            "If we look at the costs for each of these operations, we get 245, three and two with a total of 16.",
            "And one might think this is a very good algorithm or very good strategy.",
            "But here Alvin of course comes in and says well, not too happy.",
            "What if I request 12 and 39 all the time alternatingly?",
            "That means that 12 would be moved to one step further down the list.",
            "Then you access 39.",
            "That's in the last position now, so it gets moved further.",
            "One step further to the list, and so on, right?",
            "So you pay M times the length of the request sequence there, whereas an optimal strategy would know this.",
            "And of course move these two elements.",
            "To the head of the list, so you will pay at most two times the length of the request sequence, so you get a competitive ratio of at best M / 2."
        ],
        [
            "Frequency count.",
            "Well, frequency count does the following.",
            "It maintains an extra counter for every element.",
            "And we access 24.",
            "So 24 is in position two, we pay 2 for that.",
            "And increase the counter by 1.",
            "So we maintain that list now sorted so it gets moved to the further down towards the head of the list until it reaches one element that has a higher counter when we stop.",
            "In this case, this doesn't happens.",
            "It ends up first in the list, then we access 1414 is here.",
            "It's counter gets increased by one and we move it.",
            "As.",
            "Close to the head as we can 39 same thing.",
            "It ends up here.",
            "14 again it ends up now at the head and 14 again, so we maintain a sorted list of.",
            "The frequencies, so once again the cost for accessing the 1st three elements is the same as before, but the.",
            "Accessing the two last four teens gets a bit cheaper and we pay 14 here.",
            "The drawback with this pardon?",
            "Well, he he pays one to access the last 14 here.",
            "So you access something.",
            "I return, I have to return the element to the thing so that that's what you pay for.",
            "No, there's no dilution in this.",
            "It's just a retrieval.",
            "There's no deletions.",
            "We don't remove anything.",
            "We just have to get you just get the element return it.",
            "Yeah, so find me #14.",
            "Unreturning there might be an additional data structure associated to this with with loads of interesting information that you need, but.",
            "14 Here is the key that you searching for, right?",
            "Yeah.",
            "The drawback with this is of course that you have to have this extra counter.",
            "So.",
            "It takes.",
            "At least twice the space."
        ],
        [
            "Move to front.",
            "Well.",
            "I'm sure you can guess what happens here.",
            "We access 2424, gets moved to the head, we Access 14, we pay for and move it to the head.",
            "39 It gets moved to the head.",
            "14 again it gets moved to the head and the last 14 is already at the first position.",
            "So you pay just the one for that again 2 + 4 + 5 + 2 + 1 is 14.",
            "That's the cost for this."
        ],
        [
            "The optimal strategy.",
            "Well, it requires the full sequence to be known in advance, but this is sort of clear.",
            "But then what you can do then is actually reduce the cost by 1.",
            "Anne, it's clear that the first 3 ones, 214 and 39, they're going to cost 2, four and five independently of what you do.",
            "But 14 is requested two more times, so for the optimum it's beneficial for.",
            "To make sure that it's when it's exists the second time that it is in the first position."
        ],
        [
            "Right, so in order I want to analyze the move to front strategy.",
            "That's the one that seemed to have.",
            "Good.",
            "Properties.",
            "And in order to do that, I need a concept I need to define a concept.",
            "So suppose I have two lists L1 and L2.",
            "I want to define the concept of an inversion.",
            "So an inversion is simply.",
            "The number of.",
            "Pairs.",
            "That occur in different orders in the two lists, right?",
            "So let's consider that pair the red pair here in L 111 followed by 39 over here.",
            "So they come in the order 1139.",
            "In L2 they turn up in the reverse order is 39 first and 11 second, so that's an inversion.",
            "So between L1 and L2 there's an inversion consisting of L1 of 11 and 39.",
            "Let's take another example.",
            "The black ones 24 and 12.",
            "Well, they occur in the same order in these two lists, so there's no inversion there, right?",
            "And I think this for the blue pair we've got 18 and 14 and then the other one.",
            "We've got 14 and 18, so there is an inversion.",
            "Everyone is happy with the this definition.",
            "OK, good.",
            "Sir.",
            "If you can't, then the total number of inversions in this example.",
            "So you go through them all.",
            "So start with 1120, four 2411.",
            "That's one inversion, and so on.",
            "You get 7 for this particular example.",
            "One thing to note also, if that is that if you take a list.",
            "And ask for the number of inversions between the list and itself.",
            "That is always a 0."
        ],
        [
            "So now I need a few things.",
            "So TI is the cost of a particular request.",
            "The ice request in the move to front strategy.",
            "And Faeid now denotes the number of inversions that you have between the.",
            "Current MTF list.",
            "And the optimal list after exactly I request.",
            "And then.",
            "You invent a new cost called amortized cost, which is simply TI.",
            "Actual cost of the request.",
            "In MTF plus the number of inversions that.",
            "You have after the request, minus the number of inversions you had before the request, so.",
            "It is the actual cost.",
            "Plus then they increase or decrease in the number of inversions that you get.",
            "Right, so let's look at what this actually becomes.",
            "So if we look at the cost for MTF here, it's clear that it's the sum of all the all the costs for the request, and some of T. And simple algebra gives you that.",
            "This is the sum of the AI is minus five I + 5 -- 1.",
            "Can you do a sum here?",
            "You get a telescoping sum that gives you five 0 -- 5 Sigma.",
            "AN50 is the.",
            "The number of inversions between the move to front list and the optimal list before you've done any.",
            "Accesses, which means they are the same list.",
            "So that's zero.",
            "And Phi Sigma, where the number of inversions is always a positive number.",
            "So.",
            "You've got a - there, so this is actually a negative thing plus the sum of the amortized cost.",
            "So this is at most the sum of the amortized cost.",
            "Very simple analysis.",
            "So now we know that the cost for the move to front over a sequence is at most the cost of the amortized.",
            "Cost for each of the requests."
        ],
        [
            "So what we do is we look at.",
            "One particular.",
            "Request and we say that it accesses Element X, which is in position J in the optimal list and position K. In the move to front list, an J&K are chosen arbitrarily.",
            "We know significant in using these.",
            "Right?",
            "So.",
            "Let's look at the number of elements that lie before X in the MTF list.",
            "Right?",
            "We do the access there here.",
            "Right, but that are after in the optimal list.",
            "I've marked those with asterisks.",
            "And let's denote that number V. So those V guys to the left of X in MTF.",
            "But to the right of X in opt.",
            "So that means that.",
            "All the other ones, the ones that are blank.",
            "R to the left of X in MTF, but there also to the left of X.",
            "In the optimal list, so they are on the same side.",
            "So that means that the number of.",
            "Positions here.",
            "Is.",
            "At least.",
            "K -- V V was the number of asterisks we had.",
            "K -- V -- 1.",
            "And that is at most the number of elements we've got here.",
            "So at most J -- 1.",
            "So we get this inequality.",
            "That's important.",
            "K -- V is at most J.",
            "You might want to.",
            "Have a deeper look at that.",
            "But it turns out to be quite obvious if you think about it.",
            "So the number of blank guys is though the thing we counting, and since they are blank they also have to be here, which means that we need space enough for them, right?",
            "So the number of blank is K -- V, so Jay has to be larger.",
            "OK, and the rest is just simple algebra, so the amortized cost for this step is.",
            "Equal to the total cost plus the differences in the number of inversions.",
            "Well, so let's count the number of inversions.",
            "What happens here is that all the guys that were to the left.",
            "Here.",
            "End up being to the right since we didn't move to front X.",
            "After the.",
            "Access.",
            "Ends up at the first position so they are now to the right.",
            "So that means that all the guys that are Asterix here were in versions before.",
            "But have stopped being them now so.",
            "That means that.",
            "We reduce the number of inversions by V. TI of course is K because we're at The Cave position here, so we caught pay a cost of of K to access X here, so K -- V. But then of course all the blank ones that were here.",
            "End up too also to the right so they turn out to become inversions.",
            "From not being before, they now are inversions, so we have to add those we've reduced by V and the number of inversions we introduce is K -- V -- 1.",
            "And a little bit of algebra gives you this 2 * K -- V -- 1, which is at most using that 2 * J -- 1 and J is exactly the cost of.",
            "For the optimum of doing the access.",
            "So we pay two times the cost of the optimum minus one."
        ],
        [
            "So just to continue the analysis, have you doing this really in depth so that I hope you don't lose?",
            "You might find this boring, but I want to do this in depth so that you really understand this, because I think it's important.",
            "Alright, we knew from the start that the total cost for the MTF strategy was at most the sum of the amortized costs.",
            "We knew that this was two times the cost of each of the optimal steps minus one, so this is 2 times the cost of the optimum minus.",
            "The cost minus the length of the request sequence, and since each request pays it moves M. The maximum you can have is Sigma times M. So this ends up being the.",
            "Competitive factor so for short lists your list of one will give you an optimal solution.",
            "But larger lists.",
            "Will.",
            "As the size of the list increases, will tend you two more towards 2.",
            "And this is with a very simple algorithm or very simple strategy.",
            "Doing something really, really.",
            "Simple, it accesses the element and moves it towards the front.",
            "You can show also that.",
            "It doesn't have to be a static list.",
            "You can do the same analysis using.",
            "Dynamic lists where you allow insertions you allow deletions.",
            "And it will turn out being pretty much the same results.",
            "Right?"
        ],
        [
            "The second problem that.",
            "They looked at was the following.",
            "And it relates to to Andre's presentation this morning.",
            "Which have to do about optimizing paging.",
            "The paging problem.",
            "So you have some slow memory.",
            "And some fast memory will call that cash.",
            "And.",
            "The amount of slow, fast memory that you've got is K blocks.",
            "It's a small amount in relationship to the M blocks that you have of slow memory.",
            "And then you have a number of memory requests, so you're requesting addresses inside a particular page.",
            "I'm sure you've done an operating systems course or something like that, so you're familiar with this stuff, right?",
            "So two things can happen.",
            "If the request is in the cache, well, that's free.",
            "You don't pay anything.",
            "If the request is not in the cache, well, you then you have to get that page into the cache.",
            "Before you can access it.",
            "But if the cache is full, you have to evict some other page.",
            "And this is expensive operation, so that'll cost you something.",
            "This is called a page fault and we have to pay one for that.",
            "So we want to minimize the number of page faults that yeah."
        ],
        [
            "The most.",
            "Common paging algorithm.",
            "Which is also an online algorithm, is called least recently used.",
            "Here's an example.",
            "If you've never seen it before.",
            "We're assuming a cache of full pages, so it's a very small cash.",
            "We assume that it's already been filled with the values, in this case twelve, 3914, and 18.",
            "It turns out the least recently used functions pretty much in the paging example, like move to front did I wouldn't recommend implementing it like that, but.",
            "The way it functions is pretty much in that order because.",
            "Least recently used if you maintain.",
            "The pages.",
            "In the DMTF order, you will always evict the last one.",
            "On the page or last one in the cache.",
            "So twelve, 3914 and 18 have been put in notice that they end up in the reverse order.",
            "Since 18 is the last one that was accessed.",
            "So 24 is the next element to request that one ends up in the.",
            "At the top of the list and we move everything else one step down so the one that gets evicted here is 12 since 24 was not in the list, we pay a cost of 1.",
            "39 While 39 is in the last position, so it's accessed.",
            "That costs us nothing.",
            "And be it get gets moved to the first position.",
            "Then we access 11.",
            "11 is not in the list, so we evict 14.",
            "11 is put into the first position, and so on.",
            "And you see that this.",
            "Example will cost you 4."
        ],
        [
            "Another, not online strategy is something called longest forward distance, and that turns out to be the optimal strategy and the reason for that is that it looks into the future.",
            "And evict the page that is going to be.",
            "Requested the last out of all the pages that are in the cache.",
            "Right, so it looks at all the guys that are in the cache and picks to evict the one that is going to be.",
            "Requested the latest.",
            "Looking into the future.",
            "And here we get an optimal cost of three.",
            "Once again, I've put in twelve 3914 and 18 for free.",
            "25 gives you a page fault, and then it turns out that.",
            "Let's see.",
            "How is this 39?",
            "Is requested again, so will make sure to keep that, but neither 24 nor 11 is requested ever again.",
            "So we can evict those.",
            "And that's what we do, I think.",
            "No, it's actually a team that never.",
            "That I have 1824 and 11 never gets picked again so we can evict any one of those."
        ],
        [
            "So a simple lower bound proof.",
            "Of.",
            "So this is apparently the first formal proof in this building.",
            "And it's about paging K. Here is the size of the cache, and we assume that M here the slow memory just.",
            "Contains one more page than the than the cache.",
            "And the claim then is that.",
            "You give me any request sequence and LFZ.",
            "Will.",
            "A Victor page.",
            "At most every case time.",
            "So.",
            "The cost is the length of Sigma divided by K. And.",
            "The argument is quite simple, so suppose.",
            "In evict a page P. At time step I.",
            "Well, that one is.",
            "The furthest one that's going to be requested out of all the guys that are in the in the cache at the moment, which means that everyone else is going to be requested before P. There's K -- 1 other guys so we have K -- 1.",
            "Succeeding requests before we get to this to pee again.",
            "At least they can be more, but at least.",
            "So the next fault that we get is the earliest position is I + K. Because everyone else has been requested before at least once.",
            "And then we've got pretty much the same counterexample as we had for the list access problem that we can make sure that any online strategy faults.",
            "On every request.",
            "And that's really easy.",
            "We just pick out Alvin, our friend or enemy whichever way you see it.",
            "Anne.",
            "Alvin constructs the request sequence by looking at what you evicted and always requesting that.",
            "So you have it something.",
            "Alvin will ask you for it.",
            "So that will give you a request every time.",
            "So the ratio between these two.",
            "Gives you the factor K."
        ],
        [
            "So we not only do 1 proof, will do 2.",
            "Here is the proof that LRU is actually K competitive.",
            "And the proof is quite simple as well.",
            "What you do is you subdivide the request sequence into pieces.",
            "Sigma 1 Two Sigma L. In such a way that you've got exactly K different page requests in each.",
            "Sequence and the sequence is maximal in the sense longest possible.",
            "So make sure it's the longest possible sequence that contains.",
            "K different page request.",
            "So what happens then, is that LRU.",
            "Will incur at most K faults.",
            "Well, we've got K different page requests here.",
            "So.",
            "The first time we request each of them, each of the different ones, we might have a page fault and we'll pay for that.",
            "So K. Is what we pay.",
            "However, the optimum.",
            "Might actually.",
            "Get to.",
            "Use get to pay.",
            "How do you say that might actually get to use the request sequence without paying anything, but look at the next sequence, the sigmai plus one.",
            "What is the first guy in there?",
            "Well, the first page in there has to be different from any of the K different requests we had in Sigma.",
            "I so that means we've got K plus one different requests.",
            "And that means since there is only space for K. Pages in the cache, even the optimum, has to pay at least one.",
            "For this.",
            "And that's the whole proof."
        ],
        [
            "So.",
            "That's the theory.",
            "If you look at experiments on operating systems and things like that.",
            "They tend to show that if you have sufficiently large cache sizes in relationship to.",
            "The slow memory.",
            "You get actually constant competitiveness.",
            "You don't.",
            "You don't get a lot of page faults.",
            "In comparison to the optimal situation and the reason for this, something that Andre talked about this morning as well is this concept of locality.",
            "The fact that we tend to write programs that use the same variables.",
            "In the same context for quite awhile before we moved to a different context and we use some different algorithms that might incur one or two page faults.",
            "But then we'll do while loops and for loops and loops and other things, recursions and stuff dealing with those particular variables.",
            "Right?",
            "So there's a real discrepancy between the theory and the practice here.",
            "So.",
            "To introduce or to show you how competitive analysis might work.",
            "This is an excellent example, but doesn't tell you anything about how things work in real life.",
            "Can we do something randomized then?",
            "Well, what does randomization mean in?",
            "In the competitive sense.",
            "Randomization pretty much means that, well, Alvin is allowed to look at your strategy.",
            "And find out the different distributions that you're using too.",
            "Makes it and choices, but he's not allowed to look at the outcome of those.",
            "Actually, you can define different classes of alvins.",
            "Depending on what strength you give them, but pretty much that's what we're going to do so.",
            "Alvin is.",
            "Is has too.",
            "He's allowed to look at your strategy, but then he has to.",
            "Construct the request sequence.",
            "By himself and give it to a friend and then he's not.",
            "Is not in play anymore and the friend is an honest friend in the sense that he will give you your strategy, their request as Alvin produced it with no changes, which means that you can actually win a bit using randomization and we look at that.",
            "In 15 minutes."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "It's a real pleasure to be here and I'm.",
                    "label": 0
                },
                {
                    "sent": "The first thing I'm going to ask how many of you are?",
                    "label": 0
                },
                {
                    "sent": "I've done anything on know anything about competitive analysis or online algorithms.",
                    "label": 0
                },
                {
                    "sent": "One person excellent I was in last night.",
                    "label": 0
                },
                {
                    "sent": "I was thinking what if they already all know this stuff already?",
                    "label": 0
                },
                {
                    "sent": "Then that'll be really really difficult.",
                    "label": 0
                },
                {
                    "sent": "But since it seems only one of you have heard about this, I will start with a really basic introduction to online algorithms and competitive analysis.",
                    "label": 0
                },
                {
                    "sent": "And at least the introductory part is based on results that are published in two books.",
                    "label": 0
                },
                {
                    "sent": "Start with that one.",
                    "label": 0
                },
                {
                    "sent": "This one is already from 1998.",
                    "label": 0
                },
                {
                    "sent": "It's called online computation and competitive analysis by Borodin.",
                    "label": 0
                },
                {
                    "sent": "Annelien, if came out about 15 years ago.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "This one's even older.",
                    "label": 0
                },
                {
                    "sent": "This one is by Alperin and gal theory of such games and rendezvous problems.",
                    "label": 0
                },
                {
                    "sent": "Both of them are still available, I think.",
                    "label": 0
                },
                {
                    "sent": "Excellent textbooks if you want to use them for a course, so just read them as they are a lot of nice results in there.",
                    "label": 0
                },
                {
                    "sent": "Right, so let's get going.",
                    "label": 0
                },
                {
                    "sent": "Please interrupt me if if you have a question or anything.",
                    "label": 0
                },
                {
                    "sent": "I'm open to all sorts of.",
                    "label": 0
                },
                {
                    "sent": "Questions, yeah.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "This series of lectures of the sequence of presentations or whatever you want to call them is going to contain this stuff here, so I'll start with presenting what an online problem is and look at competitive analysis and give a few.",
                    "label": 0
                },
                {
                    "sent": "Hopefully they'll be explanatory examples of these will do 3 problems and four algorithms.",
                    "label": 0
                },
                {
                    "sent": "Then I look move will move into search and exploration problems and see how they can connect to.",
                    "label": 1
                },
                {
                    "sent": "Competitive analysis specifically we look for.",
                    "label": 0
                },
                {
                    "sent": "Algorithms or machinery that deal with searching for a target on the line.",
                    "label": 1
                },
                {
                    "sent": "Multiple agents working on several lines will look for searching on for a target in a monotone Polygon in.",
                    "label": 1
                },
                {
                    "sent": "Street Polygon as well.",
                    "label": 0
                },
                {
                    "sent": "Actually an will going to exploration problems of different types give you a computational overview of those.",
                    "label": 0
                },
                {
                    "sent": "We look at how to explore rectilinear polygons.",
                    "label": 0
                },
                {
                    "sent": "We look a little bit on how to explore simple polygons and then one of my pet problems that is still wide open is how to explore trees with multiple agents.",
                    "label": 0
                },
                {
                    "sent": "So we'll come to this huge open problem that I've got at the end that will be on Friday, so you'll have a week too.",
                    "label": 0
                },
                {
                    "sent": "Ponder these things right?",
                    "label": 0
                },
                {
                    "sent": "So the first quest.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And is what is an online problem?",
                    "label": 1
                },
                {
                    "sent": "Well, a normal computational problem is you get some sort of input and you want to produce some sort of output on that.",
                    "label": 0
                },
                {
                    "sent": "In order to do that, you construct algorithms and you look at the complexity of the algorithms in terms of of time in terms of memory and maybe other types of resources as well.",
                    "label": 0
                },
                {
                    "sent": "In the online situation.",
                    "label": 0
                },
                {
                    "sent": "We have a slightly different setup in the sense that you don't get all the input at once.",
                    "label": 1
                },
                {
                    "sent": "You get them in little pieces, little chunks.",
                    "label": 0
                },
                {
                    "sent": "And for every little chunk of input you get, you need to be able to produce a reasonable.",
                    "label": 0
                },
                {
                    "sent": "Answer To the problem so far, given that the input is limited to what you've seen produce the best answer.",
                    "label": 0
                },
                {
                    "sent": "That you can and then you'll get more input.",
                    "label": 0
                },
                {
                    "sent": "And the problem then is, well, you're not allowed to retract on the answers you've already given.",
                    "label": 0
                },
                {
                    "sent": "If you said X was true, you cannot suddenly after awhile said no, I'll change.",
                    "label": 0
                },
                {
                    "sent": "My mind was actually false.",
                    "label": 0
                },
                {
                    "sent": "You have to keep X was true, so you limited in the number of choices that you can do.",
                    "label": 1
                },
                {
                    "sent": "Based on what you've done before.",
                    "label": 0
                },
                {
                    "sent": "So an optimal algorithm for a. Computational problem of this type would look at all the input.",
                    "label": 0
                },
                {
                    "sent": "I try to give a good answer, whereas in the online situation we have to give an answer.",
                    "label": 0
                },
                {
                    "sent": "Every time we get another piece of the input.",
                    "label": 0
                },
                {
                    "sent": "Anne, it's got to be as good as possible.",
                    "label": 0
                },
                {
                    "sent": "And that's the problem.",
                    "label": 0
                },
                {
                    "sent": "How do you measure the performance of these things?",
                    "label": 1
                },
                {
                    "sent": "So what do we mean by as good as possible?",
                    "label": 0
                },
                {
                    "sent": "What is the optimization criterion here?",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Well bit of formalism.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "Actually, I forgot something.",
                    "label": 0
                },
                {
                    "sent": "And that was my main point.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "On the previous slide, I forgot to talk about that.",
                    "label": 0
                },
                {
                    "sent": "And that is instead of calling these things algorithms.",
                    "label": 0
                },
                {
                    "sent": "I tend to call them strategies instead, and the reason for that is that the word algorithm has certain connotations that have to do with compute ability.",
                    "label": 0
                },
                {
                    "sent": "There is no algorithm for the halting problem.",
                    "label": 0
                },
                {
                    "sent": "For instance, we have computational limits to what we can do.",
                    "label": 0
                },
                {
                    "sent": "In the online situation, I want to get rid of all of that.",
                    "label": 0
                },
                {
                    "sent": "All that connotation?",
                    "label": 0
                },
                {
                    "sent": "So I use the word strategy instead, because I allow you to solve arbitrarily hard problems instantly.",
                    "label": 0
                },
                {
                    "sent": "In the problems we're going to look at that will not be necessary, but in principle you're allowed to do that.",
                    "label": 0
                },
                {
                    "sent": "So whenever I talk about strategies.",
                    "label": 0
                },
                {
                    "sent": "And see if I can point properly that strategy is like that.",
                    "label": 0
                },
                {
                    "sent": "I mean something that does computation but doesn't really have any limits to it.",
                    "label": 0
                },
                {
                    "sent": "That is a personal preference of mine.",
                    "label": 0
                },
                {
                    "sent": "You talk to Ian or to Andre.",
                    "label": 0
                },
                {
                    "sent": "They might have a completely different view on this.",
                    "label": 0
                },
                {
                    "sent": "I'm indoctrinating you.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Right, so back to the performance issue.",
                    "label": 0
                },
                {
                    "sent": "So a strategy F here does something on input I and it's compute some sort of output on that.",
                    "label": 0
                },
                {
                    "sent": "And we have also an optimal solution, and the optimal solution is sneaky in the sense that.",
                    "label": 0
                },
                {
                    "sent": "It knows the complete set of input.",
                    "label": 0
                },
                {
                    "sent": "And as the best it can, it is allowed to compute the best input.",
                    "label": 0
                },
                {
                    "sent": "Giving the whole set.",
                    "label": 0
                },
                {
                    "sent": "And then we have some sort of cost function.",
                    "label": 0
                },
                {
                    "sent": "In all the cases, we're going to look at, it will be minimization problems, so we'll talk about cost functions rather than profit functions.",
                    "label": 0
                },
                {
                    "sent": "But for maximization, the theory pretty much works the same way.",
                    "label": 0
                },
                {
                    "sent": "So we have some sort of cost function that we want to minimize.",
                    "label": 0
                },
                {
                    "sent": "And we say that.",
                    "label": 0
                },
                {
                    "sent": "A strategy in this case S is are competitive if the cost for the strategy on input I.",
                    "label": 1
                },
                {
                    "sent": "Is it my most R times?",
                    "label": 0
                },
                {
                    "sent": "The cost for the optimal.",
                    "label": 0
                },
                {
                    "sent": "Strategy.",
                    "label": 0
                },
                {
                    "sent": "Plus some constant that you're allowed to add.",
                    "label": 0
                },
                {
                    "sent": "But this has to hold for all input sequences.",
                    "label": 1
                },
                {
                    "sent": "So R is basically the supremum overall.",
                    "label": 0
                },
                {
                    "sent": "Input instances.",
                    "label": 0
                },
                {
                    "sent": "And we call R here the competitive factor.",
                    "label": 0
                },
                {
                    "sent": "Or competitive ratio.",
                    "label": 1
                },
                {
                    "sent": "If you do the division and so on, it turns out that this is equivalent to having the ratio between the cost of the strategy and the cost of the optimum to be limited by our plus epsilon, where epsilon can be made as small as you want.",
                    "label": 1
                },
                {
                    "sent": "For instance, is that I've cost sufficiently large.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So here's the first.",
                    "label": 0
                },
                {
                    "sent": "This is the first example on compute online problems.",
                    "label": 0
                },
                {
                    "sent": "It's called the ski ski rental problem, and it's the first one you always see, so I'll give you that one as well.",
                    "label": 0
                },
                {
                    "sent": "Anne.",
                    "label": 0
                },
                {
                    "sent": "The problem is the following.",
                    "label": 0
                },
                {
                    "sent": "You have been invited to go skiing.",
                    "label": 1
                },
                {
                    "sent": "And this is the first time you go skiing, so you need skis in Slovenia.",
                    "label": 1
                },
                {
                    "sent": "I suppose that's not too much of a problem, but.",
                    "label": 0
                },
                {
                    "sent": "You need skis.",
                    "label": 0
                },
                {
                    "sent": "And you have the option of actually buying skis or just renting them for a week, and you want to optimize the amount of money you spend.",
                    "label": 0
                },
                {
                    "sent": "In relationship to what the optimal strategy would spend?",
                    "label": 0
                },
                {
                    "sent": "So you have these two options, you can rent skis for and I check these values, they're reasonable.",
                    "label": 0
                },
                {
                    "sent": "I think, at least in Sweden it costs to rent skis for a week, roughly 60 euros.",
                    "label": 0
                },
                {
                    "sent": "And a reasonable pair of of Alpine skis costs about 600 euros.",
                    "label": 0
                },
                {
                    "sent": "I think anyone know?",
                    "label": 0
                },
                {
                    "sent": "Reasonable figures good.",
                    "label": 1
                },
                {
                    "sent": "So you rent skis for 60 euros per week, or you can buy skis at 600 euros and then to simplify the analysis we assume they last for a lifetime, so you never have to go back to renting or buying again once you've bought a pair of skis.",
                    "label": 0
                },
                {
                    "sent": "And the optimization criterion that we're looking for is to minimize the cost for skis.",
                    "label": 1
                },
                {
                    "sent": "So what is the smallest amount of money you can?",
                    "label": 0
                },
                {
                    "sent": "You can pay for using.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So here is a list of the optimum costs.",
                    "label": 0
                },
                {
                    "sent": "If you don't go skiing at all, you don't have to rent any skis so that you could cost of renting skis is 0 after if you do it one week, 62 weeks 120, and so on up until you get to 10 weeks.",
                    "label": 0
                },
                {
                    "sent": "So if you go skiing 10 weeks, you have to pay 600 euros independently of whether you buy skis to begin with, or whether you rent.",
                    "label": 1
                },
                {
                    "sent": "Up until the 10th week, but as of Week 11.",
                    "label": 0
                },
                {
                    "sent": "Of course, the optimum is just to make sure you bought the skis already in the beginning and you then pay 600 euros.",
                    "label": 0
                },
                {
                    "sent": "For 12 weeks it's the same 1314 and so on.",
                    "label": 0
                },
                {
                    "sent": "So it's a linear function that goes up like that and then flattens out.",
                    "label": 0
                },
                {
                    "sent": "OK. And.",
                    "label": 0
                },
                {
                    "sent": "Meet Alvin the adversary.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "The analysis for.",
                    "label": 0
                },
                {
                    "sent": "These and.",
                    "label": 0
                },
                {
                    "sent": "Other type of.",
                    "label": 0
                },
                {
                    "sent": "Online problems very often use.",
                    "label": 0
                },
                {
                    "sent": "Adversary based arguments.",
                    "label": 0
                },
                {
                    "sent": "And Mr. Alvin here is the one who's going to to mess us up.",
                    "label": 0
                },
                {
                    "sent": "Make sure we do as badly as possible.",
                    "label": 0
                },
                {
                    "sent": "Depending on the strategy that we choose in order to rent skis.",
                    "label": 0
                },
                {
                    "sent": "And Alvin, you'll see him around a couple of times during my presentation.",
                    "label": 1
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So I'll give you 2 examples strategies here the first one.",
                    "label": 0
                },
                {
                    "sent": "Is.",
                    "label": 0
                },
                {
                    "sent": "You just make sure you buy skis.",
                    "label": 1
                },
                {
                    "sent": "Before week one.",
                    "label": 0
                },
                {
                    "sent": "Before you go ski well, what Alvin does then is break your legs.",
                    "label": 0
                },
                {
                    "sent": "And make sure you never go skiing.",
                    "label": 1
                },
                {
                    "sent": "And because that will ensure that Alvin wins.",
                    "label": 0
                },
                {
                    "sent": "Buy an infinite amount so the cost you paid 600.",
                    "label": 0
                },
                {
                    "sent": "Where is Alvin?",
                    "label": 0
                },
                {
                    "sent": "Paid nothing.",
                    "label": 0
                },
                {
                    "sent": "Because you never went skiing, so the ratio here is infinite.",
                    "label": 0
                },
                {
                    "sent": "Another possibility is OK.",
                    "label": 0
                },
                {
                    "sent": "I'll always rent skis.",
                    "label": 0
                },
                {
                    "sent": "I will never, ever.",
                    "label": 0
                },
                {
                    "sent": "Bye.",
                    "label": 0
                },
                {
                    "sent": "With that case.",
                    "label": 0
                },
                {
                    "sent": "Alvin decides that you go skiing very often.",
                    "label": 1
                },
                {
                    "sent": "And he will make sure that you go as often as possible.",
                    "label": 0
                },
                {
                    "sent": "And if N is the number of times you go skiing.",
                    "label": 0
                },
                {
                    "sent": "End Times 60, which is what you pay divided by 600, goes towards Infinity as an increasing so.",
                    "label": 0
                },
                {
                    "sent": "You can basically have an arbitrary competitive ratio here as well.",
                    "label": 0
                },
                {
                    "sent": "Right?",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So let's look at an interesting set of strategies.",
                    "label": 0
                },
                {
                    "sent": "The two ones we saw are basically at the two endpoints of these, so there is a parameter K which is which basically tells when you buy the skis so.",
                    "label": 0
                },
                {
                    "sent": "You rent skis until we K. And before we K plus one.",
                    "label": 0
                },
                {
                    "sent": "You buy some skis and since they last for an eternity, you never have to go back to buying again or renting again.",
                    "label": 0
                },
                {
                    "sent": "So what Alvin then decides, and this is turns out to be the best case is.",
                    "label": 0
                },
                {
                    "sent": "He decides that you go skiing exactly K times because that's when you pay the most and he pays the least.",
                    "label": 0
                },
                {
                    "sent": "Well.",
                    "label": 0
                },
                {
                    "sent": "So you will pay.",
                    "label": 0
                },
                {
                    "sent": "You will rent K times so that 60 * K and after that you buy.",
                    "label": 0
                },
                {
                    "sent": "So you pay an additional 600 for the for this keys, whereas Alvin.",
                    "label": 0
                },
                {
                    "sent": "He pays K * 60 If K smaller than 10 and 600 otherwise.",
                    "label": 1
                },
                {
                    "sent": "And here is the ratio here, but.",
                    "label": 0
                },
                {
                    "sent": "For different values of K, so for zero we already knew that was an infinite.",
                    "label": 0
                },
                {
                    "sent": "If you go twice, the ratio is 6.",
                    "label": 0
                },
                {
                    "sent": "If we go four times at three and a half.",
                    "label": 0
                },
                {
                    "sent": "6 * 2 and a third 8 * 225, and so on.",
                    "label": 0
                },
                {
                    "sent": "And when you get to 10.",
                    "label": 0
                },
                {
                    "sent": "It ends up being 2.",
                    "label": 0
                },
                {
                    "sent": "But then when you get to 11 it starts increasing again.",
                    "label": 0
                },
                {
                    "sent": "2.1 Two point 2 two point 4 and so on.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "So the best case seems to be that you rent skis 10 times and then you buy skis.",
                    "label": 0
                },
                {
                    "sent": "So you get this type of curve.",
                    "label": 0
                },
                {
                    "sent": "Where the bottom exactly when the cost of skis is exactly the same as.",
                    "label": 0
                },
                {
                    "sent": "The number of times you.",
                    "label": 0
                },
                {
                    "sent": "Go skiing times the price, so when these are the same, that's when you should.",
                    "label": 0
                },
                {
                    "sent": "That's when you have the bottom of that curve.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So you can generalize this for.",
                    "label": 0
                },
                {
                    "sent": "Arbitrary values of skis.",
                    "label": 0
                },
                {
                    "sent": "If you have.",
                    "label": 0
                },
                {
                    "sent": "The possibility to rent skis for ex heroes.",
                    "label": 1
                },
                {
                    "sent": "And the cost for buying skis is why?",
                    "label": 0
                },
                {
                    "sent": "And we assume of course, these are natural values.",
                    "label": 0
                },
                {
                    "sent": "So so why has to be greater than X and all these things are definitely positive.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 1
                },
                {
                    "sent": "The different possible strategies you can have is you rent up until we K and then you buy skis before you go.",
                    "label": 0
                },
                {
                    "sent": "The K plus first time where K is any number.",
                    "label": 0
                },
                {
                    "sent": "Greater than or equal to 0.",
                    "label": 1
                },
                {
                    "sent": "So then the best strategy and the calculations are fairly easy.",
                    "label": 0
                },
                {
                    "sent": "Is to rent skis K times, where K is the largest value greater than smaller than.",
                    "label": 0
                },
                {
                    "sent": "Huawei divided by X and then biskis after that.",
                    "label": 0
                },
                {
                    "sent": "And this guarantees.",
                    "label": 0
                },
                {
                    "sent": "That competitive factor here, which tends to two.",
                    "label": 0
                },
                {
                    "sent": "For appropriate values of X&Y.",
                    "label": 1
                },
                {
                    "sent": "And the set of strategies that we have here rent skis until we, K and then buy skis before we keep this one actually incompass all possible strategies becausw skis once you've bought them will last forever.",
                    "label": 1
                },
                {
                    "sent": "And of course change this and House keys break after a certain time, so you have to go back.",
                    "label": 1
                },
                {
                    "sent": "But in essence, this is the simplest version of the ski rental problem problem.",
                    "label": 0
                },
                {
                    "sent": "So for this particular case, there's no strategy that does any better, because we've pretty much looked at all of them.",
                    "label": 0
                },
                {
                    "sent": "The strategies of that we.",
                    "label": 0
                },
                {
                    "sent": "Road down here.",
                    "label": 0
                },
                {
                    "sent": "Basically, encompass all possible strategies.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "The second example is.",
                    "label": 0
                },
                {
                    "sent": "From 1985.",
                    "label": 0
                },
                {
                    "sent": "Slater and tarjan's.",
                    "label": 0
                },
                {
                    "sent": "Data structure problem.",
                    "label": 0
                },
                {
                    "sent": "And that's where the concept of.",
                    "label": 0
                },
                {
                    "sent": "Competitive analysis's basically started.",
                    "label": 0
                },
                {
                    "sent": "There have been previous examples of this, but it wasn't called competitive analysis.",
                    "label": 0
                },
                {
                    "sent": "Called.",
                    "label": 0
                },
                {
                    "sent": "Used to be called min Max calculation min Max algorithms.",
                    "label": 0
                },
                {
                    "sent": "Things like that, but Slater intelligent introduced this general framework for dealing with the online problems and did that using.",
                    "label": 0
                },
                {
                    "sent": "Basically 2 problems that.",
                    "label": 0
                },
                {
                    "sent": "I'm going to show you.",
                    "label": 0
                },
                {
                    "sent": "So the first problem.",
                    "label": 0
                },
                {
                    "sent": "Data structures problem.",
                    "label": 0
                },
                {
                    "sent": "That deals with the list structure that has a certain side M. And you get a sequence of requests for that.",
                    "label": 1
                },
                {
                    "sent": "List structure.",
                    "label": 0
                },
                {
                    "sent": "And the idea is you need to access the appropriate element.",
                    "label": 0
                },
                {
                    "sent": "And return it.",
                    "label": 1
                },
                {
                    "sent": "And the idea is to organize the list so that.",
                    "label": 0
                },
                {
                    "sent": "The work you do in order to fulfill a particular request or a sequence of requests actually is as small as possible.",
                    "label": 0
                },
                {
                    "sent": "And now.",
                    "label": 0
                },
                {
                    "sent": "The operations that you're allowed to do into the list.",
                    "label": 0
                },
                {
                    "sent": "Are basically two you're allowed to access.",
                    "label": 1
                },
                {
                    "sent": "A certain element X.",
                    "label": 0
                },
                {
                    "sent": "If it's in position J.",
                    "label": 0
                },
                {
                    "sent": "That access is going to cost you J.",
                    "label": 0
                },
                {
                    "sent": "After that, once you've accessed X in position J, you're allowed to move it towards the front of the list.",
                    "label": 1
                },
                {
                    "sent": "At no extra cost, that's free.",
                    "label": 1
                },
                {
                    "sent": "But any other move that you do if you move something that you just you haven't accessed.",
                    "label": 0
                },
                {
                    "sent": "In the step before.",
                    "label": 0
                },
                {
                    "sent": "Or you're moving it further back in the list.",
                    "label": 0
                },
                {
                    "sent": "That will cost you the number of steps you move.",
                    "label": 0
                },
                {
                    "sent": "Anne.",
                    "label": 0
                },
                {
                    "sent": "Is this a reasonable model for list accessing?",
                    "label": 0
                },
                {
                    "sent": "I suppose so could be argued at least linkedlist sort of work like that.",
                    "label": 0
                },
                {
                    "sent": "I talked to Ian before.",
                    "label": 0
                },
                {
                    "sent": "He's not too happy with the model.",
                    "label": 0
                },
                {
                    "sent": "But maybe he'll say a bit more about that tomorrow, I don't know.",
                    "label": 0
                },
                {
                    "sent": "But this is the model that we're going to use, and I'm using it not because the model is a good one, but because I want to illustrate the concept of competitive analysis.",
                    "label": 1
                },
                {
                    "sent": "Sir.",
                    "label": 0
                },
                {
                    "sent": "What we want to optimize is the total number of the total cost for all the accesses that you're going to do.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "Thinking about this that immediately leads you to a number of different strategies that you can use.",
                    "label": 0
                },
                {
                    "sent": "So here is a list.",
                    "label": 0
                },
                {
                    "sent": "Of six elements consisting of 1124, eighteen, 1439, and 12.",
                    "label": 0
                },
                {
                    "sent": "And we have a request sequence that asks for 24, fourteen, 3914 and 14.",
                    "label": 0
                },
                {
                    "sent": "So if you do nothing and just walk down the list, accessing 24 will cost you two.",
                    "label": 0
                },
                {
                    "sent": "Accessing 14 will cost you 4.",
                    "label": 0
                },
                {
                    "sent": "Accessing 39 will cost you 5, and then you've got 2 * 14 again, and those will cost you four each.",
                    "label": 0
                },
                {
                    "sent": "So the total cost here in this example is 19.",
                    "label": 0
                },
                {
                    "sent": "And that's when you have done the restructuring, so we'll look at a few other strategies and see how you can improve on.",
                    "label": 1
                },
                {
                    "sent": "This list access problem, so the first one is transpose.",
                    "label": 0
                },
                {
                    "sent": "Where?",
                    "label": 0
                },
                {
                    "sent": "You move the requested item just one step closer to the.",
                    "label": 1
                },
                {
                    "sent": "Head of the list just one step back.",
                    "label": 0
                },
                {
                    "sent": "Forwards in into the list.",
                    "label": 1
                },
                {
                    "sent": "Another one is frequency count, which maintains a list sorted on the frequency of the number of accesses that you get.",
                    "label": 0
                },
                {
                    "sent": "The third one is MTF moved to front.",
                    "label": 0
                },
                {
                    "sent": "Which.",
                    "label": 0
                },
                {
                    "sent": "Allows every retrieval that you do, every access that you do gets moved to the head of the list.",
                    "label": 1
                },
                {
                    "sent": "And then, of course the optimal one will have a look at that one.",
                    "label": 0
                },
                {
                    "sent": "And it turns out not to be an online strategy because it needs in order to be optimal it needs.",
                    "label": 0
                },
                {
                    "sent": "To know the full request sequence in order to work properly.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So here is the transpose.",
                    "label": 0
                },
                {
                    "sent": "How does that work?",
                    "label": 0
                },
                {
                    "sent": "Well.",
                    "label": 0
                },
                {
                    "sent": "We'll start by accessing 24, and that costs us two, and transpose allows allows us then to move the.",
                    "label": 0
                },
                {
                    "sent": "The element that we accessed one step further to the head.",
                    "label": 0
                },
                {
                    "sent": "So 24 moves from.",
                    "label": 0
                },
                {
                    "sent": "Opposition down to that position.",
                    "label": 0
                },
                {
                    "sent": "Then we access 14 which is over here.",
                    "label": 0
                },
                {
                    "sent": "And 14 will then move be moved one step further towards the head.",
                    "label": 0
                },
                {
                    "sent": "Then we access 39.",
                    "label": 0
                },
                {
                    "sent": "Which is there?",
                    "label": 0
                },
                {
                    "sent": "And it gets moved one step further to the head.",
                    "label": 0
                },
                {
                    "sent": "14 again.",
                    "label": 0
                },
                {
                    "sent": "It move, it gets moved one step further to the head and then another 14 and it moves to the head of the list.",
                    "label": 0
                },
                {
                    "sent": "If we look at the costs for each of these operations, we get 245, three and two with a total of 16.",
                    "label": 0
                },
                {
                    "sent": "And one might think this is a very good algorithm or very good strategy.",
                    "label": 0
                },
                {
                    "sent": "But here Alvin of course comes in and says well, not too happy.",
                    "label": 0
                },
                {
                    "sent": "What if I request 12 and 39 all the time alternatingly?",
                    "label": 0
                },
                {
                    "sent": "That means that 12 would be moved to one step further down the list.",
                    "label": 0
                },
                {
                    "sent": "Then you access 39.",
                    "label": 0
                },
                {
                    "sent": "That's in the last position now, so it gets moved further.",
                    "label": 0
                },
                {
                    "sent": "One step further to the list, and so on, right?",
                    "label": 0
                },
                {
                    "sent": "So you pay M times the length of the request sequence there, whereas an optimal strategy would know this.",
                    "label": 0
                },
                {
                    "sent": "And of course move these two elements.",
                    "label": 0
                },
                {
                    "sent": "To the head of the list, so you will pay at most two times the length of the request sequence, so you get a competitive ratio of at best M / 2.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Frequency count.",
                    "label": 0
                },
                {
                    "sent": "Well, frequency count does the following.",
                    "label": 0
                },
                {
                    "sent": "It maintains an extra counter for every element.",
                    "label": 0
                },
                {
                    "sent": "And we access 24.",
                    "label": 0
                },
                {
                    "sent": "So 24 is in position two, we pay 2 for that.",
                    "label": 0
                },
                {
                    "sent": "And increase the counter by 1.",
                    "label": 0
                },
                {
                    "sent": "So we maintain that list now sorted so it gets moved to the further down towards the head of the list until it reaches one element that has a higher counter when we stop.",
                    "label": 0
                },
                {
                    "sent": "In this case, this doesn't happens.",
                    "label": 0
                },
                {
                    "sent": "It ends up first in the list, then we access 1414 is here.",
                    "label": 0
                },
                {
                    "sent": "It's counter gets increased by one and we move it.",
                    "label": 0
                },
                {
                    "sent": "As.",
                    "label": 0
                },
                {
                    "sent": "Close to the head as we can 39 same thing.",
                    "label": 0
                },
                {
                    "sent": "It ends up here.",
                    "label": 0
                },
                {
                    "sent": "14 again it ends up now at the head and 14 again, so we maintain a sorted list of.",
                    "label": 0
                },
                {
                    "sent": "The frequencies, so once again the cost for accessing the 1st three elements is the same as before, but the.",
                    "label": 0
                },
                {
                    "sent": "Accessing the two last four teens gets a bit cheaper and we pay 14 here.",
                    "label": 0
                },
                {
                    "sent": "The drawback with this pardon?",
                    "label": 0
                },
                {
                    "sent": "Well, he he pays one to access the last 14 here.",
                    "label": 0
                },
                {
                    "sent": "So you access something.",
                    "label": 0
                },
                {
                    "sent": "I return, I have to return the element to the thing so that that's what you pay for.",
                    "label": 0
                },
                {
                    "sent": "No, there's no dilution in this.",
                    "label": 0
                },
                {
                    "sent": "It's just a retrieval.",
                    "label": 0
                },
                {
                    "sent": "There's no deletions.",
                    "label": 0
                },
                {
                    "sent": "We don't remove anything.",
                    "label": 0
                },
                {
                    "sent": "We just have to get you just get the element return it.",
                    "label": 0
                },
                {
                    "sent": "Yeah, so find me #14.",
                    "label": 0
                },
                {
                    "sent": "Unreturning there might be an additional data structure associated to this with with loads of interesting information that you need, but.",
                    "label": 0
                },
                {
                    "sent": "14 Here is the key that you searching for, right?",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "The drawback with this is of course that you have to have this extra counter.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "It takes.",
                    "label": 0
                },
                {
                    "sent": "At least twice the space.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Move to front.",
                    "label": 0
                },
                {
                    "sent": "Well.",
                    "label": 0
                },
                {
                    "sent": "I'm sure you can guess what happens here.",
                    "label": 0
                },
                {
                    "sent": "We access 2424, gets moved to the head, we Access 14, we pay for and move it to the head.",
                    "label": 0
                },
                {
                    "sent": "39 It gets moved to the head.",
                    "label": 1
                },
                {
                    "sent": "14 again it gets moved to the head and the last 14 is already at the first position.",
                    "label": 0
                },
                {
                    "sent": "So you pay just the one for that again 2 + 4 + 5 + 2 + 1 is 14.",
                    "label": 1
                },
                {
                    "sent": "That's the cost for this.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "The optimal strategy.",
                    "label": 0
                },
                {
                    "sent": "Well, it requires the full sequence to be known in advance, but this is sort of clear.",
                    "label": 1
                },
                {
                    "sent": "But then what you can do then is actually reduce the cost by 1.",
                    "label": 1
                },
                {
                    "sent": "Anne, it's clear that the first 3 ones, 214 and 39, they're going to cost 2, four and five independently of what you do.",
                    "label": 0
                },
                {
                    "sent": "But 14 is requested two more times, so for the optimum it's beneficial for.",
                    "label": 0
                },
                {
                    "sent": "To make sure that it's when it's exists the second time that it is in the first position.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Right, so in order I want to analyze the move to front strategy.",
                    "label": 0
                },
                {
                    "sent": "That's the one that seemed to have.",
                    "label": 0
                },
                {
                    "sent": "Good.",
                    "label": 0
                },
                {
                    "sent": "Properties.",
                    "label": 0
                },
                {
                    "sent": "And in order to do that, I need a concept I need to define a concept.",
                    "label": 0
                },
                {
                    "sent": "So suppose I have two lists L1 and L2.",
                    "label": 1
                },
                {
                    "sent": "I want to define the concept of an inversion.",
                    "label": 0
                },
                {
                    "sent": "So an inversion is simply.",
                    "label": 0
                },
                {
                    "sent": "The number of.",
                    "label": 0
                },
                {
                    "sent": "Pairs.",
                    "label": 0
                },
                {
                    "sent": "That occur in different orders in the two lists, right?",
                    "label": 0
                },
                {
                    "sent": "So let's consider that pair the red pair here in L 111 followed by 39 over here.",
                    "label": 0
                },
                {
                    "sent": "So they come in the order 1139.",
                    "label": 0
                },
                {
                    "sent": "In L2 they turn up in the reverse order is 39 first and 11 second, so that's an inversion.",
                    "label": 0
                },
                {
                    "sent": "So between L1 and L2 there's an inversion consisting of L1 of 11 and 39.",
                    "label": 0
                },
                {
                    "sent": "Let's take another example.",
                    "label": 0
                },
                {
                    "sent": "The black ones 24 and 12.",
                    "label": 0
                },
                {
                    "sent": "Well, they occur in the same order in these two lists, so there's no inversion there, right?",
                    "label": 0
                },
                {
                    "sent": "And I think this for the blue pair we've got 18 and 14 and then the other one.",
                    "label": 0
                },
                {
                    "sent": "We've got 14 and 18, so there is an inversion.",
                    "label": 0
                },
                {
                    "sent": "Everyone is happy with the this definition.",
                    "label": 0
                },
                {
                    "sent": "OK, good.",
                    "label": 0
                },
                {
                    "sent": "Sir.",
                    "label": 0
                },
                {
                    "sent": "If you can't, then the total number of inversions in this example.",
                    "label": 0
                },
                {
                    "sent": "So you go through them all.",
                    "label": 0
                },
                {
                    "sent": "So start with 1120, four 2411.",
                    "label": 0
                },
                {
                    "sent": "That's one inversion, and so on.",
                    "label": 0
                },
                {
                    "sent": "You get 7 for this particular example.",
                    "label": 0
                },
                {
                    "sent": "One thing to note also, if that is that if you take a list.",
                    "label": 0
                },
                {
                    "sent": "And ask for the number of inversions between the list and itself.",
                    "label": 0
                },
                {
                    "sent": "That is always a 0.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So now I need a few things.",
                    "label": 0
                },
                {
                    "sent": "So TI is the cost of a particular request.",
                    "label": 1
                },
                {
                    "sent": "The ice request in the move to front strategy.",
                    "label": 0
                },
                {
                    "sent": "And Faeid now denotes the number of inversions that you have between the.",
                    "label": 0
                },
                {
                    "sent": "Current MTF list.",
                    "label": 1
                },
                {
                    "sent": "And the optimal list after exactly I request.",
                    "label": 0
                },
                {
                    "sent": "And then.",
                    "label": 0
                },
                {
                    "sent": "You invent a new cost called amortized cost, which is simply TI.",
                    "label": 1
                },
                {
                    "sent": "Actual cost of the request.",
                    "label": 0
                },
                {
                    "sent": "In MTF plus the number of inversions that.",
                    "label": 0
                },
                {
                    "sent": "You have after the request, minus the number of inversions you had before the request, so.",
                    "label": 0
                },
                {
                    "sent": "It is the actual cost.",
                    "label": 0
                },
                {
                    "sent": "Plus then they increase or decrease in the number of inversions that you get.",
                    "label": 0
                },
                {
                    "sent": "Right, so let's look at what this actually becomes.",
                    "label": 0
                },
                {
                    "sent": "So if we look at the cost for MTF here, it's clear that it's the sum of all the all the costs for the request, and some of T. And simple algebra gives you that.",
                    "label": 0
                },
                {
                    "sent": "This is the sum of the AI is minus five I + 5 -- 1.",
                    "label": 0
                },
                {
                    "sent": "Can you do a sum here?",
                    "label": 0
                },
                {
                    "sent": "You get a telescoping sum that gives you five 0 -- 5 Sigma.",
                    "label": 0
                },
                {
                    "sent": "AN50 is the.",
                    "label": 1
                },
                {
                    "sent": "The number of inversions between the move to front list and the optimal list before you've done any.",
                    "label": 0
                },
                {
                    "sent": "Accesses, which means they are the same list.",
                    "label": 0
                },
                {
                    "sent": "So that's zero.",
                    "label": 1
                },
                {
                    "sent": "And Phi Sigma, where the number of inversions is always a positive number.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "You've got a - there, so this is actually a negative thing plus the sum of the amortized cost.",
                    "label": 0
                },
                {
                    "sent": "So this is at most the sum of the amortized cost.",
                    "label": 0
                },
                {
                    "sent": "Very simple analysis.",
                    "label": 0
                },
                {
                    "sent": "So now we know that the cost for the move to front over a sequence is at most the cost of the amortized.",
                    "label": 0
                },
                {
                    "sent": "Cost for each of the requests.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So what we do is we look at.",
                    "label": 0
                },
                {
                    "sent": "One particular.",
                    "label": 0
                },
                {
                    "sent": "Request and we say that it accesses Element X, which is in position J in the optimal list and position K. In the move to front list, an J&K are chosen arbitrarily.",
                    "label": 1
                },
                {
                    "sent": "We know significant in using these.",
                    "label": 0
                },
                {
                    "sent": "Right?",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "Let's look at the number of elements that lie before X in the MTF list.",
                    "label": 1
                },
                {
                    "sent": "Right?",
                    "label": 0
                },
                {
                    "sent": "We do the access there here.",
                    "label": 0
                },
                {
                    "sent": "Right, but that are after in the optimal list.",
                    "label": 0
                },
                {
                    "sent": "I've marked those with asterisks.",
                    "label": 0
                },
                {
                    "sent": "And let's denote that number V. So those V guys to the left of X in MTF.",
                    "label": 0
                },
                {
                    "sent": "But to the right of X in opt.",
                    "label": 0
                },
                {
                    "sent": "So that means that.",
                    "label": 0
                },
                {
                    "sent": "All the other ones, the ones that are blank.",
                    "label": 0
                },
                {
                    "sent": "R to the left of X in MTF, but there also to the left of X.",
                    "label": 0
                },
                {
                    "sent": "In the optimal list, so they are on the same side.",
                    "label": 0
                },
                {
                    "sent": "So that means that the number of.",
                    "label": 0
                },
                {
                    "sent": "Positions here.",
                    "label": 0
                },
                {
                    "sent": "Is.",
                    "label": 0
                },
                {
                    "sent": "At least.",
                    "label": 0
                },
                {
                    "sent": "K -- V V was the number of asterisks we had.",
                    "label": 0
                },
                {
                    "sent": "K -- V -- 1.",
                    "label": 0
                },
                {
                    "sent": "And that is at most the number of elements we've got here.",
                    "label": 0
                },
                {
                    "sent": "So at most J -- 1.",
                    "label": 0
                },
                {
                    "sent": "So we get this inequality.",
                    "label": 0
                },
                {
                    "sent": "That's important.",
                    "label": 0
                },
                {
                    "sent": "K -- V is at most J.",
                    "label": 0
                },
                {
                    "sent": "You might want to.",
                    "label": 0
                },
                {
                    "sent": "Have a deeper look at that.",
                    "label": 0
                },
                {
                    "sent": "But it turns out to be quite obvious if you think about it.",
                    "label": 0
                },
                {
                    "sent": "So the number of blank guys is though the thing we counting, and since they are blank they also have to be here, which means that we need space enough for them, right?",
                    "label": 0
                },
                {
                    "sent": "So the number of blank is K -- V, so Jay has to be larger.",
                    "label": 0
                },
                {
                    "sent": "OK, and the rest is just simple algebra, so the amortized cost for this step is.",
                    "label": 0
                },
                {
                    "sent": "Equal to the total cost plus the differences in the number of inversions.",
                    "label": 0
                },
                {
                    "sent": "Well, so let's count the number of inversions.",
                    "label": 0
                },
                {
                    "sent": "What happens here is that all the guys that were to the left.",
                    "label": 0
                },
                {
                    "sent": "Here.",
                    "label": 0
                },
                {
                    "sent": "End up being to the right since we didn't move to front X.",
                    "label": 0
                },
                {
                    "sent": "After the.",
                    "label": 0
                },
                {
                    "sent": "Access.",
                    "label": 0
                },
                {
                    "sent": "Ends up at the first position so they are now to the right.",
                    "label": 0
                },
                {
                    "sent": "So that means that all the guys that are Asterix here were in versions before.",
                    "label": 0
                },
                {
                    "sent": "But have stopped being them now so.",
                    "label": 0
                },
                {
                    "sent": "That means that.",
                    "label": 0
                },
                {
                    "sent": "We reduce the number of inversions by V. TI of course is K because we're at The Cave position here, so we caught pay a cost of of K to access X here, so K -- V. But then of course all the blank ones that were here.",
                    "label": 0
                },
                {
                    "sent": "End up too also to the right so they turn out to become inversions.",
                    "label": 0
                },
                {
                    "sent": "From not being before, they now are inversions, so we have to add those we've reduced by V and the number of inversions we introduce is K -- V -- 1.",
                    "label": 0
                },
                {
                    "sent": "And a little bit of algebra gives you this 2 * K -- V -- 1, which is at most using that 2 * J -- 1 and J is exactly the cost of.",
                    "label": 0
                },
                {
                    "sent": "For the optimum of doing the access.",
                    "label": 0
                },
                {
                    "sent": "So we pay two times the cost of the optimum minus one.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So just to continue the analysis, have you doing this really in depth so that I hope you don't lose?",
                    "label": 0
                },
                {
                    "sent": "You might find this boring, but I want to do this in depth so that you really understand this, because I think it's important.",
                    "label": 0
                },
                {
                    "sent": "Alright, we knew from the start that the total cost for the MTF strategy was at most the sum of the amortized costs.",
                    "label": 0
                },
                {
                    "sent": "We knew that this was two times the cost of each of the optimal steps minus one, so this is 2 times the cost of the optimum minus.",
                    "label": 0
                },
                {
                    "sent": "The cost minus the length of the request sequence, and since each request pays it moves M. The maximum you can have is Sigma times M. So this ends up being the.",
                    "label": 0
                },
                {
                    "sent": "Competitive factor so for short lists your list of one will give you an optimal solution.",
                    "label": 0
                },
                {
                    "sent": "But larger lists.",
                    "label": 0
                },
                {
                    "sent": "Will.",
                    "label": 0
                },
                {
                    "sent": "As the size of the list increases, will tend you two more towards 2.",
                    "label": 0
                },
                {
                    "sent": "And this is with a very simple algorithm or very simple strategy.",
                    "label": 0
                },
                {
                    "sent": "Doing something really, really.",
                    "label": 0
                },
                {
                    "sent": "Simple, it accesses the element and moves it towards the front.",
                    "label": 0
                },
                {
                    "sent": "You can show also that.",
                    "label": 0
                },
                {
                    "sent": "It doesn't have to be a static list.",
                    "label": 0
                },
                {
                    "sent": "You can do the same analysis using.",
                    "label": 0
                },
                {
                    "sent": "Dynamic lists where you allow insertions you allow deletions.",
                    "label": 0
                },
                {
                    "sent": "And it will turn out being pretty much the same results.",
                    "label": 0
                },
                {
                    "sent": "Right?",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "The second problem that.",
                    "label": 0
                },
                {
                    "sent": "They looked at was the following.",
                    "label": 0
                },
                {
                    "sent": "And it relates to to Andre's presentation this morning.",
                    "label": 0
                },
                {
                    "sent": "Which have to do about optimizing paging.",
                    "label": 0
                },
                {
                    "sent": "The paging problem.",
                    "label": 0
                },
                {
                    "sent": "So you have some slow memory.",
                    "label": 0
                },
                {
                    "sent": "And some fast memory will call that cash.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "The amount of slow, fast memory that you've got is K blocks.",
                    "label": 1
                },
                {
                    "sent": "It's a small amount in relationship to the M blocks that you have of slow memory.",
                    "label": 0
                },
                {
                    "sent": "And then you have a number of memory requests, so you're requesting addresses inside a particular page.",
                    "label": 0
                },
                {
                    "sent": "I'm sure you've done an operating systems course or something like that, so you're familiar with this stuff, right?",
                    "label": 0
                },
                {
                    "sent": "So two things can happen.",
                    "label": 0
                },
                {
                    "sent": "If the request is in the cache, well, that's free.",
                    "label": 1
                },
                {
                    "sent": "You don't pay anything.",
                    "label": 0
                },
                {
                    "sent": "If the request is not in the cache, well, you then you have to get that page into the cache.",
                    "label": 1
                },
                {
                    "sent": "Before you can access it.",
                    "label": 0
                },
                {
                    "sent": "But if the cache is full, you have to evict some other page.",
                    "label": 0
                },
                {
                    "sent": "And this is expensive operation, so that'll cost you something.",
                    "label": 0
                },
                {
                    "sent": "This is called a page fault and we have to pay one for that.",
                    "label": 0
                },
                {
                    "sent": "So we want to minimize the number of page faults that yeah.",
                    "label": 1
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The most.",
                    "label": 0
                },
                {
                    "sent": "Common paging algorithm.",
                    "label": 0
                },
                {
                    "sent": "Which is also an online algorithm, is called least recently used.",
                    "label": 0
                },
                {
                    "sent": "Here's an example.",
                    "label": 0
                },
                {
                    "sent": "If you've never seen it before.",
                    "label": 0
                },
                {
                    "sent": "We're assuming a cache of full pages, so it's a very small cash.",
                    "label": 0
                },
                {
                    "sent": "We assume that it's already been filled with the values, in this case twelve, 3914, and 18.",
                    "label": 0
                },
                {
                    "sent": "It turns out the least recently used functions pretty much in the paging example, like move to front did I wouldn't recommend implementing it like that, but.",
                    "label": 0
                },
                {
                    "sent": "The way it functions is pretty much in that order because.",
                    "label": 0
                },
                {
                    "sent": "Least recently used if you maintain.",
                    "label": 0
                },
                {
                    "sent": "The pages.",
                    "label": 0
                },
                {
                    "sent": "In the DMTF order, you will always evict the last one.",
                    "label": 0
                },
                {
                    "sent": "On the page or last one in the cache.",
                    "label": 0
                },
                {
                    "sent": "So twelve, 3914 and 18 have been put in notice that they end up in the reverse order.",
                    "label": 0
                },
                {
                    "sent": "Since 18 is the last one that was accessed.",
                    "label": 0
                },
                {
                    "sent": "So 24 is the next element to request that one ends up in the.",
                    "label": 0
                },
                {
                    "sent": "At the top of the list and we move everything else one step down so the one that gets evicted here is 12 since 24 was not in the list, we pay a cost of 1.",
                    "label": 0
                },
                {
                    "sent": "39 While 39 is in the last position, so it's accessed.",
                    "label": 0
                },
                {
                    "sent": "That costs us nothing.",
                    "label": 0
                },
                {
                    "sent": "And be it get gets moved to the first position.",
                    "label": 0
                },
                {
                    "sent": "Then we access 11.",
                    "label": 0
                },
                {
                    "sent": "11 is not in the list, so we evict 14.",
                    "label": 0
                },
                {
                    "sent": "11 is put into the first position, and so on.",
                    "label": 0
                },
                {
                    "sent": "And you see that this.",
                    "label": 0
                },
                {
                    "sent": "Example will cost you 4.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Another, not online strategy is something called longest forward distance, and that turns out to be the optimal strategy and the reason for that is that it looks into the future.",
                    "label": 0
                },
                {
                    "sent": "And evict the page that is going to be.",
                    "label": 0
                },
                {
                    "sent": "Requested the last out of all the pages that are in the cache.",
                    "label": 0
                },
                {
                    "sent": "Right, so it looks at all the guys that are in the cache and picks to evict the one that is going to be.",
                    "label": 0
                },
                {
                    "sent": "Requested the latest.",
                    "label": 0
                },
                {
                    "sent": "Looking into the future.",
                    "label": 0
                },
                {
                    "sent": "And here we get an optimal cost of three.",
                    "label": 0
                },
                {
                    "sent": "Once again, I've put in twelve 3914 and 18 for free.",
                    "label": 0
                },
                {
                    "sent": "25 gives you a page fault, and then it turns out that.",
                    "label": 0
                },
                {
                    "sent": "Let's see.",
                    "label": 0
                },
                {
                    "sent": "How is this 39?",
                    "label": 0
                },
                {
                    "sent": "Is requested again, so will make sure to keep that, but neither 24 nor 11 is requested ever again.",
                    "label": 0
                },
                {
                    "sent": "So we can evict those.",
                    "label": 0
                },
                {
                    "sent": "And that's what we do, I think.",
                    "label": 0
                },
                {
                    "sent": "No, it's actually a team that never.",
                    "label": 0
                },
                {
                    "sent": "That I have 1824 and 11 never gets picked again so we can evict any one of those.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So a simple lower bound proof.",
                    "label": 0
                },
                {
                    "sent": "Of.",
                    "label": 0
                },
                {
                    "sent": "So this is apparently the first formal proof in this building.",
                    "label": 0
                },
                {
                    "sent": "And it's about paging K. Here is the size of the cache, and we assume that M here the slow memory just.",
                    "label": 0
                },
                {
                    "sent": "Contains one more page than the than the cache.",
                    "label": 0
                },
                {
                    "sent": "And the claim then is that.",
                    "label": 0
                },
                {
                    "sent": "You give me any request sequence and LFZ.",
                    "label": 1
                },
                {
                    "sent": "Will.",
                    "label": 0
                },
                {
                    "sent": "A Victor page.",
                    "label": 0
                },
                {
                    "sent": "At most every case time.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "The cost is the length of Sigma divided by K. And.",
                    "label": 0
                },
                {
                    "sent": "The argument is quite simple, so suppose.",
                    "label": 1
                },
                {
                    "sent": "In evict a page P. At time step I.",
                    "label": 0
                },
                {
                    "sent": "Well, that one is.",
                    "label": 0
                },
                {
                    "sent": "The furthest one that's going to be requested out of all the guys that are in the in the cache at the moment, which means that everyone else is going to be requested before P. There's K -- 1 other guys so we have K -- 1.",
                    "label": 0
                },
                {
                    "sent": "Succeeding requests before we get to this to pee again.",
                    "label": 0
                },
                {
                    "sent": "At least they can be more, but at least.",
                    "label": 0
                },
                {
                    "sent": "So the next fault that we get is the earliest position is I + K. Because everyone else has been requested before at least once.",
                    "label": 1
                },
                {
                    "sent": "And then we've got pretty much the same counterexample as we had for the list access problem that we can make sure that any online strategy faults.",
                    "label": 0
                },
                {
                    "sent": "On every request.",
                    "label": 0
                },
                {
                    "sent": "And that's really easy.",
                    "label": 0
                },
                {
                    "sent": "We just pick out Alvin, our friend or enemy whichever way you see it.",
                    "label": 0
                },
                {
                    "sent": "Anne.",
                    "label": 0
                },
                {
                    "sent": "Alvin constructs the request sequence by looking at what you evicted and always requesting that.",
                    "label": 0
                },
                {
                    "sent": "So you have it something.",
                    "label": 0
                },
                {
                    "sent": "Alvin will ask you for it.",
                    "label": 0
                },
                {
                    "sent": "So that will give you a request every time.",
                    "label": 0
                },
                {
                    "sent": "So the ratio between these two.",
                    "label": 0
                },
                {
                    "sent": "Gives you the factor K.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So we not only do 1 proof, will do 2.",
                    "label": 0
                },
                {
                    "sent": "Here is the proof that LRU is actually K competitive.",
                    "label": 0
                },
                {
                    "sent": "And the proof is quite simple as well.",
                    "label": 0
                },
                {
                    "sent": "What you do is you subdivide the request sequence into pieces.",
                    "label": 0
                },
                {
                    "sent": "Sigma 1 Two Sigma L. In such a way that you've got exactly K different page requests in each.",
                    "label": 1
                },
                {
                    "sent": "Sequence and the sequence is maximal in the sense longest possible.",
                    "label": 0
                },
                {
                    "sent": "So make sure it's the longest possible sequence that contains.",
                    "label": 0
                },
                {
                    "sent": "K different page request.",
                    "label": 0
                },
                {
                    "sent": "So what happens then, is that LRU.",
                    "label": 1
                },
                {
                    "sent": "Will incur at most K faults.",
                    "label": 1
                },
                {
                    "sent": "Well, we've got K different page requests here.",
                    "label": 1
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "The first time we request each of them, each of the different ones, we might have a page fault and we'll pay for that.",
                    "label": 0
                },
                {
                    "sent": "So K. Is what we pay.",
                    "label": 0
                },
                {
                    "sent": "However, the optimum.",
                    "label": 0
                },
                {
                    "sent": "Might actually.",
                    "label": 0
                },
                {
                    "sent": "Get to.",
                    "label": 1
                },
                {
                    "sent": "Use get to pay.",
                    "label": 0
                },
                {
                    "sent": "How do you say that might actually get to use the request sequence without paying anything, but look at the next sequence, the sigmai plus one.",
                    "label": 1
                },
                {
                    "sent": "What is the first guy in there?",
                    "label": 0
                },
                {
                    "sent": "Well, the first page in there has to be different from any of the K different requests we had in Sigma.",
                    "label": 0
                },
                {
                    "sent": "I so that means we've got K plus one different requests.",
                    "label": 0
                },
                {
                    "sent": "And that means since there is only space for K. Pages in the cache, even the optimum, has to pay at least one.",
                    "label": 0
                },
                {
                    "sent": "For this.",
                    "label": 0
                },
                {
                    "sent": "And that's the whole proof.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "That's the theory.",
                    "label": 0
                },
                {
                    "sent": "If you look at experiments on operating systems and things like that.",
                    "label": 0
                },
                {
                    "sent": "They tend to show that if you have sufficiently large cache sizes in relationship to.",
                    "label": 1
                },
                {
                    "sent": "The slow memory.",
                    "label": 0
                },
                {
                    "sent": "You get actually constant competitiveness.",
                    "label": 0
                },
                {
                    "sent": "You don't.",
                    "label": 0
                },
                {
                    "sent": "You don't get a lot of page faults.",
                    "label": 0
                },
                {
                    "sent": "In comparison to the optimal situation and the reason for this, something that Andre talked about this morning as well is this concept of locality.",
                    "label": 0
                },
                {
                    "sent": "The fact that we tend to write programs that use the same variables.",
                    "label": 0
                },
                {
                    "sent": "In the same context for quite awhile before we moved to a different context and we use some different algorithms that might incur one or two page faults.",
                    "label": 0
                },
                {
                    "sent": "But then we'll do while loops and for loops and loops and other things, recursions and stuff dealing with those particular variables.",
                    "label": 0
                },
                {
                    "sent": "Right?",
                    "label": 0
                },
                {
                    "sent": "So there's a real discrepancy between the theory and the practice here.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 1
                },
                {
                    "sent": "To introduce or to show you how competitive analysis might work.",
                    "label": 0
                },
                {
                    "sent": "This is an excellent example, but doesn't tell you anything about how things work in real life.",
                    "label": 0
                },
                {
                    "sent": "Can we do something randomized then?",
                    "label": 0
                },
                {
                    "sent": "Well, what does randomization mean in?",
                    "label": 0
                },
                {
                    "sent": "In the competitive sense.",
                    "label": 0
                },
                {
                    "sent": "Randomization pretty much means that, well, Alvin is allowed to look at your strategy.",
                    "label": 1
                },
                {
                    "sent": "And find out the different distributions that you're using too.",
                    "label": 0
                },
                {
                    "sent": "Makes it and choices, but he's not allowed to look at the outcome of those.",
                    "label": 1
                },
                {
                    "sent": "Actually, you can define different classes of alvins.",
                    "label": 0
                },
                {
                    "sent": "Depending on what strength you give them, but pretty much that's what we're going to do so.",
                    "label": 0
                },
                {
                    "sent": "Alvin is.",
                    "label": 0
                },
                {
                    "sent": "Is has too.",
                    "label": 0
                },
                {
                    "sent": "He's allowed to look at your strategy, but then he has to.",
                    "label": 0
                },
                {
                    "sent": "Construct the request sequence.",
                    "label": 0
                },
                {
                    "sent": "By himself and give it to a friend and then he's not.",
                    "label": 0
                },
                {
                    "sent": "Is not in play anymore and the friend is an honest friend in the sense that he will give you your strategy, their request as Alvin produced it with no changes, which means that you can actually win a bit using randomization and we look at that.",
                    "label": 0
                },
                {
                    "sent": "In 15 minutes.",
                    "label": 0
                }
            ]
        }
    }
}