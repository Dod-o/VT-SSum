{
    "id": "54pqoncwgly4veha3bzjerz5llna27bx",
    "title": "Ontology reasoning",
    "info": {
        "author": [
            "Irini Fundulaki, Foundation for Research and Technology - Hellas (FORTH)"
        ],
        "published": "Oct. 22, 2015",
        "recorded": "September 2015",
        "category": [
            "Top->Computer Science->Semantic Web"
        ]
    },
    "url": "http://videolectures.net/eswc2015_fundulaki_ontology_reasoning/",
    "segmentation": [
        [
            "So where I'm going to talk about the language, I will.",
            "It's the ontology web language, Elena this morning she said a lot about how to model ontologies.",
            "She said about classes, about properties, about relationships.",
            "But she never talked about while she talked about, but she didn't really went into details about what are the languages that we use in in semantic web in order to encode or write about ontologies.",
            "So RDF and RDF swell our DFS.",
            "The iris or description framework Schema language is one that I think Barry talked about yesterday is one language that you can use.",
            "We all use actually to write about ontologies.",
            "Owl is one language which is much more expressive than our DFS has much, many more constructs.",
            "An RDF S and it's it's well.",
            "I'm going to talk about and present what what this language is about."
        ],
        [
            "So the requirements for an ontology language, well, ontology languages allow users to write formal conceptualizations of domain models.",
            "I think Elena demonstrated pretty well what?",
            "I could see what the conceptualization of the mind of a domain model is now.",
            "The requirements that we have for such ontology languages is that they they should extend, extend existing semantic web standards and build upon their syntax.",
            "Why is that?",
            "Because this this is a necessary condition for machine processing for processing information for machines and also for humans, the syntax is the existing web standards or syntaxes upon which our lease pay well.",
            "The ontology languages should be based on should be XML, RDF, and RDF San.",
            "Also HTML.",
            "With respect to our DFA, which well aged our DFA is, HTML plus RDF, it has some.",
            "Let's say it has some sentences of RDF.",
            "In order to talk about the semantics of of HTML, the ontology language should be easy to understand the news and should be based upon existing knowledge representation languages.",
            "It should have sufficient expressive power, not expressive power which.",
            "You know it should actually allow you to say everything, but at the same time be sufficient for the domain, but also at the same time B.",
            "How can I use put that be enough to have?",
            "And to be able to reason about it efficiently.",
            "So lost it should have four month semantics in the sense that they describe the meaning of knowledge formal in precisely, without any intuition or any.",
            "Let's say open window to different implementations and should be essential for automatic automated reasoning support."
        ],
        [
            "Now, for RDF and RDF S, the modeling primitive, sort of RDF and RDF Sr.",
            "Classes, properties and attributes.",
            "These are the the basic things and there you can have some subclass of the hierarchy of classes and the hierarchy of properties as well, and so subclasses so our DFS, not RDF RDF's, allows you to define subclasses of probability hierarchies and also allows you to define global domain and range definitions for properties if you remember before, Elena said about.",
            "Talked about that the property can be defined upon a class and take its values in a domain.",
            "Can be a class or can be a data type like a literal write string or a date or an integer for instance.",
            "So are the affairs gives you two specific constructs, are the first domain on the RDS range.",
            "I'm not sure whether Barry talked about this yesterday or Elena talked about it for sure this morning where you can define global domain and range constraints.",
            "So globally you can say that the name of the person is defined in class person and takes its values in class in data type string OK.",
            "Note what is missing from our definite DFS are the fact that we cannot.",
            "There are a lot of things missing.",
            "First of all, we cannot talk about disjointness of classes.",
            "We cannot say that two classes are disjoint.",
            "We cannot express complex class expressions.",
            "OK, we cannot say that one class can be defined by unions of other classes.",
            "OK, we cannot talk about cardinality restrictions, acknowledge restrictions on properties in the sense that here it is here is.",
            "I have this property and for this class and have for instance just for values or two values or one value.",
            "OK, I cannot talk about these things.",
            "I can also talk about special characteristics of properties.",
            "I cannot say that the property is transitive forest as it is reflexivity symmetric.",
            "It is functional.",
            "You know I cannot define uniqueness on properties.",
            "So so this is so.",
            "These are some of the missing points of our."
        ],
        [
            "No, So what happened is that W. 3C I don't know.",
            "Do you know W 3C.",
            "Yes, yes no.",
            "OK so W 3C organized well created the working group, the Web Ontology Working Group in 2001 like 14 years ago ohmygod not identified test cases that actually required much more expressiveness than RDF and RDF'S.",
            "OK, so this actually led to a joint initiative.",
            "That produced daml oil.",
            "This is a language.",
            "It's well, it's.",
            "There are two.",
            "There is always the US and EU.",
            "There used to be US&U, so this is doubled from.",
            "I think it was from the US, an oil which is from EU.",
            "And then this was the starting point of the W. 3C Web Ontology language of owl.",
            "Now so more or less well, briefly, our little mythology language designed for the semantic web, it has the representative well it uses web resources in the sense of your eyes that are there for.",
            "So it's so it's a knowledge representation language that uses your eyes for web resources, and it is based on description logics.",
            "It provides a rich collection of operators performing concept descriptions.",
            "This collection can be for instance the the Union conjunction, the disjunction, it can be there section can be complementation etc.",
            "It promoting their operation and sharing between applications and it designed to be extended to be.",
            "Compatible with existing web standards.",
            "So for instance, Owl is based.",
            "It uses basically when it was defined basically on index on.",
            "Sorry on syntax, an XML RDF XML syntax."
        ],
        [
            "I will it has two versions.",
            "The first one hour one was a double became a W3C recommendation for the Semantic Web back in 2004, and I will do it is became a revised, revised version of how well one it has some additional, let's say, features many additional features and it became a revised recommendation in 2009, and I will do is much more expressive than our one in the sense that takes advantage of development in.",
            "Description logics, reasoning techniques and provides more advanced features.",
            "Provides, for instance, characteristics and properties that are well, one didn't provide, such as replica flexibility and assignment, US symmetricity or asymmetric being able to define the two properties, some osymetric etc."
        ],
        [
            "So.",
            "So what, uh, what happened with our Leonard DFS?",
            "And then ideally, our would be an extension of RDF schema.",
            "You say?",
            "OK, here is my RDF schema I have.",
            "I have it and then I'm going to extend it in order to build our to build yet another language I will could use.",
            "For instance the meaning of classes.",
            "That is our DFS class and properties in the in the set of RDF.",
            "Call Darby's property and and adds the language primitives in order to get some more expressiveness that in that way it would be.",
            "Our would be consistent with the layer with the layering architecture of the semantic web.",
            "I don't know if you remember that there was HTML and it was XML then was RDF and was sparkle and then you start having semantics on top of those languages.",
            "Much richer semantics.",
            "So, but the problem is that such an extension we would work against obtaining expressive power and efficient reasoning mechanisms that would lead actually and in one of these languages of our well in our full that will lead to uncontrollable computational properties so that that it would lead to.",
            "Cases in which the we cannot well reasoning is undecidable.",
            "We cannot decide whether a property holds or not.",
            "So so yes.",
            "Yes.",
            "Yeah.",
            "Yeah, well RDF started in 1998.",
            "Maybe when you were still very very young.",
            "So our defense class so.",
            "Plus is a set of things, right is a set of instances instead of individuals.",
            "It means that it talks about the schema at the schema level.",
            "OK.",
            "This is why why we have our DFS class?",
            "It's RDF schema.",
            "So it's RDF&S.",
            "It's a schema, and that's the class is about.",
            "The schema is about, you know, user defined classes are instances of RDF's class.",
            "This is how you model you create RDF.",
            "You say that my class person is an instance of RDF's class.",
            "OK, now in the case of properties and this is my explanation because I was not there with the people who designed RDF is that properties you can you can find without any schema you know you can just.",
            "About properties, you can say that a person has a name or a person has an age without having the schema.",
            "The appropriate class of properties of age, properties or of name properties to go with.",
            "So this is again my explanation why they pointed RDF property instead of RDF's property.",
            "Again mid this is my explanation.",
            "You can find you can look at it and.",
            "Well, our DFS column property does not exist.",
            "OK so I don't know whether it depends.",
            "So for instance, you can have.",
            "You can have parsers that says that anything that starts with RDF store.",
            "RDF is a.",
            "Let's say it's a locked or it's a stop keyword in the sense that you say that if you if I have RDF an double column.",
            "I'd say then after that should be property or should be comment or should be labeled.",
            "Otherwise it's a syntax error.",
            "OK, if now you have a parser that does not really understand it might it will get the RDF property as a user defined property where the user defined term.",
            "I don't know what how you will define it, but surely it's not going to.",
            "It's not going to take the idea that you want OK?",
            "OK, so this the this set of requirements is this full set of requirements was unattainable and for this like actually to be able to have.",
            "Will be consistent with the layering of the semantic web and also have.",
            "The expressive power that you want and also to be to have the decidability for the computational power of the engine.",
            "So for this case for four to.",
            "So in order to attain this purpose, an.",
            "Well defined, three different sublanguages of how well each geared towards fulfilling a specific set of requirements, OK?",
            "So."
        ],
        [
            "This three sublanguage of our full hour.",
            "DL an hour light so there is an increasing so if you if you see there this this box you have our DFS you have our light, our deal and our full and it's they are placed in a way where I have increasing expressivity and increasing complexity.",
            "So the list the least expressive language is our DFS where I have classes and properties.",
            "Then I have lights that actually I start putting some.",
            "Issues some well.",
            "Strange there DLN full there is these.",
            "There's a difference between syntactic layering and semantic layering in the sense that.",
            "For, for instance, for the semantic layering, our deal semantics are exactly the owl full semantics within the defragment, and then our light semantics are exactly the DL semantics within the light fragmente.",
            "So."
        ],
        [
            "So let's let's see a little bit about.",
            "Let's see specifically specifically each language what it has, so our full is the richest one it has.",
            "It uses all our primitives, everything it allows the combination of primitives with RDF and RDF'S in arbitrary ways.",
            "So for instance, you can include the possibility of changing the meaning of predefined constructs in RDF S. So for instance, you can impose in a cardinality constraint on.",
            "The class classes of all classes.",
            "So you can say for instance, that I want the class of all classes to have just four classes there, right?",
            "So you know where there is no such, there's no such restriction on RDF.",
            "Oh my God, it's very hot, OK?",
            "So so all our for instance and different.",
            "Another thing is how you can handle classes as instances.",
            "So for instance you can have extra class which is can be actually class can be an instance of a class and instance can be a class itself.",
            "So you have all those meta modeling and we as we call them layers.",
            "So you can start and you have your instances and you can have your classes and then your classes can be instances of other classes and classes can be Stan so other class etc.",
            "So this actually gives a power to owl, which is to our full which is non you cannot.",
            "You cannot do many things without this.",
            "You know in a database is in in reasoning, for instance.",
            "Then you can.",
            "You can go into completely undecidable situations.",
            "So the advantage of our phone so you can express anything in our full is that it's fully upward compatible with RDF and RDF S. Both syntactically and semantically, it means that if I get a said if I get any legal and illegal, it means that it parses by an RDF parser.",
            "If I get any legal RDF set of statements is also illegal.",
            "Set of full set of.",
            "Our full set of statements OK, but disadvantage.",
            "Is this an undecidable language and there is no efficient reasoning support, so there is no way that there is, well, until I recently.",
            "I don't know if there is anything new here.",
            "There is no efficient reasoning support for our food."
        ],
        [
            "No, I will.",
            "DL is a simple language foul full.",
            "It restricts how the constructors of how well an RDF can be used and that means that it cannot modify the instances of predefined constructs as it was the case in our full and for instance classes cannot be instances OK, classes are classes cannot be instances, because then you have the classes, instances of classes etc etc.",
            "So you have this meta modeling construct.",
            "It is defined by an abstract syntax and mapping to RDF.",
            "And there is a direct mapping, two description logics and two 1st order logic from our DL two there.",
            "So the advantages of our DL is that it has well defined semantics, very well defined semantics.",
            "It is.",
            "It has well understood formal properties like such as complexity and this.",
            "They say that this side ability because actually it Maps to 1st order logic.",
            "So we know what 1st order logic is about.",
            "It has an efficient reasoning support and it has highly optimized, implemented systems.",
            "That disadvantage is that there is no direct compatibility with RDF, so any legal RDF legal set of statements must be extra extended and and or restricted in order to be illegal and sets of our DL statements."
        ],
        [
            "No.",
            "Our light is the is the least powerful language of our.",
            "Well, it's on the bottom of the stack.",
            "It has no.",
            "It's a sublanguage of our deal, hence is a block.",
            "Which of our full it has no ability to support explicit negation or union.",
            "It has no excludes disjointed statements.",
            "Whether this was not the case in the island full, it excludes enumerated classes as ranges of properties.",
            "And it supports cardinality constraints.",
            "Just zero or one.",
            "So we now in our light.",
            "I cannot say that this property has four values.",
            "I can just say that this property has zero or one value, nothing more, nothing less.",
            "And it's also Maps directly to the island and 1st order logic to 12 description logics language and 1st order logic, and it allows reasoning through standard RDF engines well.",
            "So for instance you have pellets.",
            "One reason are fact Racer, an hourly.",
            "The advantages is business of implementation, efficient reasoning and of course when.",
            "When I have a few efficient reasoning and easiness of implementation and miss something from expressiveness, so the disadvantage of the language is that it is has very limited expressivity."
        ],
        [
            "Now a.",
            "When you create your ontologies, when you're going to create your ontology, people are going to ask, so which.",
            "No not people, but you are going to ask.",
            "So which language should I use and why?",
            "So for instance, in our light.",
            "So if you want to express only classification hierarchy in simple constraints, you go with our light right?",
            "Is this the least the simplest expressiveness expressivity that you can get, and it's it's implemented.",
            "Efficiently and easy.",
            "So I will be.",
            "I'll has maximal expressiveness.",
            "You can get a lot for our deal.",
            "Trackability still maintains and there is a standard formalization.",
            "We can map it to DL 1st order logic so we know its its properties and we know it's.",
            "It's computational properties and full, and finally with how well full we have very high expressiveness.",
            "Tractability is lost, so if you just want to sit down and do your nice exercises without really having in mind at all whether you would like to have a model.",
            "To implement something or you would like to have something which has computational it's computationally decidable.",
            "Then you can go with our full.",
            "You can just do your exercises with our full.",
            "There's no standard formalization, and there's a syntactic freedom of RTF.",
            "You can write more or less everything."
        ],
        [
            "No, so this where the initial, let's say introductory things.",
            "So in our.",
            "For now, let's look 1st at our one.",
            "So the syntax that we are you are going to.",
            "We're going to look at is the RDF XML syntax for our one.",
            "It is based on an XML schema definition.",
            "Do you know what an XML schema is?",
            "You don't know XML, you know.",
            "Yes, well, XML schema is yet another recommendation of W3C that allows one.",
            "Do to specify schemas, but in XML it's that simple.",
            "Well these are the schema as a language is not simple at all, but it's.",
            "I'm very sorry it's very hot, so XML XML schema is a complex language.",
            "It was developed.",
            "I think it became standard in 2005 maybe or six if I'm not mistaken it is quite complex and allows you to do many things.",
            "What well XML schema, what you have to think about XML.",
            "XML is about trees.",
            "Write an XML document.",
            "Is a tree an XML schema allows you to define.",
            "Statements about trees, but you want to represent in XML.",
            "Yes, OK."
        ],
        [
            "OK, so.",
            "Let's look more about this hour thing.",
            "So first of all, when you start writing an ontology, you are going to write about you're going to.",
            "You are going to write that you have this.",
            "This bunch of code this this piece of code.",
            "Actually you're going to have an hour long teologi are there for about something.",
            "Then you're going to have a URL there.",
            "You're going to write a version of, so the version of the ontology and you are going to write, for instance, the private private version of the ontology.",
            "So you're going to write a bunch of things regarding the versioning support for this ontology.",
            "You can, you can also.",
            "Talk about the fact that it goes.",
            "It's backwards compatible with because you need to know.",
            "Well in some cases you need to know which is the ontology that this is the prior ontology with which this current one is compatible with or incompatible with OK, and then you can have.",
            "Also you can talk about in the meta data in the header on the ontology header.",
            "For meta data you can talk about which were the classes that were deprecated or the property is deprecated in this ontology."
        ],
        [
            "OK, so let's go into more interesting things now.",
            "As Elena said, one, you create ontologies.",
            "One big important thing is how you create actually the classes and the properties.",
            "OK, so if you want to define a class then you are going to define that you're going to write our class.",
            "It is distinct from our TFs class.",
            "It's not the same, and it's needed for our light and our deal.",
            "We said that our full is compatible with RDF, so there are the first classes.",
            "Our class an hour difference class are kind of the same now.",
            "In Owl Owl, specifies our think, which is everything that is actually a member of class.",
            "Sorry, everything is a member of class.",
            "Our thing.",
            "So a class is a member of an owl class is a member of class owl thing OK and you have well."
        ],
        [
            "So have our nothing, which is the represents the empty class.",
            "OK. Now the second building block for your ontologies are properties, so you have our top object property.",
            "It's a property that links every individual that links every dividual to every individual and you there we distinguish between objects, properties and data type properties.",
            "An object properties one is a property that actually links an node resource.",
            "To a value that is another is another resource.",
            "OK, the links object data type property is 1 is a property that links an object to a data value OK?",
            "So.",
            "So far, so I'm not sure I have OK.",
            "So, for instance, let's say person is an owl class.",
            "Name is a data type property that it's ranges person in its domain is string and age is another data type property.",
            "But is this domain is this person and Israel range.",
            "It is integer or yes integer, let's say.",
            "And you have friends of which is.",
            "It's a.",
            "It's an object type property.",
            "It's an object property whose domain is person and ranges also person because the person know whose range can be think.",
            "Because a person can be friend with everything.",
            "Hopefully yeah.",
            "Sometimes accept people."
        ],
        [
            "Anyhow, so.",
            "Anne now.",
            "As far as Elena said before, a class is defined as a group of individuals that are kind of common who share some properties there is.",
            "There are commonalities between them.",
            "Now in our terms, classes associated with a set of instances of individuals, and this is called the class extension.",
            "OK, so for instance.",
            "I don't know.",
            "I don't know your names and you allows.",
            "Nicholas Nicholas is an instance.",
            "If it's in the extension of class person, right?",
            "And OK, so so it is in an extension and is an instance of class person.",
            "Now a class is an intentional meaning in the sense that it is related, but it is not equal to its extension in our well now we have the open world semantics as I don't remember if yesterday you were here when we spoke with.",
            "And when we mentioned something with Barry about the open world semantics in the sense that if I represent something, if I have this set of instances, it doesn't mean that this is my only set of instances in open world semantics in our in RDF we know that this is the.",
            "This is the set of instances.",
            "Now it might change in the future and the clothes.",
            "Well, semantics.",
            "What I say is that this is it.",
            "This is the set of instances now.",
            "OK, so this is my.",
            "This is this is my population and also in all under open world semantics.",
            "Owl is not.",
            "It's not cannot be interpreted as a constraint language.",
            "That's what Barry was saying yesterday.",
            "OK.",
            "I'm just adding more information.",
            "Nothing is invalid when I interpret our as under the open world assumption.",
            "OK, so in this in that sense two classes may have the same the same extension, the same set of instances, but they're not the same.",
            "Then we're not talking about the same.",
            "The same concept.",
            "For instance, I can have I can have.",
            "A situation where I have the class person has well here you are all.",
            "People right?",
            "Yes.",
            "OK, and then you are all students right here.",
            "Person and students are the same.",
            "The you have the heaviest classes, the same extensions but they are not the same classes right?",
            "Because I'm a person, but I'm not a student, right?",
            "OK.",
            "So OK, so we have the classes and then we have the extension of the classes, the individuals and then we have.",
            "Actually The thing is how?",
            "How do we express this?",
            "How do we?",
            "How can we talk about a class?",
            "How can we define a class?",
            "How can we describe a class at a class?",
            "In our we have four ways of describing a class.",
            "First of all is by stating a class identifier which can be URL reference.",
            "You all know what your eyes are.",
            "It can, a second one can be an exhaustive, exhaustive enumeration of the individuals that belong to this class.",
            "So for instance, the class of the student Sofia's WC 2015 are all of you.",
            "That's it, OK.",
            "It can be a property through property restriction and through the end by actually expressing new concepts such as by intersecting union on, complementing existing classes, OK.",
            "So."
        ],
        [
            "Let's let's see.",
            "So this is very simple in a class description and you are a reference or for instance I can writethisdpi.org #artist is a set of artists right?",
            "And then I can declare that DB pedia.",
            "Yes, hush Tom Waits is a member or instance of the class artist.",
            "OK, so here is what I write.",
            "I write.",
            "Here is our class.",
            "It is about this.",
            "This URL and here I right?",
            "Well I I write information about the label of the class, so here I write the name of this class.",
            "This is a UI you can could have been.",
            "This unreadable thing that you looked yesterday at Musicbrainz, but here are right there.",
            "DFS label of this thing in the in the English language is artistan in the French language languages artist.",
            "OK, now if I want to state that if I want to talk about any individual definition RDF XML in our well I'm going to write our named individual has a name is Tom Waits.",
            "This is again are you are.",
            "I could have been a Uri 1234567.",
            "OK now I want to write that this that this the resource depicted by this yr I lose by the way, don't wait is a type is of type artist so.",
            "I'm just going to write RDF type RDF resource artists.",
            "OK."
        ],
        [
            "No classes are fine.",
            "Now The thing is, how do I organize my classes when I write ontologies, one of the first things that you have to do, but you would like to do or?",
            "Depends on your task is organized as classes in hierarchies right?",
            "And this organization can be is possible through the subclass of property or DFS property.",
            "So I can write for instance that class HTTP dppedia.org artist is a subclass of class person.",
            "Now I have this OK, sorry I repeat this thing here."
        ],
        [
            "So the second the second thing is the 2nd way of describing a class through is through an instance enumeration.",
            "So for instance, So what it what does it mean?",
            "And instancing Malaysian?",
            "I said before that the the students of this school.",
            "No, yeah, the students of the school.",
            "It's you, right?",
            "If so, if I wanted to, if I wanted to write to define the class student Sophie SWC Summer School 2015 I would take each one of you I would assign to you to each one of you one you are I and then I would say this is this is the class the class is defined by each one of you, yes.",
            "Yeah well yes.",
            "Well The thing is that in the open world assumption then you cannot change anything.",
            "This is your class.",
            "You when I say that this class is defined by enumeration of 15 or 25 instances, this is the definition of the class.",
            "It is going not going to change the open world assumption.",
            "This is, I'm stating exactly what is the instance of the class.",
            "I cannot change it that it will not going to change on the open world assumption.",
            "OK, so and actually, yeah, that's what I, that's what I mean.",
            "No new instances can be added in this in this in the extension of this class.",
            "I'm just saying that the the the students of this school are are those 25 people who are here.",
            "That's it.",
            "So here I'm going to so this is an example, so our class jazz genre collects all type of all types of jazz music.",
            "So here I'm going to talk about class.",
            "This class, just general and I'm going to say that this one of these things.",
            "OK.",
            "I don't know how many in the R 2X.",
            "So then OK, so this class.",
            "Is then instances.",
            "OK."
        ],
        [
            "Now the third think the 3rd way to define a class.",
            "So we said your eyes, then we said enumeration through its instances and now it's through property restrictions.",
            "This this description is interesting in the sense that I can describe an anonymous class.",
            "Namely, class of all the individuals that satisfy this restriction and our different our distinguish between 2 two ways of defining description.",
            "First of all, this cardinality constraints cardinality constraint.",
            "When I say for instance that the property can have, this is the maximum number of values at the property can have.",
            "This is the minimum number of values and this is exactly the number of values that this property can help and you remember before.",
            "When I said that in our light, which is this the simplest?",
            "Let's say the simplest form of our only cardinality's of zero and one are allowed.",
            "It's not oh to zero there.",
            "So and then the the the other kind of constraints are arranged constraints for range constraints.",
            "I have the existential.",
            "Existential quantification in universal quantification.",
            "So this means that I'm going to define one property well.",
            "There exists at least one value that takes.",
            "This is my property.",
            "Our existing one value that takes its that takes exist.",
            "One property that takes its values from concept C or it's all for all properties for all properties of this property, their values are taking from concepts.",
            "OK, so The thing is the interesting thing.",
            "One where we're talking about our DFS and RDF.",
            "We said that domain are DFS domain and range are actually yes.",
            "Yeah, I am.",
            "There is an example.",
            "Later on I can I you will see the example that comes after that."
        ],
        [
            "Here.",
            "I say that a string quartet has exactly 4 members.",
            "OK, this is what I want to say, so then I'm going to say that the property I'm going to define a restriction I'm going to define a class string quartet.",
            "This is equivalent class of a class that is defined by a restriction on the has members on this property and the value of this property is exactly for owl cardinality OK?",
            "Mrs String Quartet String Quartet has four members, so the way I'm defining is my saying that the String Quartet is an equivalent class of some anonymous class where the property, if it has a property, has members.",
            "It has just value for.",
            "OK, is it?",
            "OK."
        ],
        [
            "So OK, so those constraints are local constraints.",
            "OK, that's why I said so.",
            "In the example that I showed just one second ago, I said there is the the String Quartet has is equivalent class to some anonymous class that has members.",
            "This has members, is defined only form in order to define the Jazz, the String Quartet.",
            "So if I wanted to three, I don't know.",
            "Know trio, for instance, I would define again an equivalent class on his members with OWL cardinality 3.",
            "OK, this is just a local constraint, does not apply globally as it used to be with our DFS domain and range constraints.",
            "So this is the general form of property restriction."
        ],
        [
            "Hear this.",
            "OK. Is this I define my class an equivalent class and this is the restriction on the property that I'm interested in OK in the same time here I said string Quartet has exactly 4 members.",
            "I think below I have."
        ],
        [
            "Yeah.",
            "A full size the orchestra has at least 70 and most hundred members, so again I define my class full size orchestra and I define it equivalent to a restriction to an anonymous class defined as a restriction with min and Max cardinality 70 and 100.",
            "And again, this is not a I'm not able to do that in our light.",
            "I said I know I like just zero and one cardinality OK. Is everything OK?",
            "Yeah."
        ],
        [
            "OK. No.",
            "I showed you about the cardinality constraints.",
            "Now about the local range constraints, so I can define so local range constraints give me the possible allow me to define a class based on the type of property values.",
            "Up until now I said how many property values.",
            "Now I want the type of property values.",
            "So for instance, and as I said before, it's different from the global or DFS range and domain constraints.",
            "OK.",
            "In the RDF S, the domain and range constraints and I should have said that before is defined for everything.",
            "I said that for instance, I have the class.",
            "Sorry, I have the property name and it's defined on class person and takes its values and clustering OK or I have the property name and it takes its values in class person in class house in Class St and exits values in class in the data type string.",
            "This is defined for all instances of name.",
            "Should adhere to those constraints.",
            "Here I can have his members I can have.",
            "I can have.",
            "In my previous example well.",
            "If his members takes its values in, for instance in people when I'm talking about on musicians, we're not talking about museum orchestra.",
            "Sorry, not a museum musical and orchestra.",
            "I can have.",
            "It takes its can, take its values in footballer.",
            "If I'm taking about a football team, it can take its values in student in mind.",
            "The infant talking about a class of students etc.",
            "OK, the same property.",
            "So I have two.",
            "I have two I have.",
            "We have two constructs.",
            "We have some values.",
            "From where is the existential quantification where defines the class of individuals X for which there exists at least one value Y.",
            "This is the existential quantification, the reverse epsilon, but it can be an instance of Class C as it as it is, it's shown there all of the specified data range.",
            "Such that X, C is an instance of property P. OK, so let me.",
            "So here for instance.",
            "OK, so this is.",
            "OK, so this is."
        ],
        [
            "They exist, so for all it's more or less the same."
        ],
        [
            "Yeah this OK.",
            "So if I want to say for instance that at least one of the members of a jazz band plays the saxophone, then I can just say that I have the jazz band Member, then this is an equivalent class to an anonymous class where.",
            "These are not this anonymous class of something.",
            "His value has a constraint on value plays instrument, where some values from are taking from saxophone.",
            "OK, so I'm just saying here that adjust band Member is an equivalence Class 2 to a class XY zed.",
            "I don't care about the name of the class with actually specified, but if I have a blaze instrument then it should be.",
            "Then it should take the value of saxophone OK. No."
        ],
        [
            "In the same spirit, all values from it tells me that if I have.",
            "Well, if I have a. OK.",
            "It's this construct this.",
            "Our construct defines a class of individuals for which it holds that if the pair X, Y is an instance of this property pin OK, then why should be should be must be an instance of classy or a value in the specified data range?",
            "So this C can be a concept can be a class or can be specified data range.",
            "OK, so let me."
        ],
        [
            "See this, so for instance, members of a string quartet play one of violin, Viola, cello and double bass.",
            "OK, so I define here the class string Quartet, and I have here.",
            "It's an equivalent class to the class of a class of musicians.",
            "Let's say sorry to semantic class to an anonymous class, an anonymous class where the restriction on property plays instrument of this anonymous class should be one of those four values.",
            "So for all should be one of those things.",
            "Yes.",
            "One more thing is settled other ones custom.",
            "Yeah no, no.",
            "Here I said that all values from should be taking from the set of those values.",
            "OK, so The thing is that if I have an instance of class string Quartet member, then this guy should play one of the one of those 4 four instruments.",
            "So.",
            "Yes, yes.",
            "1.",
            "Yes yeah yeah yeah yeah.",
            "Yeah, well, The thing is that here I'm just defining, sorry here I'm defining.",
            "How can I say this here you say that all values from should be taking from the class of those four instruments.",
            "For instruments, yes, previous was this.",
            "So here is I have one string Quartet member should be.",
            "It is an equivalent class to a class that has a property that the values are.",
            "This are those four before it was the genre.",
            "The values are those four.",
            "You see what I mean?",
            "All the members of the class.",
            "OK, OK. One playing instrument property.",
            "Yes yeah yeah.",
            "OK, is it OK?",
            "It's a bit confusing, but yeah you will, yeah.",
            "It takes time.",
            "OK, so for instance and then the last thing is that."
        ],
        [
            "So in all lights can be used only with named classes or data types.",
            "OK, now in our has value.",
            "It defines the class of individuals X such that they have as property they have as value for property P exactly this.",
            "One value, V that is equivalent to V, right?",
            "So for instance, you can say."
        ],
        [
            "Here.",
            "I can say that violence is the instrument of a violinist, so here I can say that the violinist is the class of, well, is the class of violence.",
            "It is equivalent to.",
            "Do an anonymous class where plays instrument is exactly the violin OK?",
            "Is exactly this way."
        ],
        [
            "OK, so first of all you are.",
            "I then enumeration, then property restrictions and now class descriptions through set operations when getting richer.",
            "So what does it mean?",
            "It means that I can define a class based on as a union intersection as a union, intersection and complementation of of another client of a set of classes.",
            "So for instance, the hourly intersection of it links a class to a set of classes, restrictions, class descriptions, so describes actually an anonymous class whose classic extension is nothing but the intersection of the extensions of the of the classes.",
            "OK, now in the same spirit union of again it links.",
            "Class description at last a list of class descriptions.",
            "A class name to list of class descriptions, and describes the anonymous class now and this is in parentheses.",
            "Anonymous class because I can say that this is.",
            "Do you understand what an anonymous classes?",
            "No, I don't have class.",
            "The class that has no name.",
            "So for instance before sorry.",
            "Yes, exactly so.",
            "For instance, before I said I said that glass can be defined by UI.",
            "This is a name class.",
            "I know that the name of the classes blah blah blah thepedia.org/sorry hush artist.",
            "This is a name class while all the classes that I have defined up until."
        ],
        [
            "Now.",
            "This is this is an equivalent class to something.",
            "This is this defines here.",
            "This restriction defines me an anonymous class does not have a name.",
            "This basically is going to be interpreted as a blank note when you are going too well in the in the store.",
            "In the RDF engine, in the triple story it's going to interpret it.",
            "It's going to be interpreted as a blank note, OK?",
            "So.",
            "So."
        ],
        [
            "Describes an anonymous in parenthesis that mean parentheses miss.",
            "It can be also named right.",
            "I can say that the class of.",
            "Class of students of this year and last year he SWC Summer School is the union and I can I can I can I can give a name to this class it's going to be this class of students of 2004 fourteen 2015 summer school and this name named class.",
            "Now it's not an anonymous class.",
            "This name class is going to be defined as the Union of the extension of the two of the of the two classes of the students of 2014 Summer School in 2015.",
            "Summer school.",
            "OK, so."
        ],
        [
            "And then finally the complementation is the complement links one class to exactly one class description.",
            "This is a unary operator as it is in logic, right?",
            "This is the complement negation in this.",
            "Well, it's another as I say, say on the third bullet.",
            "It's analogous to negation, and it describes a class for which the extension contains exactly those individuals that do not belong to the extension of the of the class of the of the class of which I'm defined.",
            "Well, I'm I define this class as a complement of.",
            "Well, I think yesterday it was what Buddy said about and.",
            "No, yeah, the mushrooms the poisonous mushrooms.",
            "I mean I have the class of poisonous mushrooms.",
            "What is the complementation of of this class?",
            "The complementation is you and it includes you because you are not the poisonous mushroom, right?",
            "It's like X.",
            "It's everything that is not in this set.",
            "OK, this is the negation thing.",
            "I'm sorry.",
            "Yeah.",
            "No, go ahead.",
            "Don't be long.",
            "Yeah, I belong in this class.",
            "Yes.",
            "Yeah yeah well, the thing from again I'm not of the people who defined our.",
            "They were very well extremely bright people who.",
            "Who are working for that?",
            "But I think that the way that they did it was just too.",
            "Let's say they took the operators, the binary operators and the unary operators of logic, and then they said, let's define a language that has that.",
            "So for instance, I can define.",
            "So let's say."
        ],
        [
            "If I want to define a set based on the intersection of other sets, I'm going to use our intersection of.",
            "If I want to define a class based on the Union of other classes, I'm going to use our union of and then let's add negation and see how beautiful it is right?",
            "And then I'm going to add the negation as well.",
            "OK, so this is.",
            "We have left.",
            "No.",
            "Me or you or any other things that is not yeah.",
            "No, it's going to be considered from what I understand is if you define that an edible mushroom ISM is the schema level you define.",
            "An edible mushroom is a compliment compliment compliment of the colors of poisonous mushrooms.",
            "Then this means that everything that is in your knowledge base at that point becomes an instance of the poisonous mushroom, one of the complementation of of whatever.",
            "It is.",
            "OK, so this is how you should interpret it, yeah?",
            "They're just because they're examples.",
            "Well, The thing is that you can write a restriction restriction basically does not.",
            "From what I know does not allow you to define and named class, just an anonymous class.",
            "OK so this is, this is how you can you can play right now The thing is in our light for instance you can say that the restrictions are not applied only to named classes, not to anonymous classes so.",
            "When I talk about restriction, I'm going to say that I have this restriction on this, let's say here.",
            "So here I'm going to say RDF our class RDF about something, and then I'm going to define this restriction OK. Is it OK?",
            "OK, so here for instance I'm this is an example of an intersectional for when I want to say that and all and all female band is a band whose members are all female musicians, right?",
            "So I'm going to I'm I'm defining the class.",
            "All female band which is equivalent class to go to the intersection you see the intersection.",
            "I I say this is an intersection there section.",
            "In the past types collection because it's a collection is a set of things, right?",
            "This is a bar style collection of our class.",
            "This one of our class musician, an hour class female band and then the female band.",
            "I define it as S as defined.",
            "The sorry female is an anonymous class where the restriction on the property is that on the gender of all the people.",
            "Of everybody, everything and participates.",
            "There is female.",
            "OK, well there includes also the.",
            "Might also include the the dogs that are female, right?",
            "It's not just people.",
            "If I wanted to write all the people, female band players and I will, I should have written also here.",
            "Well, in an idea would be to to put here a third class because we said that it links one class to a link, clicks one class to a set of class description.",
            "So it's more than two.",
            "I would have said here that also should be human, right?",
            "OK. Is it OK?",
            "Yeah no.",
            "OK."
        ],
        [
            "OK, and then finally the Union and the complement of an.",
            "So for instance, here it is.",
            "I'm defining a class for which the classical extension contains 3 individuals, Tosca Salaam, Salaam, Ian to Randall.",
            "Assuming that they are all different, so I'm defining the class Italian opera which is a union of this class.",
            "Those kind salami.",
            "It is one of again, right?",
            "An an hour class on one of collection tour Android Tosca.",
            "OK so it has just for individuals there.",
            "And.",
            "Here is exactly this question before I want to not an all female band while I'm going to say that well, just define a class not among female band complement of an all female band.",
            "OK then it includes.",
            "Also I don't know.",
            "This laptop for instance.",
            "OK. OK."
        ],
        [
            "So we're done with the we're done with the four different ways of expressing classes, OK?",
            "You arise enumeration.",
            "I'm trying to enumeration restriction property through property restriction through complex class constraints OK. Complex class descriptions.",
            "Now we have our will allows us our one allows us and then of course I will do allows us to contain additional components that need necessary and end or sufficient characteristics of a class so our gives us the possibility to express hierarchies through the subclass of equivalent classes and also disjointness between classes.",
            "OK. OK."
        ],
        [
            "With a subclass of, we said before what it is.",
            "The one that is a subclass of C2.",
            "Then I know that the extension of C1 is also an extension of C2.",
            "OK, so here I define the Super set.",
            "OK, now for any class C1 there might be a number of super class axioms.",
            "OK, it means that I can have well take a three and reverse it.",
            "OK, OK, I see one that is a subclass of C2 and C2 is a subclass of C3 and C2 can be a subclass of C4 etc.",
            "So you take a three on University the other way around.",
            "Here you can have the multiple subclass of actions.",
            "Plus of axioms also provide partial definitions in the sense that they represent necessary but not sufficient conditions for established establishing class membership of an individual OK."
        ],
        [
            "No, for instance here.",
            "I say that one example.",
            "It is traditional Italian opera is defined as a subclass of a class of operative.",
            "Is opera type either opera seria or opera buffa.",
            "So here it is.",
            "So I have the traditional Italian Opera 100 subclass of Opera, which is a subclass of.",
            "You see here an anonymous.",
            "Again, I define an anonymous class as a restriction of something right.",
            "Who's opera type has either opera seria or opera buffa.",
            "OK, so here I can have as you understand I can have very complex nested definitions in my ontology and here The thing is that I can also say that you know something Italian.",
            "I can then define another on property has open a type.",
            "In another anonymous class, in some other definition in the same ontology in the same data set in the same set of instant set of statements, I can have a different restriction on my opera type.",
            "OK, I'm not bound by this restriction.",
            "This is why we call it a local restriction, not a global one.",
            "No, I'm OK."
        ],
        [
            "No, I'm now an different example where different example is this one where an operator is a musical work that has at least one Liberty.",
            "Stan is not an opera, right?",
            "So what I do here is that I define an operator which, who that has a subclass of musical work.",
            "And it's also a subclass of his liberal liberties that this has cardinality exactly 1.",
            "OK, just one liberties.",
            "Um?",
            "OK, so."
        ],
        [
            "So equivalent class, so we've seen subclass off and allows us to build those complex hierarchies, large hierarchies of classes, and then I have equivalent class.",
            "We've seen examples of equivalent class, but does it mean it means that the two the two classes have exactly the same set of instances, but they do not depict necessarily the same concept?",
            "I can I can say that person for person is an equivalent class of 4th.",
            "Fun.",
            "Of the pedia person, right, but it does not mean that fourth person and the pedia person on exactly the same things, right?",
            "The same they do not depict the same thing.",
            "So the extension of class Description C one is exactly the same as the extension of class description.",
            "See two.",
            "Both classes contain exactly the same set of individuals, but they do not imply class equality.",
            "OK. We do not apply.",
            "They apply class extension equality, but not class equality.",
            "So if I want to say that two instance two classes are the same, then I have to use the owl same as construct.",
            "Um, no.",
            "So for any class C1, there may be any number of owl equivalent class constructs, as it was the case with subclass of this there any number of our liquid one class allows us actually to connect multiple ontologies into one.",
            "OK.",
            "This is so imagine that you have this linked.",
            "How does this linked open data thing is is created?",
            "You have one one class and then you say oh, by the way, in this schema this other schema, these two classes are equivalent and these other schema in the schema.",
            "Also these two classes are equivalent, right?",
            "And that sends you create those equivalent things.",
            "OK, those links between the classes.",
            "Now equivalent class axioms, provide full definitions in the sense that they represent necessary and sufficient conditions for classes."
        ],
        [
            "OK, so for instance here I have a. C1 equivalent class 2C2.",
            "So I have the.",
            "Plus the pointer opener of Mozart, which is equivalent class of an opera with those four instances.",
            "So sorry, three instances.",
            "OK. Are you define an equivalence class by enumeration of the of another class?",
            "I can just say equivalent class 4th person is equivalent class too.",
            "I don't know how to do pedia person, for instance two name classes equivalence.",
            "Otherwise I can also talk about equivalence between classes and two 2 classes, one named class and one anonymous class.",
            "OK.",
            "So I so it's the same.",
            "And the same the same example.",
            "Now the construct our own one of intersection of complement of an union of our are used for defined equivalent classes.",
            "So I do not need actually here to talk about."
        ],
        [
            "These things I can just say that class is exactly those things I do not need this class.",
            "The pointer over of Mozart is condensed.",
            "Exactly those those three instances does not contain more or less OK, so I don't need to talk about an equivalent class.",
            "Just say this is a set of instances because you remember union intersection complement of are defined on the basis of the extension and this is what the equivalence class means to in class are equivalent if they have the same.",
            "Instead of that they have the same instances in their extension."
        ],
        [
            "So disjointness now.",
            "So we said about the equivalence ODIs join us.",
            "I can say that one class is joining with another class.",
            "Is the class extension of the two classes have no individuals in common in common, OK?",
            "So again, as in the case of.",
            "Equivalent class and subclass of any class can be associated with any number of other classes through our disjoint axioms.",
            "So any class can be disjoint with any.",
            "Any number of other classes and they provide partial definitions in the sense that they present necessary but not sufficient conditions for for the class definitions.",
            "And disjointness is something that cannot be used in our lights.",
            "It was introduced in OWL DL, and of course now welfel."
        ],
        [
            "So for instance, here I can define this plans music drama, which is an equivalent class of a union of.",
            "An anonymous class opera paradigm musical OK. And then I can define here this.",
            "Lisa, let's say complex expression.",
            "So first of all, I said that Opera is a subclass of music drama.",
            "I've defined it here.",
            "It is an equivalent class of these.",
            "So sorry.",
            "Forget this, I is not correct.",
            "OK, so so I can find that opera is a subclass of music drama I can define here.",
            "The operator is a subclass of disjoint with opera, and I can define here that our DFS class is a subclass of music, drama and disjoint with opera and operetta.",
            "OK, I can define all those things."
        ],
        [
            "OK. Often with our classes now to our properties when.",
            "Property extension.",
            "What is the proper?",
            "What is a class extension?",
            "It's a resource, it's a 11 individual.",
            "One thing the extension of a property is a pair of things is a pair of subject object right?",
            "OK, so properties have have have a direction from domain to range.",
            "I have two types of properties.",
            "The first is the object properties that link as well said before individuals to individuals in the object properties and the data type problems are linked.",
            "Individuals to actually data write string, integer, float data, etc.",
            "As I said, as we said before, I will object properties, the class of all properties whose values is is an object, is an individual, and I can define it like this.",
            "Our logic property are they find the instrument.",
            "And our data type property that is the class of all properties whose value is an atomic value, OK. And object property and data type property are subclasses of the RDF class.",
            "RDF property OK.",
            "So you see here hide links between our property and RDF property."
        ],
        [
            "No, as well As for classes we also have here property axioms.",
            "So property axioms are you are used for defining additional characteristics of our properties.",
            "So for instance I have property hierarchies are difference sub property or some property of I have domain and range constraints in the sense that I have our differences, range and artifice domain as we said before, I can have also now allows me to define relations to other properties.",
            "Such as equivalent of an inverse of.",
            "And global cardinality constraints in the sense of functional property.",
            "An inverse functional property and logical property constraints.",
            "Symmetric property and transitive property."
        ],
        [
            "So As for subclass of P1 are different sub property of P2 and the property extension of PP1 should be and should be a subset of the property extension of P2.",
            "OK, so for here for here what I say is that if I write that music Fusion gender is a property of overlaps than any pair X, Y of that I will.",
            "I will have any extension of property music.",
            "Fusion gender should be should be should be.",
            "An instance of the extension of property overlaps OK.",
            "So."
        ],
        [
            "For domain and range constraints, well when I say that P1R DFS domain C1, it means that the domain of the domain of property P1 is classy one.",
            "OK, so for any pair X, Y that is instance of property, P1X should be an instance of Class C one.",
            "This is what domain is about.",
            "No links, the idea phase domain allows us to link a property P12, one or more class description see so I can have one property who has multiple class descriptions.",
            "What it means is that this this notation restricts the domain of the property to the intersection of the domains of the class descriptions.",
            "So if I say for instance and I have one property name that this person that is dog that is street, then it means that it should be the domain should be the intersection of all.",
            "Ball, so until now I don't know if any person who is a dog and.",
            "A place or my house at the same time, so it's going to be the empty.",
            "The empty set, right?",
            "OK. No yes.",
            "Yes.",
            "Yesterday Buddy said that in under the assumption the open world assumption, then these two instances should be linked with the same as link.",
            "Right, so if you if an instance, so that if I understood well your question, you said that if I have a property P1 and then I have the domain should be a classy one.",
            "And then you said that if I have any stance of, let's say classy one right, but this can you repeat it again?",
            "Yes.",
            "Yes, be 1 yes.",
            "Yes.",
            "Yeah.",
            "Yes, yeah it is infer that the X should be an extension of C1.",
            "Yeah, it isn't fair.",
            "About the individual membership.",
            "Sorry.",
            "Yeah yeah yeah it should be.",
            "Yeah it should be an extension of C. One.",
            "That's what domain and range tells us.",
            "OK, this this, that's why we're calling calling them constraints.",
            "These are property domain and range constraints.",
            "OK, so you're laughing.",
            "I don't know.",
            "OK now if I want so before the any question.",
            "So if I want now the example that I said before is OK, I want multiple domain constraints, house streets and person should have the same name, right?",
            "Our domains of property name then it's going to be the empty set that is the.",
            "The domain of this property.",
            "Now if I want all of them.",
            "If I want all of them to be domains, then I need to define a class union and in this class union this union class is going to serve as the domain for this property.",
            "So how should I write this?",
            "Yes.",
            "OK, so then you can say that property P1.",
            "Then you have to define a named class that is actually House, dog and person.",
            "How's the person HDB blah blah blah house dog person?",
            "It is a union of those three classes, right?",
            "Yeah.",
            "Well, what the what?",
            "What would it serve to do it anonymously?",
            "How's Logan person separately at rings opening?",
            "Need to.",
            "The movie.",
            "I'm due to be truthful.",
            "I'm not sure whether you can do that.",
            "Whether you are allowed to have a domain on an anonymous class, I don't think you can have a domain in an anonymous class.",
            "You can enable.",
            "Well, if I have an hour class that is defined as a union of, then I can have an anonymous class defined as a union of.",
            "So then yeah, yeah, But The thing is that you have to say our Class A union off and then you have domain should be domain of P1 so then OK.",
            "So then yeah yeah why not because you understand there that if you want to do some reasoning there you are kind of screwed up because there's no no way that somebody is going to understand.",
            "What is the anonymous class?",
            "If I if I try to exchange data from different databases then this be known somehow they are just hanging.",
            "You know the?",
            "I mean they I have no way to refer to anonymous to blank nodes.",
            "No way.",
            "Individual.",
            "Yeah.",
            "Well, you know, I know at that point that there are instances of some blank note, but I don't know what this blank node is about.",
            "I don't know what this blank node is about.",
            "I have no idea, no idea, OK?",
            "Yeah, and again you see that there is no way that this is going to be tractable in decidable in machine terms.",
            "I mean this is this is the problem and this is the problem.",
            "Also with Black nose black nodes are there basically blank nodes?",
            "We do not use them at the level of schemas as this is the case here.",
            "We're just using the level of instances and we're using block nodes at the level of businesses to say that.",
            "There exists something I know that there is I don't know which it is, but I know that there exists if I want to go from here to Iraqi on, I know that I have to go through some cities.",
            "I don't know them, but I know that there exists because I can see those things in a map, you know, but I don't know which which, which ones they are.",
            "I don't care about them, but I know that there exists.",
            "This is the notion of blank nodes in the RDF.",
            "OK, this existential quantification, but you know they are there.",
            "You don't know anything about them.",
            "You just know that there exists OK. OK. Are we OK?",
            "OK."
        ],
        [
            "We have OK.",
            "So now um, domain and range constraints.",
            "This is OK.",
            "This is, this was before it was the domain.",
            "The range is well similar to similar to this.",
            "Again, when.",
            "Yes.",
            "It's exactly the same.",
            "OK, so when multiple classes should act as range then you should use the Union of."
        ],
        [
            "Property, so for instance, here I want to say that music genre is a property of overlaps and defines in and takes its values in from classic music channel.",
            "So actually I'm going to define this property.",
            "The subject property repeat their music, Fusion Fusion chamber.",
            "Gender, which is a property of overlaps with domain and range in using center OK. OK, no.",
            "Not like yesterday.",
            "Seriously.",
            "So what is the difference between value constraints and RDF constraints is that in our values from an owl, some values from our local and enforced on the property.",
            "When applied to the class.",
            "OK, I said before they are local.",
            "OK now, in the RDF S range in RDF esque domain constraints.",
            "These are global and apply to all instances of the class independent.",
            "Property independent on the class on which this thing is applied."
        ],
        [
            "OK, so now we talked about the domain range and.",
            "Domain range and subclass often equivalence problem.",
            "Sorry subclass or property of properties.",
            "Now similar to classes.",
            "We have also equivalent property right?",
            "We have two properties and are equivalent when even when then the extension is the same.",
            "OK, they share the same extension."
        ],
        [
            "They might denote different different concepts, different properties in the real world, but they have the same extension and so the."
        ],
        [
            "Is this is 1 case?",
            "So for instance here I can say that.",
            "Um?",
            "Here I can talk about music Composer that is a property of copper dissipates with OK and has a domain and range and work and musical artists an equivalent property of music by.",
            "OK Music composer music by XYZ.",
            "No.",
            "The second property, the second property of properties, is inverse of.",
            "I can say that the property one is inverse of a property P2 in the sense that since in the properties I have domain and range.",
            "Domain and range.",
            "So for instance, I construct the.",
            "So for instance, I can say that.",
            "What can I say?",
            "I can say that.",
            "For this property again music composer, it's in the inverse of property composed OK.",
            "So if I have Baha composed the Goldberg variations, then.",
            "Bach was a music composer of the government variations, then the inverse of was the goal, but variations were composed by Bach.",
            "OK, that's the inverse thing.",
            "OK."
        ],
        [
            "So now for the global cardinality constraints, so I have.",
            "So we said before that I have local local constraints, local constraints in the sense of cardinality constraints and all values from some values from enhance values now have also the global cardinality constraints because I can talk about that the property can be unique, right?",
            "It can be functional.",
            "Functional admits it has just one value now.",
            "So for instance I can say that property P1.",
            "Is of type our functional property so resources can have a single thing.",
            "Can have only one unique value for property P1, so this means that if I have a property then it cannot.",
            "There cannot be too and I have an individual leagues with property being for some individual to some individual.",
            "Why individual data type?",
            "Why they cannot be another property P from X?",
            "The same property from mix?",
            "So different individuals now why?",
            "If this is the case, then the two wires should be connected with the same ones link.",
            "OK.",
            "So.",
            "So here for instance, I can have birth date.",
            "I can have.",
            "This is a functional property because the person have only well bends, has a single.",
            "Let's assume that we are in a world where a person can have a single birth date.",
            "OK, and this is equivalent property.",
            "Sorry and this is.",
            "I'm just saying that's a function on property and this equivalent property to date of birth OK?"
        ],
        [
            "OK, now as I have functional properties I can also have inverse function properties.",
            "It's the other way around is that.",
            "If I have an inverse function on property, then the value determines the object determines the subject in the in the RDF OK.",
            "If I have, let's say a person is uniquely identified by her Social Security number, so it's a functional property in the sense that each person has a Social Security number, but I cannot.",
            "I cannot also have two Social Security numbers that correspond to the same person.",
            "No one secure Social Security number of corresponds to do people.",
            "This is the inverse inverse function property OK?",
            "Do you get that?",
            "OK."
        ],
        [
            "No more more characteristics of property, so I have the transitivity trans activity is his member is member of for instance subevent.",
            "OK, so if X&X, Y&Y, Z are instances of transitive property P, then X, YRS is also this property and this this chain of properties can be say.",
            "Yeah, indefinite, you know it can be.",
            "Yeah well with no wind, more or less.",
            "OK, so for instance here I can have one property which is sub event and I have the domain and range can be music sub event.",
            "If I declare this is a transitive property then I hang and have an event like for instance in a conference you have you have workshops right?",
            "So you have a conference which is an event fine and then it has some events and then those subevents have some events.",
            "So then you can have this engulfment of events within a conference or within a music event OK?",
            "On the festival, for instance."
        ],
        [
            "And now more.",
            "Symmetric properties when was the last thing you symmetric property is is a property one if I have if I have a symmetric property P and I have the instance X, Y, then I know also that why comics is also an instance of this property P. That's what symmetric means and you understand now why.",
            "All of these things Maps into first order logic.",
            "I mean, these are really things that we have, I mean.",
            "Theories that we have in first order logic."
        ],
        [
            "OK, so that was our one now about our two I will do.",
            "I will.",
            "One was based on techniques that allowed the decidable sound and complete reasoning.",
            "I will lighten our deal in their languages right?",
            "I will fool is different kind of thing so as well as I said before, I will.",
            "One contains 3 spaces of how well and the well the idea was that.",
            "I need I need the expressiveness and I need also to do certain things like for instance for our one I needed the constraints and I needed the subclass.",
            "Often I needed limit limited constraints in OWL DL I needed more around full I needed everything right and I didn't care about tractability or about reasoning.",
            "So then came our do our two came becausw they wanted to extend our one family of languages with syntactic sugar in the sense that we want some to write some things, some more interesting things in in a better way.",
            "So we added some syntactic sugar, and to add some constants for increased expressivity."
        ],
        [
            "So the first thing is that our I will do.",
            "I will one allowed somebody to say that these two things are disjoint.",
            "These two classes, or these two properties are disjoint.",
            "I will do says you can talk about sense of disjoint classes where each one is pairwise disjoint.",
            "So they introduce me all disjoint classes.",
            "Um?",
            "Term OK, so in the same for our disjoint properties, right?",
            "So you have here.",
            "I will only join classes these three classes for five 500 classes are already showing between them, so you just write and all this join class and you are done.",
            "So similar for always showing proper."
        ],
        [
            "Now, if you want to reflexive property and then if then you can just write P1, RDF, type our reflexive property or more you know.",
            "Easy or easier.",
            "Our reflexive property example.",
            "Same age is right.",
            "So so.",
            "So for instance, if I have for instance X and the reflexive property P, then X comics is an instance of this reflexive property and also irreflexive property.",
            "I know I need 10 minutes.",
            "Yeah, thanks.",
            "And.",
            "And I have also a reflexive property in the sense for instance mix and Eric Flexive property P. Then it's comics cannot be an instance of this reflexive property, OK?"
        ],
        [
            "OK, then I have a symmetric property.",
            "If I have you remember I had symmetric property now have a symmetric property of X, Y is an instance of Peden why comics cannot be an instance of P and I also have property disjoint with.",
            "Why didn't have disjointness of properties before I have them now?",
            "So if I have a property X, Y if I have a pair X, Y which is an instance of property P, then I cannot have why comics and this?",
            "Nice also property too if those two problems are disjoint."
        ],
        [
            "No, another thing that was in our tool that is in our two is the thing has self that defines a class of individuals that are related to themselves through a specific property.",
            "So for instance I can have here something that says that.",
            "Well, it's not the musicians committed suicide, for instance, then I have an equivalent Class 2 to somebody who killed themselves, right?",
            "So it's on property.",
            "The restrictions on properly kill herself.",
            "Yes, he killed himself, so it's this is the that has self restriction."
        ],
        [
            "Now the interesting thing about our do is that our one let us specify the local range of properties.",
            "Over the local range of a property or the number of values taken by this property, but not both, are well.",
            "On the other hand, allows us to specify both.",
            "That means that, for instance, full sized orchestra has at least 17 at most 100 members.",
            "OK, and I I say here that I have you forget about the blue thing I had written before that has members between 70 and 100, and I can also say that its own class person that I can say here that all the Members.",
            "Of this, the members of the August there are people.",
            "OK, yeah?",
            "Yes, yeah exactly yeah yeah.",
            "Yeah, here you can just say both at the same time.",
            "So this is the syntactic sugar that allows you to do something.",
            "Some things much more easily."
        ],
        [
            "OK, so now the the other interesting thing that, well, interesting.",
            "I find I find nice.",
            "Actually I I will do allows you to define property chain axioms you remember in our one I had trans activity.",
            "Now will do I have property chain in the sense I can define?",
            "And say I want to go from from here I want to go to where I want to go to New York.",
            "OK, from here I can take the boat to Athens and I can take the bus if I want to describe my whole trip I can take the bus from the port to the airport and I will take a train from here from from Athens to London and from London or Southampton and will take the boat that goes to New York right?",
            "So I have.",
            "So this is a chain that I'm describing.",
            "So actually you can define such chains in in our.",
            "OK, so.",
            "It says that if I want so allow one to infer the existence of a property from a chain of property.",
            "So if I define this chain of properties, then at the end, if I define this chain of properties of my trip, and I say that this is a property chain at the end, somebody is going to say that Eirini actually traveled from here to New York, OK?",
            "OK, so for instance this thing is.",
            "If I want to define this, I'm well formally somehow effects, Why is an instance of property we want and why, said is any sense of property 2 then X, Y is an instance of property P3.",
            "It can be a different property up.",
            "No, transitive it is when everything is P1.",
            "If P1 and P1, then P1.",
            "This is the trans activity here.",
            "Transitive, it means that it is transitive in the sense that I travel from here to Iraq, Leon, and then I travel from here to Athens and then I travel from here to someplace I don't.",
            "It's not.",
            "I take the bus from here to actually, and I think the plane from iraklion to Athens.",
            "I think the train from Athens to London and take the bus from London, London, Southampton.",
            "Yeah, this is transitivity, but.",
            "P2P2 is a different than P1P2 is different than pay one intransitivity P1 and P2 are exactly the same.",
            "OK, so this is the difference, OK, OK?",
            "So yeah, so here you say you see this is for instance the influenced by and you can say that this is a transitivity, right?",
            "You can define some sort of a trans activity, but beware, because transitivity means that in some sense you have an indefinite size of the path that you want to define, right?",
            "Influence, influence, influence.",
            "Here you can just stop at one side at one point if there is no influence, there is no influence after that.",
            "Here I have a different property chain.",
            "Axiom has enemy where I can say that this is.",
            "It starts from X, his enemy, why and why his friend Zed then I know that Huawei has enemies Ed right?",
            "This is the the path that I want to help."
        ],
        [
            "No.",
            "Arbitrary property chain axioms can lead to under the undecidability.",
            "This is the night, well, nice.",
            "The freaky thing about I I will do the restrictions that I will do imposes in order not to have undecidability, is that the set of property chain action should be regular and one what do they mean by regularity?",
            "It means that there must be strict linear order on the properties and not a strictly non order over properties.",
            "That means that every property chain Axiom should have one of the following forms, right?",
            "So if I have?",
            "RX Y&R?",
            "Then why, then, are X, said if R Y1Y2 then RYYY one YN this form where I play with S is and then I play with R. Here this form when, well, it's exactly the same.",
            "So.",
            "Yeah, it's exactly the same, and here I blame with asses and then I'll play with her right?",
            "So if I."
        ],
        [
            "So if I want to have those, So what about those examples?",
            "Can you tell me what is the is?",
            "So the first example.",
            "Here in my first example, do I have some sort of a regular property chain axiom or not?",
            "Sorry.",
            "What?",
            "No, I mean like if I have the three, the three ones, the three together.",
            "This is an example one I have the three together.",
            "Actually yes, because I have an order.",
            "I have this order between Rs.",
            "Is a logical, proceeds are persisting OK.",
            "This is a logical order, but I am so this is a this is a good.",
            "This is this is a regular chain axiom.",
            "Now for the second example, do I have something similar?",
            "Actually, there is no.",
            "There is no order.",
            "That means from the three on the from the phone on the five from the.",
            "OK, sorry.",
            "This does not comply to a form to one of the four forms above and the last one.",
            "Actually, there's no regular order for this one, OK?",
            "OK."
        ],
        [
            "So, um.",
            "So now when I combine property chain axioms and cardinality constraints, this might lead to undecidability.",
            "I need 5 more minutes and I'm well done.",
            "Seriously, so the restriction is that I can use only simple properties.",
            "In cardinality expression, nodes that cannot be directly or indirectly related to property chain axioms, this is my this is my thing so."
        ],
        [
            "For instance, if I have any property chain axiom.",
            "Which is S1 and then this one.",
            "Right?",
            "His enemy, his enemy, his friend, then his enemy, then our is not a simple property, OK?",
            "For any sub property chain Axiom, R is not a simple property and.",
            "Other than that, everything else is a simple property, so actually for this example, if I have all these things, what can you tell me about those most things?",
            "This is a Q.",
            "Are which are the simple ones and we download the simple ones.",
            "For sure are is not simple, right are not simple, because I see it here right are.",
            "Now.",
            "Is it is too simple for instance?",
            "Is as simple, for instance.",
            "Yes.",
            "It's not simply need to suck your pets then that means there is also.",
            "If R is not simple, and as is a property of.",
            "So is this a property office?",
            "Then S should not be simple.",
            "No.",
            "No.",
            "Then Q, PR simple right?",
            "Yeah.",
            "Yeah, but this is a property of us know, but be careful here.",
            "I have S here and then I have R&Q.",
            "And here.",
            "And then.",
            "OK QRS&R, while Q is a property wells.",
            "Why should it be?",
            "Why should it be affected by this?",
            "Why shouldn't be affected by this?",
            "Yes, he said some property.",
            "OK. Yeah.",
            "Existen applied.",
            "It doesn't mean that was the fun affect.",
            "So how to understand like how to express this here so that it shows the direction like like like we say our sorry, these are your facts right?",
            "This is the fact this is first of all, let's say this this is a property chain axiom, then Q&P then R right?",
            "So this is a property chain axiom.",
            "From here I know that R is not simple.",
            "Right?",
            "I'm done.",
            "No, let's say here are NP, then are OK. Then I need a B.",
            "Then I need the pieces of property of are OK.",
            "So what does it say?",
            "That piece is a property of our.",
            "If it's, if if B is a property of our, it just says it says nothing to me, right?",
            "It's it's just the same property, right?",
            "No, it says it says that it might be simple, I just, you know, I don't know.",
            "I don't know well.",
            "Here B and sorry P&Q are actually the simple ones.",
            "The non simple ones are RN S. OK. Yeah, I don't know if I've been on simple ones.",
            "OK. No.",
            "OK. No."
        ],
        [
            "Reasoning because the title was our reasoning and I'm done for the moment, yeah, so our reasoning is.",
            "Zoning makes.",
            "Takes into account information that is expressed in the schema level and the instance level and brings brings out new information that we have.",
            "OK, this is the reasoning and I have two kinds of reasoning.",
            "I have subsumption."
        ],
        [
            "Reasoning and I have some fire ability reasoning.",
            "Subsumption reasoning means that if I if I have, let's say a concept, if I have a class that is subsumed its up subconcept or subclass of another class.",
            "But I know that according to the subsumption reasoning, I have missed doses of one class which should should be instances of a different class.",
            "OK, this is what I have.",
            "Now The thing is that I can also have satisfiability reasoning in the sense that.",
            "You can, we can tell or discuss whether a concept is satisfy aghbal or not, when that means when there is no model in which the interpretation of the class is nonempty, like this, is the satisfiability reasoning that we can have, so it allows us to check whether the model is consistent or not.",
            "So this is.",
            "So actually."
        ],
        [
            "Reasoning can be used as a support tool for what for what we what we are doing.",
            "For instance to check the logical consistency of classes and to compute implicit class hierarchies.",
            "And maybe it is less important small ontologies, right?",
            "It can be useful for design and maintenance of the ontologies.",
            "Or it can be much more important when we have large ontologies and multiple authors.",
            "So it can also be very useful and valuable when we have integration of ontologies in the sense that.",
            "We have definitions, axioms to establish Inter ontology relationships OK and and also when we want to check for for consistency and unexpected implied relationships between ontologies.",
            "In general, reasoning is very one very powerful tool for us for everybody when we do ontology modeling ontology design and actually when you want to.",
            "Yeah, get some new information from the existing from the facts that you have and I don't know what else that's it.",
            "I'm sorry.",
            "For the old two you have.",
            "Yeah, I think that the best that I have used up until now and well the best from the perspective of databases.",
            "Well, you know engines not so much reasonable Purcell.",
            "It is out of context.",
            "It has all the profiles of our two hour lorelle.",
            "For instance it has optimized our Laurel and it's free so you can download it and get it and.",
            "Well, if you if you download our LTM.",
            "I think sorry.",
            "Grassley, being yes, good after being yes if you go if you search for auto text outline or graph DB then you are going to find out you're going to.",
            "When you create a new database, a new instance set of instances, there is going to ask you what kind of reason or do you want to use because you can very well not compute, not materialize everything, right?",
            "Not materialize, only instances all the same month etc etc.",
            "So there you can also choose our two RL, which is one of the profiles of our two that I I didn't have the time to cover today.",
            "Which is actually quite quite good in the sense that it gives you, and it provides the semantics in the sense of rules or the semantics of our innocence of rules.",
            "So it's much more understandable than just the you know, the straight 1st order logic semantics that we have.",
            "That's it.",
            "OK. Good."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So where I'm going to talk about the language, I will.",
                    "label": 0
                },
                {
                    "sent": "It's the ontology web language, Elena this morning she said a lot about how to model ontologies.",
                    "label": 0
                },
                {
                    "sent": "She said about classes, about properties, about relationships.",
                    "label": 0
                },
                {
                    "sent": "But she never talked about while she talked about, but she didn't really went into details about what are the languages that we use in in semantic web in order to encode or write about ontologies.",
                    "label": 0
                },
                {
                    "sent": "So RDF and RDF swell our DFS.",
                    "label": 0
                },
                {
                    "sent": "The iris or description framework Schema language is one that I think Barry talked about yesterday is one language that you can use.",
                    "label": 0
                },
                {
                    "sent": "We all use actually to write about ontologies.",
                    "label": 0
                },
                {
                    "sent": "Owl is one language which is much more expressive than our DFS has much, many more constructs.",
                    "label": 0
                },
                {
                    "sent": "An RDF S and it's it's well.",
                    "label": 0
                },
                {
                    "sent": "I'm going to talk about and present what what this language is about.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So the requirements for an ontology language, well, ontology languages allow users to write formal conceptualizations of domain models.",
                    "label": 1
                },
                {
                    "sent": "I think Elena demonstrated pretty well what?",
                    "label": 0
                },
                {
                    "sent": "I could see what the conceptualization of the mind of a domain model is now.",
                    "label": 1
                },
                {
                    "sent": "The requirements that we have for such ontology languages is that they they should extend, extend existing semantic web standards and build upon their syntax.",
                    "label": 0
                },
                {
                    "sent": "Why is that?",
                    "label": 0
                },
                {
                    "sent": "Because this this is a necessary condition for machine processing for processing information for machines and also for humans, the syntax is the existing web standards or syntaxes upon which our lease pay well.",
                    "label": 0
                },
                {
                    "sent": "The ontology languages should be based on should be XML, RDF, and RDF San.",
                    "label": 0
                },
                {
                    "sent": "Also HTML.",
                    "label": 0
                },
                {
                    "sent": "With respect to our DFA, which well aged our DFA is, HTML plus RDF, it has some.",
                    "label": 0
                },
                {
                    "sent": "Let's say it has some sentences of RDF.",
                    "label": 1
                },
                {
                    "sent": "In order to talk about the semantics of of HTML, the ontology language should be easy to understand the news and should be based upon existing knowledge representation languages.",
                    "label": 0
                },
                {
                    "sent": "It should have sufficient expressive power, not expressive power which.",
                    "label": 0
                },
                {
                    "sent": "You know it should actually allow you to say everything, but at the same time be sufficient for the domain, but also at the same time B.",
                    "label": 0
                },
                {
                    "sent": "How can I use put that be enough to have?",
                    "label": 1
                },
                {
                    "sent": "And to be able to reason about it efficiently.",
                    "label": 1
                },
                {
                    "sent": "So lost it should have four month semantics in the sense that they describe the meaning of knowledge formal in precisely, without any intuition or any.",
                    "label": 0
                },
                {
                    "sent": "Let's say open window to different implementations and should be essential for automatic automated reasoning support.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Now, for RDF and RDF S, the modeling primitive, sort of RDF and RDF Sr.",
                    "label": 1
                },
                {
                    "sent": "Classes, properties and attributes.",
                    "label": 0
                },
                {
                    "sent": "These are the the basic things and there you can have some subclass of the hierarchy of classes and the hierarchy of properties as well, and so subclasses so our DFS, not RDF RDF's, allows you to define subclasses of probability hierarchies and also allows you to define global domain and range definitions for properties if you remember before, Elena said about.",
                    "label": 1
                },
                {
                    "sent": "Talked about that the property can be defined upon a class and take its values in a domain.",
                    "label": 0
                },
                {
                    "sent": "Can be a class or can be a data type like a literal write string or a date or an integer for instance.",
                    "label": 0
                },
                {
                    "sent": "So are the affairs gives you two specific constructs, are the first domain on the RDS range.",
                    "label": 0
                },
                {
                    "sent": "I'm not sure whether Barry talked about this yesterday or Elena talked about it for sure this morning where you can define global domain and range constraints.",
                    "label": 0
                },
                {
                    "sent": "So globally you can say that the name of the person is defined in class person and takes its values in class in data type string OK.",
                    "label": 0
                },
                {
                    "sent": "Note what is missing from our definite DFS are the fact that we cannot.",
                    "label": 0
                },
                {
                    "sent": "There are a lot of things missing.",
                    "label": 0
                },
                {
                    "sent": "First of all, we cannot talk about disjointness of classes.",
                    "label": 0
                },
                {
                    "sent": "We cannot say that two classes are disjoint.",
                    "label": 0
                },
                {
                    "sent": "We cannot express complex class expressions.",
                    "label": 0
                },
                {
                    "sent": "OK, we cannot say that one class can be defined by unions of other classes.",
                    "label": 0
                },
                {
                    "sent": "OK, we cannot talk about cardinality restrictions, acknowledge restrictions on properties in the sense that here it is here is.",
                    "label": 0
                },
                {
                    "sent": "I have this property and for this class and have for instance just for values or two values or one value.",
                    "label": 0
                },
                {
                    "sent": "OK, I cannot talk about these things.",
                    "label": 1
                },
                {
                    "sent": "I can also talk about special characteristics of properties.",
                    "label": 0
                },
                {
                    "sent": "I cannot say that the property is transitive forest as it is reflexivity symmetric.",
                    "label": 0
                },
                {
                    "sent": "It is functional.",
                    "label": 0
                },
                {
                    "sent": "You know I cannot define uniqueness on properties.",
                    "label": 0
                },
                {
                    "sent": "So so this is so.",
                    "label": 0
                },
                {
                    "sent": "These are some of the missing points of our.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "No, So what happened is that W. 3C I don't know.",
                    "label": 0
                },
                {
                    "sent": "Do you know W 3C.",
                    "label": 0
                },
                {
                    "sent": "Yes, yes no.",
                    "label": 0
                },
                {
                    "sent": "OK so W 3C organized well created the working group, the Web Ontology Working Group in 2001 like 14 years ago ohmygod not identified test cases that actually required much more expressiveness than RDF and RDF'S.",
                    "label": 1
                },
                {
                    "sent": "OK, so this actually led to a joint initiative.",
                    "label": 0
                },
                {
                    "sent": "That produced daml oil.",
                    "label": 0
                },
                {
                    "sent": "This is a language.",
                    "label": 0
                },
                {
                    "sent": "It's well, it's.",
                    "label": 0
                },
                {
                    "sent": "There are two.",
                    "label": 0
                },
                {
                    "sent": "There is always the US and EU.",
                    "label": 0
                },
                {
                    "sent": "There used to be US&U, so this is doubled from.",
                    "label": 1
                },
                {
                    "sent": "I think it was from the US, an oil which is from EU.",
                    "label": 0
                },
                {
                    "sent": "And then this was the starting point of the W. 3C Web Ontology language of owl.",
                    "label": 0
                },
                {
                    "sent": "Now so more or less well, briefly, our little mythology language designed for the semantic web, it has the representative well it uses web resources in the sense of your eyes that are there for.",
                    "label": 1
                },
                {
                    "sent": "So it's so it's a knowledge representation language that uses your eyes for web resources, and it is based on description logics.",
                    "label": 1
                },
                {
                    "sent": "It provides a rich collection of operators performing concept descriptions.",
                    "label": 1
                },
                {
                    "sent": "This collection can be for instance the the Union conjunction, the disjunction, it can be there section can be complementation etc.",
                    "label": 0
                },
                {
                    "sent": "It promoting their operation and sharing between applications and it designed to be extended to be.",
                    "label": 0
                },
                {
                    "sent": "Compatible with existing web standards.",
                    "label": 0
                },
                {
                    "sent": "So for instance, Owl is based.",
                    "label": 0
                },
                {
                    "sent": "It uses basically when it was defined basically on index on.",
                    "label": 0
                },
                {
                    "sent": "Sorry on syntax, an XML RDF XML syntax.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "I will it has two versions.",
                    "label": 0
                },
                {
                    "sent": "The first one hour one was a double became a W3C recommendation for the Semantic Web back in 2004, and I will do it is became a revised, revised version of how well one it has some additional, let's say, features many additional features and it became a revised recommendation in 2009, and I will do is much more expressive than our one in the sense that takes advantage of development in.",
                    "label": 1
                },
                {
                    "sent": "Description logics, reasoning techniques and provides more advanced features.",
                    "label": 0
                },
                {
                    "sent": "Provides, for instance, characteristics and properties that are well, one didn't provide, such as replica flexibility and assignment, US symmetricity or asymmetric being able to define the two properties, some osymetric etc.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "So what, uh, what happened with our Leonard DFS?",
                    "label": 0
                },
                {
                    "sent": "And then ideally, our would be an extension of RDF schema.",
                    "label": 1
                },
                {
                    "sent": "You say?",
                    "label": 0
                },
                {
                    "sent": "OK, here is my RDF schema I have.",
                    "label": 0
                },
                {
                    "sent": "I have it and then I'm going to extend it in order to build our to build yet another language I will could use.",
                    "label": 0
                },
                {
                    "sent": "For instance the meaning of classes.",
                    "label": 0
                },
                {
                    "sent": "That is our DFS class and properties in the in the set of RDF.",
                    "label": 0
                },
                {
                    "sent": "Call Darby's property and and adds the language primitives in order to get some more expressiveness that in that way it would be.",
                    "label": 0
                },
                {
                    "sent": "Our would be consistent with the layer with the layering architecture of the semantic web.",
                    "label": 1
                },
                {
                    "sent": "I don't know if you remember that there was HTML and it was XML then was RDF and was sparkle and then you start having semantics on top of those languages.",
                    "label": 0
                },
                {
                    "sent": "Much richer semantics.",
                    "label": 0
                },
                {
                    "sent": "So, but the problem is that such an extension we would work against obtaining expressive power and efficient reasoning mechanisms that would lead actually and in one of these languages of our well in our full that will lead to uncontrollable computational properties so that that it would lead to.",
                    "label": 1
                },
                {
                    "sent": "Cases in which the we cannot well reasoning is undecidable.",
                    "label": 0
                },
                {
                    "sent": "We cannot decide whether a property holds or not.",
                    "label": 0
                },
                {
                    "sent": "So so yes.",
                    "label": 0
                },
                {
                    "sent": "Yes.",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "Yeah, well RDF started in 1998.",
                    "label": 0
                },
                {
                    "sent": "Maybe when you were still very very young.",
                    "label": 0
                },
                {
                    "sent": "So our defense class so.",
                    "label": 0
                },
                {
                    "sent": "Plus is a set of things, right is a set of instances instead of individuals.",
                    "label": 0
                },
                {
                    "sent": "It means that it talks about the schema at the schema level.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "This is why why we have our DFS class?",
                    "label": 0
                },
                {
                    "sent": "It's RDF schema.",
                    "label": 0
                },
                {
                    "sent": "So it's RDF&S.",
                    "label": 0
                },
                {
                    "sent": "It's a schema, and that's the class is about.",
                    "label": 0
                },
                {
                    "sent": "The schema is about, you know, user defined classes are instances of RDF's class.",
                    "label": 0
                },
                {
                    "sent": "This is how you model you create RDF.",
                    "label": 0
                },
                {
                    "sent": "You say that my class person is an instance of RDF's class.",
                    "label": 0
                },
                {
                    "sent": "OK, now in the case of properties and this is my explanation because I was not there with the people who designed RDF is that properties you can you can find without any schema you know you can just.",
                    "label": 0
                },
                {
                    "sent": "About properties, you can say that a person has a name or a person has an age without having the schema.",
                    "label": 0
                },
                {
                    "sent": "The appropriate class of properties of age, properties or of name properties to go with.",
                    "label": 0
                },
                {
                    "sent": "So this is again my explanation why they pointed RDF property instead of RDF's property.",
                    "label": 0
                },
                {
                    "sent": "Again mid this is my explanation.",
                    "label": 0
                },
                {
                    "sent": "You can find you can look at it and.",
                    "label": 0
                },
                {
                    "sent": "Well, our DFS column property does not exist.",
                    "label": 0
                },
                {
                    "sent": "OK so I don't know whether it depends.",
                    "label": 0
                },
                {
                    "sent": "So for instance, you can have.",
                    "label": 0
                },
                {
                    "sent": "You can have parsers that says that anything that starts with RDF store.",
                    "label": 0
                },
                {
                    "sent": "RDF is a.",
                    "label": 0
                },
                {
                    "sent": "Let's say it's a locked or it's a stop keyword in the sense that you say that if you if I have RDF an double column.",
                    "label": 0
                },
                {
                    "sent": "I'd say then after that should be property or should be comment or should be labeled.",
                    "label": 0
                },
                {
                    "sent": "Otherwise it's a syntax error.",
                    "label": 0
                },
                {
                    "sent": "OK, if now you have a parser that does not really understand it might it will get the RDF property as a user defined property where the user defined term.",
                    "label": 0
                },
                {
                    "sent": "I don't know what how you will define it, but surely it's not going to.",
                    "label": 0
                },
                {
                    "sent": "It's not going to take the idea that you want OK?",
                    "label": 0
                },
                {
                    "sent": "OK, so this the this set of requirements is this full set of requirements was unattainable and for this like actually to be able to have.",
                    "label": 0
                },
                {
                    "sent": "Will be consistent with the layering of the semantic web and also have.",
                    "label": 0
                },
                {
                    "sent": "The expressive power that you want and also to be to have the decidability for the computational power of the engine.",
                    "label": 0
                },
                {
                    "sent": "So for this case for four to.",
                    "label": 1
                },
                {
                    "sent": "So in order to attain this purpose, an.",
                    "label": 0
                },
                {
                    "sent": "Well defined, three different sublanguages of how well each geared towards fulfilling a specific set of requirements, OK?",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "This three sublanguage of our full hour.",
                    "label": 0
                },
                {
                    "sent": "DL an hour light so there is an increasing so if you if you see there this this box you have our DFS you have our light, our deal and our full and it's they are placed in a way where I have increasing expressivity and increasing complexity.",
                    "label": 0
                },
                {
                    "sent": "So the list the least expressive language is our DFS where I have classes and properties.",
                    "label": 0
                },
                {
                    "sent": "Then I have lights that actually I start putting some.",
                    "label": 0
                },
                {
                    "sent": "Issues some well.",
                    "label": 0
                },
                {
                    "sent": "Strange there DLN full there is these.",
                    "label": 0
                },
                {
                    "sent": "There's a difference between syntactic layering and semantic layering in the sense that.",
                    "label": 0
                },
                {
                    "sent": "For, for instance, for the semantic layering, our deal semantics are exactly the owl full semantics within the defragment, and then our light semantics are exactly the DL semantics within the light fragmente.",
                    "label": 1
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So let's let's see a little bit about.",
                    "label": 0
                },
                {
                    "sent": "Let's see specifically specifically each language what it has, so our full is the richest one it has.",
                    "label": 0
                },
                {
                    "sent": "It uses all our primitives, everything it allows the combination of primitives with RDF and RDF'S in arbitrary ways.",
                    "label": 1
                },
                {
                    "sent": "So for instance, you can include the possibility of changing the meaning of predefined constructs in RDF S. So for instance, you can impose in a cardinality constraint on.",
                    "label": 0
                },
                {
                    "sent": "The class classes of all classes.",
                    "label": 0
                },
                {
                    "sent": "So you can say for instance, that I want the class of all classes to have just four classes there, right?",
                    "label": 0
                },
                {
                    "sent": "So you know where there is no such, there's no such restriction on RDF.",
                    "label": 1
                },
                {
                    "sent": "Oh my God, it's very hot, OK?",
                    "label": 0
                },
                {
                    "sent": "So so all our for instance and different.",
                    "label": 0
                },
                {
                    "sent": "Another thing is how you can handle classes as instances.",
                    "label": 0
                },
                {
                    "sent": "So for instance you can have extra class which is can be actually class can be an instance of a class and instance can be a class itself.",
                    "label": 0
                },
                {
                    "sent": "So you have all those meta modeling and we as we call them layers.",
                    "label": 0
                },
                {
                    "sent": "So you can start and you have your instances and you can have your classes and then your classes can be instances of other classes and classes can be Stan so other class etc.",
                    "label": 0
                },
                {
                    "sent": "So this actually gives a power to owl, which is to our full which is non you cannot.",
                    "label": 0
                },
                {
                    "sent": "You cannot do many things without this.",
                    "label": 0
                },
                {
                    "sent": "You know in a database is in in reasoning, for instance.",
                    "label": 0
                },
                {
                    "sent": "Then you can.",
                    "label": 0
                },
                {
                    "sent": "You can go into completely undecidable situations.",
                    "label": 1
                },
                {
                    "sent": "So the advantage of our phone so you can express anything in our full is that it's fully upward compatible with RDF and RDF S. Both syntactically and semantically, it means that if I get a said if I get any legal and illegal, it means that it parses by an RDF parser.",
                    "label": 0
                },
                {
                    "sent": "If I get any legal RDF set of statements is also illegal.",
                    "label": 1
                },
                {
                    "sent": "Set of full set of.",
                    "label": 0
                },
                {
                    "sent": "Our full set of statements OK, but disadvantage.",
                    "label": 0
                },
                {
                    "sent": "Is this an undecidable language and there is no efficient reasoning support, so there is no way that there is, well, until I recently.",
                    "label": 0
                },
                {
                    "sent": "I don't know if there is anything new here.",
                    "label": 0
                },
                {
                    "sent": "There is no efficient reasoning support for our food.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "No, I will.",
                    "label": 0
                },
                {
                    "sent": "DL is a simple language foul full.",
                    "label": 0
                },
                {
                    "sent": "It restricts how the constructors of how well an RDF can be used and that means that it cannot modify the instances of predefined constructs as it was the case in our full and for instance classes cannot be instances OK, classes are classes cannot be instances, because then you have the classes, instances of classes etc etc.",
                    "label": 1
                },
                {
                    "sent": "So you have this meta modeling construct.",
                    "label": 0
                },
                {
                    "sent": "It is defined by an abstract syntax and mapping to RDF.",
                    "label": 1
                },
                {
                    "sent": "And there is a direct mapping, two description logics and two 1st order logic from our DL two there.",
                    "label": 0
                },
                {
                    "sent": "So the advantages of our DL is that it has well defined semantics, very well defined semantics.",
                    "label": 1
                },
                {
                    "sent": "It is.",
                    "label": 0
                },
                {
                    "sent": "It has well understood formal properties like such as complexity and this.",
                    "label": 0
                },
                {
                    "sent": "They say that this side ability because actually it Maps to 1st order logic.",
                    "label": 1
                },
                {
                    "sent": "So we know what 1st order logic is about.",
                    "label": 0
                },
                {
                    "sent": "It has an efficient reasoning support and it has highly optimized, implemented systems.",
                    "label": 0
                },
                {
                    "sent": "That disadvantage is that there is no direct compatibility with RDF, so any legal RDF legal set of statements must be extra extended and and or restricted in order to be illegal and sets of our DL statements.",
                    "label": 1
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "No.",
                    "label": 0
                },
                {
                    "sent": "Our light is the is the least powerful language of our.",
                    "label": 0
                },
                {
                    "sent": "Well, it's on the bottom of the stack.",
                    "label": 0
                },
                {
                    "sent": "It has no.",
                    "label": 0
                },
                {
                    "sent": "It's a sublanguage of our deal, hence is a block.",
                    "label": 0
                },
                {
                    "sent": "Which of our full it has no ability to support explicit negation or union.",
                    "label": 1
                },
                {
                    "sent": "It has no excludes disjointed statements.",
                    "label": 1
                },
                {
                    "sent": "Whether this was not the case in the island full, it excludes enumerated classes as ranges of properties.",
                    "label": 1
                },
                {
                    "sent": "And it supports cardinality constraints.",
                    "label": 0
                },
                {
                    "sent": "Just zero or one.",
                    "label": 0
                },
                {
                    "sent": "So we now in our light.",
                    "label": 0
                },
                {
                    "sent": "I cannot say that this property has four values.",
                    "label": 0
                },
                {
                    "sent": "I can just say that this property has zero or one value, nothing more, nothing less.",
                    "label": 1
                },
                {
                    "sent": "And it's also Maps directly to the island and 1st order logic to 12 description logics language and 1st order logic, and it allows reasoning through standard RDF engines well.",
                    "label": 0
                },
                {
                    "sent": "So for instance you have pellets.",
                    "label": 0
                },
                {
                    "sent": "One reason are fact Racer, an hourly.",
                    "label": 1
                },
                {
                    "sent": "The advantages is business of implementation, efficient reasoning and of course when.",
                    "label": 0
                },
                {
                    "sent": "When I have a few efficient reasoning and easiness of implementation and miss something from expressiveness, so the disadvantage of the language is that it is has very limited expressivity.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Now a.",
                    "label": 0
                },
                {
                    "sent": "When you create your ontologies, when you're going to create your ontology, people are going to ask, so which.",
                    "label": 0
                },
                {
                    "sent": "No not people, but you are going to ask.",
                    "label": 0
                },
                {
                    "sent": "So which language should I use and why?",
                    "label": 0
                },
                {
                    "sent": "So for instance, in our light.",
                    "label": 0
                },
                {
                    "sent": "So if you want to express only classification hierarchy in simple constraints, you go with our light right?",
                    "label": 0
                },
                {
                    "sent": "Is this the least the simplest expressiveness expressivity that you can get, and it's it's implemented.",
                    "label": 0
                },
                {
                    "sent": "Efficiently and easy.",
                    "label": 0
                },
                {
                    "sent": "So I will be.",
                    "label": 0
                },
                {
                    "sent": "I'll has maximal expressiveness.",
                    "label": 0
                },
                {
                    "sent": "You can get a lot for our deal.",
                    "label": 0
                },
                {
                    "sent": "Trackability still maintains and there is a standard formalization.",
                    "label": 0
                },
                {
                    "sent": "We can map it to DL 1st order logic so we know its its properties and we know it's.",
                    "label": 0
                },
                {
                    "sent": "It's computational properties and full, and finally with how well full we have very high expressiveness.",
                    "label": 1
                },
                {
                    "sent": "Tractability is lost, so if you just want to sit down and do your nice exercises without really having in mind at all whether you would like to have a model.",
                    "label": 0
                },
                {
                    "sent": "To implement something or you would like to have something which has computational it's computationally decidable.",
                    "label": 0
                },
                {
                    "sent": "Then you can go with our full.",
                    "label": 0
                },
                {
                    "sent": "You can just do your exercises with our full.",
                    "label": 0
                },
                {
                    "sent": "There's no standard formalization, and there's a syntactic freedom of RTF.",
                    "label": 1
                },
                {
                    "sent": "You can write more or less everything.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "No, so this where the initial, let's say introductory things.",
                    "label": 0
                },
                {
                    "sent": "So in our.",
                    "label": 0
                },
                {
                    "sent": "For now, let's look 1st at our one.",
                    "label": 0
                },
                {
                    "sent": "So the syntax that we are you are going to.",
                    "label": 0
                },
                {
                    "sent": "We're going to look at is the RDF XML syntax for our one.",
                    "label": 0
                },
                {
                    "sent": "It is based on an XML schema definition.",
                    "label": 1
                },
                {
                    "sent": "Do you know what an XML schema is?",
                    "label": 0
                },
                {
                    "sent": "You don't know XML, you know.",
                    "label": 0
                },
                {
                    "sent": "Yes, well, XML schema is yet another recommendation of W3C that allows one.",
                    "label": 0
                },
                {
                    "sent": "Do to specify schemas, but in XML it's that simple.",
                    "label": 0
                },
                {
                    "sent": "Well these are the schema as a language is not simple at all, but it's.",
                    "label": 0
                },
                {
                    "sent": "I'm very sorry it's very hot, so XML XML schema is a complex language.",
                    "label": 0
                },
                {
                    "sent": "It was developed.",
                    "label": 0
                },
                {
                    "sent": "I think it became standard in 2005 maybe or six if I'm not mistaken it is quite complex and allows you to do many things.",
                    "label": 0
                },
                {
                    "sent": "What well XML schema, what you have to think about XML.",
                    "label": 0
                },
                {
                    "sent": "XML is about trees.",
                    "label": 0
                },
                {
                    "sent": "Write an XML document.",
                    "label": 0
                },
                {
                    "sent": "Is a tree an XML schema allows you to define.",
                    "label": 0
                },
                {
                    "sent": "Statements about trees, but you want to represent in XML.",
                    "label": 0
                },
                {
                    "sent": "Yes, OK.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, so.",
                    "label": 0
                },
                {
                    "sent": "Let's look more about this hour thing.",
                    "label": 0
                },
                {
                    "sent": "So first of all, when you start writing an ontology, you are going to write about you're going to.",
                    "label": 0
                },
                {
                    "sent": "You are going to write that you have this.",
                    "label": 0
                },
                {
                    "sent": "This bunch of code this this piece of code.",
                    "label": 0
                },
                {
                    "sent": "Actually you're going to have an hour long teologi are there for about something.",
                    "label": 0
                },
                {
                    "sent": "Then you're going to have a URL there.",
                    "label": 0
                },
                {
                    "sent": "You're going to write a version of, so the version of the ontology and you are going to write, for instance, the private private version of the ontology.",
                    "label": 0
                },
                {
                    "sent": "So you're going to write a bunch of things regarding the versioning support for this ontology.",
                    "label": 0
                },
                {
                    "sent": "You can, you can also.",
                    "label": 0
                },
                {
                    "sent": "Talk about the fact that it goes.",
                    "label": 0
                },
                {
                    "sent": "It's backwards compatible with because you need to know.",
                    "label": 0
                },
                {
                    "sent": "Well in some cases you need to know which is the ontology that this is the prior ontology with which this current one is compatible with or incompatible with OK, and then you can have.",
                    "label": 1
                },
                {
                    "sent": "Also you can talk about in the meta data in the header on the ontology header.",
                    "label": 0
                },
                {
                    "sent": "For meta data you can talk about which were the classes that were deprecated or the property is deprecated in this ontology.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, so let's go into more interesting things now.",
                    "label": 0
                },
                {
                    "sent": "As Elena said, one, you create ontologies.",
                    "label": 0
                },
                {
                    "sent": "One big important thing is how you create actually the classes and the properties.",
                    "label": 0
                },
                {
                    "sent": "OK, so if you want to define a class then you are going to define that you're going to write our class.",
                    "label": 0
                },
                {
                    "sent": "It is distinct from our TFs class.",
                    "label": 1
                },
                {
                    "sent": "It's not the same, and it's needed for our light and our deal.",
                    "label": 0
                },
                {
                    "sent": "We said that our full is compatible with RDF, so there are the first classes.",
                    "label": 0
                },
                {
                    "sent": "Our class an hour difference class are kind of the same now.",
                    "label": 0
                },
                {
                    "sent": "In Owl Owl, specifies our think, which is everything that is actually a member of class.",
                    "label": 0
                },
                {
                    "sent": "Sorry, everything is a member of class.",
                    "label": 1
                },
                {
                    "sent": "Our thing.",
                    "label": 0
                },
                {
                    "sent": "So a class is a member of an owl class is a member of class owl thing OK and you have well.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So have our nothing, which is the represents the empty class.",
                    "label": 0
                },
                {
                    "sent": "OK. Now the second building block for your ontologies are properties, so you have our top object property.",
                    "label": 0
                },
                {
                    "sent": "It's a property that links every individual that links every dividual to every individual and you there we distinguish between objects, properties and data type properties.",
                    "label": 0
                },
                {
                    "sent": "An object properties one is a property that actually links an node resource.",
                    "label": 0
                },
                {
                    "sent": "To a value that is another is another resource.",
                    "label": 0
                },
                {
                    "sent": "OK, the links object data type property is 1 is a property that links an object to a data value OK?",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "So far, so I'm not sure I have OK.",
                    "label": 0
                },
                {
                    "sent": "So, for instance, let's say person is an owl class.",
                    "label": 0
                },
                {
                    "sent": "Name is a data type property that it's ranges person in its domain is string and age is another data type property.",
                    "label": 0
                },
                {
                    "sent": "But is this domain is this person and Israel range.",
                    "label": 0
                },
                {
                    "sent": "It is integer or yes integer, let's say.",
                    "label": 0
                },
                {
                    "sent": "And you have friends of which is.",
                    "label": 0
                },
                {
                    "sent": "It's a.",
                    "label": 0
                },
                {
                    "sent": "It's an object type property.",
                    "label": 0
                },
                {
                    "sent": "It's an object property whose domain is person and ranges also person because the person know whose range can be think.",
                    "label": 0
                },
                {
                    "sent": "Because a person can be friend with everything.",
                    "label": 0
                },
                {
                    "sent": "Hopefully yeah.",
                    "label": 0
                },
                {
                    "sent": "Sometimes accept people.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Anyhow, so.",
                    "label": 0
                },
                {
                    "sent": "Anne now.",
                    "label": 0
                },
                {
                    "sent": "As far as Elena said before, a class is defined as a group of individuals that are kind of common who share some properties there is.",
                    "label": 0
                },
                {
                    "sent": "There are commonalities between them.",
                    "label": 0
                },
                {
                    "sent": "Now in our terms, classes associated with a set of instances of individuals, and this is called the class extension.",
                    "label": 0
                },
                {
                    "sent": "OK, so for instance.",
                    "label": 0
                },
                {
                    "sent": "I don't know.",
                    "label": 0
                },
                {
                    "sent": "I don't know your names and you allows.",
                    "label": 0
                },
                {
                    "sent": "Nicholas Nicholas is an instance.",
                    "label": 0
                },
                {
                    "sent": "If it's in the extension of class person, right?",
                    "label": 0
                },
                {
                    "sent": "And OK, so so it is in an extension and is an instance of class person.",
                    "label": 1
                },
                {
                    "sent": "Now a class is an intentional meaning in the sense that it is related, but it is not equal to its extension in our well now we have the open world semantics as I don't remember if yesterday you were here when we spoke with.",
                    "label": 0
                },
                {
                    "sent": "And when we mentioned something with Barry about the open world semantics in the sense that if I represent something, if I have this set of instances, it doesn't mean that this is my only set of instances in open world semantics in our in RDF we know that this is the.",
                    "label": 0
                },
                {
                    "sent": "This is the set of instances.",
                    "label": 1
                },
                {
                    "sent": "Now it might change in the future and the clothes.",
                    "label": 0
                },
                {
                    "sent": "Well, semantics.",
                    "label": 0
                },
                {
                    "sent": "What I say is that this is it.",
                    "label": 0
                },
                {
                    "sent": "This is the set of instances now.",
                    "label": 0
                },
                {
                    "sent": "OK, so this is my.",
                    "label": 0
                },
                {
                    "sent": "This is this is my population and also in all under open world semantics.",
                    "label": 0
                },
                {
                    "sent": "Owl is not.",
                    "label": 0
                },
                {
                    "sent": "It's not cannot be interpreted as a constraint language.",
                    "label": 0
                },
                {
                    "sent": "That's what Barry was saying yesterday.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "I'm just adding more information.",
                    "label": 0
                },
                {
                    "sent": "Nothing is invalid when I interpret our as under the open world assumption.",
                    "label": 0
                },
                {
                    "sent": "OK, so in this in that sense two classes may have the same the same extension, the same set of instances, but they're not the same.",
                    "label": 0
                },
                {
                    "sent": "Then we're not talking about the same.",
                    "label": 0
                },
                {
                    "sent": "The same concept.",
                    "label": 0
                },
                {
                    "sent": "For instance, I can have I can have.",
                    "label": 0
                },
                {
                    "sent": "A situation where I have the class person has well here you are all.",
                    "label": 0
                },
                {
                    "sent": "People right?",
                    "label": 0
                },
                {
                    "sent": "Yes.",
                    "label": 0
                },
                {
                    "sent": "OK, and then you are all students right here.",
                    "label": 0
                },
                {
                    "sent": "Person and students are the same.",
                    "label": 0
                },
                {
                    "sent": "The you have the heaviest classes, the same extensions but they are not the same classes right?",
                    "label": 0
                },
                {
                    "sent": "Because I'm a person, but I'm not a student, right?",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "So OK, so we have the classes and then we have the extension of the classes, the individuals and then we have.",
                    "label": 0
                },
                {
                    "sent": "Actually The thing is how?",
                    "label": 0
                },
                {
                    "sent": "How do we express this?",
                    "label": 0
                },
                {
                    "sent": "How do we?",
                    "label": 0
                },
                {
                    "sent": "How can we talk about a class?",
                    "label": 0
                },
                {
                    "sent": "How can we define a class?",
                    "label": 0
                },
                {
                    "sent": "How can we describe a class at a class?",
                    "label": 0
                },
                {
                    "sent": "In our we have four ways of describing a class.",
                    "label": 0
                },
                {
                    "sent": "First of all is by stating a class identifier which can be URL reference.",
                    "label": 0
                },
                {
                    "sent": "You all know what your eyes are.",
                    "label": 0
                },
                {
                    "sent": "It can, a second one can be an exhaustive, exhaustive enumeration of the individuals that belong to this class.",
                    "label": 0
                },
                {
                    "sent": "So for instance, the class of the student Sofia's WC 2015 are all of you.",
                    "label": 0
                },
                {
                    "sent": "That's it, OK.",
                    "label": 0
                },
                {
                    "sent": "It can be a property through property restriction and through the end by actually expressing new concepts such as by intersecting union on, complementing existing classes, OK.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Let's let's see.",
                    "label": 0
                },
                {
                    "sent": "So this is very simple in a class description and you are a reference or for instance I can writethisdpi.org #artist is a set of artists right?",
                    "label": 1
                },
                {
                    "sent": "And then I can declare that DB pedia.",
                    "label": 1
                },
                {
                    "sent": "Yes, hush Tom Waits is a member or instance of the class artist.",
                    "label": 0
                },
                {
                    "sent": "OK, so here is what I write.",
                    "label": 0
                },
                {
                    "sent": "I write.",
                    "label": 0
                },
                {
                    "sent": "Here is our class.",
                    "label": 0
                },
                {
                    "sent": "It is about this.",
                    "label": 0
                },
                {
                    "sent": "This URL and here I right?",
                    "label": 0
                },
                {
                    "sent": "Well I I write information about the label of the class, so here I write the name of this class.",
                    "label": 0
                },
                {
                    "sent": "This is a UI you can could have been.",
                    "label": 0
                },
                {
                    "sent": "This unreadable thing that you looked yesterday at Musicbrainz, but here are right there.",
                    "label": 0
                },
                {
                    "sent": "DFS label of this thing in the in the English language is artistan in the French language languages artist.",
                    "label": 0
                },
                {
                    "sent": "OK, now if I want to state that if I want to talk about any individual definition RDF XML in our well I'm going to write our named individual has a name is Tom Waits.",
                    "label": 1
                },
                {
                    "sent": "This is again are you are.",
                    "label": 0
                },
                {
                    "sent": "I could have been a Uri 1234567.",
                    "label": 0
                },
                {
                    "sent": "OK now I want to write that this that this the resource depicted by this yr I lose by the way, don't wait is a type is of type artist so.",
                    "label": 0
                },
                {
                    "sent": "I'm just going to write RDF type RDF resource artists.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "No classes are fine.",
                    "label": 0
                },
                {
                    "sent": "Now The thing is, how do I organize my classes when I write ontologies, one of the first things that you have to do, but you would like to do or?",
                    "label": 0
                },
                {
                    "sent": "Depends on your task is organized as classes in hierarchies right?",
                    "label": 0
                },
                {
                    "sent": "And this organization can be is possible through the subclass of property or DFS property.",
                    "label": 0
                },
                {
                    "sent": "So I can write for instance that class HTTP dppedia.org artist is a subclass of class person.",
                    "label": 1
                },
                {
                    "sent": "Now I have this OK, sorry I repeat this thing here.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So the second the second thing is the 2nd way of describing a class through is through an instance enumeration.",
                    "label": 1
                },
                {
                    "sent": "So for instance, So what it what does it mean?",
                    "label": 0
                },
                {
                    "sent": "And instancing Malaysian?",
                    "label": 0
                },
                {
                    "sent": "I said before that the the students of this school.",
                    "label": 0
                },
                {
                    "sent": "No, yeah, the students of the school.",
                    "label": 0
                },
                {
                    "sent": "It's you, right?",
                    "label": 0
                },
                {
                    "sent": "If so, if I wanted to, if I wanted to write to define the class student Sophie SWC Summer School 2015 I would take each one of you I would assign to you to each one of you one you are I and then I would say this is this is the class the class is defined by each one of you, yes.",
                    "label": 0
                },
                {
                    "sent": "Yeah well yes.",
                    "label": 0
                },
                {
                    "sent": "Well The thing is that in the open world assumption then you cannot change anything.",
                    "label": 0
                },
                {
                    "sent": "This is your class.",
                    "label": 1
                },
                {
                    "sent": "You when I say that this class is defined by enumeration of 15 or 25 instances, this is the definition of the class.",
                    "label": 0
                },
                {
                    "sent": "It is going not going to change the open world assumption.",
                    "label": 0
                },
                {
                    "sent": "This is, I'm stating exactly what is the instance of the class.",
                    "label": 1
                },
                {
                    "sent": "I cannot change it that it will not going to change on the open world assumption.",
                    "label": 0
                },
                {
                    "sent": "OK, so and actually, yeah, that's what I, that's what I mean.",
                    "label": 0
                },
                {
                    "sent": "No new instances can be added in this in this in the extension of this class.",
                    "label": 1
                },
                {
                    "sent": "I'm just saying that the the the students of this school are are those 25 people who are here.",
                    "label": 0
                },
                {
                    "sent": "That's it.",
                    "label": 0
                },
                {
                    "sent": "So here I'm going to so this is an example, so our class jazz genre collects all type of all types of jazz music.",
                    "label": 0
                },
                {
                    "sent": "So here I'm going to talk about class.",
                    "label": 0
                },
                {
                    "sent": "This class, just general and I'm going to say that this one of these things.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "I don't know how many in the R 2X.",
                    "label": 0
                },
                {
                    "sent": "So then OK, so this class.",
                    "label": 0
                },
                {
                    "sent": "Is then instances.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Now the third think the 3rd way to define a class.",
                    "label": 0
                },
                {
                    "sent": "So we said your eyes, then we said enumeration through its instances and now it's through property restrictions.",
                    "label": 0
                },
                {
                    "sent": "This this description is interesting in the sense that I can describe an anonymous class.",
                    "label": 0
                },
                {
                    "sent": "Namely, class of all the individuals that satisfy this restriction and our different our distinguish between 2 two ways of defining description.",
                    "label": 0
                },
                {
                    "sent": "First of all, this cardinality constraints cardinality constraint.",
                    "label": 0
                },
                {
                    "sent": "When I say for instance that the property can have, this is the maximum number of values at the property can have.",
                    "label": 0
                },
                {
                    "sent": "This is the minimum number of values and this is exactly the number of values that this property can help and you remember before.",
                    "label": 0
                },
                {
                    "sent": "When I said that in our light, which is this the simplest?",
                    "label": 0
                },
                {
                    "sent": "Let's say the simplest form of our only cardinality's of zero and one are allowed.",
                    "label": 0
                },
                {
                    "sent": "It's not oh to zero there.",
                    "label": 0
                },
                {
                    "sent": "So and then the the the other kind of constraints are arranged constraints for range constraints.",
                    "label": 0
                },
                {
                    "sent": "I have the existential.",
                    "label": 0
                },
                {
                    "sent": "Existential quantification in universal quantification.",
                    "label": 0
                },
                {
                    "sent": "So this means that I'm going to define one property well.",
                    "label": 0
                },
                {
                    "sent": "There exists at least one value that takes.",
                    "label": 0
                },
                {
                    "sent": "This is my property.",
                    "label": 0
                },
                {
                    "sent": "Our existing one value that takes its that takes exist.",
                    "label": 0
                },
                {
                    "sent": "One property that takes its values from concept C or it's all for all properties for all properties of this property, their values are taking from concepts.",
                    "label": 0
                },
                {
                    "sent": "OK, so The thing is the interesting thing.",
                    "label": 0
                },
                {
                    "sent": "One where we're talking about our DFS and RDF.",
                    "label": 0
                },
                {
                    "sent": "We said that domain are DFS domain and range are actually yes.",
                    "label": 0
                },
                {
                    "sent": "Yeah, I am.",
                    "label": 0
                },
                {
                    "sent": "There is an example.",
                    "label": 0
                },
                {
                    "sent": "Later on I can I you will see the example that comes after that.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Here.",
                    "label": 0
                },
                {
                    "sent": "I say that a string quartet has exactly 4 members.",
                    "label": 0
                },
                {
                    "sent": "OK, this is what I want to say, so then I'm going to say that the property I'm going to define a restriction I'm going to define a class string quartet.",
                    "label": 0
                },
                {
                    "sent": "This is equivalent class of a class that is defined by a restriction on the has members on this property and the value of this property is exactly for owl cardinality OK?",
                    "label": 0
                },
                {
                    "sent": "Mrs String Quartet String Quartet has four members, so the way I'm defining is my saying that the String Quartet is an equivalent class of some anonymous class where the property, if it has a property, has members.",
                    "label": 0
                },
                {
                    "sent": "It has just value for.",
                    "label": 0
                },
                {
                    "sent": "OK, is it?",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So OK, so those constraints are local constraints.",
                    "label": 0
                },
                {
                    "sent": "OK, that's why I said so.",
                    "label": 0
                },
                {
                    "sent": "In the example that I showed just one second ago, I said there is the the String Quartet has is equivalent class to some anonymous class that has members.",
                    "label": 0
                },
                {
                    "sent": "This has members, is defined only form in order to define the Jazz, the String Quartet.",
                    "label": 0
                },
                {
                    "sent": "So if I wanted to three, I don't know.",
                    "label": 0
                },
                {
                    "sent": "Know trio, for instance, I would define again an equivalent class on his members with OWL cardinality 3.",
                    "label": 0
                },
                {
                    "sent": "OK, this is just a local constraint, does not apply globally as it used to be with our DFS domain and range constraints.",
                    "label": 0
                },
                {
                    "sent": "So this is the general form of property restriction.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Hear this.",
                    "label": 0
                },
                {
                    "sent": "OK. Is this I define my class an equivalent class and this is the restriction on the property that I'm interested in OK in the same time here I said string Quartet has exactly 4 members.",
                    "label": 1
                },
                {
                    "sent": "I think below I have.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "A full size the orchestra has at least 70 and most hundred members, so again I define my class full size orchestra and I define it equivalent to a restriction to an anonymous class defined as a restriction with min and Max cardinality 70 and 100.",
                    "label": 1
                },
                {
                    "sent": "And again, this is not a I'm not able to do that in our light.",
                    "label": 0
                },
                {
                    "sent": "I said I know I like just zero and one cardinality OK. Is everything OK?",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK. No.",
                    "label": 0
                },
                {
                    "sent": "I showed you about the cardinality constraints.",
                    "label": 0
                },
                {
                    "sent": "Now about the local range constraints, so I can define so local range constraints give me the possible allow me to define a class based on the type of property values.",
                    "label": 1
                },
                {
                    "sent": "Up until now I said how many property values.",
                    "label": 0
                },
                {
                    "sent": "Now I want the type of property values.",
                    "label": 0
                },
                {
                    "sent": "So for instance, and as I said before, it's different from the global or DFS range and domain constraints.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "In the RDF S, the domain and range constraints and I should have said that before is defined for everything.",
                    "label": 0
                },
                {
                    "sent": "I said that for instance, I have the class.",
                    "label": 0
                },
                {
                    "sent": "Sorry, I have the property name and it's defined on class person and takes its values and clustering OK or I have the property name and it takes its values in class person in class house in Class St and exits values in class in the data type string.",
                    "label": 0
                },
                {
                    "sent": "This is defined for all instances of name.",
                    "label": 0
                },
                {
                    "sent": "Should adhere to those constraints.",
                    "label": 0
                },
                {
                    "sent": "Here I can have his members I can have.",
                    "label": 0
                },
                {
                    "sent": "I can have.",
                    "label": 0
                },
                {
                    "sent": "In my previous example well.",
                    "label": 0
                },
                {
                    "sent": "If his members takes its values in, for instance in people when I'm talking about on musicians, we're not talking about museum orchestra.",
                    "label": 0
                },
                {
                    "sent": "Sorry, not a museum musical and orchestra.",
                    "label": 0
                },
                {
                    "sent": "I can have.",
                    "label": 0
                },
                {
                    "sent": "It takes its can, take its values in footballer.",
                    "label": 0
                },
                {
                    "sent": "If I'm taking about a football team, it can take its values in student in mind.",
                    "label": 0
                },
                {
                    "sent": "The infant talking about a class of students etc.",
                    "label": 0
                },
                {
                    "sent": "OK, the same property.",
                    "label": 0
                },
                {
                    "sent": "So I have two.",
                    "label": 0
                },
                {
                    "sent": "I have two I have.",
                    "label": 0
                },
                {
                    "sent": "We have two constructs.",
                    "label": 0
                },
                {
                    "sent": "We have some values.",
                    "label": 1
                },
                {
                    "sent": "From where is the existential quantification where defines the class of individuals X for which there exists at least one value Y.",
                    "label": 1
                },
                {
                    "sent": "This is the existential quantification, the reverse epsilon, but it can be an instance of Class C as it as it is, it's shown there all of the specified data range.",
                    "label": 0
                },
                {
                    "sent": "Such that X, C is an instance of property P. OK, so let me.",
                    "label": 0
                },
                {
                    "sent": "So here for instance.",
                    "label": 0
                },
                {
                    "sent": "OK, so this is.",
                    "label": 0
                },
                {
                    "sent": "OK, so this is.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "They exist, so for all it's more or less the same.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Yeah this OK.",
                    "label": 0
                },
                {
                    "sent": "So if I want to say for instance that at least one of the members of a jazz band plays the saxophone, then I can just say that I have the jazz band Member, then this is an equivalent class to an anonymous class where.",
                    "label": 1
                },
                {
                    "sent": "These are not this anonymous class of something.",
                    "label": 0
                },
                {
                    "sent": "His value has a constraint on value plays instrument, where some values from are taking from saxophone.",
                    "label": 0
                },
                {
                    "sent": "OK, so I'm just saying here that adjust band Member is an equivalence Class 2 to a class XY zed.",
                    "label": 0
                },
                {
                    "sent": "I don't care about the name of the class with actually specified, but if I have a blaze instrument then it should be.",
                    "label": 0
                },
                {
                    "sent": "Then it should take the value of saxophone OK. No.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "In the same spirit, all values from it tells me that if I have.",
                    "label": 0
                },
                {
                    "sent": "Well, if I have a. OK.",
                    "label": 0
                },
                {
                    "sent": "It's this construct this.",
                    "label": 0
                },
                {
                    "sent": "Our construct defines a class of individuals for which it holds that if the pair X, Y is an instance of this property pin OK, then why should be should be must be an instance of classy or a value in the specified data range?",
                    "label": 0
                },
                {
                    "sent": "So this C can be a concept can be a class or can be specified data range.",
                    "label": 0
                },
                {
                    "sent": "OK, so let me.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "See this, so for instance, members of a string quartet play one of violin, Viola, cello and double bass.",
                    "label": 1
                },
                {
                    "sent": "OK, so I define here the class string Quartet, and I have here.",
                    "label": 0
                },
                {
                    "sent": "It's an equivalent class to the class of a class of musicians.",
                    "label": 0
                },
                {
                    "sent": "Let's say sorry to semantic class to an anonymous class, an anonymous class where the restriction on property plays instrument of this anonymous class should be one of those four values.",
                    "label": 0
                },
                {
                    "sent": "So for all should be one of those things.",
                    "label": 0
                },
                {
                    "sent": "Yes.",
                    "label": 0
                },
                {
                    "sent": "One more thing is settled other ones custom.",
                    "label": 0
                },
                {
                    "sent": "Yeah no, no.",
                    "label": 0
                },
                {
                    "sent": "Here I said that all values from should be taking from the set of those values.",
                    "label": 0
                },
                {
                    "sent": "OK, so The thing is that if I have an instance of class string Quartet member, then this guy should play one of the one of those 4 four instruments.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "Yes, yes.",
                    "label": 0
                },
                {
                    "sent": "1.",
                    "label": 0
                },
                {
                    "sent": "Yes yeah yeah yeah yeah.",
                    "label": 0
                },
                {
                    "sent": "Yeah, well, The thing is that here I'm just defining, sorry here I'm defining.",
                    "label": 0
                },
                {
                    "sent": "How can I say this here you say that all values from should be taking from the class of those four instruments.",
                    "label": 0
                },
                {
                    "sent": "For instruments, yes, previous was this.",
                    "label": 0
                },
                {
                    "sent": "So here is I have one string Quartet member should be.",
                    "label": 0
                },
                {
                    "sent": "It is an equivalent class to a class that has a property that the values are.",
                    "label": 0
                },
                {
                    "sent": "This are those four before it was the genre.",
                    "label": 0
                },
                {
                    "sent": "The values are those four.",
                    "label": 0
                },
                {
                    "sent": "You see what I mean?",
                    "label": 0
                },
                {
                    "sent": "All the members of the class.",
                    "label": 0
                },
                {
                    "sent": "OK, OK. One playing instrument property.",
                    "label": 0
                },
                {
                    "sent": "Yes yeah yeah.",
                    "label": 0
                },
                {
                    "sent": "OK, is it OK?",
                    "label": 0
                },
                {
                    "sent": "It's a bit confusing, but yeah you will, yeah.",
                    "label": 0
                },
                {
                    "sent": "It takes time.",
                    "label": 0
                },
                {
                    "sent": "OK, so for instance and then the last thing is that.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So in all lights can be used only with named classes or data types.",
                    "label": 1
                },
                {
                    "sent": "OK, now in our has value.",
                    "label": 0
                },
                {
                    "sent": "It defines the class of individuals X such that they have as property they have as value for property P exactly this.",
                    "label": 1
                },
                {
                    "sent": "One value, V that is equivalent to V, right?",
                    "label": 0
                },
                {
                    "sent": "So for instance, you can say.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Here.",
                    "label": 0
                },
                {
                    "sent": "I can say that violence is the instrument of a violinist, so here I can say that the violinist is the class of, well, is the class of violence.",
                    "label": 1
                },
                {
                    "sent": "It is equivalent to.",
                    "label": 0
                },
                {
                    "sent": "Do an anonymous class where plays instrument is exactly the violin OK?",
                    "label": 0
                },
                {
                    "sent": "Is exactly this way.",
                    "label": 0
                }
            ]
        },
        "clip_31": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, so first of all you are.",
                    "label": 0
                },
                {
                    "sent": "I then enumeration, then property restrictions and now class descriptions through set operations when getting richer.",
                    "label": 1
                },
                {
                    "sent": "So what does it mean?",
                    "label": 0
                },
                {
                    "sent": "It means that I can define a class based on as a union intersection as a union, intersection and complementation of of another client of a set of classes.",
                    "label": 1
                },
                {
                    "sent": "So for instance, the hourly intersection of it links a class to a set of classes, restrictions, class descriptions, so describes actually an anonymous class whose classic extension is nothing but the intersection of the extensions of the of the classes.",
                    "label": 0
                },
                {
                    "sent": "OK, now in the same spirit union of again it links.",
                    "label": 0
                },
                {
                    "sent": "Class description at last a list of class descriptions.",
                    "label": 0
                },
                {
                    "sent": "A class name to list of class descriptions, and describes the anonymous class now and this is in parentheses.",
                    "label": 0
                },
                {
                    "sent": "Anonymous class because I can say that this is.",
                    "label": 0
                },
                {
                    "sent": "Do you understand what an anonymous classes?",
                    "label": 1
                },
                {
                    "sent": "No, I don't have class.",
                    "label": 0
                },
                {
                    "sent": "The class that has no name.",
                    "label": 0
                },
                {
                    "sent": "So for instance before sorry.",
                    "label": 0
                },
                {
                    "sent": "Yes, exactly so.",
                    "label": 0
                },
                {
                    "sent": "For instance, before I said I said that glass can be defined by UI.",
                    "label": 0
                },
                {
                    "sent": "This is a name class.",
                    "label": 0
                },
                {
                    "sent": "I know that the name of the classes blah blah blah thepedia.org/sorry hush artist.",
                    "label": 0
                },
                {
                    "sent": "This is a name class while all the classes that I have defined up until.",
                    "label": 0
                }
            ]
        },
        "clip_32": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Now.",
                    "label": 0
                },
                {
                    "sent": "This is this is an equivalent class to something.",
                    "label": 0
                },
                {
                    "sent": "This is this defines here.",
                    "label": 0
                },
                {
                    "sent": "This restriction defines me an anonymous class does not have a name.",
                    "label": 0
                },
                {
                    "sent": "This basically is going to be interpreted as a blank note when you are going too well in the in the store.",
                    "label": 0
                },
                {
                    "sent": "In the RDF engine, in the triple story it's going to interpret it.",
                    "label": 0
                },
                {
                    "sent": "It's going to be interpreted as a blank note, OK?",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_33": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Describes an anonymous in parenthesis that mean parentheses miss.",
                    "label": 0
                },
                {
                    "sent": "It can be also named right.",
                    "label": 0
                },
                {
                    "sent": "I can say that the class of.",
                    "label": 0
                },
                {
                    "sent": "Class of students of this year and last year he SWC Summer School is the union and I can I can I can I can give a name to this class it's going to be this class of students of 2004 fourteen 2015 summer school and this name named class.",
                    "label": 0
                },
                {
                    "sent": "Now it's not an anonymous class.",
                    "label": 0
                },
                {
                    "sent": "This name class is going to be defined as the Union of the extension of the two of the of the two classes of the students of 2014 Summer School in 2015.",
                    "label": 0
                },
                {
                    "sent": "Summer school.",
                    "label": 0
                },
                {
                    "sent": "OK, so.",
                    "label": 0
                }
            ]
        },
        "clip_34": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And then finally the complementation is the complement links one class to exactly one class description.",
                    "label": 0
                },
                {
                    "sent": "This is a unary operator as it is in logic, right?",
                    "label": 0
                },
                {
                    "sent": "This is the complement negation in this.",
                    "label": 0
                },
                {
                    "sent": "Well, it's another as I say, say on the third bullet.",
                    "label": 0
                },
                {
                    "sent": "It's analogous to negation, and it describes a class for which the extension contains exactly those individuals that do not belong to the extension of the of the class of the of the class of which I'm defined.",
                    "label": 1
                },
                {
                    "sent": "Well, I'm I define this class as a complement of.",
                    "label": 0
                },
                {
                    "sent": "Well, I think yesterday it was what Buddy said about and.",
                    "label": 0
                },
                {
                    "sent": "No, yeah, the mushrooms the poisonous mushrooms.",
                    "label": 0
                },
                {
                    "sent": "I mean I have the class of poisonous mushrooms.",
                    "label": 0
                },
                {
                    "sent": "What is the complementation of of this class?",
                    "label": 0
                },
                {
                    "sent": "The complementation is you and it includes you because you are not the poisonous mushroom, right?",
                    "label": 0
                },
                {
                    "sent": "It's like X.",
                    "label": 0
                },
                {
                    "sent": "It's everything that is not in this set.",
                    "label": 0
                },
                {
                    "sent": "OK, this is the negation thing.",
                    "label": 0
                },
                {
                    "sent": "I'm sorry.",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "No, go ahead.",
                    "label": 0
                },
                {
                    "sent": "Don't be long.",
                    "label": 0
                },
                {
                    "sent": "Yeah, I belong in this class.",
                    "label": 0
                },
                {
                    "sent": "Yes.",
                    "label": 0
                },
                {
                    "sent": "Yeah yeah well, the thing from again I'm not of the people who defined our.",
                    "label": 0
                },
                {
                    "sent": "They were very well extremely bright people who.",
                    "label": 0
                },
                {
                    "sent": "Who are working for that?",
                    "label": 0
                },
                {
                    "sent": "But I think that the way that they did it was just too.",
                    "label": 0
                },
                {
                    "sent": "Let's say they took the operators, the binary operators and the unary operators of logic, and then they said, let's define a language that has that.",
                    "label": 0
                },
                {
                    "sent": "So for instance, I can define.",
                    "label": 0
                },
                {
                    "sent": "So let's say.",
                    "label": 0
                }
            ]
        },
        "clip_35": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "If I want to define a set based on the intersection of other sets, I'm going to use our intersection of.",
                    "label": 0
                },
                {
                    "sent": "If I want to define a class based on the Union of other classes, I'm going to use our union of and then let's add negation and see how beautiful it is right?",
                    "label": 0
                },
                {
                    "sent": "And then I'm going to add the negation as well.",
                    "label": 0
                },
                {
                    "sent": "OK, so this is.",
                    "label": 0
                },
                {
                    "sent": "We have left.",
                    "label": 0
                },
                {
                    "sent": "No.",
                    "label": 0
                },
                {
                    "sent": "Me or you or any other things that is not yeah.",
                    "label": 0
                },
                {
                    "sent": "No, it's going to be considered from what I understand is if you define that an edible mushroom ISM is the schema level you define.",
                    "label": 0
                },
                {
                    "sent": "An edible mushroom is a compliment compliment compliment of the colors of poisonous mushrooms.",
                    "label": 0
                },
                {
                    "sent": "Then this means that everything that is in your knowledge base at that point becomes an instance of the poisonous mushroom, one of the complementation of of whatever.",
                    "label": 0
                },
                {
                    "sent": "It is.",
                    "label": 0
                },
                {
                    "sent": "OK, so this is how you should interpret it, yeah?",
                    "label": 0
                },
                {
                    "sent": "They're just because they're examples.",
                    "label": 0
                },
                {
                    "sent": "Well, The thing is that you can write a restriction restriction basically does not.",
                    "label": 0
                },
                {
                    "sent": "From what I know does not allow you to define and named class, just an anonymous class.",
                    "label": 0
                },
                {
                    "sent": "OK so this is, this is how you can you can play right now The thing is in our light for instance you can say that the restrictions are not applied only to named classes, not to anonymous classes so.",
                    "label": 0
                },
                {
                    "sent": "When I talk about restriction, I'm going to say that I have this restriction on this, let's say here.",
                    "label": 0
                },
                {
                    "sent": "So here I'm going to say RDF our class RDF about something, and then I'm going to define this restriction OK. Is it OK?",
                    "label": 0
                },
                {
                    "sent": "OK, so here for instance I'm this is an example of an intersectional for when I want to say that and all and all female band is a band whose members are all female musicians, right?",
                    "label": 0
                },
                {
                    "sent": "So I'm going to I'm I'm defining the class.",
                    "label": 0
                },
                {
                    "sent": "All female band which is equivalent class to go to the intersection you see the intersection.",
                    "label": 0
                },
                {
                    "sent": "I I say this is an intersection there section.",
                    "label": 0
                },
                {
                    "sent": "In the past types collection because it's a collection is a set of things, right?",
                    "label": 0
                },
                {
                    "sent": "This is a bar style collection of our class.",
                    "label": 0
                },
                {
                    "sent": "This one of our class musician, an hour class female band and then the female band.",
                    "label": 0
                },
                {
                    "sent": "I define it as S as defined.",
                    "label": 0
                },
                {
                    "sent": "The sorry female is an anonymous class where the restriction on the property is that on the gender of all the people.",
                    "label": 0
                },
                {
                    "sent": "Of everybody, everything and participates.",
                    "label": 0
                },
                {
                    "sent": "There is female.",
                    "label": 0
                },
                {
                    "sent": "OK, well there includes also the.",
                    "label": 0
                },
                {
                    "sent": "Might also include the the dogs that are female, right?",
                    "label": 0
                },
                {
                    "sent": "It's not just people.",
                    "label": 0
                },
                {
                    "sent": "If I wanted to write all the people, female band players and I will, I should have written also here.",
                    "label": 0
                },
                {
                    "sent": "Well, in an idea would be to to put here a third class because we said that it links one class to a link, clicks one class to a set of class description.",
                    "label": 0
                },
                {
                    "sent": "So it's more than two.",
                    "label": 0
                },
                {
                    "sent": "I would have said here that also should be human, right?",
                    "label": 0
                },
                {
                    "sent": "OK. Is it OK?",
                    "label": 0
                },
                {
                    "sent": "Yeah no.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_36": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, and then finally the Union and the complement of an.",
                    "label": 0
                },
                {
                    "sent": "So for instance, here it is.",
                    "label": 0
                },
                {
                    "sent": "I'm defining a class for which the classical extension contains 3 individuals, Tosca Salaam, Salaam, Ian to Randall.",
                    "label": 0
                },
                {
                    "sent": "Assuming that they are all different, so I'm defining the class Italian opera which is a union of this class.",
                    "label": 0
                },
                {
                    "sent": "Those kind salami.",
                    "label": 0
                },
                {
                    "sent": "It is one of again, right?",
                    "label": 0
                },
                {
                    "sent": "An an hour class on one of collection tour Android Tosca.",
                    "label": 0
                },
                {
                    "sent": "OK so it has just for individuals there.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "Here is exactly this question before I want to not an all female band while I'm going to say that well, just define a class not among female band complement of an all female band.",
                    "label": 0
                },
                {
                    "sent": "OK then it includes.",
                    "label": 0
                },
                {
                    "sent": "Also I don't know.",
                    "label": 0
                },
                {
                    "sent": "This laptop for instance.",
                    "label": 0
                },
                {
                    "sent": "OK. OK.",
                    "label": 0
                }
            ]
        },
        "clip_37": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So we're done with the we're done with the four different ways of expressing classes, OK?",
                    "label": 0
                },
                {
                    "sent": "You arise enumeration.",
                    "label": 0
                },
                {
                    "sent": "I'm trying to enumeration restriction property through property restriction through complex class constraints OK. Complex class descriptions.",
                    "label": 0
                },
                {
                    "sent": "Now we have our will allows us our one allows us and then of course I will do allows us to contain additional components that need necessary and end or sufficient characteristics of a class so our gives us the possibility to express hierarchies through the subclass of equivalent classes and also disjointness between classes.",
                    "label": 0
                },
                {
                    "sent": "OK. OK.",
                    "label": 0
                }
            ]
        },
        "clip_38": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "With a subclass of, we said before what it is.",
                    "label": 0
                },
                {
                    "sent": "The one that is a subclass of C2.",
                    "label": 0
                },
                {
                    "sent": "Then I know that the extension of C1 is also an extension of C2.",
                    "label": 0
                },
                {
                    "sent": "OK, so here I define the Super set.",
                    "label": 0
                },
                {
                    "sent": "OK, now for any class C1 there might be a number of super class axioms.",
                    "label": 0
                },
                {
                    "sent": "OK, it means that I can have well take a three and reverse it.",
                    "label": 0
                },
                {
                    "sent": "OK, OK, I see one that is a subclass of C2 and C2 is a subclass of C3 and C2 can be a subclass of C4 etc.",
                    "label": 0
                },
                {
                    "sent": "So you take a three on University the other way around.",
                    "label": 0
                },
                {
                    "sent": "Here you can have the multiple subclass of actions.",
                    "label": 0
                },
                {
                    "sent": "Plus of axioms also provide partial definitions in the sense that they represent necessary but not sufficient conditions for established establishing class membership of an individual OK.",
                    "label": 0
                }
            ]
        },
        "clip_39": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "No, for instance here.",
                    "label": 0
                },
                {
                    "sent": "I say that one example.",
                    "label": 0
                },
                {
                    "sent": "It is traditional Italian opera is defined as a subclass of a class of operative.",
                    "label": 1
                },
                {
                    "sent": "Is opera type either opera seria or opera buffa.",
                    "label": 0
                },
                {
                    "sent": "So here it is.",
                    "label": 0
                },
                {
                    "sent": "So I have the traditional Italian Opera 100 subclass of Opera, which is a subclass of.",
                    "label": 0
                },
                {
                    "sent": "You see here an anonymous.",
                    "label": 0
                },
                {
                    "sent": "Again, I define an anonymous class as a restriction of something right.",
                    "label": 1
                },
                {
                    "sent": "Who's opera type has either opera seria or opera buffa.",
                    "label": 0
                },
                {
                    "sent": "OK, so here I can have as you understand I can have very complex nested definitions in my ontology and here The thing is that I can also say that you know something Italian.",
                    "label": 0
                },
                {
                    "sent": "I can then define another on property has open a type.",
                    "label": 0
                },
                {
                    "sent": "In another anonymous class, in some other definition in the same ontology in the same data set in the same set of instant set of statements, I can have a different restriction on my opera type.",
                    "label": 1
                },
                {
                    "sent": "OK, I'm not bound by this restriction.",
                    "label": 0
                },
                {
                    "sent": "This is why we call it a local restriction, not a global one.",
                    "label": 0
                },
                {
                    "sent": "No, I'm OK.",
                    "label": 0
                }
            ]
        },
        "clip_40": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "No, I'm now an different example where different example is this one where an operator is a musical work that has at least one Liberty.",
                    "label": 0
                },
                {
                    "sent": "Stan is not an opera, right?",
                    "label": 0
                },
                {
                    "sent": "So what I do here is that I define an operator which, who that has a subclass of musical work.",
                    "label": 0
                },
                {
                    "sent": "And it's also a subclass of his liberal liberties that this has cardinality exactly 1.",
                    "label": 0
                },
                {
                    "sent": "OK, just one liberties.",
                    "label": 0
                },
                {
                    "sent": "Um?",
                    "label": 0
                },
                {
                    "sent": "OK, so.",
                    "label": 0
                }
            ]
        },
        "clip_41": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So equivalent class, so we've seen subclass off and allows us to build those complex hierarchies, large hierarchies of classes, and then I have equivalent class.",
                    "label": 0
                },
                {
                    "sent": "We've seen examples of equivalent class, but does it mean it means that the two the two classes have exactly the same set of instances, but they do not depict necessarily the same concept?",
                    "label": 0
                },
                {
                    "sent": "I can I can say that person for person is an equivalent class of 4th.",
                    "label": 0
                },
                {
                    "sent": "Fun.",
                    "label": 0
                },
                {
                    "sent": "Of the pedia person, right, but it does not mean that fourth person and the pedia person on exactly the same things, right?",
                    "label": 0
                },
                {
                    "sent": "The same they do not depict the same thing.",
                    "label": 0
                },
                {
                    "sent": "So the extension of class Description C one is exactly the same as the extension of class description.",
                    "label": 0
                },
                {
                    "sent": "See two.",
                    "label": 0
                },
                {
                    "sent": "Both classes contain exactly the same set of individuals, but they do not imply class equality.",
                    "label": 0
                },
                {
                    "sent": "OK. We do not apply.",
                    "label": 0
                },
                {
                    "sent": "They apply class extension equality, but not class equality.",
                    "label": 0
                },
                {
                    "sent": "So if I want to say that two instance two classes are the same, then I have to use the owl same as construct.",
                    "label": 0
                },
                {
                    "sent": "Um, no.",
                    "label": 0
                },
                {
                    "sent": "So for any class C1, there may be any number of owl equivalent class constructs, as it was the case with subclass of this there any number of our liquid one class allows us actually to connect multiple ontologies into one.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "This is so imagine that you have this linked.",
                    "label": 0
                },
                {
                    "sent": "How does this linked open data thing is is created?",
                    "label": 0
                },
                {
                    "sent": "You have one one class and then you say oh, by the way, in this schema this other schema, these two classes are equivalent and these other schema in the schema.",
                    "label": 0
                },
                {
                    "sent": "Also these two classes are equivalent, right?",
                    "label": 0
                },
                {
                    "sent": "And that sends you create those equivalent things.",
                    "label": 0
                },
                {
                    "sent": "OK, those links between the classes.",
                    "label": 0
                },
                {
                    "sent": "Now equivalent class axioms, provide full definitions in the sense that they represent necessary and sufficient conditions for classes.",
                    "label": 0
                }
            ]
        },
        "clip_42": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so for instance here I have a. C1 equivalent class 2C2.",
                    "label": 0
                },
                {
                    "sent": "So I have the.",
                    "label": 0
                },
                {
                    "sent": "Plus the pointer opener of Mozart, which is equivalent class of an opera with those four instances.",
                    "label": 0
                },
                {
                    "sent": "So sorry, three instances.",
                    "label": 0
                },
                {
                    "sent": "OK. Are you define an equivalence class by enumeration of the of another class?",
                    "label": 0
                },
                {
                    "sent": "I can just say equivalent class 4th person is equivalent class too.",
                    "label": 0
                },
                {
                    "sent": "I don't know how to do pedia person, for instance two name classes equivalence.",
                    "label": 0
                },
                {
                    "sent": "Otherwise I can also talk about equivalence between classes and two 2 classes, one named class and one anonymous class.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "So I so it's the same.",
                    "label": 0
                },
                {
                    "sent": "And the same the same example.",
                    "label": 0
                },
                {
                    "sent": "Now the construct our own one of intersection of complement of an union of our are used for defined equivalent classes.",
                    "label": 0
                },
                {
                    "sent": "So I do not need actually here to talk about.",
                    "label": 0
                }
            ]
        },
        "clip_43": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "These things I can just say that class is exactly those things I do not need this class.",
                    "label": 0
                },
                {
                    "sent": "The pointer over of Mozart is condensed.",
                    "label": 0
                },
                {
                    "sent": "Exactly those those three instances does not contain more or less OK, so I don't need to talk about an equivalent class.",
                    "label": 0
                },
                {
                    "sent": "Just say this is a set of instances because you remember union intersection complement of are defined on the basis of the extension and this is what the equivalence class means to in class are equivalent if they have the same.",
                    "label": 0
                },
                {
                    "sent": "Instead of that they have the same instances in their extension.",
                    "label": 0
                }
            ]
        },
        "clip_44": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So disjointness now.",
                    "label": 0
                },
                {
                    "sent": "So we said about the equivalence ODIs join us.",
                    "label": 0
                },
                {
                    "sent": "I can say that one class is joining with another class.",
                    "label": 0
                },
                {
                    "sent": "Is the class extension of the two classes have no individuals in common in common, OK?",
                    "label": 0
                },
                {
                    "sent": "So again, as in the case of.",
                    "label": 0
                },
                {
                    "sent": "Equivalent class and subclass of any class can be associated with any number of other classes through our disjoint axioms.",
                    "label": 0
                },
                {
                    "sent": "So any class can be disjoint with any.",
                    "label": 0
                },
                {
                    "sent": "Any number of other classes and they provide partial definitions in the sense that they present necessary but not sufficient conditions for for the class definitions.",
                    "label": 0
                },
                {
                    "sent": "And disjointness is something that cannot be used in our lights.",
                    "label": 0
                },
                {
                    "sent": "It was introduced in OWL DL, and of course now welfel.",
                    "label": 0
                }
            ]
        },
        "clip_45": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So for instance, here I can define this plans music drama, which is an equivalent class of a union of.",
                    "label": 0
                },
                {
                    "sent": "An anonymous class opera paradigm musical OK. And then I can define here this.",
                    "label": 0
                },
                {
                    "sent": "Lisa, let's say complex expression.",
                    "label": 0
                },
                {
                    "sent": "So first of all, I said that Opera is a subclass of music drama.",
                    "label": 0
                },
                {
                    "sent": "I've defined it here.",
                    "label": 0
                },
                {
                    "sent": "It is an equivalent class of these.",
                    "label": 0
                },
                {
                    "sent": "So sorry.",
                    "label": 0
                },
                {
                    "sent": "Forget this, I is not correct.",
                    "label": 0
                },
                {
                    "sent": "OK, so so I can find that opera is a subclass of music drama I can define here.",
                    "label": 0
                },
                {
                    "sent": "The operator is a subclass of disjoint with opera, and I can define here that our DFS class is a subclass of music, drama and disjoint with opera and operetta.",
                    "label": 0
                },
                {
                    "sent": "OK, I can define all those things.",
                    "label": 0
                }
            ]
        },
        "clip_46": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK. Often with our classes now to our properties when.",
                    "label": 0
                },
                {
                    "sent": "Property extension.",
                    "label": 0
                },
                {
                    "sent": "What is the proper?",
                    "label": 0
                },
                {
                    "sent": "What is a class extension?",
                    "label": 0
                },
                {
                    "sent": "It's a resource, it's a 11 individual.",
                    "label": 0
                },
                {
                    "sent": "One thing the extension of a property is a pair of things is a pair of subject object right?",
                    "label": 0
                },
                {
                    "sent": "OK, so properties have have have a direction from domain to range.",
                    "label": 0
                },
                {
                    "sent": "I have two types of properties.",
                    "label": 0
                },
                {
                    "sent": "The first is the object properties that link as well said before individuals to individuals in the object properties and the data type problems are linked.",
                    "label": 0
                },
                {
                    "sent": "Individuals to actually data write string, integer, float data, etc.",
                    "label": 0
                },
                {
                    "sent": "As I said, as we said before, I will object properties, the class of all properties whose values is is an object, is an individual, and I can define it like this.",
                    "label": 0
                },
                {
                    "sent": "Our logic property are they find the instrument.",
                    "label": 0
                },
                {
                    "sent": "And our data type property that is the class of all properties whose value is an atomic value, OK. And object property and data type property are subclasses of the RDF class.",
                    "label": 0
                },
                {
                    "sent": "RDF property OK.",
                    "label": 0
                },
                {
                    "sent": "So you see here hide links between our property and RDF property.",
                    "label": 0
                }
            ]
        },
        "clip_47": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "No, as well As for classes we also have here property axioms.",
                    "label": 0
                },
                {
                    "sent": "So property axioms are you are used for defining additional characteristics of our properties.",
                    "label": 0
                },
                {
                    "sent": "So for instance I have property hierarchies are difference sub property or some property of I have domain and range constraints in the sense that I have our differences, range and artifice domain as we said before, I can have also now allows me to define relations to other properties.",
                    "label": 0
                },
                {
                    "sent": "Such as equivalent of an inverse of.",
                    "label": 0
                },
                {
                    "sent": "And global cardinality constraints in the sense of functional property.",
                    "label": 0
                },
                {
                    "sent": "An inverse functional property and logical property constraints.",
                    "label": 0
                },
                {
                    "sent": "Symmetric property and transitive property.",
                    "label": 0
                }
            ]
        },
        "clip_48": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So As for subclass of P1 are different sub property of P2 and the property extension of PP1 should be and should be a subset of the property extension of P2.",
                    "label": 1
                },
                {
                    "sent": "OK, so for here for here what I say is that if I write that music Fusion gender is a property of overlaps than any pair X, Y of that I will.",
                    "label": 0
                },
                {
                    "sent": "I will have any extension of property music.",
                    "label": 0
                },
                {
                    "sent": "Fusion gender should be should be should be.",
                    "label": 0
                },
                {
                    "sent": "An instance of the extension of property overlaps OK.",
                    "label": 1
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_49": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "For domain and range constraints, well when I say that P1R DFS domain C1, it means that the domain of the domain of property P1 is classy one.",
                    "label": 0
                },
                {
                    "sent": "OK, so for any pair X, Y that is instance of property, P1X should be an instance of Class C one.",
                    "label": 0
                },
                {
                    "sent": "This is what domain is about.",
                    "label": 0
                },
                {
                    "sent": "No links, the idea phase domain allows us to link a property P12, one or more class description see so I can have one property who has multiple class descriptions.",
                    "label": 0
                },
                {
                    "sent": "What it means is that this this notation restricts the domain of the property to the intersection of the domains of the class descriptions.",
                    "label": 1
                },
                {
                    "sent": "So if I say for instance and I have one property name that this person that is dog that is street, then it means that it should be the domain should be the intersection of all.",
                    "label": 0
                },
                {
                    "sent": "Ball, so until now I don't know if any person who is a dog and.",
                    "label": 0
                },
                {
                    "sent": "A place or my house at the same time, so it's going to be the empty.",
                    "label": 0
                },
                {
                    "sent": "The empty set, right?",
                    "label": 0
                },
                {
                    "sent": "OK. No yes.",
                    "label": 0
                },
                {
                    "sent": "Yes.",
                    "label": 0
                },
                {
                    "sent": "Yesterday Buddy said that in under the assumption the open world assumption, then these two instances should be linked with the same as link.",
                    "label": 0
                },
                {
                    "sent": "Right, so if you if an instance, so that if I understood well your question, you said that if I have a property P1 and then I have the domain should be a classy one.",
                    "label": 0
                },
                {
                    "sent": "And then you said that if I have any stance of, let's say classy one right, but this can you repeat it again?",
                    "label": 0
                },
                {
                    "sent": "Yes.",
                    "label": 0
                },
                {
                    "sent": "Yes, be 1 yes.",
                    "label": 0
                },
                {
                    "sent": "Yes.",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "Yes, yeah it is infer that the X should be an extension of C1.",
                    "label": 0
                },
                {
                    "sent": "Yeah, it isn't fair.",
                    "label": 0
                },
                {
                    "sent": "About the individual membership.",
                    "label": 0
                },
                {
                    "sent": "Sorry.",
                    "label": 0
                },
                {
                    "sent": "Yeah yeah yeah it should be.",
                    "label": 0
                },
                {
                    "sent": "Yeah it should be an extension of C. One.",
                    "label": 0
                },
                {
                    "sent": "That's what domain and range tells us.",
                    "label": 0
                },
                {
                    "sent": "OK, this this, that's why we're calling calling them constraints.",
                    "label": 0
                },
                {
                    "sent": "These are property domain and range constraints.",
                    "label": 0
                },
                {
                    "sent": "OK, so you're laughing.",
                    "label": 0
                },
                {
                    "sent": "I don't know.",
                    "label": 0
                },
                {
                    "sent": "OK now if I want so before the any question.",
                    "label": 0
                },
                {
                    "sent": "So if I want now the example that I said before is OK, I want multiple domain constraints, house streets and person should have the same name, right?",
                    "label": 0
                },
                {
                    "sent": "Our domains of property name then it's going to be the empty set that is the.",
                    "label": 0
                },
                {
                    "sent": "The domain of this property.",
                    "label": 0
                },
                {
                    "sent": "Now if I want all of them.",
                    "label": 0
                },
                {
                    "sent": "If I want all of them to be domains, then I need to define a class union and in this class union this union class is going to serve as the domain for this property.",
                    "label": 0
                },
                {
                    "sent": "So how should I write this?",
                    "label": 0
                },
                {
                    "sent": "Yes.",
                    "label": 0
                },
                {
                    "sent": "OK, so then you can say that property P1.",
                    "label": 0
                },
                {
                    "sent": "Then you have to define a named class that is actually House, dog and person.",
                    "label": 0
                },
                {
                    "sent": "How's the person HDB blah blah blah house dog person?",
                    "label": 1
                },
                {
                    "sent": "It is a union of those three classes, right?",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "Well, what the what?",
                    "label": 0
                },
                {
                    "sent": "What would it serve to do it anonymously?",
                    "label": 0
                },
                {
                    "sent": "How's Logan person separately at rings opening?",
                    "label": 0
                },
                {
                    "sent": "Need to.",
                    "label": 0
                },
                {
                    "sent": "The movie.",
                    "label": 0
                },
                {
                    "sent": "I'm due to be truthful.",
                    "label": 0
                },
                {
                    "sent": "I'm not sure whether you can do that.",
                    "label": 0
                },
                {
                    "sent": "Whether you are allowed to have a domain on an anonymous class, I don't think you can have a domain in an anonymous class.",
                    "label": 0
                },
                {
                    "sent": "You can enable.",
                    "label": 0
                },
                {
                    "sent": "Well, if I have an hour class that is defined as a union of, then I can have an anonymous class defined as a union of.",
                    "label": 0
                },
                {
                    "sent": "So then yeah, yeah, But The thing is that you have to say our Class A union off and then you have domain should be domain of P1 so then OK.",
                    "label": 0
                },
                {
                    "sent": "So then yeah yeah why not because you understand there that if you want to do some reasoning there you are kind of screwed up because there's no no way that somebody is going to understand.",
                    "label": 0
                },
                {
                    "sent": "What is the anonymous class?",
                    "label": 0
                },
                {
                    "sent": "If I if I try to exchange data from different databases then this be known somehow they are just hanging.",
                    "label": 0
                },
                {
                    "sent": "You know the?",
                    "label": 0
                },
                {
                    "sent": "I mean they I have no way to refer to anonymous to blank nodes.",
                    "label": 0
                },
                {
                    "sent": "No way.",
                    "label": 0
                },
                {
                    "sent": "Individual.",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "Well, you know, I know at that point that there are instances of some blank note, but I don't know what this blank node is about.",
                    "label": 0
                },
                {
                    "sent": "I don't know what this blank node is about.",
                    "label": 0
                },
                {
                    "sent": "I have no idea, no idea, OK?",
                    "label": 0
                },
                {
                    "sent": "Yeah, and again you see that there is no way that this is going to be tractable in decidable in machine terms.",
                    "label": 0
                },
                {
                    "sent": "I mean this is this is the problem and this is the problem.",
                    "label": 0
                },
                {
                    "sent": "Also with Black nose black nodes are there basically blank nodes?",
                    "label": 0
                },
                {
                    "sent": "We do not use them at the level of schemas as this is the case here.",
                    "label": 0
                },
                {
                    "sent": "We're just using the level of instances and we're using block nodes at the level of businesses to say that.",
                    "label": 0
                },
                {
                    "sent": "There exists something I know that there is I don't know which it is, but I know that there exists if I want to go from here to Iraqi on, I know that I have to go through some cities.",
                    "label": 0
                },
                {
                    "sent": "I don't know them, but I know that there exists because I can see those things in a map, you know, but I don't know which which, which ones they are.",
                    "label": 0
                },
                {
                    "sent": "I don't care about them, but I know that there exists.",
                    "label": 0
                },
                {
                    "sent": "This is the notion of blank nodes in the RDF.",
                    "label": 0
                },
                {
                    "sent": "OK, this existential quantification, but you know they are there.",
                    "label": 0
                },
                {
                    "sent": "You don't know anything about them.",
                    "label": 0
                },
                {
                    "sent": "You just know that there exists OK. OK. Are we OK?",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_50": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We have OK.",
                    "label": 0
                },
                {
                    "sent": "So now um, domain and range constraints.",
                    "label": 0
                },
                {
                    "sent": "This is OK.",
                    "label": 0
                },
                {
                    "sent": "This is, this was before it was the domain.",
                    "label": 0
                },
                {
                    "sent": "The range is well similar to similar to this.",
                    "label": 0
                },
                {
                    "sent": "Again, when.",
                    "label": 0
                },
                {
                    "sent": "Yes.",
                    "label": 0
                },
                {
                    "sent": "It's exactly the same.",
                    "label": 0
                },
                {
                    "sent": "OK, so when multiple classes should act as range then you should use the Union of.",
                    "label": 0
                }
            ]
        },
        "clip_51": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Property, so for instance, here I want to say that music genre is a property of overlaps and defines in and takes its values in from classic music channel.",
                    "label": 1
                },
                {
                    "sent": "So actually I'm going to define this property.",
                    "label": 0
                },
                {
                    "sent": "The subject property repeat their music, Fusion Fusion chamber.",
                    "label": 0
                },
                {
                    "sent": "Gender, which is a property of overlaps with domain and range in using center OK. OK, no.",
                    "label": 0
                },
                {
                    "sent": "Not like yesterday.",
                    "label": 0
                },
                {
                    "sent": "Seriously.",
                    "label": 0
                },
                {
                    "sent": "So what is the difference between value constraints and RDF constraints is that in our values from an owl, some values from our local and enforced on the property.",
                    "label": 0
                },
                {
                    "sent": "When applied to the class.",
                    "label": 0
                },
                {
                    "sent": "OK, I said before they are local.",
                    "label": 0
                },
                {
                    "sent": "OK now, in the RDF S range in RDF esque domain constraints.",
                    "label": 0
                },
                {
                    "sent": "These are global and apply to all instances of the class independent.",
                    "label": 0
                },
                {
                    "sent": "Property independent on the class on which this thing is applied.",
                    "label": 0
                }
            ]
        },
        "clip_52": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so now we talked about the domain range and.",
                    "label": 0
                },
                {
                    "sent": "Domain range and subclass often equivalence problem.",
                    "label": 0
                },
                {
                    "sent": "Sorry subclass or property of properties.",
                    "label": 0
                },
                {
                    "sent": "Now similar to classes.",
                    "label": 0
                },
                {
                    "sent": "We have also equivalent property right?",
                    "label": 0
                },
                {
                    "sent": "We have two properties and are equivalent when even when then the extension is the same.",
                    "label": 0
                },
                {
                    "sent": "OK, they share the same extension.",
                    "label": 0
                }
            ]
        },
        "clip_53": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "They might denote different different concepts, different properties in the real world, but they have the same extension and so the.",
                    "label": 0
                }
            ]
        },
        "clip_54": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Is this is 1 case?",
                    "label": 0
                },
                {
                    "sent": "So for instance here I can say that.",
                    "label": 0
                },
                {
                    "sent": "Um?",
                    "label": 0
                },
                {
                    "sent": "Here I can talk about music Composer that is a property of copper dissipates with OK and has a domain and range and work and musical artists an equivalent property of music by.",
                    "label": 0
                },
                {
                    "sent": "OK Music composer music by XYZ.",
                    "label": 0
                },
                {
                    "sent": "No.",
                    "label": 0
                },
                {
                    "sent": "The second property, the second property of properties, is inverse of.",
                    "label": 0
                },
                {
                    "sent": "I can say that the property one is inverse of a property P2 in the sense that since in the properties I have domain and range.",
                    "label": 0
                },
                {
                    "sent": "Domain and range.",
                    "label": 0
                },
                {
                    "sent": "So for instance, I construct the.",
                    "label": 0
                },
                {
                    "sent": "So for instance, I can say that.",
                    "label": 0
                },
                {
                    "sent": "What can I say?",
                    "label": 0
                },
                {
                    "sent": "I can say that.",
                    "label": 0
                },
                {
                    "sent": "For this property again music composer, it's in the inverse of property composed OK.",
                    "label": 0
                },
                {
                    "sent": "So if I have Baha composed the Goldberg variations, then.",
                    "label": 0
                },
                {
                    "sent": "Bach was a music composer of the government variations, then the inverse of was the goal, but variations were composed by Bach.",
                    "label": 0
                },
                {
                    "sent": "OK, that's the inverse thing.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_55": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So now for the global cardinality constraints, so I have.",
                    "label": 0
                },
                {
                    "sent": "So we said before that I have local local constraints, local constraints in the sense of cardinality constraints and all values from some values from enhance values now have also the global cardinality constraints because I can talk about that the property can be unique, right?",
                    "label": 0
                },
                {
                    "sent": "It can be functional.",
                    "label": 0
                },
                {
                    "sent": "Functional admits it has just one value now.",
                    "label": 0
                },
                {
                    "sent": "So for instance I can say that property P1.",
                    "label": 0
                },
                {
                    "sent": "Is of type our functional property so resources can have a single thing.",
                    "label": 0
                },
                {
                    "sent": "Can have only one unique value for property P1, so this means that if I have a property then it cannot.",
                    "label": 0
                },
                {
                    "sent": "There cannot be too and I have an individual leagues with property being for some individual to some individual.",
                    "label": 0
                },
                {
                    "sent": "Why individual data type?",
                    "label": 0
                },
                {
                    "sent": "Why they cannot be another property P from X?",
                    "label": 0
                },
                {
                    "sent": "The same property from mix?",
                    "label": 0
                },
                {
                    "sent": "So different individuals now why?",
                    "label": 0
                },
                {
                    "sent": "If this is the case, then the two wires should be connected with the same ones link.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "So here for instance, I can have birth date.",
                    "label": 0
                },
                {
                    "sent": "I can have.",
                    "label": 0
                },
                {
                    "sent": "This is a functional property because the person have only well bends, has a single.",
                    "label": 0
                },
                {
                    "sent": "Let's assume that we are in a world where a person can have a single birth date.",
                    "label": 0
                },
                {
                    "sent": "OK, and this is equivalent property.",
                    "label": 0
                },
                {
                    "sent": "Sorry and this is.",
                    "label": 0
                },
                {
                    "sent": "I'm just saying that's a function on property and this equivalent property to date of birth OK?",
                    "label": 0
                }
            ]
        },
        "clip_56": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, now as I have functional properties I can also have inverse function properties.",
                    "label": 0
                },
                {
                    "sent": "It's the other way around is that.",
                    "label": 0
                },
                {
                    "sent": "If I have an inverse function on property, then the value determines the object determines the subject in the in the RDF OK.",
                    "label": 0
                },
                {
                    "sent": "If I have, let's say a person is uniquely identified by her Social Security number, so it's a functional property in the sense that each person has a Social Security number, but I cannot.",
                    "label": 0
                },
                {
                    "sent": "I cannot also have two Social Security numbers that correspond to the same person.",
                    "label": 0
                },
                {
                    "sent": "No one secure Social Security number of corresponds to do people.",
                    "label": 0
                },
                {
                    "sent": "This is the inverse inverse function property OK?",
                    "label": 0
                },
                {
                    "sent": "Do you get that?",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_57": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "No more more characteristics of property, so I have the transitivity trans activity is his member is member of for instance subevent.",
                    "label": 0
                },
                {
                    "sent": "OK, so if X&X, Y&Y, Z are instances of transitive property P, then X, YRS is also this property and this this chain of properties can be say.",
                    "label": 0
                },
                {
                    "sent": "Yeah, indefinite, you know it can be.",
                    "label": 0
                },
                {
                    "sent": "Yeah well with no wind, more or less.",
                    "label": 0
                },
                {
                    "sent": "OK, so for instance here I can have one property which is sub event and I have the domain and range can be music sub event.",
                    "label": 0
                },
                {
                    "sent": "If I declare this is a transitive property then I hang and have an event like for instance in a conference you have you have workshops right?",
                    "label": 0
                },
                {
                    "sent": "So you have a conference which is an event fine and then it has some events and then those subevents have some events.",
                    "label": 0
                },
                {
                    "sent": "So then you can have this engulfment of events within a conference or within a music event OK?",
                    "label": 0
                },
                {
                    "sent": "On the festival, for instance.",
                    "label": 0
                }
            ]
        },
        "clip_58": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And now more.",
                    "label": 0
                },
                {
                    "sent": "Symmetric properties when was the last thing you symmetric property is is a property one if I have if I have a symmetric property P and I have the instance X, Y, then I know also that why comics is also an instance of this property P. That's what symmetric means and you understand now why.",
                    "label": 0
                },
                {
                    "sent": "All of these things Maps into first order logic.",
                    "label": 0
                },
                {
                    "sent": "I mean, these are really things that we have, I mean.",
                    "label": 0
                },
                {
                    "sent": "Theories that we have in first order logic.",
                    "label": 0
                }
            ]
        },
        "clip_59": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so that was our one now about our two I will do.",
                    "label": 0
                },
                {
                    "sent": "I will.",
                    "label": 0
                },
                {
                    "sent": "One was based on techniques that allowed the decidable sound and complete reasoning.",
                    "label": 0
                },
                {
                    "sent": "I will lighten our deal in their languages right?",
                    "label": 0
                },
                {
                    "sent": "I will fool is different kind of thing so as well as I said before, I will.",
                    "label": 0
                },
                {
                    "sent": "One contains 3 spaces of how well and the well the idea was that.",
                    "label": 0
                },
                {
                    "sent": "I need I need the expressiveness and I need also to do certain things like for instance for our one I needed the constraints and I needed the subclass.",
                    "label": 0
                },
                {
                    "sent": "Often I needed limit limited constraints in OWL DL I needed more around full I needed everything right and I didn't care about tractability or about reasoning.",
                    "label": 0
                },
                {
                    "sent": "So then came our do our two came becausw they wanted to extend our one family of languages with syntactic sugar in the sense that we want some to write some things, some more interesting things in in a better way.",
                    "label": 0
                },
                {
                    "sent": "So we added some syntactic sugar, and to add some constants for increased expressivity.",
                    "label": 0
                }
            ]
        },
        "clip_60": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So the first thing is that our I will do.",
                    "label": 0
                },
                {
                    "sent": "I will one allowed somebody to say that these two things are disjoint.",
                    "label": 0
                },
                {
                    "sent": "These two classes, or these two properties are disjoint.",
                    "label": 0
                },
                {
                    "sent": "I will do says you can talk about sense of disjoint classes where each one is pairwise disjoint.",
                    "label": 0
                },
                {
                    "sent": "So they introduce me all disjoint classes.",
                    "label": 0
                },
                {
                    "sent": "Um?",
                    "label": 0
                },
                {
                    "sent": "Term OK, so in the same for our disjoint properties, right?",
                    "label": 0
                },
                {
                    "sent": "So you have here.",
                    "label": 0
                },
                {
                    "sent": "I will only join classes these three classes for five 500 classes are already showing between them, so you just write and all this join class and you are done.",
                    "label": 0
                },
                {
                    "sent": "So similar for always showing proper.",
                    "label": 0
                }
            ]
        },
        "clip_61": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Now, if you want to reflexive property and then if then you can just write P1, RDF, type our reflexive property or more you know.",
                    "label": 0
                },
                {
                    "sent": "Easy or easier.",
                    "label": 0
                },
                {
                    "sent": "Our reflexive property example.",
                    "label": 0
                },
                {
                    "sent": "Same age is right.",
                    "label": 0
                },
                {
                    "sent": "So so.",
                    "label": 0
                },
                {
                    "sent": "So for instance, if I have for instance X and the reflexive property P, then X comics is an instance of this reflexive property and also irreflexive property.",
                    "label": 0
                },
                {
                    "sent": "I know I need 10 minutes.",
                    "label": 0
                },
                {
                    "sent": "Yeah, thanks.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "And I have also a reflexive property in the sense for instance mix and Eric Flexive property P. Then it's comics cannot be an instance of this reflexive property, OK?",
                    "label": 0
                }
            ]
        },
        "clip_62": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, then I have a symmetric property.",
                    "label": 0
                },
                {
                    "sent": "If I have you remember I had symmetric property now have a symmetric property of X, Y is an instance of Peden why comics cannot be an instance of P and I also have property disjoint with.",
                    "label": 0
                },
                {
                    "sent": "Why didn't have disjointness of properties before I have them now?",
                    "label": 0
                },
                {
                    "sent": "So if I have a property X, Y if I have a pair X, Y which is an instance of property P, then I cannot have why comics and this?",
                    "label": 0
                },
                {
                    "sent": "Nice also property too if those two problems are disjoint.",
                    "label": 0
                }
            ]
        },
        "clip_63": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "No, another thing that was in our tool that is in our two is the thing has self that defines a class of individuals that are related to themselves through a specific property.",
                    "label": 0
                },
                {
                    "sent": "So for instance I can have here something that says that.",
                    "label": 0
                },
                {
                    "sent": "Well, it's not the musicians committed suicide, for instance, then I have an equivalent Class 2 to somebody who killed themselves, right?",
                    "label": 0
                },
                {
                    "sent": "So it's on property.",
                    "label": 0
                },
                {
                    "sent": "The restrictions on properly kill herself.",
                    "label": 0
                },
                {
                    "sent": "Yes, he killed himself, so it's this is the that has self restriction.",
                    "label": 0
                }
            ]
        },
        "clip_64": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Now the interesting thing about our do is that our one let us specify the local range of properties.",
                    "label": 0
                },
                {
                    "sent": "Over the local range of a property or the number of values taken by this property, but not both, are well.",
                    "label": 0
                },
                {
                    "sent": "On the other hand, allows us to specify both.",
                    "label": 0
                },
                {
                    "sent": "That means that, for instance, full sized orchestra has at least 17 at most 100 members.",
                    "label": 0
                },
                {
                    "sent": "OK, and I I say here that I have you forget about the blue thing I had written before that has members between 70 and 100, and I can also say that its own class person that I can say here that all the Members.",
                    "label": 0
                },
                {
                    "sent": "Of this, the members of the August there are people.",
                    "label": 0
                },
                {
                    "sent": "OK, yeah?",
                    "label": 0
                },
                {
                    "sent": "Yes, yeah exactly yeah yeah.",
                    "label": 0
                },
                {
                    "sent": "Yeah, here you can just say both at the same time.",
                    "label": 0
                },
                {
                    "sent": "So this is the syntactic sugar that allows you to do something.",
                    "label": 0
                },
                {
                    "sent": "Some things much more easily.",
                    "label": 0
                }
            ]
        },
        "clip_65": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so now the the other interesting thing that, well, interesting.",
                    "label": 0
                },
                {
                    "sent": "I find I find nice.",
                    "label": 0
                },
                {
                    "sent": "Actually I I will do allows you to define property chain axioms you remember in our one I had trans activity.",
                    "label": 0
                },
                {
                    "sent": "Now will do I have property chain in the sense I can define?",
                    "label": 0
                },
                {
                    "sent": "And say I want to go from from here I want to go to where I want to go to New York.",
                    "label": 0
                },
                {
                    "sent": "OK, from here I can take the boat to Athens and I can take the bus if I want to describe my whole trip I can take the bus from the port to the airport and I will take a train from here from from Athens to London and from London or Southampton and will take the boat that goes to New York right?",
                    "label": 0
                },
                {
                    "sent": "So I have.",
                    "label": 0
                },
                {
                    "sent": "So this is a chain that I'm describing.",
                    "label": 0
                },
                {
                    "sent": "So actually you can define such chains in in our.",
                    "label": 0
                },
                {
                    "sent": "OK, so.",
                    "label": 0
                },
                {
                    "sent": "It says that if I want so allow one to infer the existence of a property from a chain of property.",
                    "label": 0
                },
                {
                    "sent": "So if I define this chain of properties, then at the end, if I define this chain of properties of my trip, and I say that this is a property chain at the end, somebody is going to say that Eirini actually traveled from here to New York, OK?",
                    "label": 0
                },
                {
                    "sent": "OK, so for instance this thing is.",
                    "label": 0
                },
                {
                    "sent": "If I want to define this, I'm well formally somehow effects, Why is an instance of property we want and why, said is any sense of property 2 then X, Y is an instance of property P3.",
                    "label": 0
                },
                {
                    "sent": "It can be a different property up.",
                    "label": 0
                },
                {
                    "sent": "No, transitive it is when everything is P1.",
                    "label": 0
                },
                {
                    "sent": "If P1 and P1, then P1.",
                    "label": 0
                },
                {
                    "sent": "This is the trans activity here.",
                    "label": 0
                },
                {
                    "sent": "Transitive, it means that it is transitive in the sense that I travel from here to Iraq, Leon, and then I travel from here to Athens and then I travel from here to someplace I don't.",
                    "label": 0
                },
                {
                    "sent": "It's not.",
                    "label": 0
                },
                {
                    "sent": "I take the bus from here to actually, and I think the plane from iraklion to Athens.",
                    "label": 0
                },
                {
                    "sent": "I think the train from Athens to London and take the bus from London, London, Southampton.",
                    "label": 0
                },
                {
                    "sent": "Yeah, this is transitivity, but.",
                    "label": 0
                },
                {
                    "sent": "P2P2 is a different than P1P2 is different than pay one intransitivity P1 and P2 are exactly the same.",
                    "label": 0
                },
                {
                    "sent": "OK, so this is the difference, OK, OK?",
                    "label": 0
                },
                {
                    "sent": "So yeah, so here you say you see this is for instance the influenced by and you can say that this is a transitivity, right?",
                    "label": 0
                },
                {
                    "sent": "You can define some sort of a trans activity, but beware, because transitivity means that in some sense you have an indefinite size of the path that you want to define, right?",
                    "label": 0
                },
                {
                    "sent": "Influence, influence, influence.",
                    "label": 0
                },
                {
                    "sent": "Here you can just stop at one side at one point if there is no influence, there is no influence after that.",
                    "label": 0
                },
                {
                    "sent": "Here I have a different property chain.",
                    "label": 0
                },
                {
                    "sent": "Axiom has enemy where I can say that this is.",
                    "label": 0
                },
                {
                    "sent": "It starts from X, his enemy, why and why his friend Zed then I know that Huawei has enemies Ed right?",
                    "label": 0
                },
                {
                    "sent": "This is the the path that I want to help.",
                    "label": 0
                }
            ]
        },
        "clip_66": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "No.",
                    "label": 0
                },
                {
                    "sent": "Arbitrary property chain axioms can lead to under the undecidability.",
                    "label": 1
                },
                {
                    "sent": "This is the night, well, nice.",
                    "label": 0
                },
                {
                    "sent": "The freaky thing about I I will do the restrictions that I will do imposes in order not to have undecidability, is that the set of property chain action should be regular and one what do they mean by regularity?",
                    "label": 0
                },
                {
                    "sent": "It means that there must be strict linear order on the properties and not a strictly non order over properties.",
                    "label": 1
                },
                {
                    "sent": "That means that every property chain Axiom should have one of the following forms, right?",
                    "label": 0
                },
                {
                    "sent": "So if I have?",
                    "label": 0
                },
                {
                    "sent": "RX Y&R?",
                    "label": 0
                },
                {
                    "sent": "Then why, then, are X, said if R Y1Y2 then RYYY one YN this form where I play with S is and then I play with R. Here this form when, well, it's exactly the same.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "Yeah, it's exactly the same, and here I blame with asses and then I'll play with her right?",
                    "label": 0
                },
                {
                    "sent": "So if I.",
                    "label": 0
                }
            ]
        },
        "clip_67": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So if I want to have those, So what about those examples?",
                    "label": 0
                },
                {
                    "sent": "Can you tell me what is the is?",
                    "label": 0
                },
                {
                    "sent": "So the first example.",
                    "label": 0
                },
                {
                    "sent": "Here in my first example, do I have some sort of a regular property chain axiom or not?",
                    "label": 0
                },
                {
                    "sent": "Sorry.",
                    "label": 0
                },
                {
                    "sent": "What?",
                    "label": 0
                },
                {
                    "sent": "No, I mean like if I have the three, the three ones, the three together.",
                    "label": 0
                },
                {
                    "sent": "This is an example one I have the three together.",
                    "label": 0
                },
                {
                    "sent": "Actually yes, because I have an order.",
                    "label": 0
                },
                {
                    "sent": "I have this order between Rs.",
                    "label": 0
                },
                {
                    "sent": "Is a logical, proceeds are persisting OK.",
                    "label": 0
                },
                {
                    "sent": "This is a logical order, but I am so this is a this is a good.",
                    "label": 0
                },
                {
                    "sent": "This is this is a regular chain axiom.",
                    "label": 0
                },
                {
                    "sent": "Now for the second example, do I have something similar?",
                    "label": 0
                },
                {
                    "sent": "Actually, there is no.",
                    "label": 0
                },
                {
                    "sent": "There is no order.",
                    "label": 0
                },
                {
                    "sent": "That means from the three on the from the phone on the five from the.",
                    "label": 0
                },
                {
                    "sent": "OK, sorry.",
                    "label": 0
                },
                {
                    "sent": "This does not comply to a form to one of the four forms above and the last one.",
                    "label": 0
                },
                {
                    "sent": "Actually, there's no regular order for this one, OK?",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_68": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So, um.",
                    "label": 0
                },
                {
                    "sent": "So now when I combine property chain axioms and cardinality constraints, this might lead to undecidability.",
                    "label": 0
                },
                {
                    "sent": "I need 5 more minutes and I'm well done.",
                    "label": 0
                },
                {
                    "sent": "Seriously, so the restriction is that I can use only simple properties.",
                    "label": 0
                },
                {
                    "sent": "In cardinality expression, nodes that cannot be directly or indirectly related to property chain axioms, this is my this is my thing so.",
                    "label": 0
                }
            ]
        },
        "clip_69": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "For instance, if I have any property chain axiom.",
                    "label": 0
                },
                {
                    "sent": "Which is S1 and then this one.",
                    "label": 0
                },
                {
                    "sent": "Right?",
                    "label": 0
                },
                {
                    "sent": "His enemy, his enemy, his friend, then his enemy, then our is not a simple property, OK?",
                    "label": 0
                },
                {
                    "sent": "For any sub property chain Axiom, R is not a simple property and.",
                    "label": 0
                },
                {
                    "sent": "Other than that, everything else is a simple property, so actually for this example, if I have all these things, what can you tell me about those most things?",
                    "label": 0
                },
                {
                    "sent": "This is a Q.",
                    "label": 0
                },
                {
                    "sent": "Are which are the simple ones and we download the simple ones.",
                    "label": 0
                },
                {
                    "sent": "For sure are is not simple, right are not simple, because I see it here right are.",
                    "label": 0
                },
                {
                    "sent": "Now.",
                    "label": 0
                },
                {
                    "sent": "Is it is too simple for instance?",
                    "label": 0
                },
                {
                    "sent": "Is as simple, for instance.",
                    "label": 0
                },
                {
                    "sent": "Yes.",
                    "label": 0
                },
                {
                    "sent": "It's not simply need to suck your pets then that means there is also.",
                    "label": 0
                },
                {
                    "sent": "If R is not simple, and as is a property of.",
                    "label": 0
                },
                {
                    "sent": "So is this a property office?",
                    "label": 0
                },
                {
                    "sent": "Then S should not be simple.",
                    "label": 0
                },
                {
                    "sent": "No.",
                    "label": 0
                },
                {
                    "sent": "No.",
                    "label": 0
                },
                {
                    "sent": "Then Q, PR simple right?",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "Yeah, but this is a property of us know, but be careful here.",
                    "label": 0
                },
                {
                    "sent": "I have S here and then I have R&Q.",
                    "label": 0
                },
                {
                    "sent": "And here.",
                    "label": 0
                },
                {
                    "sent": "And then.",
                    "label": 0
                },
                {
                    "sent": "OK QRS&R, while Q is a property wells.",
                    "label": 0
                },
                {
                    "sent": "Why should it be?",
                    "label": 0
                },
                {
                    "sent": "Why should it be affected by this?",
                    "label": 0
                },
                {
                    "sent": "Why shouldn't be affected by this?",
                    "label": 0
                },
                {
                    "sent": "Yes, he said some property.",
                    "label": 0
                },
                {
                    "sent": "OK. Yeah.",
                    "label": 0
                },
                {
                    "sent": "Existen applied.",
                    "label": 0
                },
                {
                    "sent": "It doesn't mean that was the fun affect.",
                    "label": 0
                },
                {
                    "sent": "So how to understand like how to express this here so that it shows the direction like like like we say our sorry, these are your facts right?",
                    "label": 0
                },
                {
                    "sent": "This is the fact this is first of all, let's say this this is a property chain axiom, then Q&P then R right?",
                    "label": 0
                },
                {
                    "sent": "So this is a property chain axiom.",
                    "label": 0
                },
                {
                    "sent": "From here I know that R is not simple.",
                    "label": 0
                },
                {
                    "sent": "Right?",
                    "label": 0
                },
                {
                    "sent": "I'm done.",
                    "label": 0
                },
                {
                    "sent": "No, let's say here are NP, then are OK. Then I need a B.",
                    "label": 0
                },
                {
                    "sent": "Then I need the pieces of property of are OK.",
                    "label": 0
                },
                {
                    "sent": "So what does it say?",
                    "label": 0
                },
                {
                    "sent": "That piece is a property of our.",
                    "label": 0
                },
                {
                    "sent": "If it's, if if B is a property of our, it just says it says nothing to me, right?",
                    "label": 0
                },
                {
                    "sent": "It's it's just the same property, right?",
                    "label": 0
                },
                {
                    "sent": "No, it says it says that it might be simple, I just, you know, I don't know.",
                    "label": 0
                },
                {
                    "sent": "I don't know well.",
                    "label": 0
                },
                {
                    "sent": "Here B and sorry P&Q are actually the simple ones.",
                    "label": 0
                },
                {
                    "sent": "The non simple ones are RN S. OK. Yeah, I don't know if I've been on simple ones.",
                    "label": 0
                },
                {
                    "sent": "OK. No.",
                    "label": 0
                },
                {
                    "sent": "OK. No.",
                    "label": 0
                }
            ]
        },
        "clip_70": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Reasoning because the title was our reasoning and I'm done for the moment, yeah, so our reasoning is.",
                    "label": 0
                },
                {
                    "sent": "Zoning makes.",
                    "label": 0
                },
                {
                    "sent": "Takes into account information that is expressed in the schema level and the instance level and brings brings out new information that we have.",
                    "label": 0
                },
                {
                    "sent": "OK, this is the reasoning and I have two kinds of reasoning.",
                    "label": 0
                },
                {
                    "sent": "I have subsumption.",
                    "label": 0
                }
            ]
        },
        "clip_71": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Reasoning and I have some fire ability reasoning.",
                    "label": 0
                },
                {
                    "sent": "Subsumption reasoning means that if I if I have, let's say a concept, if I have a class that is subsumed its up subconcept or subclass of another class.",
                    "label": 0
                },
                {
                    "sent": "But I know that according to the subsumption reasoning, I have missed doses of one class which should should be instances of a different class.",
                    "label": 0
                },
                {
                    "sent": "OK, this is what I have.",
                    "label": 0
                },
                {
                    "sent": "Now The thing is that I can also have satisfiability reasoning in the sense that.",
                    "label": 0
                },
                {
                    "sent": "You can, we can tell or discuss whether a concept is satisfy aghbal or not, when that means when there is no model in which the interpretation of the class is nonempty, like this, is the satisfiability reasoning that we can have, so it allows us to check whether the model is consistent or not.",
                    "label": 0
                },
                {
                    "sent": "So this is.",
                    "label": 0
                },
                {
                    "sent": "So actually.",
                    "label": 0
                }
            ]
        },
        "clip_72": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Reasoning can be used as a support tool for what for what we what we are doing.",
                    "label": 0
                },
                {
                    "sent": "For instance to check the logical consistency of classes and to compute implicit class hierarchies.",
                    "label": 0
                },
                {
                    "sent": "And maybe it is less important small ontologies, right?",
                    "label": 0
                },
                {
                    "sent": "It can be useful for design and maintenance of the ontologies.",
                    "label": 0
                },
                {
                    "sent": "Or it can be much more important when we have large ontologies and multiple authors.",
                    "label": 0
                },
                {
                    "sent": "So it can also be very useful and valuable when we have integration of ontologies in the sense that.",
                    "label": 0
                },
                {
                    "sent": "We have definitions, axioms to establish Inter ontology relationships OK and and also when we want to check for for consistency and unexpected implied relationships between ontologies.",
                    "label": 0
                },
                {
                    "sent": "In general, reasoning is very one very powerful tool for us for everybody when we do ontology modeling ontology design and actually when you want to.",
                    "label": 0
                },
                {
                    "sent": "Yeah, get some new information from the existing from the facts that you have and I don't know what else that's it.",
                    "label": 0
                },
                {
                    "sent": "I'm sorry.",
                    "label": 0
                },
                {
                    "sent": "For the old two you have.",
                    "label": 0
                },
                {
                    "sent": "Yeah, I think that the best that I have used up until now and well the best from the perspective of databases.",
                    "label": 0
                },
                {
                    "sent": "Well, you know engines not so much reasonable Purcell.",
                    "label": 0
                },
                {
                    "sent": "It is out of context.",
                    "label": 0
                },
                {
                    "sent": "It has all the profiles of our two hour lorelle.",
                    "label": 0
                },
                {
                    "sent": "For instance it has optimized our Laurel and it's free so you can download it and get it and.",
                    "label": 0
                },
                {
                    "sent": "Well, if you if you download our LTM.",
                    "label": 0
                },
                {
                    "sent": "I think sorry.",
                    "label": 0
                },
                {
                    "sent": "Grassley, being yes, good after being yes if you go if you search for auto text outline or graph DB then you are going to find out you're going to.",
                    "label": 0
                },
                {
                    "sent": "When you create a new database, a new instance set of instances, there is going to ask you what kind of reason or do you want to use because you can very well not compute, not materialize everything, right?",
                    "label": 0
                },
                {
                    "sent": "Not materialize, only instances all the same month etc etc.",
                    "label": 0
                },
                {
                    "sent": "So there you can also choose our two RL, which is one of the profiles of our two that I I didn't have the time to cover today.",
                    "label": 0
                },
                {
                    "sent": "Which is actually quite quite good in the sense that it gives you, and it provides the semantics in the sense of rules or the semantics of our innocence of rules.",
                    "label": 0
                },
                {
                    "sent": "So it's much more understandable than just the you know, the straight 1st order logic semantics that we have.",
                    "label": 0
                },
                {
                    "sent": "That's it.",
                    "label": 0
                },
                {
                    "sent": "OK. Good.",
                    "label": 0
                }
            ]
        }
    }
}