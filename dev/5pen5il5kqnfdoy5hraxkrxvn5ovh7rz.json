{
    "id": "5pen5il5kqnfdoy5hraxkrxvn5ovh7rz",
    "title": "Poster Spotlights: Hierarchical Skill Learning for High-Level Planning",
    "info": {
        "author": [
            "James MacGlashan, Department of Computer Science, Brown University"
        ],
        "published": "Aug. 26, 2009",
        "recorded": "June 2009",
        "category": [
            "Top->Computer Science->Machine Learning"
        ]
    },
    "url": "http://videolectures.net/icml09_macglashan_hslhlp/",
    "segmentation": [
        [
            "OK, yeah, so this is called hirco skill learning for high level planning.",
            "I'm doing this also with summary data."
        ],
        [
            "Then Ann, this is preliminary work right now, but the idea is to mix reinforcement, learning and planning so they compliment each other.",
            "So actually the opening talk today served as a really good introduction for these kinds of ideas we've done is we've defined in architecture that starts from low level, primitive actions for an agent Anna model of the world, so they can do planning on that and then overtime and experience they start developing these skills or these abstract actions that are hierarchal, an general generalized.",
            "So the nice thing about this?",
            "Is you can then use these skills in different problems that aren't necessarily completely similar, but can have some overlap on what needs to what needs to happen.",
            "And also you don't have this single fixed structure because you're using planning in conjunction with this and the other aspect of it is that by planning you can also see your learning process from planning results so that you end up learning quicker."
        ],
        [
            "So this is just kind of an overview of the architecture opposing right now.",
            "Again, still allow the design details have to be implemented, but essentially the idea for how this would work is you have your age and it starts with a primitive actions and they would get some more simplistic goals in the beginning and they start solving the cream plans to solve those goals and it's saving those into it's memory.",
            "And when there's a number of plans that have the same type of goal, it decides, let's make a skill for this.",
            "That that solves this kind of more reactive ways.",
            "You have to plan it anymore so it turns that into a reinforcement learning problem and parameterising feature vector based on the variation.",
            "Slight variations in the goal types or in the goal for the same type.",
            "Use function approximation on that feature vector to learn how to complete it.",
            "And once you have that skill learned, it goes back into the action set an the planner can now use that to solve more complex problems, and since this is kind of this constant loop you get this feedback and you start getting these skills to develop with higher level these hierarchies.",
            "There all generalized, so if you have more questions I can give more detail the poster session."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, yeah, so this is called hirco skill learning for high level planning.",
                    "label": 0
                },
                {
                    "sent": "I'm doing this also with summary data.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Then Ann, this is preliminary work right now, but the idea is to mix reinforcement, learning and planning so they compliment each other.",
                    "label": 1
                },
                {
                    "sent": "So actually the opening talk today served as a really good introduction for these kinds of ideas we've done is we've defined in architecture that starts from low level, primitive actions for an agent Anna model of the world, so they can do planning on that and then overtime and experience they start developing these skills or these abstract actions that are hierarchal, an general generalized.",
                    "label": 0
                },
                {
                    "sent": "So the nice thing about this?",
                    "label": 0
                },
                {
                    "sent": "Is you can then use these skills in different problems that aren't necessarily completely similar, but can have some overlap on what needs to what needs to happen.",
                    "label": 0
                },
                {
                    "sent": "And also you don't have this single fixed structure because you're using planning in conjunction with this and the other aspect of it is that by planning you can also see your learning process from planning results so that you end up learning quicker.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So this is just kind of an overview of the architecture opposing right now.",
                    "label": 0
                },
                {
                    "sent": "Again, still allow the design details have to be implemented, but essentially the idea for how this would work is you have your age and it starts with a primitive actions and they would get some more simplistic goals in the beginning and they start solving the cream plans to solve those goals and it's saving those into it's memory.",
                    "label": 0
                },
                {
                    "sent": "And when there's a number of plans that have the same type of goal, it decides, let's make a skill for this.",
                    "label": 0
                },
                {
                    "sent": "That that solves this kind of more reactive ways.",
                    "label": 0
                },
                {
                    "sent": "You have to plan it anymore so it turns that into a reinforcement learning problem and parameterising feature vector based on the variation.",
                    "label": 0
                },
                {
                    "sent": "Slight variations in the goal types or in the goal for the same type.",
                    "label": 0
                },
                {
                    "sent": "Use function approximation on that feature vector to learn how to complete it.",
                    "label": 0
                },
                {
                    "sent": "And once you have that skill learned, it goes back into the action set an the planner can now use that to solve more complex problems, and since this is kind of this constant loop you get this feedback and you start getting these skills to develop with higher level these hierarchies.",
                    "label": 0
                },
                {
                    "sent": "There all generalized, so if you have more questions I can give more detail the poster session.",
                    "label": 0
                }
            ]
        }
    }
}