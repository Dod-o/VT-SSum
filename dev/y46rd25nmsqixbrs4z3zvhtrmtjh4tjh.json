{
    "id": "y46rd25nmsqixbrs4z3zvhtrmtjh4tjh",
    "title": "Fast Modularisation and Atomic Decomposition of Ontologies using Axiom Dependency Hypergraphs",
    "info": {
        "author": [
            "Francisco Mart\u00edn-Recuerda, Universidad Polit\u00e9cnica de Madrid"
        ],
        "published": "Dec. 19, 2014",
        "recorded": "October 2014",
        "category": [
            "Top->Computer Science->Semantic Web"
        ]
    },
    "url": "http://videolectures.net/iswc2014_martin_recuerda_hypergraphs/",
    "segmentation": [
        [
            "So in this talk I will introduce the notion of function dependency hypergraph.",
            "I will try to explain how this notion can help us to compute faster modular modules and the atomic decomposition of of ontologies.",
            "So I."
        ],
        [
            "Action Dependency hypergraph is based on our director, hypergraph representation of the modular structure of an ontology.",
            "Where the notes of of this hyper graph represent the actions of the ontology.",
            "And the hyperedges tried to mimic how actions are included in a module by the modularization algorithm implemented in the OWL API.",
            "So because we have a graph representation, we can find relation of graph terms or graph notions who with modules on an Atom.",
            "So basically a module correspond to connected component in this representation.",
            "I'm atoms correspond to a strongly connected components in this representation.",
            "To test this approach, we have implemented a prototype in Java that we call it highs.",
            "Ann, this prototype for computing modules and not only the composition of ontologies and we have evaluated this prototype against state of the art systems with, I think very, very interesting results that I will show you later."
        ],
        [
            "So I would guess, provide some preliminaries and Rotary notions I might you might find helpful, helpful, so we know that module is subset of ontology that captures the knowledge that ontology contains about a certain signature.",
            "So a set of symbol of this ontology."
        ],
        [
            "So have been investigated how to compute this module and the results show that computing minimal module for a signature is harder or even impossible for expressive description logics.",
            "So they have been proposed alternative for computing approximation of of modules based on locality notions."
        ],
        [
            "One of the most use notion for computing locality module is intact if localities.",
            "So the idea is basically is to check is is is an action should be included in a module or not.",
            "You check is the is the action is local and you and you do that by checking is the is for a certain grammar and for for the input signature the the grammar can produce this this action so it cannot.",
            "It doesn't happen.",
            "Then you add this action to the MoD."
        ],
        [
            "Jewel.",
            "Come."
        ],
        [
            "On notions of syntactic locality and bottle and top locality."
        ],
        [
            "OK, so for simplified representation, I will refer in this presentation only to the notion of bottom locality.",
            "OK, so we have we have interviews.",
            "I've definition that is minimal.",
            "Nonlocality signature of an axiom that is a subset of the signature of an action.",
            "I mean, it must have set of the signature connection that make this this action nonlocal OK?",
            "Is this these actions are normalized based on this reference I give you here?",
            "Then you should not have more in the case of bottle locality more than than one of these minimal nonlocality signatures."
        ],
        [
            "So now we will introduce a bit about what is atomic decomposition.",
            "So an Atom, a submaximal set of actions from an ontology that always called Karina module."
        ],
        [
            "An Atom is dependent of other Atom.",
            "If for every ontology is there is this pattern is in the module implies that the other Atom will be in the module."
        ],
        [
            "So they told me the composition of an ontology is a direct graph such that the the note the atoms of the ontology and they just represent the dependencies between these atoms.",
            "So it's a polynomial representation of the structure of the modular structure of the ontology."
        ],
        [
            "For introducing the notion of action dependency hypergraph, I will use an example.",
            "So we have this ontology with these five concert inclusion actions.",
            "So simple, right?",
            "So they know.",
            "So before that you will see that the minimum nonlocality signature that means that the minimal signature unit in order to make an action about the local.",
            "So in the case of A1.",
            "Will be."
        ],
        [
            "Oops."
        ],
        [
            "In the case of A1, will be the symbol A.",
            "An means that that is we have a signature and we want to compute the module and the signature have the symbol A.",
            "This is a.",
            "Note this action A1 will be in the module.",
            "So notes represent actions in the ontology.",
            "For.",
            "In this hypergraph representation and hyper edges represent dependencies locality dependency between between axioms.",
            "So what that means.",
            "So for instance, you look at the edge E1.",
            "What this means is that if action A1 action Alpha trees in the module means.",
            "That action A2 will be also in the module.",
            "This is basically what what we mean with this dependencies."
        ],
        [
            "So if we continue using this way of computing the dependencies, you will end into this hypergraph which represent all the dependencies between between axioms.",
            "So, for instance, if you look at the edge E. 20A for the minimal Nonlocality signature will be the symbol Y, and the only action that provides a signature for why it's actually A1.",
            "This is why you have this edge from A1124."
        ],
        [
            "So given this representation, we can derive the following proposition.",
            "So the idea is that you want to compute the module for a given signature, and the signature is this signature a subset of a subset of action of an ontology subset of prime.",
            "The the this is equivalent to our connected components or a set of actions as a set of nodes in the hyper graph that are reachable from the set of nodes that represent these actions in our prime."
        ],
        [
            "Similarly, you can find the following connection from atop atoms to the to the graph notion.",
            "So we can just find an equivalence between atoms and strongly connected components."
        ],
        [
            "So given the example I showed you before, where you have this action dependency hypergraph.",
            "I will show you now how we can compute in this representation locality based modules on the atomic composition.",
            "I will start with the atomic decomposition."
        ],
        [
            "So the first thing we do is that we only consider the graph fragment of the action dependency hyper graph.",
            "So that means we ignore any complex hyper edge and we only look at the dependencies that are simple edges.",
            "We do that because actually computing a strongly connected component in in a graph can be done in linear time, so it's done very fast."
        ],
        [
            "So if we accept it looking for a strongly connected components in this example you will see that we have this strongly connected component, so A1 can reach Alpha for an A5A.",
            "Four can reach A5 and A1 and Alpha Phi can reach A1 and AA fourth, which means that the three nodes are mutually reachable and they form a strongly going to component."
        ],
        [
            "So the next step we do after we compute all the story connected component.",
            "If we come, we collapse this strongly connected component into single nodes.",
            "So what is the impact of that?",
            "Basically what we're doing is just reducing the size of the graph OK."
        ],
        [
            "I'm based on that week.",
            "Compute we recompute dependencies to to create what we call it.",
            "The partially condensed action dependency hypergraph.",
            "So based on this graph representation that we have condensed, we recompute the action dependency hypergraph with the advantage that now the action Dependency hyper hyper graph is much smaller.",
            "OK, so now we compute in this hypergraph distally connected component, so from A2 I can reach A3 from A3 I can reach strongly.",
            "Make the component one strongly connected component want together with A3 allow me to reach A2.",
            "Notice that for instance, for strongly connected component one, I cannot reach anything because to reach A2 I have to reach first after three.",
            "This is why A2 can reach A3 or 4.",
            "Three countries such as A2 and their former strongly connected component."
        ],
        [
            "So similarly, we again collapse.",
            "And we of course, yeah, the computer.",
            "Again the hyper edges.",
            "You can see actually that there is equivalence between.",
            "So you compute the atomic decomposition of the example that you will get two atoms that are equivalent to our strongly connected components and you will get a dependency between these atoms that are equivalent to the dependency we found doing this computation."
        ],
        [
            "Similarly, you have two as well.",
            "Recompute the minimal nonlocality signature on the signature.",
            "So, for instance, in the case of strongly connected component, want to have this reaction A1A for an A5 you will just only the minimum locality signature for instantly going to component would be this three minimal nonlocality signature that originally you have in your interactions and the signature will be the union of all the symbols of the axioms."
        ],
        [
            "OK so we have implemented as I mentioned at the beginning Java prototype that we call a heist this heist.",
            "Prototypes support ontologies expressing L plus plus plus imports rose and functional object properties.",
            "We only support at the moment, but a locality and we compare our system with fat plus plus Owl API tools for atomic composition that can be implemented in Java and they all API that results are library implemented in Java for.",
            "First, our implementation against.",
            "Against this system, we use nine ontologies.",
            "Seven large biomedical ontology select from Bio Portal, and we also include it as normal City, an full gallon.",
            "So."
        ],
        [
            "This is the ontologies we have.",
            "You can see there are ontologies like for instance CBI with nearly 850,000 axiom.",
            "So that means we're not working with ontologies.",
            "Can you maybe notice that they are organized into groups?",
            "So the first group was six ontologies are have the peculiarity that you can the action dependency hyper graph can be represented as a direct axiom, a direct graph, so you don't need really any complex hyper edge.",
            "What is the big advantage of this?",
            "Which actually we can use a linear time algorithm for computing all strongly connected component in just one shot?",
            "And then we have a second group of ontologies where actually you really need a complex hyper edges so you have to use you have to compute the strongly connected component in the hyper in a hyper graph."
        ],
        [
            "So this is the result evaluation result for computing the atomic decomposition of the ontologies.",
            "So if you look in the first group where we actually the ontology, the knowledge can be represented a direct graph.",
            "The result between the difference of time between fat plus plus how API tools and hi, this is quite significant, so if you look for instance at year cassatie, you need nearly nine hours to compute the internal automated composition ontology.",
            "In fact, plus plus.",
            "We couldn't manage to compute the atomic composition without API tools in less than 24 hours and we did it in 24 seconds basically, which means that in the case of that plus plus more than 1300 times faster, if we look in the second group where actually we need a hypergraph, we are still faster, but not you don't have this big different like in the first group.",
            "So for instance, for Snowmass City Fat Plus plus need to.",
            "45 hours old API tool required nearly 16 hour and we did in less than one hour."
        ],
        [
            "OK, we also compute.",
            "We also evaluate our approach for modulus traction.",
            "So we compute the module of each of these ontologies for 500 symbol randomly selected.",
            "You can see, for instance, we are also much faster than the current implementation sources.",
            "You look for instance at #4 FMA light fat plus plus require 326 milliseconds.",
            "The API bit more than 1000 millisecond and we do it in 3.4 milliseconds.",
            "So that means that we are nearly 100 times faster than than fat plus plus 300 times faster than the OWL API.",
            "And so if we compare in the second group with with for instance with full gallon and five plus plus requires 775 millisecond, the API requires 215 milliseconds and we do it in less than 3 milliseconds.",
            "So this is like.",
            "More than 25 times faster than five plus plus."
        ],
        [
            "So basically what I would like to say is that.",
            "I think that this approach really help us to compute the the automata composition and the modules faster.",
            "I mean, this is just I think that there is room for improvement.",
            "I'm also the results or something nice about this representation is very intuitive to really visualize the dependencies between actions you have, like a different level of granularity you can go from axioms to just strongly connected components if you collapse.",
            "Strongly connected component into single nodes, so this is all.",
            "Thank you very much.",
            "Thanks for the talk about a technical question about the memory that you reserved to the JVM in order to perform the experiments, just to have an idea of the amount of memory.",
            "So basically we use a server of 100 gecs or RAM and basically we didn't have really them make any restriction in terms of memory.",
            "So as much as you can so much you can use so.",
            "But for all the system, so don't remember their assistant.",
            "For Scientology really, really need like more ajx another ones you need like a 20 Jake.",
            "So it depends actually out there but we didn't make the restriction because we were more interested in in in time.",
            "Basically be cause at the moment memory is not really an issue anymore so you know.",
            "But yeah you know the garbage collector complete major role if you yeah but this is the other right so?",
            "Basically this is something that you have 100 gigs of memory.",
            "This should not be actually a big issue, thanks.",
            "Yep.",
            "Matthew, I don't have 100 gigs on my laptop.",
            "Do you have a?",
            "Can you give an intuitive reason as to why the speedup is so dramatic?",
            "Sorry, add the speed.",
            "Can you give an intuitive reason summary as to why these speed so The thing is that you think how the composition is compute.",
            "So first you have to compute the module for the checks for the signature of each axiom.",
            "And then you have to check which of these modules are the same.",
            "So basically the modules that are the same means that the action the action for that for that are related with this module are actually in the Atom, which is actually a quadratic process.",
            "Basically, what is the advantage of our approach that actually computing Australia connected component in the graph element is linear?",
            "So if you only have you only have a graph representation, let it happen.",
            "For instance, in the in the first group.",
            "But actually I don't need any any compass hyperedge.",
            "I do all the computation in linear time and This is why we are so fast.",
            "On the other hand, if you need, we are still faster in the hyperedge size.",
            "So because we do the the collapsing and sometimes the collecting can reduce the original hypergraph to more than 50% of the size, which means that when you have to compute reachability will be like computing the modules you have to deal with less actually nodes with less action that you do it in the in the process of Hughes algorithm that for atomic composition.",
            "This is why you have this impact."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So in this talk I will introduce the notion of function dependency hypergraph.",
                    "label": 0
                },
                {
                    "sent": "I will try to explain how this notion can help us to compute faster modular modules and the atomic decomposition of of ontologies.",
                    "label": 1
                },
                {
                    "sent": "So I.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Action Dependency hypergraph is based on our director, hypergraph representation of the modular structure of an ontology.",
                    "label": 1
                },
                {
                    "sent": "Where the notes of of this hyper graph represent the actions of the ontology.",
                    "label": 1
                },
                {
                    "sent": "And the hyperedges tried to mimic how actions are included in a module by the modularization algorithm implemented in the OWL API.",
                    "label": 1
                },
                {
                    "sent": "So because we have a graph representation, we can find relation of graph terms or graph notions who with modules on an Atom.",
                    "label": 1
                },
                {
                    "sent": "So basically a module correspond to connected component in this representation.",
                    "label": 0
                },
                {
                    "sent": "I'm atoms correspond to a strongly connected components in this representation.",
                    "label": 0
                },
                {
                    "sent": "To test this approach, we have implemented a prototype in Java that we call it highs.",
                    "label": 0
                },
                {
                    "sent": "Ann, this prototype for computing modules and not only the composition of ontologies and we have evaluated this prototype against state of the art systems with, I think very, very interesting results that I will show you later.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So I would guess, provide some preliminaries and Rotary notions I might you might find helpful, helpful, so we know that module is subset of ontology that captures the knowledge that ontology contains about a certain signature.",
                    "label": 0
                },
                {
                    "sent": "So a set of symbol of this ontology.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So have been investigated how to compute this module and the results show that computing minimal module for a signature is harder or even impossible for expressive description logics.",
                    "label": 0
                },
                {
                    "sent": "So they have been proposed alternative for computing approximation of of modules based on locality notions.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "One of the most use notion for computing locality module is intact if localities.",
                    "label": 0
                },
                {
                    "sent": "So the idea is basically is to check is is is an action should be included in a module or not.",
                    "label": 0
                },
                {
                    "sent": "You check is the is the action is local and you and you do that by checking is the is for a certain grammar and for for the input signature the the grammar can produce this this action so it cannot.",
                    "label": 0
                },
                {
                    "sent": "It doesn't happen.",
                    "label": 0
                },
                {
                    "sent": "Then you add this action to the MoD.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Jewel.",
                    "label": 0
                },
                {
                    "sent": "Come.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "On notions of syntactic locality and bottle and top locality.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, so for simplified representation, I will refer in this presentation only to the notion of bottom locality.",
                    "label": 0
                },
                {
                    "sent": "OK, so we have we have interviews.",
                    "label": 0
                },
                {
                    "sent": "I've definition that is minimal.",
                    "label": 1
                },
                {
                    "sent": "Nonlocality signature of an axiom that is a subset of the signature of an action.",
                    "label": 1
                },
                {
                    "sent": "I mean, it must have set of the signature connection that make this this action nonlocal OK?",
                    "label": 0
                },
                {
                    "sent": "Is this these actions are normalized based on this reference I give you here?",
                    "label": 1
                },
                {
                    "sent": "Then you should not have more in the case of bottle locality more than than one of these minimal nonlocality signatures.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So now we will introduce a bit about what is atomic decomposition.",
                    "label": 0
                },
                {
                    "sent": "So an Atom, a submaximal set of actions from an ontology that always called Karina module.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "An Atom is dependent of other Atom.",
                    "label": 0
                },
                {
                    "sent": "If for every ontology is there is this pattern is in the module implies that the other Atom will be in the module.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So they told me the composition of an ontology is a direct graph such that the the note the atoms of the ontology and they just represent the dependencies between these atoms.",
                    "label": 0
                },
                {
                    "sent": "So it's a polynomial representation of the structure of the modular structure of the ontology.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "For introducing the notion of action dependency hypergraph, I will use an example.",
                    "label": 0
                },
                {
                    "sent": "So we have this ontology with these five concert inclusion actions.",
                    "label": 0
                },
                {
                    "sent": "So simple, right?",
                    "label": 0
                },
                {
                    "sent": "So they know.",
                    "label": 0
                },
                {
                    "sent": "So before that you will see that the minimum nonlocality signature that means that the minimal signature unit in order to make an action about the local.",
                    "label": 0
                },
                {
                    "sent": "So in the case of A1.",
                    "label": 0
                },
                {
                    "sent": "Will be.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Oops.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "In the case of A1, will be the symbol A.",
                    "label": 0
                },
                {
                    "sent": "An means that that is we have a signature and we want to compute the module and the signature have the symbol A.",
                    "label": 0
                },
                {
                    "sent": "This is a.",
                    "label": 0
                },
                {
                    "sent": "Note this action A1 will be in the module.",
                    "label": 0
                },
                {
                    "sent": "So notes represent actions in the ontology.",
                    "label": 0
                },
                {
                    "sent": "For.",
                    "label": 0
                },
                {
                    "sent": "In this hypergraph representation and hyper edges represent dependencies locality dependency between between axioms.",
                    "label": 0
                },
                {
                    "sent": "So what that means.",
                    "label": 0
                },
                {
                    "sent": "So for instance, you look at the edge E1.",
                    "label": 0
                },
                {
                    "sent": "What this means is that if action A1 action Alpha trees in the module means.",
                    "label": 0
                },
                {
                    "sent": "That action A2 will be also in the module.",
                    "label": 0
                },
                {
                    "sent": "This is basically what what we mean with this dependencies.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So if we continue using this way of computing the dependencies, you will end into this hypergraph which represent all the dependencies between between axioms.",
                    "label": 0
                },
                {
                    "sent": "So, for instance, if you look at the edge E. 20A for the minimal Nonlocality signature will be the symbol Y, and the only action that provides a signature for why it's actually A1.",
                    "label": 0
                },
                {
                    "sent": "This is why you have this edge from A1124.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So given this representation, we can derive the following proposition.",
                    "label": 0
                },
                {
                    "sent": "So the idea is that you want to compute the module for a given signature, and the signature is this signature a subset of a subset of action of an ontology subset of prime.",
                    "label": 1
                },
                {
                    "sent": "The the this is equivalent to our connected components or a set of actions as a set of nodes in the hyper graph that are reachable from the set of nodes that represent these actions in our prime.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Similarly, you can find the following connection from atop atoms to the to the graph notion.",
                    "label": 0
                },
                {
                    "sent": "So we can just find an equivalence between atoms and strongly connected components.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So given the example I showed you before, where you have this action dependency hypergraph.",
                    "label": 0
                },
                {
                    "sent": "I will show you now how we can compute in this representation locality based modules on the atomic composition.",
                    "label": 0
                },
                {
                    "sent": "I will start with the atomic decomposition.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So the first thing we do is that we only consider the graph fragment of the action dependency hyper graph.",
                    "label": 0
                },
                {
                    "sent": "So that means we ignore any complex hyper edge and we only look at the dependencies that are simple edges.",
                    "label": 0
                },
                {
                    "sent": "We do that because actually computing a strongly connected component in in a graph can be done in linear time, so it's done very fast.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So if we accept it looking for a strongly connected components in this example you will see that we have this strongly connected component, so A1 can reach Alpha for an A5A.",
                    "label": 0
                },
                {
                    "sent": "Four can reach A5 and A1 and Alpha Phi can reach A1 and AA fourth, which means that the three nodes are mutually reachable and they form a strongly going to component.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So the next step we do after we compute all the story connected component.",
                    "label": 0
                },
                {
                    "sent": "If we come, we collapse this strongly connected component into single nodes.",
                    "label": 0
                },
                {
                    "sent": "So what is the impact of that?",
                    "label": 0
                },
                {
                    "sent": "Basically what we're doing is just reducing the size of the graph OK.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I'm based on that week.",
                    "label": 0
                },
                {
                    "sent": "Compute we recompute dependencies to to create what we call it.",
                    "label": 0
                },
                {
                    "sent": "The partially condensed action dependency hypergraph.",
                    "label": 0
                },
                {
                    "sent": "So based on this graph representation that we have condensed, we recompute the action dependency hypergraph with the advantage that now the action Dependency hyper hyper graph is much smaller.",
                    "label": 0
                },
                {
                    "sent": "OK, so now we compute in this hypergraph distally connected component, so from A2 I can reach A3 from A3 I can reach strongly.",
                    "label": 0
                },
                {
                    "sent": "Make the component one strongly connected component want together with A3 allow me to reach A2.",
                    "label": 0
                },
                {
                    "sent": "Notice that for instance, for strongly connected component one, I cannot reach anything because to reach A2 I have to reach first after three.",
                    "label": 0
                },
                {
                    "sent": "This is why A2 can reach A3 or 4.",
                    "label": 0
                },
                {
                    "sent": "Three countries such as A2 and their former strongly connected component.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So similarly, we again collapse.",
                    "label": 0
                },
                {
                    "sent": "And we of course, yeah, the computer.",
                    "label": 0
                },
                {
                    "sent": "Again the hyper edges.",
                    "label": 0
                },
                {
                    "sent": "You can see actually that there is equivalence between.",
                    "label": 0
                },
                {
                    "sent": "So you compute the atomic decomposition of the example that you will get two atoms that are equivalent to our strongly connected components and you will get a dependency between these atoms that are equivalent to the dependency we found doing this computation.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Similarly, you have two as well.",
                    "label": 0
                },
                {
                    "sent": "Recompute the minimal nonlocality signature on the signature.",
                    "label": 0
                },
                {
                    "sent": "So, for instance, in the case of strongly connected component, want to have this reaction A1A for an A5 you will just only the minimum locality signature for instantly going to component would be this three minimal nonlocality signature that originally you have in your interactions and the signature will be the union of all the symbols of the axioms.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK so we have implemented as I mentioned at the beginning Java prototype that we call a heist this heist.",
                    "label": 0
                },
                {
                    "sent": "Prototypes support ontologies expressing L plus plus plus imports rose and functional object properties.",
                    "label": 1
                },
                {
                    "sent": "We only support at the moment, but a locality and we compare our system with fat plus plus Owl API tools for atomic composition that can be implemented in Java and they all API that results are library implemented in Java for.",
                    "label": 0
                },
                {
                    "sent": "First, our implementation against.",
                    "label": 0
                },
                {
                    "sent": "Against this system, we use nine ontologies.",
                    "label": 1
                },
                {
                    "sent": "Seven large biomedical ontology select from Bio Portal, and we also include it as normal City, an full gallon.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This is the ontologies we have.",
                    "label": 0
                },
                {
                    "sent": "You can see there are ontologies like for instance CBI with nearly 850,000 axiom.",
                    "label": 0
                },
                {
                    "sent": "So that means we're not working with ontologies.",
                    "label": 0
                },
                {
                    "sent": "Can you maybe notice that they are organized into groups?",
                    "label": 0
                },
                {
                    "sent": "So the first group was six ontologies are have the peculiarity that you can the action dependency hyper graph can be represented as a direct axiom, a direct graph, so you don't need really any complex hyper edge.",
                    "label": 0
                },
                {
                    "sent": "What is the big advantage of this?",
                    "label": 0
                },
                {
                    "sent": "Which actually we can use a linear time algorithm for computing all strongly connected component in just one shot?",
                    "label": 0
                },
                {
                    "sent": "And then we have a second group of ontologies where actually you really need a complex hyper edges so you have to use you have to compute the strongly connected component in the hyper in a hyper graph.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So this is the result evaluation result for computing the atomic decomposition of the ontologies.",
                    "label": 0
                },
                {
                    "sent": "So if you look in the first group where we actually the ontology, the knowledge can be represented a direct graph.",
                    "label": 0
                },
                {
                    "sent": "The result between the difference of time between fat plus plus how API tools and hi, this is quite significant, so if you look for instance at year cassatie, you need nearly nine hours to compute the internal automated composition ontology.",
                    "label": 0
                },
                {
                    "sent": "In fact, plus plus.",
                    "label": 0
                },
                {
                    "sent": "We couldn't manage to compute the atomic composition without API tools in less than 24 hours and we did it in 24 seconds basically, which means that in the case of that plus plus more than 1300 times faster, if we look in the second group where actually we need a hypergraph, we are still faster, but not you don't have this big different like in the first group.",
                    "label": 0
                },
                {
                    "sent": "So for instance, for Snowmass City Fat Plus plus need to.",
                    "label": 0
                },
                {
                    "sent": "45 hours old API tool required nearly 16 hour and we did in less than one hour.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, we also compute.",
                    "label": 0
                },
                {
                    "sent": "We also evaluate our approach for modulus traction.",
                    "label": 0
                },
                {
                    "sent": "So we compute the module of each of these ontologies for 500 symbol randomly selected.",
                    "label": 0
                },
                {
                    "sent": "You can see, for instance, we are also much faster than the current implementation sources.",
                    "label": 0
                },
                {
                    "sent": "You look for instance at #4 FMA light fat plus plus require 326 milliseconds.",
                    "label": 0
                },
                {
                    "sent": "The API bit more than 1000 millisecond and we do it in 3.4 milliseconds.",
                    "label": 0
                },
                {
                    "sent": "So that means that we are nearly 100 times faster than than fat plus plus 300 times faster than the OWL API.",
                    "label": 0
                },
                {
                    "sent": "And so if we compare in the second group with with for instance with full gallon and five plus plus requires 775 millisecond, the API requires 215 milliseconds and we do it in less than 3 milliseconds.",
                    "label": 0
                },
                {
                    "sent": "So this is like.",
                    "label": 0
                },
                {
                    "sent": "More than 25 times faster than five plus plus.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So basically what I would like to say is that.",
                    "label": 0
                },
                {
                    "sent": "I think that this approach really help us to compute the the automata composition and the modules faster.",
                    "label": 0
                },
                {
                    "sent": "I mean, this is just I think that there is room for improvement.",
                    "label": 0
                },
                {
                    "sent": "I'm also the results or something nice about this representation is very intuitive to really visualize the dependencies between actions you have, like a different level of granularity you can go from axioms to just strongly connected components if you collapse.",
                    "label": 0
                },
                {
                    "sent": "Strongly connected component into single nodes, so this is all.",
                    "label": 0
                },
                {
                    "sent": "Thank you very much.",
                    "label": 0
                },
                {
                    "sent": "Thanks for the talk about a technical question about the memory that you reserved to the JVM in order to perform the experiments, just to have an idea of the amount of memory.",
                    "label": 0
                },
                {
                    "sent": "So basically we use a server of 100 gecs or RAM and basically we didn't have really them make any restriction in terms of memory.",
                    "label": 0
                },
                {
                    "sent": "So as much as you can so much you can use so.",
                    "label": 0
                },
                {
                    "sent": "But for all the system, so don't remember their assistant.",
                    "label": 0
                },
                {
                    "sent": "For Scientology really, really need like more ajx another ones you need like a 20 Jake.",
                    "label": 0
                },
                {
                    "sent": "So it depends actually out there but we didn't make the restriction because we were more interested in in in time.",
                    "label": 0
                },
                {
                    "sent": "Basically be cause at the moment memory is not really an issue anymore so you know.",
                    "label": 0
                },
                {
                    "sent": "But yeah you know the garbage collector complete major role if you yeah but this is the other right so?",
                    "label": 0
                },
                {
                    "sent": "Basically this is something that you have 100 gigs of memory.",
                    "label": 0
                },
                {
                    "sent": "This should not be actually a big issue, thanks.",
                    "label": 0
                },
                {
                    "sent": "Yep.",
                    "label": 0
                },
                {
                    "sent": "Matthew, I don't have 100 gigs on my laptop.",
                    "label": 0
                },
                {
                    "sent": "Do you have a?",
                    "label": 0
                },
                {
                    "sent": "Can you give an intuitive reason as to why the speedup is so dramatic?",
                    "label": 0
                },
                {
                    "sent": "Sorry, add the speed.",
                    "label": 0
                },
                {
                    "sent": "Can you give an intuitive reason summary as to why these speed so The thing is that you think how the composition is compute.",
                    "label": 0
                },
                {
                    "sent": "So first you have to compute the module for the checks for the signature of each axiom.",
                    "label": 0
                },
                {
                    "sent": "And then you have to check which of these modules are the same.",
                    "label": 0
                },
                {
                    "sent": "So basically the modules that are the same means that the action the action for that for that are related with this module are actually in the Atom, which is actually a quadratic process.",
                    "label": 0
                },
                {
                    "sent": "Basically, what is the advantage of our approach that actually computing Australia connected component in the graph element is linear?",
                    "label": 0
                },
                {
                    "sent": "So if you only have you only have a graph representation, let it happen.",
                    "label": 0
                },
                {
                    "sent": "For instance, in the in the first group.",
                    "label": 0
                },
                {
                    "sent": "But actually I don't need any any compass hyperedge.",
                    "label": 0
                },
                {
                    "sent": "I do all the computation in linear time and This is why we are so fast.",
                    "label": 0
                },
                {
                    "sent": "On the other hand, if you need, we are still faster in the hyperedge size.",
                    "label": 0
                },
                {
                    "sent": "So because we do the the collapsing and sometimes the collecting can reduce the original hypergraph to more than 50% of the size, which means that when you have to compute reachability will be like computing the modules you have to deal with less actually nodes with less action that you do it in the in the process of Hughes algorithm that for atomic composition.",
                    "label": 0
                },
                {
                    "sent": "This is why you have this impact.",
                    "label": 0
                }
            ]
        }
    }
}