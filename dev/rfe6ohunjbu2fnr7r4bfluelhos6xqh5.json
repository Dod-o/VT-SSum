{
    "id": "rfe6ohunjbu2fnr7r4bfluelhos6xqh5",
    "title": "Induction of Node Label Controlled Graph Grammar Rules",
    "info": {
        "author": [
            "Hendrik Blockeel, KU Leuven"
        ],
        "published": "Aug. 25, 2008",
        "recorded": "July 2008",
        "category": [
            "Top->Computer Science->Network Analysis",
            "Top->Computer Science->Natural Language Processing"
        ]
    },
    "url": "http://videolectures.net/mlg08_blockeel_inl/",
    "segmentation": [
        [
            "So good afternoon everyone, my name is Henrik, Block Hill and so this is indeed work together with the secret nation who is sitting also in the audience.",
            "It's about induction of node label control grammar."
        ],
        [
            "Rules.",
            "This might be something that not all of you are familiar with, so I'll start this talk with a bit of motivation.",
            "What we're interested in doing, why currently, or what are the problems with current approaches.",
            "And then I'll say something about the label controlled graph grammars, or else grammars.",
            "Presenting the main contribution of this work, which is now before learning rewrite rules."
        ],
        [
            "All such grammars so well as I guess most of you know, if you learn from a strings grammar induction is quite popular approach for doing that, and it's a well studied problem now.",
            "Graph gram is also exists.",
            "And so it seems natural that it might be a good idea to to look at whether, when learning from graphs, it would be interesting to learn graph grammars, that in fact, although there is quite a lot of work on graph grammars, there seems to be very little work on learning those grammar, so there's a lot of different kinds of graph grams that have been proposed.",
            "Their properties have been studied, there's not so much on learning then and still learning such grammars might be quite useful just in the same way that, for instance, learning from strings means that you start understanding the structure of these strings in this.",
            "Since you could have something similar for graphs, so understanding a common structure of graph is 1 arguments were trying to do this.",
            "There are also useful for in the context of, for instance, active learning, because such a graph grammar can actually.",
            "Such grammars are generative.",
            "You can use them to generate new graphs and that is interesting from the point of view of generating example."
        ],
        [
            "For instance, in the context of active learning now.",
            "Just said there is a little bit of work on learning graph grammars and perhaps the best known work in that context is by Holder and Cook in a number of colleagues over then.",
            "Around 94 they presented this algorithm called Subq and after that there were a number of derived.",
            "Systems from the subdue algorithms.",
            "What subject does is the following.",
            "If you have a certain graph or a set of graphs is going to search for frequently occurring subgraphs in there, and it's going to innocence compress the graph.",
            "All the graphs by replacing these frequent occurrences by a single node and remembering that this node, so they invent a new label for it, remembering that each node with that label stands for.",
            "In fact, this sub graph.",
            "So we get the kind of.",
            "A set of rewrite rules.",
            "In that way you can see that as a graph grammar, and so the ristic they're useful for learning those rules is that they should maximally."
        ],
        [
            "Press the graphs.",
            "So let's say for instance you have a very simple graph like the one you see over there.",
            "You'll notice that there are in fact 2 equals sub graphs that are clearly visible in this graph.",
            "So what's up you would do is it would recognize that there are quite large parts of the graph that are in fact the same, and so it would.",
            "Replace that graph, then by graph, which has just a new kind of node labeled N. So it occurs 2 times and and this ends are connected because the original occurrences were connected, and if your members or stores or rewrite rules saying that the end actually stands for this sub graph.",
            "Now, one problem with this is although this is this is useful for a number of.",
            "Problems for number of goals?",
            "I mean they use this kind of system for classification and clustering and so on.",
            "But one problem is that this if you do this replacement as subdued as it is in effect, is in fact a kind of.",
            "There is a lot of information involved in that you can actually see that.",
            "Let's say that you have another graph that looks like that it has the same substructures, but they are connected differently.",
            "Then of course by applying the same subview operator, you get exactly the same results.",
            "So basically, when you see this result, you couldn't say whether it was the first graph or the second rough, or perhaps a number of other graphs that resulted in this.",
            "So basically, once you have this more compact representation.",
            "And you you have lost some information, you cannot reconstruct the original graph."
        ],
        [
            "Weekly from that representation, so that's a disadvantage in a sense.",
            "If you see it from the point of view of graph compression.",
            "Compression is lossy compression, and if you use that, then for things like classification and so on, this is typically argued from the principle of minimum description length with.",
            "Obviously, if you use the minimal description link, you assume you're getting a model that describes the data as compactly as possible, But if there is information loss if the model is not describing those data perfectly, then.",
            "The principle of course breaks down here is so, so that's a disadvantage, and II disadvantages.",
            "Of course, that this is this kind of graph.",
            "Grammars is not very well in line with already studied existing graph grammars, and so the goal of this work wasn't factory."
        ],
        [
            "To do something like Subdual, but without this disadvantages?",
            "If you look at a graph, grammars as I said they have been studied quite well.",
            "Many different kinds have been proposed on a high level you could say that there's two glasses of graph grammars there, also called hyperedge replacement grammars, where the left side of the rewrite rule is in a sense a hyperedge, and there are no replacement grammars where the left side of a rewrite rule is just a single node.",
            "And here we're going to look at the kind of grammars that falls under the node replacement."
        ],
        [
            "Grammars and the particular kind of grammars we're going to look at here are so called node label controlled graph grammars.",
            "They have rewrite rules very similar to the ones that I just used the example.",
            "So you say that a certain node will be rewritten into a certain graph which contains where the nose contains contain labels.",
            "But in addition to that, you're going to specify exactly how this graph will be connected to the surrounding nodes in the model graph.",
            "So this E is add.",
            "This is additional information that you need in fact to ensure that the way in which the graph is connected to the rest is.",
            "Accurately specified, so this avicola set of embedding rules and the point about node label controlled graph grammars is.",
            "That is, embedding rules are based on just the labels of the nodes that we."
        ],
        [
            "And in fact, it's just a set of couples of node labels.",
            "So for instance, if you have rule like the one you see above, there was saying that N has to be replaced by certain small graph.",
            "And it has to be.",
            "This graph has to be connected to the surrounding nodes in the following way.",
            "If you have a couple AB, this means that each node will label a in the graph in the in, the sub graph has to be connected to each node with labeled B in the neighborhood of this graph, and so similarly of course for B&C.",
            "So what happens if we apply this to to the graph that you will see on the left?",
            "I'm going to illustrate it here on the right, so it take this N you replace it by.",
            "Uh, so first remove the end, but you have to remember which nodes were connected to this.",
            "This and these are colored yellow here because we're going to reconnect a new sub graph only to these nodes, not to any nodes in the graph.",
            "So you put in the.",
            "Topped off instead, and then we have a rule thing that has to be connected to any yellow nodes with a label B.",
            "So we get this edge and then B has to be connected with any yellow node labeled C, so you get 2 connections of these two bista."
        ],
        [
            "See there and also of course to the other node, because you cannot distinguish these two different nodes that have the same label, so the bees have to be connected to any yellow node with this label BC.",
            "So that's how.",
            "And then I'll see graph grammar."
        ],
        [
            "All works, there's another example here or in this case it recursively also and is written into some graph that might contain and again an if you would apply that a number of times this recursive rule, then you see that you can generate this kind of structure where you have that you have kind of lattice structure where the A&B are continuously being switched and this is a kind of grammar that you could not easily at least not visually, but I think you could not represent it without indicating how.",
            "Um?",
            "Like the new graphs that are generated are connected."
        ],
        [
            "To the surroundings.",
            "So that's that's about all I wanted to say about middle node label controlled graph grammars, and so the question we're looking at here is can we adapt this subdue operator that removes the nodes and put?",
            "I know that that that looks for frequent frequently occurring subgraphs, and.",
            "Is going to replace them by a single note and introduces a rewrite rule.",
            "So can we do a similar thing, but now using this node label controlled graph grammars rules with the embedding rules included instead of justice, leaving out these in that involves if you can do that, it's the first step towards learning this NLC graph grammars and possibly larger classes of."
        ],
        [
            "Grammars that have already been studied so the concrete task is here, we're going to do exactly the same, except you.",
            "Are we going to learn a rule at least the maximal compression if you apply it then to the graph, which means you find try to find a large G large sub graph that occurs frequently.",
            "But also we need to find this set a.",
            "This embedding sets of embedding rules and they should be compatible with these occurrences of course."
        ],
        [
            "So that is what we are going to try to do.",
            "Now there's a number of observations that can be made here so.",
            "Essentially, if you look at the number of occurrences of subgraphs, if you would count them, you have so many occurrences, then the number of occurrences where you can actually find such a rule is going to be smaller.",
            "The first observation will, which is our first cost for that is that given some occurrence, there might not exist.",
            "A set of embedding rules that is compatible with this or that is correct for this occurrence, and we say that an occurrence of a sub graph is substitutable if there does exist such a set of embedding rules.",
            "If that does exist, then indeed you could say this sub graph was really generated by a rule like the one you see here."
        ],
        [
            "With a certain E. So for instance, have a look at this graph.",
            "Here we look at the sub graph ABC.",
            "This triangle ABC.",
            "You might wonder, is it possible to.",
            "Apply this sub you like operator.",
            "So basically we replaced the sub graph with a single node.",
            "We remember that the node stands for this triangle ABC and we're looking for an E that is going to ensure indeed that if you go from the right to the left that this triangle is going to be connected with the surrounding nodes in the way that you see there.",
            "What is it to see in this example?",
            "That is not going to be possible because we have an A here that is OK.",
            "It is not easy to see because part of it is has fallen off the screen.",
            "I'm afraid the other nodes to the left over there should also be labeled A.",
            "Now what we have then is that the A in.",
            "This triangle is connected with one node labeled a, but not with the other one.",
            "Now, as I said before, it's impossible for this sort of embedding rules based on labels, only to express that you should connect a note to one node with the label a but not to another load.",
            "Know that also has enabled a.",
            "We cannot express their difference, so that does not exist in E here.",
            "That would ensure that from this graph and applying this type of rule, you would get to the left graph that simply doesn't exist such a rule.",
            "So the left sub graph is not substitutable.",
            "OK, so this is just a bit of.",
            "More well written down."
        ],
        [
            "Version of what I just said, so it may be that the single occurrence of sub graph is not substitutable.",
            "You cannot substitute it with a single node.",
            "And now the second point is even if you have two occurrences that are substitutable so that it does exist a set E for both of them now doesn't mean that there exists a single setting that works for both of them, right?",
            "So we're going to stay that these occurrences are compatible.",
            "If there does indeed exist a single rule, the panels both of them."
        ],
        [
            "So another example, we have again this triangular subgraphs here labels ABC.",
            "So if you look at the left sub graph, you could say that looking at this we know that if we going to replace the sub graph with some node and then we have to remember that the ACE in the subgraph are connected to the ACE in the environment.",
            "So this couple AA has to be in our set of embedding rules and similarly BA has to be in there because we also need to be connected to the surrounding ASEN.",
            "CD also has to be in there now for the right example.",
            "We can similarly argue that BB&CD have to be in the set of embedding rules.",
            "Now, if you're looking for a single.",
            "Set of embedding rules that covers both.",
            "Then obviously, since you already know that for this one it had contained this set, and for this example it has to contain this set, then neither is compatible with.",
            "So set of embedding rules is compatible with both of them should in fact be a super set of the Union of both.",
            "I think it's quite easy to see.",
            "That's not the only condition, is that some other conditions.",
            "You can also look at couples that should not be, because essentially if you look at the left sub graph, for instance, we see that C did not get connected to the ACE in the environment.",
            "So that means that the couple CA."
        ],
        [
            "Should not be in a.",
            "And so we construct also a set again to see as fallen off.",
            "Here we can construct a set of couples, none of which should be in A and some indicating here, so it should be should not intersect with this set of couples.",
            "OK, thank you.",
            "Similarly, of course for the right case you can write a number of couples that should not be an E, and essentially again is the case that that if an E compatible with this sub graph should not contain these couples and should not contain these and it should not contain the union of both sets.",
            "So we have now results saying that if we want a settlement of embedding rules that works for both together, it should contain all these couples and none of these.",
            "If this is possible, then the two.",
            "Occurrences are compatible, so essentially, if there is no couple that occurs in both these sets, then we have compatible occurrences now in the remainder of this stuff going to refer to this set of couples at the ruin set toward the couples that must be in the set of embedding rules, and these are all this set as a rule out set couples that should not be in this set.",
            "And obviously, if the rule in set in the rollout set overlap, then you have an incompatibility.",
            "There is a."
        ],
        [
            "Exists no set of embedding rules that works for both occurrences.",
            "So that was an illustration, in fact, of how the algorithm will work, and now going to describe in a bit more detail exactly how it works.",
            "But Ascentia Liam in the basics is what I just explained.",
            "So in order to explain the way in which you compute this possible set of embedding rules, we need 3 concepts to which I've already explained.",
            "So first let us look at the so called node in set.",
            "This is the set of all the nodes in the surrounding.",
            "Graph of which we are certain that there must have been in the neighborhood of the non terminal node N. In order for this this graph to be generated so those are nodes of which we are certain they were in.",
            "Well, in the original neighborhood, the rule in set is a set of couples of must must have been in the set of embedding rules that generated this graph, and the rollout set was just said, which I will denote oh, is a list of all couples that cannot happen in E, and so the set of possible embedding rules is going to be lower bounded by this inset.",
            "And of course upper bounded by the set of all possible couples of labels minus the outside.",
            "So those are definitions of three things.",
            "How are we going to compute them if we compute them, then we were finished.",
            "Well not."
        ],
        [
            "Not entirely, but close.",
            "So first of all, I'm not going to go in detail here, but this node instead of a graph equals in fact just a set of all nodes outside this graph that are connected to it.",
            "So what this is saying is obviously if a node is connected to this occurrence, then it must have been in the neighborhood of the original non terminal node, because if it wasn't, it couldn't possibly be connected.",
            "So that's obvious.",
            "But what's more is that there are no other nodes for which you can be sure that they were in the environment.",
            "As a bit more difficult to show about some argumentation here, I'm not going to go over it, but essentially so all the nodes that are connected to the subgraphs are those which we can be.",
            "Certain that they were in the original environment of the non terminal nodes and."
        ],
        [
            "Important to know we're going to use that in a moment now, similarly to determine the rule in set I.",
            "We can have that I will contain a couple.",
            "If and only if.",
            "There is direct evidence, in fact, that it should contain that couple, meaning that there is no would label a in the graph and is connected to a node with label be outside this graph.",
            "So if you have this AB connection, then obviously the couple AB must have been in the inset and again there are no other cases in which you can."
        ],
        [
            "Certain that a certain couple is in this inset and finally tilted to determine the outset, the reasoning is slightly more complex, but not all that much, so we know a couple of labels in is in the outset.",
            "If there is an inode with labeled A in the graph itself, and the nodes with label B of which we know it was in the environment of the of the nonterminal nodes, or which is in this node in set, that's important.",
            "We have to be certain that this in this node in set.",
            "If you have a node in the graph and label A and nodes in the node in set with label B and they are not connected, then the couple Abe must not be in the set of embedding.",
            "If it were there, then this should have been connected."
        ],
        [
            "And so that's it.",
            "Basically, that means that according to the reasoning I just expect, we can determine first the node in set of a certain occurrence.",
            "Then the ruling set in the rollout set and then any possible and so any set of embedding rules that are fulfilled.",
            "This criterion here.",
            "So it's a super set of the lower bound in a subset of the upper bound is a possible set of embedding rules.",
            "If this overlap, then there does not exist."
        ],
        [
            "Not the full set of embedding rules.",
            "Now that is when we look at a single occurrence, so we know how to determine this at this.",
            "I know now what do we do with a set of occurrence of occurrences have already explained that also using an example Ascentia Lee, if you have a set of occurrences, the rule instead of the whole set of occurrences is simply the Union of the individual insects.",
            "And similarly, the outset of all of them together is a union of the individual out sets.",
            "So you can just take these unions, and if these overlap, then there are incompatible graphs in your set, which means that there does not exist a single set of embedding rules that's going to work for the whole set of occurrences.",
            "Now if.",
            "There are no.",
            "There are incompatible graphs.",
            "Then of course we."
        ],
        [
            "We were faced with another problem, namely if all these occurrences we have are incompatible.",
            "We cannot find a route that that that works for all of them then.",
            "We're interested in finding a maximal subset for which such a set of embedding rules does exist, because at the end we're going to try to remove as many as possible of these occurrences from the graph so well.",
            "We're interested in finding a maximum number of them for which a compatible rule set of embedding tools exists.",
            "Now this turns out to be.",
            "Well, not that difficult to solve either.",
            "So first of all, if you have such a set of different occurrences, if two occurrences overlap is clear that you cannot change both into a non terminal node.",
            "I mean the overlap means part of them is shared.",
            "If you change one and two non terminal node and the other occurrences destroyed of course partially.",
            "Now if two occurrences do not overlap and in addition they do not touch, which means that there should not be any edges between the two occurrences.",
            "And that's a condition we need.",
            "'cause this this this this embedding rules look at a neighborhood over certain occurrence and the neighborhood changes if you would.",
            "If you would remove one occurrence when they touch and then the other one neighborhood in the census change.",
            "So that's also complicates matters.",
            "If they do not overlap and do not touch and the two occurrences are compatible.",
            "Then we call them substitution compatible.",
            "Now we can construct a new graph where each node represents one of these occurrences and we connect two nodes.",
            "If there are substitution compatible.",
            "Now in this graph.",
            "A maximal compatible subset of the original set of occurrences is simply a maximal clique in this graph.",
            "And to see that in it one extra condition, which is that a set of occurrences compatible if all these occurrences are pairwise compatible.",
            "But that turns out to be the case.",
            "This is shown in the in the paper.",
            "So that means that finding this maximal subset of maximal compatible subset you could say just reduces to maximal clique finding problem in a graph, and in fact you get into a situation is very similar to one that frequent sub graph minors are already.",
            "In so number of frequent subgraph minors are constructing this compatibility graph innocence and using a maximal clique finding algorithm to construct the to construct a maximal set of occurrences.",
            "From the point of view of counting how many there are, so we have exactly the same situation here, except that were a bit more strict, we're going to have fewer nodes in our graph and fewer edges than these frequency graph minus would have, which makes it in essence somewhat simpler problem then these other."
        ],
        [
            "Systems face.",
            "Here's an example to illustrate it again, so we have a relatively large graph and we can see four occurrences of this triangular sub graph with nodes ABC.",
            "Now of these four occurrences, if you would look carefully at the possible embedding rules and might have, then it turns out a difficult structures compatibility graph, so they do not overlap.",
            "They do not touch, we only have to look at compatibility of their embedding rules and then this compatibility graph looks something like this.",
            "So for the four occurrences.",
            "We see all of them are pairwise compatible except for three and four.",
            "So if you look at three, for instance, it is clear that they should not be.",
            "And a B couple because a should is not connected to be there.",
            "The in array is not connected to the outer be, whereas here this is the case.",
            "So that means that this is this too.",
            "All currencies are incompatible in that respect, you cannot have a single E that is compatible with both, so these are incompatible.",
            "And that means that there's two possible solutions actually out of this four occurrences, we can find a rule with a compatible set of embedding rules for either this 1234123 graphs or 4124, but we cannot cover all of them in one single rule."
        ],
        [
            "And so well.",
            "Basically that's it.",
            "I mean that essentially solve the problem of giving a number of occurrences.",
            "How can you find?",
            "This well, how can you find a rule that covers as many of these occurrences as possible and with a set of embedding rules or this compatible with all of them?",
            "So that means that this sub do operate, which did not give you this set.",
            "Ian in fact didn't check whether such as SETI existed is now upgraded to a similar operator that does compute this E as well.",
            "Also, the computation is going to do seem feasible in practice.",
            "Becausw the clearly the computational bottleneck here is maximal clique problem, which is NP complete.",
            "But since frequent graph minors are already using that and they can handle reasonably large graphs, I mean there are specialized algorithms for this maximal clique problem.",
            "So as I just said, we have essentially smaller graphs with fewer nodes and fewer edges, so we expect that even though we haven't checked this experimentally, it is reasonable."
        ],
        [
            "To assume that this will work relatively efficiently as well.",
            "So finally this is far from finished work, so we know now how to learn a single rule of this kind.",
            "We have looked at how to learn recursive rules and if you want to learn recursive rules, this condition of that two occurrences should not touch.",
            "For instance is going to have to be removed at some point.",
            "And also and you'll see grammars are in fact relatively simple case from a broader class of grammars.",
            "The most powerful of which are so called AD&CE grammars.",
            "Now the details of that there are not so important that these are working with directed edges and edge labels, and so on.",
            "And there are more powerful than else grammars, but it seems that the solution for Anglesey grammars could be extended towards Ian CE grammars.",
            "So that's the effect.",
            "Currently something we're looking into right now.",
            "And finally, this perhaps called to the audience.",
            "I'm looking for interesting applications for this kind of graph grammar induction.",
            "I mean, I'm quite confident there exists, but I haven't found any concrete datasets or so where.",
            "This could have a clear advantage over other approaches.",
            "So when that ends my talk, thanks very much for listening.",
            "When in fact I only have a probably interesting application which is coming from the area of biology so.",
            "We have used this while the cluster collapsing approach from sub do on biological protein protein interaction networks.",
            "So there's always the theory that they are are erratically organized and while using those grammar you might probably be able to construct some evolutionary rule.",
            "So how these organisms have evolved.",
            "So this will be a really interesting application.",
            "OK, thank you.",
            "Have to look for biologists then who can help us with that.",
            "So."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So good afternoon everyone, my name is Henrik, Block Hill and so this is indeed work together with the secret nation who is sitting also in the audience.",
                    "label": 0
                },
                {
                    "sent": "It's about induction of node label control grammar.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Rules.",
                    "label": 0
                },
                {
                    "sent": "This might be something that not all of you are familiar with, so I'll start this talk with a bit of motivation.",
                    "label": 0
                },
                {
                    "sent": "What we're interested in doing, why currently, or what are the problems with current approaches.",
                    "label": 0
                },
                {
                    "sent": "And then I'll say something about the label controlled graph grammars, or else grammars.",
                    "label": 1
                },
                {
                    "sent": "Presenting the main contribution of this work, which is now before learning rewrite rules.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "All such grammars so well as I guess most of you know, if you learn from a strings grammar induction is quite popular approach for doing that, and it's a well studied problem now.",
                    "label": 1
                },
                {
                    "sent": "Graph gram is also exists.",
                    "label": 1
                },
                {
                    "sent": "And so it seems natural that it might be a good idea to to look at whether, when learning from graphs, it would be interesting to learn graph grammars, that in fact, although there is quite a lot of work on graph grammars, there seems to be very little work on learning those grammar, so there's a lot of different kinds of graph grams that have been proposed.",
                    "label": 1
                },
                {
                    "sent": "Their properties have been studied, there's not so much on learning then and still learning such grammars might be quite useful just in the same way that, for instance, learning from strings means that you start understanding the structure of these strings in this.",
                    "label": 0
                },
                {
                    "sent": "Since you could have something similar for graphs, so understanding a common structure of graph is 1 arguments were trying to do this.",
                    "label": 0
                },
                {
                    "sent": "There are also useful for in the context of, for instance, active learning, because such a graph grammar can actually.",
                    "label": 0
                },
                {
                    "sent": "Such grammars are generative.",
                    "label": 0
                },
                {
                    "sent": "You can use them to generate new graphs and that is interesting from the point of view of generating example.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "For instance, in the context of active learning now.",
                    "label": 1
                },
                {
                    "sent": "Just said there is a little bit of work on learning graph grammars and perhaps the best known work in that context is by Holder and Cook in a number of colleagues over then.",
                    "label": 0
                },
                {
                    "sent": "Around 94 they presented this algorithm called Subq and after that there were a number of derived.",
                    "label": 0
                },
                {
                    "sent": "Systems from the subdue algorithms.",
                    "label": 0
                },
                {
                    "sent": "What subject does is the following.",
                    "label": 1
                },
                {
                    "sent": "If you have a certain graph or a set of graphs is going to search for frequently occurring subgraphs in there, and it's going to innocence compress the graph.",
                    "label": 1
                },
                {
                    "sent": "All the graphs by replacing these frequent occurrences by a single node and remembering that this node, so they invent a new label for it, remembering that each node with that label stands for.",
                    "label": 0
                },
                {
                    "sent": "In fact, this sub graph.",
                    "label": 0
                },
                {
                    "sent": "So we get the kind of.",
                    "label": 0
                },
                {
                    "sent": "A set of rewrite rules.",
                    "label": 1
                },
                {
                    "sent": "In that way you can see that as a graph grammar, and so the ristic they're useful for learning those rules is that they should maximally.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Press the graphs.",
                    "label": 0
                },
                {
                    "sent": "So let's say for instance you have a very simple graph like the one you see over there.",
                    "label": 0
                },
                {
                    "sent": "You'll notice that there are in fact 2 equals sub graphs that are clearly visible in this graph.",
                    "label": 0
                },
                {
                    "sent": "So what's up you would do is it would recognize that there are quite large parts of the graph that are in fact the same, and so it would.",
                    "label": 0
                },
                {
                    "sent": "Replace that graph, then by graph, which has just a new kind of node labeled N. So it occurs 2 times and and this ends are connected because the original occurrences were connected, and if your members or stores or rewrite rules saying that the end actually stands for this sub graph.",
                    "label": 0
                },
                {
                    "sent": "Now, one problem with this is although this is this is useful for a number of.",
                    "label": 0
                },
                {
                    "sent": "Problems for number of goals?",
                    "label": 0
                },
                {
                    "sent": "I mean they use this kind of system for classification and clustering and so on.",
                    "label": 0
                },
                {
                    "sent": "But one problem is that this if you do this replacement as subdued as it is in effect, is in fact a kind of.",
                    "label": 0
                },
                {
                    "sent": "There is a lot of information involved in that you can actually see that.",
                    "label": 0
                },
                {
                    "sent": "Let's say that you have another graph that looks like that it has the same substructures, but they are connected differently.",
                    "label": 0
                },
                {
                    "sent": "Then of course by applying the same subview operator, you get exactly the same results.",
                    "label": 0
                },
                {
                    "sent": "So basically, when you see this result, you couldn't say whether it was the first graph or the second rough, or perhaps a number of other graphs that resulted in this.",
                    "label": 0
                },
                {
                    "sent": "So basically, once you have this more compact representation.",
                    "label": 0
                },
                {
                    "sent": "And you you have lost some information, you cannot reconstruct the original graph.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Weekly from that representation, so that's a disadvantage in a sense.",
                    "label": 0
                },
                {
                    "sent": "If you see it from the point of view of graph compression.",
                    "label": 1
                },
                {
                    "sent": "Compression is lossy compression, and if you use that, then for things like classification and so on, this is typically argued from the principle of minimum description length with.",
                    "label": 0
                },
                {
                    "sent": "Obviously, if you use the minimal description link, you assume you're getting a model that describes the data as compactly as possible, But if there is information loss if the model is not describing those data perfectly, then.",
                    "label": 0
                },
                {
                    "sent": "The principle of course breaks down here is so, so that's a disadvantage, and II disadvantages.",
                    "label": 0
                },
                {
                    "sent": "Of course, that this is this kind of graph.",
                    "label": 0
                },
                {
                    "sent": "Grammars is not very well in line with already studied existing graph grammars, and so the goal of this work wasn't factory.",
                    "label": 1
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "To do something like Subdual, but without this disadvantages?",
                    "label": 0
                },
                {
                    "sent": "If you look at a graph, grammars as I said they have been studied quite well.",
                    "label": 1
                },
                {
                    "sent": "Many different kinds have been proposed on a high level you could say that there's two glasses of graph grammars there, also called hyperedge replacement grammars, where the left side of the rewrite rule is in a sense a hyperedge, and there are no replacement grammars where the left side of a rewrite rule is just a single node.",
                    "label": 1
                },
                {
                    "sent": "And here we're going to look at the kind of grammars that falls under the node replacement.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Grammars and the particular kind of grammars we're going to look at here are so called node label controlled graph grammars.",
                    "label": 1
                },
                {
                    "sent": "They have rewrite rules very similar to the ones that I just used the example.",
                    "label": 0
                },
                {
                    "sent": "So you say that a certain node will be rewritten into a certain graph which contains where the nose contains contain labels.",
                    "label": 0
                },
                {
                    "sent": "But in addition to that, you're going to specify exactly how this graph will be connected to the surrounding nodes in the model graph.",
                    "label": 0
                },
                {
                    "sent": "So this E is add.",
                    "label": 0
                },
                {
                    "sent": "This is additional information that you need in fact to ensure that the way in which the graph is connected to the rest is.",
                    "label": 0
                },
                {
                    "sent": "Accurately specified, so this avicola set of embedding rules and the point about node label controlled graph grammars is.",
                    "label": 1
                },
                {
                    "sent": "That is, embedding rules are based on just the labels of the nodes that we.",
                    "label": 1
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And in fact, it's just a set of couples of node labels.",
                    "label": 0
                },
                {
                    "sent": "So for instance, if you have rule like the one you see above, there was saying that N has to be replaced by certain small graph.",
                    "label": 0
                },
                {
                    "sent": "And it has to be.",
                    "label": 0
                },
                {
                    "sent": "This graph has to be connected to the surrounding nodes in the following way.",
                    "label": 0
                },
                {
                    "sent": "If you have a couple AB, this means that each node will label a in the graph in the in, the sub graph has to be connected to each node with labeled B in the neighborhood of this graph, and so similarly of course for B&C.",
                    "label": 0
                },
                {
                    "sent": "So what happens if we apply this to to the graph that you will see on the left?",
                    "label": 0
                },
                {
                    "sent": "I'm going to illustrate it here on the right, so it take this N you replace it by.",
                    "label": 0
                },
                {
                    "sent": "Uh, so first remove the end, but you have to remember which nodes were connected to this.",
                    "label": 0
                },
                {
                    "sent": "This and these are colored yellow here because we're going to reconnect a new sub graph only to these nodes, not to any nodes in the graph.",
                    "label": 0
                },
                {
                    "sent": "So you put in the.",
                    "label": 0
                },
                {
                    "sent": "Topped off instead, and then we have a rule thing that has to be connected to any yellow nodes with a label B.",
                    "label": 0
                },
                {
                    "sent": "So we get this edge and then B has to be connected with any yellow node labeled C, so you get 2 connections of these two bista.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "See there and also of course to the other node, because you cannot distinguish these two different nodes that have the same label, so the bees have to be connected to any yellow node with this label BC.",
                    "label": 0
                },
                {
                    "sent": "So that's how.",
                    "label": 0
                },
                {
                    "sent": "And then I'll see graph grammar.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "All works, there's another example here or in this case it recursively also and is written into some graph that might contain and again an if you would apply that a number of times this recursive rule, then you see that you can generate this kind of structure where you have that you have kind of lattice structure where the A&B are continuously being switched and this is a kind of grammar that you could not easily at least not visually, but I think you could not represent it without indicating how.",
                    "label": 0
                },
                {
                    "sent": "Um?",
                    "label": 0
                },
                {
                    "sent": "Like the new graphs that are generated are connected.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "To the surroundings.",
                    "label": 0
                },
                {
                    "sent": "So that's that's about all I wanted to say about middle node label controlled graph grammars, and so the question we're looking at here is can we adapt this subdue operator that removes the nodes and put?",
                    "label": 1
                },
                {
                    "sent": "I know that that that looks for frequent frequently occurring subgraphs, and.",
                    "label": 0
                },
                {
                    "sent": "Is going to replace them by a single note and introduces a rewrite rule.",
                    "label": 0
                },
                {
                    "sent": "So can we do a similar thing, but now using this node label controlled graph grammars rules with the embedding rules included instead of justice, leaving out these in that involves if you can do that, it's the first step towards learning this NLC graph grammars and possibly larger classes of.",
                    "label": 1
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Grammars that have already been studied so the concrete task is here, we're going to do exactly the same, except you.",
                    "label": 0
                },
                {
                    "sent": "Are we going to learn a rule at least the maximal compression if you apply it then to the graph, which means you find try to find a large G large sub graph that occurs frequently.",
                    "label": 1
                },
                {
                    "sent": "But also we need to find this set a.",
                    "label": 0
                },
                {
                    "sent": "This embedding sets of embedding rules and they should be compatible with these occurrences of course.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So that is what we are going to try to do.",
                    "label": 0
                },
                {
                    "sent": "Now there's a number of observations that can be made here so.",
                    "label": 0
                },
                {
                    "sent": "Essentially, if you look at the number of occurrences of subgraphs, if you would count them, you have so many occurrences, then the number of occurrences where you can actually find such a rule is going to be smaller.",
                    "label": 0
                },
                {
                    "sent": "The first observation will, which is our first cost for that is that given some occurrence, there might not exist.",
                    "label": 0
                },
                {
                    "sent": "A set of embedding rules that is compatible with this or that is correct for this occurrence, and we say that an occurrence of a sub graph is substitutable if there does exist such a set of embedding rules.",
                    "label": 1
                },
                {
                    "sent": "If that does exist, then indeed you could say this sub graph was really generated by a rule like the one you see here.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "With a certain E. So for instance, have a look at this graph.",
                    "label": 0
                },
                {
                    "sent": "Here we look at the sub graph ABC.",
                    "label": 0
                },
                {
                    "sent": "This triangle ABC.",
                    "label": 0
                },
                {
                    "sent": "You might wonder, is it possible to.",
                    "label": 0
                },
                {
                    "sent": "Apply this sub you like operator.",
                    "label": 0
                },
                {
                    "sent": "So basically we replaced the sub graph with a single node.",
                    "label": 0
                },
                {
                    "sent": "We remember that the node stands for this triangle ABC and we're looking for an E that is going to ensure indeed that if you go from the right to the left that this triangle is going to be connected with the surrounding nodes in the way that you see there.",
                    "label": 1
                },
                {
                    "sent": "What is it to see in this example?",
                    "label": 1
                },
                {
                    "sent": "That is not going to be possible because we have an A here that is OK.",
                    "label": 0
                },
                {
                    "sent": "It is not easy to see because part of it is has fallen off the screen.",
                    "label": 0
                },
                {
                    "sent": "I'm afraid the other nodes to the left over there should also be labeled A.",
                    "label": 0
                },
                {
                    "sent": "Now what we have then is that the A in.",
                    "label": 0
                },
                {
                    "sent": "This triangle is connected with one node labeled a, but not with the other one.",
                    "label": 0
                },
                {
                    "sent": "Now, as I said before, it's impossible for this sort of embedding rules based on labels, only to express that you should connect a note to one node with the label a but not to another load.",
                    "label": 1
                },
                {
                    "sent": "Know that also has enabled a.",
                    "label": 0
                },
                {
                    "sent": "We cannot express their difference, so that does not exist in E here.",
                    "label": 0
                },
                {
                    "sent": "That would ensure that from this graph and applying this type of rule, you would get to the left graph that simply doesn't exist such a rule.",
                    "label": 0
                },
                {
                    "sent": "So the left sub graph is not substitutable.",
                    "label": 0
                },
                {
                    "sent": "OK, so this is just a bit of.",
                    "label": 0
                },
                {
                    "sent": "More well written down.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Version of what I just said, so it may be that the single occurrence of sub graph is not substitutable.",
                    "label": 0
                },
                {
                    "sent": "You cannot substitute it with a single node.",
                    "label": 0
                },
                {
                    "sent": "And now the second point is even if you have two occurrences that are substitutable so that it does exist a set E for both of them now doesn't mean that there exists a single setting that works for both of them, right?",
                    "label": 1
                },
                {
                    "sent": "So we're going to stay that these occurrences are compatible.",
                    "label": 0
                },
                {
                    "sent": "If there does indeed exist a single rule, the panels both of them.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So another example, we have again this triangular subgraphs here labels ABC.",
                    "label": 0
                },
                {
                    "sent": "So if you look at the left sub graph, you could say that looking at this we know that if we going to replace the sub graph with some node and then we have to remember that the ACE in the subgraph are connected to the ACE in the environment.",
                    "label": 0
                },
                {
                    "sent": "So this couple AA has to be in our set of embedding rules and similarly BA has to be in there because we also need to be connected to the surrounding ASEN.",
                    "label": 0
                },
                {
                    "sent": "CD also has to be in there now for the right example.",
                    "label": 0
                },
                {
                    "sent": "We can similarly argue that BB&CD have to be in the set of embedding rules.",
                    "label": 0
                },
                {
                    "sent": "Now, if you're looking for a single.",
                    "label": 0
                },
                {
                    "sent": "Set of embedding rules that covers both.",
                    "label": 0
                },
                {
                    "sent": "Then obviously, since you already know that for this one it had contained this set, and for this example it has to contain this set, then neither is compatible with.",
                    "label": 0
                },
                {
                    "sent": "So set of embedding rules is compatible with both of them should in fact be a super set of the Union of both.",
                    "label": 0
                },
                {
                    "sent": "I think it's quite easy to see.",
                    "label": 0
                },
                {
                    "sent": "That's not the only condition, is that some other conditions.",
                    "label": 0
                },
                {
                    "sent": "You can also look at couples that should not be, because essentially if you look at the left sub graph, for instance, we see that C did not get connected to the ACE in the environment.",
                    "label": 0
                },
                {
                    "sent": "So that means that the couple CA.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Should not be in a.",
                    "label": 1
                },
                {
                    "sent": "And so we construct also a set again to see as fallen off.",
                    "label": 0
                },
                {
                    "sent": "Here we can construct a set of couples, none of which should be in A and some indicating here, so it should be should not intersect with this set of couples.",
                    "label": 0
                },
                {
                    "sent": "OK, thank you.",
                    "label": 0
                },
                {
                    "sent": "Similarly, of course for the right case you can write a number of couples that should not be an E, and essentially again is the case that that if an E compatible with this sub graph should not contain these couples and should not contain these and it should not contain the union of both sets.",
                    "label": 0
                },
                {
                    "sent": "So we have now results saying that if we want a settlement of embedding rules that works for both together, it should contain all these couples and none of these.",
                    "label": 0
                },
                {
                    "sent": "If this is possible, then the two.",
                    "label": 0
                },
                {
                    "sent": "Occurrences are compatible, so essentially, if there is no couple that occurs in both these sets, then we have compatible occurrences now in the remainder of this stuff going to refer to this set of couples at the ruin set toward the couples that must be in the set of embedding rules, and these are all this set as a rule out set couples that should not be in this set.",
                    "label": 0
                },
                {
                    "sent": "And obviously, if the rule in set in the rollout set overlap, then you have an incompatibility.",
                    "label": 0
                },
                {
                    "sent": "There is a.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Exists no set of embedding rules that works for both occurrences.",
                    "label": 0
                },
                {
                    "sent": "So that was an illustration, in fact, of how the algorithm will work, and now going to describe in a bit more detail exactly how it works.",
                    "label": 0
                },
                {
                    "sent": "But Ascentia Liam in the basics is what I just explained.",
                    "label": 0
                },
                {
                    "sent": "So in order to explain the way in which you compute this possible set of embedding rules, we need 3 concepts to which I've already explained.",
                    "label": 0
                },
                {
                    "sent": "So first let us look at the so called node in set.",
                    "label": 0
                },
                {
                    "sent": "This is the set of all the nodes in the surrounding.",
                    "label": 1
                },
                {
                    "sent": "Graph of which we are certain that there must have been in the neighborhood of the non terminal node N. In order for this this graph to be generated so those are nodes of which we are certain they were in.",
                    "label": 1
                },
                {
                    "sent": "Well, in the original neighborhood, the rule in set is a set of couples of must must have been in the set of embedding rules that generated this graph, and the rollout set was just said, which I will denote oh, is a list of all couples that cannot happen in E, and so the set of possible embedding rules is going to be lower bounded by this inset.",
                    "label": 1
                },
                {
                    "sent": "And of course upper bounded by the set of all possible couples of labels minus the outside.",
                    "label": 0
                },
                {
                    "sent": "So those are definitions of three things.",
                    "label": 0
                },
                {
                    "sent": "How are we going to compute them if we compute them, then we were finished.",
                    "label": 0
                },
                {
                    "sent": "Well not.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Not entirely, but close.",
                    "label": 0
                },
                {
                    "sent": "So first of all, I'm not going to go in detail here, but this node instead of a graph equals in fact just a set of all nodes outside this graph that are connected to it.",
                    "label": 1
                },
                {
                    "sent": "So what this is saying is obviously if a node is connected to this occurrence, then it must have been in the neighborhood of the original non terminal node, because if it wasn't, it couldn't possibly be connected.",
                    "label": 0
                },
                {
                    "sent": "So that's obvious.",
                    "label": 0
                },
                {
                    "sent": "But what's more is that there are no other nodes for which you can be sure that they were in the environment.",
                    "label": 1
                },
                {
                    "sent": "As a bit more difficult to show about some argumentation here, I'm not going to go over it, but essentially so all the nodes that are connected to the subgraphs are those which we can be.",
                    "label": 0
                },
                {
                    "sent": "Certain that they were in the original environment of the non terminal nodes and.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Important to know we're going to use that in a moment now, similarly to determine the rule in set I.",
                    "label": 0
                },
                {
                    "sent": "We can have that I will contain a couple.",
                    "label": 0
                },
                {
                    "sent": "If and only if.",
                    "label": 0
                },
                {
                    "sent": "There is direct evidence, in fact, that it should contain that couple, meaning that there is no would label a in the graph and is connected to a node with label be outside this graph.",
                    "label": 1
                },
                {
                    "sent": "So if you have this AB connection, then obviously the couple AB must have been in the inset and again there are no other cases in which you can.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Certain that a certain couple is in this inset and finally tilted to determine the outset, the reasoning is slightly more complex, but not all that much, so we know a couple of labels in is in the outset.",
                    "label": 1
                },
                {
                    "sent": "If there is an inode with labeled A in the graph itself, and the nodes with label B of which we know it was in the environment of the of the nonterminal nodes, or which is in this node in set, that's important.",
                    "label": 1
                },
                {
                    "sent": "We have to be certain that this in this node in set.",
                    "label": 1
                },
                {
                    "sent": "If you have a node in the graph and label A and nodes in the node in set with label B and they are not connected, then the couple Abe must not be in the set of embedding.",
                    "label": 1
                },
                {
                    "sent": "If it were there, then this should have been connected.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And so that's it.",
                    "label": 0
                },
                {
                    "sent": "Basically, that means that according to the reasoning I just expect, we can determine first the node in set of a certain occurrence.",
                    "label": 0
                },
                {
                    "sent": "Then the ruling set in the rollout set and then any possible and so any set of embedding rules that are fulfilled.",
                    "label": 0
                },
                {
                    "sent": "This criterion here.",
                    "label": 0
                },
                {
                    "sent": "So it's a super set of the lower bound in a subset of the upper bound is a possible set of embedding rules.",
                    "label": 0
                },
                {
                    "sent": "If this overlap, then there does not exist.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Not the full set of embedding rules.",
                    "label": 0
                },
                {
                    "sent": "Now that is when we look at a single occurrence, so we know how to determine this at this.",
                    "label": 1
                },
                {
                    "sent": "I know now what do we do with a set of occurrence of occurrences have already explained that also using an example Ascentia Lee, if you have a set of occurrences, the rule instead of the whole set of occurrences is simply the Union of the individual insects.",
                    "label": 1
                },
                {
                    "sent": "And similarly, the outset of all of them together is a union of the individual out sets.",
                    "label": 0
                },
                {
                    "sent": "So you can just take these unions, and if these overlap, then there are incompatible graphs in your set, which means that there does not exist a single set of embedding rules that's going to work for the whole set of occurrences.",
                    "label": 1
                },
                {
                    "sent": "Now if.",
                    "label": 0
                },
                {
                    "sent": "There are no.",
                    "label": 0
                },
                {
                    "sent": "There are incompatible graphs.",
                    "label": 0
                },
                {
                    "sent": "Then of course we.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We were faced with another problem, namely if all these occurrences we have are incompatible.",
                    "label": 0
                },
                {
                    "sent": "We cannot find a route that that that works for all of them then.",
                    "label": 0
                },
                {
                    "sent": "We're interested in finding a maximal subset for which such a set of embedding rules does exist, because at the end we're going to try to remove as many as possible of these occurrences from the graph so well.",
                    "label": 0
                },
                {
                    "sent": "We're interested in finding a maximum number of them for which a compatible rule set of embedding tools exists.",
                    "label": 0
                },
                {
                    "sent": "Now this turns out to be.",
                    "label": 0
                },
                {
                    "sent": "Well, not that difficult to solve either.",
                    "label": 0
                },
                {
                    "sent": "So first of all, if you have such a set of different occurrences, if two occurrences overlap is clear that you cannot change both into a non terminal node.",
                    "label": 0
                },
                {
                    "sent": "I mean the overlap means part of them is shared.",
                    "label": 0
                },
                {
                    "sent": "If you change one and two non terminal node and the other occurrences destroyed of course partially.",
                    "label": 0
                },
                {
                    "sent": "Now if two occurrences do not overlap and in addition they do not touch, which means that there should not be any edges between the two occurrences.",
                    "label": 0
                },
                {
                    "sent": "And that's a condition we need.",
                    "label": 0
                },
                {
                    "sent": "'cause this this this this embedding rules look at a neighborhood over certain occurrence and the neighborhood changes if you would.",
                    "label": 0
                },
                {
                    "sent": "If you would remove one occurrence when they touch and then the other one neighborhood in the census change.",
                    "label": 0
                },
                {
                    "sent": "So that's also complicates matters.",
                    "label": 0
                },
                {
                    "sent": "If they do not overlap and do not touch and the two occurrences are compatible.",
                    "label": 1
                },
                {
                    "sent": "Then we call them substitution compatible.",
                    "label": 0
                },
                {
                    "sent": "Now we can construct a new graph where each node represents one of these occurrences and we connect two nodes.",
                    "label": 1
                },
                {
                    "sent": "If there are substitution compatible.",
                    "label": 0
                },
                {
                    "sent": "Now in this graph.",
                    "label": 1
                },
                {
                    "sent": "A maximal compatible subset of the original set of occurrences is simply a maximal clique in this graph.",
                    "label": 1
                },
                {
                    "sent": "And to see that in it one extra condition, which is that a set of occurrences compatible if all these occurrences are pairwise compatible.",
                    "label": 0
                },
                {
                    "sent": "But that turns out to be the case.",
                    "label": 0
                },
                {
                    "sent": "This is shown in the in the paper.",
                    "label": 0
                },
                {
                    "sent": "So that means that finding this maximal subset of maximal compatible subset you could say just reduces to maximal clique finding problem in a graph, and in fact you get into a situation is very similar to one that frequent sub graph minors are already.",
                    "label": 0
                },
                {
                    "sent": "In so number of frequent subgraph minors are constructing this compatibility graph innocence and using a maximal clique finding algorithm to construct the to construct a maximal set of occurrences.",
                    "label": 0
                },
                {
                    "sent": "From the point of view of counting how many there are, so we have exactly the same situation here, except that were a bit more strict, we're going to have fewer nodes in our graph and fewer edges than these frequency graph minus would have, which makes it in essence somewhat simpler problem then these other.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Systems face.",
                    "label": 0
                },
                {
                    "sent": "Here's an example to illustrate it again, so we have a relatively large graph and we can see four occurrences of this triangular sub graph with nodes ABC.",
                    "label": 0
                },
                {
                    "sent": "Now of these four occurrences, if you would look carefully at the possible embedding rules and might have, then it turns out a difficult structures compatibility graph, so they do not overlap.",
                    "label": 0
                },
                {
                    "sent": "They do not touch, we only have to look at compatibility of their embedding rules and then this compatibility graph looks something like this.",
                    "label": 0
                },
                {
                    "sent": "So for the four occurrences.",
                    "label": 0
                },
                {
                    "sent": "We see all of them are pairwise compatible except for three and four.",
                    "label": 0
                },
                {
                    "sent": "So if you look at three, for instance, it is clear that they should not be.",
                    "label": 0
                },
                {
                    "sent": "And a B couple because a should is not connected to be there.",
                    "label": 1
                },
                {
                    "sent": "The in array is not connected to the outer be, whereas here this is the case.",
                    "label": 0
                },
                {
                    "sent": "So that means that this is this too.",
                    "label": 0
                },
                {
                    "sent": "All currencies are incompatible in that respect, you cannot have a single E that is compatible with both, so these are incompatible.",
                    "label": 0
                },
                {
                    "sent": "And that means that there's two possible solutions actually out of this four occurrences, we can find a rule with a compatible set of embedding rules for either this 1234123 graphs or 4124, but we cannot cover all of them in one single rule.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And so well.",
                    "label": 0
                },
                {
                    "sent": "Basically that's it.",
                    "label": 0
                },
                {
                    "sent": "I mean that essentially solve the problem of giving a number of occurrences.",
                    "label": 0
                },
                {
                    "sent": "How can you find?",
                    "label": 0
                },
                {
                    "sent": "This well, how can you find a rule that covers as many of these occurrences as possible and with a set of embedding rules or this compatible with all of them?",
                    "label": 0
                },
                {
                    "sent": "So that means that this sub do operate, which did not give you this set.",
                    "label": 0
                },
                {
                    "sent": "Ian in fact didn't check whether such as SETI existed is now upgraded to a similar operator that does compute this E as well.",
                    "label": 0
                },
                {
                    "sent": "Also, the computation is going to do seem feasible in practice.",
                    "label": 1
                },
                {
                    "sent": "Becausw the clearly the computational bottleneck here is maximal clique problem, which is NP complete.",
                    "label": 0
                },
                {
                    "sent": "But since frequent graph minors are already using that and they can handle reasonably large graphs, I mean there are specialized algorithms for this maximal clique problem.",
                    "label": 0
                },
                {
                    "sent": "So as I just said, we have essentially smaller graphs with fewer nodes and fewer edges, so we expect that even though we haven't checked this experimentally, it is reasonable.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "To assume that this will work relatively efficiently as well.",
                    "label": 0
                },
                {
                    "sent": "So finally this is far from finished work, so we know now how to learn a single rule of this kind.",
                    "label": 0
                },
                {
                    "sent": "We have looked at how to learn recursive rules and if you want to learn recursive rules, this condition of that two occurrences should not touch.",
                    "label": 1
                },
                {
                    "sent": "For instance is going to have to be removed at some point.",
                    "label": 1
                },
                {
                    "sent": "And also and you'll see grammars are in fact relatively simple case from a broader class of grammars.",
                    "label": 1
                },
                {
                    "sent": "The most powerful of which are so called AD&CE grammars.",
                    "label": 0
                },
                {
                    "sent": "Now the details of that there are not so important that these are working with directed edges and edge labels, and so on.",
                    "label": 0
                },
                {
                    "sent": "And there are more powerful than else grammars, but it seems that the solution for Anglesey grammars could be extended towards Ian CE grammars.",
                    "label": 1
                },
                {
                    "sent": "So that's the effect.",
                    "label": 0
                },
                {
                    "sent": "Currently something we're looking into right now.",
                    "label": 0
                },
                {
                    "sent": "And finally, this perhaps called to the audience.",
                    "label": 0
                },
                {
                    "sent": "I'm looking for interesting applications for this kind of graph grammar induction.",
                    "label": 0
                },
                {
                    "sent": "I mean, I'm quite confident there exists, but I haven't found any concrete datasets or so where.",
                    "label": 0
                },
                {
                    "sent": "This could have a clear advantage over other approaches.",
                    "label": 0
                },
                {
                    "sent": "So when that ends my talk, thanks very much for listening.",
                    "label": 0
                },
                {
                    "sent": "When in fact I only have a probably interesting application which is coming from the area of biology so.",
                    "label": 0
                },
                {
                    "sent": "We have used this while the cluster collapsing approach from sub do on biological protein protein interaction networks.",
                    "label": 1
                },
                {
                    "sent": "So there's always the theory that they are are erratically organized and while using those grammar you might probably be able to construct some evolutionary rule.",
                    "label": 0
                },
                {
                    "sent": "So how these organisms have evolved.",
                    "label": 0
                },
                {
                    "sent": "So this will be a really interesting application.",
                    "label": 0
                },
                {
                    "sent": "OK, thank you.",
                    "label": 0
                },
                {
                    "sent": "Have to look for biologists then who can help us with that.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        }
    }
}