{
    "id": "gpcfceoqnhxi3j2xx6rolw2grfzj5vgk",
    "title": "A space efficient streaming algorithm for triangle counting using the birthday paradox",
    "info": {
        "author": [
            "Madhav Jha, Department of Computer Science and Engineering, Pennsylvania State University"
        ],
        "published": "Sept. 27, 2013",
        "recorded": "August 2013",
        "category": [
            "Top->Computer Science->Data Mining",
            "Top->Computer Science->Knowledge Extraction"
        ]
    },
    "url": "http://videolectures.net/kdd2013_jha_birthday_paradox/",
    "segmentation": [
        [
            "Yeah, so this is joint work with seasonally Pinar and so this was done while I was interning at Sandia National Labs.",
            "And now I'm back to Sandia National Labs as opposed or so."
        ],
        [
            "So let me start with a real world example graph that probably we're all familiar with the Co authorship graph.",
            "So the nodes are researchers and there's an edge if two researchers coauthor a paper together, right?",
            "And so a typical feature of this graph is that these graphs tend to have a lot of triangles.",
            "So in fact, our work ended up adding one triangle count to this graph.",
            "So I mean, as a more real world example, if you look at the quarter ship graph of high energy physics taken from the SNAP website, it has all the way, like as high as three 3.35 million triangles.",
            "And so."
        ],
        [
            "This is a general comment, So what we see is we see graphs everywhere.",
            "In real world we have these graphs where web pages linked to each other.",
            "We have a graph in the form of social networks, the citation graph, the Co authorship graph and important point.",
            "I want to say that in many of these real world graphs, one of the things that we observe is that they have lots of lots of triangles alright.",
            "So these are some examples of graphs taken from against app website.",
            "The first one is the.",
            "The hyperlink graph, the second one is the social network or code graph.",
            "The third one is the graph of coauthorship network and the 4th one is the citation network graph.",
            "So, so in all this stuff, we're actually very interested in counting triangles, right?",
            "But but actually, one thing to note is that this."
        ],
        [
            "And also actually vary a lot in terms of number of edges, right?",
            "So how do you compare triangles in these graphs?",
            "So one interesting parameter that has been studied is it is it triangle density, which is called transitivity.",
            "So to understand that, let's look at this graph and we define what is called a wedge, which is basically a length two path.",
            "So a wedge is essentially something which can potentially form a triangle, but it need not, right?",
            "So for example."
        ],
        [
            "In this graph, BCD is a veg and emgs of edge.",
            "Whereas busy."
        ],
        [
            "In fact, forms a triangle.",
            "EFG is in fact an open wage, right?",
            "And they translated the quantity?",
            "Kind of quantify is that it says it is basically three times the number of triangles divided by total number of edges.",
            "Or in other words, how many which is in the graph are closed."
        ],
        [
            "And again, one of the things that you'd observe in real world graphs is that most real world graphs have very high transitivity values.",
            "And so."
        ],
        [
            "The world was shattered by not including 2013, which tries to estimate this quantity transitivity in a sampling setting where you have access to the entire graph and the question is, can we do it in the streaming setting?",
            "So in fact the starting point of our work was based on the algorithm by Seshadri Pinard in colder."
        ],
        [
            "So one question is, why do we?",
            "Why are we interested in counting triangles and us in the 1st place?",
            "And I think the answer is like it's been.",
            "It's been applied in many different areas, from social science to all the way to finding topics in World Wide Web, to anomaly detection and things like that, even in graph models.",
            "And it's also very well studied even in the streaming setting.",
            "So let me."
        ],
        [
            "Let me motivate why?",
            "Why are we interested in studying counting triangles and on the streaming setting?",
            "So I want to say that lot of graphs that we observe in practice actually occur with the natural timestamp or we see one edge at a time.",
            "So for example, on a Facebook network you know you could see somebody became a friend at some particular time stamp and then you would see another edge being formed between between another two friends, and so on and so forth.",
            "So naturally we see an edge actually appears with a particular timestamp and we're interested in finding out how many.",
            "A friend of friends are friends, right?",
            "That kind of queries.",
            "So how many triangles are there?",
            "If you observe one edge at a time?",
            "So more to the point."
        ],
        [
            "We are given a stream of edges OK, and these edges are completely arbitrarily ordered.",
            "We do not assume any ordering on the edges.",
            "And what we want to do is have an algorithm which actually has very limited space and is yet able to compute triangles as it processes the stream one by one.",
            "So here's a small sort of an animation, so triangles info so far is zero, and the graph seen so far is nothing.",
            "So here's the algorithm actually, first observed the first edge and it works with the limited memory it observes."
        ],
        [
            "BC it goes ahead and observes CD AE."
        ],
        [
            "And then it observes Bedian now that."
        ],
        [
            "I got this one, so at this point."
        ],
        [
            "So the reason why I'm walking through this example is because what I want to highlight is that the algorithm is supposed to answer how many triangles are there for the graph it has seen so far.",
            "OK, and the other thing is that they're trying the algorithm cannot store the entire graph that it has seen so far, so an obvious algorithm would be just to store the entire graph which has been seen so far, and then compute triangles on the graph.",
            "But then you go ahead and just."
        ],
        [
            "Extreme over the entire headset."
        ],
        [
            "At any point."
        ],
        [
            "Like at any given stage, you should be able to answer how many triangles are there in the graph seen so far."
        ],
        [
            "I."
        ],
        [
            "And the goal is to do it with limited memory and do it approximately.",
            "So this is."
        ],
        [
            "Result what we do is we prove a theorem which shows that we can have an algorithm which makes a single Passover the stream of edges and where again the stream of it is completely arbitrary ordered and it stores only a very tiny fraction of the entire graph.",
            "In fact it stores only order of square root and edges and it does not even spend too much time while processing each edge.",
            "It spends nearly constant time while processing each edge and can estimate triangle count and transitivity values very accurately.",
            "And so this telling result is based on the analysis of the result is based on the classic Birthday Paradox argument, which I will get into.",
            "So on the practical side, we actually implemented this algorithm."
        ],
        [
            "Plan on variety of graphs that we obtained from SNAP data set, so we found it is pretty accurate and actually has very limited space complexity for many real world graphs.",
            "So for example, on the auto draft which has 200 million edges and .6 billion triangles, are they got some only stores 40,000 edges, which is just 2% of the graph and is able to report triangles pretty accurately up to the relative error of 5%.",
            "And the other thing is, we can also very accurately estimated transitivity of the graph.",
            "So in the figure on the left.",
            "You can see the blue bar is the actual transitivity values and the red bar is what our algorithm reports.",
            "So the X axis is all the various datasets we ran it on, and so you can see all the blue and the red bars are very close to each other and I will show these experiments again once once I go to the experiment section.",
            "And finally, as I mentioned, an important aspect of our algorithm is that it can actually maintain a real time estimate of all the triangles that it has seen so far.",
            "So in fact, as you're streaming through the graph, you can keep out putting a value, and it tracks the triangle count while you're processing through the stream in a real time fashion.",
            "So which I think is.",
            "Interesting.",
            "So now."
        ],
        [
            "How how does that gotta work?",
            "So I'm going to be very brief on how the algorithm works, just in the interest of time.",
            "So first of all, our algorithm has two para meters SC LSW.",
            "So it basically maintains two kind of data structures.",
            "One is the edge reservoir and the other is the wedge razorwire.",
            "So in every other word is basically an array of edges of size SG, and a reservoir is an area of edges of size SSW.",
            "And apart from that, it actually has an array called is closed, which which is a Boolean array which determines whether the weather is closed or not.",
            "Right?",
            "So here's what the algorithm does.",
            "So as as it sees an edge in the stream, it tries to update the researchers.",
            "It basically goes ahead and updates the edges of oil.",
            "It updates the vegvisir oil, and it updates the is closed Boolean array.",
            "And so essentially I mean.",
            "The first update, which it does to the edges or the goal is to maintain a random set of edges of the stream seen so far, and this is actually a very well studied problem and well understood.",
            "So this is this is done using what is called reservoir sampling.",
            "And now the goal is that just from the just on the edges of our one should be able to sample images.",
            "Right, and we we sampled this wages from the edges.",
            "Avoid using a second level of reservoir sampling done on the sample itself.",
            "And finally, when we see this incoming edge, we see whether this incoming edge closes any of the images that we're tracking.",
            "So it just updates.",
            "This is closed values, right?",
            "So that's about the title Gotham.",
            "Without getting into the details of it."
        ],
        [
            "And now the final output is.",
            "We count how many fraction of 1's are there in the is closed array, which which is called P, and then we output this P's estimate for transitivity, multiplied by three and the triangle estimate can also be computed using this value P by multiplying by some normalizing factor.",
            "And so you can see this estimate that we're putting is we're putting at any given time T."
        ],
        [
            "Under what we can prove is that in fact the updates to the edges are what happens very rarely.",
            "So I mean the way reservoir sampling works.",
            "What can actually just go ahead and plug it in and prove that the updates that happened to the edges there is actually lower than the size of the entire stream.",
            "So in fact, even if updates are expensive, you are doing it very, very less often.",
            "And in our case, our updates are nearly constant time."
        ],
        [
            "So the question is, the important question is that you are made in this random pool of Edge reservoir.",
            "And you want to sample wedges from this random polarizer oil?",
            "And why should there even be a single veg in this random pool of edges?",
            "So that that is where we."
        ],
        [
            "Use this classic tool from probability theory, the birthday paradox.",
            "And the intuition is that if you look at a wedge, it's fundamentally a collision between two edges.",
            "So if two edges share the same endpoint, they collide head on, and that is what forms of edge.",
            "And this is what we have seen in what birthday Paradox is all about.",
            "It's all about collisions.",
            "So essentially, if you have K, if you have SP edges.",
            "And they each provide with some probability, and the question is, how many collisions do you observe?",
            "So the birthday Paradox tells us, is that number of collisions that we observe is SY squared times probability of a single collision.",
            "So that's because there are SY squared edges in this graph, it's almost a complete graph on AC edges, right?",
            "And I've got the math we we find that it's enough to take SC to be square root of N in order to get at least one wage.",
            "So that's how we get this square root of N figure in our space bound."
        ],
        [
            "So moving on to the experimental results.",
            "So this is a comparison."
        ],
        [
            "Cotton versus the best previous work in the streaming setting.",
            "By boreal at all.",
            "So so when I say best previous work I mean where they do not assume any arbitrary or do not assume any ordering on the edges.",
            "So the two graphs actually showed results of running these experiments on two different graphs, so the blue line is the previous work, the red line is the actual answer, and the green line is what our paper produces.",
            "So you can see the our our results are actually like it is tracking the true answer very accurately at a very compatible like I have.",
            "Even with very small space, so the X axis is the space used.",
            "So in fact, for web not read me all the way up to 80,000 edges Bull it'll work.",
            "Doesn't even report a single triangle right?",
            "It's only after 80,000 edges at least.",
            "I'm talking about the plot on the left.",
            "It starts reporting triangles.",
            "Whereas we are already tracking the true triangle as low as 30 with 30,000 edges.",
            "And similarly even won an amazing graph, even though bullet all such shrink number of triangles at 30,000 edges and so on.",
            "But it's actually not converging to the right answer because we're actually converging to the right answer fairly quickly."
        ],
        [
            "So in terms of accuracy of transitivity, estimates of this, this is just another algorithm on a laundry list of grass.",
            "All the graphs on the X axis are taken from the SNAP website, and again the blue bar is the exact in the red bar is what our streaming algorithm does, and so all these experiments we ran with the setting of SC to be 20,000 NSW 20,000 so in total we are storing 40,000 edges.",
            "And this is what the results look like.",
            "Again, they're all very very close to each other."
        ],
        [
            "And finally, on the accuracy of triangle ground.",
            "So this is again got some with 40,000 edges on all these graphs and the Y axis is the relative error.",
            "And so we see for most of the graphs we are well within 5% and well within 8% and only for a particular roughly the book book Stand graph above 8%.",
            "But that's because.",
            "Is actually very low transitivity value, so if the transitivity value is very low, the relative error goes high in our algorithm.",
            "And."
        ],
        [
            "So we also ran out and got them by varying the amount of which number of edges that we store in order to see how much it concentrates.",
            "And we also very various size and we observe that as we increase the space, our results gets closer and closer to the true answer."
        ],
        [
            "So that's about it.",
            "So in terms of future work, the question is so.",
            "Now we have a space.",
            "We have an algorithm to compute triangle count with space as low as square root N question is can we even go below square root in and is there an inherent limitation in terms of lower bound which says that you cannot go below square root and right?",
            "So the other question is that in this setting we do not.",
            "We do not handle edge deletions.",
            "The only thing we assume is that the edges are being inserted in the graph.",
            "So can we.",
            "Can we do triangle count even with edge deletions?",
            "And finally, a more challenging problem is to actually estimate transitivity values.",
            "Or the clustering coefficient as a degree wise function.",
            "So can you can can we actually maintain this sketch as we stream to the graph as as a?",
            "Per degree instead of like global clustering coefficient, thanks."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Yeah, so this is joint work with seasonally Pinar and so this was done while I was interning at Sandia National Labs.",
                    "label": 0
                },
                {
                    "sent": "And now I'm back to Sandia National Labs as opposed or so.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So let me start with a real world example graph that probably we're all familiar with the Co authorship graph.",
                    "label": 0
                },
                {
                    "sent": "So the nodes are researchers and there's an edge if two researchers coauthor a paper together, right?",
                    "label": 0
                },
                {
                    "sent": "And so a typical feature of this graph is that these graphs tend to have a lot of triangles.",
                    "label": 0
                },
                {
                    "sent": "So in fact, our work ended up adding one triangle count to this graph.",
                    "label": 0
                },
                {
                    "sent": "So I mean, as a more real world example, if you look at the quarter ship graph of high energy physics taken from the SNAP website, it has all the way, like as high as three 3.35 million triangles.",
                    "label": 0
                },
                {
                    "sent": "And so.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "This is a general comment, So what we see is we see graphs everywhere.",
                    "label": 0
                },
                {
                    "sent": "In real world we have these graphs where web pages linked to each other.",
                    "label": 0
                },
                {
                    "sent": "We have a graph in the form of social networks, the citation graph, the Co authorship graph and important point.",
                    "label": 0
                },
                {
                    "sent": "I want to say that in many of these real world graphs, one of the things that we observe is that they have lots of lots of triangles alright.",
                    "label": 1
                },
                {
                    "sent": "So these are some examples of graphs taken from against app website.",
                    "label": 0
                },
                {
                    "sent": "The first one is the.",
                    "label": 0
                },
                {
                    "sent": "The hyperlink graph, the second one is the social network or code graph.",
                    "label": 0
                },
                {
                    "sent": "The third one is the graph of coauthorship network and the 4th one is the citation network graph.",
                    "label": 0
                },
                {
                    "sent": "So, so in all this stuff, we're actually very interested in counting triangles, right?",
                    "label": 0
                },
                {
                    "sent": "But but actually, one thing to note is that this.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And also actually vary a lot in terms of number of edges, right?",
                    "label": 0
                },
                {
                    "sent": "So how do you compare triangles in these graphs?",
                    "label": 0
                },
                {
                    "sent": "So one interesting parameter that has been studied is it is it triangle density, which is called transitivity.",
                    "label": 1
                },
                {
                    "sent": "So to understand that, let's look at this graph and we define what is called a wedge, which is basically a length two path.",
                    "label": 0
                },
                {
                    "sent": "So a wedge is essentially something which can potentially form a triangle, but it need not, right?",
                    "label": 1
                },
                {
                    "sent": "So for example.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "In this graph, BCD is a veg and emgs of edge.",
                    "label": 0
                },
                {
                    "sent": "Whereas busy.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "In fact, forms a triangle.",
                    "label": 0
                },
                {
                    "sent": "EFG is in fact an open wage, right?",
                    "label": 1
                },
                {
                    "sent": "And they translated the quantity?",
                    "label": 0
                },
                {
                    "sent": "Kind of quantify is that it says it is basically three times the number of triangles divided by total number of edges.",
                    "label": 0
                },
                {
                    "sent": "Or in other words, how many which is in the graph are closed.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And again, one of the things that you'd observe in real world graphs is that most real world graphs have very high transitivity values.",
                    "label": 0
                },
                {
                    "sent": "And so.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The world was shattered by not including 2013, which tries to estimate this quantity transitivity in a sampling setting where you have access to the entire graph and the question is, can we do it in the streaming setting?",
                    "label": 0
                },
                {
                    "sent": "So in fact the starting point of our work was based on the algorithm by Seshadri Pinard in colder.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So one question is, why do we?",
                    "label": 0
                },
                {
                    "sent": "Why are we interested in counting triangles and us in the 1st place?",
                    "label": 0
                },
                {
                    "sent": "And I think the answer is like it's been.",
                    "label": 0
                },
                {
                    "sent": "It's been applied in many different areas, from social science to all the way to finding topics in World Wide Web, to anomaly detection and things like that, even in graph models.",
                    "label": 0
                },
                {
                    "sent": "And it's also very well studied even in the streaming setting.",
                    "label": 0
                },
                {
                    "sent": "So let me.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Let me motivate why?",
                    "label": 0
                },
                {
                    "sent": "Why are we interested in studying counting triangles and on the streaming setting?",
                    "label": 1
                },
                {
                    "sent": "So I want to say that lot of graphs that we observe in practice actually occur with the natural timestamp or we see one edge at a time.",
                    "label": 1
                },
                {
                    "sent": "So for example, on a Facebook network you know you could see somebody became a friend at some particular time stamp and then you would see another edge being formed between between another two friends, and so on and so forth.",
                    "label": 0
                },
                {
                    "sent": "So naturally we see an edge actually appears with a particular timestamp and we're interested in finding out how many.",
                    "label": 0
                },
                {
                    "sent": "A friend of friends are friends, right?",
                    "label": 0
                },
                {
                    "sent": "That kind of queries.",
                    "label": 0
                },
                {
                    "sent": "So how many triangles are there?",
                    "label": 0
                },
                {
                    "sent": "If you observe one edge at a time?",
                    "label": 0
                },
                {
                    "sent": "So more to the point.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We are given a stream of edges OK, and these edges are completely arbitrarily ordered.",
                    "label": 1
                },
                {
                    "sent": "We do not assume any ordering on the edges.",
                    "label": 0
                },
                {
                    "sent": "And what we want to do is have an algorithm which actually has very limited space and is yet able to compute triangles as it processes the stream one by one.",
                    "label": 0
                },
                {
                    "sent": "So here's a small sort of an animation, so triangles info so far is zero, and the graph seen so far is nothing.",
                    "label": 1
                },
                {
                    "sent": "So here's the algorithm actually, first observed the first edge and it works with the limited memory it observes.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "BC it goes ahead and observes CD AE.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And then it observes Bedian now that.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I got this one, so at this point.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So the reason why I'm walking through this example is because what I want to highlight is that the algorithm is supposed to answer how many triangles are there for the graph it has seen so far.",
                    "label": 0
                },
                {
                    "sent": "OK, and the other thing is that they're trying the algorithm cannot store the entire graph that it has seen so far, so an obvious algorithm would be just to store the entire graph which has been seen so far, and then compute triangles on the graph.",
                    "label": 1
                },
                {
                    "sent": "But then you go ahead and just.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Extreme over the entire headset.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "At any point.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Like at any given stage, you should be able to answer how many triangles are there in the graph seen so far.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": []
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And the goal is to do it with limited memory and do it approximately.",
                    "label": 0
                },
                {
                    "sent": "So this is.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Result what we do is we prove a theorem which shows that we can have an algorithm which makes a single Passover the stream of edges and where again the stream of it is completely arbitrary ordered and it stores only a very tiny fraction of the entire graph.",
                    "label": 0
                },
                {
                    "sent": "In fact it stores only order of square root and edges and it does not even spend too much time while processing each edge.",
                    "label": 0
                },
                {
                    "sent": "It spends nearly constant time while processing each edge and can estimate triangle count and transitivity values very accurately.",
                    "label": 1
                },
                {
                    "sent": "And so this telling result is based on the analysis of the result is based on the classic Birthday Paradox argument, which I will get into.",
                    "label": 1
                },
                {
                    "sent": "So on the practical side, we actually implemented this algorithm.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Plan on variety of graphs that we obtained from SNAP data set, so we found it is pretty accurate and actually has very limited space complexity for many real world graphs.",
                    "label": 0
                },
                {
                    "sent": "So for example, on the auto draft which has 200 million edges and .6 billion triangles, are they got some only stores 40,000 edges, which is just 2% of the graph and is able to report triangles pretty accurately up to the relative error of 5%.",
                    "label": 1
                },
                {
                    "sent": "And the other thing is, we can also very accurately estimated transitivity of the graph.",
                    "label": 0
                },
                {
                    "sent": "So in the figure on the left.",
                    "label": 1
                },
                {
                    "sent": "You can see the blue bar is the actual transitivity values and the red bar is what our algorithm reports.",
                    "label": 0
                },
                {
                    "sent": "So the X axis is all the various datasets we ran it on, and so you can see all the blue and the red bars are very close to each other and I will show these experiments again once once I go to the experiment section.",
                    "label": 0
                },
                {
                    "sent": "And finally, as I mentioned, an important aspect of our algorithm is that it can actually maintain a real time estimate of all the triangles that it has seen so far.",
                    "label": 0
                },
                {
                    "sent": "So in fact, as you're streaming through the graph, you can keep out putting a value, and it tracks the triangle count while you're processing through the stream in a real time fashion.",
                    "label": 0
                },
                {
                    "sent": "So which I think is.",
                    "label": 0
                },
                {
                    "sent": "Interesting.",
                    "label": 0
                },
                {
                    "sent": "So now.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "How how does that gotta work?",
                    "label": 0
                },
                {
                    "sent": "So I'm going to be very brief on how the algorithm works, just in the interest of time.",
                    "label": 0
                },
                {
                    "sent": "So first of all, our algorithm has two para meters SC LSW.",
                    "label": 0
                },
                {
                    "sent": "So it basically maintains two kind of data structures.",
                    "label": 0
                },
                {
                    "sent": "One is the edge reservoir and the other is the wedge razorwire.",
                    "label": 0
                },
                {
                    "sent": "So in every other word is basically an array of edges of size SG, and a reservoir is an area of edges of size SSW.",
                    "label": 1
                },
                {
                    "sent": "And apart from that, it actually has an array called is closed, which which is a Boolean array which determines whether the weather is closed or not.",
                    "label": 0
                },
                {
                    "sent": "Right?",
                    "label": 0
                },
                {
                    "sent": "So here's what the algorithm does.",
                    "label": 0
                },
                {
                    "sent": "So as as it sees an edge in the stream, it tries to update the researchers.",
                    "label": 0
                },
                {
                    "sent": "It basically goes ahead and updates the edges of oil.",
                    "label": 0
                },
                {
                    "sent": "It updates the vegvisir oil, and it updates the is closed Boolean array.",
                    "label": 0
                },
                {
                    "sent": "And so essentially I mean.",
                    "label": 0
                },
                {
                    "sent": "The first update, which it does to the edges or the goal is to maintain a random set of edges of the stream seen so far, and this is actually a very well studied problem and well understood.",
                    "label": 0
                },
                {
                    "sent": "So this is this is done using what is called reservoir sampling.",
                    "label": 0
                },
                {
                    "sent": "And now the goal is that just from the just on the edges of our one should be able to sample images.",
                    "label": 0
                },
                {
                    "sent": "Right, and we we sampled this wages from the edges.",
                    "label": 0
                },
                {
                    "sent": "Avoid using a second level of reservoir sampling done on the sample itself.",
                    "label": 0
                },
                {
                    "sent": "And finally, when we see this incoming edge, we see whether this incoming edge closes any of the images that we're tracking.",
                    "label": 0
                },
                {
                    "sent": "So it just updates.",
                    "label": 0
                },
                {
                    "sent": "This is closed values, right?",
                    "label": 0
                },
                {
                    "sent": "So that's about the title Gotham.",
                    "label": 0
                },
                {
                    "sent": "Without getting into the details of it.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And now the final output is.",
                    "label": 0
                },
                {
                    "sent": "We count how many fraction of 1's are there in the is closed array, which which is called P, and then we output this P's estimate for transitivity, multiplied by three and the triangle estimate can also be computed using this value P by multiplying by some normalizing factor.",
                    "label": 0
                },
                {
                    "sent": "And so you can see this estimate that we're putting is we're putting at any given time T.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Under what we can prove is that in fact the updates to the edges are what happens very rarely.",
                    "label": 1
                },
                {
                    "sent": "So I mean the way reservoir sampling works.",
                    "label": 0
                },
                {
                    "sent": "What can actually just go ahead and plug it in and prove that the updates that happened to the edges there is actually lower than the size of the entire stream.",
                    "label": 0
                },
                {
                    "sent": "So in fact, even if updates are expensive, you are doing it very, very less often.",
                    "label": 0
                },
                {
                    "sent": "And in our case, our updates are nearly constant time.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So the question is, the important question is that you are made in this random pool of Edge reservoir.",
                    "label": 0
                },
                {
                    "sent": "And you want to sample wedges from this random polarizer oil?",
                    "label": 0
                },
                {
                    "sent": "And why should there even be a single veg in this random pool of edges?",
                    "label": 1
                },
                {
                    "sent": "So that that is where we.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Use this classic tool from probability theory, the birthday paradox.",
                    "label": 0
                },
                {
                    "sent": "And the intuition is that if you look at a wedge, it's fundamentally a collision between two edges.",
                    "label": 1
                },
                {
                    "sent": "So if two edges share the same endpoint, they collide head on, and that is what forms of edge.",
                    "label": 0
                },
                {
                    "sent": "And this is what we have seen in what birthday Paradox is all about.",
                    "label": 0
                },
                {
                    "sent": "It's all about collisions.",
                    "label": 0
                },
                {
                    "sent": "So essentially, if you have K, if you have SP edges.",
                    "label": 0
                },
                {
                    "sent": "And they each provide with some probability, and the question is, how many collisions do you observe?",
                    "label": 1
                },
                {
                    "sent": "So the birthday Paradox tells us, is that number of collisions that we observe is SY squared times probability of a single collision.",
                    "label": 0
                },
                {
                    "sent": "So that's because there are SY squared edges in this graph, it's almost a complete graph on AC edges, right?",
                    "label": 0
                },
                {
                    "sent": "And I've got the math we we find that it's enough to take SC to be square root of N in order to get at least one wage.",
                    "label": 0
                },
                {
                    "sent": "So that's how we get this square root of N figure in our space bound.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So moving on to the experimental results.",
                    "label": 0
                },
                {
                    "sent": "So this is a comparison.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Cotton versus the best previous work in the streaming setting.",
                    "label": 0
                },
                {
                    "sent": "By boreal at all.",
                    "label": 0
                },
                {
                    "sent": "So so when I say best previous work I mean where they do not assume any arbitrary or do not assume any ordering on the edges.",
                    "label": 0
                },
                {
                    "sent": "So the two graphs actually showed results of running these experiments on two different graphs, so the blue line is the previous work, the red line is the actual answer, and the green line is what our paper produces.",
                    "label": 0
                },
                {
                    "sent": "So you can see the our our results are actually like it is tracking the true answer very accurately at a very compatible like I have.",
                    "label": 0
                },
                {
                    "sent": "Even with very small space, so the X axis is the space used.",
                    "label": 0
                },
                {
                    "sent": "So in fact, for web not read me all the way up to 80,000 edges Bull it'll work.",
                    "label": 0
                },
                {
                    "sent": "Doesn't even report a single triangle right?",
                    "label": 0
                },
                {
                    "sent": "It's only after 80,000 edges at least.",
                    "label": 0
                },
                {
                    "sent": "I'm talking about the plot on the left.",
                    "label": 0
                },
                {
                    "sent": "It starts reporting triangles.",
                    "label": 0
                },
                {
                    "sent": "Whereas we are already tracking the true triangle as low as 30 with 30,000 edges.",
                    "label": 0
                },
                {
                    "sent": "And similarly even won an amazing graph, even though bullet all such shrink number of triangles at 30,000 edges and so on.",
                    "label": 0
                },
                {
                    "sent": "But it's actually not converging to the right answer because we're actually converging to the right answer fairly quickly.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So in terms of accuracy of transitivity, estimates of this, this is just another algorithm on a laundry list of grass.",
                    "label": 0
                },
                {
                    "sent": "All the graphs on the X axis are taken from the SNAP website, and again the blue bar is the exact in the red bar is what our streaming algorithm does, and so all these experiments we ran with the setting of SC to be 20,000 NSW 20,000 so in total we are storing 40,000 edges.",
                    "label": 0
                },
                {
                    "sent": "And this is what the results look like.",
                    "label": 0
                },
                {
                    "sent": "Again, they're all very very close to each other.",
                    "label": 0
                }
            ]
        },
        "clip_31": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And finally, on the accuracy of triangle ground.",
                    "label": 1
                },
                {
                    "sent": "So this is again got some with 40,000 edges on all these graphs and the Y axis is the relative error.",
                    "label": 0
                },
                {
                    "sent": "And so we see for most of the graphs we are well within 5% and well within 8% and only for a particular roughly the book book Stand graph above 8%.",
                    "label": 0
                },
                {
                    "sent": "But that's because.",
                    "label": 0
                },
                {
                    "sent": "Is actually very low transitivity value, so if the transitivity value is very low, the relative error goes high in our algorithm.",
                    "label": 1
                },
                {
                    "sent": "And.",
                    "label": 0
                }
            ]
        },
        "clip_32": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So we also ran out and got them by varying the amount of which number of edges that we store in order to see how much it concentrates.",
                    "label": 0
                },
                {
                    "sent": "And we also very various size and we observe that as we increase the space, our results gets closer and closer to the true answer.",
                    "label": 0
                }
            ]
        },
        "clip_33": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So that's about it.",
                    "label": 0
                },
                {
                    "sent": "So in terms of future work, the question is so.",
                    "label": 0
                },
                {
                    "sent": "Now we have a space.",
                    "label": 0
                },
                {
                    "sent": "We have an algorithm to compute triangle count with space as low as square root N question is can we even go below square root in and is there an inherent limitation in terms of lower bound which says that you cannot go below square root and right?",
                    "label": 1
                },
                {
                    "sent": "So the other question is that in this setting we do not.",
                    "label": 1
                },
                {
                    "sent": "We do not handle edge deletions.",
                    "label": 0
                },
                {
                    "sent": "The only thing we assume is that the edges are being inserted in the graph.",
                    "label": 1
                },
                {
                    "sent": "So can we.",
                    "label": 0
                },
                {
                    "sent": "Can we do triangle count even with edge deletions?",
                    "label": 0
                },
                {
                    "sent": "And finally, a more challenging problem is to actually estimate transitivity values.",
                    "label": 0
                },
                {
                    "sent": "Or the clustering coefficient as a degree wise function.",
                    "label": 0
                },
                {
                    "sent": "So can you can can we actually maintain this sketch as we stream to the graph as as a?",
                    "label": 0
                },
                {
                    "sent": "Per degree instead of like global clustering coefficient, thanks.",
                    "label": 0
                }
            ]
        }
    }
}