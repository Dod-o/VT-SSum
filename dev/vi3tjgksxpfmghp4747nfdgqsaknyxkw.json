{
    "id": "vi3tjgksxpfmghp4747nfdgqsaknyxkw",
    "title": "NSPARQL: A Navigational Language for RDF",
    "info": {
        "author": [
            "Jorge P\u00e9rez, Pontificia Universidad Cat\u00f3lica de Chile"
        ],
        "published": "Nov. 24, 2008",
        "recorded": "October 2008",
        "category": [
            "Top->Computer Science->Semantic Web->RDF - Resource Description Framework"
        ]
    },
    "url": "http://videolectures.net/iswc08_perez_nsparql/",
    "segmentation": [
        [
            "It has been largely recognized that navigational features are fundamental for querying graph databases, and RDF is not exception.",
            "Then we start with an example.",
            "Here we have an RDF graph that stores information about cities and transportation services between this series.",
            "For example this triple here, state that there is a sea France service from Calais to Dover and we also have some RDF sanitations.",
            "We're using SP to the node.",
            "This sub property relationship.",
            "And for example here we have that seafrance services as a property of a ferry service.",
            "So from the RDF semantics we can infer that there is a ferry service from Calais to Dover.",
            "We can also infer that there is a general transportation service from Calais to Dover.",
            "Suppose that we have to.",
            "We want to answer the following question."
        ],
        [
            "Ask whether Paris and castings are connected by a sequence of transportation services, but we don't know in which transportation service provides each connection so."
        ],
        [
            "Can answer this question but by checking the existence of a path in the graph from Paris to hustings such that each edge on that path is."
        ],
        [
            "Elected with transport by a sequence of."
        ],
        [
            "Property relation"
        ],
        [
            "She.",
            "For example, here we have the DGV sub property of the General Transportation Service and then we know that there is a general transportation service for Paris to Cali General Transportation Service from Calais to Dover, from Dover to passing, and then we answered yes to our question, so it would it would be desirable to have a navigational language capable to answer this kind of queries by navigating the graph.",
            "The."
        ],
        [
            "Empower papers in this particular navigation language for RDF and in this work we propose such a navigational language for RDF that is capable to answer this kind of queries.",
            "My name is Kasha Paris and this is joint work with Marcel Arenas and Cloudy with yours."
        ],
        [
            "So the main contribution of our work is that we define a navigational language for RDF.",
            "The language of nested regular expressions, and we show that it can be efficiently evaluated with, which is a very important property.",
            "We want to use this language in."
        ],
        [
            "Just a second step incorporated features in the standard language of for querying.",
            "RDF is parcial.",
            "We showed that the language obtained language can express interesting RDF queries and we still the expressiveness of the obtain."
        ],
        [
            "Language.",
            "The rest of the talk I will talk first about nested regular expressions, syntax and semantics and complexity and then about tennis, parcial, syntax and semantics, or defense evaluation.",
            "Expressing that, and will finish with some concluding."
        ],
        [
            "Box."
        ],
        [
            "The building blocks for for nested regular expression navigational access and this idea that we borrow from the expat query language with it.",
            "With expat we can follow some axis to navigate an XML document.",
            "For example, the child axis.",
            "The Parataxis are sibling axis.",
            "Here we have in our context we have RDF graphs and they are not standard graph since the label of an edge could also be acting as a. Node in the graph.",
            "So here we have three different access.",
            "The most natural acts."
        ],
        [
            "This is the one that allows to navigate from the subject to the object of a triple.",
            "There is the next axis."
        ],
        [
            "We also consider the edge axis to navigate from this subject."
        ],
        [
            "Predicate of a triple and the node access to navigate from the predicate to the object of."
        ],
        [
            "We also considered the inverse axis."
        ],
        [
            "And an additional cell fax is not to actually navigate, but to test some to check some properties about nodes they."
        ],
        [
            "Is that a sequence of this axis defines a path in an RDF graph.",
            "For example, in this graph here."
        ],
        [
            "We can go from A1 to a two way following."
        ],
        [
            "Text and then."
        ],
        [
            "Do a three following next.",
            "Again we can stay."
        ],
        [
            "Three following self and jump to P3 following."
        ],
        [
            "Then next to before."
        ],
        [
            "Or next to the minus one."
        ],
        [
            "Want to be 5 and finally no to a 6 and then in this graph A1A6 are connected by following this sequence of access.",
            "The ideas that we can also use regular expression over this axis and some other features to define path in RDF graph."
        ],
        [
            "That's what we call nested regular expression and the syntax of necessary will expression is given by the following grammar."
        ],
        [
            "We kept that an expression could be in axis."
        ],
        [
            "And in conditional access that could be self next set node or the inverses of this axe."
        ],
        [
            "We can also have a conditional access that is an axis followed by an AI."
        ],
        [
            "Be with me so you are I."
        ],
        [
            "We can also have regular expression over this axis and."
        ],
        [
            "An additional construction construction that is an axis with an expression in squared."
        ],
        [
            "And that's what we call an nesting expression."
        ],
        [
            "The evaluation of one of these expression is giving us followed evaluation of an expression is a set of pairs AB of nodes such that B is reachable from a by following."
        ],
        [
            "The expression, for example this triple.",
            "Here we can go from the subject A to the."
        ],
        [
            "Object B by following the conditional axis.",
            "Next P if and only if P is the predicate of the trip."
        ],
        [
            "He"
        ],
        [
            "So we will say that the Fairy B is in the evaluation of the expression."
        ],
        [
            "P. You will have a sequence of peace."
        ],
        [
            "Just we can go from A to B by following a sequence of next P edges."
        ],
        [
            "The axis and then we say that baby is in the evaluation of next piece."
        ],
        [
            "Star.",
            "Again, the same triple we can go from.",
            "The."
        ],
        [
            "Subject to the predicate of this triple, by following at HB Axis."
        ],
        [
            "Here we can go if and only if the object is labeled P."
        ],
        [
            "We will say that a piece in the valuation of HB."
        ],
        [
            "Access we have more."
        ],
        [
            "Note here we can go from P2C following the sequence of next R axis and then we can say that the pair AC is in the evaluation of the expression HB concatenated with expression next R."
        ],
        [
            "R. The formal evaluation of side of one of the expression is followed.",
            "Evaluation of expression over an RDF graph G denoted by this symbol.",
            "Here is the final recursively as a binary relation.",
            "I will show you some of the formal definition here you can check."
        ],
        [
            "The others in the paper, for example for the unconditional self access, weaken the valuation of self is the reflexive pairs."
        ],
        [
            "The devaluation of the unconditional Nexus Depere 6 Y for which there exists a set such excess."
        ],
        [
            "And why isn't the graph?",
            "For the conditional self, a axis we have only deeper AA for the next a axis we have the pair X&Y, such that X ay."
        ],
        [
            "Using the graph, for example, for the concatenation of two expression, we have all the pair 6 Y for which there exists a set such that we can go from X to set following the expression one from set to.",
            "Why following expression 2?"
        ],
        [
            "For disjunction of two expression, we just take the sector ethical Union of that evaluation."
        ],
        [
            "For the start of an expression, we take the Union of the evaluation of self expression expression with coordinated with the self expression coordinated with self."
        ],
        [
            "Three times and etc.",
            "And as you can, you can see the other Tiffany."
        ],
        [
            "Instapaper as it's customary for regular expression.",
            "We use expression plastered in node expression coordinated with expressions."
        ],
        [
            "For the nesting construction for the nesting expressions, ideas and nesting allows for substantial checking.",
            "Innopath intuition is that considered.",
            "For example, the expression next.",
            "Next access next with expression is square bracket.",
            "It navigates from a node A to a node B if the A&B are connected with an X that satisfies the condition given by the expression, for example."
        ],
        [
            "This triple here we have a B.",
            "And we have that the the edge is connected with another node by following it."
        ],
        [
            "Operation X then we will say that we can go from A to B following."
        ],
        [
            "The Axis next with expression in square brackets."
        ],
        [
            "Then formally will say that a BS in devaluation of next X."
        ],
        [
            "We can combine this nesting suppression."
        ],
        [
            "The other expression and for example.",
            "In this case we have that we can go from C to D."
        ],
        [
            "See to the CD the pair of CDs in the evaluation of the expression.",
            "Next P concatenated with next with expression in square bracket concatenated with next Q."
        ],
        [
            "The devaluation you can see the valuation of all this pressure."
        ],
        [
            "In the paper I will show you."
        ],
        [
            "Here's some exam."
        ],
        [
            "For example, for the formal evaluation of the axes self with X in square bracket, is the pairs of nodes XX such that there exists a set.",
            "That we can reach from X following the expression in a square bracket."
        ],
        [
            "For next with expression in square bracket we have the pair 6 Y such that there exist two values save on doubleview such that X said Y isn't the graph and we can go from set to double view following expression."
        ],
        [
            "Earth."
        ],
        [
            "Never, salts is about the complexity of evaluating this expr."
        ],
        [
            "Action.",
            "And 1st to study the complexity, we first defined evaluation program for regular expressions.",
            "As is customary in the in the database literature, we considered the associated decision problem.",
            "For this problem we have, we have as an input and RDF graph nested regular expression."
        ],
        [
            "A pair of element TV and the question is to test whether IBS in the valuation of."
        ],
        [
            "Expression over the graph."
        ],
        [
            "And I would result in the paper states that the problem, the devaluation problem for nested regular expression can be decided in linear time.",
            "More formally, given an interval expression and RDF graph G testing whether operate bees and evaluation of the expression over the graph can be done in time proportional to the size of the graph.",
            "Times the size of the expression."
        ],
        [
            "In the paper, we provide an algorithm that is in the style of temporal law."
        ],
        [
            "In the algorithm, first recursively considered the next Excel expression."
        ],
        [
            "Open expression within Mark the notes in the graph according to what subexpression they satisfy and find."
        ],
        [
            "I would check if B is reachable from high a following expression and we check with EV Israel from a following description using this mark that we put in the."
        ],
        [
            "And all can be done in linear."
        ],
        [
            "Time and let's take a closer look at the algorithm.",
            "Consider this expression here."
        ],
        [
            "It has two nested sum expression."
        ],
        [
            "The first Alpha beta.",
            "We named them."
        ],
        [
            "Open beta.",
            "Domestic service Pression Alpha is satisfied by all the notes that follows a sequence of next Q axis.",
            "Followed by a final self see Axis.",
            "If we look at."
        ],
        [
            "The graph, these are the notes that satisfy this express."
        ],
        [
            "And then we can mark all them with."
        ],
        [
            "Alpha for."
        ],
        [
            "The expression beta.",
            "We have all the notes that follows a sequence of next R. Access and."
        ],
        [
            "Final self, the axis and these are the notes that follow."
        ],
        [
            "Expression in the graph and we can mark."
        ],
        [
            "Hold them with beta.",
            "Fine."
        ],
        [
            "We will consider again the 1st.",
            "Next expression and replaced with.",
            "Replace the next."
        ],
        [
            "So expression with Alpha beta to obtain this new expression here next Alpha followed by a sequence of next PETA we can test."
        ],
        [
            "This expression over the graph in this case, for example A&BR and evaluation of the initial expression.",
            "We show in the paper that we can mark all the notes, images step in linear time by using some automata theory techniques.",
            "You can see that."
        ],
        [
            "Sales in the paper.",
            "Let me talk about now."
        ],
        [
            "Jewel.",
            "First we use the algebraic formalization of the syntax and semantics particule.",
            "We use triples and to the conjunction of spiritual patterns we use off for optional union filter.",
            "All these are binary."
        ],
        [
            "Operators, for example here this query.",
            "This pattern is retrieving the resource with name John and its email."
        ],
        [
            "The language we proposed in sparkle for navigational sparkle is composed by nested regular expression triple nested regular expression triple is a triple of this form with X in the subject, an expression and then Y with X and nested regular expression X&Y are variables and could also be your eyes."
        ],
        [
            "And then, and in this particular pattern, is simply a set of nested regular expression triples combined by using sparkle operators.",
            "An optional union filter."
        ],
        [
            "For example, this query here is retrieving is an NS particular pattern that is retreiving exactly the same information as the pattern."
        ],
        [
            "The last slide.",
            "For the semantics given RDF truck G, we say that the mapping that gives value a 2X and B2Y is in the evaluation of this triple if and only if the pair a B is in the evaluation of the nested regular expression.",
            "And the semantics for the other operators is inherit from the semantics of this particular semantics of and of union and filter."
        ],
        [
            "It should be noticed that since we have.",
            "Shown that nested regular expression can be evaluated in linear time.",
            "Necessary well expression do not add extra complexities with the language, that is any sparkle fragment in here.",
            "It's the complexity of the corresponding sparkles fragment.",
            "For example, the filter fragment of sparkle has linear time complexity and then the and filter fragment of North Park UL has also linear time complexity."
        ],
        [
            "Let me show some example.",
            "Consider the graph similar to the graph in the."
        ],
        [
            "First slide.",
            "And the following any sparkle pattern."
        ],
        [
            "The first table is retrieving the cities that are connected with over by a sequence of either TV or."
        ],
        [
            "Different services in the graph we have Paris and Calais."
        ],
        [
            "The second triple is retrieving the series under."
        ],
        [
            "Countries and here we all will have power."
        ],
        [
            "In France and then.",
            "We have that the single evaluation single mapping that that satisfies this pattern is the mapping that gives Paris, but your Paris 2 XL."
        ],
        [
            "France 2 way.",
            "Consider a little more complex example.",
            "Here we have a nested."
        ],
        [
            "Expression triple consider the domestic construction inside it is certified by the notes that follows a sequence of next SP access and a final self transport access."
        ],
        [
            "And then, for example, an express satisfies this expression."
        ],
        [
            "And then we can go from Dover to casting follow following the whole nested regular expression and then for this spark."
        ],
        [
            "Pattern we have that X Dover, the mapping that give valued over 2X is in using the valuation."
        ],
        [
            "Consider a similar pattern, but this time put in a applus here.",
            "Then to evaluate this pattern, we can follow the same idea that we follow already."
        ],
        [
            "Just pardon, for example, TV follows a path of next SP access to to our final self transport."
        ],
        [
            "Axis and then we can go from Paris to Calais, following."
        ],
        [
            "This expression we can go from Calais to Dover following this ixpress."
        ],
        [
            "I wanna go from Dover too fast."
        ],
        [
            "Following this expression and then we can devaluate."
        ],
        [
            "This pattern is a set of three mappings.",
            "First mapping that gives value."
        ],
        [
            "This 2X another mapping that gives value colored 2X and a final mapping that gives valued over to Kelly that is within a spark.",
            "Will we have a language that is capable to answer our initial query in the first slide our motivating query.",
            "It also should be noted that that.",
            "In this nest expression here is somehow simulating an RDF's inference, and this is not an accident.",
            "We designed the language in order to be able to simulate some RDF's inference limit."
        ],
        [
            "Talk about this now.",
            "For the defense to formalize."
        ],
        [
            "DFS evaluation of a pattern.",
            "We use the closure.",
            "We first consider just a subfragment of the vocabulary of our DFS defragment, composed by sub property, subclass, domain range and type, and we consider it semantics.",
            "We are deductive rules.",
            "Then the closure of T is the graph obtained by applying the rules to exhaustion.",
            "That is, the graph obtained by applying the rules until the until the graph does not change."
        ],
        [
            "And with this definition of closure, it's very simple to define the RDS evaluation of a pattern given a standard sparkle pattern P. It's our DFS evaluation over a graph.",
            "G is just the usual evaluation of P over the closure of E. There is to obtain the RDS evaluation, we first compute the closure, and then we evaluate the pattern over the closure."
        ],
        [
            "Our first result in this respect it does any sparkle is enough for RDF evaluation of the standard sparkle queries.",
            "More precisely given as part of a standard sparkled triple T of the form XAY.",
            "There exists on any spark you'll triple R of the Form XA function of A and Y such that the RDF's evaluation of T can be obtained by direct reevaluating R over the input graph.",
            "That is, we can obtain the RDF evaluation of a standard sparkle tripled.",
            "By navigating the graph without computing the."
        ],
        [
            "Sure.",
            "And the idea of the proof is just we just have to to translate every possible predicate into a nested regular expression.",
            "For example, the translation of the predicate subclass is just to use the nested regular expression next subclass.",
            "Plus you can.",
            "You can see all the translations in the paper.",
            "We have already seen that the translation of value that is not in the vocabulary is with this expression here.",
            "And just let me let me say that the translation of type uses.",
            "It just uses Axis next edge and node to the minus one."
        ],
        [
            "So as a corollary, we obtain that given a sparkle pattern, a standard sparkle pattern P we can translate it into an in sparkle pattern Q such that the RDF evaluation of P can be obtained by direct evaluating Q over the input graph and you can check the details in the paper."
        ],
        [
            "The idea is we just have to rewrite every triple of P. Another question is whether we can obtain this last result without using all the power of nested regular expression.",
            "For example, can we obtain this result by using only regular expression and not the nesting construction?",
            "Let our spark will be the fragment of any sparkle obtained by forbidding nesting expression.",
            "That is, we use only usual regular expr."
        ],
        [
            "Action over the axis.",
            "Then we have the following proposition, the RDF evaluation of this park will triple the standard Spark will triple pattern X ay cannot be obtained with any any Earth sparkwell pattern.",
            "That is our sparkled usual regular expression are not enough in our context."
        ],
        [
            "A final question is whether what is the relative complexity?",
            "Sorry, the relative expressive between nested level expression and this park will operators and we show in the paper that nested regular expression and sparkle operators are complementary.",
            "It is evident that in this particular lab, expressive power to sparkle things.",
            "For example, in this part well we can.",
            "We can query path of arbitrary length that can be done in sparkle.",
            "So what about the opposite that do?"
        ],
        [
            "We do this park.",
            "Will operators have extra expressive power to the sparkle expression?",
            "It could be the case that that these Parkville operators can be simulated somehow using nested regular expressions.",
            "And we show in."
        ],
        [
            "Paper that sparkle operators to add expressive power to any sparkle expression.",
            "More precisely, we show that there is an inner sparkle pattern that is not equivalent to any any sparkle pattern that does not use OPT.",
            "The optional operator there is optional operator plus nested regular expression gives give extra expressing it to the language that is, by combining necessarily expression and the sparkle operators we obtain an expressive query."
        ],
        [
            "Language for RDF.",
            "So for the concluding remarks."
        ],
        [
            "We have proposed nested level of expression as a natural language to navigate through an RDF graph.",
            "It has low complexity evaluation.",
            "We can evaluate this language in linear time.",
            "We incorporate these features to any sparkle.",
            "An expert will combines the power of sparkle operators and nested regular expressions.",
            "We showed that that some are DFS evaluation can be done by just reversing the input graph without computing the closure, and this obtained language allow expressing natural queries."
        ],
        [
            "Thanks for your attention.",
            "You avoided to have, so you have an X axis, but you don't have a previous axis.",
            "OK, you could have the reverse axis.",
            "This is very simple.",
            "So is it because it will complexify the algorithm on simple patterns?",
            "Or is it because you can rewrite any queries in any sparkle with previous in function of next we do have a previous axis, we have the next to the minus one axis.",
            "That is the previous access.",
            "Yeah, but anyway you can do right?",
            "Phones disaffect access, but we do have the previous text.",
            "Yeah, I was just wondering about the comparison between say previous work between like I worked on the query project.",
            "For example, we had trains as operation and we had a similar motivation with doing inferencing and stuff.",
            "So I'm just wondering, have you done any comparison and I think there are other triple stores at the time they were doing transitive closure and and stuff like that about controlling how you say info.",
            "Down a chain we have how you get up a chain.",
            "For example, if you want to do super property or have you have you looked at any of that kind of stuff.",
            "Sorry you you are asking about if we have compared our approach with other approaches.",
            "Yeah, like the algorithm about marking where you've been, for example is very similar.",
            "So yeah, yeah, yeah, we borrowed the idea to the algorithm for temporal logics from propositional dynamic logic system.",
            "The standard technique to obtain linear linear time evaluate evaluation algorithm for this kind of queries.",
            "In fact you can write.",
            "Our queries in other, more expressive languages surely OK.",
            "So you're able to compute transitive closure in this logic, that's.",
            "That's true, right?",
            "Have full terms of so.",
            "So do you have a characterization in terms of sort?",
            "Translate the transitive closure.",
            "Your fragment of transitive closure logic fully, that's true.",
            "Yeah yeah, thank you.",
            "My question is that you said that the.",
            "Your Aunt sparkle query expression can be evaluated in linear time, just a fragment of an filter.",
            "Without considering union and optional, the fragment of and yeah.",
            "But when you mention linear order with respect to what is that linear order?",
            "Is it the size of the RDF graphs to analyze the complexity, we consider the decision problem that is given given a particular mapping whether this mapping is in the evaluation of the of the of the query over a graph, and this is linear in this is.",
            "This can be done in time proportional to the size of the pattern times the size of the expression.",
            "That is what we call linear time evaluation.",
            "If you, if that is your expression of the linear time, then don't you think the size of the underlying graph?",
            "One come in the picture of your evaluation time.",
            "If you just consider the size of the expression times what ever the other factor you mentioned, because I don't see you taking into consideration the size of the underlying graph.",
            "What size of the underlying RDF graph over which you are evaluating the query?",
            "One size of that come into picture.",
            "The size of the graph.",
            "Yeah yeah, is this liner in this is linear in the size of the graph.",
            "But then if you say OK if you if you consider the expression as the size of the expression as a constant used in an evaluation problem, linear time in the size of the graph.",
            "If you consider the size of the graph as a constant, you obtain a linear time evaluation procedure in the size of the expression and the combined complexity is multiplication between the size of the graph on the size of the expression.",
            "I don't know, yeah, but then I just I'm.",
            "I'm just not very sure whether size of the graph should be considered as a constant.",
            "I mean, if you are evaluating even even when you are giving expressions for a complexity orders, the constant is always constant and here that is not the case because if you are evaluating a query over, say a graph of 1000 nodes versus a graph of a billion nodes, the evaluation order an the total time is surely going to change.",
            "I understand your question, you are right, but in any query language you you, you almost have to.",
            "Anyway, you have to scan the database almost completely to find your your your answer, so linear time with the date in the size of the databases are very good algorithm I think.",
            "OK, thank you.",
            "I I have a similar questions to things that have been asked before, namely, what is how does this compare with what has been done in experts?",
            "Corey evaluation of XML which in some it to be extremely closely related to this, and there you usually don't have anything which is clear at all are OK.",
            "The first part of your question is about comparing this approach with expect evaluation.",
            "They did the design.",
            "You can compare to the design, but when you are evaluating next path, you are evaluating this in a very structured in a tree structure so you can obtain better algorithms.",
            "Self reasons about pass queries or graph queries over crafts.",
            "I mean, a lot of research, research.",
            "Yeah, yeah there is a lot of research about how do you get your linearity there?",
            "How do you get it clear?",
            "I mean, I'm a little bit puzzled by this result.",
            "I don't understand the question, I I don't.",
            "I don't see how linearity which you mention gets into the picture.",
            "OK, OK, OK, OK. We have a very restricted language.",
            "For example we have just regular.",
            "If you have just, you just have regular expression over graph.",
            "Much more like simple to show that it can be reevaluated in linear time.",
            "You just take the level expression, transform it into an automata and then take the product between the graph on the automata.",
            "And this is a linear procedure.",
            "But when you said in your hands the data size, what do you consider size of linear in linear in the data size and the size of the graph?",
            "It is nice and number of nodes or the number of edges as well.",
            "Oh OK, OK, we yes isn't very good question.",
            "We measure the size of the graph as the usual graph representation.",
            "For example, in the linked list linked list.",
            "Of a graph, so you count the number of pitches, number of features, edges, edges.",
            "Yeah yeah, yeah.",
            "So it's quite quite thick in society.",
            "It's a number of nodes.",
            "Yeah, but for example, for example in in RDF graph, what you have to count is the number of edges you do.",
            "I I just tried to see how it fits with known reserves.",
            "OK, OK, OK, from XML query answering OK. Marcello, please.",
            "No, so I just want to add something about that that question in XML.",
            "Also the main difference that here we don't have data values, so we know that when we are answering queries over tree and we don't have data values, we can do everything in linear time.",
            "Linear time means the size of the three times the size of the query.",
            "When we add to the picture data values, things are very different and here we don't have data values that ableism mean like you can say something like this.",
            "Now here and this note here have exactly the same value in this.",
            "Attribute these kind of things.",
            "We cannot say it actually in this language, so that's also a main difference when you.",
            "When you say that in XML, for example, you want to check a functional dependency, you say this note here and this note here have the same value.",
            "Things are completely different, so that's why we get linear time."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "It has been largely recognized that navigational features are fundamental for querying graph databases, and RDF is not exception.",
                    "label": 0
                },
                {
                    "sent": "Then we start with an example.",
                    "label": 0
                },
                {
                    "sent": "Here we have an RDF graph that stores information about cities and transportation services between this series.",
                    "label": 0
                },
                {
                    "sent": "For example this triple here, state that there is a sea France service from Calais to Dover and we also have some RDF sanitations.",
                    "label": 0
                },
                {
                    "sent": "We're using SP to the node.",
                    "label": 0
                },
                {
                    "sent": "This sub property relationship.",
                    "label": 0
                },
                {
                    "sent": "And for example here we have that seafrance services as a property of a ferry service.",
                    "label": 0
                },
                {
                    "sent": "So from the RDF semantics we can infer that there is a ferry service from Calais to Dover.",
                    "label": 0
                },
                {
                    "sent": "We can also infer that there is a general transportation service from Calais to Dover.",
                    "label": 0
                },
                {
                    "sent": "Suppose that we have to.",
                    "label": 0
                },
                {
                    "sent": "We want to answer the following question.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Ask whether Paris and castings are connected by a sequence of transportation services, but we don't know in which transportation service provides each connection so.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Can answer this question but by checking the existence of a path in the graph from Paris to hustings such that each edge on that path is.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Elected with transport by a sequence of.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Property relation",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "She.",
                    "label": 0
                },
                {
                    "sent": "For example, here we have the DGV sub property of the General Transportation Service and then we know that there is a general transportation service for Paris to Cali General Transportation Service from Calais to Dover, from Dover to passing, and then we answered yes to our question, so it would it would be desirable to have a navigational language capable to answer this kind of queries by navigating the graph.",
                    "label": 0
                },
                {
                    "sent": "The.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Empower papers in this particular navigation language for RDF and in this work we propose such a navigational language for RDF that is capable to answer this kind of queries.",
                    "label": 0
                },
                {
                    "sent": "My name is Kasha Paris and this is joint work with Marcel Arenas and Cloudy with yours.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So the main contribution of our work is that we define a navigational language for RDF.",
                    "label": 1
                },
                {
                    "sent": "The language of nested regular expressions, and we show that it can be efficiently evaluated with, which is a very important property.",
                    "label": 0
                },
                {
                    "sent": "We want to use this language in.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Just a second step incorporated features in the standard language of for querying.",
                    "label": 0
                },
                {
                    "sent": "RDF is parcial.",
                    "label": 0
                },
                {
                    "sent": "We showed that the language obtained language can express interesting RDF queries and we still the expressiveness of the obtain.",
                    "label": 1
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Language.",
                    "label": 0
                },
                {
                    "sent": "The rest of the talk I will talk first about nested regular expressions, syntax and semantics and complexity and then about tennis, parcial, syntax and semantics, or defense evaluation.",
                    "label": 1
                },
                {
                    "sent": "Expressing that, and will finish with some concluding.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Box.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The building blocks for for nested regular expression navigational access and this idea that we borrow from the expat query language with it.",
                    "label": 0
                },
                {
                    "sent": "With expat we can follow some axis to navigate an XML document.",
                    "label": 0
                },
                {
                    "sent": "For example, the child axis.",
                    "label": 0
                },
                {
                    "sent": "The Parataxis are sibling axis.",
                    "label": 0
                },
                {
                    "sent": "Here we have in our context we have RDF graphs and they are not standard graph since the label of an edge could also be acting as a. Node in the graph.",
                    "label": 0
                },
                {
                    "sent": "So here we have three different access.",
                    "label": 0
                },
                {
                    "sent": "The most natural acts.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This is the one that allows to navigate from the subject to the object of a triple.",
                    "label": 0
                },
                {
                    "sent": "There is the next axis.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We also consider the edge axis to navigate from this subject.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Predicate of a triple and the node access to navigate from the predicate to the object of.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We also considered the inverse axis.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And an additional cell fax is not to actually navigate, but to test some to check some properties about nodes they.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Is that a sequence of this axis defines a path in an RDF graph.",
                    "label": 0
                },
                {
                    "sent": "For example, in this graph here.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We can go from A1 to a two way following.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Text and then.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Do a three following next.",
                    "label": 0
                },
                {
                    "sent": "Again we can stay.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Three following self and jump to P3 following.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Then next to before.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Or next to the minus one.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Want to be 5 and finally no to a 6 and then in this graph A1A6 are connected by following this sequence of access.",
                    "label": 0
                },
                {
                    "sent": "The ideas that we can also use regular expression over this axis and some other features to define path in RDF graph.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "That's what we call nested regular expression and the syntax of necessary will expression is given by the following grammar.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We kept that an expression could be in axis.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And in conditional access that could be self next set node or the inverses of this axe.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We can also have a conditional access that is an axis followed by an AI.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Be with me so you are I.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We can also have regular expression over this axis and.",
                    "label": 0
                }
            ]
        },
        "clip_31": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "An additional construction construction that is an axis with an expression in squared.",
                    "label": 0
                }
            ]
        },
        "clip_32": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And that's what we call an nesting expression.",
                    "label": 0
                }
            ]
        },
        "clip_33": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The evaluation of one of these expression is giving us followed evaluation of an expression is a set of pairs AB of nodes such that B is reachable from a by following.",
                    "label": 0
                }
            ]
        },
        "clip_34": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The expression, for example this triple.",
                    "label": 0
                },
                {
                    "sent": "Here we can go from the subject A to the.",
                    "label": 0
                }
            ]
        },
        "clip_35": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Object B by following the conditional axis.",
                    "label": 0
                },
                {
                    "sent": "Next P if and only if P is the predicate of the trip.",
                    "label": 0
                }
            ]
        },
        "clip_36": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "He",
                    "label": 0
                }
            ]
        },
        "clip_37": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So we will say that the Fairy B is in the evaluation of the expression.",
                    "label": 0
                }
            ]
        },
        "clip_38": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "P. You will have a sequence of peace.",
                    "label": 0
                }
            ]
        },
        "clip_39": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Just we can go from A to B by following a sequence of next P edges.",
                    "label": 0
                }
            ]
        },
        "clip_40": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The axis and then we say that baby is in the evaluation of next piece.",
                    "label": 0
                }
            ]
        },
        "clip_41": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Star.",
                    "label": 0
                },
                {
                    "sent": "Again, the same triple we can go from.",
                    "label": 0
                },
                {
                    "sent": "The.",
                    "label": 0
                }
            ]
        },
        "clip_42": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Subject to the predicate of this triple, by following at HB Axis.",
                    "label": 0
                }
            ]
        },
        "clip_43": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Here we can go if and only if the object is labeled P.",
                    "label": 0
                }
            ]
        },
        "clip_44": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We will say that a piece in the valuation of HB.",
                    "label": 0
                }
            ]
        },
        "clip_45": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Access we have more.",
                    "label": 0
                }
            ]
        },
        "clip_46": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Note here we can go from P2C following the sequence of next R axis and then we can say that the pair AC is in the evaluation of the expression HB concatenated with expression next R.",
                    "label": 0
                }
            ]
        },
        "clip_47": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "R. The formal evaluation of side of one of the expression is followed.",
                    "label": 0
                },
                {
                    "sent": "Evaluation of expression over an RDF graph G denoted by this symbol.",
                    "label": 1
                },
                {
                    "sent": "Here is the final recursively as a binary relation.",
                    "label": 0
                },
                {
                    "sent": "I will show you some of the formal definition here you can check.",
                    "label": 0
                }
            ]
        },
        "clip_48": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The others in the paper, for example for the unconditional self access, weaken the valuation of self is the reflexive pairs.",
                    "label": 0
                }
            ]
        },
        "clip_49": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The devaluation of the unconditional Nexus Depere 6 Y for which there exists a set such excess.",
                    "label": 0
                }
            ]
        },
        "clip_50": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And why isn't the graph?",
                    "label": 0
                },
                {
                    "sent": "For the conditional self, a axis we have only deeper AA for the next a axis we have the pair X&Y, such that X ay.",
                    "label": 0
                }
            ]
        },
        "clip_51": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Using the graph, for example, for the concatenation of two expression, we have all the pair 6 Y for which there exists a set such that we can go from X to set following the expression one from set to.",
                    "label": 0
                },
                {
                    "sent": "Why following expression 2?",
                    "label": 0
                }
            ]
        },
        "clip_52": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "For disjunction of two expression, we just take the sector ethical Union of that evaluation.",
                    "label": 0
                }
            ]
        },
        "clip_53": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "For the start of an expression, we take the Union of the evaluation of self expression expression with coordinated with the self expression coordinated with self.",
                    "label": 0
                }
            ]
        },
        "clip_54": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Three times and etc.",
                    "label": 0
                },
                {
                    "sent": "And as you can, you can see the other Tiffany.",
                    "label": 0
                }
            ]
        },
        "clip_55": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Instapaper as it's customary for regular expression.",
                    "label": 0
                },
                {
                    "sent": "We use expression plastered in node expression coordinated with expressions.",
                    "label": 0
                }
            ]
        },
        "clip_56": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "For the nesting construction for the nesting expressions, ideas and nesting allows for substantial checking.",
                    "label": 0
                },
                {
                    "sent": "Innopath intuition is that considered.",
                    "label": 0
                },
                {
                    "sent": "For example, the expression next.",
                    "label": 0
                },
                {
                    "sent": "Next access next with expression is square bracket.",
                    "label": 0
                },
                {
                    "sent": "It navigates from a node A to a node B if the A&B are connected with an X that satisfies the condition given by the expression, for example.",
                    "label": 1
                }
            ]
        },
        "clip_57": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This triple here we have a B.",
                    "label": 0
                },
                {
                    "sent": "And we have that the the edge is connected with another node by following it.",
                    "label": 0
                }
            ]
        },
        "clip_58": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Operation X then we will say that we can go from A to B following.",
                    "label": 0
                }
            ]
        },
        "clip_59": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The Axis next with expression in square brackets.",
                    "label": 0
                }
            ]
        },
        "clip_60": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Then formally will say that a BS in devaluation of next X.",
                    "label": 0
                }
            ]
        },
        "clip_61": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We can combine this nesting suppression.",
                    "label": 0
                }
            ]
        },
        "clip_62": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The other expression and for example.",
                    "label": 0
                },
                {
                    "sent": "In this case we have that we can go from C to D.",
                    "label": 0
                }
            ]
        },
        "clip_63": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "See to the CD the pair of CDs in the evaluation of the expression.",
                    "label": 0
                },
                {
                    "sent": "Next P concatenated with next with expression in square bracket concatenated with next Q.",
                    "label": 0
                }
            ]
        },
        "clip_64": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The devaluation you can see the valuation of all this pressure.",
                    "label": 0
                }
            ]
        },
        "clip_65": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "In the paper I will show you.",
                    "label": 0
                }
            ]
        },
        "clip_66": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Here's some exam.",
                    "label": 0
                }
            ]
        },
        "clip_67": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "For example, for the formal evaluation of the axes self with X in square bracket, is the pairs of nodes XX such that there exists a set.",
                    "label": 0
                },
                {
                    "sent": "That we can reach from X following the expression in a square bracket.",
                    "label": 0
                }
            ]
        },
        "clip_68": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "For next with expression in square bracket we have the pair 6 Y such that there exist two values save on doubleview such that X said Y isn't the graph and we can go from set to double view following expression.",
                    "label": 0
                }
            ]
        },
        "clip_69": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Earth.",
                    "label": 0
                }
            ]
        },
        "clip_70": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Never, salts is about the complexity of evaluating this expr.",
                    "label": 0
                }
            ]
        },
        "clip_71": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Action.",
                    "label": 0
                },
                {
                    "sent": "And 1st to study the complexity, we first defined evaluation program for regular expressions.",
                    "label": 0
                },
                {
                    "sent": "As is customary in the in the database literature, we considered the associated decision problem.",
                    "label": 1
                },
                {
                    "sent": "For this problem we have, we have as an input and RDF graph nested regular expression.",
                    "label": 0
                }
            ]
        },
        "clip_72": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "A pair of element TV and the question is to test whether IBS in the valuation of.",
                    "label": 0
                }
            ]
        },
        "clip_73": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Expression over the graph.",
                    "label": 0
                }
            ]
        },
        "clip_74": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And I would result in the paper states that the problem, the devaluation problem for nested regular expression can be decided in linear time.",
                    "label": 1
                },
                {
                    "sent": "More formally, given an interval expression and RDF graph G testing whether operate bees and evaluation of the expression over the graph can be done in time proportional to the size of the graph.",
                    "label": 0
                },
                {
                    "sent": "Times the size of the expression.",
                    "label": 0
                }
            ]
        },
        "clip_75": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "In the paper, we provide an algorithm that is in the style of temporal law.",
                    "label": 0
                }
            ]
        },
        "clip_76": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "In the algorithm, first recursively considered the next Excel expression.",
                    "label": 0
                }
            ]
        },
        "clip_77": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Open expression within Mark the notes in the graph according to what subexpression they satisfy and find.",
                    "label": 0
                }
            ]
        },
        "clip_78": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I would check if B is reachable from high a following expression and we check with EV Israel from a following description using this mark that we put in the.",
                    "label": 0
                }
            ]
        },
        "clip_79": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And all can be done in linear.",
                    "label": 0
                }
            ]
        },
        "clip_80": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Time and let's take a closer look at the algorithm.",
                    "label": 0
                },
                {
                    "sent": "Consider this expression here.",
                    "label": 0
                }
            ]
        },
        "clip_81": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "It has two nested sum expression.",
                    "label": 0
                }
            ]
        },
        "clip_82": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The first Alpha beta.",
                    "label": 0
                },
                {
                    "sent": "We named them.",
                    "label": 0
                }
            ]
        },
        "clip_83": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Open beta.",
                    "label": 0
                },
                {
                    "sent": "Domestic service Pression Alpha is satisfied by all the notes that follows a sequence of next Q axis.",
                    "label": 0
                },
                {
                    "sent": "Followed by a final self see Axis.",
                    "label": 0
                },
                {
                    "sent": "If we look at.",
                    "label": 0
                }
            ]
        },
        "clip_84": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The graph, these are the notes that satisfy this express.",
                    "label": 0
                }
            ]
        },
        "clip_85": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And then we can mark all them with.",
                    "label": 0
                }
            ]
        },
        "clip_86": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Alpha for.",
                    "label": 0
                }
            ]
        },
        "clip_87": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The expression beta.",
                    "label": 0
                },
                {
                    "sent": "We have all the notes that follows a sequence of next R. Access and.",
                    "label": 0
                }
            ]
        },
        "clip_88": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Final self, the axis and these are the notes that follow.",
                    "label": 0
                }
            ]
        },
        "clip_89": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Expression in the graph and we can mark.",
                    "label": 0
                }
            ]
        },
        "clip_90": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Hold them with beta.",
                    "label": 0
                },
                {
                    "sent": "Fine.",
                    "label": 0
                }
            ]
        },
        "clip_91": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We will consider again the 1st.",
                    "label": 0
                },
                {
                    "sent": "Next expression and replaced with.",
                    "label": 0
                },
                {
                    "sent": "Replace the next.",
                    "label": 0
                }
            ]
        },
        "clip_92": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So expression with Alpha beta to obtain this new expression here next Alpha followed by a sequence of next PETA we can test.",
                    "label": 0
                }
            ]
        },
        "clip_93": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This expression over the graph in this case, for example A&BR and evaluation of the initial expression.",
                    "label": 0
                },
                {
                    "sent": "We show in the paper that we can mark all the notes, images step in linear time by using some automata theory techniques.",
                    "label": 0
                },
                {
                    "sent": "You can see that.",
                    "label": 0
                }
            ]
        },
        "clip_94": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Sales in the paper.",
                    "label": 0
                },
                {
                    "sent": "Let me talk about now.",
                    "label": 0
                }
            ]
        },
        "clip_95": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Jewel.",
                    "label": 0
                },
                {
                    "sent": "First we use the algebraic formalization of the syntax and semantics particule.",
                    "label": 1
                },
                {
                    "sent": "We use triples and to the conjunction of spiritual patterns we use off for optional union filter.",
                    "label": 0
                },
                {
                    "sent": "All these are binary.",
                    "label": 0
                }
            ]
        },
        "clip_96": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Operators, for example here this query.",
                    "label": 0
                },
                {
                    "sent": "This pattern is retrieving the resource with name John and its email.",
                    "label": 0
                }
            ]
        },
        "clip_97": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The language we proposed in sparkle for navigational sparkle is composed by nested regular expression triple nested regular expression triple is a triple of this form with X in the subject, an expression and then Y with X and nested regular expression X&Y are variables and could also be your eyes.",
                    "label": 0
                }
            ]
        },
        "clip_98": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And then, and in this particular pattern, is simply a set of nested regular expression triples combined by using sparkle operators.",
                    "label": 0
                },
                {
                    "sent": "An optional union filter.",
                    "label": 0
                }
            ]
        },
        "clip_99": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "For example, this query here is retrieving is an NS particular pattern that is retreiving exactly the same information as the pattern.",
                    "label": 0
                }
            ]
        },
        "clip_100": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "The last slide.",
                    "label": 0
                },
                {
                    "sent": "For the semantics given RDF truck G, we say that the mapping that gives value a 2X and B2Y is in the evaluation of this triple if and only if the pair a B is in the evaluation of the nested regular expression.",
                    "label": 1
                },
                {
                    "sent": "And the semantics for the other operators is inherit from the semantics of this particular semantics of and of union and filter.",
                    "label": 0
                }
            ]
        },
        "clip_101": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "It should be noticed that since we have.",
                    "label": 0
                },
                {
                    "sent": "Shown that nested regular expression can be evaluated in linear time.",
                    "label": 1
                },
                {
                    "sent": "Necessary well expression do not add extra complexities with the language, that is any sparkle fragment in here.",
                    "label": 1
                },
                {
                    "sent": "It's the complexity of the corresponding sparkles fragment.",
                    "label": 1
                },
                {
                    "sent": "For example, the filter fragment of sparkle has linear time complexity and then the and filter fragment of North Park UL has also linear time complexity.",
                    "label": 0
                }
            ]
        },
        "clip_102": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Let me show some example.",
                    "label": 0
                },
                {
                    "sent": "Consider the graph similar to the graph in the.",
                    "label": 0
                }
            ]
        },
        "clip_103": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "First slide.",
                    "label": 0
                },
                {
                    "sent": "And the following any sparkle pattern.",
                    "label": 0
                }
            ]
        },
        "clip_104": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The first table is retrieving the cities that are connected with over by a sequence of either TV or.",
                    "label": 0
                }
            ]
        },
        "clip_105": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Different services in the graph we have Paris and Calais.",
                    "label": 0
                }
            ]
        },
        "clip_106": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The second triple is retrieving the series under.",
                    "label": 0
                }
            ]
        },
        "clip_107": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Countries and here we all will have power.",
                    "label": 0
                }
            ]
        },
        "clip_108": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "In France and then.",
                    "label": 0
                },
                {
                    "sent": "We have that the single evaluation single mapping that that satisfies this pattern is the mapping that gives Paris, but your Paris 2 XL.",
                    "label": 0
                }
            ]
        },
        "clip_109": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "France 2 way.",
                    "label": 0
                },
                {
                    "sent": "Consider a little more complex example.",
                    "label": 0
                },
                {
                    "sent": "Here we have a nested.",
                    "label": 0
                }
            ]
        },
        "clip_110": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Expression triple consider the domestic construction inside it is certified by the notes that follows a sequence of next SP access and a final self transport access.",
                    "label": 0
                }
            ]
        },
        "clip_111": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And then, for example, an express satisfies this expression.",
                    "label": 0
                }
            ]
        },
        "clip_112": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And then we can go from Dover to casting follow following the whole nested regular expression and then for this spark.",
                    "label": 0
                }
            ]
        },
        "clip_113": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Pattern we have that X Dover, the mapping that give valued over 2X is in using the valuation.",
                    "label": 0
                }
            ]
        },
        "clip_114": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Consider a similar pattern, but this time put in a applus here.",
                    "label": 0
                },
                {
                    "sent": "Then to evaluate this pattern, we can follow the same idea that we follow already.",
                    "label": 0
                }
            ]
        },
        "clip_115": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Just pardon, for example, TV follows a path of next SP access to to our final self transport.",
                    "label": 0
                }
            ]
        },
        "clip_116": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Axis and then we can go from Paris to Calais, following.",
                    "label": 0
                }
            ]
        },
        "clip_117": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This expression we can go from Calais to Dover following this ixpress.",
                    "label": 0
                }
            ]
        },
        "clip_118": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I wanna go from Dover too fast.",
                    "label": 0
                }
            ]
        },
        "clip_119": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Following this expression and then we can devaluate.",
                    "label": 0
                }
            ]
        },
        "clip_120": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This pattern is a set of three mappings.",
                    "label": 0
                },
                {
                    "sent": "First mapping that gives value.",
                    "label": 0
                }
            ]
        },
        "clip_121": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This 2X another mapping that gives value colored 2X and a final mapping that gives valued over to Kelly that is within a spark.",
                    "label": 0
                },
                {
                    "sent": "Will we have a language that is capable to answer our initial query in the first slide our motivating query.",
                    "label": 0
                },
                {
                    "sent": "It also should be noted that that.",
                    "label": 0
                },
                {
                    "sent": "In this nest expression here is somehow simulating an RDF's inference, and this is not an accident.",
                    "label": 0
                },
                {
                    "sent": "We designed the language in order to be able to simulate some RDF's inference limit.",
                    "label": 0
                }
            ]
        },
        "clip_122": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Talk about this now.",
                    "label": 0
                },
                {
                    "sent": "For the defense to formalize.",
                    "label": 0
                }
            ]
        },
        "clip_123": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "DFS evaluation of a pattern.",
                    "label": 0
                },
                {
                    "sent": "We use the closure.",
                    "label": 0
                },
                {
                    "sent": "We first consider just a subfragment of the vocabulary of our DFS defragment, composed by sub property, subclass, domain range and type, and we consider it semantics.",
                    "label": 0
                },
                {
                    "sent": "We are deductive rules.",
                    "label": 0
                },
                {
                    "sent": "Then the closure of T is the graph obtained by applying the rules to exhaustion.",
                    "label": 0
                },
                {
                    "sent": "That is, the graph obtained by applying the rules until the until the graph does not change.",
                    "label": 0
                }
            ]
        },
        "clip_124": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And with this definition of closure, it's very simple to define the RDS evaluation of a pattern given a standard sparkle pattern P. It's our DFS evaluation over a graph.",
                    "label": 0
                },
                {
                    "sent": "G is just the usual evaluation of P over the closure of E. There is to obtain the RDS evaluation, we first compute the closure, and then we evaluate the pattern over the closure.",
                    "label": 0
                }
            ]
        },
        "clip_125": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Our first result in this respect it does any sparkle is enough for RDF evaluation of the standard sparkle queries.",
                    "label": 0
                },
                {
                    "sent": "More precisely given as part of a standard sparkled triple T of the form XAY.",
                    "label": 0
                },
                {
                    "sent": "There exists on any spark you'll triple R of the Form XA function of A and Y such that the RDF's evaluation of T can be obtained by direct reevaluating R over the input graph.",
                    "label": 1
                },
                {
                    "sent": "That is, we can obtain the RDF evaluation of a standard sparkle tripled.",
                    "label": 0
                },
                {
                    "sent": "By navigating the graph without computing the.",
                    "label": 0
                }
            ]
        },
        "clip_126": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Sure.",
                    "label": 0
                },
                {
                    "sent": "And the idea of the proof is just we just have to to translate every possible predicate into a nested regular expression.",
                    "label": 0
                },
                {
                    "sent": "For example, the translation of the predicate subclass is just to use the nested regular expression next subclass.",
                    "label": 0
                },
                {
                    "sent": "Plus you can.",
                    "label": 0
                },
                {
                    "sent": "You can see all the translations in the paper.",
                    "label": 0
                },
                {
                    "sent": "We have already seen that the translation of value that is not in the vocabulary is with this expression here.",
                    "label": 0
                },
                {
                    "sent": "And just let me let me say that the translation of type uses.",
                    "label": 0
                },
                {
                    "sent": "It just uses Axis next edge and node to the minus one.",
                    "label": 0
                }
            ]
        },
        "clip_127": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So as a corollary, we obtain that given a sparkle pattern, a standard sparkle pattern P we can translate it into an in sparkle pattern Q such that the RDF evaluation of P can be obtained by direct evaluating Q over the input graph and you can check the details in the paper.",
                    "label": 0
                }
            ]
        },
        "clip_128": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "The idea is we just have to rewrite every triple of P. Another question is whether we can obtain this last result without using all the power of nested regular expression.",
                    "label": 1
                },
                {
                    "sent": "For example, can we obtain this result by using only regular expression and not the nesting construction?",
                    "label": 0
                },
                {
                    "sent": "Let our spark will be the fragment of any sparkle obtained by forbidding nesting expression.",
                    "label": 0
                },
                {
                    "sent": "That is, we use only usual regular expr.",
                    "label": 0
                }
            ]
        },
        "clip_129": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Action over the axis.",
                    "label": 0
                },
                {
                    "sent": "Then we have the following proposition, the RDF evaluation of this park will triple the standard Spark will triple pattern X ay cannot be obtained with any any Earth sparkwell pattern.",
                    "label": 0
                },
                {
                    "sent": "That is our sparkled usual regular expression are not enough in our context.",
                    "label": 1
                }
            ]
        },
        "clip_130": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "A final question is whether what is the relative complexity?",
                    "label": 0
                },
                {
                    "sent": "Sorry, the relative expressive between nested level expression and this park will operators and we show in the paper that nested regular expression and sparkle operators are complementary.",
                    "label": 0
                },
                {
                    "sent": "It is evident that in this particular lab, expressive power to sparkle things.",
                    "label": 0
                },
                {
                    "sent": "For example, in this part well we can.",
                    "label": 0
                },
                {
                    "sent": "We can query path of arbitrary length that can be done in sparkle.",
                    "label": 0
                },
                {
                    "sent": "So what about the opposite that do?",
                    "label": 0
                }
            ]
        },
        "clip_131": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We do this park.",
                    "label": 0
                },
                {
                    "sent": "Will operators have extra expressive power to the sparkle expression?",
                    "label": 0
                },
                {
                    "sent": "It could be the case that that these Parkville operators can be simulated somehow using nested regular expressions.",
                    "label": 0
                },
                {
                    "sent": "And we show in.",
                    "label": 0
                }
            ]
        },
        "clip_132": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Paper that sparkle operators to add expressive power to any sparkle expression.",
                    "label": 1
                },
                {
                    "sent": "More precisely, we show that there is an inner sparkle pattern that is not equivalent to any any sparkle pattern that does not use OPT.",
                    "label": 0
                },
                {
                    "sent": "The optional operator there is optional operator plus nested regular expression gives give extra expressing it to the language that is, by combining necessarily expression and the sparkle operators we obtain an expressive query.",
                    "label": 0
                }
            ]
        },
        "clip_133": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Language for RDF.",
                    "label": 0
                },
                {
                    "sent": "So for the concluding remarks.",
                    "label": 0
                }
            ]
        },
        "clip_134": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We have proposed nested level of expression as a natural language to navigate through an RDF graph.",
                    "label": 0
                },
                {
                    "sent": "It has low complexity evaluation.",
                    "label": 0
                },
                {
                    "sent": "We can evaluate this language in linear time.",
                    "label": 0
                },
                {
                    "sent": "We incorporate these features to any sparkle.",
                    "label": 0
                },
                {
                    "sent": "An expert will combines the power of sparkle operators and nested regular expressions.",
                    "label": 1
                },
                {
                    "sent": "We showed that that some are DFS evaluation can be done by just reversing the input graph without computing the closure, and this obtained language allow expressing natural queries.",
                    "label": 0
                }
            ]
        },
        "clip_135": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Thanks for your attention.",
                    "label": 0
                },
                {
                    "sent": "You avoided to have, so you have an X axis, but you don't have a previous axis.",
                    "label": 0
                },
                {
                    "sent": "OK, you could have the reverse axis.",
                    "label": 0
                },
                {
                    "sent": "This is very simple.",
                    "label": 0
                },
                {
                    "sent": "So is it because it will complexify the algorithm on simple patterns?",
                    "label": 0
                },
                {
                    "sent": "Or is it because you can rewrite any queries in any sparkle with previous in function of next we do have a previous axis, we have the next to the minus one axis.",
                    "label": 0
                },
                {
                    "sent": "That is the previous access.",
                    "label": 0
                },
                {
                    "sent": "Yeah, but anyway you can do right?",
                    "label": 0
                },
                {
                    "sent": "Phones disaffect access, but we do have the previous text.",
                    "label": 0
                },
                {
                    "sent": "Yeah, I was just wondering about the comparison between say previous work between like I worked on the query project.",
                    "label": 0
                },
                {
                    "sent": "For example, we had trains as operation and we had a similar motivation with doing inferencing and stuff.",
                    "label": 0
                },
                {
                    "sent": "So I'm just wondering, have you done any comparison and I think there are other triple stores at the time they were doing transitive closure and and stuff like that about controlling how you say info.",
                    "label": 0
                },
                {
                    "sent": "Down a chain we have how you get up a chain.",
                    "label": 0
                },
                {
                    "sent": "For example, if you want to do super property or have you have you looked at any of that kind of stuff.",
                    "label": 0
                },
                {
                    "sent": "Sorry you you are asking about if we have compared our approach with other approaches.",
                    "label": 0
                },
                {
                    "sent": "Yeah, like the algorithm about marking where you've been, for example is very similar.",
                    "label": 0
                },
                {
                    "sent": "So yeah, yeah, yeah, we borrowed the idea to the algorithm for temporal logics from propositional dynamic logic system.",
                    "label": 0
                },
                {
                    "sent": "The standard technique to obtain linear linear time evaluate evaluation algorithm for this kind of queries.",
                    "label": 0
                },
                {
                    "sent": "In fact you can write.",
                    "label": 0
                },
                {
                    "sent": "Our queries in other, more expressive languages surely OK.",
                    "label": 0
                },
                {
                    "sent": "So you're able to compute transitive closure in this logic, that's.",
                    "label": 0
                },
                {
                    "sent": "That's true, right?",
                    "label": 0
                },
                {
                    "sent": "Have full terms of so.",
                    "label": 0
                },
                {
                    "sent": "So do you have a characterization in terms of sort?",
                    "label": 0
                },
                {
                    "sent": "Translate the transitive closure.",
                    "label": 0
                },
                {
                    "sent": "Your fragment of transitive closure logic fully, that's true.",
                    "label": 0
                },
                {
                    "sent": "Yeah yeah, thank you.",
                    "label": 0
                },
                {
                    "sent": "My question is that you said that the.",
                    "label": 0
                },
                {
                    "sent": "Your Aunt sparkle query expression can be evaluated in linear time, just a fragment of an filter.",
                    "label": 0
                },
                {
                    "sent": "Without considering union and optional, the fragment of and yeah.",
                    "label": 0
                },
                {
                    "sent": "But when you mention linear order with respect to what is that linear order?",
                    "label": 0
                },
                {
                    "sent": "Is it the size of the RDF graphs to analyze the complexity, we consider the decision problem that is given given a particular mapping whether this mapping is in the evaluation of the of the of the query over a graph, and this is linear in this is.",
                    "label": 0
                },
                {
                    "sent": "This can be done in time proportional to the size of the pattern times the size of the expression.",
                    "label": 0
                },
                {
                    "sent": "That is what we call linear time evaluation.",
                    "label": 0
                },
                {
                    "sent": "If you, if that is your expression of the linear time, then don't you think the size of the underlying graph?",
                    "label": 0
                },
                {
                    "sent": "One come in the picture of your evaluation time.",
                    "label": 0
                },
                {
                    "sent": "If you just consider the size of the expression times what ever the other factor you mentioned, because I don't see you taking into consideration the size of the underlying graph.",
                    "label": 0
                },
                {
                    "sent": "What size of the underlying RDF graph over which you are evaluating the query?",
                    "label": 0
                },
                {
                    "sent": "One size of that come into picture.",
                    "label": 0
                },
                {
                    "sent": "The size of the graph.",
                    "label": 0
                },
                {
                    "sent": "Yeah yeah, is this liner in this is linear in the size of the graph.",
                    "label": 0
                },
                {
                    "sent": "But then if you say OK if you if you consider the expression as the size of the expression as a constant used in an evaluation problem, linear time in the size of the graph.",
                    "label": 0
                },
                {
                    "sent": "If you consider the size of the graph as a constant, you obtain a linear time evaluation procedure in the size of the expression and the combined complexity is multiplication between the size of the graph on the size of the expression.",
                    "label": 0
                },
                {
                    "sent": "I don't know, yeah, but then I just I'm.",
                    "label": 0
                },
                {
                    "sent": "I'm just not very sure whether size of the graph should be considered as a constant.",
                    "label": 0
                },
                {
                    "sent": "I mean, if you are evaluating even even when you are giving expressions for a complexity orders, the constant is always constant and here that is not the case because if you are evaluating a query over, say a graph of 1000 nodes versus a graph of a billion nodes, the evaluation order an the total time is surely going to change.",
                    "label": 0
                },
                {
                    "sent": "I understand your question, you are right, but in any query language you you, you almost have to.",
                    "label": 0
                },
                {
                    "sent": "Anyway, you have to scan the database almost completely to find your your your answer, so linear time with the date in the size of the databases are very good algorithm I think.",
                    "label": 0
                },
                {
                    "sent": "OK, thank you.",
                    "label": 0
                },
                {
                    "sent": "I I have a similar questions to things that have been asked before, namely, what is how does this compare with what has been done in experts?",
                    "label": 0
                },
                {
                    "sent": "Corey evaluation of XML which in some it to be extremely closely related to this, and there you usually don't have anything which is clear at all are OK.",
                    "label": 0
                },
                {
                    "sent": "The first part of your question is about comparing this approach with expect evaluation.",
                    "label": 0
                },
                {
                    "sent": "They did the design.",
                    "label": 0
                },
                {
                    "sent": "You can compare to the design, but when you are evaluating next path, you are evaluating this in a very structured in a tree structure so you can obtain better algorithms.",
                    "label": 0
                },
                {
                    "sent": "Self reasons about pass queries or graph queries over crafts.",
                    "label": 0
                },
                {
                    "sent": "I mean, a lot of research, research.",
                    "label": 0
                },
                {
                    "sent": "Yeah, yeah there is a lot of research about how do you get your linearity there?",
                    "label": 0
                },
                {
                    "sent": "How do you get it clear?",
                    "label": 0
                },
                {
                    "sent": "I mean, I'm a little bit puzzled by this result.",
                    "label": 0
                },
                {
                    "sent": "I don't understand the question, I I don't.",
                    "label": 0
                },
                {
                    "sent": "I don't see how linearity which you mention gets into the picture.",
                    "label": 0
                },
                {
                    "sent": "OK, OK, OK, OK. We have a very restricted language.",
                    "label": 0
                },
                {
                    "sent": "For example we have just regular.",
                    "label": 0
                },
                {
                    "sent": "If you have just, you just have regular expression over graph.",
                    "label": 0
                },
                {
                    "sent": "Much more like simple to show that it can be reevaluated in linear time.",
                    "label": 0
                },
                {
                    "sent": "You just take the level expression, transform it into an automata and then take the product between the graph on the automata.",
                    "label": 0
                },
                {
                    "sent": "And this is a linear procedure.",
                    "label": 0
                },
                {
                    "sent": "But when you said in your hands the data size, what do you consider size of linear in linear in the data size and the size of the graph?",
                    "label": 0
                },
                {
                    "sent": "It is nice and number of nodes or the number of edges as well.",
                    "label": 0
                },
                {
                    "sent": "Oh OK, OK, we yes isn't very good question.",
                    "label": 0
                },
                {
                    "sent": "We measure the size of the graph as the usual graph representation.",
                    "label": 0
                },
                {
                    "sent": "For example, in the linked list linked list.",
                    "label": 0
                },
                {
                    "sent": "Of a graph, so you count the number of pitches, number of features, edges, edges.",
                    "label": 0
                },
                {
                    "sent": "Yeah yeah, yeah.",
                    "label": 0
                },
                {
                    "sent": "So it's quite quite thick in society.",
                    "label": 0
                },
                {
                    "sent": "It's a number of nodes.",
                    "label": 0
                },
                {
                    "sent": "Yeah, but for example, for example in in RDF graph, what you have to count is the number of edges you do.",
                    "label": 0
                },
                {
                    "sent": "I I just tried to see how it fits with known reserves.",
                    "label": 0
                },
                {
                    "sent": "OK, OK, OK, from XML query answering OK. Marcello, please.",
                    "label": 0
                },
                {
                    "sent": "No, so I just want to add something about that that question in XML.",
                    "label": 0
                },
                {
                    "sent": "Also the main difference that here we don't have data values, so we know that when we are answering queries over tree and we don't have data values, we can do everything in linear time.",
                    "label": 0
                },
                {
                    "sent": "Linear time means the size of the three times the size of the query.",
                    "label": 0
                },
                {
                    "sent": "When we add to the picture data values, things are very different and here we don't have data values that ableism mean like you can say something like this.",
                    "label": 0
                },
                {
                    "sent": "Now here and this note here have exactly the same value in this.",
                    "label": 0
                },
                {
                    "sent": "Attribute these kind of things.",
                    "label": 0
                },
                {
                    "sent": "We cannot say it actually in this language, so that's also a main difference when you.",
                    "label": 0
                },
                {
                    "sent": "When you say that in XML, for example, you want to check a functional dependency, you say this note here and this note here have the same value.",
                    "label": 0
                },
                {
                    "sent": "Things are completely different, so that's why we get linear time.",
                    "label": 0
                }
            ]
        }
    }
}