{
    "id": "kiknxfmeroficx5zjxiew2p457h5s532",
    "title": "BeSEPPI: Semantic-Based Benchmarking of Property Path Implementations",
    "info": {
        "author": [
            "Adrian Skubella, University of Koblenz-Landau"
        ],
        "published": "July 19, 2019",
        "recorded": "June 2019",
        "category": [
            "Top->Computer Science->Semantic Web",
            "Top->Computer Science->Big Data"
        ]
    },
    "url": "http://videolectures.net/eswc2019_skubella_beseppi_benchmarking/",
    "segmentation": [
        [
            "This work was done together with Daniel Young.",
            "Can Steven stop from the Institute for Websites and Technologies?",
            "In Coblenz OK, let's get right."
        ],
        [
            "Into it, so consider you have an RDF graph where we omit the prefixes here for legibility and this is like a social network where Alice knows Erin Ann.",
            "She also knows Carol and Carol knows Bob and now we want to retrieve all friends or friends of Alice.",
            "So everybody who's connected to Ellis by path of nodes relations.",
            "I'm.",
            "We can do this because we know how the data structure very easily, but usually we do not know how the data is structured.",
            "If like a lot of edges and vertices, and in this case we can use property paths like in this query select friend where Alice knows star and hereby knows is the transitive reflexive property path expression, and then friend and it retrieves everybody who's connected to Alice by any path of nose.",
            "OK, so."
        ],
        [
            "Property paths.",
            "Property paths were introduced with Sparkle 1.1 in 2012 and also the semantic of semantics of property paths were introduced by the W 3C.",
            "They allow for more concise queries.",
            "For instance, one can use this construct knows Slash knows to denote the sequence of two edges labeled with nose.",
            "Normally one would need to triple patterns for this for the more queries are possible with property parts which are not possible with a single sparkle.",
            "One point all query like the one in the example when we do not know how the data is structured.",
            "And."
        ],
        [
            "While working with property paths, we made two observations.",
            "The first observation was that different semantics of property paths were defined in papers.",
            "And the second one was that RDF stores implemented different semantics of property paths.",
            "So that led us to a couple of open questions.",
            "The first one was how can we formalize the semantics of property paths described by the W 3C?",
            "The second one was how can the adherence of property parts implementations to the W 3C semantics be tested?",
            "And finally, the third question, to which extent do RDF stores adhere to these semantics, and I will answer this question starting with how to formalize the semantics."
        ],
        [
            "So consider this even smaller RDF graph where Alice knows Carol and Carol knows Bob and we have this property path.",
            "Carol knows?",
            "Where knows?",
            "Is the existential property path expression and then the variable V. I'll explain how this is evaluated.",
            "Bottom up, starting with the evaluation of nose, then the property path expression, nose?",
            "And finally the complete property path so."
        ],
        [
            "How is nose evaluated again on this small graph G?",
            "We have gamma defined as.",
            "In this case the Vertex label set, so Alice, Bob and Carol and the evaluation of knows is a set of tools.",
            "Alice, Carol and Carol Bob.",
            "It's easy to see because there is a triple Ellis North Carol, so we have the tuple, Ellis, Carol and Carol knows Bob.",
            "So we have the tuple.",
            "Carolyn Bob.",
            "Formerly, Gamma is a subset of Eris banknotes and literals, P as an eerie and also property path expression, and the evaluation of P over gamma.",
            "Angie is a set of tuples S oh, where the triple SPO's in the element of the graph.",
            "OK, that's straightforward.",
            "And now the evaluation."
        ],
        [
            "Of note?",
            "The existential property path expression.",
            "Again, we have the same RDF graph we have.",
            "Gamma is the vertex label set Alice, Bob, Carol.",
            "And when we evaluate this existential property path expression of our gamma, Angie, we get also set of tuples.",
            "So the first part is equal to the relation of knows Alice, Carol and Carol Bob, but we also get this set of tools.",
            "So Alice Alice or Bob Carol Carol.",
            "So each element of gamma with itself in the tool.",
            "OK, formally.",
            "Gamma is defined as before, and the evaluation of the existential property part expression is just the evaluation of the property path expression E Union with the tuple AA, whereas an element of gamma.",
            "OK, so now that we've talked about the existential property path expression, let's look."
        ],
        [
            "Into the evaluation of the whole property path, Carol knows?",
            "V. This is just to remind you the evaluation of existential property path expression.",
            "And the evolution of the whole property path is set of variable bindings where Bob is found to be and Carol is bound also to be.",
            "That's easy to see because we just look into the evolution of nose?",
            "And check where the first element is.",
            "Also, Carol like it is in the property path.",
            "So in this case we have Carol Bob.",
            "That's why Bob is bound to the variable and with Carol Carol and therefore Carol is bound to the variable.",
            "And the formal definition for this is.",
            "We have the variables V1V2.",
            "We have essandoh which are literals or Eris and we have VG and this is the vertex label set in our in the RDF graph G. So we had gamma before, which was always the vertex label set, but we'll see that gamma is not necessarily the same as the actual vertex label set VG.",
            "If we evaluate property path with two constant in it like in the first row SEO.",
            "We get an empty set, not know, sorry an empty mapping if the tuple SO from the property path is an element of the evaluation of the property path expression E over gamma, Angie, and hereby gamma is defined as the Union of the Vertex label set VG&SO from the property path.",
            "Furthermore, we get an empty set if the tuple S is not element of the evaluation of the property path expression E. And when we have a variable in our property path at the object position like in the second case, we get a set of variable bindings from the evaluation of the property path expression E over gamma, Angie, and here by gamma is defined as the vertex label set union with just the South.",
            "The constant S from the property path.",
            "And when we have two variables, we also get a set of variable bindings.",
            "And here by gamma is defined as the vertex label side.",
            "So in this case the work text label set is equal to.",
            "Two gamma."
        ],
        [
            "OK, So what if we have a property path and in this property path a curse term that is not occurring in the underlying RDF graph G. So consider this example.",
            "Tom knows?",
            "And then the variable V and Tom is not element of the vertex label set, so Tom does not occur in the RDF graph whatsoever.",
            "Still, the evaluation of this property path returns this variable binding, so Tom is bound to the variable V. And this is due to the semantics we've seen before because of.",
            "Gamma is defined as the vertex label set union with S. So in the vertex label set also Thomason element and in the evaluation of the property path expression E?",
            "There is also this set of tuples AA, whereas A is an element of gamma and therefore we have a couple TomTom and this leads to the variable binding.",
            "OK. Now that we've talked about the semantics of property parts.",
            "We had the second question, how can we test it?",
            "If implementations adhere to these semantics?"
        ],
        [
            "For this purpose we've created the benchmark for the semantic evaluation of property path implementations.",
            "Be happy and Peppy has a comprehensible and manually created benchmark data set.",
            "So it was especially created to evaluate if implementations follow these semantics.",
            "Also, it has 236 manually manually created queries and their respective reference result sets.",
            "So for each query we looked into the prior defined semantics and created a reference result set such that we can check if results are complete and correct.",
            "OK these."
        ],
        [
            "Queries were organized according to three dimensions.",
            "The first dimension was the tested property path expression.",
            "So, for instance, the existential property path expression or the transitive reflexive closure property path expression.",
            "The second dimension was the number and position of variables in the property path or in the query.",
            "So in this case we have a variable at the object position, but it's also possible to have it at the subject position or at no position at all at both positions.",
            "And the third dimension is the semantic aspect.",
            "So like the tested case, we have differently sized result sets.",
            "Empty result sets differently sized traversed paths, loops and paths and stuff like that, and it's worth mentioning here that not every semantic aspect can be applied to each property path expression, because each property path expression has different semantics and therefore different semantics.",
            "Semantic aspects can be applied to this.",
            "Expression.",
            "OK, so this is a way to test if a implementation follows these semantics."
        ],
        [
            "The third question was.",
            "To which extent do RDF stores actually follow these semantics?",
            "So we've evaluated 5 RDF stores, namely Blazegraph Allegrograph, Free Edition, Virtuozzo Open Source Edition, RDF 4 J and Apache Gina Physici.",
            "Anne."
        ],
        [
            "This is very small and very comprehensible table.",
            "The results are depicted on the top side.",
            "You can see the names of the RDF stores and beneath that there is stated if there were the results of queries were incomplete but correct.",
            "Complete but incorrect, incomplete and incorrect or if the execution threw an error.",
            "And on the left side you can see the.",
            "Property path expression that was tested.",
            "And as you can see here there quite a few cases in which.",
            "Query results were incomplete or partly incorrect and returned through an error during execution.",
            "The only store that returns complete incorrect results for each tested case was Jennifer Zaki.",
            "Furthermore, for the inverse sequence and alternative property path expression, each story turned completes incorrect results and error free results.",
            "So on the next slides, we look at the existential, the transitive closure and the transitive reflexive closure property path expression and where the missing results are."
        ],
        [
            "OK, the existential property path expression we've talked about this before, so just some random.",
            "There are the semantics of it.",
            "And these two pools that are generated by this term.",
            "AA.",
            "Whereas an element of gamma are often ignored by RDF stores.",
            "For instance, by Blazegraph in all tested cases, this means that they were just missing for allegrograph.",
            "If the evaluation of the property path expression E was empty.",
            "So if it was not empty, the results in a element of gamma were included in the result set.",
            "And finally RDF, J ignore these results if there was no very variable in the property path.",
            "OK, so much exactly, and virtuoso does not execute queries with two variables and existential property path expression at all.",
            "But this seems to be a deliberate choice because it says throws an error which says transitive start not given.",
            "OK, so much for the existential property path expression.",
            "The next one will look."
        ],
        [
            "It is the transitive closure property path expression, and here for we have.",
            "This graph G, which is similar to the one before, only that there is also a cycle in the graph from Bob to Alice or Bob, also knows Alice.",
            "Interpolation of the transitive closure property path expression.",
            "Nose plus over gamma ING.",
            "Is the set of tuples Alice Carol because Alice knows Carol Alice Bob?",
            "Because transitively Alice knows Bob and also Alice Alice, because through the cycle also knows herself, and that goes for the other vertices as well.",
            "The formal definition of this is the unification of the sequence of the evaluation of E over and over again.",
            "OK, so in this case brief base graph returns an empty mapping if something like Ellis knows.",
            "Plus Thomas evaluated.",
            "So Alice, Tom, the tuple.",
            "Ellis Tom is not element of the evaluation of nose Plus still an empty mapping is returned by blazed rough.",
            "In this case, even though an empty set should be returned.",
            "And this is always the case when there is a triple in the store like Ellis knows and then an arbitrary object.",
            "So if the subject and object predicate are existent in a triple in the graph, then this is returned as an empty mapping instead of instead of an empty set.",
            "Furthermore, the results AA are missed in case of cycles like in this case Alice, Alice, Carol, Carol and Bob, Bob by Virtuoso and all tested cases.",
            "And in case of RDF J, if there is no variable in the property path.",
            "For the more similar to the existential property path expression virtues, does not execute queries with two variables and the transitive closure property path expression.",
            "OK."
        ],
        [
            "And then we have the transitive reflexive closure property path expression.",
            "Again, we have this early F graph, this time without the psycho.",
            "And the evaluation of this property path expression is a set of tools because Alice knows Carol Carol knows Bob Ellis transitively knows Bob and then you have this reflexive part of the expression, such that Alice knows herself.",
            "Carol knows herself, and also Bob knows himself.",
            "So the formal definition is the Union of the evaluation of the transitive closure property, part Expression E and the existential property path expression.",
            "E. And here again, tuples that are created by this term A where a is an element of gamma are often ignored, so blazegraph again in all tested cases and allegrograph as we've seen it before.",
            "If the evaluation of E is empty.",
            "But if evaluation of is not empty, then these results are included.",
            "And once again, Virtuoso does not execute these queries with two variables.",
            "OK.",
            "So."
        ],
        [
            "What were our contributions?",
            "We have a formal definitions definition of the W 3 semantics of property paths.",
            "And also we contributed pezzetti the benchmark for the semantic evaluation of property path implementations.",
            "And we did five iterations of five commonly used RDF stores to what extent they adhere to the W. 3C semantics and showed that four of them have quite some issues in that terms.",
            "OK, then thank you for your attention."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "This work was done together with Daniel Young.",
                    "label": 0
                },
                {
                    "sent": "Can Steven stop from the Institute for Websites and Technologies?",
                    "label": 1
                },
                {
                    "sent": "In Coblenz OK, let's get right.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Into it, so consider you have an RDF graph where we omit the prefixes here for legibility and this is like a social network where Alice knows Erin Ann.",
                    "label": 0
                },
                {
                    "sent": "She also knows Carol and Carol knows Bob and now we want to retrieve all friends or friends of Alice.",
                    "label": 1
                },
                {
                    "sent": "So everybody who's connected to Ellis by path of nodes relations.",
                    "label": 0
                },
                {
                    "sent": "I'm.",
                    "label": 0
                },
                {
                    "sent": "We can do this because we know how the data structure very easily, but usually we do not know how the data is structured.",
                    "label": 0
                },
                {
                    "sent": "If like a lot of edges and vertices, and in this case we can use property paths like in this query select friend where Alice knows star and hereby knows is the transitive reflexive property path expression, and then friend and it retrieves everybody who's connected to Alice by any path of nose.",
                    "label": 0
                },
                {
                    "sent": "OK, so.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Property paths.",
                    "label": 0
                },
                {
                    "sent": "Property paths were introduced with Sparkle 1.1 in 2012 and also the semantic of semantics of property paths were introduced by the W 3C.",
                    "label": 1
                },
                {
                    "sent": "They allow for more concise queries.",
                    "label": 0
                },
                {
                    "sent": "For instance, one can use this construct knows Slash knows to denote the sequence of two edges labeled with nose.",
                    "label": 1
                },
                {
                    "sent": "Normally one would need to triple patterns for this for the more queries are possible with property parts which are not possible with a single sparkle.",
                    "label": 0
                },
                {
                    "sent": "One point all query like the one in the example when we do not know how the data is structured.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "While working with property paths, we made two observations.",
                    "label": 0
                },
                {
                    "sent": "The first observation was that different semantics of property paths were defined in papers.",
                    "label": 1
                },
                {
                    "sent": "And the second one was that RDF stores implemented different semantics of property paths.",
                    "label": 0
                },
                {
                    "sent": "So that led us to a couple of open questions.",
                    "label": 0
                },
                {
                    "sent": "The first one was how can we formalize the semantics of property paths described by the W 3C?",
                    "label": 0
                },
                {
                    "sent": "The second one was how can the adherence of property parts implementations to the W 3C semantics be tested?",
                    "label": 1
                },
                {
                    "sent": "And finally, the third question, to which extent do RDF stores adhere to these semantics, and I will answer this question starting with how to formalize the semantics.",
                    "label": 1
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So consider this even smaller RDF graph where Alice knows Carol and Carol knows Bob and we have this property path.",
                    "label": 1
                },
                {
                    "sent": "Carol knows?",
                    "label": 0
                },
                {
                    "sent": "Where knows?",
                    "label": 0
                },
                {
                    "sent": "Is the existential property path expression and then the variable V. I'll explain how this is evaluated.",
                    "label": 0
                },
                {
                    "sent": "Bottom up, starting with the evaluation of nose, then the property path expression, nose?",
                    "label": 0
                },
                {
                    "sent": "And finally the complete property path so.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "How is nose evaluated again on this small graph G?",
                    "label": 0
                },
                {
                    "sent": "We have gamma defined as.",
                    "label": 0
                },
                {
                    "sent": "In this case the Vertex label set, so Alice, Bob and Carol and the evaluation of knows is a set of tools.",
                    "label": 1
                },
                {
                    "sent": "Alice, Carol and Carol Bob.",
                    "label": 0
                },
                {
                    "sent": "It's easy to see because there is a triple Ellis North Carol, so we have the tuple, Ellis, Carol and Carol knows Bob.",
                    "label": 0
                },
                {
                    "sent": "So we have the tuple.",
                    "label": 0
                },
                {
                    "sent": "Carolyn Bob.",
                    "label": 0
                },
                {
                    "sent": "Formerly, Gamma is a subset of Eris banknotes and literals, P as an eerie and also property path expression, and the evaluation of P over gamma.",
                    "label": 1
                },
                {
                    "sent": "Angie is a set of tuples S oh, where the triple SPO's in the element of the graph.",
                    "label": 0
                },
                {
                    "sent": "OK, that's straightforward.",
                    "label": 0
                },
                {
                    "sent": "And now the evaluation.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Of note?",
                    "label": 0
                },
                {
                    "sent": "The existential property path expression.",
                    "label": 1
                },
                {
                    "sent": "Again, we have the same RDF graph we have.",
                    "label": 0
                },
                {
                    "sent": "Gamma is the vertex label set Alice, Bob, Carol.",
                    "label": 0
                },
                {
                    "sent": "And when we evaluate this existential property path expression of our gamma, Angie, we get also set of tuples.",
                    "label": 0
                },
                {
                    "sent": "So the first part is equal to the relation of knows Alice, Carol and Carol Bob, but we also get this set of tools.",
                    "label": 0
                },
                {
                    "sent": "So Alice Alice or Bob Carol Carol.",
                    "label": 0
                },
                {
                    "sent": "So each element of gamma with itself in the tool.",
                    "label": 0
                },
                {
                    "sent": "OK, formally.",
                    "label": 0
                },
                {
                    "sent": "Gamma is defined as before, and the evaluation of the existential property part expression is just the evaluation of the property path expression E Union with the tuple AA, whereas an element of gamma.",
                    "label": 0
                },
                {
                    "sent": "OK, so now that we've talked about the existential property path expression, let's look.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Into the evaluation of the whole property path, Carol knows?",
                    "label": 1
                },
                {
                    "sent": "V. This is just to remind you the evaluation of existential property path expression.",
                    "label": 0
                },
                {
                    "sent": "And the evolution of the whole property path is set of variable bindings where Bob is found to be and Carol is bound also to be.",
                    "label": 0
                },
                {
                    "sent": "That's easy to see because we just look into the evolution of nose?",
                    "label": 0
                },
                {
                    "sent": "And check where the first element is.",
                    "label": 0
                },
                {
                    "sent": "Also, Carol like it is in the property path.",
                    "label": 0
                },
                {
                    "sent": "So in this case we have Carol Bob.",
                    "label": 0
                },
                {
                    "sent": "That's why Bob is bound to the variable and with Carol Carol and therefore Carol is bound to the variable.",
                    "label": 0
                },
                {
                    "sent": "And the formal definition for this is.",
                    "label": 0
                },
                {
                    "sent": "We have the variables V1V2.",
                    "label": 0
                },
                {
                    "sent": "We have essandoh which are literals or Eris and we have VG and this is the vertex label set in our in the RDF graph G. So we had gamma before, which was always the vertex label set, but we'll see that gamma is not necessarily the same as the actual vertex label set VG.",
                    "label": 0
                },
                {
                    "sent": "If we evaluate property path with two constant in it like in the first row SEO.",
                    "label": 0
                },
                {
                    "sent": "We get an empty set, not know, sorry an empty mapping if the tuple SO from the property path is an element of the evaluation of the property path expression E over gamma, Angie, and hereby gamma is defined as the Union of the Vertex label set VG&SO from the property path.",
                    "label": 0
                },
                {
                    "sent": "Furthermore, we get an empty set if the tuple S is not element of the evaluation of the property path expression E. And when we have a variable in our property path at the object position like in the second case, we get a set of variable bindings from the evaluation of the property path expression E over gamma, Angie, and here by gamma is defined as the vertex label set union with just the South.",
                    "label": 0
                },
                {
                    "sent": "The constant S from the property path.",
                    "label": 0
                },
                {
                    "sent": "And when we have two variables, we also get a set of variable bindings.",
                    "label": 0
                },
                {
                    "sent": "And here by gamma is defined as the vertex label side.",
                    "label": 0
                },
                {
                    "sent": "So in this case the work text label set is equal to.",
                    "label": 0
                },
                {
                    "sent": "Two gamma.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK, So what if we have a property path and in this property path a curse term that is not occurring in the underlying RDF graph G. So consider this example.",
                    "label": 1
                },
                {
                    "sent": "Tom knows?",
                    "label": 0
                },
                {
                    "sent": "And then the variable V and Tom is not element of the vertex label set, so Tom does not occur in the RDF graph whatsoever.",
                    "label": 0
                },
                {
                    "sent": "Still, the evaluation of this property path returns this variable binding, so Tom is bound to the variable V. And this is due to the semantics we've seen before because of.",
                    "label": 0
                },
                {
                    "sent": "Gamma is defined as the vertex label set union with S. So in the vertex label set also Thomason element and in the evaluation of the property path expression E?",
                    "label": 0
                },
                {
                    "sent": "There is also this set of tuples AA, whereas A is an element of gamma and therefore we have a couple TomTom and this leads to the variable binding.",
                    "label": 0
                },
                {
                    "sent": "OK. Now that we've talked about the semantics of property parts.",
                    "label": 0
                },
                {
                    "sent": "We had the second question, how can we test it?",
                    "label": 0
                },
                {
                    "sent": "If implementations adhere to these semantics?",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "For this purpose we've created the benchmark for the semantic evaluation of property path implementations.",
                    "label": 1
                },
                {
                    "sent": "Be happy and Peppy has a comprehensible and manually created benchmark data set.",
                    "label": 0
                },
                {
                    "sent": "So it was especially created to evaluate if implementations follow these semantics.",
                    "label": 1
                },
                {
                    "sent": "Also, it has 236 manually manually created queries and their respective reference result sets.",
                    "label": 0
                },
                {
                    "sent": "So for each query we looked into the prior defined semantics and created a reference result set such that we can check if results are complete and correct.",
                    "label": 0
                },
                {
                    "sent": "OK these.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Queries were organized according to three dimensions.",
                    "label": 0
                },
                {
                    "sent": "The first dimension was the tested property path expression.",
                    "label": 0
                },
                {
                    "sent": "So, for instance, the existential property path expression or the transitive reflexive closure property path expression.",
                    "label": 0
                },
                {
                    "sent": "The second dimension was the number and position of variables in the property path or in the query.",
                    "label": 0
                },
                {
                    "sent": "So in this case we have a variable at the object position, but it's also possible to have it at the subject position or at no position at all at both positions.",
                    "label": 0
                },
                {
                    "sent": "And the third dimension is the semantic aspect.",
                    "label": 0
                },
                {
                    "sent": "So like the tested case, we have differently sized result sets.",
                    "label": 0
                },
                {
                    "sent": "Empty result sets differently sized traversed paths, loops and paths and stuff like that, and it's worth mentioning here that not every semantic aspect can be applied to each property path expression, because each property path expression has different semantics and therefore different semantics.",
                    "label": 0
                },
                {
                    "sent": "Semantic aspects can be applied to this.",
                    "label": 0
                },
                {
                    "sent": "Expression.",
                    "label": 0
                },
                {
                    "sent": "OK, so this is a way to test if a implementation follows these semantics.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The third question was.",
                    "label": 0
                },
                {
                    "sent": "To which extent do RDF stores actually follow these semantics?",
                    "label": 0
                },
                {
                    "sent": "So we've evaluated 5 RDF stores, namely Blazegraph Allegrograph, Free Edition, Virtuozzo Open Source Edition, RDF 4 J and Apache Gina Physici.",
                    "label": 0
                },
                {
                    "sent": "Anne.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This is very small and very comprehensible table.",
                    "label": 0
                },
                {
                    "sent": "The results are depicted on the top side.",
                    "label": 0
                },
                {
                    "sent": "You can see the names of the RDF stores and beneath that there is stated if there were the results of queries were incomplete but correct.",
                    "label": 0
                },
                {
                    "sent": "Complete but incorrect, incomplete and incorrect or if the execution threw an error.",
                    "label": 0
                },
                {
                    "sent": "And on the left side you can see the.",
                    "label": 0
                },
                {
                    "sent": "Property path expression that was tested.",
                    "label": 0
                },
                {
                    "sent": "And as you can see here there quite a few cases in which.",
                    "label": 0
                },
                {
                    "sent": "Query results were incomplete or partly incorrect and returned through an error during execution.",
                    "label": 0
                },
                {
                    "sent": "The only store that returns complete incorrect results for each tested case was Jennifer Zaki.",
                    "label": 0
                },
                {
                    "sent": "Furthermore, for the inverse sequence and alternative property path expression, each story turned completes incorrect results and error free results.",
                    "label": 0
                },
                {
                    "sent": "So on the next slides, we look at the existential, the transitive closure and the transitive reflexive closure property path expression and where the missing results are.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, the existential property path expression we've talked about this before, so just some random.",
                    "label": 0
                },
                {
                    "sent": "There are the semantics of it.",
                    "label": 0
                },
                {
                    "sent": "And these two pools that are generated by this term.",
                    "label": 0
                },
                {
                    "sent": "AA.",
                    "label": 0
                },
                {
                    "sent": "Whereas an element of gamma are often ignored by RDF stores.",
                    "label": 0
                },
                {
                    "sent": "For instance, by Blazegraph in all tested cases, this means that they were just missing for allegrograph.",
                    "label": 0
                },
                {
                    "sent": "If the evaluation of the property path expression E was empty.",
                    "label": 0
                },
                {
                    "sent": "So if it was not empty, the results in a element of gamma were included in the result set.",
                    "label": 0
                },
                {
                    "sent": "And finally RDF, J ignore these results if there was no very variable in the property path.",
                    "label": 0
                },
                {
                    "sent": "OK, so much exactly, and virtuoso does not execute queries with two variables and existential property path expression at all.",
                    "label": 0
                },
                {
                    "sent": "But this seems to be a deliberate choice because it says throws an error which says transitive start not given.",
                    "label": 0
                },
                {
                    "sent": "OK, so much for the existential property path expression.",
                    "label": 0
                },
                {
                    "sent": "The next one will look.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "It is the transitive closure property path expression, and here for we have.",
                    "label": 0
                },
                {
                    "sent": "This graph G, which is similar to the one before, only that there is also a cycle in the graph from Bob to Alice or Bob, also knows Alice.",
                    "label": 0
                },
                {
                    "sent": "Interpolation of the transitive closure property path expression.",
                    "label": 0
                },
                {
                    "sent": "Nose plus over gamma ING.",
                    "label": 0
                },
                {
                    "sent": "Is the set of tuples Alice Carol because Alice knows Carol Alice Bob?",
                    "label": 0
                },
                {
                    "sent": "Because transitively Alice knows Bob and also Alice Alice, because through the cycle also knows herself, and that goes for the other vertices as well.",
                    "label": 0
                },
                {
                    "sent": "The formal definition of this is the unification of the sequence of the evaluation of E over and over again.",
                    "label": 0
                },
                {
                    "sent": "OK, so in this case brief base graph returns an empty mapping if something like Ellis knows.",
                    "label": 0
                },
                {
                    "sent": "Plus Thomas evaluated.",
                    "label": 0
                },
                {
                    "sent": "So Alice, Tom, the tuple.",
                    "label": 0
                },
                {
                    "sent": "Ellis Tom is not element of the evaluation of nose Plus still an empty mapping is returned by blazed rough.",
                    "label": 0
                },
                {
                    "sent": "In this case, even though an empty set should be returned.",
                    "label": 0
                },
                {
                    "sent": "And this is always the case when there is a triple in the store like Ellis knows and then an arbitrary object.",
                    "label": 0
                },
                {
                    "sent": "So if the subject and object predicate are existent in a triple in the graph, then this is returned as an empty mapping instead of instead of an empty set.",
                    "label": 0
                },
                {
                    "sent": "Furthermore, the results AA are missed in case of cycles like in this case Alice, Alice, Carol, Carol and Bob, Bob by Virtuoso and all tested cases.",
                    "label": 0
                },
                {
                    "sent": "And in case of RDF J, if there is no variable in the property path.",
                    "label": 0
                },
                {
                    "sent": "For the more similar to the existential property path expression virtues, does not execute queries with two variables and the transitive closure property path expression.",
                    "label": 1
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And then we have the transitive reflexive closure property path expression.",
                    "label": 0
                },
                {
                    "sent": "Again, we have this early F graph, this time without the psycho.",
                    "label": 0
                },
                {
                    "sent": "And the evaluation of this property path expression is a set of tools because Alice knows Carol Carol knows Bob Ellis transitively knows Bob and then you have this reflexive part of the expression, such that Alice knows herself.",
                    "label": 0
                },
                {
                    "sent": "Carol knows herself, and also Bob knows himself.",
                    "label": 0
                },
                {
                    "sent": "So the formal definition is the Union of the evaluation of the transitive closure property, part Expression E and the existential property path expression.",
                    "label": 1
                },
                {
                    "sent": "E. And here again, tuples that are created by this term A where a is an element of gamma are often ignored, so blazegraph again in all tested cases and allegrograph as we've seen it before.",
                    "label": 0
                },
                {
                    "sent": "If the evaluation of E is empty.",
                    "label": 0
                },
                {
                    "sent": "But if evaluation of is not empty, then these results are included.",
                    "label": 1
                },
                {
                    "sent": "And once again, Virtuoso does not execute these queries with two variables.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "What were our contributions?",
                    "label": 0
                },
                {
                    "sent": "We have a formal definitions definition of the W 3 semantics of property paths.",
                    "label": 0
                },
                {
                    "sent": "And also we contributed pezzetti the benchmark for the semantic evaluation of property path implementations.",
                    "label": 0
                },
                {
                    "sent": "And we did five iterations of five commonly used RDF stores to what extent they adhere to the W. 3C semantics and showed that four of them have quite some issues in that terms.",
                    "label": 0
                },
                {
                    "sent": "OK, then thank you for your attention.",
                    "label": 0
                }
            ]
        }
    }
}