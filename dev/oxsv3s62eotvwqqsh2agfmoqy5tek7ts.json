{
    "id": "oxsv3s62eotvwqqsh2agfmoqy5tek7ts",
    "title": "Scalable Nonmonotonic Reasoning over RDF Data Using MapReduce",
    "info": {
        "author": [
            "Spyros Kotoulas, IBM Research"
        ],
        "published": "Nov. 30, 2012",
        "recorded": "November 2012",
        "category": [
            "Top->Computer Science->Semantic Web->RDF - Resource Description Framework"
        ]
    },
    "url": "http://videolectures.net/iswc2012_kotoulas_mapreduce/",
    "segmentation": [
        [
            "Hello, my name is Peter Scott.",
            "Unless I am with IBM Research and this is joint work with the list of magic disregard, said O'Neill and yours, Louis from University of Great 4th and University of Huddersfield.",
            "So what I want to talk about the scalable non monotonic reasoning over RDF data using map reduce."
        ],
        [
            "Skip this.",
            "In general, OK, we all know that in linked data you have this very large datasets and their huge many times you cannot process them in memory.",
            "Or if you do want to process in memory, you can use one of these very big and very nice machines.",
            "Right, so much of the research has focused, or maybe even all of the research in monotonic reason, monotonic parallel reasoning.",
            "So the reason for this is that negation is a bad thing for parallelization.",
            "So if you infer that something does not exist, let's say or, that is not true, then you have to propagate this information to all other nodes in order to for them to be able to reason.",
            "So in failing and making negative conclusions, campus parallelization.",
            "So what we have done is we have used different kind of logic that has some properties that allows you to parallelize nonmonotonic reasoning and this kind of logic is called the defeasible logic.",
            "So intuitively what defensibly defeasible logic allows you to do is to say that this holds unless something else hold.",
            "This is the main intuition behind it, so an advantage of using such a.",
            "Another advantage of using such logic is that it is very easily mappable for humans.",
            "It's quite easy to explain defeasible rules.",
            "Second advantage is that you can use as an applied approach to avoid triviality of inference.",
            "So what do I mean by triviality of inference?",
            "Again, many times we say that OK, our DFS or our host is very nice for reasoning cause.",
            "It does not lead to inconsistency.",
            "Yes, it does not lead to inconsistency, but yes it can lead to very useless conclusions.",
            "So there has been there has been working there later through that solves that if you take arbitrary web data and you materialize all of it, you would just get.",
            "It's not that it will break, you will just get conclusions that are not very useful.",
            "Another very interesting property of Defeasible reasoning is that it has low complexity, actually has lower complexity than our horse, for example.",
            "Nevertheless, after now Indefeasibly Defeasible logic has been implemented only for in memory reasoning.",
            "So since it was in memory, it hasn't been applied to huge datasets.",
            "What we have done in this work is that we have shown that."
        ],
        [
            "Defeasible reasoning can work on RDF data, and it is actually quite a nice thing for parallelization, so it is relatively straightforward and performant paralyzed physicalism."
        ],
        [
            "So I will not bother you with many formulas and definitions.",
            "This is just the main idea of how defeasible logics work, so you have facts.",
            "You can say that niggle is a bed and then you have a strict rules.",
            "So you can say that all birds are animals.",
            "Strict rule just always hold.",
            "So all birds are animals.",
            "Then you also have defeasible rules, for example that bird flies.",
            "This means that yes it holds, but the this is conditional to some.",
            "Thinks."
        ],
        [
            "What are these other things these other things are defeaters, so if something is a bird but has broken wings, then it does not fly.",
            "Now what you get is you get the rule set.",
            "So I set of rules and effectives and some superiority relationship.",
            "So in this case I say that birds fly unless they have broken wings.",
            "So I have these two rules and I also have a superiority relation so that our prime defeats are in this case."
        ],
        [
            "So how many people here are familiar with MapReduce?",
            "OK most people, so I will."
        ],
        [
            "Skip this."
        ],
        [
            "So we have used map reduce.",
            "This is enough.",
            "Now the defeasible reasoning can be split into two categories.",
            "When we have a stratified and not non stratified stratified.",
            "What does it mean to have a stratified or non stratified defeasible logic?",
            "If it is stratified it means that we can do this so we can split our rules at the application of rules in strata and we can just start run one stratum at a time.",
            "So we can just say.",
            "First, you will run all of these rules and then you will run all of these rules and then you will run this route.",
            "Right, and what this is?",
            "This is obviously very good for environment like MapReduce because this means that you can do this.",
            "Typically it's not always, but it normally means that you can run your program in a fixed number of jobs.",
            "And just to give you some intuition about how this compares to other logics, an RDF S an owl host.",
            "They're not certifiable becausw.",
            "In principle, you might need the number of jobs that you need depends on your data.",
            "In practice it doesn't, but in principle does.",
            "So."
        ],
        [
            "Let's see how we would be able to do defeasible reasoning.",
            "Having multiple arguments.",
            "So let's say we have this rule set.",
            "So if somebody has sent an application, it is complete, then it can be accepted by University.",
            "And then, but if somebody has a certificate that is not valid for this for University, then the student is not accepted by the University and then again we have accepted, accepted by University means that you get accepted by Department at this part of the University and we also have a superiority rule that the same complete application overrules having an invalid certificate.",
            "Note in this case that we have these three rules and this 3 rules dictate how we can make the different strata in our program.",
            "But the superiority relation does not.",
            "So what do we really need to do here?",
            "So we have these rules, we just need to make some joints we have to match the left part of the rule.",
            "So you have to match this.",
            "This isn't this.",
            "Right, so initially what we need to do is we make initial Passover the data and we transform our facts into this path."
        ],
        [
            "Is that something always holds so the input always holds?",
            "It is not possible that the input will be defeated by something, so for the for the for the lowest level, you don't really need to do any reason, you just have to extract the relevant knowledge from your knowledge base.",
            "But in general, for all the other stratum, what you will need to do is you need to calculate the rules that file and then you have to do something about the defeated.",
            "So you have to figure out whether someone face has been has been defeated or not.",
            "Let's see a practical example for this.",
            "So now this is our knowledge."
        ],
        [
            "Let's say so.",
            "Don't send an application.",
            "All of these facts are not cannot be defeated.",
            "This is input.",
            "We make an initial map face and we extract what is relevant for the rules that we have.",
            "So for the lower stratum this sub organization off is not relevant, so we can just.",
            "Get rid of it.",
            "So we just basically filter the input according to the left part of the rule sets we have."
        ],
        [
            "Then we take this the this relevant part and we group and sort more less making.",
            "Join at the Reducer so we have made we have done this using a reduce side join, but in practice any optimization that you might want to do for joins in MapReduce would also work here.",
            "So if you would want to do some tricks and managed to push the join at the map side, that would work as well.",
            "In our scenario that was not necessary.",
            "So as I will show later, we could get good performance without doing it, but there is not much difference between doing this and just doing some joints to match the rules.",
            "So now we match the fact that we have to evolution."
        ],
        [
            "Then we make some inferences that so from the first one we have, we make we made the inference that dog has been accepted by Department and then that is true.",
            "And then from the."
        ],
        [
            "Mother also from the bottom part because John does not have a valid certificate we get."
        ],
        [
            "Negation so this is what we got from what was the input of the first phase?"
        ],
        [
            "Now for the second phase.",
            "Now we want to know what holds and not what does not hold in our system.",
            "So we get again we get the input plus.",
            "And what we have in fact.",
            "So now all of the other.",
            "So they sent application whether an application complete and so on are not relevant.",
            "But what is relevant is whether Department softball ganization the University.",
            "So we've got the tools that Defeasible conclusions there, plus some part of."
        ],
        [
            "Labeled we mark them again and but now what we do is that we group according to every statement.",
            "So to every trippy.",
            "So we partition tables and then we collect all the sessions that we can make about the trip.",
            "So the first one.",
            "Obviously there is only one assessment can be made on the second one.",
            "Now everything that we can say about this trip we grouped together using reduce.",
            "So now we can say OK rule one says that Don has been accepted by the Department.",
            "Rule 2 says that John has not been accepted by the Department.",
            "Now, having all of this thing in the same reducer just allows us to draw a conclusion.",
            "So now we can just say that OK zone has been accepted by the Department and the first fact was not relevant.",
            "So we do not need to."
        ],
        [
            "For something this is a basic intuition.",
            "This is how you can do this kind of non monotonic reasoning using map reduce."
        ],
        [
            "We have run some experiments of this cycle.",
            "We have used 1 billion LLL UBM data set and we had to make a custom defeasible rules set.",
            "So if you are interested they also have the rules.",
            "In the end we could not use the normal Airbnb or we could not use our DFS or OWL or anything like this, just cause they're not, they're not defeasible there no defeaters, so we just had to make our own to test values.",
            "Aspects of our approach.",
            "So we have tried this on.",
            "And IBM version of Hadoop so IBM Hadoop cluster is Compara bulto Hadoop oh 23.",
            "Actually this Hadoop oh 23 plus some enhancements by IBM and we run it on large server connected to his son.",
            "So now again we we can run it on a single server or we can run it on a cluster that was not very relevant for us.",
            "What we really cared was to see what the scalability characteristics of our approaches and the load balancing of our approach are.",
            "There are load balancing properties of our approach so.",
            "This is a result we got when scaling with the number of facts."
        ],
        [
            "So we can see that the scalability is really good then dashed line there is linear scalability and we see that our approach gate scales even better than linearly.",
            "So you can see that between what is 125 million facts and 1 million the.",
            "Yeah, so it looks around two or three times.",
            "Anyway, that does not approach 10 times time, which is quite good and you see that the lines are completely flat.",
            "But OK in the Hadoop this is.",
            "This does not say much about how your approach would scale if you would scale the and also the throughput of the system is quite good.",
            "So without doing dictionary encoding or anything like this we have.",
            "We had similar throughput with web by for example.",
            "The reason for this is just the defeasible logic is actually simpler sample.",
            "It's not similarities, it has better parallelization characteristics.",
            "OK, we want it also to see how what will happen if we would just increase the number of reducers of which would be the same as if you would increase the number of nodes.",
            "So running 40 taxing tasks in parallel, we counted the minimum average and."
        ],
        [
            "Maximum around times.",
            "Better job and this result.",
            "We get very different jobs so this is for one of the rules that required running Kate sobs so you can see that the minimum what we really care.",
            "What you really care about in this case is the ratio of a maximum coverage and we see that they are not very significant.",
            "The very significant discrepancy meaning that our system is quite the load balancing properties of our system are quite good."
        ],
        [
            "So to see how this would scale if you would just put more reduce tasks tasks.",
            "This is similar to see to think what would happen if we would increase the number of partitions that we have in the system.",
            "We run the same thing, but doing 400 tasks and we see that this."
        ],
        [
            "Jason doesn't really say."
        ],
        [
            "And actually, for 400 tasks that may even look a bit better and actually also.",
            "For 400 tasks, the system was a bit was actually a bit faster than 40 tasks, although it was the same hardware, but that is attributed to map reduce just being a bit more efficient when calculating when working with smaller partitions.",
            "These are the main.",
            "I guess this is the performance that we got now.",
            "Defeasible logic can also be applied to non stratified."
        ],
        [
            "Toolset, right so?",
            "Who says that you cannot just split into four stratum and then you're done and we had some initial thoughts and we did so many.",
            "Selling this investigation about it and it turns out that what is really hurting is that you have to somehow group all possible negative conclusions that you can that you can draw an.",
            "It seems that this is a very tricky thing to do, So what?",
            "What it would mean intensive parallelization is that you would have to start making Cartesian product over the rules.",
            "We still working on finding.",
            "So now current work safety debate on finding smarter ways to partition your data so you can avoid this Cartesian product.",
            "So it's obvious that using Cartesian products in such a system would just not scale at all.",
            "And then other."
        ],
        [
            "Kinds of kids are the future work that we have is we want to run more experiments to look how the efficiency of the logic quit working when we have datasets with different characteristics.",
            "Now we have used LBM which is fairly standard for reasoning but it would be interesting to see what would happen when you go to datasets that have.",
            "And characteristics you don't expect.",
            "So if would run this over web data, what would be the what would be the runtime characteristics of our approach, the same way that what would happen if we make some common sense rules.",
            "First of all, we would have to derive some common sense rules for web data, and then we could run the exact approach on web crawls.",
            "For example, where you can say that, yes, OK, I want this rule, but not if this condition hold so.",
            "With this logic, you could express things like OK, I want you to do.",
            "To do subclass reasoning.",
            "But yes, if there is any kind of I don't want, then I don't want to have any kind of circle, since then subclass hierarchies.",
            "So you could say yes, something can be subclass of something else, unless something else is subclass of something that you would not want if you would do that in now you would just assume it would not be a problem, But for web scale.",
            "For web data you might want to make this kind of common sense rules.",
            "Then again, the same approach using market use could be used in other complex representation for other complex representation methods like answer set programming or you can do diagnose ontologies and so on so.",
            "That's all I want to say, so thank you for your time."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Hello, my name is Peter Scott.",
                    "label": 0
                },
                {
                    "sent": "Unless I am with IBM Research and this is joint work with the list of magic disregard, said O'Neill and yours, Louis from University of Great 4th and University of Huddersfield.",
                    "label": 1
                },
                {
                    "sent": "So what I want to talk about the scalable non monotonic reasoning over RDF data using map reduce.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": false,
            "summarization_data": []
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Skip this.",
                    "label": 0
                },
                {
                    "sent": "In general, OK, we all know that in linked data you have this very large datasets and their huge many times you cannot process them in memory.",
                    "label": 0
                },
                {
                    "sent": "Or if you do want to process in memory, you can use one of these very big and very nice machines.",
                    "label": 0
                },
                {
                    "sent": "Right, so much of the research has focused, or maybe even all of the research in monotonic reason, monotonic parallel reasoning.",
                    "label": 0
                },
                {
                    "sent": "So the reason for this is that negation is a bad thing for parallelization.",
                    "label": 0
                },
                {
                    "sent": "So if you infer that something does not exist, let's say or, that is not true, then you have to propagate this information to all other nodes in order to for them to be able to reason.",
                    "label": 0
                },
                {
                    "sent": "So in failing and making negative conclusions, campus parallelization.",
                    "label": 0
                },
                {
                    "sent": "So what we have done is we have used different kind of logic that has some properties that allows you to parallelize nonmonotonic reasoning and this kind of logic is called the defeasible logic.",
                    "label": 0
                },
                {
                    "sent": "So intuitively what defensibly defeasible logic allows you to do is to say that this holds unless something else hold.",
                    "label": 0
                },
                {
                    "sent": "This is the main intuition behind it, so an advantage of using such a.",
                    "label": 1
                },
                {
                    "sent": "Another advantage of using such logic is that it is very easily mappable for humans.",
                    "label": 0
                },
                {
                    "sent": "It's quite easy to explain defeasible rules.",
                    "label": 0
                },
                {
                    "sent": "Second advantage is that you can use as an applied approach to avoid triviality of inference.",
                    "label": 0
                },
                {
                    "sent": "So what do I mean by triviality of inference?",
                    "label": 1
                },
                {
                    "sent": "Again, many times we say that OK, our DFS or our host is very nice for reasoning cause.",
                    "label": 0
                },
                {
                    "sent": "It does not lead to inconsistency.",
                    "label": 0
                },
                {
                    "sent": "Yes, it does not lead to inconsistency, but yes it can lead to very useless conclusions.",
                    "label": 0
                },
                {
                    "sent": "So there has been there has been working there later through that solves that if you take arbitrary web data and you materialize all of it, you would just get.",
                    "label": 0
                },
                {
                    "sent": "It's not that it will break, you will just get conclusions that are not very useful.",
                    "label": 1
                },
                {
                    "sent": "Another very interesting property of Defeasible reasoning is that it has low complexity, actually has lower complexity than our horse, for example.",
                    "label": 0
                },
                {
                    "sent": "Nevertheless, after now Indefeasibly Defeasible logic has been implemented only for in memory reasoning.",
                    "label": 0
                },
                {
                    "sent": "So since it was in memory, it hasn't been applied to huge datasets.",
                    "label": 0
                },
                {
                    "sent": "What we have done in this work is that we have shown that.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Defeasible reasoning can work on RDF data, and it is actually quite a nice thing for parallelization, so it is relatively straightforward and performant paralyzed physicalism.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So I will not bother you with many formulas and definitions.",
                    "label": 0
                },
                {
                    "sent": "This is just the main idea of how defeasible logics work, so you have facts.",
                    "label": 0
                },
                {
                    "sent": "You can say that niggle is a bed and then you have a strict rules.",
                    "label": 1
                },
                {
                    "sent": "So you can say that all birds are animals.",
                    "label": 0
                },
                {
                    "sent": "Strict rule just always hold.",
                    "label": 0
                },
                {
                    "sent": "So all birds are animals.",
                    "label": 0
                },
                {
                    "sent": "Then you also have defeasible rules, for example that bird flies.",
                    "label": 1
                },
                {
                    "sent": "This means that yes it holds, but the this is conditional to some.",
                    "label": 0
                },
                {
                    "sent": "Thinks.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "What are these other things these other things are defeaters, so if something is a bird but has broken wings, then it does not fly.",
                    "label": 0
                },
                {
                    "sent": "Now what you get is you get the rule set.",
                    "label": 0
                },
                {
                    "sent": "So I set of rules and effectives and some superiority relationship.",
                    "label": 1
                },
                {
                    "sent": "So in this case I say that birds fly unless they have broken wings.",
                    "label": 0
                },
                {
                    "sent": "So I have these two rules and I also have a superiority relation so that our prime defeats are in this case.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So how many people here are familiar with MapReduce?",
                    "label": 0
                },
                {
                    "sent": "OK most people, so I will.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Skip this.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So we have used map reduce.",
                    "label": 0
                },
                {
                    "sent": "This is enough.",
                    "label": 0
                },
                {
                    "sent": "Now the defeasible reasoning can be split into two categories.",
                    "label": 1
                },
                {
                    "sent": "When we have a stratified and not non stratified stratified.",
                    "label": 0
                },
                {
                    "sent": "What does it mean to have a stratified or non stratified defeasible logic?",
                    "label": 0
                },
                {
                    "sent": "If it is stratified it means that we can do this so we can split our rules at the application of rules in strata and we can just start run one stratum at a time.",
                    "label": 0
                },
                {
                    "sent": "So we can just say.",
                    "label": 0
                },
                {
                    "sent": "First, you will run all of these rules and then you will run all of these rules and then you will run this route.",
                    "label": 0
                },
                {
                    "sent": "Right, and what this is?",
                    "label": 0
                },
                {
                    "sent": "This is obviously very good for environment like MapReduce because this means that you can do this.",
                    "label": 0
                },
                {
                    "sent": "Typically it's not always, but it normally means that you can run your program in a fixed number of jobs.",
                    "label": 0
                },
                {
                    "sent": "And just to give you some intuition about how this compares to other logics, an RDF S an owl host.",
                    "label": 0
                },
                {
                    "sent": "They're not certifiable becausw.",
                    "label": 0
                },
                {
                    "sent": "In principle, you might need the number of jobs that you need depends on your data.",
                    "label": 0
                },
                {
                    "sent": "In practice it doesn't, but in principle does.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Let's see how we would be able to do defeasible reasoning.",
                    "label": 0
                },
                {
                    "sent": "Having multiple arguments.",
                    "label": 0
                },
                {
                    "sent": "So let's say we have this rule set.",
                    "label": 1
                },
                {
                    "sent": "So if somebody has sent an application, it is complete, then it can be accepted by University.",
                    "label": 0
                },
                {
                    "sent": "And then, but if somebody has a certificate that is not valid for this for University, then the student is not accepted by the University and then again we have accepted, accepted by University means that you get accepted by Department at this part of the University and we also have a superiority rule that the same complete application overrules having an invalid certificate.",
                    "label": 0
                },
                {
                    "sent": "Note in this case that we have these three rules and this 3 rules dictate how we can make the different strata in our program.",
                    "label": 0
                },
                {
                    "sent": "But the superiority relation does not.",
                    "label": 1
                },
                {
                    "sent": "So what do we really need to do here?",
                    "label": 0
                },
                {
                    "sent": "So we have these rules, we just need to make some joints we have to match the left part of the rule.",
                    "label": 1
                },
                {
                    "sent": "So you have to match this.",
                    "label": 0
                },
                {
                    "sent": "This isn't this.",
                    "label": 0
                },
                {
                    "sent": "Right, so initially what we need to do is we make initial Passover the data and we transform our facts into this path.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Is that something always holds so the input always holds?",
                    "label": 0
                },
                {
                    "sent": "It is not possible that the input will be defeated by something, so for the for the for the lowest level, you don't really need to do any reason, you just have to extract the relevant knowledge from your knowledge base.",
                    "label": 1
                },
                {
                    "sent": "But in general, for all the other stratum, what you will need to do is you need to calculate the rules that file and then you have to do something about the defeated.",
                    "label": 0
                },
                {
                    "sent": "So you have to figure out whether someone face has been has been defeated or not.",
                    "label": 0
                },
                {
                    "sent": "Let's see a practical example for this.",
                    "label": 0
                },
                {
                    "sent": "So now this is our knowledge.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Let's say so.",
                    "label": 0
                },
                {
                    "sent": "Don't send an application.",
                    "label": 0
                },
                {
                    "sent": "All of these facts are not cannot be defeated.",
                    "label": 0
                },
                {
                    "sent": "This is input.",
                    "label": 0
                },
                {
                    "sent": "We make an initial map face and we extract what is relevant for the rules that we have.",
                    "label": 0
                },
                {
                    "sent": "So for the lower stratum this sub organization off is not relevant, so we can just.",
                    "label": 0
                },
                {
                    "sent": "Get rid of it.",
                    "label": 0
                },
                {
                    "sent": "So we just basically filter the input according to the left part of the rule sets we have.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Then we take this the this relevant part and we group and sort more less making.",
                    "label": 0
                },
                {
                    "sent": "Join at the Reducer so we have made we have done this using a reduce side join, but in practice any optimization that you might want to do for joins in MapReduce would also work here.",
                    "label": 0
                },
                {
                    "sent": "So if you would want to do some tricks and managed to push the join at the map side, that would work as well.",
                    "label": 0
                },
                {
                    "sent": "In our scenario that was not necessary.",
                    "label": 0
                },
                {
                    "sent": "So as I will show later, we could get good performance without doing it, but there is not much difference between doing this and just doing some joints to match the rules.",
                    "label": 0
                },
                {
                    "sent": "So now we match the fact that we have to evolution.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Then we make some inferences that so from the first one we have, we make we made the inference that dog has been accepted by Department and then that is true.",
                    "label": 0
                },
                {
                    "sent": "And then from the.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Mother also from the bottom part because John does not have a valid certificate we get.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Negation so this is what we got from what was the input of the first phase?",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Now for the second phase.",
                    "label": 0
                },
                {
                    "sent": "Now we want to know what holds and not what does not hold in our system.",
                    "label": 0
                },
                {
                    "sent": "So we get again we get the input plus.",
                    "label": 0
                },
                {
                    "sent": "And what we have in fact.",
                    "label": 0
                },
                {
                    "sent": "So now all of the other.",
                    "label": 0
                },
                {
                    "sent": "So they sent application whether an application complete and so on are not relevant.",
                    "label": 0
                },
                {
                    "sent": "But what is relevant is whether Department softball ganization the University.",
                    "label": 0
                },
                {
                    "sent": "So we've got the tools that Defeasible conclusions there, plus some part of.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Labeled we mark them again and but now what we do is that we group according to every statement.",
                    "label": 0
                },
                {
                    "sent": "So to every trippy.",
                    "label": 0
                },
                {
                    "sent": "So we partition tables and then we collect all the sessions that we can make about the trip.",
                    "label": 0
                },
                {
                    "sent": "So the first one.",
                    "label": 0
                },
                {
                    "sent": "Obviously there is only one assessment can be made on the second one.",
                    "label": 0
                },
                {
                    "sent": "Now everything that we can say about this trip we grouped together using reduce.",
                    "label": 0
                },
                {
                    "sent": "So now we can say OK rule one says that Don has been accepted by the Department.",
                    "label": 0
                },
                {
                    "sent": "Rule 2 says that John has not been accepted by the Department.",
                    "label": 0
                },
                {
                    "sent": "Now, having all of this thing in the same reducer just allows us to draw a conclusion.",
                    "label": 0
                },
                {
                    "sent": "So now we can just say that OK zone has been accepted by the Department and the first fact was not relevant.",
                    "label": 0
                },
                {
                    "sent": "So we do not need to.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "For something this is a basic intuition.",
                    "label": 0
                },
                {
                    "sent": "This is how you can do this kind of non monotonic reasoning using map reduce.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We have run some experiments of this cycle.",
                    "label": 0
                },
                {
                    "sent": "We have used 1 billion LLL UBM data set and we had to make a custom defeasible rules set.",
                    "label": 0
                },
                {
                    "sent": "So if you are interested they also have the rules.",
                    "label": 0
                },
                {
                    "sent": "In the end we could not use the normal Airbnb or we could not use our DFS or OWL or anything like this, just cause they're not, they're not defeasible there no defeaters, so we just had to make our own to test values.",
                    "label": 0
                },
                {
                    "sent": "Aspects of our approach.",
                    "label": 0
                },
                {
                    "sent": "So we have tried this on.",
                    "label": 0
                },
                {
                    "sent": "And IBM version of Hadoop so IBM Hadoop cluster is Compara bulto Hadoop oh 23.",
                    "label": 1
                },
                {
                    "sent": "Actually this Hadoop oh 23 plus some enhancements by IBM and we run it on large server connected to his son.",
                    "label": 0
                },
                {
                    "sent": "So now again we we can run it on a single server or we can run it on a cluster that was not very relevant for us.",
                    "label": 0
                },
                {
                    "sent": "What we really cared was to see what the scalability characteristics of our approaches and the load balancing of our approach are.",
                    "label": 0
                },
                {
                    "sent": "There are load balancing properties of our approach so.",
                    "label": 0
                },
                {
                    "sent": "This is a result we got when scaling with the number of facts.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So we can see that the scalability is really good then dashed line there is linear scalability and we see that our approach gate scales even better than linearly.",
                    "label": 0
                },
                {
                    "sent": "So you can see that between what is 125 million facts and 1 million the.",
                    "label": 0
                },
                {
                    "sent": "Yeah, so it looks around two or three times.",
                    "label": 0
                },
                {
                    "sent": "Anyway, that does not approach 10 times time, which is quite good and you see that the lines are completely flat.",
                    "label": 0
                },
                {
                    "sent": "But OK in the Hadoop this is.",
                    "label": 0
                },
                {
                    "sent": "This does not say much about how your approach would scale if you would scale the and also the throughput of the system is quite good.",
                    "label": 0
                },
                {
                    "sent": "So without doing dictionary encoding or anything like this we have.",
                    "label": 0
                },
                {
                    "sent": "We had similar throughput with web by for example.",
                    "label": 0
                },
                {
                    "sent": "The reason for this is just the defeasible logic is actually simpler sample.",
                    "label": 0
                },
                {
                    "sent": "It's not similarities, it has better parallelization characteristics.",
                    "label": 0
                },
                {
                    "sent": "OK, we want it also to see how what will happen if we would just increase the number of reducers of which would be the same as if you would increase the number of nodes.",
                    "label": 0
                },
                {
                    "sent": "So running 40 taxing tasks in parallel, we counted the minimum average and.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Maximum around times.",
                    "label": 0
                },
                {
                    "sent": "Better job and this result.",
                    "label": 0
                },
                {
                    "sent": "We get very different jobs so this is for one of the rules that required running Kate sobs so you can see that the minimum what we really care.",
                    "label": 0
                },
                {
                    "sent": "What you really care about in this case is the ratio of a maximum coverage and we see that they are not very significant.",
                    "label": 0
                },
                {
                    "sent": "The very significant discrepancy meaning that our system is quite the load balancing properties of our system are quite good.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So to see how this would scale if you would just put more reduce tasks tasks.",
                    "label": 0
                },
                {
                    "sent": "This is similar to see to think what would happen if we would increase the number of partitions that we have in the system.",
                    "label": 0
                },
                {
                    "sent": "We run the same thing, but doing 400 tasks and we see that this.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Jason doesn't really say.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And actually, for 400 tasks that may even look a bit better and actually also.",
                    "label": 0
                },
                {
                    "sent": "For 400 tasks, the system was a bit was actually a bit faster than 40 tasks, although it was the same hardware, but that is attributed to map reduce just being a bit more efficient when calculating when working with smaller partitions.",
                    "label": 0
                },
                {
                    "sent": "These are the main.",
                    "label": 0
                },
                {
                    "sent": "I guess this is the performance that we got now.",
                    "label": 0
                },
                {
                    "sent": "Defeasible logic can also be applied to non stratified.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Toolset, right so?",
                    "label": 0
                },
                {
                    "sent": "Who says that you cannot just split into four stratum and then you're done and we had some initial thoughts and we did so many.",
                    "label": 0
                },
                {
                    "sent": "Selling this investigation about it and it turns out that what is really hurting is that you have to somehow group all possible negative conclusions that you can that you can draw an.",
                    "label": 0
                },
                {
                    "sent": "It seems that this is a very tricky thing to do, So what?",
                    "label": 0
                },
                {
                    "sent": "What it would mean intensive parallelization is that you would have to start making Cartesian product over the rules.",
                    "label": 0
                },
                {
                    "sent": "We still working on finding.",
                    "label": 0
                },
                {
                    "sent": "So now current work safety debate on finding smarter ways to partition your data so you can avoid this Cartesian product.",
                    "label": 0
                },
                {
                    "sent": "So it's obvious that using Cartesian products in such a system would just not scale at all.",
                    "label": 0
                },
                {
                    "sent": "And then other.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Kinds of kids are the future work that we have is we want to run more experiments to look how the efficiency of the logic quit working when we have datasets with different characteristics.",
                    "label": 1
                },
                {
                    "sent": "Now we have used LBM which is fairly standard for reasoning but it would be interesting to see what would happen when you go to datasets that have.",
                    "label": 0
                },
                {
                    "sent": "And characteristics you don't expect.",
                    "label": 0
                },
                {
                    "sent": "So if would run this over web data, what would be the what would be the runtime characteristics of our approach, the same way that what would happen if we make some common sense rules.",
                    "label": 0
                },
                {
                    "sent": "First of all, we would have to derive some common sense rules for web data, and then we could run the exact approach on web crawls.",
                    "label": 0
                },
                {
                    "sent": "For example, where you can say that, yes, OK, I want this rule, but not if this condition hold so.",
                    "label": 0
                },
                {
                    "sent": "With this logic, you could express things like OK, I want you to do.",
                    "label": 0
                },
                {
                    "sent": "To do subclass reasoning.",
                    "label": 0
                },
                {
                    "sent": "But yes, if there is any kind of I don't want, then I don't want to have any kind of circle, since then subclass hierarchies.",
                    "label": 0
                },
                {
                    "sent": "So you could say yes, something can be subclass of something else, unless something else is subclass of something that you would not want if you would do that in now you would just assume it would not be a problem, But for web scale.",
                    "label": 0
                },
                {
                    "sent": "For web data you might want to make this kind of common sense rules.",
                    "label": 0
                },
                {
                    "sent": "Then again, the same approach using market use could be used in other complex representation for other complex representation methods like answer set programming or you can do diagnose ontologies and so on so.",
                    "label": 0
                },
                {
                    "sent": "That's all I want to say, so thank you for your time.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": false,
            "summarization_data": []
        }
    }
}