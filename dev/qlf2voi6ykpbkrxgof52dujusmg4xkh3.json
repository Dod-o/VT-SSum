{
    "id": "qlf2voi6ykpbkrxgof52dujusmg4xkh3",
    "title": "HDTQ: Managing RDF Datasets in Compressed Space",
    "info": {
        "author": [
            "Javier David Fern\u00e1ndez Garc\u00eda, Vienna University of Economics and Business"
        ],
        "published": "July 10, 2018",
        "recorded": "June 2018",
        "category": [
            "Top->Computer Science->Big Data",
            "Top->Computer Science->Semantic Web"
        ]
    },
    "url": "http://videolectures.net/eswc2018_fernandez_compressed_space/",
    "segmentation": [
        [
            "I'm going to present these work, which is basically an extension of which city for our two minutes RDF datasets.",
            "So to Melissa name graphs.",
            "OK, so of course I have to in."
        ],
        [
            "Lucidity, I guess most of you know already, but I have to make it clear.",
            "So which is the well was the main motivation was that we realize it, that most of the current RDF formats are based on plane plane syntax or playing format.",
            "Just text like Aria like 3 and XML.",
            "Turtle and so on.",
            "So these are required.",
            "Verbal OK, so they're not thought for.",
            "For human.",
            "They thought they thought for you and not for machines.",
            "So we have like the pedia.",
            "Then we don't have to open the file and just see I don't know 100 billion.",
            "OK, so of course, given that this is a very huge size, then usually when you publish this information you publish in compressed format.",
            "So you're going to consume it offline.",
            "Then you have to decompress the downloaded file, decompress the file, index it like deal with all the mention of the data and then at the end just consume OK.",
            "So in order to tackle this we came up with this city.",
            "So it's a compressed format for RDF and essentially the main feature is that it is not only compressed.",
            "But it has some indexes in rent that you can use to just retrieve RDF without decompression.",
            "OK, so you can square the file without decompressing the file.",
            "It's very fast until patterns OK and well, we also support this particle.",
            "We basically we have some grammar for Gina, so you can use Gina and then they remain in Chinese city behind OK, so just to give you some numbers so the current version of the pedia in English is more like 600 million triples.",
            "So it's more than 100 gigabytes in zip.",
            "Uh, sorry, blame then if you ship it is more or less 10 gigabytes.",
            "OK which is quite good and it is a bit more so it's 13 but on the bright side you can query this information on this compressed size, so that's the main point."
        ],
        [
            "So in the last year we build community around the city, so we have some tools to deal with the city in C++ an in Java.",
            "So this just shows you that for instance in the last two weeks we had about 150 clones, which is quite OK I guess for the small communities that we are."
        ],
        [
            "Then of course we have seen the sample application examples in the last years.",
            "So for instance a laundromat, they crawl the web, the world data and they have more than 650 K datasets in entity.",
            "And of course Reddit event EPF.",
            "OK, as we saw before in the presentation.",
            "So more so I would say most of the TPF service they are based on entity and you can just download one entity and just search for TPF in few seconds.",
            "OK. Also with this feature to let also surface particle.",
            "With these general wrapper we have seen some implementation, some some real use case.",
            "Like for instance there's a company called Data World who apparently they are using this in the real life environment and then given that we have also some fast retrieval over there over the files, then there are some people that work on just giving an advanced features.",
            "OK, so for instance there are some reports us to compute the top case for this path or necessity to do query answering nothing.",
            "Dennis is around to the query answering also based on entity.",
            "Back end to the versioning.",
            "Given their size, you can just replicate the data or do the version of your data on entity.",
            "Also there are some variant to do a streaming and also to do some advanced graphs and graph analytics.",
            "So for instance also by Denis tomorrow I will recommend to have a look at this paper three.",
            "They compute Pagerank also based on the city.",
            "So there was."
        ],
        [
            "So thankful one of the last things that we did I think it was last year so we build a lot a lot, which is basically given this crawl of lot laundromat.",
            "So we just merge everything into one file so we have one file who in entity who has that has more than 28 billion triples and just take more risk of a TB OK and you need about 16 gigabytes of RAM to query it so you can just use a standard laptop to have these 28 billion triples and manage it."
        ],
        [
            "So this was a city, but then we had a recurring question.",
            "Like in some conferences around OK, but what about RDF datasets?",
            "Can you manage the name graphs and we couldn't?",
            "OK, so that was the main point of this work that I'm presenting now is just to extend entity to deal with with RDF datasets within graphs.",
            "OK, like in this case we have a graph.",
            "We have another data set with two graphs, graph view, summer students here and graph to some students here.",
            "How to manage this entity?",
            "This is the work that I'm presenting so I have to present some."
        ],
        [
            "Some details of the city so that I can say then say how we extend it to these RDF datasets.",
            "OK, so now I'm going to present the basic of HTT.",
            "So instead of reality is based on three components, the Header dictionary on the triples.",
            "So the header is just meta data describing the datasets, like for instance the publication date, status and so on, and then the main components are the dictionary in the triples.",
            "So if we have a data set like this."
        ],
        [
            "I just removed DRI so you can just think of fire ice beanos whatever you like.",
            "So The thing is that some of the other strings could be very long.",
            "It can be shared across triples.",
            "OK, so we do is just two minutes, not a graph of strings.",
            "But I have ideas."
        ],
        [
            "OK, so we have two components, the dictionary in which we just list each of the different terms and we give one ID for each of these terms or different terms and then we manage the graph not agrapha string photograph of these.",
            "OK, so this safe space and just allow us to manage these graphs are Friday so we can have an index of ideas and not an index of strings.",
            "So for the dictionary.",
            "And so as you can see here, we just list everything.",
            "But this can lead to a long list of ideas.",
            "OK and longer ideas means more bytes to represent ideas."
        ],
        [
            "So we do just to split the dictionary in sections so we have specially the subject object and predicate sections.",
            "So yes, please by roles in the in the RDF triples and then we have a special section with the subject objects, so these are terms at the same time.",
            "Submits an obvious in the graph like this, we don't repeat in the two sections.",
            "Good, so we have some mapping for this particular sections, and then I won't explain match.",
            "But we have also approved based compression.",
            "OK, so these terms is in particular the.",
            "Objects can be can have a longer prefix share between different different terms, so we just use a standard prefix compression just to reduce the size, and then we have everything operation just to translate.",
            "For an idea string into string front ring 20s.",
            "Does that mean that the other dictionary?",
            "I won't go into?"
        ],
        [
            "Little, and then that reproduces with more complex.",
            "I hope I can be clear here.",
            "So what we do to manage this graph of IDs?",
            "OK, so we manage.",
            "This is what we call the Forest of tourism.",
            "OK, so each of the three parts for this subject is a tree, and then we have the asset of trees.",
            "So this is the conversion like the idea behind.",
            "So we have the subject predicate object so distributed one predicate 2.",
            "An obvious obvious 727 or so, one for each of their subjects.",
            "We have a tree right?",
            "So then this is the idea.",
            "So the main way to what we do to store this is just to have essentially two vectors.",
            "So the vector of predicates.",
            "Here these two 2 three are predicates here and there vector of objects here 77465 these are the obvious here, right?",
            "And then we just need to keep their structure of the trees and to do that we just use bits.",
            "OK, so essentially we have two sequences of bits for the predicates and for the objects and we will do is just to mark with one.",
            "If the note is the last child of the root, OK, so one is the last child series, not the last child.",
            "Like, for instance is the last side.",
            "Yes yes, yes yes.",
            "So in this case we have two, so this is not the last time zero.",
            "And this is the last one right?",
            "And the same for the obvious here.",
            "OK so we didn't have to do a rise of integers for the for the predicates and objects and two bit sequences just tomorrow district.",
            "And then with with this we have represented Destructor.",
            "OK, well, the graph.",
            "But we can also query it OK just the basic idea is that if you want to go for instance for predict for subject 3.",
            "So give me everything outside you three.",
            "OK, so whether we have to do here is just to get OK.",
            "This idea is not represented but each represented with the third one here.",
            "So we have at least here.",
            "So the third, the third subject is just with the third one.",
            "So between the 2nd and the third one here, right?",
            "So this is the.",
            "Three is represented here.",
            "This is the predicate three, this product free, and they will have to do the same for the objects.",
            "OK, so the third list here is just between the 2nd and the third one, so we have to look here.",
            "I look for the 2nd and the third one, so these are the list of objects, so 33463346.",
            "OK, so that's the main idea.",
            "A bit quick, but I hope you can follow a bit.",
            "With and I say that you have to just to find the the list.",
            "You have to count the number of ones OK, like for instance for the third subject you have to find the third one here, right?",
            "So of course this can be quite tricky.",
            "You have to just count the ones, but there are some."
        ],
        [
            "Structures that allow you to do this in constant time.",
            "OK, so this is what we called the magic of bits.",
            "OK, so there are some structures have compressed as well and they can allow this kind of operations.",
            "Just let me just remind three operations that you can do in Carson time so actively just very basic.",
            "So yes, give me the content in some position, like for instance the content importing is just one.",
            "OK, this is pretty easy.",
            "This is not so easy, just given the number of runs up to one position.",
            "This is called the rank.",
            "OK, so for instance how many ones I have?",
            "Until position 7 here.",
            "OK yes in Question Time you don't have to count.",
            "It says OK you have 4 ones right and then they select is the most interesting for us is the position where you have a certain number of occurrence.",
            "So for instance give me the position you have where you have the fifth one.",
            "OK, so 12345 this imposition line.",
            "OK and this is done in constant time.",
            "OK and this structure is just with a little overhead.",
            "So yes, represent this with little overhead and you have these operations in Question Time right?"
        ],
        [
            "So now it's very easy if you have these operation again.",
            "So give me everything about this idea three.",
            "OK, so you have just to locate with the select here with a select.",
            "Give me the position where certain number of 1 occur.",
            "Like I said before, give me the where is the 5th and you say OK in pushing nine it's OK.",
            "I'm looking for the third I have to get with a select where is the third one is here OK and this is the predicate.",
            "So three is rated to three and then the same here.",
            "OK what is the third list with a select again and you say?",
            "You get the list of objects.",
            "OK, that's the main idea.",
            "The magic of orbits."
        ],
        [
            "OK, I have another time here, but they will just skip because of the time, especially with this.",
            "As I said you can represent the graph and you can also do queries OK, But you can only do queries by subject.",
            "OK because we have the information is organized by subject right?",
            "So I want to explain math but we have."
        ],
        [
            "Another two indexes based on predicates and objects just to resolve all the all the possible queries.",
            "OK, so essentially this ideas position list.",
            "So for each of the predicates we just left, we just list in which position.",
            "Here you can find it.",
            "So for instance in predicate two you can find in position one.",
            "In position two you can find in position 45 and so on.",
            "OK, and with this you query by predicate, you just go to this list.",
            "You arrive to certain point.",
            "For instance here you get the number of subjects and then you go down.",
            "And you get the object related to that.",
            "That's the main idea for the predicates and for the objects.",
            "OK."
        ],
        [
            "So this is a city and now what happened with the extension for photographs?",
            "So well."
        ],
        [
            "For the header is just very simple.",
            "We have.",
            "We have just to add new metadata like for instance number of graphs, statistics on how many people we have per paragraph and so on.",
            "It's just basic information for the dictionary is also not very complex.",
            "What you have to do is just to add a new component.",
            "OK, so there are some opportunities with this idea to go here.",
            "So essentially we just go for the number of for each number of graph.",
            "We have different graphs and we have a new mapping for the graphs.",
            "So we decided to have a.",
            "A different section here.",
            "The other option could be to have a symbol here, so we have here which subject are also object, so we can have also which which graph which graph IRRI is also subject obvious award.",
            "But we decided that given that the graphs are not appearing match a submitter obvious thing, we can just repeat the information.",
            "OK, so we have just."
        ],
        [
            "I knew I knew partitioning for the graphs."
        ],
        [
            "For the for the triples, this is well.",
            "The thing that is more normal, so that we do is just and you quite information component.",
            "OK, so essentially what we do is just for each of the triples.",
            "OK, we just have a bit sequences orametrix saying in which graph this triple appear.",
            "OK, so for instance for we have.",
            "The idea is to have like a matrix.",
            "OK, the number of triples here per the number of graphs for each of the trippers we have just one.",
            "If these three performance Tip 2 appearing graph one.",
            "If these people 2 doesn't appear in craft 2, then you have a 0.",
            "So just huge matrix of ones and zeros.",
            "OK, I hope this is clear."
        ],
        [
            "Things we do to represent these metrics is just to go for two options.",
            "OK, so the first option is just annotated trippers.",
            "OK, so we have for each of the triples we have one vector representing this.",
            "This relationship between the two pros and the graph.",
            "And the other way, and the graph is just to go for the for each graph.",
            "So for each graph you have one vector representing the same information.",
            "So just an alternative we just evaluated, which is best just to have one vector here for its triple or having one vector for each of the graphs.",
            "And yes, I will mention later, but if you wander again this can be very huge.",
            "OK of course there are some implementation of bit sequences that provides these operations select rank and so on in Question Time and.",
            "Having this compress as well.",
            "OK so this this.",
            "Approaches where they do basically just to get advantage of consecutive series of ones and you reduce information so it's not so big as it can appear here.",
            "Who?"
        ],
        [
            "So with this information, how can we do queries?",
            "So let me just split by if you have queries with embedded graph or with bounded graphs.",
            "OK, so in this case is with unbounded graphs.",
            "So for instance giving everything for a particular subject, including the graph.",
            "So for instance give me everything about the three less obvious three, including which graph is that it appears.",
            "And let's start with the triples.",
            "So in this case we have just one vector for its triple.",
            "We started service with ATT so we identify which predicates is the one with submit three we dentify which object OK and then for each of the particular solutions then we start with the first solution here and we arrive to 333 OK.",
            "So this is a 333.",
            "We go for the vector in the 333 OK and we get one here.",
            "OK so this is the first solution.",
            "33334 and this is the graph one.",
            "So this is the first solution and then what we could do if we have more graphs then we can jump.",
            "Do the next one OK with this.",
            "With this select operation we can just OK give me the position of the next one and then we have one here in another graph, like Grafton.",
            "Then we could jump directly to the next one, so this is an optimization that we have given this disorganization.",
            "OK, then we go for the second solution, so it will be subject 3 predicate, three an object, six OK, and is that Reaper 4.",
            "So we go to that Reaper 4 here to the vector, perform and then we find, see run.",
            "Then we find the first one here and this is graph 2.",
            "So this is the solution for the second mistaken solution.",
            "OK answer one.",
            "OK."
        ],
        [
            "So the next one is just to see how we can do it with entity graphs.",
            "So in this case we have one vector paragraph is kind of similar.",
            "We go for the first solution again OK and then we have to go for for the particular graph for each of the vectors we have to find if these 333 has a one or not OK, so we go to the first vector graph.",
            "One is this one.",
            "Yes, so this is a solution.",
            "OK, and then here we cannot do this optimization.",
            "OK, so we can also give me the next one because this is a different structure.",
            "OK so different vector.",
            "So in the previous one it was the same vector so we can just go to the next one.",
            "In this case we don't have this optimization.",
            "We cannot jump because it's a different vector, so we have to check for each of the graphs it is as you were not.",
            "So this is a downfall of Entity graph.",
            "And then again for the next solution, we have to check again for each of the graph if we have one or not in degree we have a one in the second graph, then this is the solution.",
            "OK."
        ],
        [
            "So that's the main idea, and now we are going for the bounded graph.",
            "So where we have the graph given?",
            "So for instance give me everything or the strippers for the graph two.",
            "OK, so in this case we are in the case of anti triples.",
            "So again one vector for each of the triples.",
            "So what we do is yes we resolved the pattern so it's just everything.",
            "So the solution could be potentially everything.",
            "So we start with the first one.",
            "So we start with the predicate, the object, something we arrived at cheaper one.",
            "Could be a potential trigger for graph two.",
            "We don't know yet.",
            "So, given that we have the graph here, given so for this particular triple, we go to the position two of the graph, and this is a one right?",
            "So this is a solution.",
            "OK, then I'm not to mention here is OK given that now I don't have to go for the second or third and just test all for the graph 2 where I can do here is just go and get the next one for this particular graph.",
            "OK, so given that this is a graph 2 then what I can do is OK.",
            "The next solution here could be in the next one, so I have to go like structure by structure and say OK, the next potential solution is this one because this is a one in graph 2.",
            "Then I go up and then I said this.",
            "Four OK until before is here.",
            "So this is the subject 6.",
            "This is the predicate three.",
            "OK, at this obvious three.",
            "So this is the next solution.",
            "The only thing is that this this jump again here.",
            "In this case is not a vision.",
            "OK, because if you see here so you cannot jump to the next one because again you have different structure.",
            "So in this case another trip as you have one vector pair pair triple, so you have to go instructor via structure to find this one.",
            "OK."
        ],
        [
            "So in the case of anti graph you can realize that here we can do this jump.",
            "OK, so in this case we arrive to the solution here in the graph 2 on this we have the same structure, the same the same vector.",
            "So we can say OK the next solution should be in the next one.",
            "OK so we can jump directly to the next solution.",
            "And then do it again.",
            "OK, yes go up and find a solution.",
            "I hope it's more or less clear what we do here with the search."
        ],
        [
            "I will present some numbers so we do it on aberration with three different kind of sets of sets of data set.",
            "So essentially we test with bear so bear is data set with virtual base essentially for testing versions, But in this case we use the cloud component as the as the graph.",
            "So we say OK, the quad component is the version, but again it's just a graph, a graph name.",
            "So we use this to test our system.",
            "So in this case like the biggest case we had like more than two billion quads, which is quite big.",
            "Then we tested with different number of subgraphs, so together we just tested with loom and then we tested with big number of graphs because here you can see that the number of graphs is causing kind of limited.",
            "So we tested with LDC benchmark and with leading solely just adducted rack data set in linked data.",
            "In this case you can see that the number of graphs is quite big.",
            "So in the first one is almost 200 K graphs.",
            "And here you have almost 400 K years which is maybe it's not normal for for one particular it is just an extreme case.",
            "What we wanted to do today."
        ],
        [
            "OK, So what did the Q was was the prototype was implemented in Java.",
            "OK so remember that we have also the C++ version, but in this case for awhile test for our test given that it was quicker to test, we just did it in Java, so the result that we also we expect to be more efficient in in C++.",
            "But in this case I would test them for the compressed bit sequences.",
            "I said we don't want the this long sequences to be in plain, so we use this approach which is called a roaring bitmaps, basically compresses.",
            "The sequence of bits they want on zeros just taking advantage of this of this consecutive one transceivers and then we compare against Jenna Jenna TDB and Build 2 or so and if it also like following the guidelines, we also computed every two or so plus which is essentially built also plus regional index GP OS which essentially adds more space.",
            "But it can be more efficient in time."
        ],
        [
            "OK, so these are the space requirements, so here I just put the plane size of its data, set the tip just for comparison purposes, and these are the sizes of entity so you can see that in principle we keep more less the same idea of being just slightly more than the land and tip, even here in this bar.",
            "Given that we have many repetitions, so one triple can be in many many graphs then flip over in quotes is even worse than the city.",
            "It's even better than tip in this case, so whenever we have many triples appearing in many graphs, then then in this case it was even even better.",
            "So the comparison against entity graphs on it annotated triples so you can see that an autograph is better in general than the triples, and the reason is that given this, this compressed bit sequences, so we can have like longer runs of ones and zeros in this approach.",
            "OK, so this approach leads to better compression.",
            "Then if you compare with Jenna and you can see the difference.",
            "Organized model is the same size as the as the plane size or even more, but it also is more or less good in the case of loom because we don't have many repetitions, but you can see the difference.",
            "Here we are one or two level of magnitude better or here with many graphs we are more less.",
            "I think two to five times better.",
            "With two 100 or so, plus, which is the additional index."
        ],
        [
            "Indexing times, well maybe it's not very interesting is just what we expected, so we are this blue here.",
            "OK, this is htat he smaller overlapping so doesn't matter if it's a toa.",
            "D is the same size.",
            "This here is Gina.",
            "So we are faster than DNI and building the index.",
            "This here so it's slightly better, easily faster than us, but not much.",
            "Yes, I small difference and this is the difference in number of quads, so of course you have more quads is like having more triples.",
            "You take more time to invest in for me."
        ],
        [
            "This is the query performance for the case of Barbie with less than 100 graphs and 3 million quotes, so it's not very big, so this plot shows OK if the bar is above the axis, it shows how many times we are faster than if it's below.",
            "We saw how many times we are slower.",
            "OK, so you can see this is for another day, trippers and this form to graphs.",
            "And just to mention and General Christopher attributes, we are better in all the patterns for geometry class.",
            "But here we have some downfalls.",
            "OK, so this is ready to the predicate index.",
            "This additional index dimension, so this is some part in which you have to improve.",
            "OK, so for the predicate index we have to improve the performance of these of these patterns, and this is annotated graphs.",
            "So in this case for instance is interesting to see that when you list all the triples.",
            "For one graph, we have seen that you can jump from one source into the other, so it's expected that this is better than that, of course, so it's more is what we expected.",
            "So this is for Barbie and then we."
        ],
        [
            "And we went to the just the opposite.",
            "So just in case of having 400K, almost 400 K graphs.",
            "So it's not very realistic I guess.",
            "But I mean at least we could find these this use case and we just checking: warmest scenarios.",
            "OK, so in called you can see that we are quite faster than the other solution just for this particular case I just listing everything for one particular graph.",
            "We are slightly worse an for warm.",
            "So yes, hit the systems and we just run the queries so you can see that here we are not so good.",
            "OK so we.",
            "From Matt Smith in 1/4 scenario and here again this pattern which list everything for for the graph is quite bad, so this is down to the triple C, but we monitor we expected at this point, so there's also some places where we can improve the indexes.",
            "But"
        ],
        [
            "So that's the conclusion I presented as it take you as an extension of the system HD approach, we can realize that case models the same feature of of compression query on the compressed size and so on.",
            "Given this comparison between three presented graphs, Antipas would be preferred because in general provides the best performance in the space and performance.",
            "There is tradeoff under the graph is still is a good approach to compress information, so we have seen that is the best, the more most compressed.",
            "Approach and also in queries where you have to list all the tables for one particular graph is also good, so I still could be converted solution."
        ],
        [
            "The future work is just well given that we have two approaches, and each of them is a bit different than we can try to the combination.",
            "OK, just to represent these metrics in a different way and then of course we still work to integrate this.",
            "This work in the community with all these examples that we have seen, then we have to integrate the Q in general and just support full sparkle on the Q.",
            "As I said, the current implementation in Java, so it was a bit slower than what we can expect in C++.",
            "Plus plus we have the maternity.",
            "So we have to extend it to GQ.",
            "Also, given that TPF is run on HD or is one of the possibilities, then 11 potential plan is just to integrate the city Q with TPF plus the graph.",
            "OK so you can ask for a typical pattern plus the plus the graph in which distributor holds and then we mentioned this load a lot which is a huge file with a huge part of the goal of link open data, so this doesn't include the graph information so we can regenerate this with graph provenance with.",
            "Life support."
        ],
        [
            "Thank you."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I'm going to present these work, which is basically an extension of which city for our two minutes RDF datasets.",
                    "label": 0
                },
                {
                    "sent": "So to Melissa name graphs.",
                    "label": 0
                },
                {
                    "sent": "OK, so of course I have to in.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Lucidity, I guess most of you know already, but I have to make it clear.",
                    "label": 0
                },
                {
                    "sent": "So which is the well was the main motivation was that we realize it, that most of the current RDF formats are based on plane plane syntax or playing format.",
                    "label": 0
                },
                {
                    "sent": "Just text like Aria like 3 and XML.",
                    "label": 0
                },
                {
                    "sent": "Turtle and so on.",
                    "label": 0
                },
                {
                    "sent": "So these are required.",
                    "label": 0
                },
                {
                    "sent": "Verbal OK, so they're not thought for.",
                    "label": 0
                },
                {
                    "sent": "For human.",
                    "label": 0
                },
                {
                    "sent": "They thought they thought for you and not for machines.",
                    "label": 1
                },
                {
                    "sent": "So we have like the pedia.",
                    "label": 0
                },
                {
                    "sent": "Then we don't have to open the file and just see I don't know 100 billion.",
                    "label": 1
                },
                {
                    "sent": "OK, so of course, given that this is a very huge size, then usually when you publish this information you publish in compressed format.",
                    "label": 0
                },
                {
                    "sent": "So you're going to consume it offline.",
                    "label": 0
                },
                {
                    "sent": "Then you have to decompress the downloaded file, decompress the file, index it like deal with all the mention of the data and then at the end just consume OK.",
                    "label": 0
                },
                {
                    "sent": "So in order to tackle this we came up with this city.",
                    "label": 0
                },
                {
                    "sent": "So it's a compressed format for RDF and essentially the main feature is that it is not only compressed.",
                    "label": 0
                },
                {
                    "sent": "But it has some indexes in rent that you can use to just retrieve RDF without decompression.",
                    "label": 1
                },
                {
                    "sent": "OK, so you can square the file without decompressing the file.",
                    "label": 0
                },
                {
                    "sent": "It's very fast until patterns OK and well, we also support this particle.",
                    "label": 0
                },
                {
                    "sent": "We basically we have some grammar for Gina, so you can use Gina and then they remain in Chinese city behind OK, so just to give you some numbers so the current version of the pedia in English is more like 600 million triples.",
                    "label": 0
                },
                {
                    "sent": "So it's more than 100 gigabytes in zip.",
                    "label": 0
                },
                {
                    "sent": "Uh, sorry, blame then if you ship it is more or less 10 gigabytes.",
                    "label": 0
                },
                {
                    "sent": "OK which is quite good and it is a bit more so it's 13 but on the bright side you can query this information on this compressed size, so that's the main point.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So in the last year we build community around the city, so we have some tools to deal with the city in C++ an in Java.",
                    "label": 0
                },
                {
                    "sent": "So this just shows you that for instance in the last two weeks we had about 150 clones, which is quite OK I guess for the small communities that we are.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Then of course we have seen the sample application examples in the last years.",
                    "label": 1
                },
                {
                    "sent": "So for instance a laundromat, they crawl the web, the world data and they have more than 650 K datasets in entity.",
                    "label": 0
                },
                {
                    "sent": "And of course Reddit event EPF.",
                    "label": 0
                },
                {
                    "sent": "OK, as we saw before in the presentation.",
                    "label": 0
                },
                {
                    "sent": "So more so I would say most of the TPF service they are based on entity and you can just download one entity and just search for TPF in few seconds.",
                    "label": 0
                },
                {
                    "sent": "OK. Also with this feature to let also surface particle.",
                    "label": 0
                },
                {
                    "sent": "With these general wrapper we have seen some implementation, some some real use case.",
                    "label": 0
                },
                {
                    "sent": "Like for instance there's a company called Data World who apparently they are using this in the real life environment and then given that we have also some fast retrieval over there over the files, then there are some people that work on just giving an advanced features.",
                    "label": 0
                },
                {
                    "sent": "OK, so for instance there are some reports us to compute the top case for this path or necessity to do query answering nothing.",
                    "label": 0
                },
                {
                    "sent": "Dennis is around to the query answering also based on entity.",
                    "label": 0
                },
                {
                    "sent": "Back end to the versioning.",
                    "label": 0
                },
                {
                    "sent": "Given their size, you can just replicate the data or do the version of your data on entity.",
                    "label": 0
                },
                {
                    "sent": "Also there are some variant to do a streaming and also to do some advanced graphs and graph analytics.",
                    "label": 0
                },
                {
                    "sent": "So for instance also by Denis tomorrow I will recommend to have a look at this paper three.",
                    "label": 0
                },
                {
                    "sent": "They compute Pagerank also based on the city.",
                    "label": 0
                },
                {
                    "sent": "So there was.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So thankful one of the last things that we did I think it was last year so we build a lot a lot, which is basically given this crawl of lot laundromat.",
                    "label": 0
                },
                {
                    "sent": "So we just merge everything into one file so we have one file who in entity who has that has more than 28 billion triples and just take more risk of a TB OK and you need about 16 gigabytes of RAM to query it so you can just use a standard laptop to have these 28 billion triples and manage it.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So this was a city, but then we had a recurring question.",
                    "label": 0
                },
                {
                    "sent": "Like in some conferences around OK, but what about RDF datasets?",
                    "label": 1
                },
                {
                    "sent": "Can you manage the name graphs and we couldn't?",
                    "label": 0
                },
                {
                    "sent": "OK, so that was the main point of this work that I'm presenting now is just to extend entity to deal with with RDF datasets within graphs.",
                    "label": 0
                },
                {
                    "sent": "OK, like in this case we have a graph.",
                    "label": 0
                },
                {
                    "sent": "We have another data set with two graphs, graph view, summer students here and graph to some students here.",
                    "label": 0
                },
                {
                    "sent": "How to manage this entity?",
                    "label": 0
                },
                {
                    "sent": "This is the work that I'm presenting so I have to present some.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Some details of the city so that I can say then say how we extend it to these RDF datasets.",
                    "label": 0
                },
                {
                    "sent": "OK, so now I'm going to present the basic of HTT.",
                    "label": 0
                },
                {
                    "sent": "So instead of reality is based on three components, the Header dictionary on the triples.",
                    "label": 1
                },
                {
                    "sent": "So the header is just meta data describing the datasets, like for instance the publication date, status and so on, and then the main components are the dictionary in the triples.",
                    "label": 1
                },
                {
                    "sent": "So if we have a data set like this.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I just removed DRI so you can just think of fire ice beanos whatever you like.",
                    "label": 0
                },
                {
                    "sent": "So The thing is that some of the other strings could be very long.",
                    "label": 0
                },
                {
                    "sent": "It can be shared across triples.",
                    "label": 0
                },
                {
                    "sent": "OK, so we do is just two minutes, not a graph of strings.",
                    "label": 0
                },
                {
                    "sent": "But I have ideas.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so we have two components, the dictionary in which we just list each of the different terms and we give one ID for each of these terms or different terms and then we manage the graph not agrapha string photograph of these.",
                    "label": 0
                },
                {
                    "sent": "OK, so this safe space and just allow us to manage these graphs are Friday so we can have an index of ideas and not an index of strings.",
                    "label": 0
                },
                {
                    "sent": "So for the dictionary.",
                    "label": 0
                },
                {
                    "sent": "And so as you can see here, we just list everything.",
                    "label": 0
                },
                {
                    "sent": "But this can lead to a long list of ideas.",
                    "label": 0
                },
                {
                    "sent": "OK and longer ideas means more bytes to represent ideas.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So we do just to split the dictionary in sections so we have specially the subject object and predicate sections.",
                    "label": 0
                },
                {
                    "sent": "So yes, please by roles in the in the RDF triples and then we have a special section with the subject objects, so these are terms at the same time.",
                    "label": 0
                },
                {
                    "sent": "Submits an obvious in the graph like this, we don't repeat in the two sections.",
                    "label": 0
                },
                {
                    "sent": "Good, so we have some mapping for this particular sections, and then I won't explain match.",
                    "label": 0
                },
                {
                    "sent": "But we have also approved based compression.",
                    "label": 0
                },
                {
                    "sent": "OK, so these terms is in particular the.",
                    "label": 0
                },
                {
                    "sent": "Objects can be can have a longer prefix share between different different terms, so we just use a standard prefix compression just to reduce the size, and then we have everything operation just to translate.",
                    "label": 0
                },
                {
                    "sent": "For an idea string into string front ring 20s.",
                    "label": 0
                },
                {
                    "sent": "Does that mean that the other dictionary?",
                    "label": 0
                },
                {
                    "sent": "I won't go into?",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Little, and then that reproduces with more complex.",
                    "label": 0
                },
                {
                    "sent": "I hope I can be clear here.",
                    "label": 0
                },
                {
                    "sent": "So what we do to manage this graph of IDs?",
                    "label": 0
                },
                {
                    "sent": "OK, so we manage.",
                    "label": 0
                },
                {
                    "sent": "This is what we call the Forest of tourism.",
                    "label": 0
                },
                {
                    "sent": "OK, so each of the three parts for this subject is a tree, and then we have the asset of trees.",
                    "label": 0
                },
                {
                    "sent": "So this is the conversion like the idea behind.",
                    "label": 0
                },
                {
                    "sent": "So we have the subject predicate object so distributed one predicate 2.",
                    "label": 0
                },
                {
                    "sent": "An obvious obvious 727 or so, one for each of their subjects.",
                    "label": 0
                },
                {
                    "sent": "We have a tree right?",
                    "label": 0
                },
                {
                    "sent": "So then this is the idea.",
                    "label": 0
                },
                {
                    "sent": "So the main way to what we do to store this is just to have essentially two vectors.",
                    "label": 0
                },
                {
                    "sent": "So the vector of predicates.",
                    "label": 0
                },
                {
                    "sent": "Here these two 2 three are predicates here and there vector of objects here 77465 these are the obvious here, right?",
                    "label": 0
                },
                {
                    "sent": "And then we just need to keep their structure of the trees and to do that we just use bits.",
                    "label": 0
                },
                {
                    "sent": "OK, so essentially we have two sequences of bits for the predicates and for the objects and we will do is just to mark with one.",
                    "label": 0
                },
                {
                    "sent": "If the note is the last child of the root, OK, so one is the last child series, not the last child.",
                    "label": 0
                },
                {
                    "sent": "Like, for instance is the last side.",
                    "label": 0
                },
                {
                    "sent": "Yes yes, yes yes.",
                    "label": 0
                },
                {
                    "sent": "So in this case we have two, so this is not the last time zero.",
                    "label": 0
                },
                {
                    "sent": "And this is the last one right?",
                    "label": 0
                },
                {
                    "sent": "And the same for the obvious here.",
                    "label": 0
                },
                {
                    "sent": "OK so we didn't have to do a rise of integers for the for the predicates and objects and two bit sequences just tomorrow district.",
                    "label": 0
                },
                {
                    "sent": "And then with with this we have represented Destructor.",
                    "label": 0
                },
                {
                    "sent": "OK, well, the graph.",
                    "label": 0
                },
                {
                    "sent": "But we can also query it OK just the basic idea is that if you want to go for instance for predict for subject 3.",
                    "label": 0
                },
                {
                    "sent": "So give me everything outside you three.",
                    "label": 0
                },
                {
                    "sent": "OK, so whether we have to do here is just to get OK.",
                    "label": 0
                },
                {
                    "sent": "This idea is not represented but each represented with the third one here.",
                    "label": 0
                },
                {
                    "sent": "So we have at least here.",
                    "label": 0
                },
                {
                    "sent": "So the third, the third subject is just with the third one.",
                    "label": 0
                },
                {
                    "sent": "So between the 2nd and the third one here, right?",
                    "label": 0
                },
                {
                    "sent": "So this is the.",
                    "label": 0
                },
                {
                    "sent": "Three is represented here.",
                    "label": 0
                },
                {
                    "sent": "This is the predicate three, this product free, and they will have to do the same for the objects.",
                    "label": 0
                },
                {
                    "sent": "OK, so the third list here is just between the 2nd and the third one, so we have to look here.",
                    "label": 0
                },
                {
                    "sent": "I look for the 2nd and the third one, so these are the list of objects, so 33463346.",
                    "label": 0
                },
                {
                    "sent": "OK, so that's the main idea.",
                    "label": 0
                },
                {
                    "sent": "A bit quick, but I hope you can follow a bit.",
                    "label": 0
                },
                {
                    "sent": "With and I say that you have to just to find the the list.",
                    "label": 0
                },
                {
                    "sent": "You have to count the number of ones OK, like for instance for the third subject you have to find the third one here, right?",
                    "label": 0
                },
                {
                    "sent": "So of course this can be quite tricky.",
                    "label": 0
                },
                {
                    "sent": "You have to just count the ones, but there are some.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Structures that allow you to do this in constant time.",
                    "label": 0
                },
                {
                    "sent": "OK, so this is what we called the magic of bits.",
                    "label": 1
                },
                {
                    "sent": "OK, so there are some structures have compressed as well and they can allow this kind of operations.",
                    "label": 0
                },
                {
                    "sent": "Just let me just remind three operations that you can do in Carson time so actively just very basic.",
                    "label": 0
                },
                {
                    "sent": "So yes, give me the content in some position, like for instance the content importing is just one.",
                    "label": 0
                },
                {
                    "sent": "OK, this is pretty easy.",
                    "label": 1
                },
                {
                    "sent": "This is not so easy, just given the number of runs up to one position.",
                    "label": 0
                },
                {
                    "sent": "This is called the rank.",
                    "label": 0
                },
                {
                    "sent": "OK, so for instance how many ones I have?",
                    "label": 0
                },
                {
                    "sent": "Until position 7 here.",
                    "label": 0
                },
                {
                    "sent": "OK yes in Question Time you don't have to count.",
                    "label": 0
                },
                {
                    "sent": "It says OK you have 4 ones right and then they select is the most interesting for us is the position where you have a certain number of occurrence.",
                    "label": 0
                },
                {
                    "sent": "So for instance give me the position you have where you have the fifth one.",
                    "label": 0
                },
                {
                    "sent": "OK, so 12345 this imposition line.",
                    "label": 1
                },
                {
                    "sent": "OK and this is done in constant time.",
                    "label": 0
                },
                {
                    "sent": "OK and this structure is just with a little overhead.",
                    "label": 0
                },
                {
                    "sent": "So yes, represent this with little overhead and you have these operations in Question Time right?",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So now it's very easy if you have these operation again.",
                    "label": 0
                },
                {
                    "sent": "So give me everything about this idea three.",
                    "label": 0
                },
                {
                    "sent": "OK, so you have just to locate with the select here with a select.",
                    "label": 0
                },
                {
                    "sent": "Give me the position where certain number of 1 occur.",
                    "label": 1
                },
                {
                    "sent": "Like I said before, give me the where is the 5th and you say OK in pushing nine it's OK.",
                    "label": 0
                },
                {
                    "sent": "I'm looking for the third I have to get with a select where is the third one is here OK and this is the predicate.",
                    "label": 0
                },
                {
                    "sent": "So three is rated to three and then the same here.",
                    "label": 1
                },
                {
                    "sent": "OK what is the third list with a select again and you say?",
                    "label": 0
                },
                {
                    "sent": "You get the list of objects.",
                    "label": 1
                },
                {
                    "sent": "OK, that's the main idea.",
                    "label": 0
                },
                {
                    "sent": "The magic of orbits.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, I have another time here, but they will just skip because of the time, especially with this.",
                    "label": 0
                },
                {
                    "sent": "As I said you can represent the graph and you can also do queries OK, But you can only do queries by subject.",
                    "label": 0
                },
                {
                    "sent": "OK because we have the information is organized by subject right?",
                    "label": 0
                },
                {
                    "sent": "So I want to explain math but we have.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Another two indexes based on predicates and objects just to resolve all the all the possible queries.",
                    "label": 0
                },
                {
                    "sent": "OK, so essentially this ideas position list.",
                    "label": 0
                },
                {
                    "sent": "So for each of the predicates we just left, we just list in which position.",
                    "label": 0
                },
                {
                    "sent": "Here you can find it.",
                    "label": 0
                },
                {
                    "sent": "So for instance in predicate two you can find in position one.",
                    "label": 0
                },
                {
                    "sent": "In position two you can find in position 45 and so on.",
                    "label": 0
                },
                {
                    "sent": "OK, and with this you query by predicate, you just go to this list.",
                    "label": 0
                },
                {
                    "sent": "You arrive to certain point.",
                    "label": 0
                },
                {
                    "sent": "For instance here you get the number of subjects and then you go down.",
                    "label": 0
                },
                {
                    "sent": "And you get the object related to that.",
                    "label": 0
                },
                {
                    "sent": "That's the main idea for the predicates and for the objects.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So this is a city and now what happened with the extension for photographs?",
                    "label": 0
                },
                {
                    "sent": "So well.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "For the header is just very simple.",
                    "label": 0
                },
                {
                    "sent": "We have.",
                    "label": 0
                },
                {
                    "sent": "We have just to add new metadata like for instance number of graphs, statistics on how many people we have per paragraph and so on.",
                    "label": 1
                },
                {
                    "sent": "It's just basic information for the dictionary is also not very complex.",
                    "label": 0
                },
                {
                    "sent": "What you have to do is just to add a new component.",
                    "label": 0
                },
                {
                    "sent": "OK, so there are some opportunities with this idea to go here.",
                    "label": 0
                },
                {
                    "sent": "So essentially we just go for the number of for each number of graph.",
                    "label": 0
                },
                {
                    "sent": "We have different graphs and we have a new mapping for the graphs.",
                    "label": 0
                },
                {
                    "sent": "So we decided to have a.",
                    "label": 0
                },
                {
                    "sent": "A different section here.",
                    "label": 0
                },
                {
                    "sent": "The other option could be to have a symbol here, so we have here which subject are also object, so we can have also which which graph which graph IRRI is also subject obvious award.",
                    "label": 0
                },
                {
                    "sent": "But we decided that given that the graphs are not appearing match a submitter obvious thing, we can just repeat the information.",
                    "label": 0
                },
                {
                    "sent": "OK, so we have just.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I knew I knew partitioning for the graphs.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "For the for the triples, this is well.",
                    "label": 0
                },
                {
                    "sent": "The thing that is more normal, so that we do is just and you quite information component.",
                    "label": 1
                },
                {
                    "sent": "OK, so essentially what we do is just for each of the triples.",
                    "label": 0
                },
                {
                    "sent": "OK, we just have a bit sequences orametrix saying in which graph this triple appear.",
                    "label": 0
                },
                {
                    "sent": "OK, so for instance for we have.",
                    "label": 0
                },
                {
                    "sent": "The idea is to have like a matrix.",
                    "label": 0
                },
                {
                    "sent": "OK, the number of triples here per the number of graphs for each of the trippers we have just one.",
                    "label": 0
                },
                {
                    "sent": "If these three performance Tip 2 appearing graph one.",
                    "label": 0
                },
                {
                    "sent": "If these people 2 doesn't appear in craft 2, then you have a 0.",
                    "label": 0
                },
                {
                    "sent": "So just huge matrix of ones and zeros.",
                    "label": 0
                },
                {
                    "sent": "OK, I hope this is clear.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Things we do to represent these metrics is just to go for two options.",
                    "label": 0
                },
                {
                    "sent": "OK, so the first option is just annotated trippers.",
                    "label": 0
                },
                {
                    "sent": "OK, so we have for each of the triples we have one vector representing this.",
                    "label": 0
                },
                {
                    "sent": "This relationship between the two pros and the graph.",
                    "label": 0
                },
                {
                    "sent": "And the other way, and the graph is just to go for the for each graph.",
                    "label": 0
                },
                {
                    "sent": "So for each graph you have one vector representing the same information.",
                    "label": 0
                },
                {
                    "sent": "So just an alternative we just evaluated, which is best just to have one vector here for its triple or having one vector for each of the graphs.",
                    "label": 0
                },
                {
                    "sent": "And yes, I will mention later, but if you wander again this can be very huge.",
                    "label": 0
                },
                {
                    "sent": "OK of course there are some implementation of bit sequences that provides these operations select rank and so on in Question Time and.",
                    "label": 0
                },
                {
                    "sent": "Having this compress as well.",
                    "label": 0
                },
                {
                    "sent": "OK so this this.",
                    "label": 0
                },
                {
                    "sent": "Approaches where they do basically just to get advantage of consecutive series of ones and you reduce information so it's not so big as it can appear here.",
                    "label": 0
                },
                {
                    "sent": "Who?",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So with this information, how can we do queries?",
                    "label": 0
                },
                {
                    "sent": "So let me just split by if you have queries with embedded graph or with bounded graphs.",
                    "label": 0
                },
                {
                    "sent": "OK, so in this case is with unbounded graphs.",
                    "label": 0
                },
                {
                    "sent": "So for instance giving everything for a particular subject, including the graph.",
                    "label": 0
                },
                {
                    "sent": "So for instance give me everything about the three less obvious three, including which graph is that it appears.",
                    "label": 0
                },
                {
                    "sent": "And let's start with the triples.",
                    "label": 0
                },
                {
                    "sent": "So in this case we have just one vector for its triple.",
                    "label": 0
                },
                {
                    "sent": "We started service with ATT so we identify which predicates is the one with submit three we dentify which object OK and then for each of the particular solutions then we start with the first solution here and we arrive to 333 OK.",
                    "label": 0
                },
                {
                    "sent": "So this is a 333.",
                    "label": 0
                },
                {
                    "sent": "We go for the vector in the 333 OK and we get one here.",
                    "label": 0
                },
                {
                    "sent": "OK so this is the first solution.",
                    "label": 0
                },
                {
                    "sent": "33334 and this is the graph one.",
                    "label": 0
                },
                {
                    "sent": "So this is the first solution and then what we could do if we have more graphs then we can jump.",
                    "label": 0
                },
                {
                    "sent": "Do the next one OK with this.",
                    "label": 1
                },
                {
                    "sent": "With this select operation we can just OK give me the position of the next one and then we have one here in another graph, like Grafton.",
                    "label": 0
                },
                {
                    "sent": "Then we could jump directly to the next one, so this is an optimization that we have given this disorganization.",
                    "label": 0
                },
                {
                    "sent": "OK, then we go for the second solution, so it will be subject 3 predicate, three an object, six OK, and is that Reaper 4.",
                    "label": 0
                },
                {
                    "sent": "So we go to that Reaper 4 here to the vector, perform and then we find, see run.",
                    "label": 0
                },
                {
                    "sent": "Then we find the first one here and this is graph 2.",
                    "label": 0
                },
                {
                    "sent": "So this is the solution for the second mistaken solution.",
                    "label": 0
                },
                {
                    "sent": "OK answer one.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So the next one is just to see how we can do it with entity graphs.",
                    "label": 0
                },
                {
                    "sent": "So in this case we have one vector paragraph is kind of similar.",
                    "label": 0
                },
                {
                    "sent": "We go for the first solution again OK and then we have to go for for the particular graph for each of the vectors we have to find if these 333 has a one or not OK, so we go to the first vector graph.",
                    "label": 0
                },
                {
                    "sent": "One is this one.",
                    "label": 0
                },
                {
                    "sent": "Yes, so this is a solution.",
                    "label": 0
                },
                {
                    "sent": "OK, and then here we cannot do this optimization.",
                    "label": 0
                },
                {
                    "sent": "OK, so we can also give me the next one because this is a different structure.",
                    "label": 0
                },
                {
                    "sent": "OK so different vector.",
                    "label": 0
                },
                {
                    "sent": "So in the previous one it was the same vector so we can just go to the next one.",
                    "label": 0
                },
                {
                    "sent": "In this case we don't have this optimization.",
                    "label": 0
                },
                {
                    "sent": "We cannot jump because it's a different vector, so we have to check for each of the graphs it is as you were not.",
                    "label": 0
                },
                {
                    "sent": "So this is a downfall of Entity graph.",
                    "label": 0
                },
                {
                    "sent": "And then again for the next solution, we have to check again for each of the graph if we have one or not in degree we have a one in the second graph, then this is the solution.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So that's the main idea, and now we are going for the bounded graph.",
                    "label": 1
                },
                {
                    "sent": "So where we have the graph given?",
                    "label": 0
                },
                {
                    "sent": "So for instance give me everything or the strippers for the graph two.",
                    "label": 0
                },
                {
                    "sent": "OK, so in this case we are in the case of anti triples.",
                    "label": 0
                },
                {
                    "sent": "So again one vector for each of the triples.",
                    "label": 0
                },
                {
                    "sent": "So what we do is yes we resolved the pattern so it's just everything.",
                    "label": 0
                },
                {
                    "sent": "So the solution could be potentially everything.",
                    "label": 0
                },
                {
                    "sent": "So we start with the first one.",
                    "label": 0
                },
                {
                    "sent": "So we start with the predicate, the object, something we arrived at cheaper one.",
                    "label": 0
                },
                {
                    "sent": "Could be a potential trigger for graph two.",
                    "label": 0
                },
                {
                    "sent": "We don't know yet.",
                    "label": 0
                },
                {
                    "sent": "So, given that we have the graph here, given so for this particular triple, we go to the position two of the graph, and this is a one right?",
                    "label": 0
                },
                {
                    "sent": "So this is a solution.",
                    "label": 0
                },
                {
                    "sent": "OK, then I'm not to mention here is OK given that now I don't have to go for the second or third and just test all for the graph 2 where I can do here is just go and get the next one for this particular graph.",
                    "label": 0
                },
                {
                    "sent": "OK, so given that this is a graph 2 then what I can do is OK.",
                    "label": 0
                },
                {
                    "sent": "The next solution here could be in the next one, so I have to go like structure by structure and say OK, the next potential solution is this one because this is a one in graph 2.",
                    "label": 0
                },
                {
                    "sent": "Then I go up and then I said this.",
                    "label": 0
                },
                {
                    "sent": "Four OK until before is here.",
                    "label": 0
                },
                {
                    "sent": "So this is the subject 6.",
                    "label": 0
                },
                {
                    "sent": "This is the predicate three.",
                    "label": 0
                },
                {
                    "sent": "OK, at this obvious three.",
                    "label": 0
                },
                {
                    "sent": "So this is the next solution.",
                    "label": 0
                },
                {
                    "sent": "The only thing is that this this jump again here.",
                    "label": 0
                },
                {
                    "sent": "In this case is not a vision.",
                    "label": 0
                },
                {
                    "sent": "OK, because if you see here so you cannot jump to the next one because again you have different structure.",
                    "label": 0
                },
                {
                    "sent": "So in this case another trip as you have one vector pair pair triple, so you have to go instructor via structure to find this one.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So in the case of anti graph you can realize that here we can do this jump.",
                    "label": 0
                },
                {
                    "sent": "OK, so in this case we arrive to the solution here in the graph 2 on this we have the same structure, the same the same vector.",
                    "label": 0
                },
                {
                    "sent": "So we can say OK the next solution should be in the next one.",
                    "label": 0
                },
                {
                    "sent": "OK so we can jump directly to the next solution.",
                    "label": 1
                },
                {
                    "sent": "And then do it again.",
                    "label": 0
                },
                {
                    "sent": "OK, yes go up and find a solution.",
                    "label": 0
                },
                {
                    "sent": "I hope it's more or less clear what we do here with the search.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "I will present some numbers so we do it on aberration with three different kind of sets of sets of data set.",
                    "label": 0
                },
                {
                    "sent": "So essentially we test with bear so bear is data set with virtual base essentially for testing versions, But in this case we use the cloud component as the as the graph.",
                    "label": 0
                },
                {
                    "sent": "So we say OK, the quad component is the version, but again it's just a graph, a graph name.",
                    "label": 0
                },
                {
                    "sent": "So we use this to test our system.",
                    "label": 0
                },
                {
                    "sent": "So in this case like the biggest case we had like more than two billion quads, which is quite big.",
                    "label": 0
                },
                {
                    "sent": "Then we tested with different number of subgraphs, so together we just tested with loom and then we tested with big number of graphs because here you can see that the number of graphs is causing kind of limited.",
                    "label": 1
                },
                {
                    "sent": "So we tested with LDC benchmark and with leading solely just adducted rack data set in linked data.",
                    "label": 0
                },
                {
                    "sent": "In this case you can see that the number of graphs is quite big.",
                    "label": 0
                },
                {
                    "sent": "So in the first one is almost 200 K graphs.",
                    "label": 0
                },
                {
                    "sent": "And here you have almost 400 K years which is maybe it's not normal for for one particular it is just an extreme case.",
                    "label": 0
                },
                {
                    "sent": "What we wanted to do today.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, So what did the Q was was the prototype was implemented in Java.",
                    "label": 0
                },
                {
                    "sent": "OK so remember that we have also the C++ version, but in this case for awhile test for our test given that it was quicker to test, we just did it in Java, so the result that we also we expect to be more efficient in in C++.",
                    "label": 0
                },
                {
                    "sent": "But in this case I would test them for the compressed bit sequences.",
                    "label": 0
                },
                {
                    "sent": "I said we don't want the this long sequences to be in plain, so we use this approach which is called a roaring bitmaps, basically compresses.",
                    "label": 0
                },
                {
                    "sent": "The sequence of bits they want on zeros just taking advantage of this of this consecutive one transceivers and then we compare against Jenna Jenna TDB and Build 2 or so and if it also like following the guidelines, we also computed every two or so plus which is essentially built also plus regional index GP OS which essentially adds more space.",
                    "label": 0
                },
                {
                    "sent": "But it can be more efficient in time.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so these are the space requirements, so here I just put the plane size of its data, set the tip just for comparison purposes, and these are the sizes of entity so you can see that in principle we keep more less the same idea of being just slightly more than the land and tip, even here in this bar.",
                    "label": 0
                },
                {
                    "sent": "Given that we have many repetitions, so one triple can be in many many graphs then flip over in quotes is even worse than the city.",
                    "label": 0
                },
                {
                    "sent": "It's even better than tip in this case, so whenever we have many triples appearing in many graphs, then then in this case it was even even better.",
                    "label": 0
                },
                {
                    "sent": "So the comparison against entity graphs on it annotated triples so you can see that an autograph is better in general than the triples, and the reason is that given this, this compressed bit sequences, so we can have like longer runs of ones and zeros in this approach.",
                    "label": 0
                },
                {
                    "sent": "OK, so this approach leads to better compression.",
                    "label": 0
                },
                {
                    "sent": "Then if you compare with Jenna and you can see the difference.",
                    "label": 0
                },
                {
                    "sent": "Organized model is the same size as the as the plane size or even more, but it also is more or less good in the case of loom because we don't have many repetitions, but you can see the difference.",
                    "label": 0
                },
                {
                    "sent": "Here we are one or two level of magnitude better or here with many graphs we are more less.",
                    "label": 0
                },
                {
                    "sent": "I think two to five times better.",
                    "label": 0
                },
                {
                    "sent": "With two 100 or so, plus, which is the additional index.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Indexing times, well maybe it's not very interesting is just what we expected, so we are this blue here.",
                    "label": 0
                },
                {
                    "sent": "OK, this is htat he smaller overlapping so doesn't matter if it's a toa.",
                    "label": 0
                },
                {
                    "sent": "D is the same size.",
                    "label": 0
                },
                {
                    "sent": "This here is Gina.",
                    "label": 0
                },
                {
                    "sent": "So we are faster than DNI and building the index.",
                    "label": 0
                },
                {
                    "sent": "This here so it's slightly better, easily faster than us, but not much.",
                    "label": 0
                },
                {
                    "sent": "Yes, I small difference and this is the difference in number of quads, so of course you have more quads is like having more triples.",
                    "label": 0
                },
                {
                    "sent": "You take more time to invest in for me.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "This is the query performance for the case of Barbie with less than 100 graphs and 3 million quotes, so it's not very big, so this plot shows OK if the bar is above the axis, it shows how many times we are faster than if it's below.",
                    "label": 0
                },
                {
                    "sent": "We saw how many times we are slower.",
                    "label": 0
                },
                {
                    "sent": "OK, so you can see this is for another day, trippers and this form to graphs.",
                    "label": 0
                },
                {
                    "sent": "And just to mention and General Christopher attributes, we are better in all the patterns for geometry class.",
                    "label": 0
                },
                {
                    "sent": "But here we have some downfalls.",
                    "label": 0
                },
                {
                    "sent": "OK, so this is ready to the predicate index.",
                    "label": 0
                },
                {
                    "sent": "This additional index dimension, so this is some part in which you have to improve.",
                    "label": 0
                },
                {
                    "sent": "OK, so for the predicate index we have to improve the performance of these of these patterns, and this is annotated graphs.",
                    "label": 1
                },
                {
                    "sent": "So in this case for instance is interesting to see that when you list all the triples.",
                    "label": 0
                },
                {
                    "sent": "For one graph, we have seen that you can jump from one source into the other, so it's expected that this is better than that, of course, so it's more is what we expected.",
                    "label": 0
                },
                {
                    "sent": "So this is for Barbie and then we.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And we went to the just the opposite.",
                    "label": 0
                },
                {
                    "sent": "So just in case of having 400K, almost 400 K graphs.",
                    "label": 0
                },
                {
                    "sent": "So it's not very realistic I guess.",
                    "label": 0
                },
                {
                    "sent": "But I mean at least we could find these this use case and we just checking: warmest scenarios.",
                    "label": 0
                },
                {
                    "sent": "OK, so in called you can see that we are quite faster than the other solution just for this particular case I just listing everything for one particular graph.",
                    "label": 0
                },
                {
                    "sent": "We are slightly worse an for warm.",
                    "label": 0
                },
                {
                    "sent": "So yes, hit the systems and we just run the queries so you can see that here we are not so good.",
                    "label": 0
                },
                {
                    "sent": "OK so we.",
                    "label": 0
                },
                {
                    "sent": "From Matt Smith in 1/4 scenario and here again this pattern which list everything for for the graph is quite bad, so this is down to the triple C, but we monitor we expected at this point, so there's also some places where we can improve the indexes.",
                    "label": 0
                },
                {
                    "sent": "But",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So that's the conclusion I presented as it take you as an extension of the system HD approach, we can realize that case models the same feature of of compression query on the compressed size and so on.",
                    "label": 1
                },
                {
                    "sent": "Given this comparison between three presented graphs, Antipas would be preferred because in general provides the best performance in the space and performance.",
                    "label": 0
                },
                {
                    "sent": "There is tradeoff under the graph is still is a good approach to compress information, so we have seen that is the best, the more most compressed.",
                    "label": 0
                },
                {
                    "sent": "Approach and also in queries where you have to list all the tables for one particular graph is also good, so I still could be converted solution.",
                    "label": 0
                }
            ]
        },
        "clip_31": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "The future work is just well given that we have two approaches, and each of them is a bit different than we can try to the combination.",
                    "label": 1
                },
                {
                    "sent": "OK, just to represent these metrics in a different way and then of course we still work to integrate this.",
                    "label": 0
                },
                {
                    "sent": "This work in the community with all these examples that we have seen, then we have to integrate the Q in general and just support full sparkle on the Q.",
                    "label": 1
                },
                {
                    "sent": "As I said, the current implementation in Java, so it was a bit slower than what we can expect in C++.",
                    "label": 0
                },
                {
                    "sent": "Plus plus we have the maternity.",
                    "label": 0
                },
                {
                    "sent": "So we have to extend it to GQ.",
                    "label": 0
                },
                {
                    "sent": "Also, given that TPF is run on HD or is one of the possibilities, then 11 potential plan is just to integrate the city Q with TPF plus the graph.",
                    "label": 1
                },
                {
                    "sent": "OK so you can ask for a typical pattern plus the plus the graph in which distributor holds and then we mentioned this load a lot which is a huge file with a huge part of the goal of link open data, so this doesn't include the graph information so we can regenerate this with graph provenance with.",
                    "label": 0
                },
                {
                    "sent": "Life support.",
                    "label": 0
                }
            ]
        },
        "clip_32": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Thank you.",
                    "label": 0
                }
            ]
        }
    }
}