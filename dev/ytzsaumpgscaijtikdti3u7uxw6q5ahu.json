{
    "id": "ytzsaumpgscaijtikdti3u7uxw6q5ahu",
    "title": "Querying APIs with SPARQL- language and worst case optimal algorithms",
    "info": {
        "author": [
            "Adri\u00e1n Soto, Pontificia Universidad Cat\u00f3lica de Chile"
        ],
        "published": "July 10, 2018",
        "recorded": "June 2018",
        "category": [
            "Top->Computer Science->Big Data",
            "Top->Computer Science->Semantic Web"
        ]
    },
    "url": "http://videolectures.net/eswc2018_soto_optimal_algorithms/",
    "segmentation": [
        [
            "Thank you for the introduction.",
            "My name is Allie and pseudo.",
            "I'm from Pontificia near Seattle exactly and I'm going to talk about querying APIs with sparking.",
            "So first of all, why querying APIs with Sparkle so?"
        ],
        [
            "Suppose we have a user.",
            "Yeah, come a common user who wants to."
        ],
        [
            "Do some hiking in the Highlands in Scotland."
        ],
        [
            "So he wants to leave, so he want to go to to any mounting that now time is sunny and he went to go to read some reviews that other people did about that that hiking so that user has access to."
        ],
        [
            "My database, which is in RDF, so no problem until then.",
            "But the weather, data and tweets are exposed."
        ],
        [
            "The way through APIs with send Jason documents when they are they when they answer the queries of the user.",
            "So we have a problem because those data cannot be integrated, but all those data is available on the web.",
            "So we have."
        ],
        [
            "The following problem that the majority of data in the web is available through API's rest API's.",
            "And a who can we integrate such data and how can we do this as efficient as possible so?"
        ],
        [
            "And this is the time for spoilers in this talk a I'm going to talk a about a way to enable a sparkle to integrate with Jason APIs.",
            "OK, extending the service operator.",
            "And I will propose an algorithm to perform this task as efficient as possible, and then I will show some experimental results for a this algorithm so."
        ],
        [
            "We have to talk for some preliminares."
        ],
        [
            "So we will use the usual syntax and semantics of sparkwell will consider triple patterns and optional union filter an array.",
            "Of course the service operator.",
            "A.",
            "We will use a lot of the service operators, so I want to explain."
        ],
        [
            "What does this mean?",
            "This is operator that allows some user to answer a query a single query.",
            "A which is related with multiple endpoints.",
            "So for example, I have some data on my computer and I want to use some data which is exposed in an endpoint which has a data of weather.",
            "So I can mix the data in the query an A process it and the user will be happy because he can answer his query.",
            "So we want to."
        ],
        [
            "To access multiple endpoints in a single query, this is just a using Spark well, so suppose that we are in Chile an we won the weather in each city of the country.",
            "So first of all we."
        ],
        [
            "I have a these basic graph button that tells me all the cities in Chile and."
        ],
        [
            "Then I'm query this endpoint OK weather.org sparkwell Ann.",
            "I'm I'm giving two to the end point the cities and he will answer me.",
            "The weather in those cities."
        ],
        [
            "We were going to use a Web API, so with APIs are interfaces that expose data through HTTP."
        ],
        [
            "Requests like this one.",
            "This is a UI I'm giving A2 parameters.",
            "The latitude and longitude of certain place."
        ],
        [
            "An A the API will return me Jason Document which is telling me some things about about that."
        ],
        [
            "Ice.",
            "We are assuming that API's response responses are always Jason documents, but is a we can extend it easily and we retrieve data from Jason using a navigation condition and this is nothing new, it's what?"
        ],
        [
            "What always we do a suppose we have a Jason J.",
            "So in this day."
        ],
        [
            "You mean if we want to know the minimal temperature in the place I have to tell the Jason J give me the temperature and then give me the mean value.",
            "So far so good."
        ],
        [
            "So in now I'm going to talk to to what we do.",
            "OK, so I'm going to start with an example example of."
        ],
        [
            "Beginning then, suppose we want to do the hiking in Scotland bow, but we want to go to mountains, located in places that now are sunny."
        ],
        [
            "So this is the whole query.",
            "A contains a basic graph pattern, a service, but it's not as usual.",
            "And then we we got a filter and I'm going to explain this step by step so."
        ],
        [
            "Consider the basic pattern.",
            "We will answer this basic graph pattern.",
            "Yeah, this is nothing new.",
            "A mappings that satisfies the query A.",
            "Suppose that are those entity of Wikidata.",
            "The first is bananas and the second one month Blair.",
            "So we have this answer.",
            "And then."
        ],
        [
            "For each mapping that we had in the previous part, I'm going to use the label and I'm going to pass it to the UI and I'm going to retrieve the Jason document.",
            "I will navigate the Jason document with the instruction, which is description, and I'm generating a new variable and I'm going to extend each mapping with new values.",
            "So I'm querying the API and I'm going to extending a map inside here and now I have the weather in.",
            "Each place."
        ],
        [
            "So after I had the I have the extended mappings and then apply the filter and I'm asking a why are what are the places that now are.",
            "Sunny"
        ],
        [
            "OK, so far so good so.",
            "I'm going to present the formal syntax and semantics so.",
            "This is how our queries looks like is a pattern, then a service and then we can continue with other patterns soon.",
            "So step by step."
        ],
        [
            "AP One is sparkwell pattern A."
        ],
        [
            "You is on your right template, which is how you write with variables."
        ],
        [
            "For example, a in the previous example, we have a this UI.",
            "It has a variable L. Inside it is with current OK."
        ],
        [
            "AN-12 NMR Jason navigation condition."
        ],
        [
            "Like the description or the minimal temperature in some place an."
        ],
        [
            "KX12X N are variables not appearing in P1 where they Jason values will be bound.",
            "So I'm going to retrieve Jason's.",
            "I will navigate them and I will bind via a values to those new variables.",
            "X12 XM."
        ],
        [
            "A semantics, I will explain it a mostly in a graphical way."
        ],
        [
            "So a suppose that we have the pattern P1 we evaluated and it will generate a lot of mappings.",
            "Let's take some mapping, move an."
        ],
        [
            "OK, then we want we're going to pass this mapping."
        ],
        [
            "2."
        ],
        [
            "Two US air to air service.",
            "Yeah, and we will generate the following up."
        ],
        [
            "Item which is."
        ],
        [
            "Lauri Template U and the mapping mu.",
            "What we're doing now is replacing the variables in the UI with the variables of a mapping the concrete values an I'm going generate Jason document."
        ],
        [
            "OK, when I have a decent document I'm going."
        ],
        [
            "Navigate it a one time per each."
        ],
        [
            "A decent navigation condition, so the first one will generate."
        ],
        [
            "And you variable which is X1."
        ],
        [
            "And so far and so on, I'm."
        ],
        [
            "Going to do to generate one variable pair navigation, a conviction.",
            "OK."
        ],
        [
            "So finally we can say that the mapping movies extended with variables X12, XM with the values obtained from the Jason.",
            "Recall that a when I have a navigation condition, it must a.",
            "When we navigate the Jason, it must return Jason Literal, that that's what we said in the paper.",
            "But the implementation also allows a Jason array of literals."
        ],
        [
            "OK, so we have a basic implementation.",
            "It's so simple, so if we have this query."
        ],
        [
            "What we do is compute AP one recursively if it contains another service to API.",
            "Then we compute the set of mappings MA with the, which correspond to A to the.",
            "To the set of mappings, extend them with the new variables.",
            "And then we serialize with the values keyword.",
            "An operator in Sparkle a the values of M in order to generate a new a new pattern that can be passed to the next graph.",
            "Patterns in the query."
        ],
        [
            "So a this is a naive algorithm.",
            "We obviously can do it better.",
            "So now we are.",
            "I'm going to talk about the worst case optimal algorithm."
        ],
        [
            "Which is our algorithm.",
            "Abit more intelligent.",
            "So in a classical setting we would like to minimize the call to the disk, but a we have the question what is the main bottleneck in this settings?",
            "Yeah and we run a four queries with real use case A using the service too happy in order to know what is the which is the new bottleneck."
        ],
        [
            "In this setting.",
            "So as we suppose, the bottleneck is the number of A = B, cause a happy are slower than access to this.",
            "So what I want to minimize in this setting is the number of Abigail's that we are doing.",
            "A these are four examples are for queries you.",
            "You can find the detail in the papers a this queries use the API's of Open Weather Japan Twitter an most of the time is used by the API's."
        ],
        [
            "Then I say that I mean modeling is the number of AP."
        ],
        [
            "I was on a redevelop worse this algorithm in terms of the number of cars that we are doing to the API.",
            "OK, so I'm going to explain the algorithm by example."
        ],
        [
            "And then suppose that we have the.",
            "We have the following query, it's it's almost the same than the one in the example, but a bit more generic.",
            "So we have the variable XL&D and note that the variable X appears again a down in the wedding."
        ],
        [
            "So.",
            "A suppose that the pattern A, the first basic graph pattern, has an output of size N, But the second one is empty.",
            "So the output of the query tool be empty."
        ],
        [
            "Be empty on a basic algorithm.",
            "What they will do in calls to the API, because it will resolve the first basic graph pattern, will call end times to the API, and then it will say Oh no worries empty.",
            "Sorry I did too much work and it was not necessary.",
            "So a worst case I will go even select an order for the variables and execute the algorithm.",
            "The patterns of the of the query in such order.",
            "So the example."
        ],
        [
            "A.",
            "We take the order of appearance of variables, which is XL&D, and then the algorithm evaluates the pattern in the following order.",
            "First we have all related with XA and then we have all related with L and then."
        ],
        [
            "With the.",
            "So the evaluation is done in the same way, but a the order in what we are the order of the evaluation of the query change in an optimal way because."
        ],
        [
            "Now the first pattern throws an empty output before evaluating the service, so we are not doing any calls to the API."
        ],
        [
            "And recall that the order of appearance of variables is always a fair civil one.",
            "To execute the algorithm, but not a.",
            "But it happens that not all the order or variables are our festival in in this case."
        ],
        [
            "And this algorithm stores in cateva Jason in order to avoid duplicate calls."
        ],
        [
            "I had to say that this algorithm is a bit more complicated.",
            "That details are in the paper, but is inspired by the algorithm proposed by Adm, and these are the references which evaluate this.",
            "A query variable by variable in an incremental way."
        ],
        [
            "Algorithm is a classical in is one of the most important results in database theory in in the last time it's related with the Adm bound, so the algorithm selects the order of variables an evaluate the joint in an incremental way, first with one variable, then with two and so forth and so on.",
            "Eh, this is what algorithm do.",
            "You can think that every pattern is a relation an every service is our relation with access method an.",
            "The algorithm is evaluated with this technique, yeah, but you can think that we just are reordering the query in order to avoid to do so, many calls to the API.",
            "OK, so."
        ],
        [
            "A.",
            "We prove that a using this algorithm, any festival query AQ can be evaluated over any database D using a number of calls that is bounded by a that bound a.",
            "Where this term is the agent bounding of the query, which is the something like the the.",
            "A given a database a I can tell you which is the, the number, the maximum number of tuples that a join can have.",
            "An MQ D is the maximum size of direction of a single attribute over the database.",
            "Also, we have a lot."
        ],
        [
            "About a week which tell us that for each number N we showed that there is an instance of size N and a very cool such that any algorithm answering the query will do a number of calls equivalent to the bound that I showed before.",
            "So we have the lower bound upper bound, and we proved finally that the algorithm is worst case optimal in terms of the equals."
        ],
        [
            "OK, so experiments a."
        ],
        [
            "Our experiments showed that our algorithm is useful not only theoretically, but in practice 2.",
            "So A to test our algorithm we adapted the Berlin Berlin benchmark by transforming some soup patterns into service two API queries."
        ],
        [
            "So part of the data it was exposed into recipes rest APIs that we develop OK and part of the data value benchmark is exposed by this API's and we tested three algorithms.",
            "The first one is the vanilla is the basic algorithm, the second one is the same, but a avoiding duplicate calls using Catch a A and the worst case optimal algorithm which is what explains a recently.",
            "So this is the."
        ],
        [
            "Look for the queries in Devil in benchmark that has a high size.",
            "And we can, and we can know that the worst is optimal algorithm.",
            "Open open forms.",
            "The other two in all cases and for the queries that are our little.",
            "We also know that the worst is optimal algorithm."
        ],
        [
            "Is better than the other two OK in in summary."
        ],
        [
            "We can say is there without duplicates algorithm does does 20% less calls and the worst case optimal algorithm."
        ],
        [
            "Those a 53% less calls.",
            "So it works.",
            "And finally, some conclusion."
        ],
        [
            "As of this work."
        ],
        [
            "Is that well?",
            "The paper proposes a way to allow Sparkle to connect with Jason APIs because we want to access with Spark.",
            "You'll more part of the web, not only the data which is in RDF, an we're."
        ],
        [
            "Propose at work is optimal algorithm to evaluate this query and try to do it as efficient as possible.",
            "Anne's feet."
        ],
        [
            "We work, we plan to support more formats than only Jason, like relational databases, document storage.",
            "I don't know.",
            "Maybe a scrubbing of the web, I don't know and."
        ],
        [
            "A the most important part is that we also want to support automatic entity resolution because when we are asking for a Jason, we are always passing the label and we want to go to work with.",
            "You arise so we can transfer an API object to you.",
            "I can you write to Jason Object instantly.",
            "An know some advisement so."
        ],
        [
            "A you can find the source code of this presentation in in in this GitHub.",
            "Yeah, you can find the source code.",
            "An example that you can run an.",
            "Also we have the extended version of the paper without an appendix.",
            "OK, a.",
            "And we have an online demo.",
            "Which is in that URL your URL in the GitHub also is the link.",
            "There is a problem with the demo because we have all queries, works except the tracking query.",
            "Because the API of weather stop to giving the weather in mountains.",
            "So the example of Scotland is not working but it's not my fault is full of the API an if you want to contact me on on our give me some question and this is my email an you can find me in social networks like.",
            "An I have Twitter Facebook, GitHub and other things.",
            "So a this is all a thank you for listening.",
            "I'm open for questions now.",
            "Thank you for the nice talk.",
            "I'm wondering, why did you choose to restrict yourself to Jason API's?",
            "Oh OK.",
            "This is a this started like a proof of concept, so we wanted to work with the with what we think are the most popular APIs in these days, which is a Jason APIs.",
            "So we started with that.",
            "But the idea is to extend in the future some to other kind of APIs likes a graph, QL, maybe XML.",
            "Well I I'm asking because in fact I think that conceptually.",
            "It's it's quite easy to describe a more general approach that would work for any file format, because what you need is you have this expression language, navigation expressions.",
            "That allows you to get pieces of the Jason file, but you could abstract this to say, OK, we just need a navigation exploration, which is possible in XML with X path in HTML with CSS selectors etc etc or even regular expressions.",
            "And you could you could at least from an abstract point of view you could describe it in a generic way and then for the implementation.",
            "Of course you focus on some specific format.",
            "Actually, actually I lied because they are not actually navigation instruction.",
            "We use a Jason Path which is like expert but in Jason is a library in India.",
            "And also I think I think your idea is nice which will implement it for most of languages which have a nice way to have selection of documents.",
            "Thank you, OK, thank you.",
            "Have a question?",
            "What is the limit of your approach?",
            "What is the limit of your approach?",
            "You are you have brush.",
            "Depends on the EPA documentation an A yeah, but actually it is the problem that all developers do when you are developing web application there is always the problem of a when you want to consume and happy you have to learn the happy documentation.",
            "So when you are using a this.",
            "Approach for integrating data you have to study the API documentation, but is something that that usually happen.",
            "I think that that the.",
            "The most critical part is a.",
            "Is them?",
            "How can I say it?",
            "APIs are so slow sometimes in answering so if you are doing a query A acquiring a pattern which has a greater output, it will take a lot of time and maybe more than than is a tractable by or is more than than a user one wants to wait.",
            "So the time that the API takes to answer you is the main difficulty in this in this approach.",
            "So hi, thank you for your talk.",
            "I wonder if.",
            "If you want to make positioning of your approach compared to globalize view approach, don't you think that your case is just not a trivial case of global as you may be at home?",
            "Yeah, sorry I didn't hear the last part of the question.",
            "I wonder if it's not a trivial case of a globalized you mediatore?",
            "Of the for global as view mediatore.",
            "Oh I'm I don't know something about that actually, maybe we can discuss later that a. I I I didn't understand that last part may be something that that I don't know.",
            "OK, thank you very much.",
            "Very nice presentations an I just want.",
            "I just wonder why you using Sparky L2 calls like APIs because in practicals in the developers mindset.",
            "For instance, for instance they also the.",
            "Often use like an API or crustaceans or surface composition.",
            "So in your approach is that is that your approach provide.",
            "Maybe I can position because it in my understanding is that the you will integrate lot of probably more model more than one to API, so why how you how you integrate or you how you make your system or your approach?",
            "To be like a media tour or in the integrand, or that can be used to to compose and can provide meaningful research results to the end users.",
            "So this is my questions.",
            "Thank you very much.",
            "Yeah, OK.",
            "So first of all we decide to use a sparkle to worry APIs.",
            "Not not.",
            "We don't want to to make that a sparkle.",
            "Was is the official language of for querying APIs.",
            "Now is because a.",
            "This particular is the query language for the web, so we consider that there is a lot of data that is in Jason format, so we want to make accessible for the for the semantic web, that's all so.",
            "We are not trying to replace anything, is just a way of opening a discussion about if this data should be present in the semantic web and we are presenting a way to to have it present that that's all.",
            "So so that's all.",
            "Thanks very much for a very interesting talk.",
            "Have you thought about so you use this kind of navigation expression?",
            "You said Jason Path, I think.",
            "Have you thought about just doing away with the whole Jason explicit service call and the navigation path and just doing it all in sparkle and then behind the scenes when needed?",
            "Reference an online Jason API when it is deemed needed to resolve that particular triple.",
            "Yeah, a.",
            "The reason that that a we did it in in an allegation language is because we are using the query language for a Jason documents.",
            "If we would like to use something like Spark will in a certain way you have to define code mappings that translate the data from one to another.",
            "In your example, would be relatively straightforward, right is simple X property one Y property 20 property path I know, but but Jason documents may sometimes are.",
            "A bit more complicated.",
            "So what would you not be able to express in article right there there is a there is an option, so we thought that that this is more from developer point of view and you want to use the Jason the query language for Jason Documents, but you write a there is possible.",
            "There are some some straightforward straightforward methods to access Jason A.",
            "We didn't consider it just because we developed this.",
            "Like from the point of view of our developer, more than a person of semantic web in the part of the integrating the rather welder writing semantic query, right?",
            "So you would assume that something about developers somehow?",
            "Yeah, yeah yeah, but I'm I'm referring to the part of the of the service, but a your comment is it's nice to us because we can work in a way to it's related with the future work with the part of entity resolution.",
            "Maybe if we query these things.",
            "Like sparkle patterns, we can integrate in a better way.",
            "The data which is in the in the database are from APIs, so thank you OK, Thanks.",
            "Hi, I actually missed the talk but just looking over the paper now so sorry but you know so many projects.",
            "Propose ideas to extend the sparkle language to do some ad hoc thing, but you know I'm wondering if is there some other way you could get around this by.",
            "You know, putting those things outside the query.",
            "But still, you know binding to the variables like you show it in an example without requiring changes to this sparkle, grammar or language in any way.",
            "OK, the first thing.",
            "The first thing that I can think is that if you use programming language you also can do those things.",
            "For example, you can do your own program that integrates data and it's OK, but we wanted to do this in a declarative way more than a procedural way, so that's why we developed this.",
            "This language you can do with any programming language.",
            "Do you actually can integrate all kinds of data but?",
            "But this is a is an extension for the semantic Web to obtain data which is not available.",
            "Now.",
            "That's that's our approach.",
            "I think we can.",
            "We can discuss later.",
            "I need all these comments to improve.",
            "This world is part of my thesis, so so it will be nice to have more comments like that.",
            "My comments will also answer part of your question, so you refer to the Sparkle LD approach in your paper, so this consistent in assuming that's at the UR of the service, you may have actually not an end point but a spark.",
            "Other document or RDF documents, you just load it and apply the content of the service.",
            "Close on that locali.",
            "We actually wrote a paper last year in a in a workshop at semantics about what happens if that document is not audio document, but a document in any other format.",
            "But for that document and for that format you know a transformation to audio and you can apply it locali and then follow the same approach as as popular D22 to run the query on it.",
            "That could be maybe an approach where actually the deed.",
            "Sparkle language is enough for that approach, and all units is the UI or something about transformation from that syntax to to RDF.",
            "Yeah, thank you.",
            "Visit on all this comments so so as you.",
            "So now you are mixing.",
            "Anne.",
            "Sparkle Kurikan carry RDF in something else.",
            "First will be Jason, but suggestion Anna provocation now is to do a benchmarking of the API's that you can use as you told that that there's a gap, there were some APIs can be slow or not be there or wherever.",
            "So I just would like to put this in discussion now.",
            "Yeah eh OK, your your question is is I can answer it in a lot of ways.",
            "Maybe we should discuss the discuss.",
            "Is it later because I think it's too late and everyone wants to go now I think.",
            "Or maybe I can discuss with everyone of you in in the in the reception, in the beach.",
            "But but I think it's an important question.",
            "We can discuss this later.",
            "Thank you.",
            "Other question.",
            "Any questions?",
            "Well.",
            "So.",
            "About the selection of the Jason objects.",
            "So what happens if you stay on a higher level and you select an object?",
            "Oh yeah, actually we only are supporting Jason Literals.",
            "An array of literals.",
            "OK, the semantics of what happened with array of literals is not in the paper, but in the implementation is quite straightforward to understand.",
            "It actually we're not supporting Jason objects an.",
            "Is one of the limitation of the implementation because a sometimes a?",
            "We would like to have a mapping through objects in RDF or what is supposed to be on an object.",
            "An object in in the Jason API a so if you're querying something that you cannot parse, it will be.",
            "It will have an unbound value.",
            "So related to that, I have a really hard time understanding how your query optimization is in fact related to the API thing.",
            "Because.",
            "About it's not clear whether if I would replace the API by.",
            "You know normal sparkle saying syntax and it would be a sparkle endpoint or what the difference is.",
            "Weather difference between between sparkle and yeah, so from a query execution perspective, it's because a the API part, it's it is not depend on the on the sparkle execution ending, so it depends on the guy that is exposing the data, so that's why you want to minimize the number of API calls because it.",
            "You can cannot do it faster.",
            "It depends on the on the API.",
            "So the optimization is is not related with the execution.",
            "It remains the same.",
            "What we're doing now is just a reordering a query in a smart way in order to minimize the number of.",
            "So that's what I'm saying.",
            "So if you have a service keyword you have no control about the endpoint that you're querying, so in that sense you also cannot reorder that query.",
            "For that particular endpoints, so isn't the reordering algorithm applicable to both cases?",
            "Yeah, it's not real, it's it's a bit more complicated than are reordering algorithm all is in the paper, but we prove that it works in all cases.",
            "For each query we prove that in the worst case it will works in a reasonable time, which is up to a constant up to a constant of the.",
            "The maximum size of the query can help.",
            "I believe you I'm just one.",
            "I'm just confused about whether the fact that it's an API actually matters to the.",
            "You know the algorithm, whether it's an API or another sparkle endpoint.",
            "Maybe it's the same and you can.",
            "Maybe your approach is even more general, generic or merely more general than you might think yourself or something.",
            "Yeah, maybe maybe.",
            "More general that than then, because maybe there is another way to do this.",
            "But a yeah, we're just looking at Abigail's.",
            "Maybe there are other ways that are a are better, but we are not considering it it.",
            "This is just a starting point.",
            "Then we can think in another ways to optimize this in the future.",
            "Sorry.",
            "Thanks, sorry for delaying.",
            "Have you?",
            "Investigate it a bit.",
            "To the user Jason LD.",
            "To turn almost automatically your the data returned by the API, intuitive as it's actually the main problem here you're addressing.",
            "Yeah, a OK.",
            "So.",
            "We we one of the things that we thought is that transform the data from API's into Jason LD and uses Park Julann and maintain everything in the same language.",
            "But like I said before a we would like to do the part of the service in a like developers.",
            "So we use the query language that is natural for Jason.",
            "I have no benchmark.",
            "Maybe use Jason LD.",
            "It's better but we haven't tried.",
            "It yet without, but we haven't tried anything with that.",
            "Thank you very much for this stuff.",
            "Thank you."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Thank you for the introduction.",
                    "label": 0
                },
                {
                    "sent": "My name is Allie and pseudo.",
                    "label": 0
                },
                {
                    "sent": "I'm from Pontificia near Seattle exactly and I'm going to talk about querying APIs with sparking.",
                    "label": 0
                },
                {
                    "sent": "So first of all, why querying APIs with Sparkle so?",
                    "label": 1
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Suppose we have a user.",
                    "label": 0
                },
                {
                    "sent": "Yeah, come a common user who wants to.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Do some hiking in the Highlands in Scotland.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So he wants to leave, so he want to go to to any mounting that now time is sunny and he went to go to read some reviews that other people did about that that hiking so that user has access to.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "My database, which is in RDF, so no problem until then.",
                    "label": 0
                },
                {
                    "sent": "But the weather, data and tweets are exposed.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The way through APIs with send Jason documents when they are they when they answer the queries of the user.",
                    "label": 0
                },
                {
                    "sent": "So we have a problem because those data cannot be integrated, but all those data is available on the web.",
                    "label": 0
                },
                {
                    "sent": "So we have.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "The following problem that the majority of data in the web is available through API's rest API's.",
                    "label": 0
                },
                {
                    "sent": "And a who can we integrate such data and how can we do this as efficient as possible so?",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And this is the time for spoilers in this talk a I'm going to talk a about a way to enable a sparkle to integrate with Jason APIs.",
                    "label": 1
                },
                {
                    "sent": "OK, extending the service operator.",
                    "label": 1
                },
                {
                    "sent": "And I will propose an algorithm to perform this task as efficient as possible, and then I will show some experimental results for a this algorithm so.",
                    "label": 1
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We have to talk for some preliminares.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So we will use the usual syntax and semantics of sparkwell will consider triple patterns and optional union filter an array.",
                    "label": 1
                },
                {
                    "sent": "Of course the service operator.",
                    "label": 0
                },
                {
                    "sent": "A.",
                    "label": 0
                },
                {
                    "sent": "We will use a lot of the service operators, so I want to explain.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "What does this mean?",
                    "label": 0
                },
                {
                    "sent": "This is operator that allows some user to answer a query a single query.",
                    "label": 0
                },
                {
                    "sent": "A which is related with multiple endpoints.",
                    "label": 0
                },
                {
                    "sent": "So for example, I have some data on my computer and I want to use some data which is exposed in an endpoint which has a data of weather.",
                    "label": 0
                },
                {
                    "sent": "So I can mix the data in the query an A process it and the user will be happy because he can answer his query.",
                    "label": 0
                },
                {
                    "sent": "So we want to.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "To access multiple endpoints in a single query, this is just a using Spark well, so suppose that we are in Chile an we won the weather in each city of the country.",
                    "label": 0
                },
                {
                    "sent": "So first of all we.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I have a these basic graph button that tells me all the cities in Chile and.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Then I'm query this endpoint OK weather.org sparkwell Ann.",
                    "label": 0
                },
                {
                    "sent": "I'm I'm giving two to the end point the cities and he will answer me.",
                    "label": 0
                },
                {
                    "sent": "The weather in those cities.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We were going to use a Web API, so with APIs are interfaces that expose data through HTTP.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Requests like this one.",
                    "label": 0
                },
                {
                    "sent": "This is a UI I'm giving A2 parameters.",
                    "label": 0
                },
                {
                    "sent": "The latitude and longitude of certain place.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "An A the API will return me Jason Document which is telling me some things about about that.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Ice.",
                    "label": 0
                },
                {
                    "sent": "We are assuming that API's response responses are always Jason documents, but is a we can extend it easily and we retrieve data from Jason using a navigation condition and this is nothing new, it's what?",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "What always we do a suppose we have a Jason J.",
                    "label": 0
                },
                {
                    "sent": "So in this day.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "You mean if we want to know the minimal temperature in the place I have to tell the Jason J give me the temperature and then give me the mean value.",
                    "label": 0
                },
                {
                    "sent": "So far so good.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So in now I'm going to talk to to what we do.",
                    "label": 0
                },
                {
                    "sent": "OK, so I'm going to start with an example example of.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Beginning then, suppose we want to do the hiking in Scotland bow, but we want to go to mountains, located in places that now are sunny.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So this is the whole query.",
                    "label": 0
                },
                {
                    "sent": "A contains a basic graph pattern, a service, but it's not as usual.",
                    "label": 0
                },
                {
                    "sent": "And then we we got a filter and I'm going to explain this step by step so.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Consider the basic pattern.",
                    "label": 0
                },
                {
                    "sent": "We will answer this basic graph pattern.",
                    "label": 0
                },
                {
                    "sent": "Yeah, this is nothing new.",
                    "label": 0
                },
                {
                    "sent": "A mappings that satisfies the query A.",
                    "label": 0
                },
                {
                    "sent": "Suppose that are those entity of Wikidata.",
                    "label": 0
                },
                {
                    "sent": "The first is bananas and the second one month Blair.",
                    "label": 0
                },
                {
                    "sent": "So we have this answer.",
                    "label": 0
                },
                {
                    "sent": "And then.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "For each mapping that we had in the previous part, I'm going to use the label and I'm going to pass it to the UI and I'm going to retrieve the Jason document.",
                    "label": 0
                },
                {
                    "sent": "I will navigate the Jason document with the instruction, which is description, and I'm generating a new variable and I'm going to extend each mapping with new values.",
                    "label": 1
                },
                {
                    "sent": "So I'm querying the API and I'm going to extending a map inside here and now I have the weather in.",
                    "label": 0
                },
                {
                    "sent": "Each place.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So after I had the I have the extended mappings and then apply the filter and I'm asking a why are what are the places that now are.",
                    "label": 0
                },
                {
                    "sent": "Sunny",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so far so good so.",
                    "label": 0
                },
                {
                    "sent": "I'm going to present the formal syntax and semantics so.",
                    "label": 0
                },
                {
                    "sent": "This is how our queries looks like is a pattern, then a service and then we can continue with other patterns soon.",
                    "label": 0
                },
                {
                    "sent": "So step by step.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "AP One is sparkwell pattern A.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "You is on your right template, which is how you write with variables.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "For example, a in the previous example, we have a this UI.",
                    "label": 0
                },
                {
                    "sent": "It has a variable L. Inside it is with current OK.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "AN-12 NMR Jason navigation condition.",
                    "label": 0
                }
            ]
        },
        "clip_31": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Like the description or the minimal temperature in some place an.",
                    "label": 0
                }
            ]
        },
        "clip_32": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "KX12X N are variables not appearing in P1 where they Jason values will be bound.",
                    "label": 1
                },
                {
                    "sent": "So I'm going to retrieve Jason's.",
                    "label": 0
                },
                {
                    "sent": "I will navigate them and I will bind via a values to those new variables.",
                    "label": 0
                },
                {
                    "sent": "X12 XM.",
                    "label": 0
                }
            ]
        },
        "clip_33": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "A semantics, I will explain it a mostly in a graphical way.",
                    "label": 0
                }
            ]
        },
        "clip_34": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So a suppose that we have the pattern P1 we evaluated and it will generate a lot of mappings.",
                    "label": 0
                },
                {
                    "sent": "Let's take some mapping, move an.",
                    "label": 0
                }
            ]
        },
        "clip_35": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, then we want we're going to pass this mapping.",
                    "label": 0
                }
            ]
        },
        "clip_36": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "2.",
                    "label": 0
                }
            ]
        },
        "clip_37": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Two US air to air service.",
                    "label": 0
                },
                {
                    "sent": "Yeah, and we will generate the following up.",
                    "label": 0
                }
            ]
        },
        "clip_38": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Item which is.",
                    "label": 0
                }
            ]
        },
        "clip_39": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Lauri Template U and the mapping mu.",
                    "label": 0
                },
                {
                    "sent": "What we're doing now is replacing the variables in the UI with the variables of a mapping the concrete values an I'm going generate Jason document.",
                    "label": 0
                }
            ]
        },
        "clip_40": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, when I have a decent document I'm going.",
                    "label": 0
                }
            ]
        },
        "clip_41": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Navigate it a one time per each.",
                    "label": 0
                }
            ]
        },
        "clip_42": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "A decent navigation condition, so the first one will generate.",
                    "label": 0
                }
            ]
        },
        "clip_43": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And you variable which is X1.",
                    "label": 0
                }
            ]
        },
        "clip_44": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And so far and so on, I'm.",
                    "label": 0
                }
            ]
        },
        "clip_45": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Going to do to generate one variable pair navigation, a conviction.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                }
            ]
        },
        "clip_46": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So finally we can say that the mapping movies extended with variables X12, XM with the values obtained from the Jason.",
                    "label": 0
                },
                {
                    "sent": "Recall that a when I have a navigation condition, it must a.",
                    "label": 0
                },
                {
                    "sent": "When we navigate the Jason, it must return Jason Literal, that that's what we said in the paper.",
                    "label": 0
                },
                {
                    "sent": "But the implementation also allows a Jason array of literals.",
                    "label": 0
                }
            ]
        },
        "clip_47": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so we have a basic implementation.",
                    "label": 0
                },
                {
                    "sent": "It's so simple, so if we have this query.",
                    "label": 0
                }
            ]
        },
        "clip_48": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "What we do is compute AP one recursively if it contains another service to API.",
                    "label": 0
                },
                {
                    "sent": "Then we compute the set of mappings MA with the, which correspond to A to the.",
                    "label": 0
                },
                {
                    "sent": "To the set of mappings, extend them with the new variables.",
                    "label": 0
                },
                {
                    "sent": "And then we serialize with the values keyword.",
                    "label": 0
                },
                {
                    "sent": "An operator in Sparkle a the values of M in order to generate a new a new pattern that can be passed to the next graph.",
                    "label": 0
                },
                {
                    "sent": "Patterns in the query.",
                    "label": 0
                }
            ]
        },
        "clip_49": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So a this is a naive algorithm.",
                    "label": 0
                },
                {
                    "sent": "We obviously can do it better.",
                    "label": 0
                },
                {
                    "sent": "So now we are.",
                    "label": 0
                },
                {
                    "sent": "I'm going to talk about the worst case optimal algorithm.",
                    "label": 0
                }
            ]
        },
        "clip_50": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Which is our algorithm.",
                    "label": 0
                },
                {
                    "sent": "Abit more intelligent.",
                    "label": 0
                },
                {
                    "sent": "So in a classical setting we would like to minimize the call to the disk, but a we have the question what is the main bottleneck in this settings?",
                    "label": 0
                },
                {
                    "sent": "Yeah and we run a four queries with real use case A using the service too happy in order to know what is the which is the new bottleneck.",
                    "label": 0
                }
            ]
        },
        "clip_51": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "In this setting.",
                    "label": 0
                },
                {
                    "sent": "So as we suppose, the bottleneck is the number of A = B, cause a happy are slower than access to this.",
                    "label": 0
                },
                {
                    "sent": "So what I want to minimize in this setting is the number of Abigail's that we are doing.",
                    "label": 1
                },
                {
                    "sent": "A these are four examples are for queries you.",
                    "label": 0
                },
                {
                    "sent": "You can find the detail in the papers a this queries use the API's of Open Weather Japan Twitter an most of the time is used by the API's.",
                    "label": 0
                }
            ]
        },
        "clip_52": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Then I say that I mean modeling is the number of AP.",
                    "label": 0
                }
            ]
        },
        "clip_53": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "I was on a redevelop worse this algorithm in terms of the number of cars that we are doing to the API.",
                    "label": 0
                },
                {
                    "sent": "OK, so I'm going to explain the algorithm by example.",
                    "label": 0
                }
            ]
        },
        "clip_54": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And then suppose that we have the.",
                    "label": 0
                },
                {
                    "sent": "We have the following query, it's it's almost the same than the one in the example, but a bit more generic.",
                    "label": 0
                },
                {
                    "sent": "So we have the variable XL&D and note that the variable X appears again a down in the wedding.",
                    "label": 0
                }
            ]
        },
        "clip_55": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "A suppose that the pattern A, the first basic graph pattern, has an output of size N, But the second one is empty.",
                    "label": 0
                },
                {
                    "sent": "So the output of the query tool be empty.",
                    "label": 0
                }
            ]
        },
        "clip_56": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Be empty on a basic algorithm.",
                    "label": 0
                },
                {
                    "sent": "What they will do in calls to the API, because it will resolve the first basic graph pattern, will call end times to the API, and then it will say Oh no worries empty.",
                    "label": 0
                },
                {
                    "sent": "Sorry I did too much work and it was not necessary.",
                    "label": 0
                },
                {
                    "sent": "So a worst case I will go even select an order for the variables and execute the algorithm.",
                    "label": 0
                },
                {
                    "sent": "The patterns of the of the query in such order.",
                    "label": 0
                },
                {
                    "sent": "So the example.",
                    "label": 0
                }
            ]
        },
        "clip_57": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "A.",
                    "label": 0
                },
                {
                    "sent": "We take the order of appearance of variables, which is XL&D, and then the algorithm evaluates the pattern in the following order.",
                    "label": 0
                },
                {
                    "sent": "First we have all related with XA and then we have all related with L and then.",
                    "label": 0
                }
            ]
        },
        "clip_58": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "With the.",
                    "label": 0
                },
                {
                    "sent": "So the evaluation is done in the same way, but a the order in what we are the order of the evaluation of the query change in an optimal way because.",
                    "label": 0
                }
            ]
        },
        "clip_59": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Now the first pattern throws an empty output before evaluating the service, so we are not doing any calls to the API.",
                    "label": 0
                }
            ]
        },
        "clip_60": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And recall that the order of appearance of variables is always a fair civil one.",
                    "label": 0
                },
                {
                    "sent": "To execute the algorithm, but not a.",
                    "label": 0
                },
                {
                    "sent": "But it happens that not all the order or variables are our festival in in this case.",
                    "label": 0
                }
            ]
        },
        "clip_61": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And this algorithm stores in cateva Jason in order to avoid duplicate calls.",
                    "label": 0
                }
            ]
        },
        "clip_62": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "I had to say that this algorithm is a bit more complicated.",
                    "label": 1
                },
                {
                    "sent": "That details are in the paper, but is inspired by the algorithm proposed by Adm, and these are the references which evaluate this.",
                    "label": 1
                },
                {
                    "sent": "A query variable by variable in an incremental way.",
                    "label": 0
                }
            ]
        },
        "clip_63": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Algorithm is a classical in is one of the most important results in database theory in in the last time it's related with the Adm bound, so the algorithm selects the order of variables an evaluate the joint in an incremental way, first with one variable, then with two and so forth and so on.",
                    "label": 0
                },
                {
                    "sent": "Eh, this is what algorithm do.",
                    "label": 0
                },
                {
                    "sent": "You can think that every pattern is a relation an every service is our relation with access method an.",
                    "label": 0
                },
                {
                    "sent": "The algorithm is evaluated with this technique, yeah, but you can think that we just are reordering the query in order to avoid to do so, many calls to the API.",
                    "label": 1
                },
                {
                    "sent": "OK, so.",
                    "label": 0
                }
            ]
        },
        "clip_64": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "A.",
                    "label": 0
                },
                {
                    "sent": "We prove that a using this algorithm, any festival query AQ can be evaluated over any database D using a number of calls that is bounded by a that bound a.",
                    "label": 0
                },
                {
                    "sent": "Where this term is the agent bounding of the query, which is the something like the the.",
                    "label": 0
                },
                {
                    "sent": "A given a database a I can tell you which is the, the number, the maximum number of tuples that a join can have.",
                    "label": 0
                },
                {
                    "sent": "An MQ D is the maximum size of direction of a single attribute over the database.",
                    "label": 0
                },
                {
                    "sent": "Also, we have a lot.",
                    "label": 0
                }
            ]
        },
        "clip_65": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "About a week which tell us that for each number N we showed that there is an instance of size N and a very cool such that any algorithm answering the query will do a number of calls equivalent to the bound that I showed before.",
                    "label": 0
                },
                {
                    "sent": "So we have the lower bound upper bound, and we proved finally that the algorithm is worst case optimal in terms of the equals.",
                    "label": 0
                }
            ]
        },
        "clip_66": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, so experiments a.",
                    "label": 0
                }
            ]
        },
        "clip_67": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Our experiments showed that our algorithm is useful not only theoretically, but in practice 2.",
                    "label": 0
                },
                {
                    "sent": "So A to test our algorithm we adapted the Berlin Berlin benchmark by transforming some soup patterns into service two API queries.",
                    "label": 0
                }
            ]
        },
        "clip_68": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So part of the data it was exposed into recipes rest APIs that we develop OK and part of the data value benchmark is exposed by this API's and we tested three algorithms.",
                    "label": 0
                },
                {
                    "sent": "The first one is the vanilla is the basic algorithm, the second one is the same, but a avoiding duplicate calls using Catch a A and the worst case optimal algorithm which is what explains a recently.",
                    "label": 0
                },
                {
                    "sent": "So this is the.",
                    "label": 0
                }
            ]
        },
        "clip_69": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Look for the queries in Devil in benchmark that has a high size.",
                    "label": 0
                },
                {
                    "sent": "And we can, and we can know that the worst is optimal algorithm.",
                    "label": 0
                },
                {
                    "sent": "Open open forms.",
                    "label": 0
                },
                {
                    "sent": "The other two in all cases and for the queries that are our little.",
                    "label": 0
                },
                {
                    "sent": "We also know that the worst is optimal algorithm.",
                    "label": 0
                }
            ]
        },
        "clip_70": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Is better than the other two OK in in summary.",
                    "label": 0
                }
            ]
        },
        "clip_71": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We can say is there without duplicates algorithm does does 20% less calls and the worst case optimal algorithm.",
                    "label": 0
                }
            ]
        },
        "clip_72": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Those a 53% less calls.",
                    "label": 1
                },
                {
                    "sent": "So it works.",
                    "label": 0
                },
                {
                    "sent": "And finally, some conclusion.",
                    "label": 0
                }
            ]
        },
        "clip_73": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "As of this work.",
                    "label": 0
                }
            ]
        },
        "clip_74": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Is that well?",
                    "label": 0
                },
                {
                    "sent": "The paper proposes a way to allow Sparkle to connect with Jason APIs because we want to access with Spark.",
                    "label": 0
                },
                {
                    "sent": "You'll more part of the web, not only the data which is in RDF, an we're.",
                    "label": 0
                }
            ]
        },
        "clip_75": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Propose at work is optimal algorithm to evaluate this query and try to do it as efficient as possible.",
                    "label": 0
                },
                {
                    "sent": "Anne's feet.",
                    "label": 0
                }
            ]
        },
        "clip_76": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We work, we plan to support more formats than only Jason, like relational databases, document storage.",
                    "label": 0
                },
                {
                    "sent": "I don't know.",
                    "label": 0
                },
                {
                    "sent": "Maybe a scrubbing of the web, I don't know and.",
                    "label": 0
                }
            ]
        },
        "clip_77": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "A the most important part is that we also want to support automatic entity resolution because when we are asking for a Jason, we are always passing the label and we want to go to work with.",
                    "label": 0
                },
                {
                    "sent": "You arise so we can transfer an API object to you.",
                    "label": 0
                },
                {
                    "sent": "I can you write to Jason Object instantly.",
                    "label": 0
                },
                {
                    "sent": "An know some advisement so.",
                    "label": 0
                }
            ]
        },
        "clip_78": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "A you can find the source code of this presentation in in in this GitHub.",
                    "label": 0
                },
                {
                    "sent": "Yeah, you can find the source code.",
                    "label": 0
                },
                {
                    "sent": "An example that you can run an.",
                    "label": 0
                },
                {
                    "sent": "Also we have the extended version of the paper without an appendix.",
                    "label": 0
                },
                {
                    "sent": "OK, a.",
                    "label": 0
                },
                {
                    "sent": "And we have an online demo.",
                    "label": 0
                },
                {
                    "sent": "Which is in that URL your URL in the GitHub also is the link.",
                    "label": 0
                },
                {
                    "sent": "There is a problem with the demo because we have all queries, works except the tracking query.",
                    "label": 0
                },
                {
                    "sent": "Because the API of weather stop to giving the weather in mountains.",
                    "label": 0
                },
                {
                    "sent": "So the example of Scotland is not working but it's not my fault is full of the API an if you want to contact me on on our give me some question and this is my email an you can find me in social networks like.",
                    "label": 0
                },
                {
                    "sent": "An I have Twitter Facebook, GitHub and other things.",
                    "label": 0
                },
                {
                    "sent": "So a this is all a thank you for listening.",
                    "label": 0
                },
                {
                    "sent": "I'm open for questions now.",
                    "label": 0
                },
                {
                    "sent": "Thank you for the nice talk.",
                    "label": 0
                },
                {
                    "sent": "I'm wondering, why did you choose to restrict yourself to Jason API's?",
                    "label": 0
                },
                {
                    "sent": "Oh OK.",
                    "label": 0
                },
                {
                    "sent": "This is a this started like a proof of concept, so we wanted to work with the with what we think are the most popular APIs in these days, which is a Jason APIs.",
                    "label": 0
                },
                {
                    "sent": "So we started with that.",
                    "label": 0
                },
                {
                    "sent": "But the idea is to extend in the future some to other kind of APIs likes a graph, QL, maybe XML.",
                    "label": 0
                },
                {
                    "sent": "Well I I'm asking because in fact I think that conceptually.",
                    "label": 0
                },
                {
                    "sent": "It's it's quite easy to describe a more general approach that would work for any file format, because what you need is you have this expression language, navigation expressions.",
                    "label": 0
                },
                {
                    "sent": "That allows you to get pieces of the Jason file, but you could abstract this to say, OK, we just need a navigation exploration, which is possible in XML with X path in HTML with CSS selectors etc etc or even regular expressions.",
                    "label": 0
                },
                {
                    "sent": "And you could you could at least from an abstract point of view you could describe it in a generic way and then for the implementation.",
                    "label": 0
                },
                {
                    "sent": "Of course you focus on some specific format.",
                    "label": 0
                },
                {
                    "sent": "Actually, actually I lied because they are not actually navigation instruction.",
                    "label": 0
                },
                {
                    "sent": "We use a Jason Path which is like expert but in Jason is a library in India.",
                    "label": 0
                },
                {
                    "sent": "And also I think I think your idea is nice which will implement it for most of languages which have a nice way to have selection of documents.",
                    "label": 0
                },
                {
                    "sent": "Thank you, OK, thank you.",
                    "label": 0
                },
                {
                    "sent": "Have a question?",
                    "label": 0
                },
                {
                    "sent": "What is the limit of your approach?",
                    "label": 0
                },
                {
                    "sent": "What is the limit of your approach?",
                    "label": 0
                },
                {
                    "sent": "You are you have brush.",
                    "label": 0
                },
                {
                    "sent": "Depends on the EPA documentation an A yeah, but actually it is the problem that all developers do when you are developing web application there is always the problem of a when you want to consume and happy you have to learn the happy documentation.",
                    "label": 0
                },
                {
                    "sent": "So when you are using a this.",
                    "label": 0
                },
                {
                    "sent": "Approach for integrating data you have to study the API documentation, but is something that that usually happen.",
                    "label": 0
                },
                {
                    "sent": "I think that that the.",
                    "label": 0
                },
                {
                    "sent": "The most critical part is a.",
                    "label": 0
                },
                {
                    "sent": "Is them?",
                    "label": 0
                },
                {
                    "sent": "How can I say it?",
                    "label": 0
                },
                {
                    "sent": "APIs are so slow sometimes in answering so if you are doing a query A acquiring a pattern which has a greater output, it will take a lot of time and maybe more than than is a tractable by or is more than than a user one wants to wait.",
                    "label": 0
                },
                {
                    "sent": "So the time that the API takes to answer you is the main difficulty in this in this approach.",
                    "label": 0
                },
                {
                    "sent": "So hi, thank you for your talk.",
                    "label": 0
                },
                {
                    "sent": "I wonder if.",
                    "label": 0
                },
                {
                    "sent": "If you want to make positioning of your approach compared to globalize view approach, don't you think that your case is just not a trivial case of global as you may be at home?",
                    "label": 0
                },
                {
                    "sent": "Yeah, sorry I didn't hear the last part of the question.",
                    "label": 0
                },
                {
                    "sent": "I wonder if it's not a trivial case of a globalized you mediatore?",
                    "label": 0
                },
                {
                    "sent": "Of the for global as view mediatore.",
                    "label": 0
                },
                {
                    "sent": "Oh I'm I don't know something about that actually, maybe we can discuss later that a. I I I didn't understand that last part may be something that that I don't know.",
                    "label": 0
                },
                {
                    "sent": "OK, thank you very much.",
                    "label": 0
                },
                {
                    "sent": "Very nice presentations an I just want.",
                    "label": 0
                },
                {
                    "sent": "I just wonder why you using Sparky L2 calls like APIs because in practicals in the developers mindset.",
                    "label": 0
                },
                {
                    "sent": "For instance, for instance they also the.",
                    "label": 0
                },
                {
                    "sent": "Often use like an API or crustaceans or surface composition.",
                    "label": 1
                },
                {
                    "sent": "So in your approach is that is that your approach provide.",
                    "label": 0
                },
                {
                    "sent": "Maybe I can position because it in my understanding is that the you will integrate lot of probably more model more than one to API, so why how you how you integrate or you how you make your system or your approach?",
                    "label": 0
                },
                {
                    "sent": "To be like a media tour or in the integrand, or that can be used to to compose and can provide meaningful research results to the end users.",
                    "label": 0
                },
                {
                    "sent": "So this is my questions.",
                    "label": 0
                },
                {
                    "sent": "Thank you very much.",
                    "label": 0
                },
                {
                    "sent": "Yeah, OK.",
                    "label": 0
                },
                {
                    "sent": "So first of all we decide to use a sparkle to worry APIs.",
                    "label": 0
                },
                {
                    "sent": "Not not.",
                    "label": 0
                },
                {
                    "sent": "We don't want to to make that a sparkle.",
                    "label": 1
                },
                {
                    "sent": "Was is the official language of for querying APIs.",
                    "label": 0
                },
                {
                    "sent": "Now is because a.",
                    "label": 0
                },
                {
                    "sent": "This particular is the query language for the web, so we consider that there is a lot of data that is in Jason format, so we want to make accessible for the for the semantic web, that's all so.",
                    "label": 0
                },
                {
                    "sent": "We are not trying to replace anything, is just a way of opening a discussion about if this data should be present in the semantic web and we are presenting a way to to have it present that that's all.",
                    "label": 0
                },
                {
                    "sent": "So so that's all.",
                    "label": 0
                },
                {
                    "sent": "Thanks very much for a very interesting talk.",
                    "label": 0
                },
                {
                    "sent": "Have you thought about so you use this kind of navigation expression?",
                    "label": 0
                },
                {
                    "sent": "You said Jason Path, I think.",
                    "label": 0
                },
                {
                    "sent": "Have you thought about just doing away with the whole Jason explicit service call and the navigation path and just doing it all in sparkle and then behind the scenes when needed?",
                    "label": 0
                },
                {
                    "sent": "Reference an online Jason API when it is deemed needed to resolve that particular triple.",
                    "label": 0
                },
                {
                    "sent": "Yeah, a.",
                    "label": 0
                },
                {
                    "sent": "The reason that that a we did it in in an allegation language is because we are using the query language for a Jason documents.",
                    "label": 0
                },
                {
                    "sent": "If we would like to use something like Spark will in a certain way you have to define code mappings that translate the data from one to another.",
                    "label": 0
                },
                {
                    "sent": "In your example, would be relatively straightforward, right is simple X property one Y property 20 property path I know, but but Jason documents may sometimes are.",
                    "label": 0
                },
                {
                    "sent": "A bit more complicated.",
                    "label": 0
                },
                {
                    "sent": "So what would you not be able to express in article right there there is a there is an option, so we thought that that this is more from developer point of view and you want to use the Jason the query language for Jason Documents, but you write a there is possible.",
                    "label": 0
                },
                {
                    "sent": "There are some some straightforward straightforward methods to access Jason A.",
                    "label": 0
                },
                {
                    "sent": "We didn't consider it just because we developed this.",
                    "label": 0
                },
                {
                    "sent": "Like from the point of view of our developer, more than a person of semantic web in the part of the integrating the rather welder writing semantic query, right?",
                    "label": 0
                },
                {
                    "sent": "So you would assume that something about developers somehow?",
                    "label": 0
                },
                {
                    "sent": "Yeah, yeah yeah, but I'm I'm referring to the part of the of the service, but a your comment is it's nice to us because we can work in a way to it's related with the future work with the part of entity resolution.",
                    "label": 1
                },
                {
                    "sent": "Maybe if we query these things.",
                    "label": 0
                },
                {
                    "sent": "Like sparkle patterns, we can integrate in a better way.",
                    "label": 0
                },
                {
                    "sent": "The data which is in the in the database are from APIs, so thank you OK, Thanks.",
                    "label": 0
                },
                {
                    "sent": "Hi, I actually missed the talk but just looking over the paper now so sorry but you know so many projects.",
                    "label": 0
                },
                {
                    "sent": "Propose ideas to extend the sparkle language to do some ad hoc thing, but you know I'm wondering if is there some other way you could get around this by.",
                    "label": 0
                },
                {
                    "sent": "You know, putting those things outside the query.",
                    "label": 0
                },
                {
                    "sent": "But still, you know binding to the variables like you show it in an example without requiring changes to this sparkle, grammar or language in any way.",
                    "label": 0
                },
                {
                    "sent": "OK, the first thing.",
                    "label": 0
                },
                {
                    "sent": "The first thing that I can think is that if you use programming language you also can do those things.",
                    "label": 0
                },
                {
                    "sent": "For example, you can do your own program that integrates data and it's OK, but we wanted to do this in a declarative way more than a procedural way, so that's why we developed this.",
                    "label": 0
                },
                {
                    "sent": "This language you can do with any programming language.",
                    "label": 0
                },
                {
                    "sent": "Do you actually can integrate all kinds of data but?",
                    "label": 0
                },
                {
                    "sent": "But this is a is an extension for the semantic Web to obtain data which is not available.",
                    "label": 0
                },
                {
                    "sent": "Now.",
                    "label": 0
                },
                {
                    "sent": "That's that's our approach.",
                    "label": 0
                },
                {
                    "sent": "I think we can.",
                    "label": 0
                },
                {
                    "sent": "We can discuss later.",
                    "label": 0
                },
                {
                    "sent": "I need all these comments to improve.",
                    "label": 0
                },
                {
                    "sent": "This world is part of my thesis, so so it will be nice to have more comments like that.",
                    "label": 0
                },
                {
                    "sent": "My comments will also answer part of your question, so you refer to the Sparkle LD approach in your paper, so this consistent in assuming that's at the UR of the service, you may have actually not an end point but a spark.",
                    "label": 0
                },
                {
                    "sent": "Other document or RDF documents, you just load it and apply the content of the service.",
                    "label": 0
                },
                {
                    "sent": "Close on that locali.",
                    "label": 0
                },
                {
                    "sent": "We actually wrote a paper last year in a in a workshop at semantics about what happens if that document is not audio document, but a document in any other format.",
                    "label": 0
                },
                {
                    "sent": "But for that document and for that format you know a transformation to audio and you can apply it locali and then follow the same approach as as popular D22 to run the query on it.",
                    "label": 0
                },
                {
                    "sent": "That could be maybe an approach where actually the deed.",
                    "label": 0
                },
                {
                    "sent": "Sparkle language is enough for that approach, and all units is the UI or something about transformation from that syntax to to RDF.",
                    "label": 0
                },
                {
                    "sent": "Yeah, thank you.",
                    "label": 0
                },
                {
                    "sent": "Visit on all this comments so so as you.",
                    "label": 0
                },
                {
                    "sent": "So now you are mixing.",
                    "label": 0
                },
                {
                    "sent": "Anne.",
                    "label": 0
                },
                {
                    "sent": "Sparkle Kurikan carry RDF in something else.",
                    "label": 0
                },
                {
                    "sent": "First will be Jason, but suggestion Anna provocation now is to do a benchmarking of the API's that you can use as you told that that there's a gap, there were some APIs can be slow or not be there or wherever.",
                    "label": 0
                },
                {
                    "sent": "So I just would like to put this in discussion now.",
                    "label": 0
                },
                {
                    "sent": "Yeah eh OK, your your question is is I can answer it in a lot of ways.",
                    "label": 0
                },
                {
                    "sent": "Maybe we should discuss the discuss.",
                    "label": 0
                },
                {
                    "sent": "Is it later because I think it's too late and everyone wants to go now I think.",
                    "label": 0
                },
                {
                    "sent": "Or maybe I can discuss with everyone of you in in the in the reception, in the beach.",
                    "label": 0
                },
                {
                    "sent": "But but I think it's an important question.",
                    "label": 0
                },
                {
                    "sent": "We can discuss this later.",
                    "label": 0
                },
                {
                    "sent": "Thank you.",
                    "label": 0
                },
                {
                    "sent": "Other question.",
                    "label": 0
                },
                {
                    "sent": "Any questions?",
                    "label": 0
                },
                {
                    "sent": "Well.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "About the selection of the Jason objects.",
                    "label": 0
                },
                {
                    "sent": "So what happens if you stay on a higher level and you select an object?",
                    "label": 0
                },
                {
                    "sent": "Oh yeah, actually we only are supporting Jason Literals.",
                    "label": 0
                },
                {
                    "sent": "An array of literals.",
                    "label": 0
                },
                {
                    "sent": "OK, the semantics of what happened with array of literals is not in the paper, but in the implementation is quite straightforward to understand.",
                    "label": 0
                },
                {
                    "sent": "It actually we're not supporting Jason objects an.",
                    "label": 0
                },
                {
                    "sent": "Is one of the limitation of the implementation because a sometimes a?",
                    "label": 0
                },
                {
                    "sent": "We would like to have a mapping through objects in RDF or what is supposed to be on an object.",
                    "label": 0
                },
                {
                    "sent": "An object in in the Jason API a so if you're querying something that you cannot parse, it will be.",
                    "label": 0
                },
                {
                    "sent": "It will have an unbound value.",
                    "label": 0
                },
                {
                    "sent": "So related to that, I have a really hard time understanding how your query optimization is in fact related to the API thing.",
                    "label": 0
                },
                {
                    "sent": "Because.",
                    "label": 0
                },
                {
                    "sent": "About it's not clear whether if I would replace the API by.",
                    "label": 0
                },
                {
                    "sent": "You know normal sparkle saying syntax and it would be a sparkle endpoint or what the difference is.",
                    "label": 0
                },
                {
                    "sent": "Weather difference between between sparkle and yeah, so from a query execution perspective, it's because a the API part, it's it is not depend on the on the sparkle execution ending, so it depends on the guy that is exposing the data, so that's why you want to minimize the number of API calls because it.",
                    "label": 0
                },
                {
                    "sent": "You can cannot do it faster.",
                    "label": 0
                },
                {
                    "sent": "It depends on the on the API.",
                    "label": 0
                },
                {
                    "sent": "So the optimization is is not related with the execution.",
                    "label": 0
                },
                {
                    "sent": "It remains the same.",
                    "label": 0
                },
                {
                    "sent": "What we're doing now is just a reordering a query in a smart way in order to minimize the number of.",
                    "label": 0
                },
                {
                    "sent": "So that's what I'm saying.",
                    "label": 0
                },
                {
                    "sent": "So if you have a service keyword you have no control about the endpoint that you're querying, so in that sense you also cannot reorder that query.",
                    "label": 0
                },
                {
                    "sent": "For that particular endpoints, so isn't the reordering algorithm applicable to both cases?",
                    "label": 0
                },
                {
                    "sent": "Yeah, it's not real, it's it's a bit more complicated than are reordering algorithm all is in the paper, but we prove that it works in all cases.",
                    "label": 0
                },
                {
                    "sent": "For each query we prove that in the worst case it will works in a reasonable time, which is up to a constant up to a constant of the.",
                    "label": 0
                },
                {
                    "sent": "The maximum size of the query can help.",
                    "label": 0
                },
                {
                    "sent": "I believe you I'm just one.",
                    "label": 0
                },
                {
                    "sent": "I'm just confused about whether the fact that it's an API actually matters to the.",
                    "label": 0
                },
                {
                    "sent": "You know the algorithm, whether it's an API or another sparkle endpoint.",
                    "label": 0
                },
                {
                    "sent": "Maybe it's the same and you can.",
                    "label": 0
                },
                {
                    "sent": "Maybe your approach is even more general, generic or merely more general than you might think yourself or something.",
                    "label": 0
                },
                {
                    "sent": "Yeah, maybe maybe.",
                    "label": 0
                },
                {
                    "sent": "More general that than then, because maybe there is another way to do this.",
                    "label": 0
                },
                {
                    "sent": "But a yeah, we're just looking at Abigail's.",
                    "label": 0
                },
                {
                    "sent": "Maybe there are other ways that are a are better, but we are not considering it it.",
                    "label": 0
                },
                {
                    "sent": "This is just a starting point.",
                    "label": 0
                },
                {
                    "sent": "Then we can think in another ways to optimize this in the future.",
                    "label": 0
                },
                {
                    "sent": "Sorry.",
                    "label": 0
                },
                {
                    "sent": "Thanks, sorry for delaying.",
                    "label": 0
                },
                {
                    "sent": "Have you?",
                    "label": 0
                },
                {
                    "sent": "Investigate it a bit.",
                    "label": 0
                },
                {
                    "sent": "To the user Jason LD.",
                    "label": 0
                },
                {
                    "sent": "To turn almost automatically your the data returned by the API, intuitive as it's actually the main problem here you're addressing.",
                    "label": 0
                },
                {
                    "sent": "Yeah, a OK.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "We we one of the things that we thought is that transform the data from API's into Jason LD and uses Park Julann and maintain everything in the same language.",
                    "label": 0
                },
                {
                    "sent": "But like I said before a we would like to do the part of the service in a like developers.",
                    "label": 0
                },
                {
                    "sent": "So we use the query language that is natural for Jason.",
                    "label": 0
                },
                {
                    "sent": "I have no benchmark.",
                    "label": 0
                },
                {
                    "sent": "Maybe use Jason LD.",
                    "label": 0
                },
                {
                    "sent": "It's better but we haven't tried.",
                    "label": 0
                },
                {
                    "sent": "It yet without, but we haven't tried anything with that.",
                    "label": 0
                },
                {
                    "sent": "Thank you very much for this stuff.",
                    "label": 0
                },
                {
                    "sent": "Thank you.",
                    "label": 0
                }
            ]
        }
    }
}