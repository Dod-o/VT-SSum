{
    "id": "zpfdsvcjnbjglu3v4set4t6p234vgaq4",
    "title": "Learning Graph Matching",
    "info": {
        "author": [
            "Alex Smola, Amazon"
        ],
        "published": "Aug. 27, 2007",
        "recorded": "August 2007",
        "category": [
            "Top->Computer Science->Computer Vision"
        ]
    },
    "url": "http://videolectures.net/mlg07_smola_lgm/",
    "segmentation": [
        [
            "What I'm going to talk about today is learning graph matching.",
            "And.",
            "Sam, I have to add, I'm not really.",
            "Top notch expert on Nila graph matching, nor on graphs and so on.",
            "We came into doing this by, well, first, solving a webpage ranking problem.",
            "Then we realized that by modifying things a little bit we could actually get something that worked quite well with graph matching.",
            "And I guess the bottom line of this talk.",
            "What you should remember?",
            "Besides, well, I'll be talking a little bit about various graph matching algorithms and how you can use them and how you can make them better is, well, general thing in science.",
            "So quite often people work very hard at finding answers to questions that somebody gave them, or questions that they spent very little time thinking about and they work very hard on the answers.",
            "This is an example of, well, an algorithmic example of well.",
            "If you spend quite a bit more time on asking the right question, the answers will be much better and actually easier to obtain.",
            "So.",
            "In essence, what we're able to do is for graph matching, which is known to be hard.",
            "That if you restrict yourself to the set of graphs that you're really interested in solving in matching.",
            "And if you actually try to use statistics to learn the right question, you will be able to find the Answer Boy, well, what I'll be talking about the Hungarian marriage method.",
            "So linear assignment.",
            "And we already talked at heard a little bit about linear assignment and so on in the previous two days.",
            "But I'll briefly explain it again anyway, so.",
            "Well, this."
        ],
        [
            "Mouse should actually.",
            "Yeah, so the outline of this talk is.",
            "I'll first actually explain a little bit why graph matching is a good idea, and by all means don't think that this is a fairly complete list for two reasons.",
            "First of all, I'm not very much of an expert.",
            "Secondly, yeah, it's more about the algorithm, namely how to learn this graph matching.",
            "Then I'll talk about some existing algorithms for graph matching.",
            "And the ones I will be talking about specifically are linear and quadratic assignment.",
            "There are other methods out there which for instance use junction trees and so on, but.",
            "These are actually some of the more popular ones.",
            "And then this is a.",
            "This section is actually just going to be 1 slide is too.",
            "Well stop and realize well maybe we should ask a better question rather than working really hard and finding an answer.",
            "And once we've realized that actually finding that better question is very easy.",
            "So then it's really just you.",
            "Sit down and crank the handling and do your stuff.",
            "And I'll show you that it actually does work reasonably well.",
            "This is where I need your help in the context of extensions, because there are a couple of straightforward extensions where it's very easy to see how you would design the algorithm and the issue is a little bit that we're in some cases not quite sure what the right problem for that would be, so it's like half hammer look for nail."
        ],
        [
            "Um?",
            "Yep, so well graph matching.",
            "Well, why do you care about it well?",
            "Biology and chemistry mean you might have molecule stored in a database.",
            "You might want to match them up.",
            "You might have regulatory networks and you want to match them.",
            "You might want to estimate functions for proteins.",
            "Another application that's.",
            "Maybe a little bit more easy to visualize this object matching in computer vision.",
            "So for instance, wide baseline match, you would extract features of two images and then you need to actually match up the feature points and you use that for 3D camera reconstruction.",
            "Or camera calibration and so on.",
            "So a lot of geometric computer vision algorithms need such a matching before hand.",
            "Another one would be, for instance, let's say you've got, well, a road map of say for instance Italy and you have updated satellite images and you want to Add all the routes that were built illegally.",
            "And you could do that by simply matching up with what you already have so far.",
            "And then you just identifying euros and map them in.",
            "And you want to do that reasonably automatically."
        ],
        [
            "So.",
            "To just show you that this is not such a trivial problem.",
            "I mean here are two identical graphs, and if you use a little bit of imagination, you can see.",
            "Well basically flip those two edges down, pull nodes down and we'll see that those two graphs are actually identical.",
            "This is a fairly easy case because actually this is a planar graph, so matching planar graphs is not hard, But what this should show you is that.",
            "Even very simple objects aren't so easy to match, at least for humans.",
            "And so why would you expect that computers have a very easy time?",
            "You also have all sorts of ambiguities."
        ],
        [
            "So let's say this is a graph.",
            "It's the same graph here.",
            "And well, how do I match it?",
            "Well, in this case cipher actually got.",
            "Six different rotations and I can flip things as well, right?",
            "And it's always going to be the same graph.",
            "But these are actually things that will make your life very hard afterwards when you want to design an automatic graph matching algorithm.",
            "Um?",
            "And it should actually be showing those pictures now.",
            "And I don't know why.",
            "OK, So what do you?",
            "Should have seen and I'll pull up the slides after those pictures afterwards is.",
            "They are if you if you have.",
            "Images, as in computer vision and you extract those features and you want to match up.",
            "Say for instance, if you see a person in two different positions.",
            "Then you want to match up that the Heat has moved in a certain way in the hands, and all that.",
            "You can then use that for further processing.",
            "I don't know why it's not."
        ],
        [
            "Bring up did last night.",
            "Yeah, so the.",
            "Problem is that there is no currently known polynomial time algorithm for matching.",
            "And but checking is actually fairly easy if I give you a match between two graphs, and let's say they unlabeled, it's a fairly straightforward thing.",
            "It's not as straightforward if you have an issue where the two graphs are not identical and you just want to do an approximate match, that's really hard.",
            "So in that case we might just want to find the best match.",
            "That's actually a much more common problem.",
            "So for instance.",
            "As setting computer vision, I mean you get 2 pictures of the same person you want to match features between them.",
            "I mean, while it's the same person, I mean the picture might look slightly different.",
            "If it isn't, it's kind of a trivial problem you might have, for instance several surveillance cameras and you're tracking the same person, and those cameras were installed by different manufacturers at different resolutions.",
            "Maybe somewhere colored somewhere black and white and you want to match between color and black and white and different resolutions.",
            "Now you could probably sit down and actually make a fairly.",
            "Good educated guess as to what a good compatibility between features in this case would be, but it would be a case nonetheless and you wouldn't really know whether this case is going to be particularly good.",
            "So the point is, why not use statistics to help us with this case?",
            "So I said you might have different resolutions.",
            "You might actually have different image content, different representation as well.",
            "So for instance, if I have already a map of Italy, I've got a satellite image.",
            "So then I have on the one hand a pixel image, on the other case is symbolic representation and I want to match those up.",
            "It's not quite trivial.",
            "And well, you also want to have an algorithm that scales, so if you.",
            "Use something that doesn't work very well with low polynomial coefficient.",
            "Do you have a problem?",
            "So I mean for very large graphs people use very clever heuristics and the idea was a little bit well.",
            "What can we do for actual?"
        ],
        [
            "Learning things.",
            "Um, yeah.",
            "So.",
            "No.",
            "The key point is and this is essentially what will be exploiting, while in general the problem of graph matching is really hard.",
            "Usually when we want to apply it, apply it, we will apply it only in a restricted domain.",
            "We know where we're going to apply it and we know it's an image problem or we know it's chemistry or whatever so.",
            "Therefore, using an off the shelf general purpose graph matcher to solve this specific problem.",
            "Should not promise us very good results, or at least we should expect that in the restricted domain will be doing much better.",
            "So.",
            "For instance, if I then might restrict myself to a very, very small subset of graphs are very special properties.",
            "Sometimes the matching problem is trivial.",
            "For instance, if I have attributed graphs and I wanted to exact matches, right, it's trivial.",
            "Especially for the attributes are unique, so then I can just really match up all the vertices and then I just check whether the edges of the same in that case also sub graphs and other problems are fairly straightforward to solve.",
            "You would think, well, hey, that's kind of trivial, but apparently for quite awhile people didn't use that.",
            "So Spooky was one of I guess the earlier people who actually did this so.",
            "I was very surprised when he gave the talking camera and he said yeah well people hadn't done it before and I thought, well, hey, that's obvious.",
            "But in hindsight, yes it is like many things are in hindsight.",
            "But the key point here is there are lots of interesting applications where if you just restrict yourself to that smaller application, the matching problem actually becomes easy.",
            "So I'm not talking about a general purpose, solves everything, type of graph matching algorithm, but one that for specific applications when then learning the right problem for this specific application will actually do fairly able to do fairly well.",
            "So.",
            "For instance, you might have graphs where the local neighborhood of a vertex might tell you enough that overall you can actually match things up.",
            "So this is also what humans are good at.",
            "So if you give a human to graphs and he looks at individual points and sees that the neighborhoods are similar, he will probably go and map them.",
            "Into well closely related matches ending well, just work from there.",
            "And that's when humans are actually pretty good at it.",
            "They're not very good if things are extremely symmetric and have lots of ambiguities.",
            "But the point is actually a lot of problems don't have those ambiguities, so we might be able to take advantage of this.",
            "OK, so.",
            "The other thing is that, as I say it quite don't have an exact graph matching problem, so people actually make the problem harder than it is.",
            "Because two graphs are not identical anyway, and you're just asking for well, what's the best match that would correspond to those two graphs."
        ],
        [
            "This phone is not good today.",
            "OK, so I hope I've explained a little bit what.",
            "Good app, Good applications, would be.",
            "And by the way, if you have any questions at anytime during my talk please just raise your hand.",
            "And interrupt also during the talk because I mean 60 minutes talk.",
            "It's unlikely you will still remember what was unclear at the end of the talk.",
            "So ask early.",
            "Now al."
        ],
        [
            "Rhythms.",
            "So now we need a little bit of notation.",
            "So let's say I've got graphs, G&G prime and have some vertices, and I've got edges.",
            "So the prime always indicates the other graph.",
            "And so I would just also have a corresponding matrix where I said Gij is 1 if there's an edge between R&J&J 0, so G is also used synonymously for the graph adjacency matrix.",
            "And will we be either Sister Vertex I and also its attributes?",
            "If there are any?",
            "Sign away and let's for the moment just to keep things simple.",
            "Deal with graphs which are the same size if they're different sizes, then we need to extend things a little bit, but it's not a big deal.",
            "So essentially what we're doing is given two graphs, give us a permutation such that Maps that Maps one graph into the other really well.",
            "That's at the end of the day.",
            "The problem we're trying to solve.",
            "So \u03c0 is a permutation matrix, and it's doubly stochastic, so roll something the column sums it all once, and it has only two in one entries.",
            "So Pi J is 1 if I is mapped into J.",
            "And it's 0 otherwise.",
            "So there's the problem.",
            "Most famous matching algorithm, which is the linear assignment.",
            "And that one works as follows.",
            "Well, I compute some score at some compatibility score CIJ for the match between vertices VI and VJ Prime.",
            "So that's one graph.",
            "That's the other one.",
            "Anne.",
            "What you don't want to do is you want to find some permutation point by J such that this sum is minimized.",
            "Sociology is Sierra.",
            "If there is a very good match and it's very large if there is a very bad match.",
            "Some people use in compatibility scores and then you would simply go and maximize this and it would have different CIJ definitions here, but.",
            "Will just.",
            "Assume that CIJO.",
            "If there's a perfect match and it's larger than zero if there's not such a good match.",
            "OK, and so we just optimize with this Pi, which is permutation, and I'll talk a little bit about it in the moment how you could actually go about doing this.",
            "So if we had graphs with unique attributes, like for instance Bunker did, then actually this function would be fairly trivial to do with all you would do then is you would set CIJ is Delta VIVJ prime, so actually 1 minus that.",
            "Sorry, that's a typo such that it's zero only if vertex I of the first graph and vertex J have the second graph have the same attribute.",
            "Yeah.",
            "And then you optimize away.",
            "Um?"
        ],
        [
            "That's not the interesting case.",
            "We're interested in finding more General CI JS.",
            "So here's the Hungarian marriage.",
            "So let's say here are some Hungarian men here, some Hungarian women.",
            "Yeah, sorry, I'm not very good at drawing and they all need to get married to each other.",
            "And so they all have a preference for each other.",
            "So for instance, Hungarian man 5 likes maybe hunger and women six more than he likes number 2 and #3 whatever.",
            "So they have some pairwise happiness.",
            "And you know that at the end of the day, they all must get married.",
            "So what you do is you have been trying to find the permutation which Maps say all the Hungarian men to all the Hungarian women in such a way that the overall happiness is maximized, or the unhappiness is minimized.",
            "So the CIJ is from before are basically unhappiness scores.",
            "Say for instance, Hungarian man #3 hates #5CI J C35 would be very large.",
            "OK.",
            "So.",
            "People have studied this problem for a long time, so it's true."
        ],
        [
            "Since they can monkey."
        ],
        [
            "This algorithm.",
            "Which solves this.",
            "So just writing out the optimization problem again.",
            "So we minimize the piping permutation matrix by JCIJ under the constraints that by Jay has interested in one and the matrix is doubly stochastic.",
            "OK. Now.",
            "You can actually go and show that you can relax this optimization problem here, which is an integer problem to one that's a linear program.",
            "So what's different for all I've done is I've just replaced this integral constraint here by an interval constraint.",
            "Now we can clearly see that this is a linear objective function in \u03c0.",
            "And we can see that all the constraints here are linear.",
            "So I've got linear objective function linear constraints and I can clearly just go and solve it by using a linear programming solver.",
            "You would probably actually do something slightly smarter than that and use.",
            "For instance, something like quick match or some other algorithms which well special use specific properties of this optimization problem.",
            "But in theory you can do it.",
            "Now, why would I actually solve this problem if I wanted to solve that one?",
            "Well, the nice thing about this problem is that if you look at the polytope which contains all the feasible solutions, pie.",
            "So basically, all those doubly stochastic matrices.",
            "We know that for a linear program, the optimality is achieved at one of the vertices, so.",
            "Stanley whiteboard.",
            "But let's say that's the polytope that contains all the price.",
            "And if now all those coordinates here are integers.",
            "We know that since at optimality.",
            "\u03a0 star is going to sit at one of those vertices if they all have only integral entries, then I know that the solution of this problem is equivalent to that one.",
            "Is that I know that the pie JS will only be on this year's at once.",
            "The reason why this works is because the cons this constraint matrix here is so called totally unimodular.",
            "And there's actually a fairly large class of discrete optimization problems with chapters nice property.",
            "The reason why I'm mentioning it is because quite often you might actually not find yourself in the situation of finding the best permutation, but you might want to restrict it further.",
            "And then.",
            "It's not quite clear whether the corresponding discrete optimization problem has a linear programming relaxation, which is exact.",
            "And the way to check it is you just check whether the constraint matrix that you're getting is totally unimodular.",
            "I'll write it out.",
            "So basically if you want to modify this at some point.",
            "Modified, then look on the web for a totally new module under conditions that go with it in.",
            "Check with your constraints are OK if they are, you're in luck and you will be able to solve their problem just as well.",
            "Otherwise you have.",
            "Fairly big problem on your hands and you might have to find a pro."
        ],
        [
            "Summit solution methods?",
            "So you can solve this in polynomial time.",
            "Well, you wouldn't necessarily want to use interior point methods, but you could of course much better to actually use explicit shortest path constructions and so on.",
            "So that there's, for instance, solve available by falligant.",
            "Basically just look for linear assignment on the wave and you will find good solvers.",
            "The other nice thing is that adding prior knowledge is really easy.",
            "So for instance, if I know that certain matches have to occur or certain matches must not occur, I can just clamp the corresponding apologize to all the 01 and it will just happen.",
            "This is really, really nice for including certain types of prior information about matches.",
            "Of course it doesn't work for all of them, but at least it will do the trick for some.",
            "OK, so this isn't avoid beautiful algorithm, you know you just define your compatibility scores CIJ using ship it off to whatever linear assignment solver you might have solved the problem and everything is correct.",
            "So you would think well, can't we just go and use that for graph matching?",
            "And in fact, I mean people have done that and for large graphs it's one of the better things you can do.",
            "But"
        ],
        [
            "I mean, there's a couple of problems.",
            "So.",
            "Why would it fail, for instance here?",
            "Let's say I've got this graph in the same graph again.",
            "No attributes, just number them for convenience.",
            "And essentially what I?",
            "Will do is I will define a vertex compatibility function, right?",
            "So I will ask well how compatible is this vertex with this one.",
            "Now this graph has a lot of symmetry.",
            "Anyway, rotate it.",
            "It's going to be the same, right?",
            "So there's no way I can design A compatibility function, which is anything else but constant.",
            "Because you need two pairs of vertices that I compare.",
            "They will always look the same, right?",
            "Any pair of vertices?",
            "I can, you know, include the neighborhood.",
            "I can include its neighboring edges and so on and so on.",
            "It will always be the same.",
            "So if I just rely on the pairwise compatibility function and then solve the linear assignment problem, the match that I've shown you here might be a perfectly valid choice.",
            "And what's wrong with this one?",
            "Well, I've just ended up flipping the one in the two.",
            "So you would just end up crossing those two edges over so it's not a really good graph match.",
            "And I mean, of course you can imagine even worse situations, but.",
            "What this tells you is that there is actually a lot of cases where linear assignment can fail.",
            "And it can fail, and it must fail because it's only taking pairs of vertices into account.",
            "It doesn't actually include.",
            "Information such as, well, OK.",
            "If I match this with that and that with that I need to have an edge between these two and maybe there must be an age.",
            "If I make a match between 4:00 and 2:00 and 6:00 and 1:00, then of course there shouldn't be an age here.",
            "So doing things like that are impossible with a linear assignment algorithm.",
            "OK. Well, so you could say, well, that's good insight.",
            "So now we know what the problem is.",
            "And we can solve it, right?",
            "This is what you would always do."
        ],
        [
            "So.",
            "Well, actually the other thing is.",
            "Well, graph matching is known to be hard, so if the hunger map.",
            "Marriage methods were a good algorithm which would always work then will we would immediately have a polynomial time algorithm.",
            "So obviously something isn't quite right here.",
            "So we expect that this simple trick must fail.",
            "So why is it fine?",
            "Well, I said the local features may not really be sufficient for matching what I can look out further hit, that's fine.",
            "But I can actually get fairly long range dependencies through symmetries.",
            "And this is actually in practice the key issue.",
            "Maybe we used the wrong matching scores, DeAndre?",
            "I cannot really do anything about those two, but I can fix this.",
            "And what I'm going to argue is that actually this in practice is the really interesting part, and that one usually nature is kind to you and gives you problems that are not that degenerate.",
            "OK. Now.",
            "I said the problem fails if I have lots of general problems with lots of symmetry.",
            "But if there are enough characteristic properties, enough characteristic features, welding, I can actually get away with it.",
            "So maybe I can actually then go and engineer those Cyg those compatibility functions for specific problems.",
            "And this will essentially be the algorithm how to learn graph matching and I'll show you how to do it.",
            "But before we do so."
        ],
        [
            "Let me quickly show you how you could do quadratic Simon.",
            "So.",
            "The key idea is use each compatibility features for the match.",
            "So.",
            "Why is it called quadratic?",
            "Assignment will deliver some.",
            "It had a linear term in the permutations.",
            "Here the quadratic assignment has a quadratic term in the permutation matrices.",
            "So you can already see where where trouble begins.",
            "I mean, let's assume that we could really solve this thing efficiently, and whatever, we still have a big issue.",
            "Let's say I have two graphs of size 100, so 10 to the two.",
            "So here I've already got 10 to the four entries for this matrix CIJ.",
            "Now if I need to look at pairwise compatibilities.",
            "Then I don't get into the four, but until the eight entries.",
            "That's something I can still kind of afford.",
            "On a decent computer.",
            "OK, now let's assume I don't want to match two graphs of size 100, but maybe size 1000?",
            "I get 10 to the 12 entries.",
            "OK, bad news at that time this algorithm will fail.",
            "So even if I had an efficient algorithm, just storing the problem can already be a huge issue.",
            "Computing this objective function can also be huge issue.",
            "Well, OK, I've cheated a little bit, because quite often this PC is sparse.",
            "So you don't really need.",
            "That many injuries, but still.",
            "I think you get the idea.",
            "Now OK, basically what you would do is you would set up this problem where CIJ just describes the vertex features.",
            "As a match an Qi Ju V describes the agreement between the potential ages.",
            "If while vertex I and you are matched to gianvi.",
            "Right?",
            "And then you just check well, if there's an edge here you have.",
            "You gotta have an edge there as well.",
            "So define it this way.",
            "And you can see that if I have twice the same graph, then, well, this function here will be 0.",
            "If I find exact match.",
            "And, well, not sure if it's larger than that, so you can clearly see that this will give you an exact matter if you wanted to have it travels.",
            "This is NPR problem to solve.",
            "So what to do?",
            "And people have used lots of algorithms for that.",
            "So for instance, one of the more famous ones is the graded assignment algorithm of Golden Ranga Rajan.",
            "So this is really famous in computer vision.",
            "At least.",
            "It basically relies on the sync Warren method in the middle and what it does is act."
        ],
        [
            "Something that you would say well for cheating, but I mean this is an area where people are really desperate.",
            "People are really desperate and you see it from the fact that actually genetic algorithm and tabu search are some of the best methods to solve quadratic assignment.",
            "Not that I have particular versions against them, but this is usually indication that people are really hopeless.",
            "Or Ant colony system, or anything else that's really desperately you Ristic.",
            "People use those things for quadratic assignment.",
            "OK, so in other words, by saying, well, hey, I've reduced the problem to quadratic assignment problem and not really getting anything I've just said well, hey, this problem is so hard even if I get enough statistics and so on, I will probably not be able to get a fairly good solution.",
            "So graduated assignment.",
            "Well, it works.",
            "Essentially I'm sweeping alot of things under the rug.",
            "You just perform a first order Taylor approximation of the quadratic assignment problem.",
            "So you take a derivative of the quadratic trend with respect to the permutation.",
            "And then you solve the 1st order approximation, such as the linearisation.",
            "And you take a small step in that direction.",
            "And you keep on reiterating.",
            "Actually, the greatest assignment does a few other hacky things on the way, but that's basically what it does.",
            "You can find semidefinite relaxations.",
            "Is it you get a big problem?",
            "Because yes, you get order of four.",
            "In terms of storage and what's worse, order of six in terms of computation.",
            "So again, semidefinite programs, usually people, unless you're exactly called Boyden Funderburg, it don't really solve problems of size larger than 1000.",
            "Most people will stop it.",
            "Anything between 100 and maybe 500.",
            "Just because it's very hard.",
            "And if you want to go beyond that, you need to do serious extra work.",
            "So in practice, if you use quadratic assignment, you can only really solve problems of size, maybe less than 100 nodes, so some of the better benchmark collections.",
            "I think they have like 3040 nodes, and that's where people are able to solve things optimally, so it's a serious problem.",
            "OK.",
            "In other words, quadratic assignment would be really nice if it were solvable, but since it isn't, we probably don't want to go there."
        ],
        [
            "So what went wrong?",
            "Well, what went wrong is that we actually spent a lot of time now discussing how we're going to solve a given problem.",
            "But not much time."
        ],
        [
            "On how we actually got to the problem.",
            "The exact graph matching as I've just discussed is probably going to be too expensive.",
            "And in quite many cases, well, you don't have really inexact graph matching problem.",
            "In the first case.",
            "For instance, if I want to match images that simply do look different, I just want to have a reasonably good match.",
            "So you might just actually.",
            "Be happy with any assignment.",
            "And you would be happy with that if your matching scores were actually any good.",
            "So the key insight is will use the data to learn the matching scores.",
            "So let me give you an example.",
            "You want to track people.",
            "So you need to match them up and you've got the whole bunch of surveillance cameras installed on an airport.",
            "And those cameras are not always installed in the location where there's based illumination, right?",
            "And they're from different manufacturers and all that.",
            "So it's not that you will actually be dealing with general purpose images.",
            "They will be very specific images with very specific degeneration.",
            "Very specific elimination problems, and so on and so on.",
            "So you should be able to take advantage of this and design A better algorithm for this specific problem as opposed to solving a more general one.",
            "But of course you want to have a procedure which, given this situation, is generally enough to generate an answer for you recently automatically.",
            "So we want to automate the customization.",
            "So what this means is really we want to get problem dependent scores CIJ and optimize over them.",
            "And we do that over a training set.",
            "Once we have it, or we will get better results.",
            "That's the key idea."
        ],
        [
            "So learning graph matching."
        ],
        [
            "So I mean, it's easy to write out the optimization problem.",
            "So, but I want to minimize over those compatibility scores.",
            "See.",
            "Now some discrepancy function and I assume I've got several pairs of graphs and I'm just going to make my life easier where I'm assuming I've got twice the same graph and it's just there for know that the best matches the identity permutation.",
            "And so Delta is some discrepancy function which tells me how bad the match.",
            "I suggest it is in comparison to the identity OK. At this point I is just the solution of my linear assignment problem.",
            "I'm dropping all those constraints that it's doubly stochastic and what have you just to keep notation slightly less cluttered.",
            "So I mean, this is a formal definition, high can write out the problem, and it doesn't really help me very much right?",
            "All I'm saying is find me some compatibility score such that for the graphs at hand it matches them up really well.",
            "OK.",
            "So now the first thing we might want to."
        ],
        [
            "Do is look at the loss function.",
            "And the one that I'm suggesting is I simply count how many of the vertices I get wrong.",
            "Well, it's not too unreasonable.",
            "The nice thing is that in this case I can actually write out this function as.",
            "Well, I'm just assuming I've got in vertices and then Pi transpose Pisin stab Lish stochastic cereal.",
            "Once it's Justin, same goes for \u03c0 prime.",
            "So I just get 2 N minus transport trace of Pi transposed pipeline.",
            "And in this case I will just get the one there whenever I match two vertices.",
            "Otherwise I'll get to 0.",
            "Obviously I could get other ones, but what this also tells you is that actually the exact graph matching.",
            "If I knew the answer would be just a linear assignment problem, namely optimizing the Pi such that such that it's as close as possible to pipeline.",
            "So minimize this expression here.",
            "OK. Now, trouble is that this."
        ],
        [
            "Is actually fairly ugly.",
            "It has three bath features.",
            "First of all, it's nonconvex, actually even worse, it's piecewise constant, because I mean if I change my function C, If I change it just a little bit, I will typically not expect that my matches will change because there's only a countable number of them.",
            "So therefore it must be large currents classes of seas.",
            "So that's really bad.",
            "And Furthermore, I might actually just end up overfitting.",
            "So far I haven't really restricted this Class C in any specific way.",
            "But the good thing is that once you actually write out this problem in this way.",
            "It's really easy.",
            "All you do is you just take for instance the excellent paper of Ben Tasker.",
            "Or then also that the Max margin Markov paper.",
            "Or then you take the truck on to reduce the tile paper which uses slightly different margin rescaling and have a few more details in it, but essentially are very similar papers you take any of those two and you just follow the recipe.",
            "Basically, once you've set up the problem in this way, finding the answer is straightforward.",
            "And I'll just tell you now how to crank the hand.",
            "The benefit for you is, besides, well, you might see that.",
            "Well, he is a nice matching algorithm.",
            "You will see how to solve this type of problems where you have a discrete problem with some constraints here.",
            "In a fairly automatic way.",
            "So as a matter of fact, two days ago to be as talked about, a very related.",
            "Setting where we had graphs and we wanted to perform approximate inference and we were talking about message passing and so on.",
            "So this is just a different optimization problem, but it's very much the same flow."
        ],
        [
            "So how do we deal with it?",
            "The first thing that I'm going to do is that's not strictly necessary.",
            "This is just for convenience here of notational presentation.",
            "Just going to assume that this compatibility function.",
            "See if we, you and Vijay is just some file VU and Vijay in approach with W. So I'm mapping into some feature space in their focus W so strictly necessary.",
            "I'm just assuming that actually this function here is a member of some bannock space.",
            "That's really what I need, but this makes things look a little bit prettier, so.",
            "I'm just going to use this.",
            "Then the next thing I'm going to do is just also stand with handle cranking, 'cause I mean this is the function I want to estimate.",
            "So now we've mapped it into that case.",
            "Actually Hilbert space.",
            "Now the next thing that I'm going to do is I'm going to assume that small W somehow correspond to smooth function C. And I'm going to minimize the regressed risk functional here.",
            "If you actually think about it, this doesn't make much sense just yet.",
            "Who's got an idea why what I wrote here doesn't make so much sense yet?",
            "Well, have a look at those seas.",
            "Let's say I rescaled W by a factor of 2.",
            "Will this change the solution of my linear assignment problem?",
            "No, it won't."
        ],
        [
            "Remember.",
            "That's the problem.",
            "So if I multiply the seas by any constant factor, it's not going to really make any difference.",
            "So in a way."
        ],
        [
            "What I've done here doesn't make much sense just yet.",
            "The reason is because there is no scale correspondence between the loss here and the regularizer there yet.",
            "We'll get to that scale correspondence in the moment, so treat this more as a symbolic representation of what it's meant to be, rather than.",
            "That you would actually try and minimize this so this only will start making sense as soon as we replace this by an upper bound which actually takes W into account."
        ],
        [
            "Now.",
            "This is the really, really wonderful trick of structured estimation.",
            "So if you have a problem of that type.",
            "You've got some loss.",
            "Delta of .1, for instance.",
            "Subject 2 will wear despise given as the argument of some problem.",
            "Then I can find a convex upper bound on this simply through the variables I work, so is greater equal in.",
            "In this case, explicitly written out 1 -- \u03c0 transposed C. So this is.",
            "This is, I'm assuming that this is the optimal solution.",
            "Pi prime is.",
            "Well, any other one?",
            "Plus Delta of \u03c0 prime and one for all pipeline.",
            "So this looks a little bit ad hoc.",
            "But it's actually fairly straightforward principle.",
            "Now, how can we show that this is an upper bound on this expression here?",
            "Well, very easily, well just plug in \u03c0 prime equals \u03c0 OK, Now since 4 Pi, this is the arc mean of Pi transpose C. This term here is going to be greater equal in 0 right?",
            "So that an here we already have Delta of .1 in.",
            "Now I have size greater equal than something positive, plus the term that I actually want to bound.",
            "So therefore clearly the upper bound holds.",
            "So it's really easy to show this.",
            "Sometimes people re scale the margin here.",
            "And that actually tends to work much better if you can afford it.",
            "The trouble is, here we cannot really afford this effort to re scale.",
            "So this thing actually plays the role of a margin.",
            "I need to explain a little bit why.",
            "So this is a discrepancy between the correct score.",
            "And well, for any other permutation \u03c0 prime.",
            "Now, if this quantity here is positive, it means I'm in trouble.",
            "Was if this quantity is positive then Pi prime will be a better minimizer of Pi transposed C than the one is the identity permutation.",
            "OK. Now what I'm actually doing is I'm going to add to this the loss, namely, basically how much it costs me by using Pi Prime instead of the 1 two.",
            "Well match.",
            "So what this does is it emphasizes.",
            "Good large margins.",
            "For permutations Pi prime, which would correspond to really disastrous matches.",
            "So that's a multi class large margin principle.",
            "I guess most of you when you drive a car actually obey the large margin principle.",
            "So for instance, if you drive along the highway and it's really really smooth on the side, well, maybe you're a little bit less careful and maybe stray little bit to the side right?",
            "At least I sometimes do that if I'm lazy.",
            "On the other hand, if I drive a mountainous road and there is a big gap on the side and there's a huge danger that it might just fall off, I will try my darndest to actually stay away from that.",
            "So I will try to keep as larger margin as possible between this gap, which would be disastrous.",
            "And where I am.",
            "And this is really just doing the same thing in equations here.",
            "Anyway, this is the key slide of the entire presentation.",
            "In terms of the optimization problem.",
            "Don't worry, there's lots of pictures here.",
            "So we will get through in time, so if you do that well, you can write up what our optimization problem.",
            "So remember before that here we had those losses for matching.",
            "Well some graphs in maybe a sub optimal way.",
            "Here we just replace it by those upper bounds.",
            "It's clear to see that this is a convex name.",
            "It's a linear constraint in \u03c0 prime and inks I, because I mean this is really just Pi prime transposed one.",
            "And so I get this constraint here.",
            "OK, so now I've got a convex optimization problem.",
            "And the other thing that's happened is I've really made the scale of the Seas matter.",
            "OK, so this is basically what fixes the reason why I used the norm of W squared as a regularizer.",
            "So now if I scale C to be very small, all the sudden, the bad large margin solutions are going to take over, so this prevents me from having just a scale that goes to zero, and so I will."
        ],
        [
            "Actually have an effective regularizer.",
            "OK. Now we've got a convex problem.",
            "Great, but we paid for it very dearly.",
            "We've got an exponential number of constraints, so we need to find the most violated constraint efficiently.",
            "But Fortunately that again is solved by linear assignment problem."
        ],
        [
            "So if you look at this line here and you ask, what's the pie?",
            "Which maximizes the right inside.",
            "Well, that's just a linear assignment.",
            "Problem is, it's linear imply."
        ],
        [
            "And what you do is you just find the worst permutation.",
            "And then you.",
            "Well, add this to a subset of constraints you minimize.",
            "For those constraints you find the next verse constraint into keep on iterating.",
            "I.",
            "Now what's really happening here?",
            "So this is the maximization problem that we need that we need to solve.",
            "So here's our compatibility score.",
            "So that's supposed to be a J obvious.",
            "Obviously not, sorry.",
            "Yeah, that's just the function over all of the graph I and graph I.",
            "So this.",
            "Has small entries whenever the corresponding vertices are a good match and large entries if their bath match, but I'm trying to make it deliberately worse for adding.",
            "Something on the main diagonal.",
            "Namely, corresponding those matches that I should actually be making right?",
            "So what I want to ensure is that the incompatibilities, so the off diagonal terms are significantly larger than one.",
            "That's really what I'm effectively doing.",
            "And this gives me a large margin solution.",
            "And then solving it.",
            "For instance, you can plug into SVM struct so you can use one of our own solvers.",
            "This is basically a fundamental optimization problem."
        ],
        [
            "Experiments.",
            "And I'll try to pull up the slides afterwards.",
            "I, and I mean probably they will display quite nice."
        ],
        [
            "In a different program.",
            "Yeah, I don't know why those two didn't but.",
            "So I'll show you the pictures in a moment, but basically what you can see is the following thing.",
            "So we what we did is we just looked at different training and test set size.",
            "An error is.",
            "Well, basically what you.",
            "Want to minimize?",
            "Obviously, and.",
            "Then you just look at how well the algorithm performs.",
            "So rate is us.",
            "That's basically using linear assignment with learning.",
            "So I need to explain what's happening here.",
            "The black functions are the black box, so this is basically how many training intested observations you have.",
            "And if you want to match images, getting building a training set is actually fairly painful because you need to have a poor soul to actually click some things.",
            "So this is by using essentially off the shelf.",
            "Known.",
            "Matching functions from computer vision compatibility scores and this gives you a not so great.",
            "Result.",
            "This is the so-called graduated assignment algorithm.",
            "And it doesn't work terribly much better.",
            "It's a little bit better than if you have lots of training data.",
            "It actually helps quite a bit, but not too much.",
            "This these different normalizations are simply.",
            "I mean, you need to choose how much longer you let your algorithm run.",
            "And of course, if you let it run.",
            "This is very quadratic assignment.",
            "If you let it run for a very long time, you get better scores, so those yellow bars are pretty good.",
            "Now, if you use linear assignment and learning well if you don't have much data to learn, you can see it's not so great.",
            "But as you get more and more data it actually starts beating the quadratic assignment algorithm, right?",
            "So around here.",
            "It starts catching up with the quadratic assignment.",
            "If you really spend a long time.",
            "Now the other thing is you can actually learn those quadratic assignment those compatibility functions as well.",
            "So that's what we call GA learning.",
            "So graded assignment, learning, and it's basically you just don't learn only the linear but the quadratic term and that works best as you would expect it.",
            "So that's the last magenta bar here."
        ],
        [
            "Well, why is this important?",
            "OK.",
            "This picture might explain a little bit.",
            "This is a plot of the error.",
            "That's the amount of time it takes.",
            "Log scale both locks down here.",
            "Now of course you want to have a small error, right?",
            "Now if you use.",
            "Great assignment and you spend a lot of time.",
            "You will get a fairly low error.",
            "But you can also use linear assignment and learned up compatibility scores.",
            "And you say 4 orders of magnitude in the runtime and you get the same performance.",
            "So in other words, now all the sudden you can use that for decently sized graphs.",
            "'cause I mean this gap is only going to get worse as you get larger and larger problems.",
            "The other thing that you see is, well, if you use graduated assignment and learning.",
            "Then you can improve things a little bit, but it's not quite as dramatic as this difference here."
        ],
        [
            "OK, now.",
            "Well, here's a question for you.",
            "So you know it's more than time, so maybe marriages aren't quite what they used to be and so.",
            "We can actually look at something that's not called exactly Hungarian marriage, but then you could call the matching.",
            "So the matching means that every Hungarian man is supposed to have an affair with the Hungarian women and vice versa.",
            "Every Hungarian woman is supposed to have an affair with exactly the hunger in Maine.",
            "OK, and they're still compatibility scores and all that, but it's just that it's not a monogomous relationship anymore.",
            "It's very easy to see that.",
            "Also, for that setting you can use the same algorithm and essentially get the same optimization properties in all that, just to work it through.",
            "The reason why I said it's easy to see is becausw.",
            "You get the same constraint matrix, so this totally on your modular thing.",
            "Just that now, well, the polytope is slightly bigger and you will still get integral solutions.",
            "Now the question that I have for you is do you know of problems?",
            "Where?",
            "A DI match rather than an exact match is something that you would want.",
            "If you have such a problem, we can help you.",
            "But so far I talked to a few people and they."
        ],
        [
            "Didn't know.",
            "So.",
            "Would be really nice.",
            "Well maybe it's not the million dollar question, but would be really nice if somebody said, hey I've got a problem that this solves."
        ],
        [
            "'cause we can solve it?",
            "Yeah, you can also do other things with this.",
            "You can essentially use it for ranking or collaborative ranking, so in this case you're not really marrying two sets with each other, you're marrying answers with positions that you can return.",
            "So for instance, if you say an Internet retailer like Netflix and you want to sell movies to users.",
            "And the users going the right there movies.",
            "And I mean most of you probably heard of the Netflix contest and the retailer then wants to suggest some more movies which they might like or say you go to.",
            "Amazon and Amazon will suggest some other books that you might want to buy.",
            "Now, well, if you think about it, the conditions of the Netflix contests are actually pretty stupid.",
            "Because what it says is do well on estimating for all other movies that I'm that I'm going to show you how well you're going to like them.",
            "That's stupid for the following reason.",
            "Well, at the end of the day, I don't really care about the system, knowing that I'm not going to like movies.",
            "X1 ZI would much rather that it suggests to me movies 8 Regency.",
            "So for instance, imagine the funny situation.",
            "We log on Amazon.",
            "And it will say.",
            "And by the way, we know you're not going to like those those books.",
            "Yeah, well you might be amused, but nothing else really.",
            "So in other words, this error criterion being uniform or old movies is really a bad idea.",
            "And the other thing is, you can really only recommend a small number of movies or books or whatever.",
            "Maybe 5, maybe 10 depending on your web page layout.",
            "That's about it.",
            "Web page ranking is the same issue.",
            "So you really want to get a linear assignment problem.",
            "It's basically or sorting a ranking problem.",
            "In this case suggest new objects.",
            "And it turns out you can actually use the same algorithm for essentially doing this.",
            "As a matter of fact, we started with this first and then."
        ],
        [
            "We realized it actually works for graph matching."
        ],
        [
            "So I'm going to skip over the last slide because for kittelsen we've got one minute left and we're done.",
            "So.",
            "We looked at a few applications, talked about some existing algorithms.",
            "This was essentially really the key point to realize that well.",
            "We should work smarter rather than harder.",
            "And then, once you've asked the right questions, the rest is really handle cranking.",
            "And it does work.",
            "OK, so unfortunately I couldn't show any of the computer vision pictures.",
            "I can show it to you in the break.",
            "Any questions?"
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "What I'm going to talk about today is learning graph matching.",
                    "label": 1
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "Sam, I have to add, I'm not really.",
                    "label": 1
                },
                {
                    "sent": "Top notch expert on Nila graph matching, nor on graphs and so on.",
                    "label": 0
                },
                {
                    "sent": "We came into doing this by, well, first, solving a webpage ranking problem.",
                    "label": 0
                },
                {
                    "sent": "Then we realized that by modifying things a little bit we could actually get something that worked quite well with graph matching.",
                    "label": 0
                },
                {
                    "sent": "And I guess the bottom line of this talk.",
                    "label": 0
                },
                {
                    "sent": "What you should remember?",
                    "label": 0
                },
                {
                    "sent": "Besides, well, I'll be talking a little bit about various graph matching algorithms and how you can use them and how you can make them better is, well, general thing in science.",
                    "label": 0
                },
                {
                    "sent": "So quite often people work very hard at finding answers to questions that somebody gave them, or questions that they spent very little time thinking about and they work very hard on the answers.",
                    "label": 0
                },
                {
                    "sent": "This is an example of, well, an algorithmic example of well.",
                    "label": 0
                },
                {
                    "sent": "If you spend quite a bit more time on asking the right question, the answers will be much better and actually easier to obtain.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "In essence, what we're able to do is for graph matching, which is known to be hard.",
                    "label": 0
                },
                {
                    "sent": "That if you restrict yourself to the set of graphs that you're really interested in solving in matching.",
                    "label": 0
                },
                {
                    "sent": "And if you actually try to use statistics to learn the right question, you will be able to find the Answer Boy, well, what I'll be talking about the Hungarian marriage method.",
                    "label": 0
                },
                {
                    "sent": "So linear assignment.",
                    "label": 0
                },
                {
                    "sent": "And we already talked at heard a little bit about linear assignment and so on in the previous two days.",
                    "label": 0
                },
                {
                    "sent": "But I'll briefly explain it again anyway, so.",
                    "label": 0
                },
                {
                    "sent": "Well, this.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Mouse should actually.",
                    "label": 0
                },
                {
                    "sent": "Yeah, so the outline of this talk is.",
                    "label": 0
                },
                {
                    "sent": "I'll first actually explain a little bit why graph matching is a good idea, and by all means don't think that this is a fairly complete list for two reasons.",
                    "label": 0
                },
                {
                    "sent": "First of all, I'm not very much of an expert.",
                    "label": 0
                },
                {
                    "sent": "Secondly, yeah, it's more about the algorithm, namely how to learn this graph matching.",
                    "label": 0
                },
                {
                    "sent": "Then I'll talk about some existing algorithms for graph matching.",
                    "label": 0
                },
                {
                    "sent": "And the ones I will be talking about specifically are linear and quadratic assignment.",
                    "label": 0
                },
                {
                    "sent": "There are other methods out there which for instance use junction trees and so on, but.",
                    "label": 0
                },
                {
                    "sent": "These are actually some of the more popular ones.",
                    "label": 0
                },
                {
                    "sent": "And then this is a.",
                    "label": 0
                },
                {
                    "sent": "This section is actually just going to be 1 slide is too.",
                    "label": 0
                },
                {
                    "sent": "Well stop and realize well maybe we should ask a better question rather than working really hard and finding an answer.",
                    "label": 0
                },
                {
                    "sent": "And once we've realized that actually finding that better question is very easy.",
                    "label": 0
                },
                {
                    "sent": "So then it's really just you.",
                    "label": 0
                },
                {
                    "sent": "Sit down and crank the handling and do your stuff.",
                    "label": 0
                },
                {
                    "sent": "And I'll show you that it actually does work reasonably well.",
                    "label": 0
                },
                {
                    "sent": "This is where I need your help in the context of extensions, because there are a couple of straightforward extensions where it's very easy to see how you would design the algorithm and the issue is a little bit that we're in some cases not quite sure what the right problem for that would be, so it's like half hammer look for nail.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Um?",
                    "label": 0
                },
                {
                    "sent": "Yep, so well graph matching.",
                    "label": 1
                },
                {
                    "sent": "Well, why do you care about it well?",
                    "label": 1
                },
                {
                    "sent": "Biology and chemistry mean you might have molecule stored in a database.",
                    "label": 0
                },
                {
                    "sent": "You might want to match them up.",
                    "label": 1
                },
                {
                    "sent": "You might have regulatory networks and you want to match them.",
                    "label": 1
                },
                {
                    "sent": "You might want to estimate functions for proteins.",
                    "label": 0
                },
                {
                    "sent": "Another application that's.",
                    "label": 0
                },
                {
                    "sent": "Maybe a little bit more easy to visualize this object matching in computer vision.",
                    "label": 1
                },
                {
                    "sent": "So for instance, wide baseline match, you would extract features of two images and then you need to actually match up the feature points and you use that for 3D camera reconstruction.",
                    "label": 0
                },
                {
                    "sent": "Or camera calibration and so on.",
                    "label": 0
                },
                {
                    "sent": "So a lot of geometric computer vision algorithms need such a matching before hand.",
                    "label": 0
                },
                {
                    "sent": "Another one would be, for instance, let's say you've got, well, a road map of say for instance Italy and you have updated satellite images and you want to Add all the routes that were built illegally.",
                    "label": 0
                },
                {
                    "sent": "And you could do that by simply matching up with what you already have so far.",
                    "label": 0
                },
                {
                    "sent": "And then you just identifying euros and map them in.",
                    "label": 0
                },
                {
                    "sent": "And you want to do that reasonably automatically.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "To just show you that this is not such a trivial problem.",
                    "label": 0
                },
                {
                    "sent": "I mean here are two identical graphs, and if you use a little bit of imagination, you can see.",
                    "label": 1
                },
                {
                    "sent": "Well basically flip those two edges down, pull nodes down and we'll see that those two graphs are actually identical.",
                    "label": 0
                },
                {
                    "sent": "This is a fairly easy case because actually this is a planar graph, so matching planar graphs is not hard, But what this should show you is that.",
                    "label": 0
                },
                {
                    "sent": "Even very simple objects aren't so easy to match, at least for humans.",
                    "label": 0
                },
                {
                    "sent": "And so why would you expect that computers have a very easy time?",
                    "label": 0
                },
                {
                    "sent": "You also have all sorts of ambiguities.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So let's say this is a graph.",
                    "label": 0
                },
                {
                    "sent": "It's the same graph here.",
                    "label": 0
                },
                {
                    "sent": "And well, how do I match it?",
                    "label": 0
                },
                {
                    "sent": "Well, in this case cipher actually got.",
                    "label": 0
                },
                {
                    "sent": "Six different rotations and I can flip things as well, right?",
                    "label": 0
                },
                {
                    "sent": "And it's always going to be the same graph.",
                    "label": 0
                },
                {
                    "sent": "But these are actually things that will make your life very hard afterwards when you want to design an automatic graph matching algorithm.",
                    "label": 0
                },
                {
                    "sent": "Um?",
                    "label": 0
                },
                {
                    "sent": "And it should actually be showing those pictures now.",
                    "label": 0
                },
                {
                    "sent": "And I don't know why.",
                    "label": 0
                },
                {
                    "sent": "OK, So what do you?",
                    "label": 0
                },
                {
                    "sent": "Should have seen and I'll pull up the slides after those pictures afterwards is.",
                    "label": 0
                },
                {
                    "sent": "They are if you if you have.",
                    "label": 0
                },
                {
                    "sent": "Images, as in computer vision and you extract those features and you want to match up.",
                    "label": 0
                },
                {
                    "sent": "Say for instance, if you see a person in two different positions.",
                    "label": 0
                },
                {
                    "sent": "Then you want to match up that the Heat has moved in a certain way in the hands, and all that.",
                    "label": 0
                },
                {
                    "sent": "You can then use that for further processing.",
                    "label": 0
                },
                {
                    "sent": "I don't know why it's not.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Bring up did last night.",
                    "label": 0
                },
                {
                    "sent": "Yeah, so the.",
                    "label": 0
                },
                {
                    "sent": "Problem is that there is no currently known polynomial time algorithm for matching.",
                    "label": 1
                },
                {
                    "sent": "And but checking is actually fairly easy if I give you a match between two graphs, and let's say they unlabeled, it's a fairly straightforward thing.",
                    "label": 0
                },
                {
                    "sent": "It's not as straightforward if you have an issue where the two graphs are not identical and you just want to do an approximate match, that's really hard.",
                    "label": 1
                },
                {
                    "sent": "So in that case we might just want to find the best match.",
                    "label": 0
                },
                {
                    "sent": "That's actually a much more common problem.",
                    "label": 0
                },
                {
                    "sent": "So for instance.",
                    "label": 0
                },
                {
                    "sent": "As setting computer vision, I mean you get 2 pictures of the same person you want to match features between them.",
                    "label": 0
                },
                {
                    "sent": "I mean, while it's the same person, I mean the picture might look slightly different.",
                    "label": 0
                },
                {
                    "sent": "If it isn't, it's kind of a trivial problem you might have, for instance several surveillance cameras and you're tracking the same person, and those cameras were installed by different manufacturers at different resolutions.",
                    "label": 0
                },
                {
                    "sent": "Maybe somewhere colored somewhere black and white and you want to match between color and black and white and different resolutions.",
                    "label": 0
                },
                {
                    "sent": "Now you could probably sit down and actually make a fairly.",
                    "label": 0
                },
                {
                    "sent": "Good educated guess as to what a good compatibility between features in this case would be, but it would be a case nonetheless and you wouldn't really know whether this case is going to be particularly good.",
                    "label": 0
                },
                {
                    "sent": "So the point is, why not use statistics to help us with this case?",
                    "label": 0
                },
                {
                    "sent": "So I said you might have different resolutions.",
                    "label": 1
                },
                {
                    "sent": "You might actually have different image content, different representation as well.",
                    "label": 0
                },
                {
                    "sent": "So for instance, if I have already a map of Italy, I've got a satellite image.",
                    "label": 0
                },
                {
                    "sent": "So then I have on the one hand a pixel image, on the other case is symbolic representation and I want to match those up.",
                    "label": 0
                },
                {
                    "sent": "It's not quite trivial.",
                    "label": 0
                },
                {
                    "sent": "And well, you also want to have an algorithm that scales, so if you.",
                    "label": 1
                },
                {
                    "sent": "Use something that doesn't work very well with low polynomial coefficient.",
                    "label": 0
                },
                {
                    "sent": "Do you have a problem?",
                    "label": 0
                },
                {
                    "sent": "So I mean for very large graphs people use very clever heuristics and the idea was a little bit well.",
                    "label": 0
                },
                {
                    "sent": "What can we do for actual?",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Learning things.",
                    "label": 0
                },
                {
                    "sent": "Um, yeah.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "No.",
                    "label": 0
                },
                {
                    "sent": "The key point is and this is essentially what will be exploiting, while in general the problem of graph matching is really hard.",
                    "label": 0
                },
                {
                    "sent": "Usually when we want to apply it, apply it, we will apply it only in a restricted domain.",
                    "label": 1
                },
                {
                    "sent": "We know where we're going to apply it and we know it's an image problem or we know it's chemistry or whatever so.",
                    "label": 0
                },
                {
                    "sent": "Therefore, using an off the shelf general purpose graph matcher to solve this specific problem.",
                    "label": 0
                },
                {
                    "sent": "Should not promise us very good results, or at least we should expect that in the restricted domain will be doing much better.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 1
                },
                {
                    "sent": "For instance, if I then might restrict myself to a very, very small subset of graphs are very special properties.",
                    "label": 0
                },
                {
                    "sent": "Sometimes the matching problem is trivial.",
                    "label": 1
                },
                {
                    "sent": "For instance, if I have attributed graphs and I wanted to exact matches, right, it's trivial.",
                    "label": 0
                },
                {
                    "sent": "Especially for the attributes are unique, so then I can just really match up all the vertices and then I just check whether the edges of the same in that case also sub graphs and other problems are fairly straightforward to solve.",
                    "label": 0
                },
                {
                    "sent": "You would think, well, hey, that's kind of trivial, but apparently for quite awhile people didn't use that.",
                    "label": 0
                },
                {
                    "sent": "So Spooky was one of I guess the earlier people who actually did this so.",
                    "label": 0
                },
                {
                    "sent": "I was very surprised when he gave the talking camera and he said yeah well people hadn't done it before and I thought, well, hey, that's obvious.",
                    "label": 0
                },
                {
                    "sent": "But in hindsight, yes it is like many things are in hindsight.",
                    "label": 0
                },
                {
                    "sent": "But the key point here is there are lots of interesting applications where if you just restrict yourself to that smaller application, the matching problem actually becomes easy.",
                    "label": 0
                },
                {
                    "sent": "So I'm not talking about a general purpose, solves everything, type of graph matching algorithm, but one that for specific applications when then learning the right problem for this specific application will actually do fairly able to do fairly well.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "For instance, you might have graphs where the local neighborhood of a vertex might tell you enough that overall you can actually match things up.",
                    "label": 0
                },
                {
                    "sent": "So this is also what humans are good at.",
                    "label": 0
                },
                {
                    "sent": "So if you give a human to graphs and he looks at individual points and sees that the neighborhoods are similar, he will probably go and map them.",
                    "label": 0
                },
                {
                    "sent": "Into well closely related matches ending well, just work from there.",
                    "label": 0
                },
                {
                    "sent": "And that's when humans are actually pretty good at it.",
                    "label": 0
                },
                {
                    "sent": "They're not very good if things are extremely symmetric and have lots of ambiguities.",
                    "label": 0
                },
                {
                    "sent": "But the point is actually a lot of problems don't have those ambiguities, so we might be able to take advantage of this.",
                    "label": 0
                },
                {
                    "sent": "OK, so.",
                    "label": 0
                },
                {
                    "sent": "The other thing is that, as I say it quite don't have an exact graph matching problem, so people actually make the problem harder than it is.",
                    "label": 0
                },
                {
                    "sent": "Because two graphs are not identical anyway, and you're just asking for well, what's the best match that would correspond to those two graphs.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This phone is not good today.",
                    "label": 0
                },
                {
                    "sent": "OK, so I hope I've explained a little bit what.",
                    "label": 0
                },
                {
                    "sent": "Good app, Good applications, would be.",
                    "label": 0
                },
                {
                    "sent": "And by the way, if you have any questions at anytime during my talk please just raise your hand.",
                    "label": 0
                },
                {
                    "sent": "And interrupt also during the talk because I mean 60 minutes talk.",
                    "label": 0
                },
                {
                    "sent": "It's unlikely you will still remember what was unclear at the end of the talk.",
                    "label": 0
                },
                {
                    "sent": "So ask early.",
                    "label": 0
                },
                {
                    "sent": "Now al.",
                    "label": 0
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Rhythms.",
                    "label": 0
                },
                {
                    "sent": "So now we need a little bit of notation.",
                    "label": 0
                },
                {
                    "sent": "So let's say I've got graphs, G&G prime and have some vertices, and I've got edges.",
                    "label": 0
                },
                {
                    "sent": "So the prime always indicates the other graph.",
                    "label": 0
                },
                {
                    "sent": "And so I would just also have a corresponding matrix where I said Gij is 1 if there's an edge between R&J&J 0, so G is also used synonymously for the graph adjacency matrix.",
                    "label": 0
                },
                {
                    "sent": "And will we be either Sister Vertex I and also its attributes?",
                    "label": 0
                },
                {
                    "sent": "If there are any?",
                    "label": 0
                },
                {
                    "sent": "Sign away and let's for the moment just to keep things simple.",
                    "label": 0
                },
                {
                    "sent": "Deal with graphs which are the same size if they're different sizes, then we need to extend things a little bit, but it's not a big deal.",
                    "label": 0
                },
                {
                    "sent": "So essentially what we're doing is given two graphs, give us a permutation such that Maps that Maps one graph into the other really well.",
                    "label": 0
                },
                {
                    "sent": "That's at the end of the day.",
                    "label": 0
                },
                {
                    "sent": "The problem we're trying to solve.",
                    "label": 0
                },
                {
                    "sent": "So \u03c0 is a permutation matrix, and it's doubly stochastic, so roll something the column sums it all once, and it has only two in one entries.",
                    "label": 0
                },
                {
                    "sent": "So Pi J is 1 if I is mapped into J.",
                    "label": 0
                },
                {
                    "sent": "And it's 0 otherwise.",
                    "label": 0
                },
                {
                    "sent": "So there's the problem.",
                    "label": 0
                },
                {
                    "sent": "Most famous matching algorithm, which is the linear assignment.",
                    "label": 0
                },
                {
                    "sent": "And that one works as follows.",
                    "label": 0
                },
                {
                    "sent": "Well, I compute some score at some compatibility score CIJ for the match between vertices VI and VJ Prime.",
                    "label": 1
                },
                {
                    "sent": "So that's one graph.",
                    "label": 0
                },
                {
                    "sent": "That's the other one.",
                    "label": 0
                },
                {
                    "sent": "Anne.",
                    "label": 0
                },
                {
                    "sent": "What you don't want to do is you want to find some permutation point by J such that this sum is minimized.",
                    "label": 0
                },
                {
                    "sent": "Sociology is Sierra.",
                    "label": 0
                },
                {
                    "sent": "If there is a very good match and it's very large if there is a very bad match.",
                    "label": 0
                },
                {
                    "sent": "Some people use in compatibility scores and then you would simply go and maximize this and it would have different CIJ definitions here, but.",
                    "label": 0
                },
                {
                    "sent": "Will just.",
                    "label": 0
                },
                {
                    "sent": "Assume that CIJO.",
                    "label": 0
                },
                {
                    "sent": "If there's a perfect match and it's larger than zero if there's not such a good match.",
                    "label": 0
                },
                {
                    "sent": "OK, and so we just optimize with this Pi, which is permutation, and I'll talk a little bit about it in the moment how you could actually go about doing this.",
                    "label": 0
                },
                {
                    "sent": "So if we had graphs with unique attributes, like for instance Bunker did, then actually this function would be fairly trivial to do with all you would do then is you would set CIJ is Delta VIVJ prime, so actually 1 minus that.",
                    "label": 0
                },
                {
                    "sent": "Sorry, that's a typo such that it's zero only if vertex I of the first graph and vertex J have the second graph have the same attribute.",
                    "label": 0
                },
                {
                    "sent": "Yeah.",
                    "label": 0
                },
                {
                    "sent": "And then you optimize away.",
                    "label": 0
                },
                {
                    "sent": "Um?",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "That's not the interesting case.",
                    "label": 0
                },
                {
                    "sent": "We're interested in finding more General CI JS.",
                    "label": 0
                },
                {
                    "sent": "So here's the Hungarian marriage.",
                    "label": 1
                },
                {
                    "sent": "So let's say here are some Hungarian men here, some Hungarian women.",
                    "label": 0
                },
                {
                    "sent": "Yeah, sorry, I'm not very good at drawing and they all need to get married to each other.",
                    "label": 0
                },
                {
                    "sent": "And so they all have a preference for each other.",
                    "label": 0
                },
                {
                    "sent": "So for instance, Hungarian man 5 likes maybe hunger and women six more than he likes number 2 and #3 whatever.",
                    "label": 0
                },
                {
                    "sent": "So they have some pairwise happiness.",
                    "label": 0
                },
                {
                    "sent": "And you know that at the end of the day, they all must get married.",
                    "label": 0
                },
                {
                    "sent": "So what you do is you have been trying to find the permutation which Maps say all the Hungarian men to all the Hungarian women in such a way that the overall happiness is maximized, or the unhappiness is minimized.",
                    "label": 0
                },
                {
                    "sent": "So the CIJ is from before are basically unhappiness scores.",
                    "label": 0
                },
                {
                    "sent": "Say for instance, Hungarian man #3 hates #5CI J C35 would be very large.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "People have studied this problem for a long time, so it's true.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Since they can monkey.",
                    "label": 0
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "This algorithm.",
                    "label": 0
                },
                {
                    "sent": "Which solves this.",
                    "label": 0
                },
                {
                    "sent": "So just writing out the optimization problem again.",
                    "label": 0
                },
                {
                    "sent": "So we minimize the piping permutation matrix by JCIJ under the constraints that by Jay has interested in one and the matrix is doubly stochastic.",
                    "label": 0
                },
                {
                    "sent": "OK. Now.",
                    "label": 0
                },
                {
                    "sent": "You can actually go and show that you can relax this optimization problem here, which is an integer problem to one that's a linear program.",
                    "label": 0
                },
                {
                    "sent": "So what's different for all I've done is I've just replaced this integral constraint here by an interval constraint.",
                    "label": 0
                },
                {
                    "sent": "Now we can clearly see that this is a linear objective function in \u03c0.",
                    "label": 0
                },
                {
                    "sent": "And we can see that all the constraints here are linear.",
                    "label": 0
                },
                {
                    "sent": "So I've got linear objective function linear constraints and I can clearly just go and solve it by using a linear programming solver.",
                    "label": 0
                },
                {
                    "sent": "You would probably actually do something slightly smarter than that and use.",
                    "label": 0
                },
                {
                    "sent": "For instance, something like quick match or some other algorithms which well special use specific properties of this optimization problem.",
                    "label": 0
                },
                {
                    "sent": "But in theory you can do it.",
                    "label": 0
                },
                {
                    "sent": "Now, why would I actually solve this problem if I wanted to solve that one?",
                    "label": 0
                },
                {
                    "sent": "Well, the nice thing about this problem is that if you look at the polytope which contains all the feasible solutions, pie.",
                    "label": 0
                },
                {
                    "sent": "So basically, all those doubly stochastic matrices.",
                    "label": 0
                },
                {
                    "sent": "We know that for a linear program, the optimality is achieved at one of the vertices, so.",
                    "label": 0
                },
                {
                    "sent": "Stanley whiteboard.",
                    "label": 0
                },
                {
                    "sent": "But let's say that's the polytope that contains all the price.",
                    "label": 0
                },
                {
                    "sent": "And if now all those coordinates here are integers.",
                    "label": 0
                },
                {
                    "sent": "We know that since at optimality.",
                    "label": 0
                },
                {
                    "sent": "\u03a0 star is going to sit at one of those vertices if they all have only integral entries, then I know that the solution of this problem is equivalent to that one.",
                    "label": 0
                },
                {
                    "sent": "Is that I know that the pie JS will only be on this year's at once.",
                    "label": 0
                },
                {
                    "sent": "The reason why this works is because the cons this constraint matrix here is so called totally unimodular.",
                    "label": 0
                },
                {
                    "sent": "And there's actually a fairly large class of discrete optimization problems with chapters nice property.",
                    "label": 0
                },
                {
                    "sent": "The reason why I'm mentioning it is because quite often you might actually not find yourself in the situation of finding the best permutation, but you might want to restrict it further.",
                    "label": 0
                },
                {
                    "sent": "And then.",
                    "label": 0
                },
                {
                    "sent": "It's not quite clear whether the corresponding discrete optimization problem has a linear programming relaxation, which is exact.",
                    "label": 0
                },
                {
                    "sent": "And the way to check it is you just check whether the constraint matrix that you're getting is totally unimodular.",
                    "label": 0
                },
                {
                    "sent": "I'll write it out.",
                    "label": 0
                },
                {
                    "sent": "So basically if you want to modify this at some point.",
                    "label": 0
                },
                {
                    "sent": "Modified, then look on the web for a totally new module under conditions that go with it in.",
                    "label": 0
                },
                {
                    "sent": "Check with your constraints are OK if they are, you're in luck and you will be able to solve their problem just as well.",
                    "label": 0
                },
                {
                    "sent": "Otherwise you have.",
                    "label": 0
                },
                {
                    "sent": "Fairly big problem on your hands and you might have to find a pro.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Summit solution methods?",
                    "label": 0
                },
                {
                    "sent": "So you can solve this in polynomial time.",
                    "label": 1
                },
                {
                    "sent": "Well, you wouldn't necessarily want to use interior point methods, but you could of course much better to actually use explicit shortest path constructions and so on.",
                    "label": 0
                },
                {
                    "sent": "So that there's, for instance, solve available by falligant.",
                    "label": 0
                },
                {
                    "sent": "Basically just look for linear assignment on the wave and you will find good solvers.",
                    "label": 0
                },
                {
                    "sent": "The other nice thing is that adding prior knowledge is really easy.",
                    "label": 1
                },
                {
                    "sent": "So for instance, if I know that certain matches have to occur or certain matches must not occur, I can just clamp the corresponding apologize to all the 01 and it will just happen.",
                    "label": 0
                },
                {
                    "sent": "This is really, really nice for including certain types of prior information about matches.",
                    "label": 1
                },
                {
                    "sent": "Of course it doesn't work for all of them, but at least it will do the trick for some.",
                    "label": 0
                },
                {
                    "sent": "OK, so this isn't avoid beautiful algorithm, you know you just define your compatibility scores CIJ using ship it off to whatever linear assignment solver you might have solved the problem and everything is correct.",
                    "label": 0
                },
                {
                    "sent": "So you would think well, can't we just go and use that for graph matching?",
                    "label": 0
                },
                {
                    "sent": "And in fact, I mean people have done that and for large graphs it's one of the better things you can do.",
                    "label": 0
                },
                {
                    "sent": "But",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "I mean, there's a couple of problems.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "Why would it fail, for instance here?",
                    "label": 0
                },
                {
                    "sent": "Let's say I've got this graph in the same graph again.",
                    "label": 0
                },
                {
                    "sent": "No attributes, just number them for convenience.",
                    "label": 0
                },
                {
                    "sent": "And essentially what I?",
                    "label": 0
                },
                {
                    "sent": "Will do is I will define a vertex compatibility function, right?",
                    "label": 0
                },
                {
                    "sent": "So I will ask well how compatible is this vertex with this one.",
                    "label": 0
                },
                {
                    "sent": "Now this graph has a lot of symmetry.",
                    "label": 0
                },
                {
                    "sent": "Anyway, rotate it.",
                    "label": 0
                },
                {
                    "sent": "It's going to be the same, right?",
                    "label": 0
                },
                {
                    "sent": "So there's no way I can design A compatibility function, which is anything else but constant.",
                    "label": 0
                },
                {
                    "sent": "Because you need two pairs of vertices that I compare.",
                    "label": 0
                },
                {
                    "sent": "They will always look the same, right?",
                    "label": 0
                },
                {
                    "sent": "Any pair of vertices?",
                    "label": 0
                },
                {
                    "sent": "I can, you know, include the neighborhood.",
                    "label": 0
                },
                {
                    "sent": "I can include its neighboring edges and so on and so on.",
                    "label": 0
                },
                {
                    "sent": "It will always be the same.",
                    "label": 0
                },
                {
                    "sent": "So if I just rely on the pairwise compatibility function and then solve the linear assignment problem, the match that I've shown you here might be a perfectly valid choice.",
                    "label": 0
                },
                {
                    "sent": "And what's wrong with this one?",
                    "label": 0
                },
                {
                    "sent": "Well, I've just ended up flipping the one in the two.",
                    "label": 0
                },
                {
                    "sent": "So you would just end up crossing those two edges over so it's not a really good graph match.",
                    "label": 0
                },
                {
                    "sent": "And I mean, of course you can imagine even worse situations, but.",
                    "label": 0
                },
                {
                    "sent": "What this tells you is that there is actually a lot of cases where linear assignment can fail.",
                    "label": 0
                },
                {
                    "sent": "And it can fail, and it must fail because it's only taking pairs of vertices into account.",
                    "label": 0
                },
                {
                    "sent": "It doesn't actually include.",
                    "label": 0
                },
                {
                    "sent": "Information such as, well, OK.",
                    "label": 0
                },
                {
                    "sent": "If I match this with that and that with that I need to have an edge between these two and maybe there must be an age.",
                    "label": 0
                },
                {
                    "sent": "If I make a match between 4:00 and 2:00 and 6:00 and 1:00, then of course there shouldn't be an age here.",
                    "label": 0
                },
                {
                    "sent": "So doing things like that are impossible with a linear assignment algorithm.",
                    "label": 1
                },
                {
                    "sent": "OK. Well, so you could say, well, that's good insight.",
                    "label": 0
                },
                {
                    "sent": "So now we know what the problem is.",
                    "label": 0
                },
                {
                    "sent": "And we can solve it, right?",
                    "label": 0
                },
                {
                    "sent": "This is what you would always do.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "Well, actually the other thing is.",
                    "label": 0
                },
                {
                    "sent": "Well, graph matching is known to be hard, so if the hunger map.",
                    "label": 1
                },
                {
                    "sent": "Marriage methods were a good algorithm which would always work then will we would immediately have a polynomial time algorithm.",
                    "label": 0
                },
                {
                    "sent": "So obviously something isn't quite right here.",
                    "label": 0
                },
                {
                    "sent": "So we expect that this simple trick must fail.",
                    "label": 1
                },
                {
                    "sent": "So why is it fine?",
                    "label": 0
                },
                {
                    "sent": "Well, I said the local features may not really be sufficient for matching what I can look out further hit, that's fine.",
                    "label": 1
                },
                {
                    "sent": "But I can actually get fairly long range dependencies through symmetries.",
                    "label": 0
                },
                {
                    "sent": "And this is actually in practice the key issue.",
                    "label": 0
                },
                {
                    "sent": "Maybe we used the wrong matching scores, DeAndre?",
                    "label": 1
                },
                {
                    "sent": "I cannot really do anything about those two, but I can fix this.",
                    "label": 1
                },
                {
                    "sent": "And what I'm going to argue is that actually this in practice is the really interesting part, and that one usually nature is kind to you and gives you problems that are not that degenerate.",
                    "label": 0
                },
                {
                    "sent": "OK. Now.",
                    "label": 1
                },
                {
                    "sent": "I said the problem fails if I have lots of general problems with lots of symmetry.",
                    "label": 0
                },
                {
                    "sent": "But if there are enough characteristic properties, enough characteristic features, welding, I can actually get away with it.",
                    "label": 0
                },
                {
                    "sent": "So maybe I can actually then go and engineer those Cyg those compatibility functions for specific problems.",
                    "label": 0
                },
                {
                    "sent": "And this will essentially be the algorithm how to learn graph matching and I'll show you how to do it.",
                    "label": 0
                },
                {
                    "sent": "But before we do so.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Let me quickly show you how you could do quadratic Simon.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "The key idea is use each compatibility features for the match.",
                    "label": 1
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "Why is it called quadratic?",
                    "label": 0
                },
                {
                    "sent": "Assignment will deliver some.",
                    "label": 0
                },
                {
                    "sent": "It had a linear term in the permutations.",
                    "label": 0
                },
                {
                    "sent": "Here the quadratic assignment has a quadratic term in the permutation matrices.",
                    "label": 0
                },
                {
                    "sent": "So you can already see where where trouble begins.",
                    "label": 0
                },
                {
                    "sent": "I mean, let's assume that we could really solve this thing efficiently, and whatever, we still have a big issue.",
                    "label": 0
                },
                {
                    "sent": "Let's say I have two graphs of size 100, so 10 to the two.",
                    "label": 0
                },
                {
                    "sent": "So here I've already got 10 to the four entries for this matrix CIJ.",
                    "label": 0
                },
                {
                    "sent": "Now if I need to look at pairwise compatibilities.",
                    "label": 0
                },
                {
                    "sent": "Then I don't get into the four, but until the eight entries.",
                    "label": 0
                },
                {
                    "sent": "That's something I can still kind of afford.",
                    "label": 0
                },
                {
                    "sent": "On a decent computer.",
                    "label": 0
                },
                {
                    "sent": "OK, now let's assume I don't want to match two graphs of size 100, but maybe size 1000?",
                    "label": 0
                },
                {
                    "sent": "I get 10 to the 12 entries.",
                    "label": 0
                },
                {
                    "sent": "OK, bad news at that time this algorithm will fail.",
                    "label": 0
                },
                {
                    "sent": "So even if I had an efficient algorithm, just storing the problem can already be a huge issue.",
                    "label": 0
                },
                {
                    "sent": "Computing this objective function can also be huge issue.",
                    "label": 0
                },
                {
                    "sent": "Well, OK, I've cheated a little bit, because quite often this PC is sparse.",
                    "label": 0
                },
                {
                    "sent": "So you don't really need.",
                    "label": 0
                },
                {
                    "sent": "That many injuries, but still.",
                    "label": 0
                },
                {
                    "sent": "I think you get the idea.",
                    "label": 0
                },
                {
                    "sent": "Now OK, basically what you would do is you would set up this problem where CIJ just describes the vertex features.",
                    "label": 1
                },
                {
                    "sent": "As a match an Qi Ju V describes the agreement between the potential ages.",
                    "label": 0
                },
                {
                    "sent": "If while vertex I and you are matched to gianvi.",
                    "label": 0
                },
                {
                    "sent": "Right?",
                    "label": 0
                },
                {
                    "sent": "And then you just check well, if there's an edge here you have.",
                    "label": 0
                },
                {
                    "sent": "You gotta have an edge there as well.",
                    "label": 0
                },
                {
                    "sent": "So define it this way.",
                    "label": 0
                },
                {
                    "sent": "And you can see that if I have twice the same graph, then, well, this function here will be 0.",
                    "label": 0
                },
                {
                    "sent": "If I find exact match.",
                    "label": 0
                },
                {
                    "sent": "And, well, not sure if it's larger than that, so you can clearly see that this will give you an exact matter if you wanted to have it travels.",
                    "label": 0
                },
                {
                    "sent": "This is NPR problem to solve.",
                    "label": 0
                },
                {
                    "sent": "So what to do?",
                    "label": 0
                },
                {
                    "sent": "And people have used lots of algorithms for that.",
                    "label": 0
                },
                {
                    "sent": "So for instance, one of the more famous ones is the graded assignment algorithm of Golden Ranga Rajan.",
                    "label": 0
                },
                {
                    "sent": "So this is really famous in computer vision.",
                    "label": 0
                },
                {
                    "sent": "At least.",
                    "label": 0
                },
                {
                    "sent": "It basically relies on the sync Warren method in the middle and what it does is act.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Something that you would say well for cheating, but I mean this is an area where people are really desperate.",
                    "label": 0
                },
                {
                    "sent": "People are really desperate and you see it from the fact that actually genetic algorithm and tabu search are some of the best methods to solve quadratic assignment.",
                    "label": 0
                },
                {
                    "sent": "Not that I have particular versions against them, but this is usually indication that people are really hopeless.",
                    "label": 0
                },
                {
                    "sent": "Or Ant colony system, or anything else that's really desperately you Ristic.",
                    "label": 0
                },
                {
                    "sent": "People use those things for quadratic assignment.",
                    "label": 0
                },
                {
                    "sent": "OK, so in other words, by saying, well, hey, I've reduced the problem to quadratic assignment problem and not really getting anything I've just said well, hey, this problem is so hard even if I get enough statistics and so on, I will probably not be able to get a fairly good solution.",
                    "label": 0
                },
                {
                    "sent": "So graduated assignment.",
                    "label": 0
                },
                {
                    "sent": "Well, it works.",
                    "label": 0
                },
                {
                    "sent": "Essentially I'm sweeping alot of things under the rug.",
                    "label": 0
                },
                {
                    "sent": "You just perform a first order Taylor approximation of the quadratic assignment problem.",
                    "label": 1
                },
                {
                    "sent": "So you take a derivative of the quadratic trend with respect to the permutation.",
                    "label": 0
                },
                {
                    "sent": "And then you solve the 1st order approximation, such as the linearisation.",
                    "label": 0
                },
                {
                    "sent": "And you take a small step in that direction.",
                    "label": 0
                },
                {
                    "sent": "And you keep on reiterating.",
                    "label": 0
                },
                {
                    "sent": "Actually, the greatest assignment does a few other hacky things on the way, but that's basically what it does.",
                    "label": 1
                },
                {
                    "sent": "You can find semidefinite relaxations.",
                    "label": 0
                },
                {
                    "sent": "Is it you get a big problem?",
                    "label": 0
                },
                {
                    "sent": "Because yes, you get order of four.",
                    "label": 0
                },
                {
                    "sent": "In terms of storage and what's worse, order of six in terms of computation.",
                    "label": 0
                },
                {
                    "sent": "So again, semidefinite programs, usually people, unless you're exactly called Boyden Funderburg, it don't really solve problems of size larger than 1000.",
                    "label": 0
                },
                {
                    "sent": "Most people will stop it.",
                    "label": 0
                },
                {
                    "sent": "Anything between 100 and maybe 500.",
                    "label": 0
                },
                {
                    "sent": "Just because it's very hard.",
                    "label": 0
                },
                {
                    "sent": "And if you want to go beyond that, you need to do serious extra work.",
                    "label": 1
                },
                {
                    "sent": "So in practice, if you use quadratic assignment, you can only really solve problems of size, maybe less than 100 nodes, so some of the better benchmark collections.",
                    "label": 0
                },
                {
                    "sent": "I think they have like 3040 nodes, and that's where people are able to solve things optimally, so it's a serious problem.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "In other words, quadratic assignment would be really nice if it were solvable, but since it isn't, we probably don't want to go there.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So what went wrong?",
                    "label": 0
                },
                {
                    "sent": "Well, what went wrong is that we actually spent a lot of time now discussing how we're going to solve a given problem.",
                    "label": 0
                },
                {
                    "sent": "But not much time.",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "On how we actually got to the problem.",
                    "label": 0
                },
                {
                    "sent": "The exact graph matching as I've just discussed is probably going to be too expensive.",
                    "label": 1
                },
                {
                    "sent": "And in quite many cases, well, you don't have really inexact graph matching problem.",
                    "label": 0
                },
                {
                    "sent": "In the first case.",
                    "label": 0
                },
                {
                    "sent": "For instance, if I want to match images that simply do look different, I just want to have a reasonably good match.",
                    "label": 0
                },
                {
                    "sent": "So you might just actually.",
                    "label": 0
                },
                {
                    "sent": "Be happy with any assignment.",
                    "label": 0
                },
                {
                    "sent": "And you would be happy with that if your matching scores were actually any good.",
                    "label": 0
                },
                {
                    "sent": "So the key insight is will use the data to learn the matching scores.",
                    "label": 1
                },
                {
                    "sent": "So let me give you an example.",
                    "label": 0
                },
                {
                    "sent": "You want to track people.",
                    "label": 0
                },
                {
                    "sent": "So you need to match them up and you've got the whole bunch of surveillance cameras installed on an airport.",
                    "label": 0
                },
                {
                    "sent": "And those cameras are not always installed in the location where there's based illumination, right?",
                    "label": 0
                },
                {
                    "sent": "And they're from different manufacturers and all that.",
                    "label": 0
                },
                {
                    "sent": "So it's not that you will actually be dealing with general purpose images.",
                    "label": 0
                },
                {
                    "sent": "They will be very specific images with very specific degeneration.",
                    "label": 0
                },
                {
                    "sent": "Very specific elimination problems, and so on and so on.",
                    "label": 0
                },
                {
                    "sent": "So you should be able to take advantage of this and design A better algorithm for this specific problem as opposed to solving a more general one.",
                    "label": 0
                },
                {
                    "sent": "But of course you want to have a procedure which, given this situation, is generally enough to generate an answer for you recently automatically.",
                    "label": 0
                },
                {
                    "sent": "So we want to automate the customization.",
                    "label": 0
                },
                {
                    "sent": "So what this means is really we want to get problem dependent scores CIJ and optimize over them.",
                    "label": 1
                },
                {
                    "sent": "And we do that over a training set.",
                    "label": 0
                },
                {
                    "sent": "Once we have it, or we will get better results.",
                    "label": 0
                },
                {
                    "sent": "That's the key idea.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So learning graph matching.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So I mean, it's easy to write out the optimization problem.",
                    "label": 1
                },
                {
                    "sent": "So, but I want to minimize over those compatibility scores.",
                    "label": 0
                },
                {
                    "sent": "See.",
                    "label": 0
                },
                {
                    "sent": "Now some discrepancy function and I assume I've got several pairs of graphs and I'm just going to make my life easier where I'm assuming I've got twice the same graph and it's just there for know that the best matches the identity permutation.",
                    "label": 0
                },
                {
                    "sent": "And so Delta is some discrepancy function which tells me how bad the match.",
                    "label": 1
                },
                {
                    "sent": "I suggest it is in comparison to the identity OK. At this point I is just the solution of my linear assignment problem.",
                    "label": 0
                },
                {
                    "sent": "I'm dropping all those constraints that it's doubly stochastic and what have you just to keep notation slightly less cluttered.",
                    "label": 0
                },
                {
                    "sent": "So I mean, this is a formal definition, high can write out the problem, and it doesn't really help me very much right?",
                    "label": 1
                },
                {
                    "sent": "All I'm saying is find me some compatibility score such that for the graphs at hand it matches them up really well.",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "So now the first thing we might want to.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Do is look at the loss function.",
                    "label": 0
                },
                {
                    "sent": "And the one that I'm suggesting is I simply count how many of the vertices I get wrong.",
                    "label": 0
                },
                {
                    "sent": "Well, it's not too unreasonable.",
                    "label": 0
                },
                {
                    "sent": "The nice thing is that in this case I can actually write out this function as.",
                    "label": 0
                },
                {
                    "sent": "Well, I'm just assuming I've got in vertices and then Pi transpose Pisin stab Lish stochastic cereal.",
                    "label": 0
                },
                {
                    "sent": "Once it's Justin, same goes for \u03c0 prime.",
                    "label": 0
                },
                {
                    "sent": "So I just get 2 N minus transport trace of Pi transposed pipeline.",
                    "label": 0
                },
                {
                    "sent": "And in this case I will just get the one there whenever I match two vertices.",
                    "label": 0
                },
                {
                    "sent": "Otherwise I'll get to 0.",
                    "label": 0
                },
                {
                    "sent": "Obviously I could get other ones, but what this also tells you is that actually the exact graph matching.",
                    "label": 0
                },
                {
                    "sent": "If I knew the answer would be just a linear assignment problem, namely optimizing the Pi such that such that it's as close as possible to pipeline.",
                    "label": 0
                },
                {
                    "sent": "So minimize this expression here.",
                    "label": 0
                },
                {
                    "sent": "OK. Now, trouble is that this.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Is actually fairly ugly.",
                    "label": 0
                },
                {
                    "sent": "It has three bath features.",
                    "label": 0
                },
                {
                    "sent": "First of all, it's nonconvex, actually even worse, it's piecewise constant, because I mean if I change my function C, If I change it just a little bit, I will typically not expect that my matches will change because there's only a countable number of them.",
                    "label": 0
                },
                {
                    "sent": "So therefore it must be large currents classes of seas.",
                    "label": 0
                },
                {
                    "sent": "So that's really bad.",
                    "label": 0
                },
                {
                    "sent": "And Furthermore, I might actually just end up overfitting.",
                    "label": 0
                },
                {
                    "sent": "So far I haven't really restricted this Class C in any specific way.",
                    "label": 0
                },
                {
                    "sent": "But the good thing is that once you actually write out this problem in this way.",
                    "label": 0
                },
                {
                    "sent": "It's really easy.",
                    "label": 0
                },
                {
                    "sent": "All you do is you just take for instance the excellent paper of Ben Tasker.",
                    "label": 0
                },
                {
                    "sent": "Or then also that the Max margin Markov paper.",
                    "label": 0
                },
                {
                    "sent": "Or then you take the truck on to reduce the tile paper which uses slightly different margin rescaling and have a few more details in it, but essentially are very similar papers you take any of those two and you just follow the recipe.",
                    "label": 0
                },
                {
                    "sent": "Basically, once you've set up the problem in this way, finding the answer is straightforward.",
                    "label": 0
                },
                {
                    "sent": "And I'll just tell you now how to crank the hand.",
                    "label": 0
                },
                {
                    "sent": "The benefit for you is, besides, well, you might see that.",
                    "label": 0
                },
                {
                    "sent": "Well, he is a nice matching algorithm.",
                    "label": 0
                },
                {
                    "sent": "You will see how to solve this type of problems where you have a discrete problem with some constraints here.",
                    "label": 0
                },
                {
                    "sent": "In a fairly automatic way.",
                    "label": 0
                },
                {
                    "sent": "So as a matter of fact, two days ago to be as talked about, a very related.",
                    "label": 0
                },
                {
                    "sent": "Setting where we had graphs and we wanted to perform approximate inference and we were talking about message passing and so on.",
                    "label": 0
                },
                {
                    "sent": "So this is just a different optimization problem, but it's very much the same flow.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So how do we deal with it?",
                    "label": 0
                },
                {
                    "sent": "The first thing that I'm going to do is that's not strictly necessary.",
                    "label": 0
                },
                {
                    "sent": "This is just for convenience here of notational presentation.",
                    "label": 0
                },
                {
                    "sent": "Just going to assume that this compatibility function.",
                    "label": 0
                },
                {
                    "sent": "See if we, you and Vijay is just some file VU and Vijay in approach with W. So I'm mapping into some feature space in their focus W so strictly necessary.",
                    "label": 0
                },
                {
                    "sent": "I'm just assuming that actually this function here is a member of some bannock space.",
                    "label": 0
                },
                {
                    "sent": "That's really what I need, but this makes things look a little bit prettier, so.",
                    "label": 0
                },
                {
                    "sent": "I'm just going to use this.",
                    "label": 0
                },
                {
                    "sent": "Then the next thing I'm going to do is just also stand with handle cranking, 'cause I mean this is the function I want to estimate.",
                    "label": 0
                },
                {
                    "sent": "So now we've mapped it into that case.",
                    "label": 0
                },
                {
                    "sent": "Actually Hilbert space.",
                    "label": 0
                },
                {
                    "sent": "Now the next thing that I'm going to do is I'm going to assume that small W somehow correspond to smooth function C. And I'm going to minimize the regressed risk functional here.",
                    "label": 1
                },
                {
                    "sent": "If you actually think about it, this doesn't make much sense just yet.",
                    "label": 0
                },
                {
                    "sent": "Who's got an idea why what I wrote here doesn't make so much sense yet?",
                    "label": 0
                },
                {
                    "sent": "Well, have a look at those seas.",
                    "label": 0
                },
                {
                    "sent": "Let's say I rescaled W by a factor of 2.",
                    "label": 0
                },
                {
                    "sent": "Will this change the solution of my linear assignment problem?",
                    "label": 0
                },
                {
                    "sent": "No, it won't.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Remember.",
                    "label": 0
                },
                {
                    "sent": "That's the problem.",
                    "label": 0
                },
                {
                    "sent": "So if I multiply the seas by any constant factor, it's not going to really make any difference.",
                    "label": 0
                },
                {
                    "sent": "So in a way.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "What I've done here doesn't make much sense just yet.",
                    "label": 0
                },
                {
                    "sent": "The reason is because there is no scale correspondence between the loss here and the regularizer there yet.",
                    "label": 0
                },
                {
                    "sent": "We'll get to that scale correspondence in the moment, so treat this more as a symbolic representation of what it's meant to be, rather than.",
                    "label": 0
                },
                {
                    "sent": "That you would actually try and minimize this so this only will start making sense as soon as we replace this by an upper bound which actually takes W into account.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Now.",
                    "label": 0
                },
                {
                    "sent": "This is the really, really wonderful trick of structured estimation.",
                    "label": 1
                },
                {
                    "sent": "So if you have a problem of that type.",
                    "label": 0
                },
                {
                    "sent": "You've got some loss.",
                    "label": 0
                },
                {
                    "sent": "Delta of .1, for instance.",
                    "label": 1
                },
                {
                    "sent": "Subject 2 will wear despise given as the argument of some problem.",
                    "label": 0
                },
                {
                    "sent": "Then I can find a convex upper bound on this simply through the variables I work, so is greater equal in.",
                    "label": 0
                },
                {
                    "sent": "In this case, explicitly written out 1 -- \u03c0 transposed C. So this is.",
                    "label": 0
                },
                {
                    "sent": "This is, I'm assuming that this is the optimal solution.",
                    "label": 0
                },
                {
                    "sent": "Pi prime is.",
                    "label": 1
                },
                {
                    "sent": "Well, any other one?",
                    "label": 0
                },
                {
                    "sent": "Plus Delta of \u03c0 prime and one for all pipeline.",
                    "label": 0
                },
                {
                    "sent": "So this looks a little bit ad hoc.",
                    "label": 0
                },
                {
                    "sent": "But it's actually fairly straightforward principle.",
                    "label": 0
                },
                {
                    "sent": "Now, how can we show that this is an upper bound on this expression here?",
                    "label": 1
                },
                {
                    "sent": "Well, very easily, well just plug in \u03c0 prime equals \u03c0 OK, Now since 4 Pi, this is the arc mean of Pi transpose C. This term here is going to be greater equal in 0 right?",
                    "label": 0
                },
                {
                    "sent": "So that an here we already have Delta of .1 in.",
                    "label": 1
                },
                {
                    "sent": "Now I have size greater equal than something positive, plus the term that I actually want to bound.",
                    "label": 0
                },
                {
                    "sent": "So therefore clearly the upper bound holds.",
                    "label": 0
                },
                {
                    "sent": "So it's really easy to show this.",
                    "label": 0
                },
                {
                    "sent": "Sometimes people re scale the margin here.",
                    "label": 0
                },
                {
                    "sent": "And that actually tends to work much better if you can afford it.",
                    "label": 0
                },
                {
                    "sent": "The trouble is, here we cannot really afford this effort to re scale.",
                    "label": 0
                },
                {
                    "sent": "So this thing actually plays the role of a margin.",
                    "label": 0
                },
                {
                    "sent": "I need to explain a little bit why.",
                    "label": 0
                },
                {
                    "sent": "So this is a discrepancy between the correct score.",
                    "label": 0
                },
                {
                    "sent": "And well, for any other permutation \u03c0 prime.",
                    "label": 0
                },
                {
                    "sent": "Now, if this quantity here is positive, it means I'm in trouble.",
                    "label": 0
                },
                {
                    "sent": "Was if this quantity is positive then Pi prime will be a better minimizer of Pi transposed C than the one is the identity permutation.",
                    "label": 0
                },
                {
                    "sent": "OK. Now what I'm actually doing is I'm going to add to this the loss, namely, basically how much it costs me by using Pi Prime instead of the 1 two.",
                    "label": 0
                },
                {
                    "sent": "Well match.",
                    "label": 0
                },
                {
                    "sent": "So what this does is it emphasizes.",
                    "label": 0
                },
                {
                    "sent": "Good large margins.",
                    "label": 0
                },
                {
                    "sent": "For permutations Pi prime, which would correspond to really disastrous matches.",
                    "label": 0
                },
                {
                    "sent": "So that's a multi class large margin principle.",
                    "label": 0
                },
                {
                    "sent": "I guess most of you when you drive a car actually obey the large margin principle.",
                    "label": 0
                },
                {
                    "sent": "So for instance, if you drive along the highway and it's really really smooth on the side, well, maybe you're a little bit less careful and maybe stray little bit to the side right?",
                    "label": 0
                },
                {
                    "sent": "At least I sometimes do that if I'm lazy.",
                    "label": 0
                },
                {
                    "sent": "On the other hand, if I drive a mountainous road and there is a big gap on the side and there's a huge danger that it might just fall off, I will try my darndest to actually stay away from that.",
                    "label": 0
                },
                {
                    "sent": "So I will try to keep as larger margin as possible between this gap, which would be disastrous.",
                    "label": 0
                },
                {
                    "sent": "And where I am.",
                    "label": 0
                },
                {
                    "sent": "And this is really just doing the same thing in equations here.",
                    "label": 1
                },
                {
                    "sent": "Anyway, this is the key slide of the entire presentation.",
                    "label": 0
                },
                {
                    "sent": "In terms of the optimization problem.",
                    "label": 0
                },
                {
                    "sent": "Don't worry, there's lots of pictures here.",
                    "label": 0
                },
                {
                    "sent": "So we will get through in time, so if you do that well, you can write up what our optimization problem.",
                    "label": 0
                },
                {
                    "sent": "So remember before that here we had those losses for matching.",
                    "label": 0
                },
                {
                    "sent": "Well some graphs in maybe a sub optimal way.",
                    "label": 0
                },
                {
                    "sent": "Here we just replace it by those upper bounds.",
                    "label": 1
                },
                {
                    "sent": "It's clear to see that this is a convex name.",
                    "label": 0
                },
                {
                    "sent": "It's a linear constraint in \u03c0 prime and inks I, because I mean this is really just Pi prime transposed one.",
                    "label": 0
                },
                {
                    "sent": "And so I get this constraint here.",
                    "label": 0
                },
                {
                    "sent": "OK, so now I've got a convex optimization problem.",
                    "label": 0
                },
                {
                    "sent": "And the other thing that's happened is I've really made the scale of the Seas matter.",
                    "label": 0
                },
                {
                    "sent": "OK, so this is basically what fixes the reason why I used the norm of W squared as a regularizer.",
                    "label": 0
                },
                {
                    "sent": "So now if I scale C to be very small, all the sudden, the bad large margin solutions are going to take over, so this prevents me from having just a scale that goes to zero, and so I will.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Actually have an effective regularizer.",
                    "label": 0
                },
                {
                    "sent": "OK. Now we've got a convex problem.",
                    "label": 1
                },
                {
                    "sent": "Great, but we paid for it very dearly.",
                    "label": 0
                },
                {
                    "sent": "We've got an exponential number of constraints, so we need to find the most violated constraint efficiently.",
                    "label": 1
                },
                {
                    "sent": "But Fortunately that again is solved by linear assignment problem.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So if you look at this line here and you ask, what's the pie?",
                    "label": 0
                },
                {
                    "sent": "Which maximizes the right inside.",
                    "label": 0
                },
                {
                    "sent": "Well, that's just a linear assignment.",
                    "label": 0
                },
                {
                    "sent": "Problem is, it's linear imply.",
                    "label": 0
                }
            ]
        },
        "clip_29": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "And what you do is you just find the worst permutation.",
                    "label": 0
                },
                {
                    "sent": "And then you.",
                    "label": 0
                },
                {
                    "sent": "Well, add this to a subset of constraints you minimize.",
                    "label": 1
                },
                {
                    "sent": "For those constraints you find the next verse constraint into keep on iterating.",
                    "label": 0
                },
                {
                    "sent": "I.",
                    "label": 0
                },
                {
                    "sent": "Now what's really happening here?",
                    "label": 1
                },
                {
                    "sent": "So this is the maximization problem that we need that we need to solve.",
                    "label": 0
                },
                {
                    "sent": "So here's our compatibility score.",
                    "label": 1
                },
                {
                    "sent": "So that's supposed to be a J obvious.",
                    "label": 0
                },
                {
                    "sent": "Obviously not, sorry.",
                    "label": 0
                },
                {
                    "sent": "Yeah, that's just the function over all of the graph I and graph I.",
                    "label": 0
                },
                {
                    "sent": "So this.",
                    "label": 0
                },
                {
                    "sent": "Has small entries whenever the corresponding vertices are a good match and large entries if their bath match, but I'm trying to make it deliberately worse for adding.",
                    "label": 0
                },
                {
                    "sent": "Something on the main diagonal.",
                    "label": 0
                },
                {
                    "sent": "Namely, corresponding those matches that I should actually be making right?",
                    "label": 0
                },
                {
                    "sent": "So what I want to ensure is that the incompatibilities, so the off diagonal terms are significantly larger than one.",
                    "label": 0
                },
                {
                    "sent": "That's really what I'm effectively doing.",
                    "label": 0
                },
                {
                    "sent": "And this gives me a large margin solution.",
                    "label": 0
                },
                {
                    "sent": "And then solving it.",
                    "label": 0
                },
                {
                    "sent": "For instance, you can plug into SVM struct so you can use one of our own solvers.",
                    "label": 0
                },
                {
                    "sent": "This is basically a fundamental optimization problem.",
                    "label": 0
                }
            ]
        },
        "clip_30": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Experiments.",
                    "label": 0
                },
                {
                    "sent": "And I'll try to pull up the slides afterwards.",
                    "label": 0
                },
                {
                    "sent": "I, and I mean probably they will display quite nice.",
                    "label": 0
                }
            ]
        },
        "clip_31": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "In a different program.",
                    "label": 0
                },
                {
                    "sent": "Yeah, I don't know why those two didn't but.",
                    "label": 0
                },
                {
                    "sent": "So I'll show you the pictures in a moment, but basically what you can see is the following thing.",
                    "label": 0
                },
                {
                    "sent": "So we what we did is we just looked at different training and test set size.",
                    "label": 0
                },
                {
                    "sent": "An error is.",
                    "label": 0
                },
                {
                    "sent": "Well, basically what you.",
                    "label": 0
                },
                {
                    "sent": "Want to minimize?",
                    "label": 0
                },
                {
                    "sent": "Obviously, and.",
                    "label": 0
                },
                {
                    "sent": "Then you just look at how well the algorithm performs.",
                    "label": 0
                },
                {
                    "sent": "So rate is us.",
                    "label": 0
                },
                {
                    "sent": "That's basically using linear assignment with learning.",
                    "label": 0
                },
                {
                    "sent": "So I need to explain what's happening here.",
                    "label": 0
                },
                {
                    "sent": "The black functions are the black box, so this is basically how many training intested observations you have.",
                    "label": 0
                },
                {
                    "sent": "And if you want to match images, getting building a training set is actually fairly painful because you need to have a poor soul to actually click some things.",
                    "label": 0
                },
                {
                    "sent": "So this is by using essentially off the shelf.",
                    "label": 0
                },
                {
                    "sent": "Known.",
                    "label": 0
                },
                {
                    "sent": "Matching functions from computer vision compatibility scores and this gives you a not so great.",
                    "label": 0
                },
                {
                    "sent": "Result.",
                    "label": 0
                },
                {
                    "sent": "This is the so-called graduated assignment algorithm.",
                    "label": 0
                },
                {
                    "sent": "And it doesn't work terribly much better.",
                    "label": 0
                },
                {
                    "sent": "It's a little bit better than if you have lots of training data.",
                    "label": 0
                },
                {
                    "sent": "It actually helps quite a bit, but not too much.",
                    "label": 0
                },
                {
                    "sent": "This these different normalizations are simply.",
                    "label": 0
                },
                {
                    "sent": "I mean, you need to choose how much longer you let your algorithm run.",
                    "label": 0
                },
                {
                    "sent": "And of course, if you let it run.",
                    "label": 0
                },
                {
                    "sent": "This is very quadratic assignment.",
                    "label": 0
                },
                {
                    "sent": "If you let it run for a very long time, you get better scores, so those yellow bars are pretty good.",
                    "label": 0
                },
                {
                    "sent": "Now, if you use linear assignment and learning well if you don't have much data to learn, you can see it's not so great.",
                    "label": 0
                },
                {
                    "sent": "But as you get more and more data it actually starts beating the quadratic assignment algorithm, right?",
                    "label": 0
                },
                {
                    "sent": "So around here.",
                    "label": 0
                },
                {
                    "sent": "It starts catching up with the quadratic assignment.",
                    "label": 0
                },
                {
                    "sent": "If you really spend a long time.",
                    "label": 0
                },
                {
                    "sent": "Now the other thing is you can actually learn those quadratic assignment those compatibility functions as well.",
                    "label": 0
                },
                {
                    "sent": "So that's what we call GA learning.",
                    "label": 0
                },
                {
                    "sent": "So graded assignment, learning, and it's basically you just don't learn only the linear but the quadratic term and that works best as you would expect it.",
                    "label": 0
                },
                {
                    "sent": "So that's the last magenta bar here.",
                    "label": 0
                }
            ]
        },
        "clip_32": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Well, why is this important?",
                    "label": 0
                },
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "This picture might explain a little bit.",
                    "label": 0
                },
                {
                    "sent": "This is a plot of the error.",
                    "label": 0
                },
                {
                    "sent": "That's the amount of time it takes.",
                    "label": 0
                },
                {
                    "sent": "Log scale both locks down here.",
                    "label": 0
                },
                {
                    "sent": "Now of course you want to have a small error, right?",
                    "label": 0
                },
                {
                    "sent": "Now if you use.",
                    "label": 0
                },
                {
                    "sent": "Great assignment and you spend a lot of time.",
                    "label": 0
                },
                {
                    "sent": "You will get a fairly low error.",
                    "label": 0
                },
                {
                    "sent": "But you can also use linear assignment and learned up compatibility scores.",
                    "label": 0
                },
                {
                    "sent": "And you say 4 orders of magnitude in the runtime and you get the same performance.",
                    "label": 0
                },
                {
                    "sent": "So in other words, now all the sudden you can use that for decently sized graphs.",
                    "label": 0
                },
                {
                    "sent": "'cause I mean this gap is only going to get worse as you get larger and larger problems.",
                    "label": 0
                },
                {
                    "sent": "The other thing that you see is, well, if you use graduated assignment and learning.",
                    "label": 0
                },
                {
                    "sent": "Then you can improve things a little bit, but it's not quite as dramatic as this difference here.",
                    "label": 0
                }
            ]
        },
        "clip_33": {
            "is_summarization_sample": false,
            "summarization_data": []
        },
        "clip_34": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "OK, now.",
                    "label": 0
                },
                {
                    "sent": "Well, here's a question for you.",
                    "label": 0
                },
                {
                    "sent": "So you know it's more than time, so maybe marriages aren't quite what they used to be and so.",
                    "label": 0
                },
                {
                    "sent": "We can actually look at something that's not called exactly Hungarian marriage, but then you could call the matching.",
                    "label": 0
                },
                {
                    "sent": "So the matching means that every Hungarian man is supposed to have an affair with the Hungarian women and vice versa.",
                    "label": 0
                },
                {
                    "sent": "Every Hungarian woman is supposed to have an affair with exactly the hunger in Maine.",
                    "label": 0
                },
                {
                    "sent": "OK, and they're still compatibility scores and all that, but it's just that it's not a monogomous relationship anymore.",
                    "label": 0
                },
                {
                    "sent": "It's very easy to see that.",
                    "label": 0
                },
                {
                    "sent": "Also, for that setting you can use the same algorithm and essentially get the same optimization properties in all that, just to work it through.",
                    "label": 0
                },
                {
                    "sent": "The reason why I said it's easy to see is becausw.",
                    "label": 0
                },
                {
                    "sent": "You get the same constraint matrix, so this totally on your modular thing.",
                    "label": 0
                },
                {
                    "sent": "Just that now, well, the polytope is slightly bigger and you will still get integral solutions.",
                    "label": 0
                },
                {
                    "sent": "Now the question that I have for you is do you know of problems?",
                    "label": 0
                },
                {
                    "sent": "Where?",
                    "label": 0
                },
                {
                    "sent": "A DI match rather than an exact match is something that you would want.",
                    "label": 0
                },
                {
                    "sent": "If you have such a problem, we can help you.",
                    "label": 0
                },
                {
                    "sent": "But so far I talked to a few people and they.",
                    "label": 0
                }
            ]
        },
        "clip_35": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Didn't know.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "Would be really nice.",
                    "label": 0
                },
                {
                    "sent": "Well maybe it's not the million dollar question, but would be really nice if somebody said, hey I've got a problem that this solves.",
                    "label": 1
                }
            ]
        },
        "clip_36": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "'cause we can solve it?",
                    "label": 1
                },
                {
                    "sent": "Yeah, you can also do other things with this.",
                    "label": 0
                },
                {
                    "sent": "You can essentially use it for ranking or collaborative ranking, so in this case you're not really marrying two sets with each other, you're marrying answers with positions that you can return.",
                    "label": 1
                },
                {
                    "sent": "So for instance, if you say an Internet retailer like Netflix and you want to sell movies to users.",
                    "label": 0
                },
                {
                    "sent": "And the users going the right there movies.",
                    "label": 0
                },
                {
                    "sent": "And I mean most of you probably heard of the Netflix contest and the retailer then wants to suggest some more movies which they might like or say you go to.",
                    "label": 1
                },
                {
                    "sent": "Amazon and Amazon will suggest some other books that you might want to buy.",
                    "label": 0
                },
                {
                    "sent": "Now, well, if you think about it, the conditions of the Netflix contests are actually pretty stupid.",
                    "label": 0
                },
                {
                    "sent": "Because what it says is do well on estimating for all other movies that I'm that I'm going to show you how well you're going to like them.",
                    "label": 0
                },
                {
                    "sent": "That's stupid for the following reason.",
                    "label": 0
                },
                {
                    "sent": "Well, at the end of the day, I don't really care about the system, knowing that I'm not going to like movies.",
                    "label": 0
                },
                {
                    "sent": "X1 ZI would much rather that it suggests to me movies 8 Regency.",
                    "label": 0
                },
                {
                    "sent": "So for instance, imagine the funny situation.",
                    "label": 0
                },
                {
                    "sent": "We log on Amazon.",
                    "label": 0
                },
                {
                    "sent": "And it will say.",
                    "label": 0
                },
                {
                    "sent": "And by the way, we know you're not going to like those those books.",
                    "label": 0
                },
                {
                    "sent": "Yeah, well you might be amused, but nothing else really.",
                    "label": 0
                },
                {
                    "sent": "So in other words, this error criterion being uniform or old movies is really a bad idea.",
                    "label": 1
                },
                {
                    "sent": "And the other thing is, you can really only recommend a small number of movies or books or whatever.",
                    "label": 0
                },
                {
                    "sent": "Maybe 5, maybe 10 depending on your web page layout.",
                    "label": 0
                },
                {
                    "sent": "That's about it.",
                    "label": 0
                },
                {
                    "sent": "Web page ranking is the same issue.",
                    "label": 0
                },
                {
                    "sent": "So you really want to get a linear assignment problem.",
                    "label": 0
                },
                {
                    "sent": "It's basically or sorting a ranking problem.",
                    "label": 0
                },
                {
                    "sent": "In this case suggest new objects.",
                    "label": 0
                },
                {
                    "sent": "And it turns out you can actually use the same algorithm for essentially doing this.",
                    "label": 0
                },
                {
                    "sent": "As a matter of fact, we started with this first and then.",
                    "label": 0
                }
            ]
        },
        "clip_37": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "We realized it actually works for graph matching.",
                    "label": 0
                }
            ]
        },
        "clip_38": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So I'm going to skip over the last slide because for kittelsen we've got one minute left and we're done.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "We looked at a few applications, talked about some existing algorithms.",
                    "label": 0
                },
                {
                    "sent": "This was essentially really the key point to realize that well.",
                    "label": 0
                },
                {
                    "sent": "We should work smarter rather than harder.",
                    "label": 0
                },
                {
                    "sent": "And then, once you've asked the right questions, the rest is really handle cranking.",
                    "label": 0
                },
                {
                    "sent": "And it does work.",
                    "label": 0
                },
                {
                    "sent": "OK, so unfortunately I couldn't show any of the computer vision pictures.",
                    "label": 0
                },
                {
                    "sent": "I can show it to you in the break.",
                    "label": 0
                },
                {
                    "sent": "Any questions?",
                    "label": 0
                }
            ]
        }
    }
}