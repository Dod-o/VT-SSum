{
    "id": "var2xmfhpunnmmpfwuxpqqelrafesy2p",
    "title": "Neighbor Query Friendly Compression of Social Networks",
    "info": {
        "author": [
            "Hossein Maserrat, School of Computing Science, Simon Fraser University"
        ],
        "published": "Oct. 1, 2010",
        "recorded": "July 2010",
        "category": [
            "Top->Computer Science->Data Mining"
        ]
    },
    "url": "http://videolectures.net/kdd2010_maserrat_nqfcsn/",
    "segmentation": [
        [
            "So my name is Hussein Maserati and I'm a PhD student.",
            "This is a joint work with Jumpei.",
            "And my talk is on compression of social networks.",
            "So."
        ],
        [
            "First time.",
            "We're going to talk a little bit about the background.",
            "Then I'm going to introduce the framework and the idea behind it.",
            "Then I formalize the.",
            "The idea, and finally, I'll conclude with the experiments experimental results.",
            "Yeah, it should go away.",
            "So motivation the real world networks are huge and we need."
        ],
        [
            "In most in many cases we need the company to compress them to fit in the memory.",
            "Also, I'd like to mention that in the distributed computing platform also the competition is useful because we can we can process a larger portion of your offer computer and therefore it uses the communication cost, which is the main barrier in the.",
            "In their distributed computing, and also with respect to the queries, we like to be able to.",
            "Answer As many as.",
            "Many as different types of query on the compass graph.",
            "So."
        ],
        [
            "So this is the best that I could do for to motivate you.",
            "And if you are not motivated yet, I can do a little bit of cheating.",
            "And yeah."
        ],
        [
            "So.",
            "Existing approaches.",
            "This problem is very studied on the vector of.",
            "In particular if the framework that is introduced by boldly and ignore compresses.",
            "Yeah, sorry.",
            "The the.",
            "The framework that is introduced by Baldeon vikna compresses the web graphs down to almost 2 bit spirit, which is quite interesting, surprising.",
            "And this domain observation in the in there for work is that a large percentage of links are intra domain.",
            "So if you sort the web pages by the URL, then for any edge for any node, most of the out links of that node tends to be closed very close to each other.",
            "And then for any node, if you look at the list of list of out links of the node and if you look at the gaps between these out links.",
            "They would be very small.",
            "And then you can use a family of code which is designed to encode the small numbers efficiently.",
            "To get the compilation.",
            "But this framework is despair."
        ],
        [
            "Work is quite well on web graphs.",
            "It is.",
            "It works well on web graph it when it comes to the other types of social network like friendship networks then.",
            "Is not effective anymore, so in particular the work of charity at all.",
            "In last security, use the same framework instead, only the only difference is that because there is no natural ordering ordering on the nodes of the graph, they used single ordering to basically.",
            "But they use a single ordering to arrange the notes.",
            "And but but this doesn't work well on the financial network.",
            "It's almost.",
            "It's something like between 10 up to 15 bits per edge.",
            "The performance of this.",
            "So this suggests that this motivates us to look for other types of framework.",
            "For.",
            "For other real world networks.",
            "Next I'm trying I'm."
        ],
        [
            "I'm talking about two observation and.",
            "Try to motivate our framework and explain the idea behind offering.",
            "The first observation is that if you look at the cluster of random graphs on North vertices is where each possible edges included the graph with probability of half.",
            "The best that you can do for this class of graphs is to use N to the power of 2 bits.",
            "Using an entropy based argument you can prove that basically.",
            "And this means that this means.",
            "Check and see Matrix is the best representation for this class of graphs, so the message is that, roughly speaking, for dense random graph.",
            "This is the best judge can do."
        ],
        [
            "We can have the same observation for RJC list representation.",
            "Again, there is another class of random graph on N vertices where each each node has only one outgoing edge, and.",
            "The definition of that age is picked uniformly at random for this class offers, you have to use N log N bits and therefore the."
        ],
        [
            "I think it is optimal so for a sparse graph you cannot do better than education.",
            "No, what we do know about the social network for social networks.",
            "We know that there are local agents and our globally sparse.",
            "So the question is, can we effectively somehow combine these two methods, adjectives, matrix and adjacency list to get a compression scheme out of it?",
            "So the big idea, the general idea here is for local edges you suggesting symmetric Sanford global connections?",
            "Just pointers, but this is very vague because we don't know what does that mean.",
            "Local edge or global?",
            "The next I'm trying to basically."
        ],
        [
            "Verify.",
            "This.",
            "So let's start with a very simple graph.",
            "We are given a graph and an arrangement of.",
            "The nodes are also given, so we know they get off and the arrangement of God.",
            "You can, you know you can see that all the edges here are very local in the sense that they are connecting two nodes next to each other.",
            "So if this is the case, then it's easy.",
            "We can use 2 bits for."
        ],
        [
            "We can use 2 bits further North.",
            "And represent the edges of the graph, right?",
            "So, given the knowledge that all the edges are local, we can have a very efficient a schema to represent the graph."
        ],
        [
            "But in real world there the real work graphs are more complicated.",
            "Let's consider another graph.",
            "In this graph, there is no arrangement of notes that in which all the edges are local, right?",
            "What we can do is that is that we can relax the requirement a little bit.",
            "We can let the nodes appear more than once.",
            "So with this relaxation we can come up always.",
            "We can come up with an arrangement of nodes that all the edges are local in that in that arrangement in Part 4."
        ],
        [
            "This sequence of nodes in this sequence of nodes are the edges are local, meaning that every edge.",
            "Somewhere connecting somewhere in this list connecting two nodes close to each other.",
            "Next to each other, right?",
            "So again, you can do the same."
        ],
        [
            "We can use 2 bits for.",
            "Position I have to stay here because the each position is not exactly or not.",
            "It is a copy of note.",
            "So.",
            "But in this case there is.",
            "It's not enough to just have a sequence of zeros and ones, we need more we need."
        ],
        [
            "We basically use pointers for each position.",
            "We use a pointer to to point to the next copy of the same node.",
            "So each node of the graph here is corresponding to a cycle.",
            "And you don't.",
            "You shouldn't be worried about the idea of the note.",
            "We can use the index of the first appearances of the note.",
            "As as its ID.",
            "And.",
            "And we can extend the idea by using more bits per position.",
            "If we use 2K bits per position, we are able to.",
            "Are able to encode more edges per position and as a result the length of the linearisation might be smaller.",
            "So.",
            "So now."
        ],
        [
            "I'm trying to formalize this idea.",
            "Given a sequence of notes, we define this distance between two nodes.",
            "The minimum distance among all pairs of appearances of those two.",
            "Not so, for example V2 and V3, they have distance 3, two and one.",
            "We simply just pick one as the distance of these two nodes."
        ],
        [
            "And using that we define NPC limitation of graph G as a sequences of verticies in which all the edges.",
            "All the endpoints of edges, basically for all edges, then the endpoint of that edge have distance less than or equal K."
        ],
        [
            "So.",
            "You already seen that you already see that this sequence is empty is an empty one linear relation of the girl?"
        ],
        [
            "So the original arrangement of the nodes is in that MP two linearizations because each edges each edge in the graph is connecting two nodes with distance at most 2.",
            "So, So what is this NPC in relation is good for?",
            "If you have an."
        ],
        [
            "Application isation of get off.",
            "Then we can use 2K bits.",
            "For each position in court, the whole graph and that would cover all the edges.",
            "Because we have this requirement of here.",
            "Right?",
            "So because for each position you have to keep two karabits colossal pointer.",
            "And there are those.",
            "There are those many number of.",
            "Basically position, so that's the total number of bits that you are going to use."
        ],
        [
            "So not return the.",
            "Problem we turned the problem of compressing get off to a nice intuitive combinatorial problem, right?",
            "So now the natural question to ask is that how hard it is to compute MPK linearizations?",
            "Let's start with the simplest case, which is the MP one innovation.",
            "The good news is that it's actually intractable to compute MP one iteration.",
            "The following algorithm basically do that.",
            "It's a simple algorithm you have to.",
            "You have to just start with a node with Decker.",
            "Odd and from that note choose an edge which is not a cut.",
            "Unless you have no other choice, remove actress the edge, remove the edge, do that again.",
            "Until you get to know that it doesn't have any other edges to choose, so you can start from another node.",
            "Without Digi again and do the same thing so.",
            "After you finish after the hole after recovered all the edges."
        ],
        [
            "Then basically you partition the edges of the graph to some.",
            "As disjoint passes and it is, you can prove that this is the optimal MP one users for those of.",
            "For those of you who are familiar with already on the notion of Oregon Tour or Lionpath.",
            "This is basically a slightly modified version of finding this algorithm, basically.",
            "Writing modified version of the algorithm finds Olean Pass.",
            "So you can prove that the length of an optimal MP modernization is the number of edges plus the number of nodes with degree art over 2, and it can be implemented in linear time to the number of edges.",
            "Thought.",
            "Not now that we have a."
        ],
        [
            "Now that we can compute them vandalization, if you plug this MP modernization into into our framework then you get.",
            "An upper bound on the number of bits on the beats per edge rate.",
            "In this author bound D Basically is the average degree of the graph.",
            "So this should be a small number, not very small something between 10 up to 30 maybe or 100?",
            "Depends on the graph.",
            "So and it has to be compared by with two log V which is the bit rates bits per edge rates for educationalists representation of the graph and assuming having some assumption on average degree of the graph, it's asymptotically.",
            "It's almost half of the.",
            "We do almost twice better.",
            "And they could enable an audible query.",
            "Time is also it's sub linear in the.",
            "In the size of the graph.",
            "So.",
            "It's."
        ],
        [
            "OK.",
            "So everyone is perfect.",
            "How about MP two nization?",
            "The fact is that we don't know how hard it is.",
            "We cannot prove anything, but it should be hard to feel the feeling is that it's hard, however, for NPC linearizations, when K is the NK is part of the input.",
            "You can.",
            "It's basically the generalization of mean bandwidth problem and it's NP hard.",
            "And if you don't know what is mean bandwidth problem, just think of it as a mean, mean.",
            "MPK, linear is linear relation with the restriction that each node has to appear only once.",
            "And the goal is to find the best K. So."
        ],
        [
            "So now that we cannot compute and pick a limitation, we use just the simple greedy algorithm will start with a random notes and add it to the list.",
            "Then for finding the next node, we look at the node that has the most number of edges between.",
            "That has the most number of edges to the last K node in the list.",
            "Remove those edges and add the node to the list.",
            "And we do it until there is no edge in the left in the graph, so you can see that.",
            "The graph gets it's Parson's parser and having the same value for care all through the algorithm doesn't make sense, so we use a threshold to just to reduce the value of K towards the end of the algorithm."
        ],
        [
            "And.",
            "Experimental user, so the comparison rates.",
            "Here we run the experiment for a variety of different networks.",
            "Collaboration Network, Friendship Network peer to Peer Network and many different things.",
            "I just mentioned a few things here so.",
            "I I took the best performance that we had, one of the average and the words so you can see for for the worst performance on the beats per edge beats per edge rate increasing Kerry doesn't is not beneficial and it actually gets worse for the best you can see the increasing K up to maybe 7 eight is.",
            "Beneficial?",
            "And with respect to the and, I'd like to mention that.",
            "Our framework is able to capture the locality of the graph, so if the graph has high clustering coefficient, then or algorithm or framework to do better, which is intuitive and for query time also the adjective security is compatible with the representation of the graph.",
            "But for neighborhood query you can see that it's sometimes almost 100 times worse, but I have to take the responsibility for that.",
            "If I did a better job on the implementation, these numbers would be much better at this one order of magnitude I guess.",
            "So.",
            "And yeah, for the comparison."
        ],
        [
            "We shared one data set with the previous work on this problem.",
            "And.",
            "Yeah, we we all this likely do better on the on that data set.",
            "While we can answer two types of query instead of.",
            "Run.",
            "So.",
            "In some sense we are doing twice better than this.",
            "Anne."
        ],
        [
            "The conclusion, so we introduce a framework.",
            "For representing your office new frameworks.",
            "Orphan works comes with an upper bound on the beats per edge rate.",
            "And then.",
            "Are all methods can answer more types of queries?",
            "And the nice things about the framework is that it reduces the problem to a nice intuitive combinatorial problem.",
            "And for the future works, I think finding a smarter algorithm for linearizing graph is essential and then.",
            "I believe also that the OR framework is flexible enough so that you can use other types of other techniques of competition on top of it.",
            "And your hardness results for NPC nization."
        ],
        [
            "Case fixed is also interesting and thank you.",
            "What is?",
            "Oh yeah, this is the fraction of close to angles.",
            "So is clustering coefficients, so it represent their locality of the graph.",
            "It doesn't have any locality at all.",
            "I'm not sure.",
            "We cannot allow.",
            "Maybe?",
            "Thanks.",
            "I read it right, yeah?",
            "So I didn't mention it here because there wasn't enough time.",
            "So it is something like 910.",
            "Yeah, we can talk later if you.",
            "The yeah the question is how?",
            "How does or or or or algorithm works on web graphs, right?",
            "So the answer is that it.",
            "It's something between 4.",
            "Four I tried that algorithm for two types of web graphs.",
            "Google Google worker off I guess, and Stanford the cut off I believe so and.",
            "The conversion rate is something between 9 up to 11."
        ]
    ],
    "summarization": {
        "clip_0": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So my name is Hussein Maserati and I'm a PhD student.",
                    "label": 0
                },
                {
                    "sent": "This is a joint work with Jumpei.",
                    "label": 0
                },
                {
                    "sent": "And my talk is on compression of social networks.",
                    "label": 1
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_1": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "First time.",
                    "label": 0
                },
                {
                    "sent": "We're going to talk a little bit about the background.",
                    "label": 0
                },
                {
                    "sent": "Then I'm going to introduce the framework and the idea behind it.",
                    "label": 0
                },
                {
                    "sent": "Then I formalize the.",
                    "label": 0
                },
                {
                    "sent": "The idea, and finally, I'll conclude with the experiments experimental results.",
                    "label": 1
                },
                {
                    "sent": "Yeah, it should go away.",
                    "label": 0
                },
                {
                    "sent": "So motivation the real world networks are huge and we need.",
                    "label": 0
                }
            ]
        },
        "clip_2": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "In most in many cases we need the company to compress them to fit in the memory.",
                    "label": 0
                },
                {
                    "sent": "Also, I'd like to mention that in the distributed computing platform also the competition is useful because we can we can process a larger portion of your offer computer and therefore it uses the communication cost, which is the main barrier in the.",
                    "label": 0
                },
                {
                    "sent": "In their distributed computing, and also with respect to the queries, we like to be able to.",
                    "label": 1
                },
                {
                    "sent": "Answer As many as.",
                    "label": 0
                },
                {
                    "sent": "Many as different types of query on the compass graph.",
                    "label": 1
                },
                {
                    "sent": "So.",
                    "label": 0
                }
            ]
        },
        "clip_3": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So this is the best that I could do for to motivate you.",
                    "label": 0
                },
                {
                    "sent": "And if you are not motivated yet, I can do a little bit of cheating.",
                    "label": 0
                },
                {
                    "sent": "And yeah.",
                    "label": 0
                }
            ]
        },
        "clip_4": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "Existing approaches.",
                    "label": 0
                },
                {
                    "sent": "This problem is very studied on the vector of.",
                    "label": 0
                },
                {
                    "sent": "In particular if the framework that is introduced by boldly and ignore compresses.",
                    "label": 0
                },
                {
                    "sent": "Yeah, sorry.",
                    "label": 0
                },
                {
                    "sent": "The the.",
                    "label": 0
                },
                {
                    "sent": "The framework that is introduced by Baldeon vikna compresses the web graphs down to almost 2 bit spirit, which is quite interesting, surprising.",
                    "label": 1
                },
                {
                    "sent": "And this domain observation in the in there for work is that a large percentage of links are intra domain.",
                    "label": 1
                },
                {
                    "sent": "So if you sort the web pages by the URL, then for any edge for any node, most of the out links of that node tends to be closed very close to each other.",
                    "label": 1
                },
                {
                    "sent": "And then for any node, if you look at the list of list of out links of the node and if you look at the gaps between these out links.",
                    "label": 0
                },
                {
                    "sent": "They would be very small.",
                    "label": 0
                },
                {
                    "sent": "And then you can use a family of code which is designed to encode the small numbers efficiently.",
                    "label": 0
                },
                {
                    "sent": "To get the compilation.",
                    "label": 0
                },
                {
                    "sent": "But this framework is despair.",
                    "label": 0
                }
            ]
        },
        "clip_5": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Work is quite well on web graphs.",
                    "label": 0
                },
                {
                    "sent": "It is.",
                    "label": 0
                },
                {
                    "sent": "It works well on web graph it when it comes to the other types of social network like friendship networks then.",
                    "label": 0
                },
                {
                    "sent": "Is not effective anymore, so in particular the work of charity at all.",
                    "label": 1
                },
                {
                    "sent": "In last security, use the same framework instead, only the only difference is that because there is no natural ordering ordering on the nodes of the graph, they used single ordering to basically.",
                    "label": 1
                },
                {
                    "sent": "But they use a single ordering to arrange the notes.",
                    "label": 0
                },
                {
                    "sent": "And but but this doesn't work well on the financial network.",
                    "label": 0
                },
                {
                    "sent": "It's almost.",
                    "label": 0
                },
                {
                    "sent": "It's something like between 10 up to 15 bits per edge.",
                    "label": 0
                },
                {
                    "sent": "The performance of this.",
                    "label": 0
                },
                {
                    "sent": "So this suggests that this motivates us to look for other types of framework.",
                    "label": 0
                },
                {
                    "sent": "For.",
                    "label": 0
                },
                {
                    "sent": "For other real world networks.",
                    "label": 0
                },
                {
                    "sent": "Next I'm trying I'm.",
                    "label": 0
                }
            ]
        },
        "clip_6": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "I'm talking about two observation and.",
                    "label": 0
                },
                {
                    "sent": "Try to motivate our framework and explain the idea behind offering.",
                    "label": 0
                },
                {
                    "sent": "The first observation is that if you look at the cluster of random graphs on North vertices is where each possible edges included the graph with probability of half.",
                    "label": 1
                },
                {
                    "sent": "The best that you can do for this class of graphs is to use N to the power of 2 bits.",
                    "label": 0
                },
                {
                    "sent": "Using an entropy based argument you can prove that basically.",
                    "label": 0
                },
                {
                    "sent": "And this means that this means.",
                    "label": 1
                },
                {
                    "sent": "Check and see Matrix is the best representation for this class of graphs, so the message is that, roughly speaking, for dense random graph.",
                    "label": 1
                },
                {
                    "sent": "This is the best judge can do.",
                    "label": 0
                }
            ]
        },
        "clip_7": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We can have the same observation for RJC list representation.",
                    "label": 0
                },
                {
                    "sent": "Again, there is another class of random graph on N vertices where each each node has only one outgoing edge, and.",
                    "label": 1
                },
                {
                    "sent": "The definition of that age is picked uniformly at random for this class offers, you have to use N log N bits and therefore the.",
                    "label": 1
                }
            ]
        },
        "clip_8": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "I think it is optimal so for a sparse graph you cannot do better than education.",
                    "label": 0
                },
                {
                    "sent": "No, what we do know about the social network for social networks.",
                    "label": 0
                },
                {
                    "sent": "We know that there are local agents and our globally sparse.",
                    "label": 0
                },
                {
                    "sent": "So the question is, can we effectively somehow combine these two methods, adjectives, matrix and adjacency list to get a compression scheme out of it?",
                    "label": 1
                },
                {
                    "sent": "So the big idea, the general idea here is for local edges you suggesting symmetric Sanford global connections?",
                    "label": 0
                },
                {
                    "sent": "Just pointers, but this is very vague because we don't know what does that mean.",
                    "label": 0
                },
                {
                    "sent": "Local edge or global?",
                    "label": 0
                },
                {
                    "sent": "The next I'm trying to basically.",
                    "label": 0
                }
            ]
        },
        "clip_9": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Verify.",
                    "label": 0
                },
                {
                    "sent": "This.",
                    "label": 0
                },
                {
                    "sent": "So let's start with a very simple graph.",
                    "label": 1
                },
                {
                    "sent": "We are given a graph and an arrangement of.",
                    "label": 0
                },
                {
                    "sent": "The nodes are also given, so we know they get off and the arrangement of God.",
                    "label": 0
                },
                {
                    "sent": "You can, you know you can see that all the edges here are very local in the sense that they are connecting two nodes next to each other.",
                    "label": 1
                },
                {
                    "sent": "So if this is the case, then it's easy.",
                    "label": 0
                },
                {
                    "sent": "We can use 2 bits for.",
                    "label": 0
                }
            ]
        },
        "clip_10": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We can use 2 bits further North.",
                    "label": 0
                },
                {
                    "sent": "And represent the edges of the graph, right?",
                    "label": 0
                },
                {
                    "sent": "So, given the knowledge that all the edges are local, we can have a very efficient a schema to represent the graph.",
                    "label": 1
                }
            ]
        },
        "clip_11": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "But in real world there the real work graphs are more complicated.",
                    "label": 0
                },
                {
                    "sent": "Let's consider another graph.",
                    "label": 0
                },
                {
                    "sent": "In this graph, there is no arrangement of notes that in which all the edges are local, right?",
                    "label": 1
                },
                {
                    "sent": "What we can do is that is that we can relax the requirement a little bit.",
                    "label": 1
                },
                {
                    "sent": "We can let the nodes appear more than once.",
                    "label": 0
                },
                {
                    "sent": "So with this relaxation we can come up always.",
                    "label": 0
                },
                {
                    "sent": "We can come up with an arrangement of nodes that all the edges are local in that in that arrangement in Part 4.",
                    "label": 0
                }
            ]
        },
        "clip_12": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "This sequence of nodes in this sequence of nodes are the edges are local, meaning that every edge.",
                    "label": 1
                },
                {
                    "sent": "Somewhere connecting somewhere in this list connecting two nodes close to each other.",
                    "label": 0
                },
                {
                    "sent": "Next to each other, right?",
                    "label": 0
                },
                {
                    "sent": "So again, you can do the same.",
                    "label": 0
                }
            ]
        },
        "clip_13": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We can use 2 bits for.",
                    "label": 0
                },
                {
                    "sent": "Position I have to stay here because the each position is not exactly or not.",
                    "label": 0
                },
                {
                    "sent": "It is a copy of note.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "But in this case there is.",
                    "label": 1
                },
                {
                    "sent": "It's not enough to just have a sequence of zeros and ones, we need more we need.",
                    "label": 0
                }
            ]
        },
        "clip_14": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We basically use pointers for each position.",
                    "label": 1
                },
                {
                    "sent": "We use a pointer to to point to the next copy of the same node.",
                    "label": 0
                },
                {
                    "sent": "So each node of the graph here is corresponding to a cycle.",
                    "label": 0
                },
                {
                    "sent": "And you don't.",
                    "label": 0
                },
                {
                    "sent": "You shouldn't be worried about the idea of the note.",
                    "label": 0
                },
                {
                    "sent": "We can use the index of the first appearances of the note.",
                    "label": 1
                },
                {
                    "sent": "As as its ID.",
                    "label": 0
                },
                {
                    "sent": "And.",
                    "label": 1
                },
                {
                    "sent": "And we can extend the idea by using more bits per position.",
                    "label": 0
                },
                {
                    "sent": "If we use 2K bits per position, we are able to.",
                    "label": 0
                },
                {
                    "sent": "Are able to encode more edges per position and as a result the length of the linearisation might be smaller.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "So now.",
                    "label": 0
                }
            ]
        },
        "clip_15": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "I'm trying to formalize this idea.",
                    "label": 0
                },
                {
                    "sent": "Given a sequence of notes, we define this distance between two nodes.",
                    "label": 0
                },
                {
                    "sent": "The minimum distance among all pairs of appearances of those two.",
                    "label": 1
                },
                {
                    "sent": "Not so, for example V2 and V3, they have distance 3, two and one.",
                    "label": 0
                },
                {
                    "sent": "We simply just pick one as the distance of these two nodes.",
                    "label": 0
                }
            ]
        },
        "clip_16": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And using that we define NPC limitation of graph G as a sequences of verticies in which all the edges.",
                    "label": 0
                },
                {
                    "sent": "All the endpoints of edges, basically for all edges, then the endpoint of that edge have distance less than or equal K.",
                    "label": 0
                }
            ]
        },
        "clip_17": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "You already seen that you already see that this sequence is empty is an empty one linear relation of the girl?",
                    "label": 0
                }
            ]
        },
        "clip_18": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "So the original arrangement of the nodes is in that MP two linearizations because each edges each edge in the graph is connecting two nodes with distance at most 2.",
                    "label": 0
                },
                {
                    "sent": "So, So what is this NPC in relation is good for?",
                    "label": 0
                },
                {
                    "sent": "If you have an.",
                    "label": 0
                }
            ]
        },
        "clip_19": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Application isation of get off.",
                    "label": 0
                },
                {
                    "sent": "Then we can use 2K bits.",
                    "label": 0
                },
                {
                    "sent": "For each position in court, the whole graph and that would cover all the edges.",
                    "label": 0
                },
                {
                    "sent": "Because we have this requirement of here.",
                    "label": 0
                },
                {
                    "sent": "Right?",
                    "label": 0
                },
                {
                    "sent": "So because for each position you have to keep two karabits colossal pointer.",
                    "label": 0
                },
                {
                    "sent": "And there are those.",
                    "label": 0
                },
                {
                    "sent": "There are those many number of.",
                    "label": 0
                },
                {
                    "sent": "Basically position, so that's the total number of bits that you are going to use.",
                    "label": 0
                }
            ]
        },
        "clip_20": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So not return the.",
                    "label": 0
                },
                {
                    "sent": "Problem we turned the problem of compressing get off to a nice intuitive combinatorial problem, right?",
                    "label": 0
                },
                {
                    "sent": "So now the natural question to ask is that how hard it is to compute MPK linearizations?",
                    "label": 0
                },
                {
                    "sent": "Let's start with the simplest case, which is the MP one innovation.",
                    "label": 0
                },
                {
                    "sent": "The good news is that it's actually intractable to compute MP one iteration.",
                    "label": 0
                },
                {
                    "sent": "The following algorithm basically do that.",
                    "label": 0
                },
                {
                    "sent": "It's a simple algorithm you have to.",
                    "label": 0
                },
                {
                    "sent": "You have to just start with a node with Decker.",
                    "label": 1
                },
                {
                    "sent": "Odd and from that note choose an edge which is not a cut.",
                    "label": 1
                },
                {
                    "sent": "Unless you have no other choice, remove actress the edge, remove the edge, do that again.",
                    "label": 0
                },
                {
                    "sent": "Until you get to know that it doesn't have any other edges to choose, so you can start from another node.",
                    "label": 0
                },
                {
                    "sent": "Without Digi again and do the same thing so.",
                    "label": 0
                },
                {
                    "sent": "After you finish after the hole after recovered all the edges.",
                    "label": 0
                }
            ]
        },
        "clip_21": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Then basically you partition the edges of the graph to some.",
                    "label": 0
                },
                {
                    "sent": "As disjoint passes and it is, you can prove that this is the optimal MP one users for those of.",
                    "label": 0
                },
                {
                    "sent": "For those of you who are familiar with already on the notion of Oregon Tour or Lionpath.",
                    "label": 0
                },
                {
                    "sent": "This is basically a slightly modified version of finding this algorithm, basically.",
                    "label": 0
                },
                {
                    "sent": "Writing modified version of the algorithm finds Olean Pass.",
                    "label": 0
                },
                {
                    "sent": "So you can prove that the length of an optimal MP modernization is the number of edges plus the number of nodes with degree art over 2, and it can be implemented in linear time to the number of edges.",
                    "label": 1
                },
                {
                    "sent": "Thought.",
                    "label": 0
                },
                {
                    "sent": "Not now that we have a.",
                    "label": 0
                }
            ]
        },
        "clip_22": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "Now that we can compute them vandalization, if you plug this MP modernization into into our framework then you get.",
                    "label": 0
                },
                {
                    "sent": "An upper bound on the number of bits on the beats per edge rate.",
                    "label": 0
                },
                {
                    "sent": "In this author bound D Basically is the average degree of the graph.",
                    "label": 0
                },
                {
                    "sent": "So this should be a small number, not very small something between 10 up to 30 maybe or 100?",
                    "label": 0
                },
                {
                    "sent": "Depends on the graph.",
                    "label": 0
                },
                {
                    "sent": "So and it has to be compared by with two log V which is the bit rates bits per edge rates for educationalists representation of the graph and assuming having some assumption on average degree of the graph, it's asymptotically.",
                    "label": 1
                },
                {
                    "sent": "It's almost half of the.",
                    "label": 0
                },
                {
                    "sent": "We do almost twice better.",
                    "label": 0
                },
                {
                    "sent": "And they could enable an audible query.",
                    "label": 0
                },
                {
                    "sent": "Time is also it's sub linear in the.",
                    "label": 0
                },
                {
                    "sent": "In the size of the graph.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "It's.",
                    "label": 0
                }
            ]
        },
        "clip_23": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "OK.",
                    "label": 0
                },
                {
                    "sent": "So everyone is perfect.",
                    "label": 0
                },
                {
                    "sent": "How about MP two nization?",
                    "label": 0
                },
                {
                    "sent": "The fact is that we don't know how hard it is.",
                    "label": 1
                },
                {
                    "sent": "We cannot prove anything, but it should be hard to feel the feeling is that it's hard, however, for NPC linearizations, when K is the NK is part of the input.",
                    "label": 1
                },
                {
                    "sent": "You can.",
                    "label": 0
                },
                {
                    "sent": "It's basically the generalization of mean bandwidth problem and it's NP hard.",
                    "label": 0
                },
                {
                    "sent": "And if you don't know what is mean bandwidth problem, just think of it as a mean, mean.",
                    "label": 0
                },
                {
                    "sent": "MPK, linear is linear relation with the restriction that each node has to appear only once.",
                    "label": 0
                },
                {
                    "sent": "And the goal is to find the best K. So.",
                    "label": 0
                }
            ]
        },
        "clip_24": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "So now that we cannot compute and pick a limitation, we use just the simple greedy algorithm will start with a random notes and add it to the list.",
                    "label": 1
                },
                {
                    "sent": "Then for finding the next node, we look at the node that has the most number of edges between.",
                    "label": 0
                },
                {
                    "sent": "That has the most number of edges to the last K node in the list.",
                    "label": 1
                },
                {
                    "sent": "Remove those edges and add the node to the list.",
                    "label": 0
                },
                {
                    "sent": "And we do it until there is no edge in the left in the graph, so you can see that.",
                    "label": 1
                },
                {
                    "sent": "The graph gets it's Parson's parser and having the same value for care all through the algorithm doesn't make sense, so we use a threshold to just to reduce the value of K towards the end of the algorithm.",
                    "label": 0
                }
            ]
        },
        "clip_25": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "Experimental user, so the comparison rates.",
                    "label": 0
                },
                {
                    "sent": "Here we run the experiment for a variety of different networks.",
                    "label": 0
                },
                {
                    "sent": "Collaboration Network, Friendship Network peer to Peer Network and many different things.",
                    "label": 0
                },
                {
                    "sent": "I just mentioned a few things here so.",
                    "label": 0
                },
                {
                    "sent": "I I took the best performance that we had, one of the average and the words so you can see for for the worst performance on the beats per edge beats per edge rate increasing Kerry doesn't is not beneficial and it actually gets worse for the best you can see the increasing K up to maybe 7 eight is.",
                    "label": 0
                },
                {
                    "sent": "Beneficial?",
                    "label": 0
                },
                {
                    "sent": "And with respect to the and, I'd like to mention that.",
                    "label": 0
                },
                {
                    "sent": "Our framework is able to capture the locality of the graph, so if the graph has high clustering coefficient, then or algorithm or framework to do better, which is intuitive and for query time also the adjective security is compatible with the representation of the graph.",
                    "label": 0
                },
                {
                    "sent": "But for neighborhood query you can see that it's sometimes almost 100 times worse, but I have to take the responsibility for that.",
                    "label": 0
                },
                {
                    "sent": "If I did a better job on the implementation, these numbers would be much better at this one order of magnitude I guess.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "And yeah, for the comparison.",
                    "label": 0
                }
            ]
        },
        "clip_26": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "We shared one data set with the previous work on this problem.",
                    "label": 1
                },
                {
                    "sent": "And.",
                    "label": 0
                },
                {
                    "sent": "Yeah, we we all this likely do better on the on that data set.",
                    "label": 0
                },
                {
                    "sent": "While we can answer two types of query instead of.",
                    "label": 1
                },
                {
                    "sent": "Run.",
                    "label": 0
                },
                {
                    "sent": "So.",
                    "label": 0
                },
                {
                    "sent": "In some sense we are doing twice better than this.",
                    "label": 0
                },
                {
                    "sent": "Anne.",
                    "label": 0
                }
            ]
        },
        "clip_27": {
            "is_summarization_sample": true,
            "summarization_data": [
                {
                    "sent": "The conclusion, so we introduce a framework.",
                    "label": 1
                },
                {
                    "sent": "For representing your office new frameworks.",
                    "label": 0
                },
                {
                    "sent": "Orphan works comes with an upper bound on the beats per edge rate.",
                    "label": 1
                },
                {
                    "sent": "And then.",
                    "label": 1
                },
                {
                    "sent": "Are all methods can answer more types of queries?",
                    "label": 1
                },
                {
                    "sent": "And the nice things about the framework is that it reduces the problem to a nice intuitive combinatorial problem.",
                    "label": 0
                },
                {
                    "sent": "And for the future works, I think finding a smarter algorithm for linearizing graph is essential and then.",
                    "label": 0
                },
                {
                    "sent": "I believe also that the OR framework is flexible enough so that you can use other types of other techniques of competition on top of it.",
                    "label": 0
                },
                {
                    "sent": "And your hardness results for NPC nization.",
                    "label": 0
                }
            ]
        },
        "clip_28": {
            "is_summarization_sample": false,
            "summarization_data": [
                {
                    "sent": "Case fixed is also interesting and thank you.",
                    "label": 0
                },
                {
                    "sent": "What is?",
                    "label": 0
                },
                {
                    "sent": "Oh yeah, this is the fraction of close to angles.",
                    "label": 0
                },
                {
                    "sent": "So is clustering coefficients, so it represent their locality of the graph.",
                    "label": 0
                },
                {
                    "sent": "It doesn't have any locality at all.",
                    "label": 0
                },
                {
                    "sent": "I'm not sure.",
                    "label": 0
                },
                {
                    "sent": "We cannot allow.",
                    "label": 0
                },
                {
                    "sent": "Maybe?",
                    "label": 0
                },
                {
                    "sent": "Thanks.",
                    "label": 0
                },
                {
                    "sent": "I read it right, yeah?",
                    "label": 0
                },
                {
                    "sent": "So I didn't mention it here because there wasn't enough time.",
                    "label": 0
                },
                {
                    "sent": "So it is something like 910.",
                    "label": 0
                },
                {
                    "sent": "Yeah, we can talk later if you.",
                    "label": 0
                },
                {
                    "sent": "The yeah the question is how?",
                    "label": 0
                },
                {
                    "sent": "How does or or or or algorithm works on web graphs, right?",
                    "label": 0
                },
                {
                    "sent": "So the answer is that it.",
                    "label": 0
                },
                {
                    "sent": "It's something between 4.",
                    "label": 0
                },
                {
                    "sent": "Four I tried that algorithm for two types of web graphs.",
                    "label": 0
                },
                {
                    "sent": "Google Google worker off I guess, and Stanford the cut off I believe so and.",
                    "label": 0
                },
                {
                    "sent": "The conversion rate is something between 9 up to 11.",
                    "label": 0
                }
            ]
        }
    }
}